movie 'quat.swf' compressed // flash 8, total frames: 1, frame rate: 20 fps, 1x1 px


  defineMovieClip 8 // total frames: 7
  end // of defineMovieClip 8

  defineMovieClip 9 // total frames: 2

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 9
  
  exportAssets
    9 as 'flare'
  end // of exportAssets

  defineMovieClip 13 // total frames: 1
  end // of defineMovieClip 13

  defineMovieClip 14 // total frames: 10
  end // of defineMovieClip 14

  defineMovieClip 16 // total frames: 1
  end // of defineMovieClip 16

  defineMovieClip 17 // total frames: 2

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 17

  defineMovieClip 23 // total frames: 1
  end // of defineMovieClip 23

  defineMovieClip 27 // total frames: 1
  end // of defineMovieClip 27

  defineMovieClip 30 // total frames: 28

    frame 0
      stop
    end // of frame 0

    frame 2
    end // of frame 2
  end // of defineMovieClip 30

  defineMovieClip 32 // total frames: 1

    frame 0
      constants '+', ''  
      push '+', 10
      random
      varEquals
      push '', 10, '+'
      getVariable
      setProperty
    end // of frame 0
  end // of defineMovieClip 32

  defineMovieClip 37 // total frames: 1
  end // of defineMovieClip 37

  defineMovieClip 41 // total frames: 1
  end // of defineMovieClip 41

  defineMovieClip 42 // total frames: 28

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 42

  defineMovieClip 44 // total frames: 1

    frame 0
      constants '+', ''  
      push '+', 10
      random
      varEquals
      push '', 10, '+'
      getVariable
      setProperty
    end // of frame 0
  end // of defineMovieClip 44

  defineMovieClip 45 // total frames: 12
  end // of defineMovieClip 45
  
  exportAssets
    45 as 'pion'
  end // of exportAssets

  defineMovieClip 48 // total frames: 1
  end // of defineMovieClip 48
  
  exportAssets
    48 as 'bg'
  end // of exportAssets

  defineMovieClip 51 // total frames: 1
  end // of defineMovieClip 51

  defineMovieClip 52 // total frames: 1
  end // of defineMovieClip 52
  
  exportAssets
    52 as 'web'
  end // of exportAssets

  defineMovieClip 55 // total frames: 1
  end // of defineMovieClip 55

  defineMovieClip 56 // total frames: 1
  end // of defineMovieClip 56
  
  exportAssets
    56 as 'plan2'
  end // of exportAssets

  defineMovieClip 59 // total frames: 1
  end // of defineMovieClip 59

  defineMovieClip 60 // total frames: 1
  end // of defineMovieClip 60
  
  exportAssets
    60 as 'plan1'
  end // of exportAssets

  frame 0
    constants ')PVyX', '-g', '[8X6+', '7]AJ', '__string_rec', 'Object', '_global', 'flash', '}ZF-m', 'display', '_MovieClip', '9K', 'text', 'text', '3[4k{', 'filters', '=(,aA', '__name__', 'prototype', '__class__', '0000', 'geom', '-UHXC', '9]A', '2KA', '1ll a', '7Y-7', 'haxe', '{-kxL', '(K', '*B', 'run', 'setInterval', '+TOS,(', ']', '5U4B', 'stop', '-', '0{lc4', '-_d +', 'push', 'shift', '7MX}5', '1ni', '6{1o=(', 'clearInterval', '0vWVG', '+-(0', ',q(', 'Array', '9oK', '0(', ']iWA=(', '2Z4i*', '{02X', '8I56', '9I56', '*j 6', '+j 6', '}K5KI(', ';_4,,', '((', ')(', '994N=(', '{u', '=X54', '{GisG', '4', '7', '1', '-Ppj[', '{2', '}2', ',Ppj[', '7NJ', '0 ybJ', '__ename__', '__constructs__', 'POther', 'PMine', 'PNeutral', '__enum__', 'toString', '}J', ' k)h]', 'pion', ']}lAm', '*=_p_', '5qt3+', 'gotoAndStop', '(j;o7', '46X6+', '1U;0', ')0o(b', 'GlowFilter', 'flare', '_alpha', '5W_C2', '0POpX', ']6=8H(', '(As7K', '9P-r', 'remove', '0;*y6(', '0tJ', 'play', '_x', '-Wa[', '_y', '87vE7(', '-V;B', 'Math', 'pow', 'abs', '3]v4n', 'blurX', 'blurY', 'sin', 'PI', '_rotation', '=qpLa', '_visible', '[Zk', 'Set', 'Init', '-5;Q', ']1t', '44{N', '-iB=', ' CgyI', '+7U K', '58rO6', '18wU*', ';+', 'bg', '4]ms3', 'plan1', '5]ms3', 'plan2', '+JP', 'web', '+Y', ',Y', '=HU11', '8+C5', '0D 6', '}-VbH', '5nwDR', '1=hnJ(', '__interfaces__', '7Pm20(', '4zkrA(', '8q0', ';6aj0(', '_xmouse', '_ymouse', '+Q}B]', ',qE', 'length', 'splice', '4AF', '3Wt', '9n6', 'atan2', '6*62}', '', '+*[ W', '4[K{k', '<b>Attention !</b>', '+oD9l', '0UN5I', 'onRelease', '24{{7(', '+4Z+[', '+Du}V', '4fHu{', '4mok0', '08M8', '8Z[e,(', '7T4cF(', 'random', ';ptpb', 'this', '__init', '__res', 'MovieClip', 'TextField', 'StyleSheet', '__eval', 'TextFormat', 'Stage', 'TextSnapshot', '__exc'  
    push ')PVyX'
    function2 () (r:1='this')
      push '-g', r:this, 2, '[8X6+'
      getVariable
      push '7]AJ'
      getMember
      push '__string_rec'
      callMethod
      return
    end // of function 

    setVariable
    push '[8X6+', 0, 'Object'
    new
    setRegister r:1
    setVariable
    push '_global'
    getVariable
    push 'flash'
    getMember
    setRegister r:2
    enumerateValue
   label1:
    setRegister r:0
    push NULL
    equals
    branchIfTrue label2
    push r:1, r:0, r:2, r:0
    getMember
    setMember
    branch label1
   label2:
    pop
    push '[8X6+'
    getVariable
    push '}ZF-m', 0, 'Object'
    new
    setRegister r:1
    setMember
    push '_global'
    getVariable
    push 'flash'
    getMember
    push 'display'
    getMember
    setRegister r:2
    enumerateValue
   label3:
    setRegister r:0
    push NULL
    equals
    branchIfTrue label4
    push r:1, r:0, r:2, r:0
    getMember
    setMember
    branch label3
   label4:
    pop
    push '[8X6+'
    getVariable
    push '_MovieClip', 0, 'Object'
    new
    setRegister r:1
    setMember
    push '_global'
    getVariable
    push 'flash'
    getMember
    push '_MovieClip'
    getMember
    setRegister r:2
    enumerateValue
   label5:
    setRegister r:0
    push NULL
    equals
    branchIfTrue label6
    push r:1, r:0, r:2, r:0
    getMember
    setMember
    branch label5
   label6:
    pop
    push '9K', 0, 'Object'
    new
    setRegister r:1
    setVariable
    push '_global'
    getVariable
    push '9K'
    getMember
    setRegister r:2
    enumerateValue
   label7:
    setRegister r:0
    push NULL
    equals
    branchIfTrue label8
    push r:1, r:0, r:2, r:0
    getMember
    setMember
    branch label7
   label8:
    pop
    push '[8X6+'
    getVariable
    push 'text', 0, 'Object'
    new
    setRegister r:1
    setMember
    push '_global'
    getVariable
    push 'flash'
    getMember
    push 'text'
    getMember
    setRegister r:2
    enumerateValue
   label9:
    setRegister r:0
    push NULL
    equals
    branchIfTrue label10
    push r:1, r:0, r:2, r:0
    getMember
    setMember
    branch label9
   label10:
    pop
    push '[8X6+'
    getVariable
    push '3[4k{', 0, 'Object'
    new
    setRegister r:1
    setMember
    push '_global'
    getVariable
    push 'flash'
    getMember
    push 'filters'
    getMember
    setRegister r:2
    enumerateValue
   label11:
    setRegister r:0
    push NULL
    equals
    branchIfTrue label12
    push r:1, r:0, r:2, r:0
    getMember
    setMember
    branch label11
   label12:
    pop
    push '=(,aA'
    function2 () (r:1='this', r:2='super')
    end // of function 

    setRegister r:0
    setVariable
    push r:0, '__name__', '=(,aA', 1
    initArray
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '__class__', r:0
    setMember
    push '[8X6+'
    getVariable
    push '0000', 0, 'Object'
    new
    setRegister r:1
    setMember
    push '_global'
    getVariable
    push 'flash'
    getMember
    push 'geom'
    getMember
    setRegister r:2
    enumerateValue
   label13:
    setRegister r:0
    push NULL
    equals
    branchIfTrue label14
    push r:1, r:0, r:2, r:0
    getMember
    setMember
    branch label13
   label14:
    pop
    push '-UHXC'
    function2 (r:2='', r:3='') (r:1='this')
      push r:this, '9]A', r:2
      setMember
      push r:this, '2KA', r:3
      setMember
    end // of function 

    setRegister r:0
    setVariable
    push r:0, '__name__', '-UHXC', 1
    initArray
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '__class__', r:0
    setMember
    push r:1, '1ll a'
    function2 () (r:1='this')
      push r:this, '9]A'
      getMember
      push r:this, '2KA'
      getMember
      lessThan
      return
    end // of function 

    setMember
    push r:1, '2KA', NULL
    setMember
    push r:1, '9]A', NULL
    setMember
    push r:1, '7Y-7'
    function2 () (r:1='this')
      push r:this, '9]A'
      getMember
      push r:this, '9]A', r:this, '9]A'
      getMember
      increment
      setMember
      return
    end // of function 

    setMember
    push 'haxe', 0, 'Object'
    new
    setRegister r:1
    setVariable
    push '_global'
    getVariable
    push 'haxe'
    getMember
    setRegister r:2
    enumerateValue
   label15:
    setRegister r:0
    push NULL
    equals
    branchIfTrue label16
    push r:1, r:0, r:2, r:0
    getMember
    setMember
    branch label15
   label16:
    pop
    push 'haxe'
    getVariable
    push '{-kxL'
    function2 (r:2='') (r:1='this')
      push '(K', r:this
      varEquals
      push r:this, '*B', r:2
      function2 () (r:1='this')
        push 0, '(K'
        getVariable
        push 'run'
        callMethod
        pop
      end // of function 

      push 2, '_global'
      getVariable
      push 'setInterval'
      callMethod
      setMember
    end // of function 

    setRegister r:0
    setMember
    push r:0, '__name__', '{-kxL', 'haxe', 2
    initArray
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '__class__', r:0
    setMember
    push r:0, '+TOS,('
    function2 ('-', '5U4B') (r:1='this')
      function2 () (r:1='this')
        push ']', '5U4B'
        getVariable
        push 1, 'haxe'
        getVariable
        push '{-kxL'
        newMethod
        varEquals
        push ']'
        getVariable
        push 'run'
        function2 () (r:1='this')
          push 0, ']'
          getVariable
          push 'stop'
          callMethod
          pop
          push 0, '-'
          callFunction
          pop
        end // of function 

        setMember
      end // of function 

      return
    end // of function 

    setMember
    push r:0, '0{lc4'
    function2 (r:2='', r:3='') (r:1='this')
      push r:2, 1, 'haxe'
      getVariable
      push '{-kxL'
      getMember
      push '-_d +'
      getMember
      push 'push'
      callMethod
      pop
      push 0, r:3, NULL
      equals
      branchIfTrue label17
      push r:3
      branch label18
     label17:
      push 0
     label18:
      function2 () (r:1='this')
        push 0, 0, 'haxe'
        getVariable
        push '{-kxL'
        getMember
        push '-_d +'
        getMember
        push 'shift'
        callMethod
        push UNDEF
        callMethod
        pop
      end // of function 

      push 2, 'haxe'
      getVariable
      push '{-kxL'
      getMember
      push '+TOS,('
      callMethod
      push UNDEF
      callMethod
      pop
    end // of function 

    setMember
    push r:0, '7MX}5'
    function2 () (r:1='this')
      push 0, '[8X6+'
      getVariable
      push '1ni'
      getMember
      push '6{1o=('
      callMethod
      push 1000
      divide
      return
    end // of function 

    setMember
    push r:1, '*B', NULL
    setMember
    push r:1, 'run'
    function2 () (r:1='this')
    end // of function 

    setMember
    push r:1, 'stop'
    function2 () (r:1='this')
      push r:this, '*B'
      getMember
      push NULL
      equals
      not
      branchIfTrue label19
      push UNDEF
      return
     label19:
      push r:this, '*B'
      getMember
      push 1, '_global'
      getVariable
      push 'clearInterval'
      callMethod
      pop
      push r:this, '*B', NULL
      setMember
    end // of function 

    setMember
    push '0vWVG'
    function2 (r:2='') (r:1='this')
      push r:this, '+-(0', r:2
      setMember
      push r:this, ',q(', 0, 'Array'
      new
      setMember
      push r:this, '9oK', 0, 'Array'
      new
      setMember
      push r:this, '9oK'
      getMember
      push '0vWVG'
      getVariable
      push '0('
      getMember
      push 0, 'Array'
      new
      setMember
      push r:this, '9oK'
      getMember
      push '0vWVG'
      getVariable
      push '0('
      getMember
      getMember
      push '0vWVG'
      getVariable
      push '0('
      getMember
      push ']iWA=('
      getVariable
      push '2Z4i*'
      getMember
      push '0vWVG'
      getVariable
      push '0('
      getMember
      push '0vWVG'
      getVariable
      push '0('
      getMember
      push r:this, '+-(0'
      getMember
      push 4, '{02X'
      new
      setMember
      push r:this, '8I56', r:this, '9I56', '0vWVG'
      getVariable
      push '0('
      getMember
      push 3
      subtract
      setRegister r:0
      setMember
      push r:0
      setMember
      push r:this, '*j 6', r:this, '+j 6', '0vWVG'
      getVariable
      push '0('
      getMember
      push 3
      add
      setRegister r:0
      setMember
      push r:0
      setMember
    end // of function 

    setRegister r:0
    setVariable
    push r:0, '__name__', '0vWVG', 1
    initArray
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '__class__', r:0
    setMember
    push r:1, ',q(', NULL
    setMember
    push r:1, '}K5KI('
    function2 (r:2='', r:3='') (r:1='this')
      push r:3, r:2, 2, r:this, ';_4,,'
      callMethod
      setRegister r:4
      pop
      push r:4, '(('
      getMember
      push r:2
      equals
      dup
      not
      branchIfTrue label20
      pop
      push r:4, ')('
      getMember
      push r:3
      equals
     label20:
      return
    end // of function 

    setMember
    push r:1, '994N=('
    function2 () (r:1='this')
      push NULL
      setRegister r:2
      pop
      push 0
      setRegister r:3
      pop
      push '0vWVG'
      getVariable
      push '{u'
      getMember
      setRegister r:4
      pop
     label21:
      push r:3, r:4
      lessThan
      not
      branchIfTrue label32
      push r:3
      setRegister r:5
      pop
      push r:3
      increment
      setRegister r:3
      pop
      push r:this, '9oK'
      getMember
      push r:5
      getMember
      push NULL
      equals
      not
      branchIfTrue label22
      branch label21
     label22:
      push 0
      setRegister r:6
      pop
      push NULL
      setRegister r:7
      pop
      push 0
      setRegister r:8
      pop
      push '0vWVG'
      getVariable
      push '{u'
      getMember
      setRegister r:9
      pop
     label23:
      push r:8, r:9
      lessThan
      not
      branchIfTrue label31
      push r:8
      setRegister r:10
      pop
      push r:8
      increment
      setRegister r:8
      pop
      push r:this, '9oK'
      getMember
      push r:5
      getMember
      push r:10
      getMember
      push '=X54'
      getMember
      setRegister r:11
      pop
      push r:11, r:7
      equals
      branchIfTrue label29
      push r:7, NULL
      equals
      not
      dup
      not
      branchIfTrue label24
      pop
      push r:6, 4
      lessThan
      not
     label24:
      branchIfTrue label27
      push r:6, 3
      equals
      dup
      not
      branchIfTrue label25
      pop
      push r:2, NULL
      equals
      dup
      not
      branchIfTrue label25
      pop
      push r:7, ']iWA=('
      getVariable
      push '{GisG'
      getMember
      equals
      dup
      not
      branchIfTrue label25
      pop
      push r:10, r:5, 2, r:this, '}K5KI('
      callMethod
      dup
      branchIfTrue label25
      pop
      push r:10, 4
      subtract
      push r:5, 2, r:this, '}K5KI('
      callMethod
     label25:
      not
      branchIfTrue label26
      push '4', r:7, '7', r:6, '((', r:5, ')(', r:10, 3
      subtract
      push '1', FALSE, 5
      initObject
      setRegister r:2
      pop
     label26:
      branch label28
     label27:
      push '4', r:7, '7', r:6, '((', r:5, ')(', r:10, 4
      subtract
      push '1', FALSE, 5
      initObject
      setRegister r:2
      pop
     label28:
      push 1
      setRegister r:6
      pop
      push r:11
      setRegister r:7
      pop
      branch label30
     label29:
      push r:6
      increment
      setRegister r:6
      pop
     label30:
      branch label23
     label31:
      branch label21
     label32:
      push 0
      setRegister r:3
      pop
      push '0vWVG'
      getVariable
      push '{u'
      getMember
      setRegister r:4
      pop
     label33:
      push r:3, r:4
      lessThan
      not
      branchIfTrue label43
      push r:3
      setRegister r:5
      pop
      push r:3
      increment
      setRegister r:3
      pop
      push 0
      setRegister r:6
      pop
      push NULL
      setRegister r:7
      pop
      push 0
      setRegister r:8
      pop
      push '0vWVG'
      getVariable
      push '{u'
      getMember
      setRegister r:9
      pop
     label34:
      push r:8, r:9
      lessThan
      not
      branchIfTrue label42
      push r:8
      setRegister r:10
      pop
      push r:8
      increment
      setRegister r:8
      pop
      push r:this, '9oK'
      getMember
      push r:10
      getMember
      push r:5
      getMember
      push '=X54'
      getMember
      setRegister r:11
      pop
      push r:11, r:7
      equals
      branchIfTrue label40
      push r:7, NULL
      equals
      not
      dup
      not
      branchIfTrue label35
      pop
      push r:6, 4
      lessThan
      not
     label35:
      branchIfTrue label38
      push r:6, 3
      equals
      dup
      not
      branchIfTrue label36
      pop
      push r:2, NULL
      equals
      dup
      not
      branchIfTrue label36
      pop
      push r:7, ']iWA=('
      getVariable
      push '{GisG'
      getMember
      equals
      dup
      not
      branchIfTrue label36
      pop
      push r:5, r:10, 2, r:this, '}K5KI('
      callMethod
      dup
      branchIfTrue label36
      pop
      push r:5, r:10, 4
      subtract
      push 2, r:this, '}K5KI('
      callMethod
     label36:
      not
      branchIfTrue label37
      push '4', r:7, '7', r:6, '((', r:10, 3
      subtract
      push ')(', r:5, '1', TRUE, 5
      initObject
      setRegister r:2
      pop
     label37:
      branch label39
     label38:
      push '4', r:7, '7', r:6, '((', r:10, 4
      subtract
      push ')(', r:5, '1', TRUE, 5
      initObject
      setRegister r:2
      pop
     label39:
      push 1
      setRegister r:6
      pop
      push r:11
      setRegister r:7
      pop
      branch label41
     label40:
      push r:6
      increment
      setRegister r:6
      pop
     label41:
      branch label34
     label42:
      branch label33
     label43:
      push r:2
      return
    end // of function 

    setMember
    push r:1, '+-(0', NULL
    setMember
    push r:1, ';_4,,'
    function2 (r:2='', r:3='') (r:1='this')
      push 1, r:3, r:2, 3, r:this, '-Ppj['
      callMethod
      not
      branchIfTrue label44
      push '((', r:2, ')(', r:3, '{2', 1, '}2', 0, 4
      initObject
      return
     label44:
      push -1, r:3, r:2, 3, r:this, '-Ppj['
      callMethod
      not
      branchIfTrue label45
      push '((', r:2, ')(', r:3, '{2', -1, '}2', 0, 4
      initObject
      return
     label45:
      push 1, r:3, r:2, 3, r:this, ',Ppj['
      callMethod
      not
      branchIfTrue label46
      push '((', r:2, ')(', r:3, '{2', 0, '}2', 1, 4
      initObject
      return
     label46:
      push -1, r:3, r:2, 3, r:this, ',Ppj['
      callMethod
      not
      branchIfTrue label47
      push '((', r:2, ')(', r:3, '{2', 0, '}2', -1, 4
      initObject
      return
     label47:
      push NULL
      return
    end // of function 

    setMember
    push r:1, '-Ppj['
    function2 (r:2='', r:3='', r:4='') (r:1='this')
      push r:this, '9oK'
      getMember
      push r:2, r:4
      subtract
      getMember
      push r:3
      getMember
      push NULL
      equals
      not
      branchIfTrue label48
      push FALSE
      return
     label48:
      push r:this, '9oK'
      getMember
      push r:2
      getMember
      push r:3
      getMember
      push NULL
      equals
      not
      branchIfTrue label51
      push r:2, r:4
      add
      setRegister r:2
      pop
      push r:2, 0
      lessThan
      dup
      branchIfTrue label49
      pop
      push r:2, '0vWVG'
      getVariable
      push '{u'
      getMember
      greaterThan
     label49:
      not
      branchIfTrue label50
      push TRUE
      return
     label50:
      branch label48
     label51:
      push FALSE
      return
    end // of function 

    setMember
    push r:1, ',Ppj['
    function2 (r:2='', r:3='', r:4='') (r:1='this')
      push r:this, '9oK'
      getMember
      push r:2
      getMember
      push r:3, r:4
      subtract
      getMember
      push NULL
      equals
      not
      branchIfTrue label52
      push FALSE
      return
     label52:
      push r:this, '9oK'
      getMember
      push r:2
      getMember
      push r:3
      getMember
      push NULL
      equals
      not
      branchIfTrue label55
      push r:3, r:4
      add
      setRegister r:3
      pop
      push r:3, 0
      lessThan
      dup
      branchIfTrue label53
      pop
      push r:3, '0vWVG'
      getVariable
      push '{u'
      getMember
      greaterThan
     label53:
      not
      branchIfTrue label54
      push TRUE
      return
     label54:
      branch label52
     label55:
      push FALSE
      return
    end // of function 

    setMember
    push r:1, '*j 6', NULL
    setMember
    push r:1, '+j 6', NULL
    setMember
    push r:1, '8I56', NULL
    setMember
    push r:1, '9I56', NULL
    setMember
    push r:1, '7NJ'
    function2 (r:2='', r:3='', r:4='') (r:1='this')
      push r:this, '9oK'
      getMember
      push r:2
      getMember
      push NULL
      equals
      not
      branchIfTrue label56
      push r:this, '9oK'
      getMember
      push r:2, 0, 'Array'
      new
      setMember
     label56:
      push r:4
      branchIfTrue label57
      push ']iWA=('
      getVariable
      push '{GisG'
      getMember
      branch label58
     label57:
      push ']iWA=('
      getVariable
      push '0 ybJ'
      getMember
     label58:
      push r:3, r:2, r:this, '+-(0'
      getMember
      push 4, '{02X'
      new
      setRegister r:5
      pop
      push r:5, 1, r:this, ',q('
      getMember
      push 'push'
      callMethod
      pop
      push r:this, '9oK'
      getMember
      push r:2
      getMember
      push r:3, r:5
      setMember
      push r:2, r:this, '8I56'
      getMember
      lessThan
      branchIfTrue label60
      push r:2, r:this, '*j 6'
      getMember
      greaterThan
      not
      branchIfTrue label59
      push r:this, '*j 6', r:2
      setMember
     label59:
      branch label61
     label60:
      push r:this, '8I56', r:2
      setMember
     label61:
      push r:3, r:this, '9I56'
      getMember
      lessThan
      branchIfTrue label63
      push r:3, r:this, '+j 6'
      getMember
      greaterThan
      not
      branchIfTrue label62
      push r:this, '+j 6', r:3
      setMember
     label62:
      branch label64
     label63:
      push r:this, '9I56', r:3
      setMember
     label64:
      push r:5
      return
    end // of function 

    setMember
    push r:1, '9oK', NULL
    setMember
    push ']iWA=(', 0, 'Object'
    new
    setRegister r:0
    setVariable
    push r:0, '__ename__', ']iWA=(', 1
    initArray
    setMember
    push r:0, '__constructs__', 'POther', 'PMine', 'PNeutral', 3
    initArray
    setMember
    push r:0, '0 ybJ', 1, '0 ybJ', 2
    initArray
    dup
    dup
    push '__enum__', r:0
    setMember
    push 'toString', ')PVyX'
    getVariable
    setMember
    setMember
    push r:0, '2Z4i*', 0, '2Z4i*', 2
    initArray
    dup
    dup
    push '__enum__', r:0
    setMember
    push 'toString', ')PVyX'
    getVariable
    setMember
    setMember
    push r:0, '{GisG', 2, '{GisG', 2
    initArray
    dup
    dup
    push '__enum__', r:0
    setMember
    push 'toString', ')PVyX'
    getVariable
    setMember
    setMember
    push '{02X'
    function2 (r:2='', r:3='', r:4='', r:5='') (r:1='this')
      push r:this, '+-(0', r:2
      setMember
      push r:this, '}J', '=(,aA'
      getVariable
      push ' k)h]'
      getMember
      push 'pion', 2, r:this, '+-(0'
      getMember
      push ']}lAm'
      getMember
      push '*=_p_'
      callMethod
      setMember
      push r:this, '=X54', r:5
      setMember
      push r:5
      setRegister r:6
      push ']iWA=('
      getVariable
      push '2Z4i*'
      getMember
      equals
      branchIfTrue label65
      push r:6, ']iWA=('
      getVariable
      push '0 ybJ'
      getMember
      equals
      branchIfTrue label66
      push r:6, ']iWA=('
      getVariable
      push '{GisG'
      getMember
      equals
      branchIfTrue label69
      push NULL
      branch label72
     label65:
      push 1
      branch label72
     label66:
      push r:this, '+-(0'
      getMember
      push '5qt3+'
      getMember
      branchIfTrue label67
      push 3
      branch label68
     label67:
      push 2
     label68:
      branch label72
     label69:
      push r:this, '+-(0'
      getMember
      push '5qt3+'
      getMember
      branchIfTrue label70
      push 2
      branch label71
     label70:
      push 3
     label71:
      branch label72
     label72:
      push 1, r:this, '}J'
      getMember
      push 'gotoAndStop'
      callMethod
      pop
      push r:4, r:3, 2, r:this, '(j;o7'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setVariable
    push r:0, '__name__', '{02X', 1
    initArray
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '__class__', r:0
    setMember
    push r:1, '46X6+', NULL
    setMember
    push r:1, '+-(0', NULL
    setMember
    push r:1, '1U;0', NULL
    setMember
    push r:1, ')0o(b'
    function2 () (r:1='this')
      push r:this, '1U;0', 10, 2, 2, 50, 16777215, 5, '[8X6+'
      getVariable
      push '3[4k{'
      getMember
      push 'GlowFilter'
      newMethod
      setMember
      push r:this, '46X6+', 2, 'flare', 2, r:this, '+-(0'
      getMember
      push ']}lAm'
      getMember
      push '*=_p_'
      callMethod
      setMember
      push r:this, '5U4B', 0
      setMember
      push r:this, '}J'
      getMember
      push '_alpha', 80
      setMember
      push r:this, '}J'
      getMember
      push 'filters', r:this, '1U;0'
      getMember
      push 1
      initArray
      setMember
    end // of function 

    setMember
    push r:1, '=X54', NULL
    setMember
    push r:1, '5W_C2'
    function2 () (r:1='this')
      push 1000, 1, 'haxe'
      getVariable
      push '{-kxL'
      newMethod
      setRegister r:2
      pop
      push r:this
      setRegister r:3
      pop
      push r:2, 'run', r:this, '0POpX', 2, ']6=8H('
      callFunction
      setMember
    end // of function 

    setMember
    push r:1, '}J', NULL
    setMember
    push r:1, '(As7K'
    function2 (r:2='', r:3='') (r:1='this')
      push r:this, '((', r:2
      setMember
      push r:this, ')(', r:3
      setMember
      push r:this, 1, r:this, '+-(0'
      getMember
      push '9P-r'
      getMember
      push 'remove'
      callMethod
      pop
      push r:this, 1, r:this, '+-(0'
      getMember
      push '9P-r'
      getMember
      push 'push'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '0;*y6(', NULL
    setMember
    push r:1, '0POpX'
    function2 () (r:1='this')
      push 0, r:this, '}J'
      getMember
      push '0tJ'
      getMember
      push '0tJ'
      getMember
      push 'play'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '(j;o7'
    function2 (r:2='', r:3='') (r:1='this')
      push r:this, '((', r:2
      setMember
      push r:this, ')(', r:3
      setMember
      push r:this, '}J'
      getMember
      push '_x', r:2, '=(,aA'
      getVariable
      push '-Wa['
      getMember
      multiply
      setMember
      push r:this, '}J'
      getMember
      push '_y', r:3, '=(,aA'
      getVariable
      push '-Wa['
      getMember
      multiply
      setMember
    end // of function 

    setMember
    push r:1, '5U4B', NULL
    setMember
    push r:1, '87vE7('
    function2 () (r:1='this')
      push r:this, '(('
      getMember
      push '=(,aA'
      getVariable
      push '-Wa['
      getMember
      multiply
      setRegister r:2
      pop
      push r:this, ')('
      getMember
      push '=(,aA'
      getVariable
      push '-Wa['
      getMember
      multiply
      setRegister r:3
      pop
      push '9K'
      getVariable
      push '{-kxL'
      getMember
      push '-V;B'
      getMember
      push 0.6, 2, 'Math'
      getVariable
      push 'pow'
      callMethod
      setRegister r:4
      pop
      push r:this, '}J'
      getMember
      push '_x', r:this, '}J'
      getMember
      push '_x'
      getMember
      push r:4
      multiply
      push 1, r:4
      subtract
      push r:2
      multiply
      add
      setMember
      push r:this, '}J'
      getMember
      push '_y', r:this, '}J'
      getMember
      push '_y'
      getMember
      push r:4
      multiply
      push 1, r:4
      subtract
      push r:3
      multiply
      add
      setMember
      push r:this, '}J'
      getMember
      push '_x'
      getMember
      push r:2
      subtract
      push 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      push r:this, '}J'
      getMember
      push '_y'
      getMember
      push r:3
      subtract
      push 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      add
      push 2
      lessThan
      not
      branchIfTrue label73
      push r:this, '}J'
      getMember
      push '_x', r:2
      setMember
      push r:this, '}J'
      getMember
      push '_y', r:3
      setMember
      push 0, r:this, '0;*y6('
      callMethod
      pop
      push FALSE
      return
     label73:
      push TRUE
      return
    end // of function 

    setMember
    push r:1, '3]v4n'
    function2 (r:2='') (r:1='this')
      push r:this, '5U4B', r:this, '5U4B'
      getMember
      push '9K'
      getVariable
      push '{-kxL'
      getMember
      push '-V;B'
      getMember
      add
      setMember
      push r:this, '1U;0'
      getMember
      push 'blurX', r:this, '1U;0'
      getMember
      push 'blurY', 2, r:this, '5U4B'
      getMember
      push 10
      divide
      push 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      push 5
      multiply
      add
      setRegister r:0
      setMember
      push r:0
      setMember
      push r:this, '46X6+'
      getMember
      push '_x', r:this, '}J'
      getMember
      push '_x'
      getMember
      setMember
      push r:this, '46X6+'
      getMember
      push '_y', r:this, '}J'
      getMember
      push '_y'
      getMember
      setMember
      push r:2, 180
      multiply
      push 'Math'
      getVariable
      push 'PI'
      getMember
      divide
      setRegister r:3
      pop
      push r:this, '46X6+'
      getMember
      push '_rotation'
      getMember
      setRegister r:4
      pop
      push r:3, 0
      lessThan
      not
      branchIfTrue label74
      push r:3, 360
      add
      setRegister r:3
      pop
     label74:
      push r:4, 0
      lessThan
      not
      branchIfTrue label75
      push r:4, 360
      add
      setRegister r:4
      pop
     label75:
      push r:3, r:4
      subtract
      setRegister r:5
      pop
      push r:5, 0
      lessThan
      not
      branchIfTrue label76
      push r:5, 360
      add
      setRegister r:5
      pop
     label76:
      push r:5, 180
      greaterThan
      branchIfTrue label78
      push r:4, 20, '9K'
      getVariable
      push '{-kxL'
      getMember
      push '-V;B'
      getMember
      multiply
      add
      setRegister r:4
      pop
      push r:4, r:3
      greaterThan
      not
      branchIfTrue label77
      push r:3
      setRegister r:4
      pop
     label77:
      branch label79
     label78:
      push r:4, 20, '9K'
      getVariable
      push '{-kxL'
      getMember
      push '-V;B'
      getMember
      multiply
      subtract
      setRegister r:4
      pop
      push r:4, r:3
      lessThan
      not
      branchIfTrue label79
      push r:3
      setRegister r:4
      pop
     label79:
      push r:this, '46X6+'
      getMember
      push '_rotation', r:4
      setMember
      push r:this, '}J'
      getMember
      push 'filters', r:this, '1U;0'
      getMember
      push 1
      initArray
      setMember
    end // of function 

    setMember
    push r:1, '=qpLa'
    function2 (r:2='') (r:1='this')
      push r:this, '}J'
      getMember
      push '_visible', r:2
      setMember
      push r:this, '46X6+'
      getMember
      push '_visible', r:2
      setMember
    end // of function 

    setMember
    push r:1, '((', NULL
    setMember
    push r:1, ')(', NULL
    setMember
    push '[Zk', 0, 'Object'
    new
    setRegister r:0
    setVariable
    push r:0, '__ename__', '[Zk', 1
    initArray
    setMember
    push r:0, '__constructs__', 'Set', 'Init', 2
    initArray
    setMember
    push r:0, '-5;Q', 0, '-5;Q', 2
    initArray
    dup
    dup
    push '__enum__', r:0
    setMember
    push 'toString', ')PVyX'
    getVariable
    setMember
    setMember
    push r:0, ']1t'
    function2 (r:2='', r:3='', r:4='', r:5='') (r:1='this')
      push r:5, r:4, r:3, r:2, 1, ']1t', 6
      initArray
      dup
      dup
      push '__enum__', r:this
      setMember
      push 'toString', ')PVyX'
      getVariable
      setMember
      return
    end // of function 

    setMember
    push '44{N'
    function2 (r:2='') (r:1='this')
      push r:this, '-iB=', r:2
      setMember
      push r:this, ' CgyI', r:this, '-iB='
      getMember
      push 1, '9K'
      getVariable
      push '+7U K'
      newMethod
      setMember
      push r:this, '58rO6', 1, 1, r:this, ' CgyI'
      getMember
      push '18wU*'
      callMethod
      setMember
      push r:this, ']}lAm', r:this, '58rO6'
      getMember
      push 1, '9K'
      getVariable
      push '+7U K'
      newMethod
      setMember
      push r:this, ';+', 0, 'bg', 2, r:this, ' CgyI'
      getMember
      push '*=_p_'
      callMethod
      setMember
      push r:this, ';+'
      getMember
      push '_x', r:this, ';+'
      getMember
      push '_y', 150
      setRegister r:0
      setMember
      push r:0
      setMember
      push r:this, '4]ms3', 0, 'plan1', 2, r:this, ' CgyI'
      getMember
      push '*=_p_'
      callMethod
      setMember
      push r:this, '5]ms3', 0, 'plan2', 2, r:this, ' CgyI'
      getMember
      push '*=_p_'
      callMethod
      setMember
      push r:this, '+JP', 0, 'web', 2, r:this, ' CgyI'
      getMember
      push '*=_p_'
      callMethod
      setMember
      push r:this, '+Y', '=(,aA'
      getVariable
      push '0('
      getMember
      push '=(,aA'
      getVariable
      push '-Wa['
      getMember
      multiply
      setMember
      push r:this, ',Y', '=(,aA'
      getVariable
      push '0('
      getMember
      push '=(,aA'
      getVariable
      push '-Wa['
      getMember
      multiply
      setMember
      push r:this, '=HU11', r:this, 1, '0vWVG'
      new
      setMember
      push r:this, '9P-r', 0, 'Array'
      new
      setMember
      push r:this, '8+C5', TRUE
      setMember
      push 0, r:this, '0D 6'
      callMethod
      pop
      push FALSE, 1, '}-VbH'
      getVariable
      push '5nwDR'
      callMethod
      pop
      push 5000, 1, 'haxe'
      getVariable
      push '{-kxL'
      newMethod
      setRegister r:3
      pop
      push r:3, 'run', r:this, '1=hnJ(', 2, ']6=8H('
      callFunction
      setMember
    end // of function 

    setRegister r:0
    setVariable
    push r:0, '__name__', '44{N', 1
    initArray
    setMember
    push r:0, '__interfaces__', '7Pm20('
    getVariable
    push 1
    initArray
    setMember
    push '7Pm20('
    getVariable
    push 1, r:0
    implements
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '__class__', r:0
    setMember
    push r:1, '9P-r', NULL
    setMember
    push r:1, ';+', NULL
    setMember
    push r:1, '4zkrA(', NULL
    setMember
    push r:1, ']}lAm', NULL
    setMember
    push r:1, '8q0', NULL
    setMember
    push r:1, '5qt3+', NULL
    setMember
    push r:1, ';6aj0('
    function2 () (r:1='this')
      push '[Zk'
      getVariable
      push '-5;Q'
      getMember
      return
    end // of function 

    setMember
    push r:1, '=HU11', NULL
    setMember
    push r:1, '8+C5', NULL
    setMember
    push r:1, '0D 6'
    function2 () (r:1='this')
      push r:this, '=HU11'
      getMember
      push '*j 6'
      getMember
      push r:this, '=HU11'
      getMember
      push '8I56'
      getMember
      subtract
      push 4
      subtract
      push '=(,aA'
      getVariable
      push '-Wa['
      getMember
      multiply
      setRegister r:2
      pop
      push r:this, '=HU11'
      getMember
      push '+j 6'
      getMember
      push r:this, '=HU11'
      getMember
      push '9I56'
      getMember
      subtract
      push 4
      subtract
      push '=(,aA'
      getVariable
      push '-Wa['
      getMember
      multiply
      setRegister r:3
      pop
      push r:this, '=HU11'
      getMember
      push '8I56'
      getMember
      push r:this, '=HU11'
      getMember
      push '*j 6'
      getMember
      add
      push 2
      divide
      push '=(,aA'
      getVariable
      push '-Wa['
      getMember
      multiply
      setRegister r:4
      pop
      push r:this, '=HU11'
      getMember
      push '9I56'
      getMember
      push r:this, '=HU11'
      getMember
      push '+j 6'
      getMember
      add
      push 2
      divide
      push '=(,aA'
      getVariable
      push '-Wa['
      getMember
      multiply
      setRegister r:5
      pop
      push r:this, '-iB='
      getMember
      push '_xmouse'
      getMember
      push 300
      divide
      push 0.5
      subtract
      push r:2
      multiply
      push r:4
      add
      setRegister r:6
      pop
      push r:this, '-iB='
      getMember
      push '_ymouse'
      getMember
      push 300
      divide
      push 0.5
      subtract
      push r:3
      multiply
      push r:5
      add
      setRegister r:7
      pop
      push r:this, '+Q}B]'
      getMember
      push NULL
      equals
      not
      not
      branchIfTrue label80
      push r:this, '+Q}B]'
      getMember
      push '(('
      getMember
      push '=(,aA'
      getVariable
      push '-Wa['
      getMember
      multiply
      setRegister r:6
      pop
      push r:this, '+Q}B]'
      getMember
      push ')('
      getMember
      push '=(,aA'
      getVariable
      push '-Wa['
      getMember
      multiply
      setRegister r:7
      pop
     label80:
      push '9K'
      getVariable
      push '{-kxL'
      getMember
      push '-V;B'
      getMember
      push 0.5, 2, 'Math'
      getVariable
      push 'pow'
      callMethod
      setRegister r:8
      pop
      push r:this, '+Y', r:this, '+Y'
      getMember
      push r:8
      multiply
      push 1, r:8
      subtract
      push r:6
      multiply
      add
      setMember
      push r:this, ',Y', r:this, ',Y'
      getMember
      push r:8
      multiply
      push 1, r:8
      subtract
      push r:7
      multiply
      add
      setMember
      push r:this, '58rO6'
      getMember
      push '_x', 0, r:this, '+Y'
      getMember
      subtract
      push 150
      add
      setMember
      push r:this, '58rO6'
      getMember
      push '_y', 0, r:this, ',Y'
      getMember
      subtract
      push 150
      add
      setMember
      push 0.5, 300, r:this, '4]ms3'
      getMember
      push 3, r:this, ',qE'
      callMethod
      pop
      push 0.7, 300, r:this, '5]ms3'
      getMember
      push 3, r:this, ',qE'
      callMethod
      pop
      push 1, 800, r:this, '+JP'
      getMember
      push 3, r:this, ',qE'
      callMethod
      pop
      push 0
      setRegister r:9
      pop
     label81:
      push r:9, r:this, '9P-r'
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label84
      push 0, r:this, '9P-r'
      getMember
      push r:9
      getMember
      push '87vE7('
      callMethod
      not
      branchIfTrue label82
      push r:9
      increment
      setRegister r:9
      pop
      branch label83
     label82:
      push 1, r:9, 2, r:this, '9P-r'
      getMember
      push 'splice'
      callMethod
      pop
     label83:
      branch label81
     label84:
      push r:this, '4AF', NULL
      setMember
      push r:this, '8+C5'
      getMember
      not
      not
      branchIfTrue label93
      push r:this, '58rO6'
      getMember
      push '_xmouse'
      getMember
      push '=(,aA'
      getVariable
      push '-Wa['
      getMember
      divide
      push 0.5
      add
      push 1, '3Wt'
      getVariable
      push '9n6'
      callMethod
      setRegister r:10
      pop
      push r:this, '58rO6'
      getMember
      push '_ymouse'
      getMember
      push '=(,aA'
      getVariable
      push '-Wa['
      getMember
      divide
      push 0.5
      add
      push 1, '3Wt'
      getVariable
      push '9n6'
      callMethod
      setRegister r:11
      pop
      push 0
      setRegister r:12
      pop
      push 5
      setRegister r:13
      pop
     label85:
      push r:12, r:13
      lessThan
      not
      branchIfTrue label92
      push r:12
      setRegister r:14
      pop
      push r:12
      increment
      setRegister r:12
      pop
      push r:this, '4AF', r:11, r:10, r:14
      subtract
      push 2, r:this, '=HU11'
      getMember
      push ';_4,,'
      callMethod
      setRegister r:0
      setMember
      push r:0, NULL
      equals
      not
      not
      branchIfTrue label86
      branch label92
     label86:
      push r:14, 0
      equals
      not
      branchIfTrue label87
      branch label85
     label87:
      push r:this, '4AF', r:11, r:10, r:14
      add
      push 2, r:this, '=HU11'
      getMember
      push ';_4,,'
      callMethod
      setRegister r:0
      setMember
      push r:0, NULL
      equals
      not
      not
      branchIfTrue label88
      branch label92
     label88:
      push r:this, '4AF', r:11, r:14
      subtract
      push r:10, 2, r:this, '=HU11'
      getMember
      push ';_4,,'
      callMethod
      setRegister r:0
      setMember
      push r:0, NULL
      equals
      not
      not
      branchIfTrue label89
      branch label92
     label89:
      push r:14, 0
      equals
      not
      branchIfTrue label90
      branch label85
     label90:
      push r:this, '4AF', r:11, r:14
      add
      push r:10, 2, r:this, '=HU11'
      getMember
      push ';_4,,'
      callMethod
      setRegister r:0
      setMember
      push r:0, NULL
      equals
      not
      not
      branchIfTrue label91
      branch label92
     label91:
      branch label85
     label92:
      push r:this, '4AF'
      getMember
      push NULL
      equals
      not
      push 1, r:this, '4zkrA('
      getMember
      push '=qpLa'
      callMethod
      pop
      push r:this, '4AF'
      getMember
      push ')('
      getMember
      push r:this, '4AF'
      getMember
      push '(('
      getMember
      push 2, r:this, '4zkrA('
      getMember
      push '(As7K'
      callMethod
      pop
      push 0, r:this, '4AF'
      getMember
      push '{2'
      getMember
      subtract
      push 0, r:this, '4AF'
      getMember
      push '}2'
      getMember
      subtract
      push 2, 'Math'
      getVariable
      push 'atan2'
      callMethod
      push 1, r:this, '4zkrA('
      getMember
      push '3]v4n'
      callMethod
      pop
     label93:
    end // of function 

    setMember
    push r:1, '6*62}'
    function2 () (r:1='this')
      push 0, r:this, '=HU11'
      getMember
      push '994N=('
      callMethod
      setRegister r:2
      pop
      push r:2, '7'
      getMember
      push 3
      equals
      branchIfTrue label100
      push '', 1, '}-VbH'
      getVariable
      push '+*[ W'
      callMethod
      pop
      push r:2, NULL
      equals
      not
      dup
      not
      branchIfTrue label94
      pop
      push r:2, '7'
      getMember
      push 4
      lessThan
      not
     label94:
      not
      branchIfTrue label99
      push r:2, '4'
      getMember
      push ']iWA=('
      getVariable
      push '0 ybJ'
      getMember
      equals
      push 1, '}-VbH'
      getVariable
      push '4[K{k'
      callMethod
      pop
      push r:this, '8q0', TRUE
      setMember
      push r:this, '+Q}B]'
      getMember
      push NULL
      equals
      not
      branchIfTrue label95
      push r:this, '+Q}B]', '((', r:2, '(('
      getMember
      push ')(', r:2, ')('
      getMember
      push 2
      initObject
      setMember
     label95:
      push 0
      setRegister r:3
      pop
      push r:2, '7'
      getMember
      setRegister r:4
      pop
     label96:
      push r:3, r:4
      lessThan
      not
      branchIfTrue label99
      push r:3
      setRegister r:5
      pop
      push r:3
      increment
      setRegister r:3
      pop
      push r:this, '=HU11'
      getMember
      push '9oK'
      getMember
      push r:2, '(('
      getMember
      getMember
      push r:2, ')('
      getMember
      getMember
      setRegister r:6
      pop
      push 0, r:6, '5W_C2'
      callMethod
      pop
      push r:2, '1'
      getMember
      branchIfTrue label97
      push r:2, ')(', r:2, ')('
      getMember
      increment
      setMember
      branch label98
     label97:
      push r:2, '((', r:2, '(('
      getMember
      increment
      setMember
     label98:
      branch label96
     label99:
      branch label101
     label100:
      push '<b>Attention !</b>', 1, '}-VbH'
      getVariable
      push '+*[ W'
      callMethod
      pop
     label101:
      push r:this, '8q0'
      getMember
      not
      not
      branchIfTrue label102
      push r:this, '+Q}B]', NULL
      setMember
     label102:
      push FALSE, 1, '}-VbH'
      getVariable
      push '5nwDR'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '+oD9l'
    function2 (r:2='', r:3='') (r:1='this')
      push r:3
      setRegister r:4
      push 1
      getMember
      setRegister r:5
      push 0
      strictEquals
      branchIfTrue label103
      push r:5, 1
      strictEquals
      branchIfTrue label106
      branch label110
     label103:
      push r:this, '5qt3+', r:2
      setMember
      push r:2
      branchIfTrue label104
      push 59548, 14038794, 2, '}-VbH'
      getVariable
      push '0UN5I'
      callMethod
      pop
      branch label105
     label104:
      push 14038794, 59548, 2, '}-VbH'
      getVariable
      push '0UN5I'
      callMethod
      pop
     label105:
      push r:this, '4zkrA(', ']iWA=('
      getVariable
      push '0 ybJ'
      getMember
      push '=(,aA'
      getVariable
      push '0('
      getMember
      push '=(,aA'
      getVariable
      push '0('
      getMember
      push r:this, 4, '{02X'
      new
      setMember
      push 0, r:this, '4zkrA('
      getMember
      push ')0o(b'
      callMethod
      pop
      push r:this, '4zkrA('
      getMember
      push '}J'
      getMember
      push 'onRelease', r:this, '24{{7(', 2, ']6=8H('
      callFunction
      setMember
      push FALSE, 1, r:this, '4zkrA('
      getMember
      push '=qpLa'
      callMethod
      pop
      branch label110
     label106:
      push r:4, 2
      getMember
      setRegister r:5
      pop
      push r:4, 3
      getMember
      setRegister r:6
      pop
      push r:4, 4
      getMember
      setRegister r:7
      pop
      push r:4, 5
      getMember
      setRegister r:8
      pop
      push r:2, r:6, r:5, 3, r:this, '=HU11'
      getMember
      push '7NJ'
      callMethod
      setRegister r:9
      pop
      push TRUE, 1, '}-VbH'
      getVariable
      push '5nwDR'
      callMethod
      pop
      push r:2
      dup
      not
      branchIfTrue label107
      pop
      push 0, '}-VbH'
      getVariable
      push '+4Z+['
      callMethod
     label107:
      branchIfTrue label108
      push r:8, '=(,aA'
      getVariable
      push '0('
      getMember
      multiply
      push '=(,aA'
      getVariable
      push '0('
      getMember
      add
      push r:7, '=(,aA'
      getVariable
      push '0('
      getMember
      multiply
      push '=(,aA'
      getVariable
      push '0('
      getMember
      add
      push 2, r:9, '(j;o7'
      callMethod
      pop
      push r:6, r:5, 2, r:9, '(As7K'
      callMethod
      pop
      push r:this, '+Q}B]', '((', r:5, ')(', r:6, 2
      initObject
      setMember
      push r:9, '0;*y6(', r:this, '6*62}', 2, ']6=8H('
      callFunction
      setMember
      branch label109
     label108:
      push FALSE, 1, r:this, '4zkrA('
      getMember
      push '=qpLa'
      callMethod
      pop
      push 0, r:this, '6*62}'
      callMethod
      pop
     label109:
      branch label110
     label110:
    end // of function 

    setMember
    push r:1, '+Du}V'
    function2 () (r:1='this')
      push 0, r:this, '4fHu{'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '4fHu{'
    function2 () (r:1='this')
      push r:this, '8+C5', 0, '}-VbH'
      getVariable
      push '4mok0'
      callMethod
      not
      dup
      branchIfTrue label111
      pop
      push 0, '}-VbH'
      getVariable
      push '+4Z+['
      callMethod
      not
     label111:
      setMember
      push r:this, '8q0'
      getMember
      not
      branchIfTrue label112
      push r:this, '8+C5', TRUE
      setMember
     label112:
      push r:this, '4zkrA('
      getMember
      push '}J'
      getMember
      push 1, r:this, ']}lAm'
      getMember
      push '08M8'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '8Z[e,('
    function2 (r:2='') (r:1='this')
      push 0, 3000, '}-VbH'
      getVariable
      push '7T4cF(', 2, ']6=8H('
      callFunction
      push 2, 'haxe'
      getVariable
      push '{-kxL'
      getMember
      push '+TOS,('
      callMethod
      push UNDEF
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ',qE'
    function2 (r:2='', r:3='', r:4='') (r:1='this')
      push r:this, '+Y'
      getMember
      push r:4
      multiply
      push r:3, 2
      divide
      add
      push 18
      subtract
      push 1, '3Wt'
      getVariable
      push '9n6'
      callMethod
      push r:3
      modulo
      push r:3
      add
      push r:3
      modulo
      setRegister r:5
      pop
      push r:this, ',Y'
      getMember
      push r:4
      multiply
      push r:3, 2
      divide
      add
      push 3
      add
      push 1, '3Wt'
      getVariable
      push '9n6'
      callMethod
      push r:3
      modulo
      push r:3
      add
      push r:3
      modulo
      setRegister r:6
      pop
      push r:2, '_x', 0, r:5
      subtract
      setMember
      push r:2, '_y', 0, r:6
      subtract
      setMember
    end // of function 

    setMember
    push r:1, '4]ms3', NULL
    setMember
    push r:1, '5]ms3', NULL
    setMember
    push r:1, '4AF', NULL
    setMember
    push r:1, '1=hnJ('
    function2 () (r:1='this')
      push 0, r:this, '=HU11'
      getMember
      push ',q('
      getMember
      push r:this, '=HU11'
      getMember
      push ',q('
      getMember
      push 'length'
      getMember
      push 1, '3Wt'
      getVariable
      push 'random'
      callMethod
      getMember
      push '0POpX'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '-iB=', NULL
    setMember
    push r:1, ' CgyI', NULL
    setMember
    push r:1, '58rO6', NULL
    setMember
    push r:1, '24{{7('
    function2 () (r:1='this')
      push r:this, '4AF'
      getMember
      push NULL
      equals
      dup
      branchIfTrue label113
      pop
      push r:this, '8+C5'
      getMember
     label113:
      not
      branchIfTrue label114
      push UNDEF
      return
     label114:
      push r:this, '8+C5', TRUE
      setMember
      push r:this, '4AF'
      getMember
      push '}2'
      getMember
      push r:this, '4AF'
      getMember
      push '{2'
      getMember
      push r:this, '4AF'
      getMember
      push ')('
      getMember
      push r:this, '4AF'
      getMember
      push '(('
      getMember
      push 4, '[Zk'
      getVariable
      push ']1t'
      callMethod
      push 1, '}-VbH'
      getVariable
      push ';ptpb'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '+Y', NULL
    setMember
    push r:1, ',Y', NULL
    setMember
    push r:1, '+Q}B]', NULL
    setMember
    push r:1, '+JP', NULL
    setMember
    push '[8X6+'
    getVariable
    push '7]AJ'
    getMember
    setRegister r:0
    pop
    push 'this'
    getVariable
    push 1, r:0, '__init'
    callMethod
    pop
    push r:0, '__res', 0
    initObject
    setMember
    try r:0
      push '[8X6+'
      getVariable
      push 'MovieClip', '_global'
      getVariable
      push 'MovieClip'
      getMember
      setMember
      push '[8X6+'
      getVariable
      push 'TextField', '_global'
      getVariable
      push 'TextField'
      getMember
      setMember
      push '[8X6+'
      getVariable
      push 'text'
      getMember
      push 'StyleSheet', '_global'
      getVariable
      push 'TextField'
      getMember
      push 'StyleSheet'
      getMember
      setMember
      push '__eval'
      function2 (r:2='') (r:1='this')
        push r:2
        getVariable
        return
      end // of function 

      setVariable
      push '[8X6+'
      getVariable
      push 'TextFormat', '_global'
      getVariable
      push 'TextFormat'
      getMember
      setMember
      push '[8X6+'
      getVariable
      push 'Stage', '_global'
      getVariable
      push 'Stage'
      getMember
      setMember
      push '[8X6+'
      getVariable
      push 'TextSnapshot', '_global'
      getVariable
      push 'TextSnapshot'
      getMember
      setMember
      push '=(,aA'
      getVariable
      push ' k)h]', 1
      setMember
      push '=(,aA'
      getVariable
      push '0(', 50
      setMember
      push '=(,aA'
      getVariable
      push '-Wa[', 30
      setMember
      push 'haxe'
      getVariable
      push '{-kxL'
      getMember
      push '-_d +', 0, 'Array'
      new
      setMember
      push '0vWVG'
      getVariable
      push '0(', '=(,aA'
      getVariable
      push '0('
      getMember
      setMember
      push '0vWVG'
      getVariable
      push '{u', '0vWVG'
      getVariable
      push '0('
      getMember
      push 2
      multiply
      setMember
      branch label115
    catch
      push r:0, 1, '[8X6+'
      getVariable
      push '7]AJ'
      getMember
      push '__exc'
      callMethod
      pop
     label115:
    end // of try
  end // of frame 0
end
