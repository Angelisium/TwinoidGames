movie 'marbil.swf' compressed // flash 8, total frames: 1, frame rate: 20 fps, 1x1 px


  defineMovieClip 3 // total frames: 2
  end // of defineMovieClip 3
  
  exportAssets
    3 as 'partLight'
  end // of exportAssets

  defineMovieClip 6 // total frames: 2

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 6
  
  exportAssets
    6 as 'skinBall Content content'
  end // of exportAssets

  defineMovieClip 7 // total frames: 1
  end // of defineMovieClip 7
  
  exportAssets
    7 as 'mcPoint'
  end // of exportAssets

  defineMovieClip 30 // total frames: 30

    frame 29
      stop
    end // of frame 29
  end // of defineMovieClip 30

  defineMovieClip 32 // total frames: 1
  end // of defineMovieClip 32

  defineMovieClip 33 // total frames: 29

    frame 25
      push ''
      removeClip
    end // of frame 25
  end // of defineMovieClip 33
  
  exportAssets
    33 as 'mcBallExplode'
  end // of exportAssets

  defineMovieClip 35 // total frames: 1
  end // of defineMovieClip 35
  
  exportAssets
    35 as 'mcArrow'
  end // of exportAssets

  defineMovieClip 37 // total frames: 1
  end // of defineMovieClip 37
  
  exportAssets
    37 as 'mcBallShadow'
  end // of exportAssets

  defineMovieClip 42 // total frames: 4
  end // of defineMovieClip 42
  
  exportAssets
    42 as 'ball'
  end // of exportAssets

  defineMovieClip 44 // total frames: 1
  end // of defineMovieClip 44

  defineMovieClip 45 // total frames: 8

    frame 7
      push ''
      removeClip
    end // of frame 7
  end // of defineMovieClip 45
  
  exportAssets
    45 as 'mcBallBlink'
  end // of exportAssets

  defineMovieClip 47 // total frames: 10
  end // of defineMovieClip 47
  
  exportAssets
    47 as 'partTwinkle'
  end // of exportAssets

  defineMovieClip 48 // total frames: 1
  end // of defineMovieClip 48

  defineMovieClip 49 // total frames: 11

    frame 10
      push ''
      removeClip
    end // of frame 10
  end // of defineMovieClip 49
  
  exportAssets
    49 as 'mcScoreBang'
  end // of exportAssets

  defineMovieClip 51 // total frames: 1
  end // of defineMovieClip 51

  defineMovieClip 52 // total frames: 11

    frame 10
      push ''
      removeClip
    end // of frame 10
  end // of defineMovieClip 52
  
  exportAssets
    52 as 'mcQueue'
  end // of exportAssets

  defineMovieClip 53 // total frames: 2
  end // of defineMovieClip 53
  
  exportAssets
    53 as 'partScoreBall'
  end // of exportAssets

  defineMovieClip 55 // total frames: 1
  end // of defineMovieClip 55

  defineMovieClip 56 // total frames: 1
  end // of defineMovieClip 56
  
  exportAssets
    56 as 'mcScoreBall'
  end // of exportAssets

  defineMovieClip 59 // total frames: 1
  end // of defineMovieClip 59

  defineMovieClip 60 // total frames: 1
  end // of defineMovieClip 60
  
  exportAssets
    60 as 'mcBoard'
  end // of exportAssets

  defineMovieClip 64 // total frames: 1
  end // of defineMovieClip 64

  defineMovieClip 66 // total frames: 1
  end // of defineMovieClip 66
  
  exportAssets
    66 as 'bg'
  end // of exportAssets

  frame 0
    constants ')PVyX', '-g', 'flash', '7]AJ', '__string_rec', 'Object', '_global', 'flash', '}ZF-m', 'display', '9K', '53kZ-(', '-0]rl', '-iB=', '+KD', 'obj', '*5oz7(', 'push', '((', '_x', ')(', '_y', '5DZk5', '__name__', 'prototype', '__class__', ')153L', 'Math', 'atan2', '}1A{_', 'sqrt', '9T54', 'removeMovieClip', 'remove', '3BjX_', '_xscale', '_yscale', '2sngh', '73m', '2K', '87vE7(', '4u=dZ', ',v0X', '[b', ']b', ',DBRf', '6x9p', '__super__', '849kV', ')7', '+{eA+', '4vK_Q', '_alpha', ';)bt5', '2VhU6', '+7{{r', '_visible', 'play', '(KpGn', '{-kxL', '-V;B', 'pow', '6b', '_rotation', '+DO', '3Wt', '9n6', '+43N', '-A=)', ']nSqs', '9O*r', 'random', '9-', '(VKB', '}Yax5', ']xii)', '*J}8)', '(yaK*', '{==W3(', '44{N', '5;OW;', 'partTwinkle', '(K', '32', '*=_p_', '_totalframes', 'random', 'gotoAndPlay', '2[j9h', '}CL', 'cos', '0Yj1', 'sin', '{)W', '(,9)D', 'min', 'mcQueue', '1U;0', 'blendMode', 'add', 'mcScoreBang', 'partLight', '_MovieClip', '96nT}', '18wU*', '5sgUD(', 'hasOwnProperty', 'call', '+Da3+', ')BnwT', '8VmMl', 'apply', '6cXX(', 'Array', 'length', 'splice', ')otIJ', 'function', ';VOZn', 'f', 'o', '+WZ;m', 'string', 'object', '__enum__', '7t4B (', '+QD*', 'iterator', '1ll a', '7Y-7', '+okqK(', 'arguments', '-', 'haxe', '3[4k{', 'filters', 'text', 'text', '0000', 'geom', '*r', '-UHXC', '9]A', '2KA', '}t}[R', '(v+', '{2', '}2', '9Z 6', '}8,C9', '=', '+Y', ',Y', '+Q}B]', '[F8GJ(', '9Z(8', '5cBEm', ']6b7)', '21Ld)(', ' a5vB', ',l3O-', '3Y-bR', '2[hF', 'abs', ')JhF', '[RhG', '5AhG', '8uD50', 'POSITIVE_INFINITY', '*j,B', '+l4wr', '*AzJN', '*x-]I', ' x8LA(', ']8Sd9(', 'run', 'stop', ']XX}5', ']}PCW', '3h0U4', '+P+T1(', 'log', 'isNaN', 'max', ')GiA', 'fileName', 'Lib.hx', 'lineNumber', 'className', 'mt.bumdum.Num', 'methodName', 'sMod', 'sMod ERROR! (', ',', ')', ']{i', '-[Ra6', '75+O', '0[Y', '{SXC{', '0', ')', '4bfMH(', '2ya 0(', '(', '{mMU7(', ';CYOh', 'Color', '_', 'ra', 'ga', 'ba', 'aa', 'rb', 'gb', 'bb', 'ab', 'setTransform', '(H5 S', '+Dqv=(', '}*Hki', '82z7S', '(Xt', '(B+[0', 'split', 'join', 'GlowFilter', 'blurX', 'blurY', 'strength', 'color', 'inner', 'BlurFilter', '=4H0', 'ColorMatrixFilter', 'matrix', '}*X', ',R', 'attachBitmap', 'BitmapData', '+Hp()', '7DDwp', 'Matrix', 'scale', 'rotate', 'translate', 'ColorTransform', 'draw', '{)H0', '-{rzg', 'Point', 'rectangle', 'applyFilter', 'clone', 'dispose', '3+YQ}', '(j;o7', '-wDX[', ' ]55', '(,JNq', 'fillRect', 'Rectangle', ';EWdZ', '50', 'colorTransform', '[Zk', '__ename__', '__constructs__', 'Shoot', 'Init', '-5;Q', 'toString', ';9tAL', ')qF[', 'View', 'Wait', 'Play', '756X', ';31a', ',=ya', '+7U K', '}-VbH', '5nwDR', '1F=(I', '=cKzE(', '-nvL6', '__interfaces__', '7Pm20(', ';+', '{B,MC', '1Vt}d', '8)yt', '=x)Zk', ',+CO6(', '{p39', '4,01', '6d3*z', '7j3H1', 'mcScoreBall', '=OA', '*OA', '9UeAW', 'smc', '*Um=H(', '4[K{k', '-zx=g', '4MvcB', 'bg', '[Q6w1(', '2awen', 'normal', ')LJ', 'mcBoard', '{+Sn=', 'onRelease', ',cqp5', ']6=8H(', 'onReleaseOutside', 'useHandCursor', '6iyw=', '86Itb', 'mcArrow', '08M8', '8Mh3b', '2e{I', '}PI=', '(dm3b', '=kIA', '+4Z+[', ';6aj0(', '{Cs', '{IrB)(', '4MC5', '0D 6', '7T4cF(', '27uBn', '55pHn', 'copy', '9xqR3(', '*(B7+(', '4mok0', '+oD9l', '0UN5I', '+tq5)', 'Game.hx', 'Game', 'onMessage', 'DIF:', '1q){x', '+Du}V', '4fHu{', '8Z[e,(', '[;4B0(', '+h9w3', '2a[b;(', ';ptpb', '93L', '_xmouse', '_ymouse', 'ball', '}SYp5', 'mcBallShadow', '(+-', ')+-', '=S7A', ';-[;H', 'partScoreBall', 'mcBallExplode', '1F;A', '2F;A', '[W(XN', ')gv94', 'gotoAndStop', 'mcBallBlink', 'this', '__init', '__res', 'MovieClip', 'TextField', 'StyleSheet', '__eval', 'TextFormat', 'Stage', 'TextSnapshot', '__exc'  
    push ')PVyX'
    function2 () (r:1='this')
      push '-g', r:this, 2, 'flash'
      getVariable
      push '7]AJ'
      getMember
      push '__string_rec'
      callMethod
      return
    end // of function 

    setVariable
    push 'flash', 0, 'Object'
    new
    setRegister r:1
    setVariable
    push '_global'
    getVariable
    push 'flash'
    getMember
    setRegister r:2
    enumerateValue
   label1:
    setRegister r:0
    push NULL
    equals
    branchIfTrue label2
    push r:1, r:0, r:2, r:0
    getMember
    setMember
    branch label1
   label2:
    pop
    push 'flash'
    getVariable
    push '}ZF-m', 0, 'Object'
    new
    setRegister r:1
    setMember
    push '_global'
    getVariable
    push 'flash'
    getMember
    push 'display'
    getMember
    setRegister r:2
    enumerateValue
   label3:
    setRegister r:0
    push NULL
    equals
    branchIfTrue label4
    push r:1, r:0, r:2, r:0
    getMember
    setMember
    branch label3
   label4:
    pop
    push '9K', 0, 'Object'
    new
    setRegister r:1
    setVariable
    push '_global'
    getVariable
    push '9K'
    getMember
    setRegister r:2
    enumerateValue
   label5:
    setRegister r:0
    push NULL
    equals
    branchIfTrue label6
    push r:1, r:0, r:2, r:0
    getMember
    setMember
    branch label5
   label6:
    pop
    push '9K'
    getVariable
    push '53kZ-(', 0, 'Object'
    new
    setRegister r:1
    setMember
    push '_global'
    getVariable
    push '9K'
    getMember
    push '53kZ-('
    getMember
    setRegister r:2
    enumerateValue
   label7:
    setRegister r:0
    push NULL
    equals
    branchIfTrue label8
    push r:1, r:0, r:2, r:0
    getMember
    setMember
    branch label7
   label8:
    pop
    push '9K'
    getVariable
    push '53kZ-('
    getMember
    push '-0]rl'
    function2 (r:2='') (r:1='this')
      push r:this, '-iB=', r:2
      setMember
      push r:this, '-iB='
      getMember
      setRegister r:3
      pop
      push r:3, '+KD', r:this
      setMember
      push r:this, '-iB='
      getMember
      push 'obj', r:this
      setMember
      push r:this, 1, '9K'
      getVariable
      push '53kZ-('
      getMember
      push '-0]rl'
      getMember
      push '*5oz7('
      getMember
      push 'push'
      callMethod
      pop
      push r:this, '((', r:this, '-iB='
      getMember
      push '_x'
      getMember
      setMember
      push r:this, ')(', r:this, '-iB='
      getMember
      push '_y'
      getMember
      setMember
      push r:this, '-iB='
      getMember
      push '_x'
      getMember
      push 0
      equals
      dup
      not
      branchIfTrue label9
      pop
      push r:this, '-iB='
      getMember
      push '_y'
      getMember
      push 0
      equals
     label9:
      not
      branchIfTrue label10
      push r:this, '-iB='
      getMember
      push '_x', -100
      setMember
      push r:this, '-iB='
      getMember
      push '_y', -100
      setMember
      push r:this, '((', 0
      setMember
      push r:this, ')(', 0
      setMember
     label10:
      push r:this, '5DZk5', 100
      setMember
    end // of function 

    setRegister r:0
    setMember
    push r:0, '__name__', '-0]rl', '53kZ-(', '9K', 3
    initArray
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '__class__', r:0
    setMember
    push r:1, ')153L'
    function2 (r:2='') (r:1='this')
      push r:2, '(('
      getMember
      push r:this, '(('
      getMember
      subtract
      setRegister r:3
      pop
      push r:2, ')('
      getMember
      push r:this, ')('
      getMember
      subtract
      setRegister r:4
      pop
      push r:3, r:4, 2, 'Math'
      getVariable
      push 'atan2'
      callMethod
      return
    end // of function 

    setMember
    push r:1, '}1A{_'
    function2 (r:2='') (r:1='this')
      push r:2, '(('
      getMember
      push r:this, '(('
      getMember
      subtract
      setRegister r:3
      pop
      push r:2, ')('
      getMember
      push r:this, ')('
      getMember
      subtract
      setRegister r:4
      pop
      push r:3, r:3
      multiply
      push r:4, r:4
      multiply
      add
      push 1, 'Math'
      getVariable
      push 'sqrt'
      callMethod
      return
    end // of function 

    setMember
    push r:1, '9T54'
    function2 () (r:1='this')
      push 0, r:this, '-iB='
      getMember
      push 'removeMovieClip'
      callMethod
      pop
      push r:this, 1, '9K'
      getVariable
      push '53kZ-('
      getMember
      push '-0]rl'
      getMember
      push '*5oz7('
      getMember
      push 'remove'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '-iB=', NULL
    setMember
    push r:1, '5DZk5', NULL
    setMember
    push r:1, '3BjX_'
    function2 (r:2='') (r:1='this')
      push r:this, '5DZk5', r:2
      setMember
      push r:this, '-iB='
      getMember
      push '_xscale', r:2
      setMember
      push r:this, '-iB='
      getMember
      push '_yscale', r:2
      setMember
    end // of function 

    setMember
    push r:1, '2sngh'
    function2 (r:2='', r:3='', r:4='') (r:1='this')
      push r:4, NULL
      equals
      not
      branchIfTrue label11
      push 1, 0
      divide
      setRegister r:4
      pop
     label11:
      push r:2, '(('
      getMember
      push r:this, '(('
      getMember
      subtract
      setRegister r:5
      pop
      push r:2, ')('
      getMember
      push r:this, ')('
      getMember
      subtract
      setRegister r:6
      pop
      push r:this, '((', r:this, '(('
      getMember
      push r:4, r:5, r:3
      multiply
      push 0, r:4
      subtract
      push 3, '9K'
      getVariable
      push '53kZ-('
      getMember
      push '73m'
      getMember
      push '2K'
      callMethod
      add
      setMember
      push r:this, ')(', r:this, ')('
      getMember
      push r:4, r:6, r:3
      multiply
      push 0, r:4
      subtract
      push 3, '9K'
      getVariable
      push '53kZ-('
      getMember
      push '73m'
      getMember
      push '2K'
      callMethod
      add
      setMember
    end // of function 

    setMember
    push r:1, '87vE7('
    function2 () (r:1='this')
      push r:this, '-iB='
      getMember
      push '_x', r:this, '(('
      getMember
      setMember
      push r:this, '-iB='
      getMember
      push '_y', r:this, ')('
      getMember
      setMember
    end // of function 

    setMember
    push r:1, '4u=dZ'
    function2 () (r:1='this')
      push r:this, '-iB='
      getMember
      push '_x', r:this, '(('
      getMember
      setMember
      push r:this, '-iB='
      getMember
      push '_y', r:this, ')('
      getMember
      setMember
    end // of function 

    setMember
    push r:1, '((', NULL
    setMember
    push r:1, ')(', NULL
    setMember
    push '9K'
    getVariable
    push '53kZ-('
    getMember
    push ',v0X'
    function2 (r:3='') (r:1='this', r:2='super')
      push r:3, 1, r:super, UNDEF
      callMethod
      pop
      push r:this, '[b', 0
      setMember
      push r:this, ']b', 0
      setMember
      push r:this, ',DBRf', 10
      setMember
      push r:this, '6x9p', 100
      setMember
    end // of function 

    setRegister r:0
    setMember
    push r:0, '__name__', ',v0X', '53kZ-(', '9K', 3
    initArray
    setMember
    push r:0, '__super__', '9K'
    getVariable
    push '53kZ-('
    getMember
    push '-0]rl'
    getMember
    setMember
    push r:0, '9K'
    getVariable
    push '53kZ-('
    getMember
    push '-0]rl'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '__class__', r:0
    setMember
    push r:1, '6x9p', NULL
    setMember
    push r:1, ',DBRf', NULL
    setMember
    push r:1, '849kV', NULL
    setMember
    push r:1, ')7', NULL
    setMember
    push r:1, '+{eA+', NULL
    setMember
    push r:1, '9T54'
    function2 () (r:1='this', r:2='super')
      push 0, r:super, '9T54'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '4vK_Q'
    function2 (r:2='') (r:1='this')
      push r:this, '6x9p', r:2
      setMember
      push r:this, '-iB='
      getMember
      push '_alpha', r:this, '6x9p'
      getMember
      setMember
    end // of function 

    setMember
    push r:1, ';)bt5', NULL
    setMember
    push r:1, '2VhU6', NULL
    setMember
    push r:1, '+7{{r'
    function2 (r:2='', r:3='', r:4='') (r:1='this')
      push r:4, NULL
      equals
      not
      branchIfTrue label12
      push 1, 0
      divide
      setRegister r:4
      pop
     label12:
      push r:2, '(('
      getMember
      push r:this, '(('
      getMember
      subtract
      setRegister r:5
      pop
      push r:2, ')('
      getMember
      push r:this, ')('
      getMember
      subtract
      setRegister r:6
      pop
      push r:this, '[b', r:this, '[b'
      getMember
      push r:4, r:5, r:3
      multiply
      push 0, r:4
      subtract
      push 3, '9K'
      getVariable
      push '53kZ-('
      getMember
      push '73m'
      getMember
      push '2K'
      callMethod
      add
      setMember
      push r:this, ']b', r:this, ']b'
      getMember
      push r:4, r:6, r:3
      multiply
      push 0, r:4
      subtract
      push 3, '9K'
      getVariable
      push '53kZ-('
      getMember
      push '73m'
      getMember
      push '2K'
      callMethod
      add
      setMember
    end // of function 

    setMember
    push r:1, '87vE7('
    function2 () (r:1='this', r:2='super')
      push r:this, ';)bt5'
      getMember
      push NULL
      equals
      not
      not
      branchIfTrue label14
      push r:this, ';)bt5', r:this, ';)bt5'
      getMember
      decrement
      setMember
      push r:this, ';)bt5'
      getMember
      push 0
      lessThan
      not
      branchIfTrue label13
      push r:this, ';)bt5', NULL
      setMember
      push r:this, '-iB='
      getMember
      push '_visible', TRUE
      setMember
      push 0, r:this, '-iB='
      getMember
      push 'play'
      callMethod
      pop
     label13:
      push UNDEF
      return
     label14:
      push r:this, '(KpGn'
      getMember
      push NULL
      equals
      not
      not
      branchIfTrue label15
      push r:this, ']b', r:this, ']b'
      getMember
      push r:this, '(KpGn'
      getMember
      push '9K'
      getVariable
      push '{-kxL'
      getMember
      push '-V;B'
      getMember
      multiply
      add
      setMember
     label15:
      push r:this, '+{eA+'
      getMember
      push NULL
      equals
      not
      not
      branchIfTrue label16
      push '9K'
      getVariable
      push '{-kxL'
      getMember
      push '-V;B'
      getMember
      push r:this, '+{eA+'
      getMember
      push 2, 'Math'
      getVariable
      push 'pow'
      callMethod
      setRegister r:3
      pop
      push r:this, '[b', r:this, '[b'
      getMember
      push r:3
      multiply
      setMember
      push r:this, ']b', r:this, ']b'
      getMember
      push r:3
      multiply
      setMember
     label16:
      push r:this, '((', r:this, '(('
      getMember
      push r:this, '[b'
      getMember
      push '9K'
      getVariable
      push '{-kxL'
      getMember
      push '-V;B'
      getMember
      multiply
      add
      setMember
      push r:this, ')(', r:this, ')('
      getMember
      push r:this, ']b'
      getMember
      push '9K'
      getVariable
      push '{-kxL'
      getMember
      push '-V;B'
      getMember
      multiply
      add
      setMember
      push r:this, '6b'
      getMember
      push NULL
      equals
      not
      not
      branchIfTrue label17
      push r:this, '-iB='
      getMember
      push '_rotation', r:this, '-iB='
      getMember
      push '_rotation'
      getMember
      push r:this, '6b'
      getMember
      push '9K'
      getVariable
      push '{-kxL'
      getMember
      push '-V;B'
      getMember
      multiply
      add
      setMember
     label17:
      push r:this, ')7'
      getMember
      push NULL
      equals
      not
      not
      branchIfTrue label18
      push r:this, '6b', r:this, '6b'
      getMember
      push '9K'
      getVariable
      push '{-kxL'
      getMember
      push '-V;B'
      getMember
      push r:this, ')7'
      getMember
      push 2, 'Math'
      getVariable
      push 'pow'
      callMethod
      multiply
      setMember
     label18:
      push r:this, '+DO'
      getMember
      push NULL
      equals
      not
      not
      branchIfTrue label19
      push r:this, '-iB='
      getMember
      push '_xscale', r:this, '-iB='
      getMember
      push '_xscale'
      getMember
      push '9K'
      getVariable
      push '{-kxL'
      getMember
      push '-V;B'
      getMember
      push r:this, '+DO'
      getMember
      push 2, 'Math'
      getVariable
      push 'pow'
      callMethod
      multiply
      setMember
      push r:this, '-iB='
      getMember
      push '_yscale', r:this, '-iB='
      getMember
      push '_xscale'
      getMember
      setMember
     label19:
      push r:this, '2VhU6'
      getMember
      push NULL
      equals
      not
      not
      branchIfTrue label27
      push r:this, '2VhU6', r:this, '2VhU6'
      getMember
      push '9K'
      getVariable
      push '{-kxL'
      getMember
      push '-V;B'
      getMember
      subtract
      setMember
      push r:this, '2VhU6'
      getMember
      push r:this, ',DBRf'
      getMember
      lessThan
      not
      branchIfTrue label27
      push r:this, '2VhU6'
      getMember
      push r:this, ',DBRf'
      getMember
      divide
      setRegister r:3
      pop
      push r:this, '849kV'
      getMember
      setRegister r:4
      push -1
      equals
      branchIfTrue label20
      push r:4, 0
      equals
      branchIfTrue label21
      push r:4, 1
      equals
      branchIfTrue label22
      push r:4, 2
      equals
      branchIfTrue label23
      push r:4, 3
      equals
      branchIfTrue label24
      push r:4, 4
      equals
      branchIfTrue label25
      push r:this, '-iB='
      getMember
      push '_alpha', r:3, r:this, '6x9p'
      getMember
      multiply
      setMember
      branch label26
     label20:
      branch label26
     label21:
      push r:this, '-iB='
      getMember
      push '_xscale', r:3, r:this, '5DZk5'
      getMember
      multiply
      setMember
      push r:this, '-iB='
      getMember
      push '_yscale', r:3, r:this, '5DZk5'
      getMember
      multiply
      setMember
      branch label26
     label22:
      push r:this, '-iB='
      getMember
      push '_visible', r:this, '2VhU6'
      getMember
      push 1, '3Wt'
      getVariable
      push '9n6'
      callMethod
      push 4
      modulo
      push 1
      greaterThan
      setMember
      branch label26
     label23:
      push 0, r:this, '-iB='
      getMember
      push 'play'
      callMethod
      pop
      branch label26
     label24:
      push r:this, '-iB='
      getMember
      push '_yscale', r:3, r:this, '5DZk5'
      getMember
      multiply
      setMember
      branch label26
     label25:
      push 1, r:3
      subtract
      push 16
      multiply
      setRegister r:5
      pop
      push 0, r:5, r:this, '-iB='
      getMember
      push 3, '9K'
      getVariable
      push '53kZ-('
      getMember
      push '+43N'
      getMember
      push '-A=)'
      callMethod
      pop
      push r:this, '-iB='
      getMember
      push '_alpha', r:3, r:this, '6x9p'
      getMember
      multiply
      setMember
      branch label26
     label26:
      push r:this, '2VhU6'
      getMember
      push 0
      greaterThan
      not
      not
      branchIfTrue label27
      push 0, r:this, '9T54'
      callMethod
      pop
     label27:
      push 0, r:super, '87vE7('
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '6b', NULL
    setMember
    push r:1, '+DO', NULL
    setMember
    push r:1, '[b', NULL
    setMember
    push r:1, ']b', NULL
    setMember
    push r:1, '(KpGn', NULL
    setMember
    push ']nSqs'
    function2 (r:3='') (r:1='this', r:2='super')
      push r:3, 1, r:super, UNDEF
      callMethod
      pop
      push r:this, '9O*r', 0, 'Math'
      getVariable
      push 'random'
      callMethod
      push 6.28
      multiply
      setMember
      push r:this, '9-', 0.1
      setMember
      push r:this, '(VKB', 0.1
      setMember
      push r:this, '}Yax5', 0
      setMember
      push r:this, '+{eA+', 0.94
      setMember
      push r:this, ']xii)', 0, 'Math'
      getVariable
      push 'random'
      callMethod
      push 6.28
      multiply
      setMember
    end // of function 

    setRegister r:0
    setVariable
    push r:0, '__name__', ']nSqs', 1
    initArray
    setMember
    push r:0, '__super__', '9K'
    getVariable
    push '53kZ-('
    getMember
    push ',v0X'
    getMember
    setMember
    push r:0, '9K'
    getVariable
    push '53kZ-('
    getMember
    push ',v0X'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '__class__', r:0
    setMember
    push r:1, '9O*r', NULL
    setMember
    push r:1, '9-', NULL
    setMember
    push r:1, '*J}8)', NULL
    setMember
    push r:1, ']xii)', NULL
    setMember
    push r:1, '(yaK*', NULL
    setMember
    push r:1, '{==W3('
    function2 () (r:1='this')
      push '44{N'
      getVariable
      push '5;OW;'
      getMember
      push 'partTwinkle', 2, '44{N'
      getVariable
      push '(K'
      getMember
      push '32'
      getMember
      push '*=_p_'
      callMethod
      push 1, '9K'
      getVariable
      push '53kZ-('
      getMember
      push ',v0X'
      newMethod
      setRegister r:2
      pop
      push r:2, '-iB='
      getMember
      push '_totalframes'
      getMember
      push 1, '3Wt'
      getVariable
      push 'random'
      callMethod
      push 1
      add
      push 1, r:2, '-iB='
      getMember
      push 'gotoAndPlay'
      callMethod
      pop
      push r:2, '2VhU6', 10, 0, 'Math'
      getVariable
      push 'random'
      callMethod
      push 25
      multiply
      add
      setMember
      push 50, 0, 'Math'
      getVariable
      push 'random'
      callMethod
      push 100
      multiply
      add
      push 1, r:2, '3BjX_'
      callMethod
      pop
      push r:2, '849kV', 0
      setMember
      push r:2
      return
    end // of function 

    setMember
    push r:1, '}Yax5', NULL
    setMember
    push r:1, '2[j9h', NULL
    setMember
    push r:1, '}CL', NULL
    setMember
    push r:1, '(VKB', NULL
    setMember
    push r:1, '87vE7('
    function2 () (r:1='this', r:2='super')
      push r:this, '(('
      getMember
      setRegister r:3
      pop
      push r:this, ')('
      getMember
      setRegister r:4
      pop
      push r:this, ']xii)', r:this, ']xii)'
      getMember
      push 64
      add
      push 628
      modulo
      setMember
      push r:this, '9O*r', r:this, '9O*r'
      getMember
      push r:this, ']xii)'
      getMember
      push 0.01
      multiply
      push 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push 0.15
      multiply
      add
      setMember
      push r:this, '}CL'
      getMember
      push '_x'
      getMember
      push r:this, '(('
      getMember
      subtract
      setRegister r:5
      pop
      push r:this, '}CL'
      getMember
      push '_y'
      getMember
      push r:this, ')('
      getMember
      subtract
      setRegister r:6
      pop
      push 3.14, r:5, r:6, 2, 'Math'
      getVariable
      push 'atan2'
      callMethod
      push r:this, '9O*r'
      getMember
      subtract
      push 2, '9K'
      getVariable
      push '53kZ-('
      getMember
      push '73m'
      getMember
      push '0Yj1'
      callMethod
      setRegister r:7
      pop
      push r:this, '9O*r', r:this, '9O*r'
      getMember
      push r:this, '(VKB'
      getMember
      push r:7, r:this, '9-'
      getMember
      multiply
      push 0, r:this, '(VKB'
      getMember
      subtract
      push 3, '9K'
      getVariable
      push '53kZ-('
      getMember
      push '73m'
      getMember
      push '2K'
      callMethod
      add
      setMember
      push r:this, '((', r:this, '(('
      getMember
      push r:this, '9O*r'
      getMember
      push 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push r:this, '}Yax5'
      getMember
      multiply
      add
      setMember
      push r:this, ')(', r:this, ')('
      getMember
      push r:this, '9O*r'
      getMember
      push 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push r:this, '}Yax5'
      getMember
      multiply
      add
      setMember
      push r:this, '}Yax5', r:this, '}Yax5'
      getMember
      push ']nSqs'
      getVariable
      push '{)W'
      getMember
      add
      setMember
      push r:this, '}Yax5', r:this, '}Yax5'
      getMember
      push ']nSqs'
      getVariable
      push '(,9)D'
      getMember
      multiply
      setMember
      push r:this, '9-', 1, r:this, '9-'
      getMember
      push 0.01
      add
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      setMember
      push r:this, '(VKB', 1, r:this, '(VKB'
      getMember
      push 0.01
      add
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      setMember
      push 0, r:super, '87vE7('
      callMethod
      pop
      push r:this, '-iB='
      getMember
      push '_visible'
      getMember
      not
      branchIfTrue label28
      push r:this, '(('
      getMember
      push r:3
      subtract
      setRegister r:8
      pop
      push r:this, ')('
      getMember
      push r:4
      subtract
      setRegister r:9
      pop
      push '44{N'
      getVariable
      push '5;OW;'
      getMember
      push 'mcQueue', 2, '44{N'
      getVariable
      push '(K'
      getMember
      push '32'
      getMember
      push '*=_p_'
      callMethod
      setRegister r:10
      pop
      push r:10, '_x', r:3
      setMember
      push r:10, '_y', r:4
      setMember
      push r:10, '_rotation', r:8, r:9, 2, 'Math'
      getVariable
      push 'atan2'
      callMethod
      push 0.0174
      divide
      setMember
      push r:10, '_xscale', r:8, r:8
      multiply
      push r:9, r:9
      multiply
      add
      push 1, 'Math'
      getVariable
      push 'sqrt'
      callMethod
      setMember
      push r:this, '*J}8)'
      getMember
      push 2, 10, r:10, 4, '9K'
      getVariable
      push '53kZ-('
      getMember
      push '+43N'
      getMember
      push '1U;0'
      callMethod
      pop
      push r:10, 'blendMode', 'add'
      setMember
     label28:
      push 1
      setRegister r:8
      pop
      push 0
      setRegister r:9
      pop
      push r:8
      setRegister r:10
      pop
     label29:
      push r:9, r:10
      lessThan
      not
      branchIfTrue label30
      push r:9
      setRegister r:11
      pop
      push r:9
      increment
      setRegister r:9
      pop
      push 0, r:this, '{==W3('
      callMethod
      setRegister r:12
      pop
      push r:12, '((', r:this, '(('
      getMember
      push 0, 'Math'
      getVariable
      push 'random'
      callMethod
      push 2
      multiply
      push 1
      subtract
      push 14
      multiply
      add
      setMember
      push r:12, ')(', r:this, ')('
      getMember
      push 0, 'Math'
      getVariable
      push 'random'
      callMethod
      push 2
      multiply
      push 1
      subtract
      push 14
      multiply
      add
      setMember
      branch label29
     label30:
      push r:this, '}CL'
      getMember
      push '_x'
      getMember
      push r:this, '(('
      getMember
      subtract
      setRegister r:9
      pop
      push r:this, '}CL'
      getMember
      push '_y'
      getMember
      push r:this, ')('
      getMember
      subtract
      setRegister r:10
      pop
      push r:9, r:9
      multiply
      push r:10, r:10
      multiply
      add
      push 1, 'Math'
      getVariable
      push 'sqrt'
      callMethod
      push 12
      lessThan
      not
      branchIfTrue label33
      push '44{N'
      getVariable
      push '5;OW;'
      getMember
      push 'mcScoreBang', 2, '44{N'
      getVariable
      push '(K'
      getMember
      push '32'
      getMember
      push '*=_p_'
      callMethod
      setRegister r:11
      pop
      push r:11, '_x', r:this, '}CL'
      getMember
      push '_x'
      getMember
      setMember
      push r:11, '_y', r:this, '}CL'
      getMember
      push '_y'
      getMember
      setMember
      push r:this, '((', r:this, '(('
      getMember
      push r:this, '}CL'
      getMember
      push '_x'
      getMember
      push r:this, '(('
      getMember
      subtract
      push 0.5
      multiply
      add
      setMember
      push r:this, ')(', r:this, ')('
      getMember
      push r:this, '}CL'
      getMember
      push '_y'
      getMember
      push r:this, ')('
      getMember
      subtract
      push 0.5
      multiply
      add
      setMember
      push r:this, '}CL'
      getMember
      push '_visible', TRUE
      setMember
      push 10
      setRegister r:12
      pop
      push 1
      setRegister r:13
      pop
      push 0
      setRegister r:14
      pop
      push r:12
      setRegister r:15
      pop
     label31:
      push r:14, r:15
      lessThan
      not
      branchIfTrue label32
      push r:14
      setRegister r:16
      pop
      push r:14
      increment
      setRegister r:14
      pop
      push r:16, 0, 'Math'
      getVariable
      push 'random'
      callMethod
      add
      push r:12
      divide
      push 6.28
      multiply
      setRegister r:17
      pop
      push r:17, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      setRegister r:18
      pop
      push r:17, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      setRegister r:19
      pop
      push 0, 'Math'
      getVariable
      push 'random'
      callMethod
      push 6
      multiply
      setRegister r:20
      pop
      push '44{N'
      getVariable
      push '5;OW;'
      getMember
      push 'partLight', 2, '44{N'
      getVariable
      push '(K'
      getMember
      push '32'
      getMember
      push '*=_p_'
      callMethod
      push 1, '9K'
      getVariable
      push '53kZ-('
      getMember
      push ',v0X'
      newMethod
      setRegister r:21
      pop
      push r:21, '((', r:this, '}CL'
      getMember
      push '_x'
      getMember
      push r:18, r:20
      multiply
      push r:13
      multiply
      add
      setMember
      push r:21, ')(', r:this, '}CL'
      getMember
      push '_y'
      getMember
      push r:19, r:20
      multiply
      push r:13
      multiply
      add
      setMember
      push r:21, '[b', r:18, r:20
      multiply
      setMember
      push r:21, ']b', r:19, r:20
      multiply
      setMember
      push r:21, '+{eA+', 0.7
      setMember
      push 50, 0, 'Math'
      getVariable
      push 'random'
      callMethod
      push 75
      multiply
      add
      push 1, r:21, '3BjX_'
      callMethod
      pop
      push r:21, '2VhU6', 10, 0, 'Math'
      getVariable
      push 'random'
      callMethod
      push 10
      multiply
      add
      setMember
      push r:21, '849kV', 0
      setMember
      push r:21, '-iB='
      getMember
      push 'blendMode', 'add'
      setMember
      push 2, 1, '3Wt'
      getVariable
      push 'random'
      callMethod
      push 1
      add
      push 1, r:21, '-iB='
      getMember
      push 'gotoAndPlay'
      callMethod
      pop
      push r:21, '-iB='
      getMember
      push '_alpha', 50
      setMember
      branch label31
     label32:
      push 0, r:this, '9T54'
      callMethod
      pop
     label33:
    end // of function 

    setMember
    push 'flash'
    getVariable
    push '_MovieClip', 0, 'Object'
    new
    setRegister r:1
    setMember
    push '_global'
    getVariable
    push 'flash'
    getMember
    push '_MovieClip'
    getMember
    setRegister r:2
    enumerateValue
   label34:
    setRegister r:0
    push NULL
    equals
    branchIfTrue label35
    push r:1, r:0, r:2, r:0
    getMember
    setMember
    branch label34
   label35:
    pop
    push '96nT}'
    function2 () (r:1='this', r:2='super')
    end // of function 

    setRegister r:0
    setVariable
    push r:0, '__name__', '96nT}', 1
    initArray
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '__class__', r:0
    setMember
    push r:0, '18wU*'
    function2 () (r:1='this')
      push 0, '_global'
      getVariable
      push 'Object'
      newMethod
      return
    end // of function 

    setMember
    push r:0, '5sgUD('
    function2 (r:2='', r:3='') (r:1='this')
      push r:3, r:2, 2, r:this, 'hasOwnProperty'
      getMember
      push 'call'
      callMethod
      return
    end // of function 

    setMember
    push r:0, '+Da3+'
    function2 (r:2='', r:3='') (r:1='this')
      push r:2, r:3
      getMember
      return
    end // of function 

    setMember
    push r:0, ')BnwT'
    function2 (r:2='', r:3='', r:4='') (r:1='this')
      push r:2, r:3, r:4
      setMember
    end // of function 

    setMember
    push r:0, '8VmMl'
    function2 (r:2='', r:3='', r:4='') (r:1='this')
      push r:4, r:2, 2, r:3, 'apply'
      callMethod
      return
    end // of function 

    setMember
    push r:0, '6cXX('
    function2 (r:2='') (r:1='this')
      push r:2, NULL
      equals
      not
      branchIfTrue label36
      push 0, 'Array'
      new
      return
     label36:
      push 0, 'Array'
      new
      setRegister r:4
      pop
      push r:2
      enumerateValue
     label37:
      setRegister r:0
      push NULL
      equals
      branchIfTrue label38
      push r:0, 1, r:4, 'push'
      callMethod
      pop
      branch label37
     label38:
      push r:4
      setRegister r:3
      pop
      push 0
      setRegister r:4
      pop
     label39:
      push r:4, r:3, 'length'
      getMember
      lessThan
      not
      branchIfTrue label42
      push r:3, r:4
      getMember
      push r:2, 2, r:3, 'hasOwnProperty'
      getMember
      push 'call'
      callMethod
      not
      branchIfTrue label40
      push r:4
      increment
      setRegister r:4
      pop
      branch label41
     label40:
      push 1, r:4, 2, r:3, 'splice'
      callMethod
      pop
     label41:
      branch label39
     label42:
      push r:3
      return
    end // of function 

    setMember
    push r:0, ')otIJ'
    function2 (r:2='') (r:1='this')
      push r:2
      typeof
      push 'function'
      equals
      dup
      not
      branchIfTrue label43
      pop
      push r:2, '__name__'
      getMember
      push NULL
      equals
     label43:
      return
    end // of function 

    setMember
    push r:0, ';VOZn'
    function2 (r:2='', r:3='') (r:1='this')
      push r:2, r:3
      equals
      not
      branchIfTrue label44
      push TRUE
      return
     label44:
      push r:2, 1, '96nT}'
      getVariable
      push ')otIJ'
      callMethod
      not
      dup
      branchIfTrue label45
      pop
      push r:3, 1, '96nT}'
      getVariable
      push ')otIJ'
      callMethod
      not
     label45:
      not
      branchIfTrue label46
      push FALSE
      return
     label46:
      push r:2, 'f'
      getMember
      push r:3, 'f'
      getMember
      equals
      dup
      not
      branchIfTrue label47
      pop
      push r:2, 'o'
      getMember
      push r:3, 'o'
      getMember
      equals
      dup
      not
      branchIfTrue label47
      pop
      push r:2, 'f'
      getMember
      push NULL
      equals
      not
     label47:
      return
    end // of function 

    setMember
    push r:0, '+WZ;m'
    function2 (r:2='') (r:1='this')
      push r:2
      typeof
      setRegister r:3
      pop
      push r:3, 'string'
      equals
      dup
      branchIfTrue label49
      pop
      push r:3, 'object'
      equals
      dup
      not
      branchIfTrue label48
      pop
      push r:2, '__enum__'
      getMember
      not
     label48:
      dup
      branchIfTrue label49
      pop
      push r:3, 'function'
      equals
      dup
      not
      branchIfTrue label49
      pop
      push r:2, '__name__'
      getMember
      push NULL
      equals
      not
     label49:
      return
    end // of function 

    setMember
    push r:0, '7t4B ('
    function2 (r:2='', r:3='') (r:1='this')
      push r:3, r:2, 2, r:this, 'hasOwnProperty'
      getMember
      push 'call'
      callMethod
      push TRUE
      equals
      not
      not
      branchIfTrue label50
      push FALSE
      return
     label50:
      push r:2, r:3
      delete
      pop
      push TRUE
      return
    end // of function 

    setMember
    push r:0, '+QD*'
    function2 (r:2='') (r:1='this')
      push 0, '96nT}'
      getVariable
      push '18wU*'
      callMethod
      setRegister r:3
      pop
      push 0, r:2, 1, '96nT}'
      getVariable
      push '6cXX('
      callMethod
      push 'iterator'
      callMethod
      setRegister r:4
      pop
     label51:
      push 0, r:4, '1ll a'
      callMethod
      not
      branchIfTrue label52
      push 0, r:4, '7Y-7'
      callMethod
      setRegister r:5
      pop
      push r:5, r:2, 2, '96nT}'
      getVariable
      push '+Da3+'
      callMethod
      push r:5, r:3, 3, '96nT}'
      getVariable
      push ')BnwT'
      callMethod
      pop
      branch label51
     label52:
      push r:3
      return
    end // of function 

    setMember
    push r:0, '+okqK('
    function2 ('-') (r:1='this')
      function2 () (r:1='this', 'arguments')
        push 'arguments'
        getVariable
        push 1, '-'
        callFunction
        return
      end // of function 

      return
    end // of function 

    setMember
    push 'haxe', 0, 'Object'
    new
    setRegister r:1
    setVariable
    push '_global'
    getVariable
    push 'haxe'
    getMember
    setRegister r:2
    enumerateValue
   label53:
    setRegister r:0
    push NULL
    equals
    branchIfTrue label54
    push r:1, r:0, r:2, r:0
    getMember
    setMember
    branch label53
   label54:
    pop
    push 'flash'
    getVariable
    push '3[4k{', 0, 'Object'
    new
    setRegister r:1
    setMember
    push '_global'
    getVariable
    push 'flash'
    getMember
    push 'filters'
    getMember
    setRegister r:2
    enumerateValue
   label55:
    setRegister r:0
    push NULL
    equals
    branchIfTrue label56
    push r:1, r:0, r:2, r:0
    getMember
    setMember
    branch label55
   label56:
    pop
    push 'flash'
    getVariable
    push 'text', 0, 'Object'
    new
    setRegister r:1
    setMember
    push '_global'
    getVariable
    push 'flash'
    getMember
    push 'text'
    getMember
    setRegister r:2
    enumerateValue
   label57:
    setRegister r:0
    push NULL
    equals
    branchIfTrue label58
    push r:1, r:0, r:2, r:0
    getMember
    setMember
    branch label57
   label58:
    pop
    push 'flash'
    getVariable
    push '0000', 0, 'Object'
    new
    setRegister r:1
    setMember
    push '_global'
    getVariable
    push 'flash'
    getMember
    push 'geom'
    getMember
    setRegister r:2
    enumerateValue
   label59:
    setRegister r:0
    push NULL
    equals
    branchIfTrue label60
    push r:1, r:0, r:2, r:0
    getMember
    setMember
    branch label59
   label60:
    pop
    push '*r'
    function2 () (r:1='this', r:2='super')
    end // of function 

    setRegister r:0
    setVariable
    push r:0, '__name__', '*r', 1
    initArray
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '__class__', r:0
    setMember
    push '-UHXC'
    function2 (r:2='', r:3='') (r:1='this')
      push r:this, '9]A', r:2
      setMember
      push r:this, '2KA', r:3
      setMember
    end // of function 

    setRegister r:0
    setVariable
    push r:0, '__name__', '-UHXC', 1
    initArray
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '__class__', r:0
    setMember
    push r:1, '1ll a'
    function2 () (r:1='this')
      push r:this, '9]A'
      getMember
      push r:this, '2KA'
      getMember
      lessThan
      return
    end // of function 

    setMember
    push r:1, '2KA', NULL
    setMember
    push r:1, '9]A', NULL
    setMember
    push r:1, '7Y-7'
    function2 () (r:1='this')
      push r:this, '9]A'
      getMember
      push r:this, '9]A', r:this, '9]A'
      getMember
      increment
      setMember
      return
    end // of function 

    setMember
    push '}t}[R'
    function2 () (r:1='this', r:2='super')
    end // of function 

    setRegister r:0
    setVariable
    push r:0, '__name__', '}t}[R', 1
    initArray
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '__class__', r:0
    setMember
    push r:1, '(v+', NULL
    setMember
    push r:1, '{2', NULL
    setMember
    push r:1, '}2', NULL
    setMember
    push r:1, '9Z 6', NULL
    setMember
    push r:1, '}8,C9', NULL
    setMember
    push r:1, '=', NULL
    setMember
    push r:1, '+Y', NULL
    setMember
    push r:1, ',Y', NULL
    setMember
    push r:1, '+Q}B]', NULL
    setMember
    push r:1, '((', NULL
    setMember
    push r:1, ')(', NULL
    setMember
    push '[F8GJ('
    function2 (r:2='', r:3='', r:4='') (r:1='this')
      push r:this, '9Z(8', 0, 'Array'
      new
      setMember
      push r:this, '5cBEm', r:2
      setMember
      push r:this, ']6b7)', r:3
      setMember
      push r:this, '21Ld)(', r:4
      setMember
      push r:this, ' a5vB', 0
      setMember
    end // of function 

    setRegister r:0
    setVariable
    push r:0, '__name__', '[F8GJ(', 1
    initArray
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '__class__', r:0
    setMember
    push r:1, ']6b7)', NULL
    setMember
    push r:1, '21Ld)(', NULL
    setMember
    push r:1, ',l3O-'
    function2 (r:2='', r:3='') (r:1='this')
      push r:2, '(('
      getMember
      push r:3, '(('
      getMember
      subtract
      setRegister r:4
      pop
      push r:2, ')('
      getMember
      push r:3, ')('
      getMember
      subtract
      setRegister r:5
      pop
      push r:4, r:4
      multiply
      push r:5, r:5
      multiply
      add
      push 1, 'Math'
      getVariable
      push 'sqrt'
      callMethod
      setRegister r:6
      pop
      push r:4, r:6
      divide
      setRegister r:4
      pop
      push r:5, r:6
      divide
      setRegister r:5
      pop
      push r:2, '{2'
      getMember
      push r:4
      multiply
      push r:2, '}2'
      getMember
      push r:5
      multiply
      add
      setRegister r:7
      pop
      push r:3, '{2'
      getMember
      push r:4
      multiply
      push r:3, '}2'
      getMember
      push r:5
      multiply
      add
      setRegister r:8
      pop
      push 2, r:7, r:8
      subtract
      multiply
      push r:2, '9Z 6'
      getMember
      push r:3, '9Z 6'
      getMember
      add
      divide
      setRegister r:9
      pop
      push r:2, '{2', r:2, '{2'
      getMember
      push r:9, r:3, '9Z 6'
      getMember
      multiply
      push r:4
      multiply
      subtract
      setMember
      push r:2, '}2', r:2, '}2'
      getMember
      push r:9, r:3, '9Z 6'
      getMember
      multiply
      push r:5
      multiply
      subtract
      setMember
      push r:3, '{2', r:3, '{2'
      getMember
      push r:9, r:2, '9Z 6'
      getMember
      multiply
      push r:4
      multiply
      add
      setMember
      push r:3, '}2', r:3, '}2'
      getMember
      push r:9, r:2, '9Z 6'
      getMember
      multiply
      push r:5
      multiply
      add
      setMember
    end // of function 

    setMember
    push r:1, '3Y-bR'
    function2 (r:2='') (r:1='this')
      push 1, 100000
      divide
      setRegister r:3
      pop
      push 0
      setRegister r:4
      pop
      push 0
      setRegister r:5
      pop
      push r:2, '(('
      getMember
      push r:this, '21Ld)('
      getMember
      push '2[hF'
      getMember
      subtract
      push r:2, '='
      getMember
      subtract
      push 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      push r:3
      lessThan
      branchIfTrue label67
      push r:2, '(('
      getMember
      push r:this, '21Ld)('
      getMember
      push ')JhF'
      getMember
      subtract
      push r:2, '='
      getMember
      add
      push 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      push r:3
      lessThan
      branchIfTrue label65
      push r:2, ')('
      getMember
      push r:this, '21Ld)('
      getMember
      push '[RhG'
      getMember
      subtract
      push r:2, '='
      getMember
      subtract
      push 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      push r:3
      lessThan
      branchIfTrue label63
      push r:2, ')('
      getMember
      push r:this, '21Ld)('
      getMember
      push '5AhG'
      getMember
      subtract
      push r:2, '='
      getMember
      add
      push 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      push r:3
      lessThan
      branchIfTrue label61
      push r:this, '9Z(8', NULL
      setMember
      push UNDEF
      return
      branch label62
     label61:
      push -1
      setRegister r:5
      pop
     label62:
      branch label64
     label63:
      push 1
      setRegister r:5
      pop
     label64:
      branch label66
     label65:
      push -1
      setRegister r:4
      pop
     label66:
      branch label68
     label67:
      push 1
      setRegister r:4
      pop
     label68:
      push 1, r:this, ']6b7)'
      getMember
      add
      push r:4, r:2, '{2'
      getMember
      multiply
      push r:5, r:2, '}2'
      getMember
      multiply
      add
      multiply
      setRegister r:6
      pop
      push r:2, '{2', r:2, '{2'
      getMember
      push r:6, r:4
      multiply
      subtract
      setMember
      push r:2, '}2', r:2, '}2'
      getMember
      push r:6, r:5
      multiply
      subtract
      setMember
    end // of function 

    setMember
    push r:1, '8uD50'
    function2 () (r:1='this')
      push 'Math'
      getVariable
      push 'POSITIVE_INFINITY'
      getMember
      setRegister r:2
      pop
      push 0
      setRegister r:3
      pop
      push r:this, '9Z(8'
      getMember
      push 'length'
      getMember
      setRegister r:4
      pop
     label69:
      push r:3, r:4
      lessThan
      not
      branchIfTrue label70
      push r:3
      setRegister r:5
      pop
      push r:3
      increment
      setRegister r:3
      pop
      push r:this, '9Z(8'
      getMember
      push r:5
      getMember
      push '(v+', r:2
      setMember
      branch label69
     label70:
      push 0
      setRegister r:3
      pop
      push r:this, '9Z(8'
      getMember
      push 'length'
      getMember
      setRegister r:4
      pop
     label71:
      push r:3, r:4
      lessThan
      not
      branchIfTrue label77
      push r:3
      setRegister r:5
      pop
      push r:3
      increment
      setRegister r:3
      pop
      push r:this, '9Z(8'
      getMember
      push r:5
      getMember
      setRegister r:6
      pop
      push r:5, 1
      add
      setRegister r:7
      pop
      push r:this, '9Z(8'
      getMember
      push 'length'
      getMember
      setRegister r:8
      pop
     label72:
      push r:7, r:8
      lessThan
      not
      branchIfTrue label75
      push r:7
      setRegister r:9
      pop
      push r:7
      increment
      setRegister r:7
      pop
      push r:this, '9Z(8'
      getMember
      push r:9
      getMember
      setRegister r:10
      pop
      push r:10, r:6, 2, r:this, '*j,B'
      callMethod
      setRegister r:11
      pop
      push r:11, NULL
      equals
      not
      not
      branchIfTrue label74
      push r:11, r:6, '(v+'
      getMember
      lessThan
      not
      branchIfTrue label73
      push r:6, '(v+', r:11
      setMember
      push r:6, '+Q}B]', r:10
      setMember
     label73:
      push r:10, '(v+', r:11
      setMember
      push r:10, '+Q}B]', r:6
      setMember
     label74:
      branch label72
     label75:
      push r:this, '21Ld)('
      getMember
      push NULL
      equals
      not
      not
      branchIfTrue label76
      push r:6, 1, r:this, '+l4wr'
      callMethod
      pop
     label76:
      branch label71
     label77:
    end // of function 

    setMember
    push r:1, ' a5vB', NULL
    setMember
    push r:1, '*AzJN', NULL
    setMember
    push r:1, '5cBEm', NULL
    setMember
    push r:1, '*x-]I'
    function2 () (r:1='this')
      push r:this, '*AzJN'
      getMember
      push NULL
      equals
      not
      branchIfTrue label79
      push r:this, '*AzJN', 0
      setMember
      push 0, r:this, '9Z(8'
      getMember
      push 'iterator'
      callMethod
      setRegister r:2
      pop
     label78:
      push 0, r:2, '1ll a'
      callMethod
      not
      branchIfTrue label79
      push 0, r:2, '7Y-7'
      callMethod
      setRegister r:3
      pop
      push r:this, '*AzJN', r:this, '*AzJN'
      getMember
      push r:3, '{2'
      getMember
      push r:3, '{2'
      getMember
      multiply
      push r:3, '}2'
      getMember
      push r:3, '}2'
      getMember
      multiply
      add
      push 1, 'Math'
      getVariable
      push 'sqrt'
      callMethod
      add
      setMember
      branch label78
     label79:
      push r:this, '*AzJN'
      getMember
      push r:this, ' a5vB'
      getMember
      push r:this, '5cBEm'
      getMember
      push 2, 'Math'
      getVariable
      push 'pow'
      callMethod
      multiply
      return
    end // of function 

    setMember
    push r:1, ' x8LA('
    function2 (r:2='') (r:1='this')
      push r:this, ' a5vB'
      getMember
      push r:this, '5cBEm'
      getMember
      push 2, 'Math'
      getVariable
      push 'pow'
      callMethod
      setRegister r:3
      pop
      push r:2, '{2'
      getMember
      setRegister r:4
      pop
      push r:2, '}2'
      getMember
      setRegister r:5
      pop
      push r:4, r:4
      multiply
      push r:5, r:5
      multiply
      add
      push 1, 'Math'
      getVariable
      push 'sqrt'
      callMethod
      push r:3
      multiply
      return
    end // of function 

    setMember
    push r:1, ']8Sd9(', NULL
    setMember
    push r:1, '9Z(8', NULL
    setMember
    push r:1, 'run'
    function2 (r:2='') (r:1='this')
      push r:this, ']8Sd9('
      getMember
      setRegister r:3
      pop
      push r:3, NULL
      equals
      branchIfTrue label80
      push r:3, '(v+'
      getMember
      push r:this, ' a5vB'
      getMember
      subtract
      push r:2, 2, 'Math'
      getVariable
      push 'min'
      callMethod
      branch label81
     label80:
      push r:2
     label81:
      setRegister r:4
      pop
      push r:3, NULL
      equals
      not
      dup
      not
      branchIfTrue label82
      pop
      push r:3, '(v+'
      getMember
      push r:this, ' a5vB'
      getMember
      subtract
      push r:4
      equals
     label82:
      setRegister r:5
      pop
      push r:this, ' a5vB', r:this, ' a5vB'
      getMember
      push r:4
      add
      setMember
      push r:this, ' a5vB'
      getMember
      push r:this, '5cBEm'
      getMember
      push 2, 'Math'
      getVariable
      push 'pow'
      callMethod
      push 1
      subtract
      push r:this, '5cBEm'
      getMember
      push 1
      subtract
      divide
      setRegister r:6
      pop
      push r:this, '5cBEm'
      getMember
      push 1
      equals
      not
      branchIfTrue label83
      push r:this, ' a5vB'
      getMember
      setRegister r:6
      pop
     label83:
      push 0
      setRegister r:7
      pop
      push r:this, '9Z(8'
      getMember
      push 'length'
      getMember
      setRegister r:8
      pop
     label84:
      push r:7, r:8
      lessThan
      not
      branchIfTrue label85
      push r:7
      setRegister r:9
      pop
      push r:7
      increment
      setRegister r:7
      pop
      push r:this, '9Z(8'
      getMember
      push r:9
      getMember
      setRegister r:10
      pop
      push r:10, '((', r:10, '+Y'
      getMember
      push r:10, '{2'
      getMember
      push r:6
      multiply
      add
      setMember
      push r:10, ')(', r:10, ',Y'
      getMember
      push r:10, '}2'
      getMember
      push r:6
      multiply
      add
      setMember
      branch label84
     label85:
      push r:5
      not
      branchIfTrue label88
      push r:2, r:4
      subtract
      setRegister r:2
      pop
      push 0, r:this, 'stop'
      callMethod
      pop
      push r:3, '+Q}B]'
      getMember
      push NULL
      equals
      branchIfTrue label86
      push r:3, '+Q}B]'
      getMember
      push r:3, 2, r:this, ',l3O-'
      callMethod
      pop
      branch label87
     label86:
      push r:3, 1, r:this, '3Y-bR'
      callMethod
      pop
     label87:
      push r:3, '+Q}B]'
      getMember
      push 1, r:3, '}8,C9'
      callMethod
      pop
      push r:3, 1, r:3, '+Q}B]'
      getMember
      push '}8,C9'
      callMethod
      pop
      push 0, r:this, ']XX}5'
      callMethod
      pop
      push r:2, 1, r:this, '87vE7('
      callMethod
      pop
     label88:
    end // of function 

    setMember
    push r:1, ']XX}5'
    function2 () (r:1='this')
      push r:this, ' a5vB', 0
      setMember
      push r:this, '*AzJN', NULL
      setMember
      push r:this, ']8Sd9(', NULL
      setMember
      push 0, r:this, '8uD50'
      callMethod
      pop
      push 'Math'
      getVariable
      push 'POSITIVE_INFINITY'
      getMember
      setRegister r:2
      pop
      push 0
      setRegister r:3
      pop
      push r:this, '9Z(8'
      getMember
      push 'length'
      getMember
      setRegister r:4
      pop
     label89:
      push r:3, r:4
      lessThan
      not
      branchIfTrue label91
      push r:3
      setRegister r:5
      pop
      push r:3
      increment
      setRegister r:3
      pop
      push r:this, '9Z(8'
      getMember
      push r:5
      getMember
      setRegister r:6
      pop
      push r:6, '(v+'
      getMember
      push r:2
      lessThan
      not
      branchIfTrue label90
      push r:6, '(v+'
      getMember
      setRegister r:2
      pop
      push r:this, ']8Sd9(', r:6
      setMember
     label90:
      push r:6, '+Y', r:6, '(('
      getMember
      setMember
      push r:6, ',Y', r:6, ')('
      getMember
      setMember
      branch label89
     label91:
    end // of function 

    setMember
    push r:1, 'stop'
    function2 () (r:1='this')
      push r:this, ' a5vB'
      getMember
      push 1, r:this, ']}PCW'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '3h0U4'
    function2 () (r:1='this')
      push 0, r:this, 'stop'
      callMethod
      pop
      push 0, r:this, '9Z(8'
      getMember
      push 'iterator'
      callMethod
      setRegister r:2
      pop
     label92:
      push 0, r:2, '1ll a'
      callMethod
      not
      branchIfTrue label93
      push 0, r:2, '7Y-7'
      callMethod
      setRegister r:3
      pop
      push r:3, '{2', 0
      setMember
      push r:3, '}2', 0
      setMember
      branch label92
     label93:
    end // of function 

    setMember
    push r:1, '*j,B'
    function2 (r:2='', r:3='') (r:1='this')
      push r:3, '(('
      getMember
      push r:2, '(('
      getMember
      subtract
      setRegister r:4
      pop
      push r:3, ')('
      getMember
      push r:2, ')('
      getMember
      subtract
      setRegister r:5
      pop
      push r:4, r:4
      multiply
      push r:5, r:5
      multiply
      add
      push 1, 'Math'
      getVariable
      push 'sqrt'
      callMethod
      setRegister r:6
      pop
      push r:2, '='
      getMember
      push r:3, '='
      getMember
      add
      setRegister r:7
      pop
      push r:2, '{2'
      getMember
      push r:3, '{2'
      getMember
      subtract
      setRegister r:8
      pop
      push r:2, '}2'
      getMember
      push r:3, '}2'
      getMember
      subtract
      setRegister r:9
      pop
      push r:8, r:8
      multiply
      push r:9, r:9
      multiply
      add
      push 1, 'Math'
      getVariable
      push 'sqrt'
      callMethod
      setRegister r:10
      pop
      push r:8, r:10
      divide
      setRegister r:8
      pop
      push r:9, r:10
      divide
      setRegister r:9
      pop
      push r:8, r:4
      multiply
      push r:9, r:5
      multiply
      add
      setRegister r:11
      pop
      push r:11, 0
      greaterThan
      not
      not
      branchIfTrue label94
      push NULL
      return
     label94:
      push r:6, r:6
      multiply
      push r:11, r:11
      multiply
      subtract
      setRegister r:12
      pop
      push r:7, r:7
      multiply
      setRegister r:13
      pop
      push r:12, r:13
      lessThan
      not
      not
      branchIfTrue label95
      push NULL
      return
     label95:
      push r:11, r:13, r:12
      subtract
      push 1, 'Math'
      getVariable
      push 'sqrt'
      callMethod
      subtract
      setRegister r:14
      pop
      push r:14, r:10
      divide
      push 1, r:this, '+P+T1('
      callMethod
      return
    end // of function 

    setMember
    push r:1, '+l4wr'
    function2 (r:2='') (r:1='this')
      push r:2, '{2'
      getMember
      push 0
      lessThan
      branchIfTrue label97
      push r:2, '{2'
      getMember
      push 0
      greaterThan
      not
      branchIfTrue label96
      push r:this, '21Ld)('
      getMember
      push ')JhF'
      getMember
      push r:2, '(('
      getMember
      subtract
      push r:2, '='
      getMember
      subtract
      push r:2, '{2'
      getMember
      divide
      push 1, r:this, '+P+T1('
      callMethod
      setRegister r:3
      pop
      push r:3, r:2, '(v+'
      getMember
      lessThan
      not
      branchIfTrue label96
      push r:2, '(v+', r:3
      setMember
      push r:2, '+Q}B]', NULL
      setMember
     label96:
      branch label98
     label97:
      push r:this, '21Ld)('
      getMember
      push '2[hF'
      getMember
      push r:2, '(('
      getMember
      subtract
      push r:2, '='
      getMember
      add
      push r:2, '{2'
      getMember
      divide
      push 1, r:this, '+P+T1('
      callMethod
      setRegister r:3
      pop
      push r:3, r:2, '(v+'
      getMember
      lessThan
      not
      branchIfTrue label98
      push r:2, '(v+', r:3
      setMember
      push r:2, '+Q}B]', NULL
      setMember
     label98:
      push r:2, '}2'
      getMember
      push 0
      lessThan
      branchIfTrue label100
      push r:2, '}2'
      getMember
      push 0
      greaterThan
      not
      branchIfTrue label99
      push r:this, '21Ld)('
      getMember
      push '5AhG'
      getMember
      push r:2, ')('
      getMember
      subtract
      push r:2, '='
      getMember
      subtract
      push r:2, '}2'
      getMember
      divide
      push 1, r:this, '+P+T1('
      callMethod
      setRegister r:3
      pop
      push r:3, r:2, '(v+'
      getMember
      lessThan
      not
      branchIfTrue label99
      push r:2, '(v+', r:3
      setMember
      push r:2, '+Q}B]', NULL
      setMember
     label99:
      branch label101
     label100:
      push r:this, '21Ld)('
      getMember
      push '[RhG'
      getMember
      push r:2, ')('
      getMember
      subtract
      push r:2, '='
      getMember
      add
      push r:2, '}2'
      getMember
      divide
      push 1, r:this, '+P+T1('
      callMethod
      setRegister r:3
      pop
      push r:3, r:2, '(v+'
      getMember
      lessThan
      not
      branchIfTrue label101
      push r:2, '(v+', r:3
      setMember
      push r:2, '+Q}B]', NULL
      setMember
     label101:
    end // of function 

    setMember
    push r:1, '+P+T1('
    function2 (r:2='') (r:1='this')
      push r:2, r:this, '5cBEm'
      getMember
      push 1
      subtract
      multiply
      push 1
      add
      push 1, 'Math'
      getVariable
      push 'log'
      callMethod
      push r:this, '5cBEm'
      getMember
      push 1, 'Math'
      getVariable
      push 'log'
      callMethod
      divide
      setRegister r:3
      pop
      push r:3, 0
      lessThan
      dup
      branchIfTrue label102
      pop
      push r:3, 1, 'Math'
      getVariable
      push 'isNaN'
      callMethod
     label102:
      not
      branchIfTrue label104
      push r:this, '5cBEm'
      getMember
      push 1
      equals
      not
      branchIfTrue label103
      push r:2
      return
     label103:
      push NULL
      return
     label104:
      push r:3
      return
    end // of function 

    setMember
    push r:1, '87vE7('
    function2 (r:2='') (r:1='this')
      push r:2, 1, r:this, 'run'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ']}PCW'
    function2 (r:2='') (r:1='this')
      push r:2, r:this, '5cBEm'
      getMember
      push 2, 'Math'
      getVariable
      push 'pow'
      callMethod
      setRegister r:3
      pop
      push 0
      setRegister r:4
      pop
      push r:this, '9Z(8'
      getMember
      push 'length'
      getMember
      setRegister r:5
      pop
     label105:
      push r:4, r:5
      lessThan
      not
      branchIfTrue label106
      push r:4
      setRegister r:6
      pop
      push r:4
      increment
      setRegister r:4
      pop
      push r:this, '9Z(8'
      getMember
      push r:6
      getMember
      setRegister r:7
      pop
      push r:7, '{2', r:7, '{2'
      getMember
      push r:3
      multiply
      setMember
      push r:7, '}2', r:7, '}2'
      getMember
      push r:3
      multiply
      setMember
      branch label105
     label106:
    end // of function 

    setMember
    push '9K'
    getVariable
    push '53kZ-('
    getMember
    push '73m'
    function2 () (r:1='this', r:2='super')
    end // of function 

    setRegister r:0
    setMember
    push r:0, '__name__', '73m', '53kZ-(', '9K', 3
    initArray
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '__class__', r:0
    setMember
    push r:0, '2K'
    function2 (r:2='', r:3='', r:4='') (r:1='this')
      push r:4, r:3, r:2, 2, 'Math'
      getVariable
      push 'max'
      callMethod
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      return
    end // of function 

    setMember
    push r:0, ')GiA'
    function2 (r:2='', r:3='') (r:1='this')
      push r:3, 0
      equals
      dup
      branchIfTrue label107
      pop
      push r:3, NULL
      equals
      dup
      branchIfTrue label107
      pop
      push r:2, NULL
      equals
     label107:
      not
      branchIfTrue label108
      push 'fileName', 'Lib.hx', 'lineNumber', 11, 'className', 'mt.bumdum.Num', 'methodName', 'sMod', 4
      initObject
      push 'sMod ERROR! (', r:2
      add
      push ','
      add
      push r:3
      add
      push ')'
      add
      push 2, 'haxe'
      getVariable
      push ']{i'
      getMember
      push '-[Ra6'
      callMethod
      pop
      push r:2
      return
     label108:
      push r:2, r:3
      lessThan
      not
      not
      branchIfTrue label109
      push r:2, r:3
      subtract
      setRegister r:2
      pop
      branch label108
     label109:
      push r:2, 0
      lessThan
      not
      branchIfTrue label110
      push r:2, r:3
      add
      setRegister r:2
      pop
      branch label109
     label110:
      push r:2
      return
    end // of function 

    setMember
    push r:0, '0Yj1'
    function2 (r:2='', r:3='') (r:1='this')
     label111:
      push r:2, r:3
      greaterThan
      not
      branchIfTrue label112
      push r:2, r:3, 2
      multiply
      subtract
      setRegister r:2
      pop
      branch label111
     label112:
      push r:2, 0, r:3
      subtract
      lessThan
      not
      branchIfTrue label113
      push r:2, r:3, 2
      multiply
      add
      setRegister r:2
      pop
      branch label112
     label113:
      push r:2
      return
    end // of function 

    setMember
    push '9K'
    getVariable
    push '53kZ-('
    getMember
    push '75+O'
    function2 () (r:1='this', r:2='super')
    end // of function 

    setRegister r:0
    setMember
    push r:0, '__name__', '75+O', '53kZ-(', '9K', 3
    initArray
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '__class__', r:0
    setMember
    push r:0, '}1A{_'
    function2 (r:2='', r:3='') (r:1='this')
      push r:2, '(('
      getMember
      push r:3, '(('
      getMember
      subtract
      setRegister r:4
      pop
      push r:2, ')('
      getMember
      push r:3, ')('
      getMember
      subtract
      setRegister r:5
      pop
      push r:4, r:4
      multiply
      push r:5, r:5
      multiply
      add
      push 1, 'Math'
      getVariable
      push 'sqrt'
      callMethod
      return
    end // of function 

    setMember
    push r:0, ')153L'
    function2 (r:2='', r:3='') (r:1='this')
      push r:2, '(('
      getMember
      push r:3, '(('
      getMember
      subtract
      setRegister r:4
      pop
      push r:2, ')('
      getMember
      push r:3, ')('
      getMember
      subtract
      setRegister r:5
      pop
      push r:4, r:5, 2, 'Math'
      getVariable
      push 'atan2'
      callMethod
      return
    end // of function 

    setMember
    push '9K'
    getVariable
    push '53kZ-('
    getMember
    push '0[Y'
    function2 () (r:1='this', r:2='super')
    end // of function 

    setRegister r:0
    setMember
    push r:0, '__name__', '0[Y', '53kZ-(', '9K', 3
    initArray
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '__class__', r:0
    setMember
    push r:0, '{SXC{'
    function2 (r:2='') (r:1='this')
      push '=', r:2, 16
      shiftRight
      push '0', r:2, 8
      shiftRight
      push 255
      bitwiseAnd
      push ')', r:2, 255
      bitwiseAnd
      push 3
      initObject
      return
    end // of function 

    setMember
    push r:0, '4bfMH('
    function2 (r:2='') (r:1='this')
      push r:2, '='
      getMember
      push 16
      shiftLeft
      push r:2, '0'
      getMember
      push 8
      shiftLeft
      bitwiseOr
      push r:2, ')'
      getMember
      bitwiseOr
      return
    end // of function 

    setMember
    push r:0, '2ya 0('
    function2 (r:2='') (r:1='this')
      push '(', r:2, 24
      shiftRight2
      push '=', r:2, 16
      shiftRight
      push 255
      bitwiseAnd
      push '0', r:2, 8
      shiftRight
      push 255
      bitwiseAnd
      push ')', r:2, 255
      bitwiseAnd
      push 4
      initObject
      return
    end // of function 

    setMember
    push r:0, '{mMU7('
    function2 (r:2='') (r:1='this')
      push r:2, '('
      getMember
      push 24
      shiftLeft
      push r:2, '='
      getMember
      push 16
      shiftLeft
      bitwiseOr
      push r:2, '0'
      getMember
      push 8
      shiftLeft
      bitwiseOr
      push r:2, ')'
      getMember
      bitwiseOr
      return
    end // of function 

    setMember
    push r:0, ';CYOh'
    function2 (r:2='', r:3='', r:4='', r:5='') (r:1='this')
      push r:5, NULL
      equals
      not
      branchIfTrue label114
      push 0
      setRegister r:5
      pop
     label114:
      push r:4, 1, '9K'
      getVariable
      push '53kZ-('
      getMember
      push '0[Y'
      getMember
      push '{SXC{'
      callMethod
      setRegister r:6
      pop
      push r:2, 1, 'flash'
      getVariable
      push 'Color'
      newMethod
      setRegister r:7
      pop
      push r:3, 100
      divide
      setRegister r:8
      pop
      push '_', NULL, 1
      initObject
      setRegister r:9
      pop
      push 100, r:3
      subtract
      push 1, '3Wt'
      getVariable
      push '9n6'
      callMethod
      setRegister r:10
      pop
      push r:9, 'ra', r:10
      setMember
      push r:9, 'ga', r:10
      setMember
      push r:9, 'ba', r:10
      setMember
      push r:9, 'aa', 100
      setMember
      push r:9, 'rb', r:8, r:6, '='
      getMember
      multiply
      push r:5
      add
      push 1, '3Wt'
      getVariable
      push '9n6'
      callMethod
      setMember
      push r:9, 'gb', r:8, r:6, '0'
      getMember
      multiply
      push r:5
      add
      push 1, '3Wt'
      getVariable
      push '9n6'
      callMethod
      setMember
      push r:9, 'bb', r:8, r:6, ')'
      getMember
      multiply
      push r:5
      add
      push 1, '3Wt'
      getVariable
      push '9n6'
      callMethod
      setMember
      push r:9, 'ab', 0
      setMember
      push r:9, 1, r:7, 'setTransform'
      callMethod
      pop
    end // of function 

    setMember
    push r:0, '(H5 S'
    function2 (r:2='', r:3='', r:4='') (r:1='this')
      push r:4, NULL
      equals
      not
      branchIfTrue label115
      push -255
      setRegister r:4
      pop
     label115:
      push r:3, 1, '9K'
      getVariable
      push '53kZ-('
      getMember
      push '0[Y'
      getMember
      push '2ya 0('
      callMethod
      setRegister r:5
      pop
      push r:2, 1, 'flash'
      getVariable
      push 'Color'
      newMethod
      setRegister r:6
      pop
      push '_', NULL, 1
      initObject
      setRegister r:7
      pop
      push r:7, 'ra', 100
      setMember
      push r:7, 'ga', 100
      setMember
      push r:7, 'ba', 100
      setMember
      push r:7, 'aa', 100
      setMember
      push r:7, 'rb', r:5, '='
      getMember
      push r:4
      add
      push 1, '3Wt'
      getVariable
      push '9n6'
      callMethod
      setMember
      push r:7, 'gb', r:5, '0'
      getMember
      push r:4
      add
      push 1, '3Wt'
      getVariable
      push '9n6'
      callMethod
      setMember
      push r:7, 'bb', r:5, ')'
      getMember
      push r:4
      add
      push 1, '3Wt'
      getVariable
      push '9n6'
      callMethod
      setMember
      push r:7, 'ab', 0
      setMember
      push r:7, 1, r:6, 'setTransform'
      callMethod
      pop
    end // of function 

    setMember
    push r:0, '+Dqv=('
    function2 (r:2='', r:3='', r:4='') (r:1='this')
      push r:4, NULL
      equals
      not
      branchIfTrue label116
      push 0.5
      setRegister r:4
      pop
     label116:
      push r:2, 1, '9K'
      getVariable
      push '53kZ-('
      getMember
      push '0[Y'
      getMember
      push '{SXC{'
      callMethod
      setRegister r:5
      pop
      push r:3, 1, '9K'
      getVariable
      push '53kZ-('
      getMember
      push '0[Y'
      getMember
      push '{SXC{'
      callMethod
      setRegister r:6
      pop
      push '=', r:5, '='
      getMember
      push r:4
      multiply
      push r:6, '='
      getMember
      push 1, r:4
      subtract
      multiply
      add
      push 1, '3Wt'
      getVariable
      push '9n6'
      callMethod
      push '0', r:5, '0'
      getMember
      push r:4
      multiply
      push r:6, '0'
      getMember
      push 1, r:4
      subtract
      multiply
      add
      push 1, '3Wt'
      getVariable
      push '9n6'
      callMethod
      push ')', r:5, ')'
      getMember
      push r:4
      multiply
      push r:6, ')'
      getMember
      push 1, r:4
      subtract
      multiply
      add
      push 1, '3Wt'
      getVariable
      push '9n6'
      callMethod
      push 3
      initObject
      setRegister r:7
      pop
      push r:7, 1, '9K'
      getVariable
      push '53kZ-('
      getMember
      push '0[Y'
      getMember
      push '4bfMH('
      callMethod
      return
    end // of function 

    setMember
    push r:0, '}*Hki'
    function2 (r:2='', r:3='', r:4='') (r:1='this')
      push r:4, NULL
      equals
      not
      branchIfTrue label117
      push 0.5
      setRegister r:4
      pop
     label117:
      push r:2, 1, '9K'
      getVariable
      push '53kZ-('
      getMember
      push '0[Y'
      getMember
      push '2ya 0('
      callMethod
      setRegister r:5
      pop
      push r:3, 1, '9K'
      getVariable
      push '53kZ-('
      getMember
      push '0[Y'
      getMember
      push '2ya 0('
      callMethod
      setRegister r:6
      pop
      push '=', r:5, '='
      getMember
      push r:4
      multiply
      push r:6, '='
      getMember
      push 1, r:4
      subtract
      multiply
      add
      push 1, '3Wt'
      getVariable
      push '9n6'
      callMethod
      push '0', r:5, '0'
      getMember
      push r:4
      multiply
      push r:6, '0'
      getMember
      push 1, r:4
      subtract
      multiply
      add
      push 1, '3Wt'
      getVariable
      push '9n6'
      callMethod
      push ')', r:5, ')'
      getMember
      push r:4
      multiply
      push r:6, ')'
      getMember
      push 1, r:4
      subtract
      multiply
      add
      push 1, '3Wt'
      getVariable
      push '9n6'
      callMethod
      push '(', r:5, '('
      getMember
      push r:4
      multiply
      push r:6, '('
      getMember
      push 1, r:4
      subtract
      multiply
      add
      push 1, '3Wt'
      getVariable
      push '9n6'
      callMethod
      push 4
      initObject
      setRegister r:7
      pop
      push r:7, 1, '9K'
      getVariable
      push '53kZ-('
      getMember
      push '0[Y'
      getMember
      push '{mMU7('
      callMethod
      return
    end // of function 

    setMember
    push r:0, '82z7S'
    function2 (r:2='') (r:1='this')
      push r:2, NULL
      equals
      not
      branchIfTrue label118
      push 0, 'Math'
      getVariable
      push 'random'
      callMethod
      setRegister r:2
      pop
     label118:
      push 3
      setRegister r:3
      pop
      push 0.0, 0.0, 0.0, 3
      initArray
      setRegister r:4
      pop
      push 1, r:3
      divide
      push 2
      multiply
      setRegister r:5
      pop
      push 0
      setRegister r:6
      pop
      push r:3
      setRegister r:7
      pop
     label119:
      push r:6, r:7
      lessThan
      not
      branchIfTrue label120
      push r:6
      setRegister r:8
      pop
      push r:6
      increment
      setRegister r:6
      pop
      push r:5, r:8, 2
      multiply
      push r:5
      multiply
      add
      setRegister r:9
      pop
      push 0.5, r:9, r:2
      subtract
      push 2, '9K'
      getVariable
      push '53kZ-('
      getMember
      push '73m'
      getMember
      push '0Yj1'
      callMethod
      setRegister r:10
      pop
      push r:4, r:8, 1, 1.5, r:10, 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      push 3
      multiply
      subtract
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      setMember
      branch label119
     label120:
      push '=', r:4, 0
      getMember
      push 255
      multiply
      push 1, '3Wt'
      getVariable
      push '9n6'
      callMethod
      push '0', r:4, 1
      getMember
      push 255
      multiply
      push 1, '3Wt'
      getVariable
      push '9n6'
      callMethod
      push ')', r:4, 2
      getMember
      push 255
      multiply
      push 1, '3Wt'
      getVariable
      push '9n6'
      callMethod
      push 3
      initObject
      return
    end // of function 

    setMember
    push '9K'
    getVariable
    push '53kZ-('
    getMember
    push '(Xt'
    function2 () (r:1='this', r:2='super')
    end // of function 

    setRegister r:0
    setMember
    push r:0, '__name__', '(Xt', '53kZ-(', '9K', 3
    initArray
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '__class__', r:0
    setMember
    push r:0, '(B+[0'
    function2 (r:2='', r:3='', r:4='') (r:1='this')
      push r:4, 1, r:3, 1, r:2, 'split'
      callMethod
      push 'join'
      callMethod
      return
    end // of function 

    setMember
    push '9K'
    getVariable
    push '53kZ-('
    getMember
    push '+43N'
    function2 () (r:1='this', r:2='super')
    end // of function 

    setRegister r:0
    setMember
    push r:0, '__name__', '+43N', '53kZ-(', '9K', 3
    initArray
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '__class__', r:0
    setMember
    push r:0, '1U;0'
    function2 (r:2='', r:3='', r:4='', r:5='', r:6='') (r:1='this')
      push r:3, NULL
      equals
      not
      branchIfTrue label121
      push 2
      setRegister r:3
      pop
     label121:
      push r:4, NULL
      equals
      not
      branchIfTrue label122
      push 10
      setRegister r:4
      pop
     label122:
      push r:5, NULL
      equals
      not
      branchIfTrue label123
      push 0
      setRegister r:5
      pop
     label123:
      push r:6, NULL
      equals
      not
      branchIfTrue label124
      push FALSE
      setRegister r:6
      pop
     label124:
      push 0, 'flash'
      getVariable
      push '3[4k{'
      getMember
      push 'GlowFilter'
      newMethod
      setRegister r:7
      pop
      push r:7, 'blurX', r:3
      setMember
      push r:7, 'blurY', r:3
      setMember
      push r:7, 'strength', r:4
      setMember
      push r:7, 'color', r:5
      setMember
      push r:7, 'inner', r:6
      setMember
      push r:2, 'filters'
      getMember
      setRegister r:8
      pop
      push r:7, 1, r:8, 'push'
      callMethod
      pop
      push r:2, 'filters', r:8
      setMember
    end // of function 

    setMember
    push r:0, '-A=)'
    function2 (r:2='', r:3='', r:4='') (r:1='this')
      push r:3, NULL
      equals
      not
      branchIfTrue label125
      push 0
      setRegister r:3
      pop
     label125:
      push r:4, NULL
      equals
      not
      branchIfTrue label126
      push 0
      setRegister r:4
      pop
     label126:
      push 0, 'flash'
      getVariable
      push '3[4k{'
      getMember
      push 'BlurFilter'
      newMethod
      setRegister r:5
      pop
      push r:5, 'blurX', r:3
      setMember
      push r:5, 'blurY', r:4
      setMember
      push r:2, 'filters'
      getMember
      setRegister r:6
      pop
      push r:5, 1, r:6, 'push'
      callMethod
      pop
      push r:2, 'filters', r:6
      setMember
    end // of function 

    setMember
    push r:0, '=4H0'
    function2 (r:2='', r:3='', r:4='', r:5='') (r:1='this')
      push r:3, NULL
      equals
      not
      branchIfTrue label127
      push 1
      setRegister r:3
      pop
     label127:
      push r:4, NULL
      equals
      not
      branchIfTrue label128
      push 0
      setRegister r:4
      pop
     label128:
      push r:5, NULL
      equals
      not
      branchIfTrue label129
      push '=', 0, '0', 0, ')', 0, 3
      initObject
      setRegister r:5
      pop
     label129:
      push 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 20
      initArray
      setRegister r:6
      pop
      push 0.25
      setRegister r:7
      pop
      push 0.15
      setRegister r:8
      pop
      push 0.6
      setRegister r:9
      pop
      push 0, 1, 0, 0, 0, r:5, ')'
      getMember
      push r:4
      add
      push 0, r:9, r:8, r:7, r:5, '0'
      getMember
      push r:4
      add
      push 0, r:9, r:8, r:7, r:5, '='
      getMember
      push r:4
      add
      push 0, r:9, r:8, r:7, 20
      initArray
      setRegister r:10
      pop
      push 0
      initArray
      setRegister r:11
      pop
      push 0
      setRegister r:12
      pop
      push r:6, 'length'
      getMember
      setRegister r:13
      pop
     label130:
      push r:12, r:13
      lessThan
      not
      branchIfTrue label131
      push r:12
      setRegister r:14
      pop
      push r:12
      increment
      setRegister r:12
      pop
      push r:11, r:14, r:6, r:14
      getMember
      push 1, r:3
      subtract
      multiply
      push r:10, r:14
      getMember
      push r:3
      multiply
      add
      setMember
      branch label130
     label131:
      push 0, 'flash'
      getVariable
      push '3[4k{'
      getMember
      push 'ColorMatrixFilter'
      newMethod
      setRegister r:12
      pop
      push r:12, 'matrix', r:11
      setMember
      push r:2, 'filters'
      getMember
      setRegister r:13
      pop
      push r:12, 1, r:13, 'push'
      callMethod
      pop
      push r:2, 'filters', r:13
      setMember
    end // of function 

    setMember
    push '9K'
    getVariable
    push '53kZ-('
    getMember
    push '}*X'
    function2 (r:3='', r:4='', r:5='', r:6='', r:7='', r:8='') (r:1='this', r:2='super')
      push r:4, NULL
      equals
      not
      branchIfTrue label132
      push 100
      setRegister r:4
      pop
     label132:
      push r:5, NULL
      equals
      not
      branchIfTrue label133
      push 100
      setRegister r:5
      pop
     label133:
      push r:6, NULL
      equals
      not
      branchIfTrue label134
      push TRUE
      setRegister r:6
      pop
     label134:
      push r:7, NULL
      equals
      not
      branchIfTrue label135
      push 0
      setRegister r:7
      pop
     label135:
      push r:8, NULL
      equals
      not
      branchIfTrue label136
      push 1
      setRegister r:8
      pop
     label136:
      push r:this, ',R', r:8
      setMember
      push r:7, r:6, r:5, r:this, ',R'
      getMember
      multiply
      push 1, '3Wt'
      getVariable
      push '9n6'
      callMethod
      push r:4, r:this, ',R'
      getMember
      multiply
      push 1, '3Wt'
      getVariable
      push '9n6'
      callMethod
      push 4, r:super, UNDEF
      callMethod
      pop
      push r:this, '-iB=', r:3
      setMember
      push 0, r:this, 2, r:this, '-iB='
      getMember
      push 'attachBitmap'
      callMethod
      pop
      push r:this, '-iB='
      getMember
      push '_xscale', 100, r:this, ',R'
      getMember
      divide
      setMember
      push r:this, '-iB='
      getMember
      push '_yscale', 100, r:this, ',R'
      getMember
      divide
      setMember
    end // of function 

    setRegister r:0
    setMember
    push r:0, '__name__', '}*X', '53kZ-(', '9K', 3
    initArray
    setMember
    push r:0, '__super__', 'flash'
    getVariable
    push '}ZF-m'
    getMember
    push 'BitmapData'
    getMember
    setMember
    push r:0, 'flash'
    getVariable
    push '}ZF-m'
    getMember
    push 'BitmapData'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '__class__', r:0
    setMember
    push r:1, '+Hp()', NULL
    setMember
    push r:1, '7DDwp'
    function2 (r:2='', r:3='', r:4='', r:5='') (r:1='this')
      push r:3, NULL
      equals
      not
      branchIfTrue label137
      push 0
      setRegister r:3
      pop
     label137:
      push r:4, NULL
      equals
      not
      branchIfTrue label138
      push 0
      setRegister r:4
      pop
     label138:
      push 0, 'flash'
      getVariable
      push '0000'
      getMember
      push 'Matrix'
      newMethod
      setRegister r:6
      pop
      push r:2, '_yscale'
      getMember
      push 100
      divide
      push r:this, ',R'
      getMember
      multiply
      push r:2, '_xscale'
      getMember
      push 100
      divide
      push r:this, ',R'
      getMember
      multiply
      push 2, r:6, 'scale'
      callMethod
      pop
      push r:2, '_rotation'
      getMember
      push 0.0174
      multiply
      push 1, r:6, 'rotate'
      callMethod
      pop
      push r:2, '_y'
      getMember
      push r:this, ',R'
      getMember
      multiply
      push r:4
      add
      push r:2, '_x'
      getMember
      push r:this, ',R'
      getMember
      multiply
      push r:3
      add
      push 2, r:6, 'translate'
      callMethod
      pop
      push r:5, NULL
      equals
      not
      branchIfTrue label139
      push -255, r:2, '_alpha'
      getMember
      push 2.55
      multiply
      add
      push 0, 0, 0, 1, 1, 1, 1, 8, 'flash'
      getVariable
      push '0000'
      getMember
      push 'ColorTransform'
      newMethod
      setRegister r:5
      pop
     label139:
      push r:2, 'blendMode'
      getMember
      setRegister r:7
      pop
      push FALSE, NULL, r:7, r:5, r:6, r:2, 6, r:this, 'draw'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '{)H0'
    function2 (r:2='', r:3='') (r:1='this')
      push 0, r:this, '-{rzg'
      callMethod
      pop
      push 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 20
      initArray
      setRegister r:4
      pop
      push 0.4
      setRegister r:5
      pop
      push 0.5
      setRegister r:6
      pop
      push 0.1
      setRegister r:7
      pop
      push r:3, NULL
      equals
      not
      branchIfTrue label140
      push 30
      setRegister r:3
      pop
     label140:
      push 0, 1, 0, 0, 0, r:3, 0, r:7, r:6, r:5, r:3, 0, r:7, r:6, r:5, r:3, 0, r:7, r:6, r:5, 20
      initArray
      setRegister r:8
      pop
      push 0
      initArray
      setRegister r:9
      pop
      push 0
      setRegister r:10
      pop
      push r:4, 'length'
      getMember
      setRegister r:11
      pop
     label141:
      push r:10, r:11
      lessThan
      not
      branchIfTrue label142
      push r:10
      setRegister r:12
      pop
      push r:10
      increment
      setRegister r:10
      pop
      push r:4, r:12
      getMember
      push 1, r:2
      subtract
      multiply
      push r:8, r:12
      getMember
      push r:2
      multiply
      add
      push 1, r:9, 'push'
      callMethod
      pop
      branch label141
     label142:
      push 0, 'flash'
      getVariable
      push '3[4k{'
      getMember
      push 'ColorMatrixFilter'
      newMethod
      setRegister r:10
      pop
      push r:10, 'matrix', r:9
      setMember
      push r:10, 0, 0, 2, 'flash'
      getVariable
      push '0000'
      getMember
      push 'Point'
      newMethod
      push r:this, 'rectangle'
      getMember
      push r:this, 4, r:this, 'applyFilter'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '-{rzg'
    function2 () (r:1='this')
      push r:this, '+Hp()'
      getMember
      push NULL
      equals
      not
      branchIfTrue label143
      push r:this, '+Hp()', 0, r:this, 'clone'
      callMethod
      setMember
     label143:
    end // of function 

    setMember
    push r:1, '9T54'
    function2 () (r:1='this')
      push 0, r:this, 'dispose'
      callMethod
      pop
      push r:this, '+Hp()'
      getMember
      push NULL
      equals
      not
      not
      branchIfTrue label144
      push 0, r:this, '+Hp()'
      getMember
      push 'dispose'
      callMethod
      pop
     label144:
      push 0, r:this, '-iB='
      getMember
      push 'removeMovieClip'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ',R', NULL
    setMember
    push r:1, '3+YQ}'
    function2 () (r:1='this')
      push 0, 'flash'
      getVariable
      push '0000'
      getMember
      push 'Matrix'
      newMethod
      push r:this, '+Hp()'
      getMember
      push 2, r:this, 'draw'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '-iB=', NULL
    setMember
    push r:1, '(j;o7'
    function2 (r:2='', r:3='') (r:1='this')
      push r:this, '-iB='
      getMember
      push '_x', r:2
      setMember
      push r:this, '-iB='
      getMember
      push '_y', r:3
      setMember
    end // of function 

    setMember
    push '9K'
    getVariable
    push '53kZ-('
    getMember
    push '-wDX['
    function2 (r:3='', r:4='', r:5='', r:6='') (r:1='this', r:2='super')
      push r:6, 0, TRUE, r:5, r:4, r:3, 6, r:super, UNDEF
      callMethod
      pop
      push r:this, 1, '9K'
      getVariable
      push '53kZ-('
      getMember
      push '-wDX['
      getMember
      push ' ]55'
      getMember
      push 'push'
      callMethod
      pop
      push r:this, '3[4k{', 0
      initArray
      setMember
      push r:this, ',DBRf', 10
      setMember
      push '9K'
      getVariable
      push '53kZ-('
      getMember
      push '-wDX['
      getMember
      push '(,JNq'
      getMember
      not
      branchIfTrue label145
      push 2
      setRegister r:7
      pop
      push -65536, r:this, 'rectangle'
      getMember
      push 2, r:this, 'fillRect'
      callMethod
      pop
      push 0, r:5, 2, r:7
      multiply
      subtract
      push r:4, 2, r:7
      multiply
      subtract
      push r:7, r:7, 4, 'flash'
      getVariable
      push '0000'
      getMember
      push 'Rectangle'
      newMethod
      push 2, r:this, 'fillRect'
      callMethod
      pop
     label145:
    end // of function 

    setRegister r:0
    setMember
    push r:0, '__name__', '-wDX[', '53kZ-(', '9K', 3
    initArray
    setMember
    push r:0, '__super__', '9K'
    getVariable
    push '53kZ-('
    getMember
    push '}*X'
    getMember
    setMember
    push r:0, '9K'
    getVariable
    push '53kZ-('
    getMember
    push '}*X'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '__class__', r:0
    setMember
    push r:0, ';EWdZ'
    function2 () (r:1='this')
      push 0, '9K'
      getVariable
      push '53kZ-('
      getMember
      push '-wDX['
      getMember
      push ' ]55'
      getMember
      push 'iterator'
      callMethod
      setRegister r:2
      pop
     label146:
      push 0, r:2, '1ll a'
      callMethod
      not
      branchIfTrue label147
      push 0, r:2, '7Y-7'
      callMethod
      setRegister r:3
      pop
      push 0, r:3, '87vE7('
      callMethod
      pop
      branch label146
     label147:
    end // of function 

    setMember
    push r:1, '50', NULL
    setMember
    push r:1, ',DBRf', NULL
    setMember
    push r:1, '3[4k{', NULL
    setMember
    push r:1, '9T54'
    function2 () (r:1='this')
      push r:this, 1, '9K'
      getVariable
      push '53kZ-('
      getMember
      push '-wDX['
      getMember
      push ' ]55'
      getMember
      push 'remove'
      callMethod
      pop
      push 0, r:this, 'dispose'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '2VhU6', NULL
    setMember
    push r:1, '87vE7('
    function2 () (r:1='this')
      push r:this, '50'
      getMember
      push NULL
      equals
      not
      not
      branchIfTrue label148
      push r:this, '50'
      getMember
      push r:this, 'rectangle'
      getMember
      push 2, r:this, 'colorTransform'
      callMethod
      pop
     label148:
      push 0, r:this, '3[4k{'
      getMember
      push 'iterator'
      callMethod
      setRegister r:2
      pop
     label149:
      push 0, r:2, '1ll a'
      callMethod
      not
      branchIfTrue label150
      push 0, r:2, '7Y-7'
      callMethod
      setRegister r:3
      pop
      push r:3, 0, 0, 2, 'flash'
      getVariable
      push '0000'
      getMember
      push 'Point'
      newMethod
      push r:this, 'rectangle'
      getMember
      push r:this, 4, r:this, 'applyFilter'
      callMethod
      pop
      branch label149
     label150:
      push r:this, '2VhU6'
      getMember
      push NULL
      equals
      not
      not
      branchIfTrue label151
      push r:this, '2VhU6', r:this, '2VhU6'
      getMember
      push '9K'
      getVariable
      push '{-kxL'
      getMember
      push '-V;B'
      getMember
      subtract
      setMember
      push r:this, '2VhU6'
      getMember
      push r:this, ',DBRf'
      getMember
      lessThan
      not
      branchIfTrue label151
      push r:this, '2VhU6'
      getMember
      push r:this, ',DBRf'
      getMember
      divide
      setRegister r:2
      pop
      push r:this, '-iB='
      getMember
      push '_alpha', r:2, 100
      multiply
      setMember
      push r:this, '2VhU6'
      getMember
      push 0
      greaterThan
      not
      not
      branchIfTrue label151
      push 0, r:this, '9T54'
      callMethod
      pop
     label151:
      push r:this, '-iB='
      getMember
      push '_visible'
      getMember
      push NULL
      equals
      not
      branchIfTrue label152
      push 0, r:this, '9T54'
      callMethod
      pop
     label152:
    end // of function 

    setMember
    push '[Zk', 0, 'Object'
    new
    setRegister r:0
    setVariable
    push r:0, '__ename__', '[Zk', 1
    initArray
    setMember
    push r:0, '__constructs__', 'Shoot', 'Init', 2
    initArray
    setMember
    push r:0, '-5;Q'
    function2 (r:2='') (r:1='this')
      push r:2, 0, '-5;Q', 3
      initArray
      dup
      dup
      push '__enum__', r:this
      setMember
      push 'toString', ')PVyX'
      getVariable
      setMember
      return
    end // of function 

    setMember
    push r:0, ';9tAL'
    function2 (r:2='', r:3='', r:4='') (r:1='this')
      push r:4, r:3, r:2, 1, ';9tAL', 5
      initArray
      dup
      dup
      push '__enum__', r:this
      setMember
      push 'toString', ')PVyX'
      getVariable
      setMember
      return
    end // of function 

    setMember
    push ')qF[', 0, 'Object'
    new
    setRegister r:0
    setVariable
    push r:0, '__ename__', ')qF[', 1
    initArray
    setMember
    push r:0, '__constructs__', 'View', 'Wait', 'Play', 3
    initArray
    setMember
    push r:0, '756X', 0, '756X', 2
    initArray
    dup
    dup
    push '__enum__', r:0
    setMember
    push 'toString', ')PVyX'
    getVariable
    setMember
    setMember
    push r:0, ';31a', 2, ';31a', 2
    initArray
    dup
    dup
    push '__enum__', r:0
    setMember
    push 'toString', ')PVyX'
    getVariable
    setMember
    setMember
    push r:0, ',=ya', 1, ',=ya', 2
    initArray
    dup
    dup
    push '__enum__', r:0
    setMember
    push 'toString', ')PVyX'
    getVariable
    setMember
    setMember
    push '44{N'
    function2 (r:2='') (r:1='this')
      push 16777215, 1, 'haxe'
      getVariable
      push ']{i'
      getMember
      push '(H5 S'
      callMethod
      pop
      push '44{N'
      getVariable
      push '(K', r:this
      setMember
      push r:this, '-iB=', r:2
      setMember
      push r:this, '32', r:2, 1, '9K'
      getVariable
      push '+7U K'
      newMethod
      setMember
      push FALSE, 1, '}-VbH'
      getVariable
      push '5nwDR'
      callMethod
      pop
      push r:this, '1F=(I', FALSE
      setMember
      push r:this, '=cKzE(', 8913100, 47872, 2
      initArray
      setMember
      push r:this, '-nvL6', 0, 0, 2
      initArray
      setMember
    end // of function 

    setRegister r:0
    setVariable
    push r:0, '__name__', '44{N', 1
    initArray
    setMember
    push r:0, '__interfaces__', '7Pm20('
    getVariable
    push 1
    initArray
    setMember
    push '7Pm20('
    getVariable
    push 1, r:0
    implements
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '__class__', r:0
    setMember
    push r:0, '(K', NULL
    setMember
    push r:1, '9O*r', NULL
    setMember
    push r:1, ';+', NULL
    setMember
    push r:1, '{B,MC', NULL
    setMember
    push r:1, '=cKzE(', NULL
    setMember
    push r:1, '1Vt}d', NULL
    setMember
    push r:1, '32', NULL
    setMember
    push r:1, '1F=(I', NULL
    setMember
    push r:1, '8)yt', NULL
    setMember
    push r:1, '=x)Zk', NULL
    setMember
    push r:1, ',+CO6('
    function2 () (r:1='this')
      push 0
      setRegister r:2
      pop
      push 0, r:this, '{p39'
      getMember
      push '9Z(8'
      getMember
      push 'iterator'
      callMethod
      setRegister r:3
      pop
     label153:
      push 0, r:3, '1ll a'
      callMethod
      not
      branchIfTrue label154
      push 0, r:3, '7Y-7'
      callMethod
      setRegister r:4
      pop
      push r:2, r:4, '(('
      getMember
      push r:4, ')('
      getMember
      add
      add
      setRegister r:2
      pop
      branch label153
     label154:
      push r:2, 10000
      multiply
      push 1, '3Wt'
      getVariable
      push '9n6'
      callMethod
      setRegister r:2
      pop
      push r:2
      return
    end // of function 

    setMember
    push r:1, '4,01', NULL
    setMember
    push r:1, '6d3*z'
    function2 (r:2='') (r:1='this')
      push r:2, 2
      multiply
      push 1
      subtract
      setRegister r:3
      pop
      push '44{N'
      getVariable
      push '7j3H1'
      getMember
      push 'mcScoreBall', 2, r:this, '32'
      getMember
      push '*=_p_'
      callMethod
      setRegister r:4
      pop
      push '*r'
      getVariable
      push '=OA'
      getMember
      push 0.5
      multiply
      setRegister r:5
      pop
      push r:4, '_x', r:5, r:5, 10, r:this, '-nvL6'
      getMember
      push r:2
      getMember
      push 10
      multiply
      add
      subtract
      push r:3
      multiply
      add
      setMember
      push r:4, '_y', '*r'
      getVariable
      push '*OA'
      getMember
      push 7
      subtract
      setMember
      push r:4, '_visible', 0, '}-VbH'
      getVariable
      push '9UeAW'
      callMethod
      setMember
      push -180, r:this, '=cKzE('
      getMember
      push r:2
      getMember
      push r:4, 'smc'
      getMember
      push 3, '9K'
      getVariable
      push '53kZ-('
      getMember
      push '0[Y'
      getMember
      push '(H5 S'
      callMethod
      pop
      push 3689833, 4, 2, r:4, 4, '9K'
      getVariable
      push '53kZ-('
      getMember
      push '+43N'
      getMember
      push '1U;0'
      callMethod
      pop
      push r:this, '-nvL6'
      getMember
      push r:2, r:this, '-nvL6'
      getMember
      push r:2
      getMember
      increment
      setMember
      push r:this, '-nvL6'
      getMember
      push r:2
      getMember
      push '*r'
      getVariable
      push '*Um=H('
      getMember
      equals
      not
      branchIfTrue label157
      push r:this, '8)yt'
      getMember
      branchIfTrue label155
      push r:2, 1
      equals
      push 1, '}-VbH'
      getVariable
      push '4[K{k'
      callMethod
      pop
      branch label156
     label155:
      push r:2, 0
      equals
      push 1, '}-VbH'
      getVariable
      push '4[K{k'
      callMethod
      pop
     label156:
      push r:this, '1F=(I', TRUE
      setMember
     label157:
      push r:4
      return
    end // of function 

    setMember
    push r:1, '-zx=g'
    function2 () (r:1='this')
      push r:this, ';+', '44{N'
      getVariable
      push '4MvcB'
      getMember
      push 'bg', 2, r:this, '32'
      getMember
      push '*=_p_'
      callMethod
      setMember
      push r:this, '[Q6w1(', '44{N'
      getVariable
      push '2awen'
      getMember
      push 1, r:this, '32'
      getMember
      push '18wU*'
      callMethod
      setMember
      push r:this, '[Q6w1('
      getMember
      push 'blendMode', 'normal'
      setMember
      push r:this, '[Q6w1('
      getMember
      push '_alpha', 40
      setMember
      push r:this, ')LJ', r:this, '[Q6w1('
      getMember
      push 1, '9K'
      getVariable
      push '+7U K'
      newMethod
      setMember
      push '44{N'
      getVariable
      push '7j3H1'
      getMember
      push 'mcBoard', 2, r:this, '32'
      getMember
      push '*=_p_'
      callMethod
      setRegister r:2
      pop
    end // of function 

    setMember
    push r:1, '{+Sn='
    function2 () (r:1='this')
      push r:this, ';+'
      getMember
      push 'onRelease', r:this, ',cqp5', 2, ']6=8H('
      callFunction
      setMember
      push r:this, ';+'
      getMember
      push 'onReleaseOutside', r:this, ',cqp5', 2, ']6=8H('
      callFunction
      setMember
      push r:this, ';+'
      getMember
      push 'useHandCursor', TRUE
      setMember
      push r:this, '6iyw=', '44{N'
      getVariable
      push '86Itb'
      getMember
      push 'mcArrow', 2, r:this, '32'
      getMember
      push '*=_p_'
      callMethod
      setMember
      push r:this, '6iyw='
      getMember
      push '_x', r:this, '4,01'
      getMember
      push '(('
      getMember
      setMember
      push r:this, '6iyw='
      getMember
      push '_y', r:this, '4,01'
      getMember
      push ')('
      getMember
      setMember
      push '44{N'
      getVariable
      push '(K'
      getMember
      push '4,01'
      getMember
      push '-iB='
      getMember
      push 1, '44{N'
      getVariable
      push '(K'
      getMember
      push '32'
      getMember
      push '08M8'
      callMethod
      pop
      push r:this, '=cKzE('
      getMember
      push r:this, '1Vt}d'
      getMember
      push 1
      subtract
      getMember
      push 2, 10, r:this, '6iyw='
      getMember
      push 4, '9K'
      getVariable
      push '53kZ-('
      getMember
      push '+43N'
      getMember
      push '1U;0'
      callMethod
      pop
      push r:this, '6iyw='
      getMember
      push 'blendMode', 'add'
      setMember
      push '44{N'
      getVariable
      push '(K'
      getMember
      push '4,01'
      getMember
      push '-iB='
      getMember
      setRegister r:2
      pop
      push r:2, 'blendMode', 'add'
      setMember
      push r:this, '=cKzE('
      getMember
      push r:this, '1Vt}d'
      getMember
      push 1
      subtract
      getMember
      push 2, 10, r:2, 4, '9K'
      getVariable
      push '53kZ-('
      getMember
      push '+43N'
      getMember
      push '1U;0'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '8Mh3b'
    function2 (r:2='') (r:1='this')
      push 0
      setRegister r:3
      pop
      push 14
      setRegister r:4
      pop
      push r:this, '{p39', '2[hF', r:3, '[RhG', r:3, ')JhF', 300, r:3
      subtract
      push '5AhG', 300, r:4
      subtract
      push 4
      initObject
      push 1.1, 0.97, 3, '[F8GJ('
      new
      setMember
      push 0
      setRegister r:5
      pop
      push 0, r:2, 'iterator'
      callMethod
      setRegister r:6
      pop
     label158:
      push 0, r:6, '1ll a'
      callMethod
      not
      branchIfTrue label162
      push 0, r:6, '7Y-7'
      callMethod
      setRegister r:7
      pop
      push 0, '2e{I'
      new
      setRegister r:8
      pop
      push r:8, '((', r:7, 0
      getMember
      setMember
      push r:8, ')(', r:7, 1
      getMember
      setMember
      push r:8, 1, r:this, '{p39'
      getMember
      push '9Z(8'
      getMember
      push 'push'
      callMethod
      pop
      push 0
      setRegister r:9
      pop
      push r:5, 0
      equals
      branchIfTrue label160
      push r:5, '*r'
      getVariable
      push '}PI='
      getMember
      greaterThan
      not
      not
      branchIfTrue label159
      push 2
      setRegister r:9
      pop
     label159:
      branch label161
     label160:
      push 3
      setRegister r:9
      pop
      push r:this, '4,01', r:8
      setMember
     label161:
      push r:9, 1, r:8, '(H5 S'
      callMethod
      pop
      push r:5
      increment
      setRegister r:5
      pop
      branch label158
     label162:
      push 0, r:this, '{p39'
      getMember
      push '9Z(8'
      getMember
      push 'iterator'
      callMethod
      setRegister r:6
      pop
     label163:
      push 0, r:6, '1ll a'
      callMethod
      not
      branchIfTrue label164
      push 0, r:6, '7Y-7'
      callMethod
      setRegister r:7
      pop
      push 0, r:7, '87vE7('
      callMethod
      pop
      branch label163
     label164:
    end // of function 

    setMember
    push r:1, '(dm3b'
    function2 () (r:1='this')
      push r:this, '=kIA', ')qF['
      getVariable
      push '756X'
      getMember
      setMember
      push 0, '}-VbH'
      getVariable
      push '+4Z+['
      callMethod
      dup
      not
      branchIfTrue label165
      pop
      push 0, '}-VbH'
      getVariable
      push '9UeAW'
      callMethod
      not
     label165:
      not
      branchIfTrue label166
      push 0, r:this, '{+Sn='
      callMethod
      pop
     label166:
    end // of function 

    setMember
    push r:1, ';6aj0('
    function2 () (r:1='this')
      push 0
      initArray
      setRegister r:2
      pop
      push '2e{I'
      getVariable
      push '{Cs'
      getMember
      push 10
      add
      setRegister r:3
      pop
      push 0
      setRegister r:4
      pop
      push '*r'
      getVariable
      push '{IrB)('
      getMember
      setRegister r:5
      pop
     label167:
      push r:4, r:5
      lessThan
      not
      branchIfTrue label174
      push r:4
      setRegister r:6
      pop
      push r:4
      increment
      setRegister r:4
      pop
     label168:
      push TRUE
      not
      branchIfTrue label173
      push TRUE
      setRegister r:9
      pop
      push r:3, '*r'
      getVariable
      push '=OA'
      getMember
      push 2, r:3
      multiply
      subtract
      push 1, '3Wt'
      getVariable
      push 'random'
      callMethod
      add
      setRegister r:7
      pop
      push r:3, '*r'
      getVariable
      push '=OA'
      getMember
      push 2, r:3
      multiply
      push 8
      add
      subtract
      push 1, '3Wt'
      getVariable
      push 'random'
      callMethod
      add
      setRegister r:8
      pop
      push 0, r:2, 'iterator'
      callMethod
      setRegister r:10
      pop
     label169:
      push 0, r:10, '1ll a'
      callMethod
      not
      branchIfTrue label171
      push 0, r:10, '7Y-7'
      callMethod
      setRegister r:11
      pop
      push r:11, 0
      getMember
      push r:7
      subtract
      setRegister r:12
      pop
      push r:11, 1
      getMember
      push r:8
      subtract
      setRegister r:13
      pop
      push r:12, r:12
      multiply
      push r:13, r:13
      multiply
      add
      push 1, 'Math'
      getVariable
      push 'sqrt'
      callMethod
      push '2e{I'
      getVariable
      push '{Cs'
      getMember
      push 2
      multiply
      lessThan
      not
      branchIfTrue label170
      push FALSE
      setRegister r:9
      pop
      branch label171
     label170:
      branch label169
     label171:
      push r:9
      not
      branchIfTrue label172
      branch label173
     label172:
      branch label168
     label173:
      push r:8, r:7, 2
      initArray
      push 1, r:2, 'push'
      callMethod
      pop
      branch label167
     label174:
      push r:2, 1, '[Zk'
      getVariable
      push '-5;Q'
      callMethod
      return
    end // of function 

    setMember
    push r:1, '4MC5', NULL
    setMember
    push r:1, '0D 6'
    function2 () (r:1='this')
      push r:this, '1F=(I'
      getMember
      not
      branchIfTrue label176
      push r:this, '=x)Zk'
      getMember
      push NULL
      equals
      not
      branchIfTrue label175
      push r:this, '=x)Zk', 50
      setMember
     label175:
      push r:this, '=x)Zk', r:this, '=x)Zk'
      getMember
      push '9K'
      getVariable
      push '{-kxL'
      getMember
      push '-V;B'
      getMember
      subtract
      setMember
      push r:this, '=x)Zk'
      getMember
      push 0
      greaterThan
      not
      not
      branchIfTrue label176
      push r:this, '1F=(I', FALSE
      setMember
      push 0, '}-VbH'
      getVariable
      push '7T4cF('
      callMethod
      pop
     label176:
      push r:this, '=kIA'
      getMember
      setRegister r:2
      push ')qF['
      getVariable
      push '756X'
      getMember
      equals
      branchIfTrue label177
      push r:2, ')qF['
      getVariable
      push ';31a'
      getMember
      equals
      branchIfTrue label178
      branch label179
     label177:
      push 0, r:this, '27uBn'
      callMethod
      pop
      branch label179
     label178:
      push 0, r:this, '55pHn'
      callMethod
      pop
      branch label179
     label179:
      push 0, '9K'
      getVariable
      push '53kZ-('
      getMember
      push '-0]rl'
      getMember
      push '*5oz7('
      getMember
      push 'copy'
      callMethod
      setRegister r:2
      pop
      push 0, r:2, 'iterator'
      callMethod
      setRegister r:3
      pop
     label180:
      push 0, r:3, '1ll a'
      callMethod
      not
      branchIfTrue label181
      push 0, r:3, '7Y-7'
      callMethod
      setRegister r:4
      pop
      push 0, r:4, '87vE7('
      callMethod
      pop
      branch label180
     label181:
    end // of function 

    setMember
    push r:1, '6iyw=', NULL
    setMember
    push r:1, '[Q6w1(', NULL
    setMember
    push r:1, '9xqR3('
    function2 () (r:1='this')
      push r:this, '1Vt}d'
      getMember
      setRegister r:2
      pop
      push r:this, '1Vt}d', r:this, '*(B7+('
      getMember
      setMember
      push r:this, '*(B7+(', r:2
      setMember
      push 0, '}-VbH'
      getVariable
      push '4mok0'
      callMethod
      not
      branchIfTrue label182
      push 0, r:this, '(dm3b'
      callMethod
      pop
     label182:
    end // of function 

    setMember
    push r:1, '+oD9l'
    function2 (r:2='', r:3='') (r:1='this')
      push r:3
      setRegister r:4
      push 1
      getMember
      setRegister r:5
      push 0
      strictEquals
      branchIfTrue label183
      push r:5, 1
      strictEquals
      branchIfTrue label187
      branch label192
     label183:
      push r:4, 2
      getMember
      setRegister r:5
      pop
      push 0, r:this, '-zx=g'
      callMethod
      pop
      push r:this, '8)yt', r:2
      setMember
      push r:this, '8)yt'
      getMember
      branchIfTrue label184
      push r:this, '=cKzE('
      getMember
      push 0
      getMember
      push r:this, '=cKzE('
      getMember
      push 1
      getMember
      push 2, '}-VbH'
      getVariable
      push '0UN5I'
      callMethod
      pop
      branch label185
     label184:
      push r:this, '=cKzE('
      getMember
      push 1
      getMember
      push r:this, '=cKzE('
      getMember
      push 0
      getMember
      push 2, '}-VbH'
      getVariable
      push '0UN5I'
      callMethod
      pop
     label185:
      push r:5, 1, r:this, '8Mh3b'
      callMethod
      pop
      push r:this, '1Vt}d', 1
      setMember
      push r:this, '*(B7+(', 2
      setMember
      push r:this, '8)yt'
      getMember
      not
      branchIfTrue label186
      push 0, r:this, '(dm3b'
      callMethod
      pop
     label186:
      branch label192
     label187:
      push r:4, 2
      getMember
      setRegister r:5
      pop
      push r:4, 3
      getMember
      setRegister r:6
      pop
      push r:4, 4
      getMember
      setRegister r:7
      pop
      push 0
      setRegister r:8
      pop
      push 0.0
      setRegister r:9
      pop
      push 0, r:this, '{p39'
      getMember
      push '9Z(8'
      getMember
      push 'iterator'
      callMethod
      setRegister r:10
      pop
     label188:
      push 0, r:10, '1ll a'
      callMethod
      not
      branchIfTrue label190
      push 0, r:10, '7Y-7'
      callMethod
      setRegister r:11
      pop
      push r:7, r:8
      getMember
      setRegister r:12
      pop
      push r:11, '((', r:12, 0
      getMember
      setMember
      push r:11, ')(', r:12, 1
      getMember
      setMember
      push r:8
      increment
      setRegister r:8
      pop
      push r:9, r:12, 0
      getMember
      push r:11, '(('
      getMember
      subtract
      push 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      push r:12, 1
      getMember
      push r:11, ')('
      getMember
      subtract
      push 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      add
      add
      setRegister r:9
      pop
      push r:9, 2
      greaterThan
      not
      branchIfTrue label189
      push -100, 16711680, r:this, '-iB='
      getMember
      push 3, '9K'
      getVariable
      push '53kZ-('
      getMember
      push '0[Y'
      getMember
      push '(H5 S'
      callMethod
      pop
     label189:
      branch label188
     label190:
      push r:9, 0
      greaterThan
      not
      branchIfTrue label191
      push 0, 'haxe'
      getVariable
      push ']{i'
      getMember
      push '+tq5)'
      callMethod
      pop
      push 'fileName', 'Game.hx', 'lineNumber', 397, 'className', 'Game', 'methodName', 'onMessage', 4
      initObject
      push 'DIF:', r:9
      add
      push 2, 'haxe'
      getVariable
      push ']{i'
      getMember
      push '-[Ra6'
      callMethod
      pop
     label191:
      push r:6, 10000
      divide
      push r:5, 10000
      divide
      push 2, r:this, '1q){x'
      callMethod
      pop
      branch label192
     label192:
    end // of function 

    setMember
    push r:1, '+Du}V'
    function2 () (r:1='this')
      push r:this, '=kIA'
      getMember
      push ')qF['
      getVariable
      push '756X'
      getMember
      equals
      dup
      not
      branchIfTrue label193
      pop
      push 0, '}-VbH'
      getVariable
      push '+4Z+['
      callMethod
     label193:
      not
      branchIfTrue label194
      push 0, r:this, '{+Sn='
      callMethod
      pop
     label194:
    end // of function 

    setMember
    push r:1, '4fHu{'
    function2 () (r:1='this')
      push r:this, '=kIA'
      getMember
      push NULL
      equals
      not
      not
      branchIfTrue label195
      push 0, r:this, '9xqR3('
      callMethod
      pop
     label195:
    end // of function 

    setMember
    push r:1, '8Z[e,('
    function2 (r:2='') (r:1='this')
    end // of function 

    setMember
    push r:1, '*(B7+(', NULL
    setMember
    push r:1, '{p39', NULL
    setMember
    push r:1, '[;4B0(', NULL
    setMember
    push r:1, '+h9w3', NULL
    setMember
    push r:1, '2a[b;('
    function2 () (r:1='this')
      push 0, r:this, '6iyw='
      getMember
      push 'removeMovieClip'
      callMethod
      pop
      push 'onRelease', r:this, ';+'
      getMember
      push 2, '96nT}'
      getVariable
      push '7t4B ('
      callMethod
      pop
      push r:this, ';+'
      getMember
      push 'useHandCursor', FALSE
      setMember
      push '44{N'
      getVariable
      push '(K'
      getMember
      push '4,01'
      getMember
      push '-iB='
      getMember
      push 'filters', 0
      initArray
      setMember
      push '44{N'
      getVariable
      push '(K'
      getMember
      push '4,01'
      getMember
      push '-iB='
      getMember
      push 'blendMode', 'normal'
      setMember
    end // of function 

    setMember
    push r:1, '-iB=', NULL
    setMember
    push r:1, '-nvL6', NULL
    setMember
    push r:1, ')LJ', NULL
    setMember
    push r:1, ',cqp5'
    function2 () (r:1='this')
      push 0, r:this, '2a[b;('
      callMethod
      pop
      push r:this, '9O*r'
      getMember
      push 10000
      multiply
      push 1, '3Wt'
      getVariable
      push '9n6'
      callMethod
      setRegister r:2
      pop
      push r:this, '+h9w3'
      getMember
      push 10000
      multiply
      push 1, '3Wt'
      getVariable
      push '9n6'
      callMethod
      setRegister r:3
      pop
      push 0
      initArray
      setRegister r:4
      pop
      push 0, r:this, '{p39'
      getMember
      push '9Z(8'
      getMember
      push 'iterator'
      callMethod
      setRegister r:5
      pop
     label196:
      push 0, r:5, '1ll a'
      callMethod
      not
      branchIfTrue label197
      push 0, r:5, '7Y-7'
      callMethod
      setRegister r:6
      pop
      push r:6, ')('
      getMember
      push r:6, '(('
      getMember
      push 2
      initArray
      push 1, r:4, 'push'
      callMethod
      pop
      branch label196
     label197:
      push r:4, r:3, r:2, 3, '[Zk'
      getVariable
      push ';9tAL'
      callMethod
      push 1, '}-VbH'
      getVariable
      push ';ptpb'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '1q){x'
    function2 (r:2='', r:3='') (r:1='this')
      push r:3, 26
      multiply
      setRegister r:3
      pop
      push r:this, '4,01'
      getMember
      push '{2', r:2, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push r:3
      multiply
      setMember
      push r:this, '4,01'
      getMember
      push '}2', r:2, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push r:3
      multiply
      setMember
      push 0, r:this, '{p39'
      getMember
      push ']XX}5'
      callMethod
      pop
      push r:this, '=kIA', ')qF['
      getVariable
      push ';31a'
      getMember
      setMember
      push r:this, '93L', 0
      setMember
      push r:this, '4MC5', 0
      setMember
      push TRUE, 1, '}-VbH'
      getVariable
      push '5nwDR'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '=kIA', NULL
    setMember
    push r:1, '93L', NULL
    setMember
    push r:1, '27uBn'
    function2 () (r:1='this')
      push r:this, '4,01'
      getMember
      push '-iB='
      getMember
      push '_xmouse'
      getMember
      setRegister r:2
      pop
      push r:this, '4,01'
      getMember
      push '-iB='
      getMember
      push '_ymouse'
      getMember
      setRegister r:3
      pop
      push r:this, '9O*r', r:2, r:3, 2, 'Math'
      getVariable
      push 'atan2'
      callMethod
      setMember
      push r:this, '+h9w3', 1, r:2, r:2
      multiply
      push r:3, r:3
      multiply
      add
      push 1, 'Math'
      getVariable
      push 'sqrt'
      callMethod
      push 100
      divide
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      setMember
      push r:this, '6iyw='
      getMember
      push '_xscale', r:this, '+h9w3'
      getMember
      push 100
      multiply
      setMember
      push r:this, '6iyw='
      getMember
      push '_rotation', r:this, '9O*r'
      getMember
      push 0.0174
      divide
      setMember
    end // of function 

    setMember
    push r:1, '55pHn'
    function2 () (r:1='this')
      push r:this, '93L', r:this, '93L'
      getMember
      push '9K'
      getVariable
      push '{-kxL'
      getMember
      push '-V;B'
      getMember
      add
      setMember
     label198:
      push r:this, '93L'
      getMember
      push 1
      lessThan
      not
      not
      branchIfTrue label202
      push r:this, '93L', r:this, '93L'
      getMember
      decrement
      setMember
      push r:this, '4MC5', r:this, '4MC5'
      getMember
      increment
      setMember
      push 1, 1, r:this, '{p39'
      getMember
      push '87vE7('
      callMethod
      pop
      push 0, r:this, '{p39'
      getMember
      push '9Z(8'
      getMember
      push 'iterator'
      callMethod
      setRegister r:2
      pop
     label199:
      push 0, r:2, '1ll a'
      callMethod
      not
      branchIfTrue label200
      push 0, r:2, '7Y-7'
      callMethod
      setRegister r:3
      pop
      push 0, r:3, '87vE7('
      callMethod
      pop
      branch label199
     label200:
      push 0, r:this, '{p39'
      getMember
      push '*x-]I'
      callMethod
      setRegister r:2
      pop
      push r:2, 0.5
      lessThan
      not
      branchIfTrue label201
      push 0, r:this, '{p39'
      getMember
      push '3h0U4'
      callMethod
      pop
      push r:this, '=kIA', ')qF['
      getVariable
      push ',=ya'
      getMember
      setMember
      push FALSE, 1, '}-VbH'
      getVariable
      push '5nwDR'
      callMethod
      pop
      branch label202
     label201:
      branch label198
     label202:
    end // of function 

    setMember
    push '2e{I'
    function2 () (r:1='this')
      push r:this, '-iB=', '44{N'
      getVariable
      push '86Itb'
      getMember
      push 'ball', 2, '44{N'
      getVariable
      push '(K'
      getMember
      push '32'
      getMember
      push '*=_p_'
      callMethod
      setMember
      push r:this, '}SYp5', 0, 'mcBallShadow', 2, '44{N'
      getVariable
      push '(K'
      getMember
      push ')LJ'
      getMember
      push '*=_p_'
      callMethod
      setMember
      push r:this, '32', r:this, '-iB='
      getMember
      push 1, '9K'
      getVariable
      push '+7U K'
      newMethod
      setMember
      push r:this, '((', 0
      setMember
      push r:this, ')(', 0
      setMember
      push r:this, '{2', 0
      setMember
      push r:this, '}2', 0
      setMember
      push r:this, '=', '2e{I'
      getVariable
      push '{Cs'
      getMember
      setMember
      push r:this, '9Z 6', r:this, '='
      getMember
      setMember
      push r:this, '(+-', 628, 1, '3Wt'
      getVariable
      push 'random'
      callMethod
      setMember
      push r:this, ')+-', 628, 1, '3Wt'
      getVariable
      push 'random'
      callMethod
      setMember
      push r:this, '-iB='
      getMember
      push '=S7A'
      getMember
      push '_visible', FALSE
      setMember
    end // of function 

    setRegister r:0
    setVariable
    push r:0, '__name__', '2e{I', 1
    initArray
    setMember
    push r:0, '__interfaces__', '}t}[R'
    getVariable
    push 1
    initArray
    setMember
    push '}t}[R'
    getVariable
    push 1, r:0
    implements
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '__class__', r:0
    setMember
    push r:1, '(v+', NULL
    setMember
    push r:1, '*J}8)', NULL
    setMember
    push r:1, '(+-', NULL
    setMember
    push r:1, ')+-', NULL
    setMember
    push r:1, '32', NULL
    setMember
    push r:1, '{2', NULL
    setMember
    push r:1, '}2', NULL
    setMember
    push r:1, ';-[;H'
    function2 (r:2='') (r:1='this')
      push r:this, '*J}8)'
      getMember
      push 1
      subtract
      push 1, '44{N'
      getVariable
      push '(K'
      getMember
      push '6d3*z'
      callMethod
      setRegister r:3
      pop
      push 0, '}-VbH'
      getVariable
      push '9UeAW'
      callMethod
      not
      not
      branchIfTrue label204
      push '44{N'
      getVariable
      push '5;OW;'
      getMember
      push 'partScoreBall', 2, '44{N'
      getVariable
      push '(K'
      getMember
      push '32'
      getMember
      push '*=_p_'
      callMethod
      push 1, ']nSqs'
      new
      setRegister r:4
      pop
      push r:4, '((', r:this, '(('
      getMember
      setMember
      push r:4, ')(', r:this, ')('
      getMember
      setMember
      push r:4, '[b', r:this, '{2'
      getMember
      push 0.5
      multiply
      setMember
      push r:4, ']b', r:this, '}2'
      getMember
      push 0.5
      multiply
      setMember
      push r:4, '9O*r', r:2, r:this, 2, '9K'
      getVariable
      push '53kZ-('
      getMember
      push '75+O'
      getMember
      push ')153L'
      callMethod
      setMember
      push r:4, '}CL', r:3
      setMember
      push r:4, '*J}8)', '44{N'
      getVariable
      push '(K'
      getMember
      push '=cKzE('
      getMember
      push r:this, '*J}8)'
      getMember
      push 1
      subtract
      getMember
      setMember
      push '44{N'
      getVariable
      push '5;OW;'
      getMember
      push 'mcBallExplode', 2, '44{N'
      getVariable
      push '(K'
      getMember
      push '32'
      getMember
      push '*=_p_'
      callMethod
      setRegister r:5
      pop
      push r:5, '_x', r:this, '(('
      getMember
      setMember
      push r:5, '_y', r:this, ')('
      getMember
      setMember
      push '44{N'
      getVariable
      push '(K'
      getMember
      push '=cKzE('
      getMember
      push r:this, '*J}8)'
      getMember
      push 1
      subtract
      getMember
      push r:5, '1F;A'
      getMember
      push 2, '9K'
      getVariable
      push '53kZ-('
      getMember
      push '0[Y'
      getMember
      push '(H5 S'
      callMethod
      pop
      push '44{N'
      getVariable
      push '(K'
      getMember
      push '=cKzE('
      getMember
      push r:this, '*J}8)'
      getMember
      push 1
      subtract
      getMember
      push r:5, '2F;A'
      getMember
      push 2, '9K'
      getVariable
      push '53kZ-('
      getMember
      push '0[Y'
      getMember
      push '(H5 S'
      callMethod
      pop
      push 10
      setRegister r:6
      pop
      push 2
      setRegister r:7
      pop
      push 0
      setRegister r:8
      pop
      push r:6
      setRegister r:9
      pop
     label203:
      push r:8, r:9
      lessThan
      not
      branchIfTrue label204
      push r:8
      setRegister r:10
      pop
      push r:8
      increment
      setRegister r:8
      pop
      push r:10, 0, 'Math'
      getVariable
      push 'random'
      callMethod
      add
      push r:6
      divide
      push 6.28
      multiply
      setRegister r:11
      pop
      push r:11, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      setRegister r:12
      pop
      push r:11, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      setRegister r:13
      pop
      push 0.5, 0, 'Math'
      getVariable
      push 'random'
      callMethod
      push 10
      multiply
      add
      setRegister r:14
      pop
      push '44{N'
      getVariable
      push '5;OW;'
      getMember
      push 'partLight', 2, '44{N'
      getVariable
      push '(K'
      getMember
      push '32'
      getMember
      push '*=_p_'
      callMethod
      push 1, '9K'
      getVariable
      push '53kZ-('
      getMember
      push ',v0X'
      newMethod
      setRegister r:15
      pop
      push r:15, '((', r:this, '(('
      getMember
      push r:12, r:14
      multiply
      push r:7
      multiply
      add
      setMember
      push r:15, ')(', r:this, ')('
      getMember
      push r:13, r:14
      multiply
      push r:7
      multiply
      add
      setMember
      push r:15, '[b', r:12, r:14
      multiply
      push r:this, '{2'
      getMember
      push 0.4
      multiply
      add
      setMember
      push r:15, ']b', r:13, r:14
      multiply
      push r:this, '}2'
      getMember
      push 0.4
      multiply
      add
      setMember
      push r:15, '+{eA+', 0.9
      setMember
      push r:15, '2VhU6', 10, 0, 'Math'
      getVariable
      push 'random'
      callMethod
      push 15
      multiply
      add
      setMember
      branch label203
     label204:
      push 0, r:this, '9T54'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '9T54'
    function2 () (r:1='this')
      push r:this, 1, '44{N'
      getVariable
      push '(K'
      getMember
      push '{p39'
      getMember
      push '9Z(8'
      getMember
      push 'remove'
      callMethod
      pop
      push 0, r:this, '}SYp5'
      getMember
      push 'removeMovieClip'
      callMethod
      pop
      push 0, r:this, '-iB='
      getMember
      push 'removeMovieClip'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '9Z 6', NULL
    setMember
    push r:1, '}8,C9'
    function2 (r:2='') (r:1='this')
      push r:2, '*J}8)'
      getMember
      push 3
      equals
      not
      branchIfTrue label208
      push r:this, '*J}8)'
      getMember
      setRegister r:3
      push 0
      equals
      branchIfTrue label205
      push r:3, '44{N'
      getVariable
      push '(K'
      getMember
      push '1Vt}d'
      getMember
      equals
      branchIfTrue label206
      push r:3, '44{N'
      getVariable
      push '(K'
      getMember
      push '*(B7+('
      getMember
      equals
      branchIfTrue label207
      branch label208
     label205:
      push '44{N'
      getVariable
      push '(K'
      getMember
      push '1Vt}d'
      getMember
      push 1, r:this, '[W(XN'
      callMethod
      pop
      branch label208
     label206:
      push r:2, 1, r:this, ';-[;H'
      callMethod
      pop
      branch label208
     label207:
      push 0, 1, r:this, '[W(XN'
      callMethod
      pop
      branch label208
     label208:
    end // of function 

    setMember
    push r:1, ')gv94', NULL
    setMember
    push r:1, '=', NULL
    setMember
    push r:1, '-iB=', NULL
    setMember
    push r:1, '(H5 S'
    function2 (r:2='') (r:1='this')
      push r:this, '*J}8)', r:2
      setMember
      push r:2, 1
      add
      push 1, r:this, '-iB='
      getMember
      push 'gotoAndStop'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '}SYp5', NULL
    setMember
    push r:1, '[W(XN'
    function2 (r:2='') (r:1='this')
      push r:2, 1, r:this, '(H5 S'
      callMethod
      pop
      push 0, '}-VbH'
      getVariable
      push '9UeAW'
      callMethod
      not
      not
      branchIfTrue label209
      push 1, 'mcBallBlink', 2, r:this, '32'
      getMember
      push '*=_p_'
      callMethod
      setRegister r:3
      pop
     label209:
    end // of function 

    setMember
    push r:1, '+Y', NULL
    setMember
    push r:1, ',Y', NULL
    setMember
    push r:1, '+Q}B]', NULL
    setMember
    push r:1, '87vE7('
    function2 () (r:1='this')
      push r:this, '-iB='
      getMember
      push '_x', r:this, '(('
      getMember
      setMember
      push r:this, '-iB='
      getMember
      push '_y', r:this, ')('
      getMember
      setMember
      push r:this, '}SYp5'
      getMember
      push '_x', r:this, '(('
      getMember
      push 4
      add
      setMember
      push r:this, '}SYp5'
      getMember
      push '_y', r:this, ')('
      getMember
      push 4
      add
      setMember
    end // of function 

    setMember
    push r:1, '((', NULL
    setMember
    push r:1, ')(', NULL
    setMember
    push 'flash'
    getVariable
    push '7]AJ'
    getMember
    setRegister r:0
    pop
    push 'this'
    getVariable
    push 1, r:0, '__init'
    callMethod
    pop
    push r:0, '__res', 0
    initObject
    setMember
    try r:0
      push 'flash'
      getVariable
      push 'MovieClip', '_global'
      getVariable
      push 'MovieClip'
      getMember
      setMember
      push 'flash'
      getVariable
      push 'TextField', '_global'
      getVariable
      push 'TextField'
      getMember
      setMember
      push 'flash'
      getVariable
      push 'text'
      getMember
      push 'StyleSheet', '_global'
      getVariable
      push 'TextField'
      getMember
      push 'StyleSheet'
      getMember
      setMember
      push '__eval'
      function2 (r:2='') (r:1='this')
        push r:2
        getVariable
        return
      end // of function 

      setVariable
      push 'flash'
      getVariable
      push 'Color', '_global'
      getVariable
      push 'Color'
      getMember
      setMember
      push 'flash'
      getVariable
      push 'TextFormat', '_global'
      getVariable
      push 'TextFormat'
      getMember
      setMember
      push 'flash'
      getVariable
      push 'Stage', '_global'
      getVariable
      push 'Stage'
      getMember
      setMember
      push 'flash'
      getVariable
      push 'TextSnapshot', '_global'
      getVariable
      push 'TextSnapshot'
      getMember
      setMember
      push '9K'
      getVariable
      push '53kZ-('
      getMember
      push '-0]rl'
      getMember
      push '*5oz7(', 0, 'Array'
      new
      setMember
      push ']nSqs'
      getVariable
      push '{)W', 1
      setMember
      push ']nSqs'
      getVariable
      push '(,9)D', 0.95
      setMember
      push '*r'
      getVariable
      push '=OA', 300
      setMember
      push '*r'
      getVariable
      push '*OA', 300
      setMember
      push '*r'
      getVariable
      push '}PI=', 2
      setMember
      push '*r'
      getVariable
      push '{IrB)(', 12
      setMember
      push '*r'
      getVariable
      push '*Um=H(', 5
      setMember
      push '9K'
      getVariable
      push '53kZ-('
      getMember
      push '-wDX['
      getMember
      push '(,JNq', FALSE
      setMember
      push '9K'
      getVariable
      push '53kZ-('
      getMember
      push '-wDX['
      getMember
      push ' ]55', 0, 'Array'
      new
      setMember
      push '44{N'
      getVariable
      push '4MvcB', 0
      setMember
      push '44{N'
      getVariable
      push '2awen', 1
      setMember
      push '44{N'
      getVariable
      push '7j3H1', 2
      setMember
      push '44{N'
      getVariable
      push '86Itb', 3
      setMember
      push '44{N'
      getVariable
      push '5;OW;', 8
      setMember
      push '2e{I'
      getVariable
      push '{Cs', 12
      setMember
      branch label210
    catch
      push r:0, 1, 'flash'
      getVariable
      push '7]AJ'
      getMember
      push '__exc'
      callMethod
      pop
     label210:
    end // of try
  end // of frame 0
end
