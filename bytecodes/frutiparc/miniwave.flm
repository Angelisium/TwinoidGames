movie 'miniwave.swf' compressed // flash 7, total frames: 12, frame rate: 40 fps, 600x240 px

  defineMovieClip 1 // total frames: 0
  end // of defineMovieClip 1
  
  exportAssets
    1 as '__Packages.miniwave.Manager'
  end // of exportAssets
  
  initMovieClip 1
    constants '_global', 'miniwave', 'Object', ';j*J0(', '=w)l', 'MovieClip', 'prototype', ';IwU', '[MNG] init(', '}P=,U', ')\n', '{;U,+', '[zY{z', '-2I89', '3I2[((', '*0GPC', ']o]m6(', '[w;(', 'serviceConnect', '9]by_', ',N6)C', '08;s-(', '[2qsN', '6}jsa', '2d[', 'Key', 'isDown', '*w_=M', 'forcePause', '1TT)7', '1c1O', ']ZGs2', '+]', '8_aeB(', ';j,t+(', '_visible', '5h=iR', 'genSlot !!', '1T3j', 'miniWave2', 'attachMovie', '[_6rB(', ' c2q', '1grti', '=*TTG', '-3(P', 'name', 'Letter-monster', '6b;Pt', 'Nitro-pruneau', ']J_Ri', 'Brugnon cuirassé', '32A;x', 'Pois casseur', '}iTLr', 'Cosmo-Cassis', '94KvY', 'Bulbe spatial', '=}{Dn', 'Courge céleste', '95X5]', 'Pêche jongleuse', ';SXX8', 'Demon lemon', '[ZNu9', 'Prune paralysante', ']e}dI', 'Prune sidérale', '0hU7]', 'Kiwi interstellaire', '0vE7A', 'Poivri le poivron violent', '7pZN2', 'Space-Kumquat', '*6K[4(', 'Scarabé pulpé', '0y*sL', 'Betterave\tastrale', '[-mop', 'Astro-raisin', '4Cw[6', 'Pruneau passe-muraille', ' VkMU', 'Nectarine trou-noir', '30k{=', 'Abricot guerrier', '6U3t5', 'Pêche astronomique', '3,J s', 'Space-Groseille', '1S,PG', 'Aubergine folle', '=x,d-', 'Fraise-shuriken', '0XKmH', 'Myrtillerie lourde', '1gDW-(', 'Ananas sauvage', '4hD(B', 'Astro-Quetsch', '3yV78', '(n{i (', '+gV,]', '1;{)B', '+v)*=(', 'Mangue-strike', '-5L7e', 'Aigrelle assassine', '2mQbY', 'Baies à tête chercheuse', '7,s-6', 'Astéropulpe', '1u3{l', ',=Pw4(', '*k,6]', 'Mûre chercheuse', '9I{Nz', 'Pruneau magnétique', '=(*FX', 'Astro-Datte', '{csi5', 'Pomme d\'épines', '5X1Mm', '+DIY7', ']}FNA', 'Figue-laser', '=xWuX', 'Coing mutant', '{{E)6', 'Cosmo-Prune', '[QoYb', 'Astro-Pamplemousse', '[k0Vr', 'Poire sous cloche', '7 8S4', 'Fraise des bois', '{-l-u', 'Cerises-duo', '0]3{l', '45)H,', '}1iD9(', 'Clémentine mécanique', '=_M9E(', ',f *l', '1iHRm', '= *7I(', '6W7Ij', 'Fraise-bouclier', '5F5}m', ',m7Bi', 'rycher', ' rXsS', 'sacuro', '4HQZF(', 'namazan', '(U;{+', 'gapatsa', '8Xpv_', 'proto', ')sW]P', 'aliquet', '2u;W3', 'Colonel', 'Commandant', 'Capitaine', 'Lieutenant', 'SousLieutenant', 'Major', 'Sergent', 'Chef d\'escadre', 'Patrouilleur', 'Pilote', 'Cornette', 'Aspirant', 'Apprenti', '3[gem', ',DVA;', 'so', 'miniWave2/card', 'loadData', '=Y(', 'data', '-nq]*', 'Array', 'slots', ']rmqo', '$vs', '-VEI7(', '5-dCq', ']=(]0', 'format card !!!\n', '$ship00', 'giveItem', '$ship', '$mode', '$arcade', '$bestScore', '$bestLevel', '$letter', '$survival', '$time', '$bonus', '$cons', '$main', '$badsKill', 'length', '$saucerKill', '$credit', '$shop', '$lvl', '$stats', '$play', '$mission', '$buy', 'saveSlot', '*x1rw', '$bads50', 'push', '$sound', '$key', '9tSne', '5x9z5', '-zJvB(', 'removeMovieClip', 'onPause', ',ljQG', 'movieclip', 'stop', 'connected', ' connected !!', '1b 53(', 'flTest', '8x()n', 'level', 'jumpTo', 'parseInt', 'GameMain', 'Menu', '9ncqC(', '4cB2;', '9,T}W', '6DM]P', ';*b', '6L]C*(', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';j*J0('
    getMember
    not
    not
    branchIfTrue label39
    push 'miniwave'
    getVariable
    push ';j*J0('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push ';j*J0('
    getMember
    push 'MovieClip'
    getVariable
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='_root')
      push r:_root, ';IwU', r:_root, ';IwU'
      getMember
      push '[MNG] init(', r:this, '}P=,U'
      getMember
      add
      push ')\n'
      add
      add
      setMember
      push 0.0, r:this, '{;U,+'
      callMethod
      pop
      push 0.0, r:this, '[zY{z'
      callMethod
      pop
      push r:this, '-2I89', FALSE
      setMember
      push r:this, '3I2[((', 0.0
      setMember
      push r:this, '*0GPC', 0.0, 'miniwave'
      getVariable
      push ']o]m6('
      newMethod
      setMember
      push r:this, '*0GPC'
      getMember
      push '[w;(', r:this
      setMember
      push 0.0, r:this, '*0GPC'
      getMember
      push 'serviceConnect'
      callMethod
      pop
      push 0.0, r:this, '9]by_'
      callMethod
      pop
      push r:this, ',N6)C'
      getMember
      not
      branchIfTrue label2
      push 0.0, r:this, '08;s-('
      callMethod
      pop
     label2:
      push r:this, '[2qsN', 0.0, 'Object'
      new
      setMember
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this')
      push 0.0, '2d['
      getVariable
      push '6}jsa'
      callMethod
      pop
      push 80, 1, 'Key'
      getVariable
      push 'isDown'
      callMethod
      dup
      branchIfTrue label3
      pop
      push 27, 1, 'Key'
      getVariable
      push 'isDown'
      callMethod
     label3:
      not
      branchIfTrue label6
      push r:this, '*w_=M'
      getMember
      dup
      not
      branchIfTrue label4
      pop
      push r:this, '*0GPC'
      getMember
      push 'forcePause'
      getMember
      not
     label4:
      not
      branchIfTrue label5
      push 0.0, r:this, '1TT)7'
      callMethod
      pop
      push r:this, '*w_=M', FALSE
      setMember
     label5:
      branch label7
     label6:
      push r:this, '*w_=M', TRUE
      setMember
     label7:
      push r:this, '-2I89'
      getMember
      not
      not
      branchIfTrue label8
      push 0.0, r:this, '1c1O'
      getMember
      push '6}jsa'
      callMethod
      pop
      branch label9
     label8:
      push r:this, ']ZGs2', r:this, ']ZGs2'
      getMember
      push 0.5
      multiply
      setMember
      push 50, r:this, ']ZGs2'
      getMember
      add
      push 0.0, r:this, '1c1O'
      getMember
      push 3, 'miniwave'
      getVariable
      push '+]'
      getMember
      push '8_aeB('
      callMethod
      pop
     label9:
      push r:this, ',N6)C'
      getMember
      not
      branchIfTrue label10
      push r:this, ';j,t+('
      getMember
      push '_visible', 8, 1, 'Key'
      getVariable
      push 'isDown'
      callMethod
      setMember
     label10:
    end // of function 

    setMember
    push r:1, '5h=iR'
    function2 (r:4=' c2q', r:3=',to,G(') (r:1='this', r:2='_root')
      push r:_root, ';IwU', r:_root, ';IwU'
      getMember
      push 'genSlot !!'
      add
      setMember
      push r:this, '1c1O'
      getMember
      push '_visible'
      getMember
      not
      branchIfTrue label11
      push 0.0, r:this, '1c1O'
      getMember
      push '1T3j'
      callMethod
      pop
     label11:
      push r:',to,G(', UNDEF
      equals
      not
      branchIfTrue label12
      push 0.0, 'Object'
      new
      setRegister r:',to,G('
      pop
     label12:
      push r:',to,G(', '[w;(', r:this
      setMember
      push r:',to,G(', 20, '1c1O', 'miniWave2', r:' c2q'
      add
      push 4, r:this, 'attachMovie'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '{;U,+'
    function2 () (r:1='this')
      push r:this, '[_6rB(', ' c2q', '1grti', '=*TTG', 50, '-3(P', 50, 'name', 'Letter-monster', 4
      initObject
      push ' c2q', '6b;Pt', '=*TTG', 5, '-3(P', 49, 'name', 'Nitro-pruneau', 4
      initObject
      push ' c2q', ']J_Ri', '=*TTG', 220, '-3(P', 48, 'name', 'Brugnon cuirassé', 4
      initObject
      push ' c2q', '32A;x', '=*TTG', 150, '-3(P', 47, 'name', 'Pois casseur', 4
      initObject
      push ' c2q', '}iTLr', '=*TTG', 180, '-3(P', 46, 'name', 'Cosmo-Cassis', 4
      initObject
      push ' c2q', '94KvY', '=*TTG', 150, '-3(P', 45, 'name', 'Bulbe spatial', 4
      initObject
      push ' c2q', '=}{Dn', '=*TTG', 200, '-3(P', 44, 'name', 'Courge céleste', 4
      initObject
      push ' c2q', '95X5]', '=*TTG', 180, '-3(P', 43, 'name', 'Pêche jongleuse', 4
      initObject
      push ' c2q', ';SXX8', '=*TTG', 200, '-3(P', 42, 'name', 'Demon lemon', 4
      initObject
      push ' c2q', '[ZNu9', '=*TTG', 110, '-3(P', 35, 'name', 'Prune paralysante', 4
      initObject
      push ' c2q', ']e}dI', '=*TTG', 110, '-3(P', 40, 'name', 'Prune sidérale', 4
      initObject
      push ' c2q', '0hU7]', '=*TTG', 70, '-3(P', 22, 'name', 'Kiwi interstellaire', 4
      initObject
      push ' c2q', '0vE7A', '=*TTG', 180, '-3(P', 39, 'name', 'Poivri le poivron violent', 4
      initObject
      push ' c2q', '7pZN2', '=*TTG', 110, '-3(P', 38, 'name', 'Space-Kumquat', 4
      initObject
      push ' c2q', '*6K[4(', '=*TTG', 150, '-3(P', 37, 'name', 'Scarabé pulpé', 4
      initObject
      push ' c2q', '0y*sL', '=*TTG', 120, '-3(P', 32, 'name', 'Betterave\tastrale', 4
      initObject
      push ' c2q', '[-mop', '=*TTG', 110, '-3(P', 36, 'name', 'Astro-raisin', 4
      initObject
      push ' c2q', '4Cw[6', '=*TTG', 250, '-3(P', 41, 'name', 'Pruneau passe-muraille', 4
      initObject
      push ' c2q', ' VkMU', '=*TTG', 120, '-3(P', 30, 'name', 'Nectarine trou-noir', 4
      initObject
      push ' c2q', '30k{=', '=*TTG', 95, '-3(P', 31, 'name', 'Abricot guerrier', 4
      initObject
      push ' c2q', '6U3t5', '=*TTG', 95, '-3(P', 33, 'name', 'Pêche astronomique', 4
      initObject
      push ' c2q', '3,J s', '=*TTG', 90, '-3(P', 28, 'name', 'Space-Groseille', 4
      initObject
      push ' c2q', '1S,PG', '=*TTG', 95, '-3(P', 29, 'name', 'Aubergine folle', 4
      initObject
      push ' c2q', '=x,d-', '=*TTG', 65, '-3(P', 21, 'name', 'Fraise-shuriken', 4
      initObject
      push ' c2q', '0XKmH', '=*TTG', 180, '-3(P', 34, 'name', 'Myrtillerie lourde', 4
      initObject
      push ' c2q', '1gDW-(', '=*TTG', 150, '-3(P', 24, 'name', 'Ananas sauvage', 4
      initObject
      push ' c2q', '4hD(B', '=*TTG', 60, '-3(P', 16, 'name', 'Astro-Quetsch', 4
      initObject
      push ' c2q', '3yV78', '=*TTG', 50, '-3(P', 13, 'name', '(n{i (', 4
      initObject
      push ' c2q', '+gV,]', '=*TTG', 70, '-3(P', 17, 'name', '1;{)B', 4
      initObject
      push ' c2q', '+v)*=(', '=*TTG', 65, '-3(P', 20, 'name', 'Mangue-strike', 4
      initObject
      push ' c2q', '-5L7e', '=*TTG', 55, '-3(P', 15, 'name', 'Aigrelle assassine', 4
      initObject
      push ' c2q', '2mQbY', '=*TTG', 85, '-3(P', 27, 'name', 'Baies à tête chercheuse', 4
      initObject
      push ' c2q', '7,s-6', '=*TTG', 80, '-3(P', 26, 'name', 'Astéropulpe', 4
      initObject
      push ' c2q', '1u3{l', '=*TTG', 120, '-3(P', 18, 'name', ',=Pw4(', 4
      initObject
      push ' c2q', '*k,6]', '=*TTG', 70, '-3(P', 23, 'name', 'Mûre chercheuse', 4
      initObject
      push ' c2q', '9I{Nz', '=*TTG', 80, '-3(P', 25, 'name', 'Pruneau magnétique', 4
      initObject
      push ' c2q', '=(*FX', '=*TTG', 55, '-3(P', 14, 'name', 'Astro-Datte', 4
      initObject
      push ' c2q', '{csi5', '=*TTG', 50, '-3(P', 12, 'name', 'Pomme d\'épines', 4
      initObject
      push ' c2q', '5X1Mm', '=*TTG', 45, '-3(P', 10, 'name', '+DIY7', 4
      initObject
      push ' c2q', ']}FNA', '=*TTG', 75, '-3(P', 19, 'name', 'Figue-laser', 4
      initObject
      push ' c2q', '=xWuX', '=*TTG', 30, '-3(P', 7, 'name', 'Coing mutant', 4
      initObject
      push ' c2q', '{{E)6', '=*TTG', 40, '-3(P', 9, 'name', 'Cosmo-Prune', 4
      initObject
      push ' c2q', '[QoYb', '=*TTG', 60, '-3(P', 11, 'name', 'Astro-Pamplemousse', 4
      initObject
      push ' c2q', '[k0Vr', '=*TTG', 40, '-3(P', 5, 'name', 'Poire sous cloche', 4
      initObject
      push ' c2q', '7 8S4', '=*TTG', 20, '-3(P', 4, 'name', 'Fraise des bois', 4
      initObject
      push ' c2q', '{-l-u', '=*TTG', 25, '-3(P', 6, 'name', 'Cerises-duo', 4
      initObject
      push ' c2q', '0]3{l', '=*TTG', 35, '-3(P', 8, 'name', '45)H,', 4
      initObject
      push ' c2q', '}1iD9(', '=*TTG', 15, '-3(P', 2, 'name', 'Clémentine mécanique', 4
      initObject
      push ' c2q', '=_M9E(', '=*TTG', 10, '-3(P', 1, 'name', ',f *l', 4
      initObject
      push ' c2q', '1iHRm', '=*TTG', 30, '-3(P', 3, 'name', '= *7I(', 4
      initObject
      push ' c2q', '6W7Ij', '=*TTG', 5, '-3(P', 0.0, 'name', 'Fraise-bouclier', 4
      initObject
      push 51
      initArray
      setMember
      push r:this, '5F5}m', ' c2q', ',m7Bi', 'name', 'rycher', 2
      initObject
      push ' c2q', ' rXsS', 'name', 'sacuro', 2
      initObject
      push ' c2q', '4HQZF(', 'name', 'namazan', 2
      initObject
      push ' c2q', '(U;{+', 'name', 'gapatsa', 2
      initObject
      push ' c2q', '8Xpv_', 'name', 'proto', 2
      initObject
      push ' c2q', ')sW]P', 'name', 'aliquet', 2
      initObject
      push 6
      initArray
      setMember
      push r:this, '2u;W3', 'Colonel', 'Commandant', 'Capitaine', 'Lieutenant', 'SousLieutenant', 'Major', 'Sergent', 'Chef d\'escadre', 'Patrouilleur', 'Pilote', 'Cornette', 'Aspirant', 'Apprenti', 13
      initArray
      setMember
    end // of function 

    setMember
    push r:1, '3[gem'
    function2 () (r:1='this', r:2='_root')
      push r:this, '*0GPC'
      getMember
      push ',DVA;'
      getMember
      not
      branchIfTrue label14
      push r:this, 'so', 'miniWave2/card', 1, r:_root, 'loadData'
      callMethod
      setMember
      push r:this, '=Y(', r:this, 'so'
      getMember
      push 'data'
      getMember
      push '-nq]*'
      getMember
      setMember
      push r:this, '=Y('
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label13
      push r:this, '=Y(', 0.0, 'Array'
      new
      setMember
      push r:this, 'so'
      getMember
      push 'data'
      getMember
      push '-nq]*', r:this, '=Y('
      getMember
      setMember
     label13:
      branch label15
     label14:
      push r:this, '=Y(', r:this, '*0GPC'
      getMember
      push 'slots'
      getMember
      setMember
     label15:
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push UNDEF
      equals
      dup
      branchIfTrue label16
      pop
      push 70, 1, 'Key'
      getVariable
      push 'isDown'
      callMethod
      dup
      not
      branchIfTrue label16
      pop
      push 32, 1, 'Key'
      getVariable
      push 'isDown'
      callMethod
     label16:
      not
      branchIfTrue label17
      push 0.0, r:this, ']rmqo'
      callMethod
      pop
     label17:
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$vs'
      getMember
      push r:this, '}P=,U'
      getMember
      lessThan
      not
      branchIfTrue label18
      push 0.0, r:this, '-VEI7('
      callMethod
      pop
     label18:
      push r:this, '=Y('
      getMember
      push 1
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label19
      push 0.0, r:this, '5-dCq'
      callMethod
      pop
     label19:
      push 0.0, r:this, ']=(]0'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ']rmqo'
    function2 () (r:1='this', r:2='_root')
      push r:_root, ';IwU', r:_root, ';IwU'
      getMember
      push 'format card !!!\n'
      add
      setMember
      push '$ship00', 1, r:this, '*0GPC'
      getMember
      push 'giveItem'
      callMethod
      pop
      push r:this, '=Y('
      getMember
      push 0.0, 0.0, 'Object'
      new
      setMember
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$vs', r:this, '}P=,U'
      getMember
      setMember
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$ship', 0.0, 0.0, 0.0, 0.0, 0.0, 1, 6
      initArray
      setMember
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$mode', 1, 1, 0.0, 0.0, 0.0, 3
      initArray
      push 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8
      initArray
      push 1, 5
      initArray
      setMember
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$arcade', '$bestScore', 0.0, '$bestLevel', 0.0, 2
      initObject
      setMember
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$letter', 0.0
      setMember
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$survival', 0.0
      setMember
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$time', 0.0
      setMember
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$bonus', 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8
      initArray
      setMember
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$cons', '$main', 0.0, '$bonus', 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8
      initArray
      push '$letter', 0.0, 3
      initObject
      setMember
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$badsKill', 0.0, 'Array'
      new
      setMember
      push 0.0
      setRegister r:3
      pop
     label20:
      push r:3, r:this, '[_6rB('
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label21
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$badsKill'
      getMember
      push r:3, 0.0
      setMember
      push r:3
      increment
      setRegister r:3
      pop
      branch label20
     label21:
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$saucerKill', 0.0
      setMember
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$credit', 0.0
      setMember
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$shop', 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 20
      initArray
      setMember
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$lvl', 0.0
      setMember
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$stats', '$play', '$main', 0.0, '$mission', 0.0, '$survival', 0.0, '$letter', 0.0, 4
      initObject
      push '$buy', 0.0
      initArray
      push 2
      initObject
      setMember
      push 0.0, 1, r:this, '*0GPC'
      getMember
      push 'saveSlot'
      callMethod
      pop
      push r:this, 'so'
      getMember
      push 'data'
      getMember
      push '-nq]*', r:this, '=Y('
      getMember
      setMember
    end // of function 

    setMember
    push r:1, '-VEI7('
    function2 () (r:1='this')
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$vs'
      getMember
      push 0.92
      lessThan
      not
      branchIfTrue label22
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$badsKill'
      getMember
      push 50
      getMember
      push r:this, '*x1rw'
      getMember
      lessThan
      not
      not
      branchIfTrue label22
      push '$bads50', 1, r:this, '*0GPC'
      getMember
      push 'giveItem'
      callMethod
      pop
     label22:
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$vs'
      getMember
      push 0.9300000000000001
      lessThan
      not
      branchIfTrue label24
     label23:
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$shop'
      getMember
      push 'length'
      getMember
      push 20
      lessThan
      not
      branchIfTrue label24
      push 1, 1, r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$shop'
      getMember
      push 'push'
      callMethod
      pop
      branch label23
     label24:
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$vs', r:this, '}P=,U'
      getMember
      setMember
      push 0.0, 1, r:this, '*0GPC'
      getMember
      push 'saveSlot'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '5-dCq'
    function2 () (r:1='this')
      push r:this, '=Y('
      getMember
      push 1, '$sound', 1, 1, 2
      initArray
      push '$key', 40, 32, 39, 37, 4
      initArray
      push 2
      initObject
      setMember
      push 1, 1, r:this, '*0GPC'
      getMember
      push 'saveSlot'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '9tSne'
    function2 () (r:1='this')
      push r:this, '5x9z5', 0.0, 'Array'
      new
      setMember
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$badsKill'
      getMember
      setRegister r:3
      pop
      push 0.0
      setRegister r:2
      pop
     label25:
      push r:2, r:3, 'length'
      getMember
      lessThan
      not
      branchIfTrue label27
      push r:3, r:2
      getMember
      push r:this, '*x1rw'
      getMember
      lessThan
      not
      branchIfTrue label26
      push r:this, '5x9z5'
      getMember
      push r:2, 1
      setMember
     label26:
      push r:2
      increment
      setRegister r:2
      pop
      branch label25
     label27:
    end // of function 

    setMember
    push r:1, '1TT)7'
    function2 (r:2='9e-g') (r:1='this')
      push r:'9e-g', UNDEF
      equals
      not
      branchIfTrue label28
      push r:this, '-2I89'
      getMember
      not
      setRegister r:'9e-g'
      pop
     label28:
      push r:this, '-2I89', r:'9e-g'
      setMember
      push r:this, '-2I89'
      getMember
      not
      branchIfTrue label29
      push 262, '-zJvB(', '-zJvB(', 3, r:this, 'attachMovie'
      callMethod
      pop
      push r:this, ']ZGs2', 50
      setMember
      branch label30
     label29:
      push 0.0, r:this, '-zJvB('
      getMember
      push 'removeMovieClip'
      callMethod
      pop
      push 100, 0.0, r:this, '1c1O'
      getMember
      push 3, 'miniwave'
      getVariable
      push '+]'
      getMember
      push '8_aeB('
      callMethod
      pop
     label30:
      push 0.0, r:this, '1c1O'
      getMember
      push 'onPause'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ',ljQG'
    function2 (r:6=';p(', r:4='list') (r:1='this')
      push r:';p('
      enumerateValue
     label31:
      setRegister r:0
      push NULL
      equals
      branchIfTrue label36
      push r:0
      setRegister r:7
      pop
      push r:';p(', r:7
      getMember
      setRegister r:3
      pop
      push r:3
      typeof
      push 'movieclip'
      equals
      not
      branchIfTrue label35
      push TRUE
      setRegister r:5
      pop
      push 0.0
      setRegister r:2
      pop
     label32:
      push r:2, r:list, 'length'
      getMember
      lessThan
      not
      branchIfTrue label34
      push r:list, r:2
      getMember
      push r:3
      equals
      not
      branchIfTrue label33
      push FALSE
      setRegister r:5
      pop
      branch label34
     label33:
      push r:2
      increment
      setRegister r:2
      pop
      branch label32
     label34:
      push r:5
      not
      branchIfTrue label35
      push r:3, 1, r:list, 'push'
      callMethod
      pop
      push r:list, r:3, 2, r:this, ',ljQG'
      callMethod
      setRegister r:list
      pop
      push 0.0, r:3, 'stop'
      callMethod
      pop
     label35:
      branch label31
     label36:
      push r:list
      return
    end // of function 

    setMember
    push r:1, 'connected'
    function2 () (r:1='this', r:2='_root')
      push r:_root, ';IwU', r:_root, ';IwU'
      getMember
      push ' connected !!'
      add
      setMember
      push 0.0, r:this, '1b 53('
      callMethod
      pop
      push 0.0, r:this, '3[gem'
      callMethod
      pop
      push r:_root, 'flTest'
      getMember
      not
      branchIfTrue label37
      push '8x()n', 3, 0.0, 0.0, 3
      initArray
      push 'level', 10, r:_root, 'jumpTo'
      getMember
      push 2, 'parseInt'
      callFunction
      push 2
      initObject
      push 'GameMain', 2, r:this, '5h=iR'
      callMethod
      pop
      branch label38
     label37:
      push 'Menu', 1, r:this, '5h=iR'
      callMethod
      pop
     label38:
    end // of function 

    setMember
    push r:1, '9ncqC('
    function2 () (r:1='this')
      push 'Menu', 1, r:this, '5h=iR'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '9]by_'
    function2 () (r:1='this')
      push 144, '4cB2;', '4cB2;', 3, r:this, 'attachMovie'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '1b 53('
    function2 () (r:1='this')
      push 0.0, r:this, '4cB2;'
      getMember
      push 'removeMovieClip'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '[zY{z'
    function2 () (r:1='this')
      push 3, '9,T}W', '6DM]P', 3, r:this, 'attachMovie'
      callMethod
      pop
      push 4, ';*b', '6DM]P', 3, r:this, 'attachMovie'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ']=(]0'
    function2 () (r:1='this')
      push r:this, '=Y('
      getMember
      push 1
      getMember
      push '$sound'
      getMember
      push 0.0
      getMember
      push 1, r:this, '9,T}W'
      getMember
      push '6L]C*('
      callMethod
      pop
      push r:this, '=Y('
      getMember
      push 1
      getMember
      push '$sound'
      getMember
      push 1
      getMember
      push 1, r:this, ';*b'
      getMember
      push '6L]C*('
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '08;s-('
    function2 () (r:1='this')
      push 264, ';j,t+(', ';j,t+(', 3, r:this, 'attachMovie'
      callMethod
      pop
      push r:this, ';j,t+('
      getMember
      push '_visible', FALSE
      setMember
    end // of function 

    setMember
    push r:1, ',N6)C', FALSE
    setMember
    push r:1, '}P=,U', 0.9300000000000001
    setMember
    push r:1, '*x1rw', 200
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push ';j*J0('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label39:
    pop
  end // of initMovieClip 1

  defineMovieClip 2 // total frames: 0
  end // of defineMovieClip 2
  
  exportAssets
    2 as '__Packages.miniwave.Slot'
  end // of exportAssets
  
  initMovieClip 2
    constants '_global', 'miniwave', 'Object', '4t1M', 'MovieClip', 'prototype', '=w)l', '6}jsa', 'onPause', '1T3j', 'removeMovieClip', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '4t1M'
    getMember
    not
    not
    branchIfTrue label2
    push 'miniwave'
    getVariable
    push '4t1M'
    function2 () (r:1='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '4t1M'
    getMember
    push 'MovieClip'
    getVariable
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function ()
    end // of function 

    setMember
    push r:1, '6}jsa'
    function ()
    end // of function 

    setMember
    push r:1, 'onPause'
    function ()
    end // of function 

    setMember
    push r:1, '1T3j'
    function2 () (r:1='this')
      push 0.0, r:this, 'removeMovieClip'
      callMethod
      pop
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '4t1M'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label2:
    pop
  end // of initMovieClip 2

  defineMovieClip 3 // total frames: 0
  end // of defineMovieClip 3
  
  exportAssets
    3 as '__Packages.frusion.gameclient.GameClient'
  end // of exportAssets
  
  initMovieClip 3
    constants '_global', 'frusion', 'Object', 'gameclient', 'GameClient', 'slots', 'Array', 'forceClose', 'forcePause', 'reseting', 'connected', 'gameRunning', 'prototype', '9kVa=', '}vGUS', 'dailyData', ']Xgee', 'isWhite', ']_ a(', '9ge{0', 'isBlack', '-dTgM', 'isGrey', '36T=', 'isGray', 'isRed', '3D_', '4]VoI(', 'logError', 'fatalError', 'getFileInfos', 'closeService', ';W619', 'serviceConnect', '*,zDe', '+,M=N', 'saveSlot', 'startGame', 'giveItem', 'endGame', 'saveScore', 'onServiceConnect', 'onPause', 'onGameClose', 'onGameReset', 'onStartGame', 'onEndGame', 'onSaveScoreFruticard', 'onSaveScore', ')muqY', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'frusion'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'frusion', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'frusion'
    getMember
    push 'gameclient'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'frusion'
    getMember
    push 'gameclient', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'frusion'
    getMember
    push 'gameclient'
    getMember
    push 'GameClient'
    getMember
    not
    not
    branchIfTrue label7
    push 'frusion'
    getVariable
    push 'gameclient'
    getMember
    push 'GameClient'
    function2 () (r:1='this')
      push r:this, 'slots', 0.0, 'Array'
      new
      setMember
      push r:this, 'forceClose', FALSE
      setMember
      push r:this, 'forcePause', FALSE
      setMember
      push r:this, 'reseting', FALSE
      setMember
      push r:this, 'connected', FALSE
      setMember
      push r:this, 'gameRunning', FALSE
      setMember
    end // of function 

    setRegister r:0
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '9kVa='
    function2 () (r:1='this')
      push r:this, 'slots'
      delete
      pop
      push r:this, 'slots', NULL
      setMember
      push r:this, '}vGUS'
      delete
      pop
      push r:this, '}vGUS', NULL
      setMember
      push r:this, 'dailyData'
      delete
      pop
      push r:this, 'dailyData', NULL
      setMember
      push 0.0, r:this, ']Xgee'
      getMember
      push '9kVa='
      callMethod
      pop
      push r:this, ']Xgee'
      delete
      pop
      push r:this, ']Xgee', NULL
      setMember
    end // of function 

    setMember
    push r:1, 'isWhite'
    function2 () (r:1='this')
      push 'frusion'
      getVariable
      push 'gameclient'
      getMember
      push 'GameClient'
      getMember
      push ']_ a('
      getMember
      push 1, r:this, ']Xgee'
      getMember
      push '9ge{0'
      callMethod
      return
    end // of function 

    setMember
    push r:1, 'isBlack'
    function2 () (r:1='this')
      push 'frusion'
      getVariable
      push 'gameclient'
      getMember
      push 'GameClient'
      getMember
      push '-dTgM'
      getMember
      push 1, r:this, ']Xgee'
      getMember
      push '9ge{0'
      callMethod
      return
    end // of function 

    setMember
    push r:1, 'isGrey'
    function2 () (r:1='this')
      push 'frusion'
      getVariable
      push 'gameclient'
      getMember
      push 'GameClient'
      getMember
      push '36T='
      getMember
      push 1, r:this, ']Xgee'
      getMember
      push '9ge{0'
      callMethod
      return
    end // of function 

    setMember
    push r:1, 'isGray'
    function2 () (r:1='this')
      push 'frusion'
      getVariable
      push 'gameclient'
      getMember
      push 'GameClient'
      getMember
      push '36T='
      getMember
      push 1, r:this, ']Xgee'
      getMember
      push '9ge{0'
      callMethod
      return
    end // of function 

    setMember
    push r:1, 'isRed'
    function2 () (r:1='this')
      push 'frusion'
      getVariable
      push 'gameclient'
      getMember
      push 'GameClient'
      getMember
      push '3D_'
      getMember
      push 1, r:this, ']Xgee'
      getMember
      push '9ge{0'
      callMethod
      return
    end // of function 

    setMember
    push r:1, '4]VoI('
    function2 (r:2='1ciKb') (r:1='this')
      push r:this, '}vGUS', r:'1ciKb'
      setMember
    end // of function 

    setMember
    push r:1, 'logError'
    function2 (r:2='9f)b', r:3='[j}3B') (r:1='this')
      push r:'[j}3B', r:'9f)b', 2, r:this, ']Xgee'
      getMember
      push 'logError'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'fatalError'
    function2 (r:3='-F;(', r:2='9Z989') (r:1='this')
      push r:'9Z989', r:'-F;(', 2, r:this, ']Xgee'
      getMember
      push 'fatalError'
      callMethod
      pop
      push 0.0, r:this, '9kVa='
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'getFileInfos'
    function2 (r:2=' UqK_') (r:1='this')
      push r:' UqK_', 1, r:this, ']Xgee'
      getMember
      push 'getFileInfos'
      callMethod
      return
    end // of function 

    setMember
    push r:1, 'closeService'
    function2 () (r:1='this')
      push 'closeService', 1, r:this, '}vGUS'
      callMethod
      pop
      push 0.0, r:this, ']Xgee'
      getMember
      push 'closeService'
      callMethod
      pop
      push 0.0, r:this, '9kVa='
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ';W619'
    function2 () (r:1='this')
      push ';W619', 1, r:this, '}vGUS'
      callMethod
      pop
      push r:this, 'connected'
      getMember
      not
      branchIfTrue label3
      push 0.0, r:this, 'closeService'
      callMethod
      pop
     label3:
    end // of function 

    setMember
    push r:1, 'serviceConnect'
    function2 () (r:1='this')
      push r:this, ']Xgee', r:this, 1, 'frusion'
      getVariable
      push 'gameclient'
      getMember
      push '*,zDe'
      newMethod
      setMember
      push 0.0, r:this, ']Xgee'
      getMember
      push '+,M=N'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'saveSlot'
    function2 (r:2=']Damv', '1c1O') (r:1='this')
      push r:this, 'slots'
      getMember
      push r:']Damv'
      getMember
      push r:']Damv', 2, r:this, ']Xgee'
      getMember
      push 'saveSlot'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'startGame'
    function2 () (r:1='this')
      push 0.0, r:this, ']Xgee'
      getMember
      push 'startGame'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'giveItem'
    function2 (r:2='1E]k') (r:1='this')
      push r:'1E]k', 1, r:this, ']Xgee'
      getMember
      push 'giveItem'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'endGame'
    function2 () (r:1='this')
      push 0.0, r:this, ']Xgee'
      getMember
      push 'endGame'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'saveScore'
    function2 (r:3='3ao2D', r:2='0_g)E') (r:1='this')
      push r:'0_g)E', r:'3ao2D', 2, r:this, ']Xgee'
      getMember
      push 'saveScore'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'onServiceConnect'
    function ()
    end // of function 

    setMember
    push r:1, 'onPause'
    function ()
    end // of function 

    setMember
    push r:1, 'onGameClose'
    function2 () (r:1='this')
      push r:this, 'gameRunning'
      getMember
      not
      branchIfTrue label4
      push 0.0, r:this, 'endGame'
      callMethod
      pop
     label4:
      push 0.0, r:this, 'closeService'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'onGameReset'
    function2 () (r:1='this')
      push r:this, 'gameRunning'
      getMember
      dup
      not
      branchIfTrue label5
      pop
      push 0.0, r:this, 'isWhite'
      callMethod
      not
     label5:
      not
      branchIfTrue label6
      push 0.0, r:this, 'endGame'
      callMethod
      pop
      push 0.0, r:this, 'closeService'
      callMethod
      pop
     label6:
    end // of function 

    setMember
    push r:1, 'onStartGame'
    function ()
    end // of function 

    setMember
    push r:1, 'onEndGame'
    function ()
    end // of function 

    setMember
    push r:1, 'onSaveScoreFruticard'
    function ()
    end // of function 

    setMember
    push r:1, 'onSaveScore'
    function ()
    end // of function 

    setMember
    push r:1, ')muqY'
    function2 () (r:1='this')
      push 0.0, r:this, 'onGameClose'
      callMethod
      pop
    end // of function 

    setMember
    push r:0, '-dTgM', 0.0
    setMember
    push r:0, '36T=', 1
    setMember
    push r:0, ']_ a(', 2
    setMember
    push r:0, '3D_', 3
    setMember
    push 1, NULL, 'frusion'
    getVariable
    push 'gameclient'
    getMember
    push 'GameClient'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label7:
    pop
  end // of initMovieClip 3

  defineMovieClip 4 // total frames: 0
  end // of defineMovieClip 4
  
  exportAssets
    4 as '__Packages.frusion.gameclient.RankingResult'
  end // of exportAssets
  
  initMovieClip 4
    constants '_global', 'frusion', 'Object', 'gameclient', '}BLiC', 'oldPos', 'oldScore', 'bestScorePos', 'bestScore', 'rankingName', 'rankingScore', 'rankingData', 'prototype', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'frusion'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'frusion', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'frusion'
    getMember
    push 'gameclient'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'frusion'
    getMember
    push 'gameclient', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'frusion'
    getMember
    push 'gameclient'
    getMember
    push '}BLiC'
    getMember
    not
    not
    branchIfTrue label3
    push 'frusion'
    getVariable
    push 'gameclient'
    getMember
    push '}BLiC'
    function2 (r:6='3ao2D', r:5='data', r:2=';k(', r:7='7k(', r:4='p', r:3='2(', r:8='8}') (r:1='this')
      push r:this, 'oldPos', r:';k('
      setMember
      push r:this, 'oldScore', r:'7k('
      setMember
      push r:this, 'bestScorePos', r:p
      setMember
      push r:this, 'bestScore', r:'2('
      setMember
      push r:this, 'rankingName', r:'8}'
      setMember
      push r:this, 'rankingScore', r:'3ao2D'
      setMember
      push r:this, 'rankingData', r:'data'
      setMember
    end // of function 

    setRegister r:0
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push 1, NULL, 'frusion'
    getVariable
    push 'gameclient'
    getMember
    push '}BLiC'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label3:
    pop
  end // of initMovieClip 4

  defineMovieClip 5 // total frames: 0
  end // of defineMovieClip 5
  
  exportAssets
    5 as '__Packages.frusion.gameclient.GameClientManager'
  end // of exportAssets
  
  initMovieClip 5
    constants '_global', 'frusion', 'Object', 'gameclient', '*,zDe', 'frusion.gameclient.GameClientManager.GameClientManager', '}vGUS', '})T-8', '*0GPC', ']=D[P', 'onServiceConnect', '2h,(', '[OaT', ' fMBF(', '=AGNT', 'onPause', '(GZWW', 'onGameClose', '3FLcA', 'onGameReset', '-jvT8', '6Q]zX', 'service', '+Z-t5(', 'addListener', '8*SVa', 'Array', ')k8lH(', '(o=Dm', '(iC+L(', 'forcePause', 'prototype', '9ge{0', '6)te+(', '-nnmF', 'logError', 'fatalError', '9kVa=', 'getFileInfos', '_', '.', ')9EEf', '6ub3H(', '-', '3--pd', ' hBGR', '[g(', 'name', 'size', 'parseInt', 'closeService', 'frusion.gameclient.GameClientManager.closeService', 'connected', '+,M=N', 'frusion.gameclient.GameClientManager.getService', 'saveSlot', 'slots', '8RrV*', ';sm[8(', 'startGame', '-JGrF(', 'onStartGame', 'endGame', 'gameRunning', 'giveItem', 'saveScore', '}BLiC', 'ranking', 'onSaveScoreFruticard', 'onSaveScore', 'saveScore server score=', ']5},-', '-Tfj4(', 'dailyData', '+{3bL', 'forceClose', 'reseting', 'XML', 'node.firstChild.attributes.d=', 'firstChild', 'attributes', '2)', 'node.firstChild.attributes.s=', '2(', '3)', ')muqY', 'onEndGame', 'saveScore server onEndGame ', ']*qbT', '0+(', ';uwii', '5Qk5a', 'onSaveScore sub = ', '8}', '3(', 'p', '7k(', ';k(', '-dTgM', '36T=', '0DT=', ']_ a(', '3D_', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'frusion'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'frusion', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'frusion'
    getMember
    push 'gameclient'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'frusion'
    getMember
    push 'gameclient', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'frusion'
    getMember
    push 'gameclient'
    getMember
    push '*,zDe'
    getMember
    not
    not
    branchIfTrue label14
    push 'frusion'
    getVariable
    push 'gameclient'
    getMember
    push '*,zDe'
    function2 (r:3='(iC+L(') (r:1='this', r:2='_global')
      push 'frusion.gameclient.GameClientManager.GameClientManager', 1, r:_global, '}vGUS'
      callMethod
      pop
      push r:this, '})T-8', 0.0, 'frusion'
      getVariable
      push '*0GPC'
      getMember
      push ']=D[P'
      newMethod
      setMember
      push r:this, 'onServiceConnect'
      getMember
      push r:this, 2, '2h,('
      getVariable
      push '[OaT'
      getMember
      push ' fMBF('
      newMethod
      push 1, r:this, '})T-8'
      getMember
      push '=AGNT'
      callMethod
      pop
      push r:this, 'onPause'
      getMember
      push r:this, 2, '2h,('
      getVariable
      push '[OaT'
      getMember
      push ' fMBF('
      newMethod
      push 1, r:this, '})T-8'
      getMember
      push '(GZWW'
      callMethod
      pop
      push r:this, 'onGameClose'
      getMember
      push r:this, 2, '2h,('
      getVariable
      push '[OaT'
      getMember
      push ' fMBF('
      newMethod
      push 1, r:this, '})T-8'
      getMember
      push '3FLcA'
      callMethod
      pop
      push r:this, 'onGameReset'
      getMember
      push r:this, 2, '2h,('
      getVariable
      push '[OaT'
      getMember
      push ' fMBF('
      newMethod
      push 1, r:this, '})T-8'
      getMember
      push '-jvT8'
      callMethod
      pop
      push r:this, '6Q]zX', r:this, '})T-8'
      getMember
      push 1, 'frusion'
      getVariable
      push 'service'
      getMember
      push '+Z-t5('
      newMethod
      setMember
      push r:this, 1, r:this, '6Q]zX'
      getMember
      push 'addListener'
      callMethod
      pop
      push r:this, '8*SVa', 0.0, 'Array'
      new
      setMember
      push r:this, ')k8lH(', FALSE
      setMember
      push r:this, '(o=Dm', FALSE
      setMember
      push r:this, '(iC+L(', r:'(iC+L('
      setMember
      push r:this, '(iC+L('
      getMember
      push 'forcePause', FALSE
      setMember
    end // of function 

    setRegister r:0
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '9ge{0'
    function2 (r:2='color') (r:1='this')
      push r:color, r:this, '6)te+('
      getMember
      push '-nnmF'
      getMember
      equals
      return
    end // of function 

    setMember
    push r:1, 'logError'
    function2 (r:2='9f)b', r:3='[j}3B') (r:1='this')
      push r:'[j}3B', r:'9f)b', 2, r:this, '})T-8'
      getMember
      push 'logError'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'fatalError'
    function2 (r:3='-F;(', r:2='9Z989') (r:1='this')
      push r:'9Z989', r:'-F;(', 2, r:this, '})T-8'
      getMember
      push 'fatalError'
      callMethod
      pop
      push 0.0, r:this, '9kVa='
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'getFileInfos'
    function2 (r:3=' UqK_') (r:1='this', r:2='_global')
      push UNDEF
      setRegister r:4
      pop
      push UNDEF
      setRegister r:5
      pop
      push '_', '.', r:' UqK_', 3, ')9EEf'
      getVariable
      push '6ub3H('
      callMethod
      setRegister r:' UqK_'
      pop
      push '_', '-', r:' UqK_', 3, ')9EEf'
      getVariable
      push '6ub3H('
      callMethod
      setRegister r:' UqK_'
      pop
      push r:_global, '3--pd'
      getMember
      push r:this, '6)te+('
      getMember
      push ' hBGR'
      getMember
      push r:' UqK_'
      getMember
      push '[g('
      getMember
      add
      setRegister r:5
      pop
      push 0.0, 'Object'
      new
      setRegister r:4
      pop
      push r:4, 'name', r:5
      setMember
      push r:4, 'size', 10, r:this, '6)te+('
      getMember
      push ' hBGR'
      getMember
      push r:' UqK_'
      getMember
      push 'size'
      getMember
      push 2, 'parseInt'
      callFunction
      setMember
      push r:4
      return
    end // of function 

    setMember
    push r:1, 'closeService'
    function2 () (r:1='this', r:2='_global')
      push 'frusion.gameclient.GameClientManager.closeService', 1, r:_global, '}vGUS'
      callMethod
      pop
      push r:this, '(iC+L('
      getMember
      push 'connected', FALSE
      setMember
      push 0.0, r:this, '})T-8'
      getMember
      push 'closeService'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '+,M=N'
    function2 () (r:1='this', r:2='_global')
      push 'frusion.gameclient.GameClientManager.getService', 1, r:_global, '}vGUS'
      callMethod
      pop
      push 0.0, r:this, '})T-8'
      getMember
      push '+,M=N'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'saveSlot'
    function2 (r:2=']Damv', r:3='1c1O') (r:1='this')
      push r:'1c1O', UNDEF
      equals
      not
      branchIfTrue label3
      push r:this, 'slots'
      getMember
      push r:']Damv'
      getMember
      push r:']Damv', 2, r:this, '})T-8'
      getMember
      push '8RrV*'
      getMember
      push ';sm[8('
      callMethod
      pop
      branch label4
     label3:
      push r:'1c1O', r:']Damv', 2, r:this, '})T-8'
      getMember
      push '8RrV*'
      getMember
      push ';sm[8('
      callMethod
      pop
     label4:
    end // of function 

    setMember
    push r:1, 'startGame'
    function2 () (r:1='this')
      push r:this, '(o=Dm'
      getMember
      not
      branchIfTrue label5
      push r:this, '6)te+('
      getMember
      push '-JGrF('
      getMember
      push 1, r:this, '6Q]zX'
      getMember
      push 'startGame'
      callMethod
      pop
      branch label6
     label5:
      push 0.0, r:this, '(iC+L('
      getMember
      push 'onStartGame'
      callMethod
      pop
     label6:
    end // of function 

    setMember
    push r:1, 'endGame'
    function2 () (r:1='this')
      push r:this, ')k8lH(', TRUE
      setMember
      push r:this, '(iC+L('
      getMember
      push 'gameRunning', FALSE
      setMember
      push 0.0, r:this, '6Q]zX'
      getMember
      push 'endGame'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'giveItem'
    function2 (r:2='1E]k') (r:1='this')
      push r:'1E]k', 1, r:this, '6Q]zX'
      getMember
      push 'giveItem'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'saveScore'
    function2 (r:4='3ao2D', r:5='data') (r:1='this', r:2='_global')
      push r:this, '(o=Dm'
      getMember
      not
      not
      branchIfTrue label7
      push r:'data', r:'3ao2D', 2, 'frusion'
      getVariable
      push 'gameclient'
      getMember
      push '}BLiC'
      newMethod
      setRegister r:3
      pop
      push r:this, '(iC+L('
      getMember
      push 'ranking', r:3
      setMember
      push 0.0, r:this, '(iC+L('
      getMember
      push 'onSaveScoreFruticard'
      callMethod
      pop
      push 0.0, r:this, '(iC+L('
      getMember
      push 'onSaveScore'
      callMethod
      pop
      branch label8
     label7:
      push 'saveScore server score=', r:'3ao2D'
      add
      push 1, r:_global, '}vGUS'
      callMethod
      pop
      push r:this, ']5},-', r:'3ao2D'
      setMember
      push r:this, '-Tfj4(', r:'data'
      setMember
      push 0.0, r:this, 'endGame'
      callMethod
      pop
      push r:this, ')k8lH(', FALSE
      setMember
     label8:
    end // of function 

    setMember
    push r:1, 'onServiceConnect'
    function2 () (r:1='this')
      push r:this, '(iC+L('
      getMember
      push 'connected'
      getMember
      push 'dailyData', r:this, '})T-8'
      getMember
      push 'dailyData'
      getMember
      setMember
      push r:this, '(o=Dm', r:this, '})T-8'
      getMember
      push '(o=Dm'
      getMember
      setMember
      push r:this, '6)te+(', r:this, '})T-8'
      getMember
      push '6)te+('
      getMember
      setMember
      push r:this, 'slots', r:this, '})T-8'
      getMember
      push '8RrV*'
      getMember
      push 'slots'
      getMember
      setMember
      push r:this, '(iC+L('
      getMember
      push 'connected', TRUE
      setMember
      push r:this, '(iC+L('
      getMember
      push 'slots', r:this, 'slots'
      getMember
      setMember
      push 0.0, r:this, '(iC+L('
      getMember
      push 'onServiceConnect'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'onPause'
    function2 () (r:1='this')
      push r:this, '+{3bL', r:this, '})T-8'
      getMember
      push '+{3bL'
      getMember
      setMember
      push r:this, '(iC+L('
      getMember
      push 'forcePause', r:this, '+{3bL'
      getMember
      setMember
    end // of function 

    setMember
    push r:1, 'onGameClose'
    function2 () (r:1='this')
      push r:this, '(iC+L('
      getMember
      push 'forceClose', TRUE
      setMember
      push r:this, '(iC+L('
      getMember
      push 'forcePause', TRUE
      setMember
      push 0.0, r:this, '(iC+L('
      getMember
      push 'onGameClose'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'onGameReset'
    function2 () (r:1='this')
      push r:this, '(iC+L('
      getMember
      push 'reseting', TRUE
      setMember
      push 0.0, r:this, '(iC+L('
      getMember
      push 'onGameReset'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'onStartGame'
    function2 (r:4='0uzw=') (r:1='this', r:2='_global')
      push r:'0uzw=', 1, 'XML'
      new
      setRegister r:3
      pop
      push 'node.firstChild.attributes.d=', r:3, 'firstChild'
      getMember
      push 'attributes'
      getMember
      push '2)'
      getMember
      add
      push 1, r:_global, '}vGUS'
      callMethod
      pop
      push 'node.firstChild.attributes.s=', r:3, 'firstChild'
      getMember
      push 'attributes'
      getMember
      push '2('
      getMember
      add
      push 1, r:_global, '}vGUS'
      callMethod
      pop
      push r:3, 'firstChild'
      getMember
      push 'attributes'
      getMember
      push '3)'
      getMember
      push UNDEF
      equals
      not
      dup
      branchIfTrue label9
      pop
      push r:3, 'firstChild'
      getMember
      push 'attributes'
      getMember
      push '2)'
      getMember
      push r:this, '6)te+('
      getMember
      push '-nnmF'
      getMember
      equals
      not
     label9:
      not
      branchIfTrue label10
      push 0.0, r:this, '(iC+L('
      getMember
      push ')muqY'
      callMethod
      pop
      push UNDEF
      return
      branch label11
     label10:
      push r:this, '(iC+L('
      getMember
      push 'gameRunning', TRUE
      setMember
     label11:
      push 0.0, r:this, '(iC+L('
      getMember
      push 'onStartGame'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'onEndGame'
    function2 (r:4='0uzw=') (r:1='this', r:2='_global')
      push 'saveScore server onEndGame ', r:this, ')k8lH('
      getMember
      add
      push 1, r:_global, '}vGUS'
      callMethod
      pop
      push r:'0uzw=', 1, 'XML'
      new
      setRegister r:3
      pop
      push r:3, 'firstChild'
      getMember
      push 'attributes'
      getMember
      push '3)'
      getMember
      push UNDEF
      equals
      not
      not
      branchIfTrue label12
      push 0.0, r:this, '(iC+L('
      getMember
      push ')muqY'
      callMethod
      pop
      push UNDEF
      return
     label12:
      push r:this, ')k8lH('
      getMember
      not
      branchIfTrue label13
      push 0.0, r:this, '(iC+L('
      getMember
      push 'onEndGame'
      callMethod
      pop
      push UNDEF
      return
     label13:
      push r:this, ']*qbT', r:3, 'firstChild'
      getMember
      push 'attributes'
      getMember
      push '0+('
      getMember
      setMember
      push r:this, ']*qbT'
      getMember
      push r:this, '-Tfj4('
      getMember
      push 1, '2h,('
      getVariable
      push '[OaT'
      getMember
      push ';uwii'
      getMember
      push '5Qk5a'
      callMethod
      push r:this, ']5},-'
      getMember
      push 3, r:this, '6Q]zX'
      getMember
      push 'saveScore'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'onSaveScore'
    function2 (r:6='0uzw=') (r:1='this', r:2='_global')
      push r:'0uzw=', 1, 'XML'
      new
      setRegister r:5
      pop
      push UNDEF
      setRegister r:3
      pop
      push r:5, 'firstChild'
      getMember
      setRegister r:3
      pop
      push 'onSaveScore sub = ', r:3
      add
      push 1, r:_global, '}vGUS'
      callMethod
      pop
      push r:3, 'attributes'
      getMember
      push '8}'
      getMember
      push 10, r:3, 'attributes'
      getMember
      push '3('
      getMember
      push 2, 'parseInt'
      callFunction
      push 10, r:3, 'attributes'
      getMember
      push '2('
      getMember
      push 2, 'parseInt'
      callFunction
      push 10, r:3, 'attributes'
      getMember
      push 'p'
      getMember
      push 2, 'parseInt'
      callFunction
      push 10, r:3, 'attributes'
      getMember
      push '7k('
      getMember
      push 2, 'parseInt'
      callFunction
      push 10, r:3, 'attributes'
      getMember
      push ';k('
      getMember
      push 2, 'parseInt'
      callFunction
      push r:this, '-Tfj4('
      getMember
      push r:this, ']5},-'
      getMember
      push 8, 'frusion'
      getVariable
      push 'gameclient'
      getMember
      push '}BLiC'
      newMethod
      setRegister r:4
      pop
      push r:this, '(iC+L('
      getMember
      push 'ranking', r:4
      setMember
      push 0.0, r:this, '(iC+L('
      getMember
      push 'onSaveScore'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '9kVa='
    function2 () (r:1='this')
      push r:this, 'slots'
      delete
      pop
      push r:this, 'slots', NULL
      setMember
      push r:this, ']*qbT'
      delete
      pop
      push r:this, ']*qbT', NULL
      setMember
      push 0.0, r:this, '})T-8'
      getMember
      push '9kVa='
      callMethod
      pop
      push r:this, '})T-8'
      delete
      pop
      push r:this, '})T-8', NULL
      setMember
      push 0.0, r:this, '6Q]zX'
      getMember
      push '9kVa='
      callMethod
      pop
      push r:this, '6Q]zX'
      delete
      pop
      push r:this, '6Q]zX', NULL
      setMember
      push 0.0, r:this, '6)te+('
      getMember
      push '9kVa='
      callMethod
      pop
      push r:this, '6)te+('
      delete
      pop
      push r:this, '6)te+(', NULL
      setMember
    end // of function 

    setMember
    push r:0, '-dTgM', 0.0
    setMember
    push r:0, '36T=', 1
    setMember
    push r:0, '0DT=', 'frusion'
    getVariable
    push 'gameclient'
    getMember
    push '*,zDe'
    getMember
    push '36T='
    getMember
    setMember
    push r:0, ']_ a(', 2
    setMember
    push r:0, '3D_', 3
    setMember
    push 1, NULL, 'frusion'
    getVariable
    push 'gameclient'
    getMember
    push '*,zDe'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label14:
    pop
  end // of initMovieClip 5

  defineMovieClip 6 // total frames: 0
  end // of defineMovieClip 6
  
  exportAssets
    6 as '__Packages.ext.util.ExtendedLocalConnection'
  end // of exportAssets
  
  initMovieClip 6
    constants '_global', '2h,(', 'Object', '[OaT', ']bHl_', '*toy8', '[AZSF', '*7E09', 'Array', 'LocalConnection', 'prototype', '9kVa=', '}Cr(7', '8{;zC(', 'connect', ';Iy}d', 'send', '1U}ev', '9Vp(q', '5(L)J(', '02[pN', '+qP=D', '*(vNQ', 'LEC::initRemote', '}vGUS', 'level', 'error', 'callee', '8p7(', '=g}cG', 'close', '}wk2z', 'push', '4-)0K(', 'length', 'allowDomain', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push '2h,('
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push '2h,(', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT'
    getMember
    push ']bHl_'
    getMember
    not
    not
    branchIfTrue label10
    push '2h,('
    getVariable
    push '[OaT'
    getMember
    push ']bHl_'
    function2 (r:3='*toy8', r:4='[AZSF') (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push r:this, '*toy8', r:'*toy8'
      setMember
      push r:this, '[AZSF', r:'[AZSF'
      setMember
      push r:this, '*7E09', 0.0, 'Array'
      new
      setMember
    end // of function 

    setRegister r:0
    setMember
    push '2h,('
    getVariable
    push '[OaT'
    getMember
    push ']bHl_'
    getMember
    push 'LocalConnection'
    getVariable
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '9kVa='
    function2 () (r:1='this')
      push 0.0, r:this, '}Cr(7'
      getMember
      push '9kVa='
      callMethod
      pop
      push r:this, '}Cr(7'
      delete
      pop
      push r:this, '}Cr(7', NULL
      setMember
      push r:this, '*toy8'
      delete
      pop
      push r:this, '}Cr(7', NULL
      setMember
      push r:this, '[AZSF'
      delete
      pop
      push r:this, '}Cr(7', NULL
      setMember
      push r:this, '8{;zC('
      delete
      pop
      push r:this, '8{;zC(', NULL
      setMember
      push r:this, '*7E09'
      delete
      pop
      push r:this, '*7E09', NULL
      setMember
    end // of function 

    setMember
    push r:1, 'connect'
    function2 () (r:1='this', r:2='super')
      push r:this, '*toy8'
      getMember
      push 1, r:super, 'connect'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ';Iy}d'
    function2 (r:4=',CeLG', r:2='arguments', r:3='{G}kp') (r:1='this', r:2='arguments')
      push r:'{G}kp', r:arguments, r:',CeLG', r:this, '[AZSF'
      getMember
      push 4, r:this, '8{;zC('
      getMember
      push 'send'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '1U}ev'
    function2 (r:2='6{y') (r:1='this')
      push r:this, '}Cr(7', r:'6{y'
      setMember
    end // of function 

    setMember
    push r:1, '9Vp(q'
    function2 ('6{y') (r:1='this')
      push r:this, '}Cr(7', NULL
      setMember
      push r:this, '8{;zC('
      getMember
      push '5(L)J('
      function ()
      end // of function 

      setMember
    end // of function 

    setMember
    push r:1, '02[pN'
    function2 () (r:1='this')
      push 0.0, r:this, '}Cr(7'
      getMember
      push '+qP=D'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '*(vNQ'
    function2 () (r:1='this', r:2='arguments', r:3='_global')
      push 'LEC::initRemote', 1, r:_global, '}vGUS'
      callMethod
      pop
      push r:this, '8{;zC(', 0.0, 'LocalConnection'
      new
      setMember
      push r:this, '8{;zC('
      getMember
      push '5(L)J('
      function2 (r:2=']bX*]') (r:1='arguments')
        push r:']bX*]', 'level'
        getMember
        push 'error'
        equals
        not
        branchIfTrue label3
        push 0.0, r:arguments, 'callee'
        getMember
        push '8p7('
        getMember
        push '02[pN'
        callMethod
        pop
       label3:
      end // of function 

      setMember
      push r:this, '8{;zC('
      getMember
      push '5(L)J('
      getMember
      push '8p7(', r:this
      setMember
      push r:this, '=g}cG', FALSE
      setMember
    end // of function 

    setMember
    push r:1, 'close'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:this, '8{;zC('
      getMember
      push 'close'
      callMethod
      pop
      push r:this, '8{;zC(', NULL
      setMember
      push r:this, '8{;zC('
      delete
      pop
      push 0.0, r:super, 'close'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '}wk2z'
    function2 (r:2='-2R_5') (r:1='this')
      push r:'-2R_5', 1, r:this, '*7E09'
      getMember
      push 'push'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '4-)0K('
    function2 (r:4='4Dc;}') (r:1='this')
      push r:this, '*7E09'
      getMember
      push 'length'
      getMember
      setRegister r:3
      pop
      push 0.0
      setRegister r:2
      pop
     label4:
      push r:2, r:3
      lessThan
      not
      branchIfTrue label6
      push r:'4Dc;}', r:this, '*7E09'
      getMember
      push r:2
      getMember
      equals
      not
      branchIfTrue label5
      push TRUE
      return
     label5:
      push r:2
      increment
      setRegister r:2
      pop
      branch label4
     label6:
      push FALSE
      return
    end // of function 

    setMember
    push r:1, 'allowDomain'
    function2 (r:4='4Dc;}') (r:1='this')
      push r:this, '*7E09'
      getMember
      push 'length'
      getMember
      setRegister r:3
      pop
      push 0.0
      setRegister r:2
      pop
     label7:
      push r:2, r:3
      lessThan
      not
      branchIfTrue label9
      push r:'4Dc;}', r:this, '*7E09'
      getMember
      push r:2
      getMember
      equals
      not
      branchIfTrue label8
      push TRUE
      return
     label8:
      push r:2
      increment
      setRegister r:2
      pop
      branch label7
     label9:
      push FALSE
      return
    end // of function 

    setMember
    push 1, NULL, '2h,('
    getVariable
    push '[OaT'
    getMember
    push ']bHl_'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label10:
    pop
  end // of initMovieClip 6

  defineMovieClip 7 // total frames: 0
  end // of defineMovieClip 7
  
  exportAssets
    7 as '__Packages.ext.util.Callback'
  end // of exportAssets
  
  initMovieClip 7
    constants '_global', '2h,(', 'Object', '[OaT', ' fMBF(', '5RmS (', ',CeLG', 'prototype', '9kVa=', '+qP=D', 'call', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push '2h,('
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push '2h,(', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT'
    getMember
    push ' fMBF('
    getMember
    not
    not
    branchIfTrue label3
    push '2h,('
    getVariable
    push '[OaT'
    getMember
    push ' fMBF('
    function2 (r:2='5RmS (', r:3=',CeLG') (r:1='this')
      push r:this, '5RmS (', r:'5RmS ('
      setMember
      push r:this, ',CeLG', r:',CeLG'
      setMember
    end // of function 

    setRegister r:0
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '9kVa='
    function2 () (r:1='this')
      push r:this, '5RmS ('
      delete
      pop
      push r:this, '5RmS (', NULL
      setMember
      push r:this, ',CeLG'
      delete
      pop
      push r:this, ',CeLG', NULL
      setMember
    end // of function 

    setMember
    push r:1, '+qP=D'
    function2 (r:2='object') (r:1='this')
      push r:object, r:this, '5RmS ('
      getMember
      push 2, r:this, ',CeLG'
      getMember
      push 'call'
      callMethod
      pop
    end // of function 

    setMember
    push 1, NULL, '2h,('
    getVariable
    push '[OaT'
    getMember
    push ' fMBF('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label3:
    pop
  end // of initMovieClip 7

  defineMovieClip 8 // total frames: 0
  end // of defineMovieClip 8
  
  exportAssets
    8 as '__Packages.ext.util.CardiogramPatient'
  end // of exportAssets
  
  initMovieClip 8
    constants '_global', '2h,(', 'Object', '[OaT', '9BSOV'  
    push '_global'
    getVariable
    push '2h,('
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push '2h,(', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT'
    getMember
    push '9BSOV'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT'
    getMember
    push '9BSOV'
    function ()
    end // of function 

    setMember
   label3:
    pop
  end // of initMovieClip 8

  defineMovieClip 9 // total frames: 0
  end // of defineMovieClip 9
  
  exportAssets
    9 as '__Packages.frusion.client.FrusionClient'
  end // of exportAssets
  
  initMovieClip 9
    constants '_global', 'frusion', 'Object', '*0GPC', ']=D[P', ' )E},', '1)rj2(', '1PMYZ', '}++p[', '}wk2z', '5EzfY', '; MT9', '{[_u=(', '=g}cG', '*(vNQ', '46cN6(', '2h,(', '[OaT', ' fMBF(', '1U}ev', '(VwiY', '+*919', 'start', 'connect', '3r*=R', 'initialize', '[g(', ';dBWo', ';Iy}d', ']bHl_', 'prototype', '9BSOV', '9kVa=', '8RrV*', '6)te+(', '5Qbvn', '=AGNT', 'FrusionClient::registerReadyCallback', '}vGUS', '(GZWW', 'FrusionClient::registerPauseCallback', ',23N5', '[_F(e', '3FLcA', 'FrusionClient::registerCloseCallback', '8=0yu', '-jvT8', '2[C52', ')K_mp', '8{Y;J(', 'closeService', ')gX(B(', 'close', '4eS;n', '[EKy8', 'stop', '8{;zC(', ',dJLG', '7ojL', '+,M=N', 'FrusionClient::getService', '5N*=a', '*uhOC', ']GLpa', '2_Bhp', '9+7CK', ', TjD(', '+g+;D', ' sQt4(', 'fatalError', '37)M6(', ' {_*8(', '9)', '-7)H', ';)', 'Array', '=P(', 'logError', 'onXML', 'toString', 'XML', 'firstChild', 'nodeName', 'ab', '8fPeO', 'broadcastMessage', '}{Zt*', 'FrusionClient:onIdent', '0aDS]', '[FQb{', '4qQaC', '=3,qz', 'FrusionClient:onReconnect', '-JGrF(', '2)', 'attributes', '2(', 'parseInt', '(o=Dm', 'dailyData', '((1k-(', '69RuY', 'getUser', '0c=Xn', ',+cT', 'service', '96-M_', 'addListener', '1uPe6', '*orn[', 'frusion.client.FrusionClient::onChangeState', '5L9nJ', '+{3bL', '+qP=D', '4Mh_R', '3]h09', '8{nB+', '(;[vM', 'removeListener', '8mW{)', '5eDAE', '4r,s+', '+rduE', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'frusion'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'frusion', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'frusion'
    getMember
    push '*0GPC'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'frusion'
    getMember
    push '*0GPC', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'frusion'
    getMember
    push '*0GPC'
    getMember
    push ']=D[P'
    getMember
    not
    not
    branchIfTrue label12
    push 'frusion'
    getVariable
    push '*0GPC'
    getMember
    push ']=D[P'
    function2 () (r:1='this', r:2='super')
      push 'frusion'
      getVariable
      push ' )E},'
      getMember
      push '1)rj2('
      getMember
      push 'frusion'
      getVariable
      push ' )E},'
      getMember
      push '1PMYZ'
      getMember
      push 2, r:super, UNDEF
      callMethod
      pop
      push 'frusion'
      getVariable
      push ' )E},'
      getMember
      push '}++p['
      getMember
      push 1, r:this, '}wk2z'
      callMethod
      pop
      push 'frusion'
      getVariable
      push ' )E},'
      getMember
      push '5EzfY'
      getMember
      push 1, r:this, '}wk2z'
      callMethod
      pop
      push r:this, '; MT9', 0.0, 'Object'
      new
      setMember
      push r:this, '{[_u=(', 0.0, 'Object'
      new
      setMember
      push r:this, '=g}cG', FALSE
      setMember
      push 0.0, r:this, '*(vNQ'
      callMethod
      pop
      push r:this, '46cN6('
      getMember
      push r:this, 2, '2h,('
      getVariable
      push '[OaT'
      getMember
      push ' fMBF('
      newMethod
      push 1, r:this, '1U}ev'
      callMethod
      pop
      push r:this, '(VwiY', r:this, 1, 2000, 1000, 4, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '+*919'
      newMethod
      setMember
      push 0.0, r:this, '(VwiY'
      getMember
      push 'start'
      callMethod
      pop
      push 0.0, r:this, 'connect'
      callMethod
      pop
      push r:this, 1, '3r*=R'
      getVariable
      push 'initialize'
      callMethod
      pop
      push 'frusion'
      getVariable
      push '*0GPC'
      getMember
      push ']=D[P'
      getMember
      push '[g(', 'frusion'
      getVariable
      push '*0GPC'
      getMember
      push ']=D[P'
      getMember
      push '[g('
      getMember
      increment
      setMember
      push 'frusion'
      getVariable
      push '*0GPC'
      getMember
      push ']=D[P'
      getMember
      push '[g('
      getMember
      push NULL, 'frusion'
      getVariable
      push ' )E},'
      getMember
      push ';dBWo'
      getMember
      push 3, r:this, ';Iy}d'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'frusion'
    getVariable
    push '*0GPC'
    getMember
    push ']=D[P'
    getMember
    push '2h,('
    getVariable
    push '[OaT'
    getMember
    push ']bHl_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT'
    getMember
    push '9BSOV'
    getMember
    push 1, '_global'
    getVariable
    push 'frusion'
    getMember
    push '*0GPC'
    getMember
    push ']=D[P'
    getMember
    implements
    push r:1, '9kVa='
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '9kVa='
      callMethod
      pop
      push r:this, '8RrV*'
      delete
      pop
      push r:this, '8RrV*', NULL
      setMember
      push 0.0, r:this, '6)te+('
      getMember
      push '9kVa='
      callMethod
      pop
      push r:this, '6)te+('
      delete
      pop
      push r:this, '6)te+(', NULL
      setMember
      push 0.0, r:this, '(VwiY'
      getMember
      push '9kVa='
      callMethod
      pop
      push r:this, '(VwiY'
      delete
      pop
      push r:this, '(VwiY', NULL
      setMember
      push r:this, '; MT9'
      delete
      pop
      push r:this, '(VwiY', NULL
      setMember
      push r:this, '{[_u=('
      delete
      pop
      push r:this, '{[_u=(', NULL
      setMember
      push 0.0, r:this, '5Qbvn'
      getMember
      push '9kVa='
      callMethod
      pop
      push r:this, '5Qbvn'
      delete
      pop
      push r:this, '5Qbvn', NULL
      setMember
    end // of function 

    setMember
    push r:1, '=AGNT'
    function2 (r:3='2N0;f') (r:1='this', r:2='_global')
      push 'FrusionClient::registerReadyCallback', 1, r:_global, '}vGUS'
      callMethod
      pop
      push r:this, '5Qbvn', r:'2N0;f'
      setMember
    end // of function 

    setMember
    push r:1, '(GZWW'
    function2 (r:3='2N0;f') (r:1='this', r:2='_global')
      push 'FrusionClient::registerPauseCallback', 1, r:_global, '}vGUS'
      callMethod
      pop
      push r:this, '{[_u=('
      getMember
      push 'frusion'
      getVariable
      push ' )E},'
      getMember
      push ',23N5'
      getMember
      push r:'2N0;f'
      setMember
      push r:this, '{[_u=('
      getMember
      push 'frusion'
      getVariable
      push ' )E},'
      getMember
      push '[_F(e'
      getMember
      push r:'2N0;f'
      setMember
    end // of function 

    setMember
    push r:1, '3FLcA'
    function2 (r:3='2N0;f') (r:1='this', r:2='_global')
      push 'FrusionClient::registerCloseCallback', 1, r:_global, '}vGUS'
      callMethod
      pop
      push r:this, '{[_u=('
      getMember
      push 'frusion'
      getVariable
      push ' )E},'
      getMember
      push '8=0yu'
      getMember
      push r:'2N0;f'
      setMember
    end // of function 

    setMember
    push r:1, '-jvT8'
    function2 (r:2='2N0;f') (r:1='this')
      push r:this, '{[_u=('
      getMember
      push 'frusion'
      getVariable
      push ' )E},'
      getMember
      push '2[C52'
      getMember
      push r:'2N0;f'
      setMember
    end // of function 

    setMember
    push r:1, ')K_mp'
    function2 () (r:1='this')
      push NULL, 'frusion'
      getVariable
      push ' )E},'
      getMember
      push '8{Y;J('
      getMember
      push 2, r:this, ';Iy}d'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'closeService'
    function2 () (r:1='this')
      push NULL, 'frusion'
      getVariable
      push ' )E},'
      getMember
      push ')gX(B('
      getMember
      push 2, r:this, ';Iy}d'
      callMethod
      pop
      push 0.0, r:this, 'close'
      callMethod
      pop
      push 0.0, r:this, '9kVa='
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '4eS;n'
    function2 () (r:1='this')
      push NULL, 'frusion'
      getVariable
      push ' )E},'
      getMember
      push '[EKy8'
      getMember
      push 2, r:this, ';Iy}d'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '46cN6('
    function2 () (r:1='this')
      push r:this, '=g}cG'
      getMember
      not
      branchIfTrue label3
      push UNDEF
      return
     label3:
      push r:this, '=g}cG', TRUE
      setMember
      push 0.0, r:this, '(VwiY'
      getMember
      push 'stop'
      callMethod
      pop
      push 0.0, r:this, 'close'
      callMethod
      pop
      push r:this, '8{;zC(', NULL
      setMember
      push 'frusion'
      getVariable
      push ' )E},'
      getMember
      push ',dJLG'
      getMember
      push 'frusion'
      getVariable
      push ' )E},'
      getMember
      push '7ojL'
      getMember
      getURL2
    end // of function 

    setMember
    push r:1, '+,M=N'
    function2 () (r:1='this', r:2='_global')
      push 'FrusionClient::getService', 1, r:_global, '}vGUS'
      callMethod
      pop
      push NULL, NULL, 'frusion'
      getVariable
      push ' )E},'
      getMember
      push '5N*=a'
      getMember
      push 3, r:this, ';Iy}d'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '*uhOC'
    function2 (r:2='; MT9') (r:1='this')
      push r:'; MT9'
      enumerateValue
     label4:
      setRegister r:0
      push NULL
      equals
      branchIfTrue label5
      push r:0
      setRegister r:3
      pop
      push r:this, '; MT9'
      getMember
      push r:3, r:'; MT9', r:3
      getMember
      setMember
      branch label4
     label5:
    end // of function 

    setMember
    push r:1, ']GLpa'
    function2 (r:3='*IfSL', r:2=',nGRt') (r:1='this')
      push 'frusion'
      getVariable
      push '*0GPC'
      getMember
      push ']=D[P'
      getMember
      push '[g('
      getMember
      push NULL, r:',nGRt', r:'*IfSL', 3, 'frusion'
      getVariable
      push '2_Bhp'
      getMember
      push '9+7CK'
      getMember
      push ', TjD('
      callMethod
      push 'frusion'
      getVariable
      push ' )E},'
      getMember
      push '+g+;D'
      getMember
      push 3, r:this, ';Iy}d'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' sQt4('
    function2 (r:4='*IfSL', r:2=',nGRt', r:3='data') (r:1='this')
      push 'frusion'
      getVariable
      push '*0GPC'
      getMember
      push ']=D[P'
      getMember
      push '[g('
      getMember
      push r:'data', r:',nGRt', r:'*IfSL', 3, 'frusion'
      getVariable
      push '2_Bhp'
      getMember
      push '9+7CK'
      getMember
      push ', TjD('
      callMethod
      push 'frusion'
      getVariable
      push ' )E},'
      getMember
      push '+g+;D'
      getMember
      push 3, r:this, ';Iy}d'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'fatalError'
    function2 (r:3='-F;(', r:2='9Z989') (r:1='this')
      push r:'9Z989', 'frusion'
      getVariable
      push ' )E},'
      getMember
      push '37)M6('
      getMember
      push 2, r:this, ';Iy}d'
      callMethod
      pop
      push r:'9Z989', r:this, '6)te+('
      getMember
      push ' {_*8('
      getMember
      push '9)', 2, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '-7)H'
      newMethod
      push r:'-F;(', ';)', 2, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '-7)H'
      newMethod
      push 2, 'Array'
      new
      push '=P(', 3, r:this, ' sQt4('
      callMethod
      pop
      push 0.0, r:this, 'close'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'logError'
    function2 (r:2='9f)b', r:3='[j}3B') (r:1='this')
      push r:'[j}3B', r:this, '6)te+('
      getMember
      push ' {_*8('
      getMember
      push '9)', 2, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '-7)H'
      newMethod
      push r:'9f)b', ';)', 2, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '-7)H'
      newMethod
      push 2, 'Array'
      new
      push '=P(', 3, r:this, ' sQt4('
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'onXML'
    function2 (r:5='9AGHA(') (r:1='this')
      push FALSE
      setRegister r:4
      pop
      push 0.0, r:'9AGHA(', 1
      getMember
      push 'toString'
      callMethod
      push 1, 'XML'
      new
      setRegister r:2
      pop
      push r:2, 'firstChild'
      getMember
      push 'nodeName'
      getMember
      push 'ab'
      equals
      not
      branchIfTrue label6
      push r:'9AGHA(', 1, r:this, '8fPeO'
      callMethod
      pop
      branch label7
     label6:
      push r:this, '; MT9'
      getMember
      push r:2, 'firstChild'
      getMember
      push 'nodeName'
      getMember
      getMember
      setRegister r:3
      pop
      push r:2, r:3, 2, r:this, 'broadcastMessage'
      callMethod
      pop
     label7:
    end // of function 

    setMember
    push r:1, '}{Zt*'
    function2 () (r:1='this', r:2='_global')
      push 'FrusionClient:onIdent', 1, r:_global, '}vGUS'
      callMethod
      pop
      push r:this, '0aDS]', TRUE
      setMember
      push r:this, '[FQb{'
      getMember
      not
      branchIfTrue label8
      push UNDEF
      return
     label8:
      push r:this, '[FQb{', TRUE
      setMember
      push 0.0, r:this, '4qQaC'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '=3,qz'
    function2 () (r:1='this', r:2='_global')
      push 'FrusionClient:onReconnect', 1, r:_global, '}vGUS'
      callMethod
      pop
      push r:this, '6)te+('
      getMember
      push '-JGrF('
      getMember
      push '2)', 2, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '-7)H'
      newMethod
      push 1, 'Array'
      new
      push 'ab', 2, r:this, ']GLpa'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '8fPeO'
    function2 (r:3='1=(o') (r:1='this')
      push 0.0, r:'1=(o', 1
      getMember
      push 'toString'
      callMethod
      push 1, 'XML'
      new
      setRegister r:2
      pop
      push 10, r:2, 'firstChild'
      getMember
      push 'attributes'
      getMember
      push '2('
      getMember
      toString
      push 2, 'parseInt'
      callFunction
      push 1
      equals
      not
      branchIfTrue label9
      push r:this, '(o=Dm', TRUE
      setMember
      push r:this, 'dailyData', r:2, 'firstChild'
      getMember
      push '((1k-('
      getMember
      toString
      setMember
     label9:
    end // of function 

    setMember
    push r:1, '69RuY'
    function2 (r:2='9AGHA(') (r:1='this')
      push r:this, '6)te+(', r:'9AGHA(', 1
      getMember
      setMember
      push r:this, '6)te+('
      getMember
      push '-JGrF('
      getMember
      push '2)', 2, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '-7)H'
      newMethod
      push 1, 'Array'
      new
      push 'ab', 2, r:this, ']GLpa'
      callMethod
      pop
      push 0.0, r:this, 'getUser'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '0c=Xn'
    function2 (r:2='9AGHA(') (r:1='this')
      push r:this, ',+cT', r:'9AGHA(', 1
      getMember
      setMember
      push r:this, '8RrV*', r:this, r:this, '6)te+('
      getMember
      push ' {_*8('
      getMember
      push 2, 'frusion'
      getVariable
      push 'service'
      getMember
      push '96-M_'
      newMethod
      setMember
      push r:this, 1, r:this, '8RrV*'
      getMember
      push 'addListener'
      callMethod
      pop
      push r:this, '6)te+('
      getMember
      push ' {_*8('
      getMember
      push 1, r:this, '8RrV*'
      getMember
      push '1uPe6'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '*orn['
    function2 (r:3='9AGHA(') (r:1='this', r:2='_global')
      push 'frusion.client.FrusionClient::onChangeState', 1, r:_global, '}vGUS'
      callMethod
      pop
      push r:this, '5L9nJ', r:'9AGHA(', 1
      getMember
      setMember
      push r:this, '5L9nJ'
      getMember
      push 'frusion'
      getVariable
      push ' )E},'
      getMember
      push ',23N5'
      getMember
      equals
      not
      branchIfTrue label10
      push r:this, '+{3bL', TRUE
      setMember
      branch label11
     label10:
      push r:this, '5L9nJ'
      getMember
      push 'frusion'
      getVariable
      push ' )E},'
      getMember
      push '[_F(e'
      getMember
      equals
      not
      branchIfTrue label11
      push r:this, '+{3bL', FALSE
      setMember
     label11:
      push 0.0, '2h,('
      getVariable
      push '[OaT'
      getMember
      push ' fMBF('
      getMember
      push r:this, '{[_u=('
      getMember
      push r:this, '5L9nJ'
      getMember
      getMember
      cast
      push '+qP=D'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '4Mh_R'
    function2 () (r:1='this', r:2='_global')
      push '4Mh_R', 1, r:_global, '}vGUS'
      callMethod
      pop
      push 0.0, r:this, '5Qbvn'
      getMember
      push '+qP=D'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '4qQaC'
    function2 () (r:1='this')
      push 'frusion'
      getVariable
      push ' )E},'
      getMember
      push '3]h09'
      getMember
      push 1, r:this, ';Iy}d'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'getUser'
    function2 () (r:1='this')
      push 'frusion'
      getVariable
      push ' )E},'
      getMember
      push '8{nB+'
      getMember
      push 1, r:this, ';Iy}d'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '(;[vM'
    function2 () (r:1='this')
      push r:this, ',+cT'
      getMember
      return
    end // of function 

    setMember
    push r:1, 'broadcastMessage'
    function ()
    end // of function 

    setMember
    push r:1, 'addListener'
    function ()
    end // of function 

    setMember
    push r:1, 'removeListener'
    function ()
    end // of function 

    setMember
    push r:1, '8mW{)'
    function2 () (r:1='this')
      push NULL, 'frusion'
      getVariable
      push ' )E},'
      getMember
      push '5eDAE'
      getMember
      push 2, r:this, ';Iy}d'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '4r,s+'
    function ()
    end // of function 

    setMember
    push r:1, '+rduE'
    function2 () (r:1='this')
      push 0.0, r:this, '(VwiY'
      getMember
      push '+rduE'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '[FQb{', FALSE
    setMember
    push r:1, '0aDS]', FALSE
    setMember
    push r:1, '+{3bL', FALSE
    setMember
    push r:1, '(o=Dm', FALSE
    setMember
    push r:1, '=g}cG', FALSE
    setMember
    push r:0, '[g(', 0.0
    setMember
    push 1, NULL, 'frusion'
    getVariable
    push '*0GPC'
    getMember
    push ']=D[P'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label12:
    pop
  end // of initMovieClip 9

  defineMovieClip 10 // total frames: 0
  end // of defineMovieClip 10
  
  exportAssets
    10 as '__Packages.frusion.service.FrutiCard'
  end // of exportAssets
  
  initMovieClip 10
    constants '_global', 'frusion', 'Object', 'service', '96-M_', '2e+U+(', '3r*=R', 'initialize', '})T-8', 'addListener', '; MT9', ')](', '7qQe+(', '(](', '}-;mJ(', ' ](', '5bzS,', '}[(', '{rS_C', '{[(', '=VIG (', '*uhOC', '4cYEL', ',_XUG', '1uPe6', '=iDbk', ';sm[8(', '(MktU', 'slots', 'Array', '=}1vB', 'prototype', '-)', '2h,(', '[OaT', '-7)H', '8(', ']GLpa', '2(', ';uwii', '5Qk5a', ' sQt4(', 'XML', 'firstChild', 'nodeValue', ':', 'split', ',;K)F', 'length', '-------->frusion.service.Fruticard::onListAvailableSlots: str=', '}vGUS', ' )E},', '9fQZJ(', 'broadcastMessage', '9Eqb=', 'attributes', '4Mh_R', 'removeListener', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'frusion'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'frusion', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'frusion'
    getMember
    push 'service'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'frusion'
    getMember
    push 'service', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'frusion'
    getMember
    push 'service'
    getMember
    push '96-M_'
    getMember
    not
    not
    branchIfTrue label10
    push 'frusion'
    getVariable
    push 'service'
    getMember
    push '96-M_'
    function2 (r:3='2e+U+(', r:2='})T-8') (r:1='this')
      push r:this, '2e+U+(', r:'2e+U+('
      setMember
      push r:this, 1, '3r*=R'
      getVariable
      push 'initialize'
      callMethod
      pop
      push r:this, '})T-8', r:'})T-8'
      setMember
      push r:this, 1, r:this, '})T-8'
      getMember
      push 'addListener'
      callMethod
      pop
      push r:this, '; MT9', 0.0, 'Object'
      new
      setMember
      push r:this, '; MT9'
      getMember
      push ')](', '7qQe+('
      setMember
      push r:this, '; MT9'
      getMember
      push '(](', '}-;mJ('
      setMember
      push r:this, '; MT9'
      getMember
      push ' ](', '5bzS,'
      setMember
      push r:this, '; MT9'
      getMember
      push '}[(', '{rS_C'
      setMember
      push r:this, '; MT9'
      getMember
      push '{[(', '=VIG ('
      setMember
      push r:this, '; MT9'
      getMember
      push 1, r:this, '})T-8'
      getMember
      push '*uhOC'
      callMethod
      pop
      push r:this, '4cYEL', 0.0, 'Object'
      new
      setMember
      push r:this, '4cYEL'
      getMember
      push ',_XUG', ')]('
      setMember
      push r:this, '4cYEL'
      getMember
      push '1uPe6', '(]('
      setMember
      push r:this, '4cYEL'
      getMember
      push '=iDbk', ' ]('
      setMember
      push r:this, '4cYEL'
      getMember
      push ';sm[8(', '}[('
      setMember
      push r:this, '4cYEL'
      getMember
      push '(MktU', '{[('
      setMember
      push r:this, 'slots', 0.0, 'Array'
      new
      setMember
      push r:this, '=}1vB', 0.0, 'Array'
      new
      setMember
    end // of function 

    setRegister r:0
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, ',_XUG'
    function2 (r:2='=ik;n') (r:1='this')
      push r:this, '2e+U+('
      getMember
      push '-)', 2, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '-7)H'
      newMethod
      push r:'=ik;n', '8(', 2, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '-7)H'
      newMethod
      push 2, 'Array'
      new
      push r:this, '4cYEL'
      getMember
      push ',_XUG'
      getMember
      push 2, r:this, '})T-8'
      getMember
      push ']GLpa'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '1uPe6'
    function2 () (r:1='this')
      push r:this, '2e+U+('
      getMember
      push '-)', 2, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '-7)H'
      newMethod
      push 1, 'Array'
      new
      push r:this, '4cYEL'
      getMember
      push '1uPe6'
      getMember
      push 2, r:this, '})T-8'
      getMember
      push ']GLpa'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '=iDbk'
    function2 (r:2=']Damv') (r:1='this')
      push r:this, '2e+U+('
      getMember
      push '-)', 2, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '-7)H'
      newMethod
      push r:']Damv', '2(', 2, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '-7)H'
      newMethod
      push 2, 'Array'
      new
      push r:this, '4cYEL'
      getMember
      push '=iDbk'
      getMember
      push 2, r:this, '})T-8'
      getMember
      push ']GLpa'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ';sm[8('
    function2 (r:3=']Damv', r:4='data') (r:1='this')
      push r:'data', 1, '2h,('
      getVariable
      push '[OaT'
      getMember
      push ';uwii'
      getMember
      push '5Qk5a'
      callMethod
      setRegister r:2
      pop
      push r:2, r:this, '=}1vB'
      getMember
      push r:']Damv'
      getMember
      equals
      not
      not
      branchIfTrue label3
      push r:this, '=}1vB'
      getMember
      push r:']Damv', r:2
      setMember
      push r:2, r:this, '2e+U+('
      getMember
      push '-)', 2, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '-7)H'
      newMethod
      push r:']Damv', '2(', 2, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '-7)H'
      newMethod
      push 2, 'Array'
      new
      push r:this, '4cYEL'
      getMember
      push ';sm[8('
      getMember
      push 3, r:this, '})T-8'
      getMember
      push ' sQt4('
      callMethod
      pop
     label3:
    end // of function 

    setMember
    push r:1, '(MktU'
    function2 (r:2=']Damv') (r:1='this')
      push r:this, '2e+U+('
      getMember
      push '-)', 2, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '-7)H'
      newMethod
      push r:']Damv', '2(', 2, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '-7)H'
      newMethod
      push 2, 'Array'
      new
      push r:this, '4cYEL'
      getMember
      push '(MktU'
      getMember
      push 2, r:this, '})T-8'
      getMember
      push ']GLpa'
      callMethod
      pop
      push r:this, '=}1vB'
      getMember
      push r:']Damv', NULL
      setMember
    end // of function 

    setMember
    push r:1, '}-;mJ('
    function2 (r:7='0uzw=') (r:1='this', r:2='_global')
      push r:'0uzw=', 1, 'XML'
      new
      setRegister r:6
      pop
      push r:6, 'firstChild'
      getMember
      push 'firstChild'
      getMember
      push 'nodeValue'
      getMember
      setRegister r:5
      pop
      push ':', 1, r:5, 'split'
      callMethod
      setRegister r:4
      pop
      push r:5, UNDEF
      equals
      not
      branchIfTrue label4
      push r:this, ',;K)F', 0.0
      setMember
      branch label5
     label4:
      push r:this, ',;K)F', r:4, 'length'
      getMember
      setMember
     label5:
      push '-------->frusion.service.Fruticard::onListAvailableSlots: str=', r:'0uzw='
      add
      push 1, r:_global, '}vGUS'
      callMethod
      pop
      push r:this, ',;K)F'
      getMember
      push 0.0
      equals
      not
      branchIfTrue label6
      push 'frusion'
      getVariable
      push ' )E},'
      getMember
      push '9fQZJ('
      getMember
      push 1, r:this, 'broadcastMessage'
      callMethod
      pop
      branch label8
     label6:
      push 0.0
      setRegister r:3
      pop
     label7:
      push r:3, r:this, ',;K)F'
      getMember
      lessThan
      not
      branchIfTrue label8
      push r:4, r:3
      getMember
      push 1, r:this, '=iDbk'
      callMethod
      pop
      push r:3
      increment
      setRegister r:3
      pop
      branch label7
     label8:
    end // of function 

    setMember
    push r:1, '5bzS,'
    function2 (r:5='1=(o') (r:1='this')
      push UNDEF
      setRegister r:2
      pop
      push UNDEF
      setRegister r:4
      pop
      push UNDEF
      setRegister r:3
      pop
      push r:'1=(o', 1, 'XML'
      new
      setRegister r:2
      pop
      push r:2, 'firstChild'
      getMember
      push 'firstChild'
      getMember
      push 'nodeValue'
      getMember
      push 1, '2h,('
      getVariable
      push '[OaT'
      getMember
      push ';uwii'
      getMember
      push '9Eqb='
      callMethod
      setRegister r:4
      pop
      push r:2, 'firstChild'
      getMember
      push 'attributes'
      getMember
      push '2('
      getMember
      toNumber
      setRegister r:3
      pop
      push r:this, '=}1vB'
      getMember
      push r:3, r:2, 'firstChild'
      getMember
      push 'firstChild'
      getMember
      push 'nodeValue'
      getMember
      setMember
      push r:this, 'slots'
      getMember
      push r:3, r:4
      setMember
      push r:this, ',;K)F', r:this, ',;K)F'
      getMember
      decrement
      setMember
      push r:this, ',;K)F'
      getMember
      push 0.0
      equals
      not
      branchIfTrue label9
      push '4Mh_R', 1, r:this, 'broadcastMessage'
      callMethod
      pop
     label9:
    end // of function 

    setMember
    push r:1, 'broadcastMessage'
    function ()
    end // of function 

    setMember
    push r:1, 'addListener'
    function ()
    end // of function 

    setMember
    push r:1, 'removeListener'
    function ()
    end // of function 

    setMember
    push r:1, ',;K)F', 0.0
    setMember
    push 1, NULL, 'frusion'
    getVariable
    push 'service'
    getMember
    push '96-M_'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label10:
    pop
  end // of initMovieClip 10

  defineMovieClip 11 // total frames: 0
  end // of defineMovieClip 11
  
  exportAssets
    11 as '__Packages.ext.util.Pair'
  end // of exportAssets
  
  initMovieClip 11
    constants '_global', '2h,(', 'Object', '[OaT', '-7)H', 'name', '=*TTG', 'prototype', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push '2h,('
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push '2h,(', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT'
    getMember
    push '-7)H'
    getMember
    not
    not
    branchIfTrue label3
    push '2h,('
    getVariable
    push '[OaT'
    getMember
    push '-7)H'
    function2 (r:2='name', r:3='=*TTG') (r:1='this')
      push r:this, 'name', r:name
      setMember
      push r:this, '=*TTG', r:'=*TTG'
      setMember
    end // of function 

    setRegister r:0
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push 1, NULL, '2h,('
    getVariable
    push '[OaT'
    getMember
    push '-7)H'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label3:
    pop
  end // of initMovieClip 11

  defineMovieClip 12 // total frames: 0
  end // of defineMovieClip 12
  
  exportAssets
    12 as '__Packages.ext.util.MTSerialization'
  end // of exportAssets
  
  initMovieClip 12
    constants '_global', '2h,(', 'Object', '[OaT', ';uwii', 'prototype', '5Qk5a', 'Array', '2{M}O', 'string', 'number', 'boolean', 'function', '[', 'length', ' (', ':', ';', ']', 'toString', '_vs_', 'indexOf', '-', '0(', '}u]CF', 'Infinity', '5)', '4)', '+(', '()', '{', '}', '9Eqb=', '0,_KG(', '\\{', '=z{_a', '\\}', '\\;', '\\:', '=a9u1(', 'substr', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push '2h,('
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push '2h,(', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT'
    getMember
    push ';uwii'
    getMember
    not
    not
    branchIfTrue label24
    push '2h,('
    getVariable
    push '[OaT'
    getMember
    push ';uwii'
    function ()
    end // of function 

    setRegister r:0
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:0, '5Qk5a'
    function2 (r:1='7)') ()
      push r:'7)'
      typeof
      setRegister r:8
      pop
      push r:'7)', 'Array'
      getVariable
      instanceOf
      not
      branchIfTrue label3
      push '2{M}O'
      setRegister r:8
      pop
     label3:
      push r:8
      setRegister r:0
      push '2{M}O'
      strictEquals
      branchIfTrue label4
      push r:0, 'string'
      strictEquals
      branchIfTrue label10
      push r:0, 'number'
      strictEquals
      branchIfTrue label12
      push r:0, 'boolean'
      strictEquals
      branchIfTrue label16
      push r:0, 'function'
      strictEquals
      branchIfTrue label17
      branch label18
     label4:
      push '['
      setRegister r:7
      pop
      push 0.0
      setRegister r:2
      pop
      push 0.0
      setRegister r:3
      pop
      push 0.0
      setRegister r:2
      pop
     label5:
      push r:2, r:'7)', 'length'
      getMember
      lessThan
      not
      branchIfTrue label9
      push r:'7)', r:2
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label6
      push r:3
      increment
      setRegister r:3
      pop
      branch label8
     label6:
      push r:3, 0.0
      greaterThan
      not
      branchIfTrue label7
      push r:7, ' (', r:3
      toString
      add
      push ':'
      add
      add
      setRegister r:7
      pop
      push 0.0
      setRegister r:3
      pop
     label7:
      push r:7, r:'7)', r:2
      getMember
      push 1, '2h,('
      getVariable
      push '[OaT'
      getMember
      push ';uwii'
      getMember
      push '5Qk5a'
      callMethod
      push ';'
      add
      add
      setRegister r:7
      pop
     label8:
      push r:2
      increment
      setRegister r:2
      pop
      branch label5
     label9:
      push r:7, ']'
      add
      setRegister r:7
      pop
      push r:7
      return
     label10:
      push 0.0, r:'7)', 'toString'
      callMethod
      setRegister r:7
      pop
      push '_vs_', 1, r:7, 'indexOf'
      callMethod
      push 0.0
      lessThan
      not
      not
      branchIfTrue label11
      push '-'
      return
      branch label12
     label11:
      push '0(', r:7, 1, '2h,('
      getVariable
      push '[OaT'
      getMember
      push ';uwii'
      getMember
      push '}u]CF'
      callMethod
      add
      return
     label12:
      push r:'7)', 'Infinity'
      getVariable
      equals
      not
      branchIfTrue label13
      push '5)'
      setRegister r:7
      pop
      branch label15
     label13:
      push r:'7)', 0.0, 'Infinity'
      getVariable
      subtract
      equals
      not
      branchIfTrue label14
      push '4)'
      setRegister r:7
      pop
      branch label15
     label14:
      push 0.0, r:'7)', 'toString'
      callMethod
      push 1, '2h,('
      getVariable
      push '[OaT'
      getMember
      push ';uwii'
      getMember
      push '}u]CF'
      callMethod
      setRegister r:7
      pop
     label15:
      push '+(', r:7
      add
      return
     label16:
      push '()', r:'7)'
      toNumber
      add
      return
     label17:
      push '-'
      return
     label18:
      push UNDEF
      setRegister r:5
      pop
      push '{'
      setRegister r:5
      pop
      push r:'7)'
      enumerateValue
     label19:
      setRegister r:0
      push NULL
      equals
      branchIfTrue label21
      push r:0
      setRegister r:6
      pop
      push UNDEF
      setRegister r:4
      pop
      push r:'7)', r:6
      getMember
      push 1, '2h,('
      getVariable
      push '[OaT'
      getMember
      push ';uwii'
      getMember
      push '5Qk5a'
      callMethod
      setRegister r:4
      pop
      push r:4, '-'
      equals
      not
      not
      branchIfTrue label20
      push r:5, r:6, 1, '2h,('
      getVariable
      push '[OaT'
      getMember
      push ';uwii'
      getMember
      push '}u]CF'
      callMethod
      push ':'
      add
      push r:4
      add
      push ';'
      add
      add
      setRegister r:5
      pop
     label20:
      branch label19
     label21:
      push r:5, '}'
      add
      setRegister r:5
      pop
      push r:5
      return
    end // of function 

    setMember
    push r:0, '9Eqb='
    function2 (r:2='(ga') ()
      push 0.0, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '0,_KG('
      newMethod
      setRegister r:1
      pop
      push r:'(ga', 1, r:1, '9Eqb='
      callMethod
      return
    end // of function 

    setMember
    push r:0, '}u]CF'
    function2 (r:1='(ga') ()
      push '\\{', '{', r:'(ga', 3, '2h,('
      getVariable
      push '[OaT'
      getMember
      push ';uwii'
      getMember
      push '=z{_a'
      callMethod
      setRegister r:'(ga'
      pop
      push '\\}', '}', r:'(ga', 3, '2h,('
      getVariable
      push '[OaT'
      getMember
      push ';uwii'
      getMember
      push '=z{_a'
      callMethod
      setRegister r:'(ga'
      pop
      push '\\;', ';', r:'(ga', 3, '2h,('
      getVariable
      push '[OaT'
      getMember
      push ';uwii'
      getMember
      push '=z{_a'
      callMethod
      setRegister r:'(ga'
      pop
      push '\\:', ':', r:'(ga', 3, '2h,('
      getVariable
      push '[OaT'
      getMember
      push ';uwii'
      getMember
      push '=z{_a'
      callMethod
      setRegister r:'(ga'
      pop
      push r:'(ga'
      return
    end // of function 

    setMember
    push r:0, '=a9u1('
    function2 (r:1='(ga') ()
      push '}', '\\}', r:'(ga', 3, '2h,('
      getVariable
      push '[OaT'
      getMember
      push ';uwii'
      getMember
      push '=z{_a'
      callMethod
      setRegister r:'(ga'
      pop
      push '{', '\\{', r:'(ga', 3, '2h,('
      getVariable
      push '[OaT'
      getMember
      push ';uwii'
      getMember
      push '=z{_a'
      callMethod
      setRegister r:'(ga'
      pop
      push ';', '\\;', r:'(ga', 3, '2h,('
      getVariable
      push '[OaT'
      getMember
      push ';uwii'
      getMember
      push '=z{_a'
      callMethod
      setRegister r:'(ga'
      pop
      push ':', '\\:', r:'(ga', 3, '2h,('
      getVariable
      push '[OaT'
      getMember
      push ';uwii'
      getMember
      push '=z{_a'
      callMethod
      setRegister r:'(ga'
      pop
      push r:'(ga'
      return
    end // of function 

    setMember
    push r:0, '=z{_a'
    function2 (r:2='(ga', r:4=' 1gY1', r:5='32xO') ()
      push UNDEF
      setRegister r:1
      pop
      push 0.0
      setRegister r:1
      pop
     label22:
      push r:1, r:' 1gY1', 2, r:'(ga', 'indexOf'
      callMethod
      setRegister r:1
      pop
      push r:1, -1
      equals
      not
      not
      branchIfTrue label23
      push UNDEF
      setRegister r:3
      pop
      push r:1, r:' 1gY1', 'length'
      getMember
      add
      setRegister r:3
      pop
      push r:1, 0.0, 2, r:'(ga', 'substr'
      callMethod
      push r:'32xO'
      add
      push r:3, 1, r:'(ga', 'substr'
      callMethod
      add
      setRegister r:'(ga'
      pop
      push r:1, r:'32xO', 'length'
      getMember
      add
      setRegister r:1
      pop
     label23:
      push r:1, -1
      equals
      not
      branchIfTrue label22
      push r:'(ga'
      return
    end // of function 

    setMember
    push 1, NULL, '2h,('
    getVariable
    push '[OaT'
    getMember
    push ';uwii'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label24:
    pop
  end // of initMovieClip 12

  defineMovieClip 13 // total frames: 0
  end // of defineMovieClip 13
  
  exportAssets
    13 as '__Packages.ext.util.MTTxtParser'
  end // of exportAssets
  
  initMovieClip 13
    constants '_global', '2h,(', 'Object', '[OaT', '79{K+(', 'prototype', '=w)l', '+)PNY', '2{M}O', 'size', 'length', '6,ce', '4dgTb', '', '8DSk0(', 'substring', '0PT-K(', '5(-9K', ',njWk', '6]n0)', ']E9=B(', '}},(', '{KYp', '9_Az', '+)', '=(', ';(', '0', '0', '9', ' ', '\n', '\r', '\t', '8hCTS', ' jzo', '5U[DM', '}M,P;', 'substr', ']T3sU', 'charAt', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push '2h,('
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push '2h,(', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT'
    getMember
    push '79{K+('
    getMember
    not
    not
    branchIfTrue label28
    push '2h,('
    getVariable
    push '[OaT'
    getMember
    push '79{K+('
    function ()
    end // of function 

    setRegister r:0
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 (r:2='}aa') (r:1='this')
      push r:this, '+)PNY', 0.0
      setMember
      push r:this, '2{M}O', r:'}aa'
      setMember
      push r:this, 'size', r:'}aa', 'length'
      getMember
      setMember
    end // of function 

    setMember
    push r:1, '6,ce'
    function2 (r:3='start', r:2='-)-(') (r:1='this')
      push r:start, 1, r:this, '4dgTb'
      callMethod
      push FALSE
      equals
      not
      branchIfTrue label3
      push ''
      return
     label3:
      push r:'-)-(', 1, r:this, '8DSk0('
      callMethod
      return
    end // of function 

    setMember
    push r:1, '8DSk0('
    function2 (r:3='-)-(') (r:1='this')
      push UNDEF
      setRegister r:2
      pop
      push r:this, '+)PNY'
      getMember
      setRegister r:2
      pop
      push r:'-)-(', 1, r:this, '4dgTb'
      callMethod
      push FALSE
      equals
      not
      branchIfTrue label4
      push ''
      return
     label4:
      push r:this, '+)PNY'
      getMember
      push 1
      subtract
      push r:2, 2, r:this, 'substring'
      callMethod
      return
    end // of function 

    setMember
    push r:1, '4dgTb'
    function2 (r:2='-)-(') (r:1='this')
     label5:
      push r:this, '+)PNY'
      getMember
      push r:this, 'size'
      getMember
      lessThan
      not
      branchIfTrue label7
      push r:'-)-(', 1, r:this, '0PT-K('
      callMethod
      not
      branchIfTrue label6
      push r:this, '+)PNY', r:this, '+)PNY'
      getMember
      increment
      setMember
      push TRUE
      return
     label6:
      push r:this, '+)PNY', r:this, '+)PNY'
      getMember
      increment
      setMember
      branch label5
     label7:
      push FALSE
      return
    end // of function 

    setMember
    push r:1, '5(-9K'
    function2 () (r:1='this')
      push 0.0, r:this, ',njWk'
      callMethod
      push FALSE
      equals
      not
      branchIfTrue label8
      push ''
      return
     label8:
      push UNDEF
      setRegister r:2
      pop
      push r:this, '+)PNY'
      getMember
      setRegister r:2
      pop
      push 0.0, r:this, '6]n0)'
      callMethod
      pop
      push r:this, '+)PNY'
      getMember
      push r:2, 2, r:this, 'substring'
      callMethod
      return
    end // of function 

    setMember
    push r:1, ',njWk'
    function2 () (r:1='this')
     label9:
      push r:this, '2{M}O'
      getMember
      push r:this, '+)PNY'
      getMember
      getMember
      push 1, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '79{K+('
      getMember
      push ']E9=B('
      callMethod
      dup
      not
      branchIfTrue label10
      pop
      push 0.0, r:this, '}},('
      callMethod
      not
     label10:
      not
      branchIfTrue label11
      push r:this, '+)PNY', r:this, '+)PNY'
      getMember
      increment
      setMember
      branch label9
     label11:
      push 0.0, r:this, '}},('
      callMethod
      not
      return
    end // of function 

    setMember
    push r:1, '6]n0)'
    function2 () (r:1='this')
      push r:this, '+)PNY', r:this, '+)PNY'
      getMember
      increment
      setMember
     label12:
      push r:this, '2{M}O'
      getMember
      push r:this, '+)PNY'
      getMember
      getMember
      push 1, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '79{K+('
      getMember
      push '{KYp'
      callMethod
      dup
      not
      branchIfTrue label13
      pop
      push 0.0, r:this, '}},('
      callMethod
      not
     label13:
      not
      branchIfTrue label14
      push r:this, '+)PNY', r:this, '+)PNY'
      getMember
      increment
      setMember
      branch label12
     label14:
      push 0.0, r:this, '}},('
      callMethod
      not
      return
    end // of function 

    setMember
    push r:1, '9_Az'
    function2 () (r:1='this')
      push r:this, '+)PNY', r:this, '+)PNY'
      getMember
      increment
      setMember
     label15:
      push 0.0, r:this, '}},('
      callMethod
      not
      dup
      not
      branchIfTrue label16
      pop
      push r:this, '2{M}O'
      getMember
      push r:this, '+)PNY'
      getMember
      getMember
      push 1, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '79{K+('
      getMember
      push '{KYp'
      callMethod
      not
     label16:
      not
      branchIfTrue label17
      push r:this, '+)PNY', r:this, '+)PNY'
      getMember
      increment
      setMember
      branch label15
     label17:
      push 0.0, r:this, '}},('
      callMethod
      not
      return
    end // of function 

    setMember
    push r:0, '{KYp'
    function2 (r:1='))') ()
      push r:'))', '+)'
      lessThan
      not
      dup
      not
      branchIfTrue label18
      pop
      push r:'))', '=('
      greaterThan
      not
     label18:
      not
      branchIfTrue label19
      push TRUE
      return
     label19:
      push r:'))', ';('
      lessThan
      not
      dup
      not
      branchIfTrue label20
      pop
      push r:'))', '0'
      greaterThan
      not
     label20:
      not
      branchIfTrue label21
      push TRUE
      return
     label21:
      push r:'))', '0'
      lessThan
      not
      dup
      not
      branchIfTrue label22
      pop
      push r:'))', '9'
      greaterThan
      not
     label22:
      not
      branchIfTrue label23
      push TRUE
      return
     label23:
      push FALSE
      return
    end // of function 

    setMember
    push r:0, ']E9=B('
    function2 (r:1='))') ()
      push r:'))', ' '
      equals
      dup
      branchIfTrue label24
      pop
      push r:'))', '\n'
      equals
     label24:
      dup
      branchIfTrue label25
      pop
      push r:'))', '\r'
      equals
     label25:
      dup
      branchIfTrue label26
      pop
      push r:'))', '\t'
      equals
     label26:
      return
    end // of function 

    setMember
    push r:1, '8hCTS'
    function2 () (r:1='this')
      push r:this, ' jzo', r:this, '+)PNY'
      getMember
      setMember
    end // of function 

    setMember
    push r:1, '5U[DM'
    function2 () (r:1='this')
      push r:this, '+)PNY', r:this, ' jzo'
      getMember
      setMember
    end // of function 

    setMember
    push r:1, '}M,P;'
    function2 () (r:1='this')
      push r:this, '+)PNY'
      getMember
      push r:this, ' jzo'
      getMember
      push 2, r:this, 'substring'
      callMethod
      return
    end // of function 

    setMember
    push r:1, 'substring'
    function2 (r:3='start', r:2='-)-(') (r:1='this')
      push r:'-)-(', r:this, 'size'
      getMember
      lessThan
      not
      not
      branchIfTrue label27
      push r:this, 'size'
      getMember
      setRegister r:'-)-('
      pop
     label27:
      push r:'-)-(', r:start
      subtract
      push r:start, 2, r:this, '2{M}O'
      getMember
      push 'substr'
      callMethod
      return
    end // of function 

    setMember
    push r:1, '0PT-K('
    function2 (r:2='}aa') (r:1='this')
      push r:'}aa', 'length'
      getMember
      push r:this, '+)PNY'
      getMember
      push 2, r:this, '2{M}O'
      getMember
      push 'substr'
      callMethod
      push r:'}aa'
      equals
      return
    end // of function 

    setMember
    push r:1, '}},('
    function2 () (r:1='this')
      push r:this, '+)PNY'
      getMember
      push r:this, 'size'
      getMember
      lessThan
      not
      return
    end // of function 

    setMember
    push r:1, ']T3sU'
    function2 () (r:1='this')
      push r:this, '+)PNY'
      getMember
      push 1, r:this, '2{M}O'
      getMember
      push 'charAt'
      callMethod
      return
    end // of function 

    setMember
    push 1, NULL, '2h,('
    getVariable
    push '[OaT'
    getMember
    push '79{K+('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label28:
    pop
  end // of initMovieClip 13

  defineMovieClip 14 // total frames: 0
  end // of defineMovieClip 14
  
  exportAssets
    14 as '__Packages.ext.util.MTUnserializer'
  end // of exportAssets
  
  initMovieClip 14
    constants '_global', '2h,(', 'Object', '[OaT', '0,_KG(', '79{K+(', 'prototype', '9Eqb=', '=w)l', '*HkA=(', '3)*No', '+)PNY', ']T3sU', '}', '}},(', ';', ')-G(=', '{XWr;(', 'Array', ']', ' (', ':', '8DSk0(', 'parseInt', '', '2{M}O', 'charAt', '\\', ';uwii', '=a9u1(', '{', '[', '8hCTS', '4dgTb', '}M,P;', '+(', '5)', 'Infinity', '4)', 'parseFloat', '0(', '()', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push '2h,('
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push '2h,(', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT'
    getMember
    push '0,_KG('
    getMember
    not
    not
    branchIfTrue label25
    push '2h,('
    getVariable
    push '[OaT'
    getMember
    push '0,_KG('
    function2 () (r:1='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push '2h,('
    getVariable
    push '[OaT'
    getMember
    push '0,_KG('
    getMember
    push '2h,('
    getVariable
    push '[OaT'
    getMember
    push '79{K+('
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '9Eqb='
    function2 (r:2='(ga') (r:1='this')
      push r:'(ga', 1, r:this, '=w)l'
      callMethod
      pop
      push 0.0, r:this, '*HkA=('
      callMethod
      return
    end // of function 

    setMember
    push r:1, '3)*No'
    function2 () (r:1='this')
      push UNDEF
      setRegister r:3
      pop
      push 0.0, 'Object'
      new
      setRegister r:3
      pop
      push r:this, '+)PNY', r:this, '+)PNY'
      getMember
      increment
      setMember
     label3:
      push 0.0, r:this, ']T3sU'
      callMethod
      push '}'
      equals
      not
      dup
      not
      branchIfTrue label4
      pop
      push 0.0, r:this, '}},('
      callMethod
      not
     label4:
      not
      branchIfTrue label6
      push 0.0, r:this, ']T3sU'
      callMethod
      push ';'
      equals
      not
      not
      branchIfTrue label5
      push 0.0, r:this, ')-G(='
      callMethod
      setRegister r:2
      pop
      push r:3, r:2, 0.0, r:this, '*HkA=('
      callMethod
      setMember
     label5:
      push r:this, '+)PNY', r:this, '+)PNY'
      getMember
      increment
      setMember
      branch label3
     label6:
      push r:this, '+)PNY', r:this, '+)PNY'
      getMember
      increment
      setMember
      push r:3
      return
    end // of function 

    setMember
    push r:1, '{XWr;('
    function2 () (r:1='this')
      push 0.0, 'Array'
      new
      setRegister r:3
      pop
      push 0.0
      setRegister r:2
      pop
      push r:this, '+)PNY', r:this, '+)PNY'
      getMember
      increment
      setMember
     label7:
      push 0.0, r:this, ']T3sU'
      callMethod
      push ']'
      equals
      not
      dup
      not
      branchIfTrue label8
      pop
      push 0.0, r:this, '}},('
      callMethod
      not
     label8:
      not
      branchIfTrue label11
      push 0.0, r:this, ']T3sU'
      callMethod
      push ' ('
      equals
      not
      branchIfTrue label9
      push r:this, '+)PNY', r:this, '+)PNY'
      getMember
      increment
      setMember
      push r:2, ':', 1, r:this, '8DSk0('
      callMethod
      push 1, 'parseInt'
      callFunction
      add
      setRegister r:2
      pop
     label9:
      push 0.0, r:this, ']T3sU'
      callMethod
      push ';'
      equals
      not
      not
      branchIfTrue label10
      push r:3, r:2, 0.0, r:this, '*HkA=('
      callMethod
      setMember
      push r:2
      increment
      setRegister r:2
      pop
     label10:
      push r:this, '+)PNY', r:this, '+)PNY'
      getMember
      increment
      setMember
      branch label7
     label11:
      push r:this, '+)PNY', r:this, '+)PNY'
      getMember
      increment
      setMember
      push r:3
      return
    end // of function 

    setMember
    push r:1, ')-G(='
    function2 () (r:1='this')
      push ''
      setRegister r:2
      pop
     label12:
      push r:2, ':', 1, r:this, '8DSk0('
      callMethod
      add
      setRegister r:2
      pop
      push r:this, '+)PNY'
      getMember
      push 2
      subtract
      push 1, r:this, '2{M}O'
      getMember
      push 'charAt'
      callMethod
      push '\\'
      equals
      dup
      not
      branchIfTrue label13
      pop
      push 0.0, r:this, '}},('
      callMethod
      not
     label13:
      branchIfTrue label12
      push r:2, 1, '2h,('
      getVariable
      push '[OaT'
      getMember
      push ';uwii'
      getMember
      push '=a9u1('
      callMethod
      return
    end // of function 

    setMember
    push r:1, '*HkA=('
    function2 () (r:1='this')
      push 0.0, r:this, ']T3sU'
      callMethod
      push '{'
      equals
      not
      branchIfTrue label14
      push 0.0, r:this, '3)*No'
      callMethod
      return
      branch label24
     label14:
      push 0.0, r:this, ']T3sU'
      callMethod
      push '['
      equals
      not
      branchIfTrue label15
      push 0.0, r:this, '{XWr;('
      callMethod
      return
      branch label24
     label15:
      push 0.0, r:this, ']T3sU'
      callMethod
      setRegister r:3
      pop
      push r:this, '+)PNY', r:this, '+)PNY'
      getMember
      increment
      setMember
      push 0.0, r:this, '8hCTS'
      callMethod
      pop
     label16:
      push ';', 1, r:this, '4dgTb'
      callMethod
      pop
      push r:this, '+)PNY'
      getMember
      push 2
      subtract
      push 1, r:this, '2{M}O'
      getMember
      push 'charAt'
      callMethod
      push '\\'
      equals
      dup
      not
      branchIfTrue label17
      pop
      push 0.0, r:this, '}},('
      callMethod
      not
     label17:
      branchIfTrue label16
      push r:this, '+)PNY', r:this, '+)PNY'
      getMember
      decrement
      setMember
      push 0.0, r:this, '}M,P;'
      callMethod
      setRegister r:2
      pop
      push r:3, '+('
      equals
      not
      branchIfTrue label21
      push r:2, '5)'
      equals
      not
      branchIfTrue label18
      push 'Infinity'
      getVariable
      return
      branch label20
     label18:
      push r:2, '4)'
      equals
      not
      branchIfTrue label19
      push 0.0, 'Infinity'
      getVariable
      subtract
      return
      branch label20
     label19:
      push r:2, 1, 'parseFloat'
      callFunction
      return
     label20:
      branch label24
     label21:
      push r:3, '0('
      equals
      not
      branchIfTrue label22
      push r:2, 1, '2h,('
      getVariable
      push '[OaT'
      getMember
      push ';uwii'
      getMember
      push '=a9u1('
      callMethod
      return
      branch label24
     label22:
      push r:3, '()'
      equals
      not
      branchIfTrue label24
      push r:2, 1, 'parseFloat'
      callFunction
      not
      branchIfTrue label23
      push TRUE
      return
      branch label24
     label23:
      push FALSE
      return
     label24:
      push UNDEF
      return
    end // of function 

    setMember
    push 1, NULL, '2h,('
    getVariable
    push '[OaT'
    getMember
    push '0,_KG('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label25:
    pop
  end // of initMovieClip 14

  defineMovieClip 15 // total frames: 0
  end // of defineMovieClip 15
  
  exportAssets
    15 as '__Packages.frusion.Context'
  end // of exportAssets
  
  initMovieClip 15
    constants '_global', 'frusion', 'Object', ' )E},', 'prototype', '0z{dP', '0', ')qe_3(', '1', '8cZKH(', '2', '0w]6Q', '3', ';{=m]', '4', '-}CIb', '1F{n7(', ',Du(e', ' majx', '0Pd_3', ']u4iy', '=OjDr', '+ymG7(', '(J6v+', '6wbjN', ')w}X((', '9,mIK(', ',2 ;r', '(PmID(', '5', '0d[H)', '6', '(O4H2(', '100', '*m7r-', '101', '6+JJ2', '102', ' f8V8(', '103', '}ldm,', '201', '6I4ZA(', '202', '7LtlU', '203', '9*g1 (', '204', '{jOhq', '300', '*{iyn', '301', '7HZ+F', '302', '*1Uk0', '303', '6Z7)n', '(gwL5(', '*L0Ih', '3j)+;(', '6Ie4L(', '+fin}', ';dBWo', ';7523', '[a3Nn', 'fatalError', '37)M6(', '=S_d(', '7Tk[9', 'logError', ')gX(B(', ';I)O8(', '[EKy8', '4eS;n', '8{Y;J(', ')K_mp', '5N*=a', '+,M=N', '+g+;D', ']GLpa', '3]h09', '4qQaC', '8{nB+', 'getUser', '5eDAE', '+rduE', '=6grG(', '69RuY', ';Z}vj', '0c=Xn', '*cr+E', '*orn[', '(;XhI(', '{-O_C', '0audN', ')F;1A(', '9*IvH', '=3,qz', '4iCZz', '}{Zt*', '7C)P+(', '+*1TE(', ';   +', 'onXML', '9fQZJ(', '4Mh_R', '[dyMB(', ',3FNL', '9uCKI(', 'onStartGame', ';zuq=(', 'onEndGame', '5pSfU', 'onSaveScore', '1,]sv', '-oHaE', '1nfsE', '7iQJF(', ' 1=Z(', ']dFyc', '4uJM6', 'xml/services.xml', ']}3fH', 'frutiConnect.swf', ')klnl', 'animfrusion.swf', '1)rj2(', '2rI+ (', '1PMYZ', '[t (d', '}++p[', 'www.beta.frutiparc.com', '5EzfY', 'hq.motion-twin.com', ',23N5', '3=mKK(', '[_F(e', '-A;Yj', '8=0yu', 'close', '2[C52', '{]ckD', '8hST*', '[aa}W', '0+35_', ' 2)ox', '0GwL(', '5;oQU', '20MP3(', 'level', '6n_7', '2UfUv', '5Wt5+', ',Ces(', '5)', '5ya=s', '-GtBQ', '(k3O3', '1zcve', ']-r=', '0(}e', '2PUPS', '-Pajv', ';x*_((', ')43ol', '[QY9=', '-Ydel', '7LDH=', '{Y44(', ')3ao4(', '5}wd5', '0L26c', '+SQ;V', 'XML', '+er', '988xv', 'xml/', ',YS-N', '.panel.xml', ',Z),r', '.player.panel.xml', ' [U', '[cF8N', '2(', '2R*04', ' 681c', ';12}b', 'do/ld', ',WOc6(', '3BJp+', '8jk24', 'index', '[EbqK', 'error', '7ojL', '_self', ',dJLG', 'javascript:self.close()', '}FEL;', '6Ifqs', ';ew7t', '{reN8(', ',_HdT', ']y4cj', '9V_8N', '=g}F-', '-om]1(', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'frusion'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'frusion', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'frusion'
    getMember
    push ' )E},'
    getMember
    not
    not
    branchIfTrue label2
    push 'frusion'
    getVariable
    push ' )E},'
    function ()
    end // of function 

    setRegister r:0
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:0, '0z{dP', '0'
    setMember
    push r:0, ')qe_3(', '1'
    setMember
    push r:0, '8cZKH(', '2'
    setMember
    push r:0, '0w]6Q', '3'
    setMember
    push r:0, ';{=m]', '4'
    setMember
    push r:0, '-}CIb', 300
    setMember
    push r:0, '1F{n7(', 400
    setMember
    push r:0, ',Du(e', 1
    setMember
    push r:0, ' majx', 0.0
    setMember
    push r:0, '0Pd_3', 2
    setMember
    push r:0, ']u4iy', 0.0
    setMember
    push r:0, '=OjDr', 1
    setMember
    push r:0, '+ymG7(', 2
    setMember
    push r:0, '(J6v+', '0'
    setMember
    push r:0, '6wbjN', '1'
    setMember
    push r:0, ')w}X((', '2'
    setMember
    push r:0, '9,mIK(', '3'
    setMember
    push r:0, ',2 ;r', '4'
    setMember
    push r:0, '(PmID(', '5'
    setMember
    push r:0, '0d[H)', '6'
    setMember
    push r:0, '(O4H2(', '100'
    setMember
    push r:0, '*m7r-', '101'
    setMember
    push r:0, '6+JJ2', '102'
    setMember
    push r:0, ' f8V8(', '103'
    setMember
    push r:0, '}ldm,', '201'
    setMember
    push r:0, '6I4ZA(', '202'
    setMember
    push r:0, '7LtlU', '203'
    setMember
    push r:0, '9*g1 (', '204'
    setMember
    push r:0, '{jOhq', '300'
    setMember
    push r:0, '*{iyn', '301'
    setMember
    push r:0, '7HZ+F', '302'
    setMember
    push r:0, '*1Uk0', '303'
    setMember
    push r:0, '6Z7)n', '(gwL5('
    setMember
    push r:0, '*L0Ih', '3j)+;('
    setMember
    push r:0, '6Ie4L(', '+fin}'
    setMember
    push r:0, ';dBWo', ';7523'
    setMember
    push r:0, '[a3Nn', 'fatalError'
    setMember
    push r:0, '37)M6(', '=S_d('
    setMember
    push r:0, '7Tk[9', 'logError'
    setMember
    push r:0, ')gX(B(', ';I)O8('
    setMember
    push r:0, '[EKy8', '4eS;n'
    setMember
    push r:0, '8{Y;J(', ')K_mp'
    setMember
    push r:0, '5N*=a', '+,M=N'
    setMember
    push r:0, '+g+;D', ']GLpa'
    setMember
    push r:0, '3]h09', '4qQaC'
    setMember
    push r:0, '8{nB+', 'getUser'
    setMember
    push r:0, '5eDAE', '+rduE'
    setMember
    push r:0, '=6grG(', '69RuY'
    setMember
    push r:0, ';Z}vj', '0c=Xn'
    setMember
    push r:0, '*cr+E', '*orn['
    setMember
    push r:0, '(;XhI(', '{-O_C'
    setMember
    push r:0, '0audN', ')F;1A('
    setMember
    push r:0, '9*IvH', '=3,qz'
    setMember
    push r:0, '4iCZz', '}{Zt*'
    setMember
    push r:0, '7C)P+(', '+*1TE('
    setMember
    push r:0, ';   +', 'onXML'
    setMember
    push r:0, '9fQZJ(', '4Mh_R'
    setMember
    push r:0, '[dyMB(', ',3FNL'
    setMember
    push r:0, '9uCKI(', 'onStartGame'
    setMember
    push r:0, ';zuq=(', 'onEndGame'
    setMember
    push r:0, '5pSfU', 'onSaveScore'
    setMember
    push r:0, '1,]sv', '-oHaE'
    setMember
    push r:0, '1nfsE', '7iQJF('
    setMember
    push r:0, ' 1=Z(', ']dFyc'
    setMember
    push r:0, '4uJM6', 'xml/services.xml'
    setMember
    push r:0, ']}3fH', 'frutiConnect.swf'
    setMember
    push r:0, ')klnl', 'animfrusion.swf'
    setMember
    push r:0, '1)rj2(', '2rI+ ('
    setMember
    push r:0, '1PMYZ', '[t (d'
    setMember
    push r:0, '}++p[', 'www.beta.frutiparc.com'
    setMember
    push r:0, '5EzfY', 'hq.motion-twin.com'
    setMember
    push r:0, ',23N5', '3=mKK('
    setMember
    push r:0, '[_F(e', '-A;Yj'
    setMember
    push r:0, '8=0yu', 'close'
    setMember
    push r:0, '2[C52', '{]ckD'
    setMember
    push r:0, '8hST*', '[aa}W'
    setMember
    push r:0, '0+35_', ' 2)ox'
    setMember
    push r:0, '0GwL(', '5;oQU'
    setMember
    push r:0, '20MP3(', 'level'
    setMember
    push r:0, '6n_7', 0.0
    setMember
    push r:0, '2UfUv', 1
    setMember
    push r:0, '5Wt5+', 2
    setMember
    push r:0, ',Ces(', '5)'
    setMember
    push r:0, '5ya=s', 1
    setMember
    push r:0, '-GtBQ', 2
    setMember
    push r:0, '(k3O3', 0.0
    setMember
    push r:0, '1zcve', 3
    setMember
    push r:0, ']-r=', '0(}e'
    setMember
    push r:0, '2PUPS', 'frusion'
    setMember
    push r:0, '-Pajv', ';x*_(('
    setMember
    push r:0, ')43ol', '[QY9='
    setMember
    push r:0, '-Ydel', '7LDH='
    setMember
    push r:0, '{Y44(', ')3ao4('
    setMember
    push r:0, '5}wd5', '0L26c'
    setMember
    push r:0, '+SQ;V', '5;oQU'
    setMember
    push r:0, 'XML', '+er'
    setMember
    push r:0, '988xv', 'xml/'
    setMember
    push r:0, ',YS-N', '.panel.xml'
    setMember
    push r:0, ',Z),r', '.player.panel.xml'
    setMember
    push r:0, ' [U', '1'
    setMember
    push r:0, '[cF8N', '2('
    setMember
    push r:0, '2R*04', ' 681c'
    setMember
    push r:0, ';12}b', 'do/ld'
    setMember
    push r:0, ',WOc6(', '3BJp+'
    setMember
    push r:0, '8jk24', 'index'
    setMember
    push r:0, '[EbqK', 'error'
    setMember
    push r:0, '7ojL', '_self'
    setMember
    push r:0, ',dJLG', 'javascript:self.close()'
    setMember
    push r:0, '}FEL;', '6Ifqs'
    setMember
    push r:0, ';ew7t', '{reN8('
    setMember
    push r:0, ',_HdT', 'close'
    setMember
    push r:0, ']y4cj', '9V_8N'
    setMember
    push r:0, '=g}F-', '-om]1('
    setMember
    push 1, NULL, 'frusion'
    getVariable
    push ' )E},'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label2:
    pop
  end // of initMovieClip 15

  defineMovieClip 16 // total frames: 0
  end // of defineMovieClip 16
  
  exportAssets
    16 as '__Packages.frusion.gamedisc.GameDisc'
  end // of exportAssets
  
  initMovieClip 16
    constants '_global', 'frusion', 'Object', '*Xq{+(', ' vay+(', '9S]dL', 'frusion.gamedisc.GameDisc::GameDisc', '}vGUS', '-nnmF', ' {_*8(', ';g)sC', '-JGrF(', 'width', 'height', '=2(p', ' hBGR', '3juXI(', 'size', 'prototype', '9kVa=', 'frusion.client.gamedisc::finalize', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'frusion'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'frusion', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'frusion'
    getMember
    push '*Xq{+('
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'frusion'
    getMember
    push '*Xq{+(', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'frusion'
    getMember
    push '*Xq{+('
    getMember
    push ' vay+('
    getMember
    not
    not
    branchIfTrue label7
    push 'frusion'
    getVariable
    push '*Xq{+('
    getMember
    push ' vay+('
    function2 (r:10='-nnmF', r:5=' {_*8(', r:6='-JGrF(', r:9='width', r:11='height', r:7='=2(p', r:8=' hBGR', r:3='3juXI(', r:4='size', r:12=';g)sC') (r:1='this', r:2='_global')
      push r:this, '9S]dL'
      getMember
      branchIfTrue label3
      push UNDEF
      branch label4
     label3:
      push 'frusion.gamedisc.GameDisc::GameDisc', 1, r:_global, '}vGUS'
      callMethod
     label4:
      pop
      push r:this, '-nnmF', r:'-nnmF'
      setMember
      push r:this, ' {_*8(', r:' {_*8('
      setMember
      push r:this, ';g)sC', r:';g)sC'
      setMember
      push r:this, '-JGrF(', r:'-JGrF('
      setMember
      push r:this, 'width', r:width
      setMember
      push r:this, 'height', r:height
      setMember
      push r:this, '=2(p', r:'=2(p'
      setMember
      push r:this, ' hBGR', r:' hBGR'
      setMember
      push r:this, '3juXI(', r:'3juXI('
      setMember
      push r:this, 'size', r:size
      setMember
    end // of function 

    setRegister r:0
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '9kVa='
    function2 () (r:1='this', r:2='_global')
      push r:this, '9S]dL'
      getMember
      branchIfTrue label5
      push UNDEF
      branch label6
     label5:
      push 'frusion.client.gamedisc::finalize', 1, r:_global, '}vGUS'
      callMethod
     label6:
      pop
      push r:this, ' {_*8('
      delete
      pop
      push r:this, ' {_*8(', NULL
      setMember
      push r:this, ';g)sC'
      delete
      pop
      push r:this, ' {_*8(', NULL
      setMember
      push r:this, '-JGrF('
      delete
      pop
      push r:this, '-JGrF(', NULL
      setMember
      push r:this, '=2(p'
      delete
      pop
      push r:this, '=2(p', NULL
      setMember
      push r:this, ' hBGR'
      delete
      pop
      push r:this, ' hBGR', NULL
      setMember
      push r:this, '3juXI('
      delete
      pop
      push r:this, ' hBGR', NULL
      setMember
    end // of function 

    setMember
    push r:1, '9S]dL', TRUE
    setMember
    push 1, NULL, 'frusion'
    getVariable
    push '*Xq{+('
    getMember
    push ' vay+('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label7:
    pop
  end // of initMovieClip 16

  defineMovieClip 17 // total frames: 0
  end // of defineMovieClip 17
  
  exportAssets
    17 as '__Packages.ext.util.Cardiogram'
  end // of exportAssets
  
  initMovieClip 17
    constants '_global', '2h,(', 'Object', '[OaT', '+*919', '42]yf', '-EX])', '2mZG+', ')ZpxC(', '9o;(b', 'prototype', '9kVa=', 'start', ';qN5d', ';E*mU', 'setInterval', ']Ugt', '-v,U (', '+rduE', '2Y 0j', 'stop', '8mW{)', '5-jwp', 'clearInterval', '4r,s+', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push '2h,('
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push '2h,(', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT'
    getMember
    push '+*919'
    getMember
    not
    not
    branchIfTrue label5
    push '2h,('
    getVariable
    push '[OaT'
    getMember
    push '+*919'
    function2 (r:3='42]yf', r:2='-EX])', r:5='2mZG+', r:4=')ZpxC(') (r:1='this')
      push r:this, '42]yf', r:'42]yf'
      setMember
      push r:this, '-EX])', r:'-EX])'
      setMember
      push r:this, '2mZG+', r:'2mZG+'
      setMember
      push r:this, ')ZpxC(', r:')ZpxC('
      setMember
      push r:this, '9o;(b', 0.0
      setMember
    end // of function 

    setRegister r:0
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '9kVa='
    function2 () (r:1='this')
      push r:this, ')ZpxC('
      delete
      pop
      push r:this, ')ZpxC(', NULL
      setMember
    end // of function 

    setMember
    push r:1, 'start'
    function2 () (r:1='this')
      push r:this, ';qN5d', r:this, '42]yf'
      getMember
      push ';E*mU', r:this, 3, 'setInterval'
      callFunction
      setMember
      push r:this, ']Ugt', r:this, '-EX])'
      getMember
      push '-v,U (', r:this, 3, 'setInterval'
      callFunction
      setMember
    end // of function 

    setMember
    push r:1, '+rduE'
    function2 () (r:1='this')
      push r:this, '2Y 0j', TRUE
      setMember
    end // of function 

    setMember
    push r:1, 'stop'
    function2 () (r:1='this')
      push r:this, '2Y 0j', FALSE
      setMember
    end // of function 

    setMember
    push r:1, ';E*mU'
    function2 () (r:1='this')
      push 0.0, r:this, ')ZpxC('
      getMember
      push '8mW{)'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '-v,U ('
    function2 () (r:1='this')
      push r:this, '2Y 0j'
      getMember
      not
      branchIfTrue label3
      push r:this, '2Y 0j', FALSE
      setMember
      push UNDEF
      return
     label3:
      push r:this, '9o;(b', r:this, '9o;(b'
      getMember
      increment
      setRegister r:0
      setMember
      push r:0, r:this, '2mZG+'
      getMember
      equals
      not
      branchIfTrue label4
      push 0.0, r:this, '5-jwp'
      callMethod
      pop
     label4:
      push r:this, '2Y 0j', FALSE
      setMember
    end // of function 

    setMember
    push r:1, '5-jwp'
    function2 () (r:1='this')
      push r:this, ';qN5d'
      getMember
      push 1, 'clearInterval'
      callFunction
      pop
      push r:this, ']Ugt'
      getMember
      push 1, 'clearInterval'
      callFunction
      pop
      push 0.0, r:this, ')ZpxC('
      getMember
      push '4r,s+'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '2Y 0j', FALSE
    setMember
    push 1, NULL, '2h,('
    getVariable
    push '[OaT'
    getMember
    push '+*919'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label5:
    pop
  end // of initMovieClip 17

  defineMovieClip 18 // total frames: 0
  end // of defineMovieClip 18
  
  exportAssets
    18 as '__Packages.frusion.server.XMLCommand'
  end // of exportAssets
  
  initMovieClip 18
    constants '_global', 'frusion', 'Object', '2_Bhp', '9+7CK', 'prototype', ', TjD(', 'XML', 'nodeName', 'length', '2h,(', '[OaT', '-7)H', 'attributes', 'name', '=*TTG', 'appendChild', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'frusion'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'frusion', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'frusion'
    getMember
    push '2_Bhp'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'frusion'
    getMember
    push '2_Bhp', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'frusion'
    getMember
    push '2_Bhp'
    getMember
    push '9+7CK'
    getMember
    not
    not
    branchIfTrue label6
    push 'frusion'
    getVariable
    push '2_Bhp'
    getMember
    push '9+7CK'
    function ()
    end // of function 

    setRegister r:0
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:0, ', TjD('
    function2 (r:7='*IfSL', r:5=',nGRt', r:6='+er') ()
      push 0.0, 'XML'
      new
      setRegister r:3
      pop
      push r:3, 'nodeName', r:'*IfSL'
      setMember
      push r:',nGRt', 'length'
      getMember
      setRegister r:4
      pop
      push 0.0
      setRegister r:1
      pop
     label3:
      push r:1, r:4
      lessThan
      not
      branchIfTrue label4
      push '2h,('
      getVariable
      push '[OaT'
      getMember
      push '-7)H'
      getMember
      push r:',nGRt', r:1
      getMember
      cast
      setRegister r:2
      pop
      push r:3, 'attributes'
      getMember
      push r:2, 'name'
      getMember
      push r:2, '=*TTG'
      getMember
      setMember
      push r:1
      increment
      setRegister r:1
      pop
      branch label3
     label4:
      push r:'+er', NULL
      equals
      not
      not
      branchIfTrue label5
      push r:'+er', 1, 'XML'
      new
      setRegister r:'+er'
      pop
      push r:'+er', 1, r:3, 'appendChild'
      callMethod
      pop
     label5:
      push 'XML'
      getVariable
      push r:3
      cast
      return
    end // of function 

    setMember
    push 1, NULL, 'frusion'
    getVariable
    push '2_Bhp'
    getMember
    push '9+7CK'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label6:
    pop
  end // of initMovieClip 18

  defineMovieClip 19 // total frames: 0
  end // of defineMovieClip 19
  
  exportAssets
    19 as '__Packages.frusion.service.FrutiScore'
  end // of exportAssets
  
  initMovieClip 19
    constants '_global', 'frusion', 'Object', 'service', '+Z-t5(', '3r*=R', 'initialize', '})T-8', 'addListener', '; MT9', '7)', 'onStartGame', 'p', 'onEndGame', '4(', 'onSaveScore', ';)', '-oHaE', '9)', '7iQJF(', '8)', ']dFyc', '*uhOC', '4cYEL', 'startGame', 'endGame', 'saveScore', ',={li', '}o_UJ(', '0hz))(', 'giveItem', 'x', 'prototype', '9kVa=', ')K_mp', '2)', '2h,(', '[OaT', '-7)H', 'Array', ']GLpa', '', '3Ob', '}a8wB', '2kTt', '(s6JL', '2(', '5)', '=}', ',3FNL', ' )E},', '[dyMB(', 'broadcastMessage', '9uCKI(', ';zuq=(', '5pSfU', '1,]sv', '1nfsE', ' 1=Z(', 'removeListener', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'frusion'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'frusion', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'frusion'
    getMember
    push 'service'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'frusion'
    getMember
    push 'service', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'frusion'
    getMember
    push 'service'
    getMember
    push '+Z-t5('
    getMember
    not
    not
    branchIfTrue label4
    push 'frusion'
    getVariable
    push 'service'
    getMember
    push '+Z-t5('
    function2 (r:2='})T-8') (r:1='this')
      push r:this, 1, '3r*=R'
      getVariable
      push 'initialize'
      callMethod
      pop
      push r:this, '})T-8', r:'})T-8'
      setMember
      push r:this, 1, r:this, '})T-8'
      getMember
      push 'addListener'
      callMethod
      pop
      push r:this, '; MT9', 0.0, 'Object'
      new
      setMember
      push r:this, '; MT9'
      getMember
      push '7)', 'onStartGame'
      setMember
      push r:this, '; MT9'
      getMember
      push 'p', 'onEndGame'
      setMember
      push r:this, '; MT9'
      getMember
      push '4(', 'onSaveScore'
      setMember
      push r:this, '; MT9'
      getMember
      push ';)', '-oHaE'
      setMember
      push r:this, '; MT9'
      getMember
      push '9)', '7iQJF('
      setMember
      push r:this, '; MT9'
      getMember
      push '8)', ']dFyc'
      setMember
      push r:this, '; MT9'
      getMember
      push 1, r:this, '})T-8'
      getMember
      push '*uhOC'
      callMethod
      pop
      push r:this, '4cYEL', 0.0, 'Object'
      new
      setMember
      push r:this, '4cYEL'
      getMember
      push 'startGame', '7)'
      setMember
      push r:this, '4cYEL'
      getMember
      push 'endGame', 'p'
      setMember
      push r:this, '4cYEL'
      getMember
      push 'saveScore', '4('
      setMember
      push r:this, '4cYEL'
      getMember
      push ',={li', ';)'
      setMember
      push r:this, '4cYEL'
      getMember
      push '}o_UJ(', '9)'
      setMember
      push r:this, '4cYEL'
      getMember
      push '0hz))(', '8)'
      setMember
      push r:this, '4cYEL'
      getMember
      push 'giveItem', 'x'
      setMember
    end // of function 

    setRegister r:0
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '9kVa='
    function2 () (r:1='this')
      push r:this, '4cYEL'
      delete
      pop
      push r:this, '4cYEL', NULL
      setMember
      push r:this, '; MT9'
      delete
      pop
      push r:this, '; MT9', NULL
      setMember
      push 0.0, r:this, '})T-8'
      getMember
      push '9kVa='
      callMethod
      pop
      push r:this, '})T-8'
      delete
      pop
      push r:this, '})T-8', NULL
      setMember
    end // of function 

    setMember
    push r:1, 'startGame'
    function2 (r:2='2)') (r:1='this')
      push 0.0, r:this, '})T-8'
      getMember
      push ')K_mp'
      callMethod
      pop
      push r:'2)', '2)', 2, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '-7)H'
      newMethod
      push 1, 'Array'
      new
      push r:this, '4cYEL'
      getMember
      push 'startGame'
      getMember
      push 2, r:this, '})T-8'
      getMember
      push ']GLpa'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'endGame'
    function2 () (r:1='this')
      push 0.0, 'Array'
      new
      push r:this, '4cYEL'
      getMember
      push 'endGame'
      getMember
      push 2, r:this, '})T-8'
      getMember
      push ']GLpa'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'saveScore'
    function2 (r:7='3ao2D', r:3='0_g)E', r:8=';)Whf') (r:1='this', r:2='_root')
      push UNDEF
      setRegister r:6
      pop
      push UNDEF
      setRegister r:4
      pop
      push r:'0_g)E', UNDEF
      equals
      not
      branchIfTrue label3
      push ''
      setRegister r:'0_g)E'
      pop
     label3:
      push r:_root, '3Ob'
      getMember
      push r:';)Whf', 2, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '}a8wB'
      getMember
      push '2kTt'
      callMethod
      setRegister r:4
      pop
      push r:4, r:'3ao2D'
      toString
      push 2, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '}a8wB'
      getMember
      push '(s6JL'
      callMethod
      setRegister r:5
      pop
      push r:5, '2(', 2, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '-7)H'
      newMethod
      push r:'0_g)E', '2)', 2, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '-7)H'
      newMethod
      push 2, 'Array'
      new
      push r:this, '4cYEL'
      getMember
      push 'saveScore'
      getMember
      push 2, r:this, '})T-8'
      getMember
      push ']GLpa'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'giveItem'
    function2 (r:3='name') (r:1='this')
      push r:name, '5)', 2, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '-7)H'
      newMethod
      push 1
      initArray
      setRegister r:2
      pop
      push r:2, r:this, '4cYEL'
      getMember
      push 'giveItem'
      getMember
      push 2, r:this, '})T-8'
      getMember
      push ']GLpa'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ',={li'
    function2 () (r:1='this')
      push 0.0, 'Array'
      new
      push r:this, '4cYEL'
      getMember
      push ',={li'
      getMember
      push 2, r:this, '})T-8'
      getMember
      push ']GLpa'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '}o_UJ('
    function2 (r:2='=}', r:3='2(', r:4=';)') (r:1='this')
      push r:';)', ';)', 2, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '-7)H'
      newMethod
      push r:'2(', '2(', 2, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '-7)H'
      newMethod
      push r:'=}', '=}', 2, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '-7)H'
      newMethod
      push 3, 'Array'
      new
      push r:this, '4cYEL'
      getMember
      push ',={li'
      getMember
      push 2, r:this, '})T-8'
      getMember
      push ']GLpa'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ',3FNL'
    function2 (r:2='1=(o') (r:1='this')
      push r:'1=(o', 'frusion'
      getVariable
      push ' )E},'
      getMember
      push '[dyMB('
      getMember
      push 2, r:this, 'broadcastMessage'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'onStartGame'
    function2 (r:2='1=(o') (r:1='this')
      push r:'1=(o', 'frusion'
      getVariable
      push ' )E},'
      getMember
      push '9uCKI('
      getMember
      push 2, r:this, 'broadcastMessage'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'onEndGame'
    function2 (r:2='1=(o') (r:1='this')
      push r:'1=(o', 'frusion'
      getVariable
      push ' )E},'
      getMember
      push ';zuq=('
      getMember
      push 2, r:this, 'broadcastMessage'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'onSaveScore'
    function2 (r:2='1=(o') (r:1='this')
      push r:'1=(o', 'frusion'
      getVariable
      push ' )E},'
      getMember
      push '5pSfU'
      getMember
      push 2, r:this, 'broadcastMessage'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '-oHaE'
    function2 (r:2='1=(o') (r:1='this')
      push r:'1=(o', 'frusion'
      getVariable
      push ' )E},'
      getMember
      push '1,]sv'
      getMember
      push 2, r:this, 'broadcastMessage'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '7iQJF('
    function2 (r:2='1=(o') (r:1='this')
      push r:'1=(o', 'frusion'
      getVariable
      push ' )E},'
      getMember
      push '1nfsE'
      getMember
      push 2, r:this, 'broadcastMessage'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ']dFyc'
    function2 (r:2='1=(o') (r:1='this')
      push r:'1=(o', 'frusion'
      getVariable
      push ' )E},'
      getMember
      push ' 1=Z('
      getMember
      push 2, r:this, 'broadcastMessage'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'broadcastMessage'
    function ()
    end // of function 

    setMember
    push r:1, 'addListener'
    function ()
    end // of function 

    setMember
    push r:1, 'removeListener'
    function ()
    end // of function 

    setMember
    push 1, NULL, 'frusion'
    getVariable
    push 'service'
    getMember
    push '+Z-t5('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label4:
    pop
  end // of initMovieClip 19

  defineMovieClip 20 // total frames: 0
  end // of defineMovieClip 20
  
  exportAssets
    20 as '__Packages.ext.util.MTCodec'
  end // of exportAssets
  
  initMovieClip 20
    constants '_global', '2h,(', 'Object', '[OaT', '}a8wB', 'prototype', '-B=OP', 'Array', 'length', 'charCodeAt', '(s6JL', '0Qd*i', '{DAsW', '98c]F', 'toString', '2kTt', '1XxO', '', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push '2h,('
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push '2h,(', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT'
    getMember
    push '}a8wB'
    getMember
    not
    not
    branchIfTrue label13
    push '2h,('
    getVariable
    push '[OaT'
    getMember
    push '}a8wB'
    function ()
    end // of function 

    setRegister r:0
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:0, '-B=OP'
    function2 (r:2=')P3O') ()
      push UNDEF
      setRegister r:1
      pop
      push 136, 176, 173, 28, 115, 101, 35, 254, 8, 'Array'
      new
      setRegister r:3
      pop
      push 0.0
      setRegister r:1
      pop
     label3:
      push r:1, r:')P3O', 'length'
      getMember
      lessThan
      not
      branchIfTrue label4
      push r:3, r:1, 7
      bitwiseAnd
      push r:3, r:1, 7
      bitwiseAnd
      getMember
      push r:1, 1, r:')P3O', 'charCodeAt'
      callMethod
      bitwiseXor
      setMember
      push r:1
      increment
      setRegister r:1
      pop
      branch label3
     label4:
      push r:3
      return
    end // of function 

    setMember
    push r:0, '(s6JL'
    function2 (r:3='}aa', r:7=')P3O') ()
      push 0.0, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '0Qd*i'
      newMethod
      setRegister r:4
      pop
      push r:')P3O', 1, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '}a8wB'
      getMember
      push '-B=OP'
      callMethod
      setRegister r:6
      pop
      push 0.0
      setRegister r:5
      pop
      push r:'}aa', 'length'
      getMember
      push 1, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '}a8wB'
      getMember
      push '{DAsW'
      getMember
      shiftLeft
      lessThan
      not
      not
      branchIfTrue label5
      push NULL
      return
     label5:
      push r:'}aa', 'length'
      getMember
      push '2h,('
      getVariable
      push '[OaT'
      getMember
      push '}a8wB'
      getMember
      push '{DAsW'
      getMember
      push 2, r:4, '98c]F'
      callMethod
      pop
      push UNDEF
      setRegister r:1
      pop
      push UNDEF
      setRegister r:2
      pop
      push 0.0
      setRegister r:1
      pop
     label6:
      push r:1, r:'}aa', 'length'
      getMember
      lessThan
      not
      branchIfTrue label7
      push r:1, 1, r:'}aa', 'charCodeAt'
      callMethod
      setRegister r:2
      pop
      push r:2, r:6, r:1, 7
      bitwiseAnd
      getMember
      bitwiseXor
      push 8, 2, r:4, '98c]F'
      callMethod
      pop
      push r:5, r:2
      bitwiseXor
      setRegister r:5
      pop
      push r:1
      increment
      setRegister r:1
      pop
      branch label6
     label7:
      push r:5, 8, 2, r:4, '98c]F'
      callMethod
      pop
      push 0.0, r:4, 'toString'
      callMethod
      return
    end // of function 

    setMember
    push r:0, '2kTt'
    function2 (r:8='}aa', r:9=')P3O') ()
      push r:'}aa', 1, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '0Qd*i'
      newMethod
      setRegister r:3
      pop
      push r:')P3O', 1, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '}a8wB'
      getMember
      push '-B=OP'
      callMethod
      setRegister r:7
      pop
      push 0.0
      setRegister r:5
      pop
      push '2h,('
      getVariable
      push '[OaT'
      getMember
      push '}a8wB'
      getMember
      push '{DAsW'
      getMember
      push 1, r:3, '1XxO'
      callMethod
      setRegister r:4
      pop
      push r:4, -1
      equals
      not
      branchIfTrue label8
      push NULL
      return
     label8:
      push UNDEF
      setRegister r:2
      pop
      push UNDEF
      setRegister r:1
      pop
      push UNDEF
      setRegister r:6
      pop
      push ''
      setRegister r:6
      pop
      push 0.0
      setRegister r:2
      pop
     label9:
      push r:2, r:4
      lessThan
      not
      branchIfTrue label11
      push 8, 1, r:3, '1XxO'
      callMethod
      setRegister r:1
      pop
      push r:1, -1
      equals
      not
      branchIfTrue label10
      push NULL
      return
     label10:
      push r:1, r:7, r:2, 7
      bitwiseAnd
      getMember
      bitwiseXor
      setRegister r:1
      pop
      push r:5, r:1
      bitwiseXor
      setRegister r:5
      pop
      push r:6, r:1
      chr
      add
      setRegister r:6
      pop
      push r:2
      increment
      setRegister r:2
      pop
      branch label9
     label11:
      push 8, 1, r:3, '1XxO'
      callMethod
      push r:5
      equals
      not
      not
      branchIfTrue label12
      push NULL
      return
     label12:
      push r:6
      return
    end // of function 

    setMember
    push r:0, '{DAsW', 14
    setMember
    push 1, NULL, '2h,('
    getVariable
    push '[OaT'
    getMember
    push '}a8wB'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label13:
    pop
  end // of initMovieClip 20

  defineMovieClip 21 // total frames: 0
  end // of defineMovieClip 21
  
  exportAssets
    21 as '__Packages.ext.util.MTBitcodec'
  end // of exportAssets
  
  initMovieClip 21
    constants '_global', '2h,(', 'Object', '[OaT', '0Qd*i', '3vz1B(', '3giYW', '}+4c', '*E;cf', '', 'input', '(uCFL(', 'prototype', '1XxO', 'charAt', '(9-(', 'length', ') 1g,(', ',29;0', 'toString', '98c]F', '3mx', '$azAZ_', '0', '9', '-', '$aA_', '?', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push '2h,('
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push '2h,(', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT'
    getMember
    push '0Qd*i'
    getMember
    not
    not
    branchIfTrue label24
    push '2h,('
    getVariable
    push '[OaT'
    getMember
    push '0Qd*i'
    function2 (r:2='*-3WU') (r:1='this')
      push r:this, '3vz1B(', FALSE
      setMember
      push r:this, '3giYW', 0.0
      setMember
      push r:this, '}+4c', 0.0
      setMember
      push r:this, '*E;cf', ''
      setMember
      push r:this, 'input', r:'*-3WU'
      setMember
      push r:this, '(uCFL(', 0.0
      setMember
    end // of function 

    setRegister r:0
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '1XxO'
    function2 (r:3='8)') (r:1='this')
     label3:
      push r:this, '3giYW'
      getMember
      push r:'8)'
      lessThan
      not
      branchIfTrue label6
      push r:this, '(uCFL('
      getMember
      push r:this, '(uCFL(', r:this, '(uCFL('
      getMember
      increment
      setMember
      push 1, r:this, 'input'
      getMember
      push 'charAt'
      callMethod
      push 1, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '0Qd*i'
      getMember
      push '(9-('
      callMethod
      setRegister r:2
      pop
      push r:this, '(uCFL('
      getMember
      push r:this, 'input'
      getMember
      push 'length'
      getMember
      greaterThan
      dup
      branchIfTrue label4
      pop
      push r:2, NULL
      equals
     label4:
      not
      branchIfTrue label5
      push r:this, '3vz1B(', TRUE
      setMember
      push 0.0, r:this, ') 1g,('
      callMethod
      pop
      push -1
      return
     label5:
      push r:this, '3giYW', r:this, '3giYW'
      getMember
      push 6
      add
      setMember
      push r:this, '}+4c', r:this, '}+4c'
      getMember
      push 6
      shiftLeft
      setMember
      push r:this, '}+4c', r:this, '}+4c'
      getMember
      push r:2
      bitwiseOr
      setMember
      branch label3
     label6:
      push r:this, '3giYW', r:this, '3giYW'
      getMember
      push r:'8)'
      subtract
      setMember
      push r:this, '}+4c'
      getMember
      push r:this, '3giYW'
      getMember
      shiftRight
      push 1, r:'8)'
      shiftLeft
      push 1
      subtract
      bitwiseAnd
      return
    end // of function 

    setMember
    push r:1, ',29;0'
    function2 () (r:1='this')
      push r:this, '3giYW', 0.0
      setMember
    end // of function 

    setMember
    push r:1, ') 1g,('
    function2 () (r:1='this')
      push r:this, '3vz1B('
      getMember
      return
    end // of function 

    setMember
    push r:1, 'toString'
    function2 () (r:1='this')
      push r:this, '3giYW'
      getMember
      push 0.0
      greaterThan
      not
      branchIfTrue label7
      push 0.0, 6, r:this, '3giYW'
      getMember
      subtract
      push 2, r:this, '98c]F'
      callMethod
      pop
     label7:
      push r:this, '*E;cf'
      getMember
      return
    end // of function 

    setMember
    push r:1, '98c]F'
    function2 (r:2='8)', r:3='*)') (r:1='this')
      push r:this, '3giYW', r:this, '3giYW'
      getMember
      push r:'8)'
      add
      setMember
      push r:this, '}+4c', r:this, '}+4c'
      getMember
      push r:'8)'
      shiftLeft
      setMember
      push r:this, '}+4c', r:this, '}+4c'
      getMember
      push r:'*)'
      bitwiseOr
      setMember
     label8:
      push r:this, '3giYW'
      getMember
      push 6
      lessThan
      not
      not
      branchIfTrue label9
      push r:this, '3giYW', r:this, '3giYW'
      getMember
      push 6
      subtract
      setMember
      push r:this, '*E;cf', r:this, '*E;cf'
      getMember
      push r:this, '}+4c'
      getMember
      push r:this, '3giYW'
      getMember
      shiftRight
      push 63
      bitwiseAnd
      push 1, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '0Qd*i'
      getMember
      push '3mx'
      callMethod
      add
      setMember
      branch label8
     label9:
    end // of function 

    setMember
    push r:0, '(9-('
    function2 (r:1='9f)b') ()
      push '$azAZ_'
      setRegister r:2
      pop
      push r:'9f)b', 1, 1, r:2, 'charAt'
      callMethod
      lessThan
      not
      dup
      not
      branchIfTrue label10
      pop
      push r:'9f)b', 2, 1, r:2, 'charAt'
      callMethod
      greaterThan
      not
     label10:
      not
      branchIfTrue label11
      push r:'9f)b'
      ord
      push 1, 1, r:2, 'charAt'
      callMethod
      ord
      subtract
      return
     label11:
      push r:'9f)b', 3, 1, r:2, 'charAt'
      callMethod
      lessThan
      not
      dup
      not
      branchIfTrue label12
      pop
      push r:'9f)b', 4, 1, r:2, 'charAt'
      callMethod
      greaterThan
      not
     label12:
      not
      branchIfTrue label13
      push r:'9f)b'
      ord
      push 3, 1, r:2, 'charAt'
      callMethod
      ord
      subtract
      push 26
      add
      return
     label13:
      push r:'9f)b', '0'
      lessThan
      not
      dup
      not
      branchIfTrue label14
      pop
      push r:'9f)b', '9'
      greaterThan
      not
     label14:
      not
      branchIfTrue label15
      push r:'9f)b'
      ord
      push 48
      subtract
      push 52
      add
      return
     label15:
      push r:'9f)b', '-'
      equals
      not
      branchIfTrue label16
      push 62
      return
     label16:
      push r:'9f)b', 5, 1, r:2, 'charAt'
      callMethod
      equals
      not
      branchIfTrue label17
      push 63
      return
     label17:
      push NULL
      return
    end // of function 

    setMember
    push r:0, '3mx'
    function2 (r:1='9f)b') ()
      push '$aA_'
      setRegister r:2
      pop
      push r:'9f)b', 0.0
      lessThan
      not
      branchIfTrue label18
      push '?'
      return
     label18:
      push r:'9f)b', 26
      lessThan
      not
      branchIfTrue label19
      push r:'9f)b', 1, 1, r:2, 'charAt'
      callMethod
      ord
      add
      chr
      return
     label19:
      push r:'9f)b', 52
      lessThan
      not
      branchIfTrue label20
      push r:'9f)b', 26
      subtract
      push 2, 1, r:2, 'charAt'
      callMethod
      ord
      add
      chr
      return
     label20:
      push r:'9f)b', 62
      lessThan
      not
      branchIfTrue label21
      push r:'9f)b', 52
      subtract
      push 48
      add
      chr
      return
     label21:
      push r:'9f)b', 62
      equals
      not
      branchIfTrue label22
      push '-'
      return
     label22:
      push r:'9f)b', 63
      equals
      not
      branchIfTrue label23
      push 3, 1, r:2, 'charAt'
      callMethod
      return
     label23:
      push '?'
      return
    end // of function 

    setMember
    push 1, NULL, '2h,('
    getVariable
    push '[OaT'
    getMember
    push '0Qd*i'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label24:
    pop
  end // of initMovieClip 21

  defineMovieClip 22 // total frames: 0
  end // of defineMovieClip 22
  
  exportAssets
    22 as '__Packages.FEString'
  end // of exportAssets
  
  initMovieClip 22
    constants '_global', ')9EEf', 'prototype', '6ub3H(', '', 'length', 'split', 'join', 'indexOf', 'substring', '}Xr9K', 'substr', 'toLowerCase', 'parseInt', '58*Ln', '&', '&amp;', '<', '&lt;', '>', '&gt;', ')9QsD', ' o_9H(', '\r', ' gOdX', ' ', '=3gYD', 'Math', 'abs', '2EdU', '4xMs9(', 'toString', '1;hsm', ')7-mK', 'random', 'floor', '[CZoA(', '69WC', '(p1wC(', '*3vIq', '$', '0Eu+-(', 'http://', 'Array', ']Nr0A', 'push', ';ZO_I(', '<b><a href="', '" target="_blank">', '</a></b>', ';M7Mr', 'object', 'splice', '%', '1QSvc', '0PT-K(', '*6J9I(', '{5RW,(', 'charAt', ';P8CJ(', ',', '9)', '8)', ',mjO9(', ';', 'Object', '=', '2fC5;(', '\\n', '\n', '4ucPw', 'nodeType', 'XML', 'nodeName', 'font', '*)', '5)', '8(', '2s(', '+)', '9 5(', 'p', '{[zNc', 'hasChildNodes', 'attributes', '6LpA', '7RL68(', 'font-family: ', '{7}f', '+bIL', ')Gg_K(', 'font-size: ', 'px;', 'size', ' M];M', 'toUpperCase', '+(8uk', 'color: ', 'color', ',EhN', ' KbuC', 'firstChild', 'appendChild', 'nextSibling', '-P(', '}aDut', '\'', '&apos;', '<br />', '</br>', '<br>', '"', ')', '+3+{e', '12', '#335511', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push ')9EEf'
    getMember
    not
    not
    branchIfTrue label100
    push '_global'
    getVariable
    push ')9EEf'
    function ()
    end // of function 

    setRegister r:0
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:0, '6ub3H('
    function2 (r:1='}aa', r:3='=SFyp', r:6='6ub3H(') ()
      push ''
      setRegister r:4
      pop
      push ''
      setRegister r:5
      pop
      push r:'=SFyp', 'length'
      getMember
      push 1
      equals
      not
      branchIfTrue label1
      push r:'6ub3H(', 1, r:'=SFyp', 1, r:'}aa', 'split'
      callMethod
      push 'join'
      callMethod
      return
     label1:
      push r:'=SFyp', 1, r:'}aa', 'indexOf'
      callMethod
      setRegister r:2
      pop
      push r:2, -1
      equals
      not
      branchIfTrue label2
      push r:'}aa'
      return
     label2:
      push r:'=SFyp', 1, r:'}aa', 'indexOf'
      callMethod
      setRegister r:2
      pop
      push r:2, 0.0, 2, r:'}aa', 'substring'
      callMethod
      setRegister r:4
      pop
      push r:2, r:'=SFyp', 'length'
      getMember
      add
      push 1, r:'}aa', 'substring'
      callMethod
      setRegister r:'}aa'
      pop
      push r:5, r:4, r:'6ub3H('
      add
      add
      setRegister r:5
      pop
      push r:'=SFyp', 1, r:'}aa', 'indexOf'
      callMethod
      push -1
      equals
      not
      branchIfTrue label2
      push r:5, r:'}aa'
      add
      setRegister r:5
      pop
      push r:5
      return
    end // of function 

    setMember
    push r:0, '}Xr9K'
    function2 (r:5='8)') ()
      push 0.0
      setRegister r:6
      pop
      push 1
      setRegister r:4
      pop
      push r:'8)', 'length'
      getMember
      push 1
      subtract
      setRegister r:2
      pop
     label3:
      push r:2, 0.0
      lessThan
      not
      not
      branchIfTrue label6
      push 1, r:2, 2, r:'8)', 'substr'
      callMethod
      setRegister r:1
      pop
      push 0.0, r:1, 'toLowerCase'
      callMethod
      push r:1
      equals
      not
      branchIfTrue label4
      push 36, r:1, 2, 'parseInt'
      callFunction
      setRegister r:3
      pop
      branch label5
     label4:
      push 36, 0.0, r:1, 'toLowerCase'
      callMethod
      push 2, 'parseInt'
      callFunction
      push 26
      add
      setRegister r:3
      pop
     label5:
      push r:6, r:3, r:4
      multiply
      add
      setRegister r:6
      pop
      push r:4, 62
      multiply
      setRegister r:4
      pop
      push r:2
      decrement
      setRegister r:2
      pop
      branch label3
     label6:
      push r:6
      return
    end // of function 

    setMember
    push r:0, '58*Ln'
    function2 (r:1='3(') ()
      push r:'3(', 'length'
      getMember
      push 0.0
      greaterThan
      not
      not
      branchIfTrue label7
      push r:'3('
      return
     label7:
      push 0.0
      setRegister r:2
      pop
     label8:
      push r:2, '&', 2, r:'3(', 'indexOf'
      callMethod
      setRegister r:2
      push -1
      greaterThan
      not
      branchIfTrue label9
      push r:2, 0.0, 2, r:'3(', 'substr'
      callMethod
      push '&amp;'
      add
      push r:2, 1
      add
      push 1, r:'3(', 'substr'
      callMethod
      add
      setRegister r:'3('
      pop
      push r:2, 4
      add
      setRegister r:2
      pop
      branch label8
     label9:
      push 0.0
      setRegister r:2
      pop
     label10:
      push r:2, '<', 2, r:'3(', 'indexOf'
      callMethod
      setRegister r:2
      push -1
      greaterThan
      not
      branchIfTrue label11
      push r:2, 0.0, 2, r:'3(', 'substr'
      callMethod
      push '&lt;'
      add
      push r:2, 1
      add
      push 1, r:'3(', 'substr'
      callMethod
      add
      setRegister r:'3('
      pop
      push r:2, 3
      add
      setRegister r:2
      pop
      branch label10
     label11:
      push 0.0
      setRegister r:2
      pop
     label12:
      push r:2, '>', 2, r:'3(', 'indexOf'
      callMethod
      setRegister r:2
      push -1
      greaterThan
      not
      branchIfTrue label13
      push r:2, 0.0, 2, r:'3(', 'substr'
      callMethod
      push '&gt;'
      add
      push r:2, 1
      add
      push 1, r:'3(', 'substr'
      callMethod
      add
      setRegister r:'3('
      pop
      push r:2, 3
      add
      setRegister r:2
      pop
      branch label12
     label13:
      push r:'3('
      return
    end // of function 

    setMember
    push r:0, ')9QsD'
    function2 (r:2='3(', r:3='}C]+P') ()
      push r:'3(', 'length'
      getMember
      push 0.0
      greaterThan
      not
      not
      branchIfTrue label14
      push r:'3('
      return
     label14:
      push 0.0
      setRegister r:1
      pop
     label15:
      push r:1, r:'3(', 'length'
      getMember
      lessThan
      not
      branchIfTrue label17
      push 1, r:1, 2, r:'3(', 'substr'
      callMethod
      push r:'}C]+P'
      equals
      not
      branchIfTrue label16
      push r:1, 0.0, 2, r:'3(', 'substr'
      callMethod
      push r:1, 1
      add
      push 1, r:'3(', 'substr'
      callMethod
      add
      setRegister r:'3('
      pop
     label16:
      push r:1
      increment
      setRegister r:1
      pop
      branch label15
     label17:
      push r:'3('
      return
    end // of function 

    setMember
    push r:0, ' o_9H('
    function2 (r:1='}aa') ()
      push '\r', r:'}aa', 2, ')9EEf'
      getVariable
      push ')9QsD'
      callMethod
      return
    end // of function 

    setMember
    push r:0, ' gOdX'
    function2 (r:2='}aa') ()
      push 0.0
      setRegister r:1
      pop
     label18:
      push 1, r:1, 2, r:'}aa', 'substr'
      callMethod
      push ' '
      equals
      dup
      branchIfTrue label19
      pop
      push 1, r:1, 2, r:'}aa', 'substr'
      callMethod
      push '\r'
      equals
     label19:
      not
      branchIfTrue label21
      push r:1
      increment
      setRegister r:1
      pop
      push r:1, r:'}aa', 'length'
      getMember
      lessThan
      not
      not
      branchIfTrue label20
      push ''
      return
     label20:
      branch label18
     label21:
      push r:'}aa', 'length'
      getMember
      push r:1, 2, r:'}aa', 'substring'
      callMethod
      return
    end // of function 

    setMember
    push r:0, '=3gYD'
    function2 (r:2='}aa') ()
      push r:'}aa', 'length'
      getMember
      push 1
      subtract
      setRegister r:1
      pop
     label22:
      push 1, r:1, 2, r:'}aa', 'substr'
      callMethod
      push ' '
      equals
      dup
      branchIfTrue label23
      pop
      push 1, r:1, 2, r:'}aa', 'substr'
      callMethod
      push '\r'
      equals
     label23:
      not
      branchIfTrue label25
      push r:1
      decrement
      setRegister r:1
      pop
      push r:1, 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      push r:'}aa', 'length'
      getMember
      lessThan
      not
      not
      branchIfTrue label24
      push ''
      return
     label24:
      branch label22
     label25:
      push r:1, 1
      add
      push 0.0, 2, r:'}aa', 'substr'
      callMethod
      return
    end // of function 

    setMember
    push r:0, '2EdU'
    function2 (r:1='}aa') ()
      push r:'}aa', 1, ')9EEf'
      getVariable
      push '=3gYD'
      callMethod
      push 1, ')9EEf'
      getVariable
      push ' gOdX'
      callMethod
      return
    end // of function 

    setMember
    push r:0, '4xMs9('
    function2 (r:5=';)', r:3='9)') (r:1='arguments')
      push r:arguments, 'length'
      getMember
      push 1
      lessThan
      not
      branchIfTrue label26
      push 8
      setRegister r:';)'
      pop
     label26:
      push r:arguments, 'length'
      getMember
      push 2
      lessThan
      not
      branchIfTrue label27
      push 16
      setRegister r:'9)'
      pop
     label27:
      push ''
      setRegister r:4
      pop
      push 0.0
      setRegister r:2
      pop
     label28:
      push r:2, r:';)'
      lessThan
      not
      branchIfTrue label29
      push r:4, r:'9)', 1, r:'9)'
      random
      push 'toString'
      callMethod
      add
      setRegister r:4
      pop
      push r:2
      increment
      setRegister r:2
      pop
      branch label28
     label29:
      push r:4
      return
    end // of function 

    setMember
    push r:0, '1;hsm'
    function ()
      push ')9EEf'
      getVariable
      push ')7-mK'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label30
      push ')9EEf'
      getVariable
      push ')7-mK', 0.0, 'Math'
      getVariable
      push 'random'
      callMethod
      push 100
      multiply
      push 1, 'Math'
      getVariable
      push 'floor'
      callMethod
      push 1
      add
      setMember
     label30:
      push ')9EEf'
      getVariable
      push ')7-mK', ')9EEf'
      getVariable
      push ')7-mK'
      getMember
      increment
      setMember
      push ')9EEf'
      getVariable
      push ')7-mK'
      getMember
      push 1, '[CZoA('
      getVariable
      push '69WC'
      callMethod
      return
    end // of function 

    setMember
    push r:0, '(p1wC('
    function2 (r:3='}aa', r:4=';)') ()
      push ''
      setRegister r:2
      pop
      push 0.0
      setRegister r:1
      pop
     label31:
      push r:1, r:';)'
      lessThan
      not
      branchIfTrue label32
      push r:2, r:'}aa'
      add
      setRegister r:2
      pop
      push r:1
      increment
      setRegister r:1
      pop
      branch label31
     label32:
      push r:2
      return
    end // of function 

    setMember
    push r:0, '*3vIq'
    function2 (r:1='}aa', r:5='8p7(') ()
      push '$', 1, r:'}aa', 'indexOf'
      callMethod
      setRegister r:2
      pop
     label33:
      push r:2, -1
      greaterThan
      not
      branchIfTrue label36
      push 1, r:2, 1
      add
      push 2, r:'}aa', 'substr'
      callMethod
      setRegister r:4
      pop
      push r:4, '$'
      equals
      not
      branchIfTrue label34
      push r:2, 0.0, 2, r:'}aa', 'substr'
      callMethod
      push '$'
      add
      push r:'}aa', 'length'
      getMember
      push r:2, 2
      add
      push 2, r:'}aa', 'substring'
      callMethod
      add
      setRegister r:'}aa'
      pop
      push r:2, 2
      add
      push '$', 2, r:'}aa', 'indexOf'
      callMethod
      setRegister r:2
      pop
      branch label35
     label34:
      push r:'8p7(', r:4
      getMember
      setRegister r:3
      pop
      push r:2, 0.0, 2, r:'}aa', 'substr'
      callMethod
      push r:3
      add
      push r:'}aa', 'length'
      getMember
      push r:2, 2
      add
      push 2, r:'}aa', 'substring'
      callMethod
      add
      setRegister r:'}aa'
      pop
      push r:2, r:3, 'length'
      getMember
      add
      push '$', 2, r:'}aa', 'indexOf'
      callMethod
      setRegister r:2
      pop
     label35:
      branch label33
     label36:
      push r:'}aa'
      return
    end // of function 

    setMember
    push r:0, '0Eu+-('
    function2 (r:1='}aa') ()
      push 0.0
      setRegister r:8
      pop
     label37:
      push r:8, r:'}aa', 'length'
      getMember
      push 7
      subtract
      lessThan
      not
      branchIfTrue label46
      push r:8, 'http://', 2, r:'}aa', 'indexOf'
      callMethod
      setRegister r:2
      pop
      push r:2, -1
      equals
      not
      branchIfTrue label38
      push r:'}aa'
      return
      branch label45
     label38:
      push 0.0, 'Array'
      new
      setRegister r:5
      pop
      push 0.0
      setRegister r:3
      pop
     label39:
      push r:3, ')9EEf'
      getVariable
      push ']Nr0A'
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label41
      push r:2, ')9EEf'
      getVariable
      push ']Nr0A'
      getMember
      push r:3
      getMember
      push 2, r:'}aa', 'indexOf'
      callMethod
      setRegister r:4
      pop
      push r:4, 0.0
      lessThan
      not
      not
      branchIfTrue label40
      push r:4, 1, r:5, 'push'
      callMethod
      pop
     label40:
      push r:3
      increment
      setRegister r:3
      pop
      branch label39
     label41:
      push r:5, 'length'
      getMember
      push 0.0
      equals
      not
      branchIfTrue label42
      push -1
      setRegister r:7
      pop
      branch label43
     label42:
      push 0.0, r:5, ';ZO_I('
      callMethod
      setRegister r:7
      pop
     label43:
      push r:7, -1
      equals
      not
      branchIfTrue label44
      push r:2, 1, r:'}aa', 'substr'
      callMethod
      setRegister r:6
      pop
      push r:2, 0.0, 2, r:'}aa', 'substring'
      callMethod
      push '<b><a href="'
      add
      push r:6
      add
      push '" target="_blank">'
      add
      push r:6
      add
      push '</a></b>'
      add
      return
      branch label45
     label44:
      push r:7, r:2, 2, r:'}aa', 'substring'
      callMethod
      setRegister r:6
      pop
      push r:2, 0.0, 2, r:'}aa', 'substr'
      callMethod
      push '<b><a href="'
      add
      push r:6
      add
      push '" target="_blank">'
      add
      push r:6
      add
      push '</a></b>'
      add
      push r:7, 1, r:'}aa', 'substr'
      callMethod
      add
      setRegister r:'}aa'
      pop
      push r:2, r:6, 'length'
      getMember
      push 2
      multiply
      add
      push 38
      add
      setRegister r:8
      pop
     label45:
      branch label37
     label46:
      push r:'}aa'
      return
    end // of function 

    setMember
    push r:0, ';M7Mr'
    function2 (r:2='}aa', r:6='}R}') (r:1='arguments')
      push r:'}R}'
      typeof
      push 'object'
      equals
      not
      not
      branchIfTrue label47
      push 1, 0.0, 2, r:arguments, 'splice'
      callMethod
      setRegister r:'}R}'
      pop
     label47:
      push '%', 1, r:'}aa', 'indexOf'
      callMethod
      setRegister r:3
      pop
      push 0.0
      setRegister r:5
      pop
     label48:
      push r:3, -1
      greaterThan
      not
      branchIfTrue label51
      push 1, r:3, 1
      add
      push 2, r:'}aa', 'substr'
      callMethod
      push '%'
      equals
      not
      branchIfTrue label49
      push r:3, 0.0, 2, r:'}aa', 'substr'
      callMethod
      push '%'
      add
      push r:'}aa', 'length'
      getMember
      push r:3, 2
      add
      push 2, r:'}aa', 'substring'
      callMethod
      add
      setRegister r:'}aa'
      pop
      push r:3, 2
      add
      push '%', 2, r:'}aa', 'indexOf'
      callMethod
      setRegister r:3
      pop
      branch label50
     label49:
      push r:'}R}', r:5
      getMember
      setRegister r:4
      pop
      push r:3, 0.0, 2, r:'}aa', 'substr'
      callMethod
      push r:4
      add
      push r:'}aa', 'length'
      getMember
      push r:3, 1
      add
      push 2, r:'}aa', 'substring'
      callMethod
      add
      setRegister r:'}aa'
      pop
      push r:5
      increment
      setRegister r:5
      pop
      push r:3, r:4, 'length'
      getMember
      add
      push '%', 2, r:'}aa', 'indexOf'
      callMethod
      setRegister r:3
      pop
     label50:
      branch label48
     label51:
      push r:'}aa'
      return
    end // of function 

    setMember
    push r:0, '1QSvc'
    function2 (r:3='}aa') ()
      push 0.0
      setRegister r:4
      pop
      push 0.0
      setRegister r:1
      pop
     label52:
      push r:1, r:'}aa', 'length'
      getMember
      lessThan
      not
      branchIfTrue label54
      push 1, r:1, 2, r:'}aa', 'substr'
      callMethod
      setRegister r:2
      pop
      push r:2, 0.0, r:2, 'toLowerCase'
      callMethod
      equals
      not
      not
      branchIfTrue label53
      push r:4
      increment
      setRegister r:4
      pop
     label53:
      push r:1
      increment
      setRegister r:1
      pop
      branch label52
     label54:
      push r:4
      return
    end // of function 

    setMember
    push r:0, '0PT-K('
    function2 (r:2='{saN', r:1=']saN') ()
      push r:']saN', 'length'
      getMember
      push 0.0, 2, r:'{saN', 'substr'
      callMethod
      push r:']saN'
      equals
      not
      branchIfTrue label55
      push TRUE
      return
      branch label56
     label55:
      push FALSE
      return
     label56:
    end // of function 

    setMember
    push r:0, '*6J9I('
    function2 (r:2='{saN', r:1=']saN') ()
      push r:'{saN', 'length'
      getMember
      push r:']saN', 'length'
      getMember
      subtract
      push 1, r:'{saN', 'substr'
      callMethod
      push r:']saN'
      equals
      not
      branchIfTrue label57
      push TRUE
      return
      branch label58
     label57:
      push FALSE
      return
     label58:
    end // of function 

    setMember
    push r:0, '{5RW,('
    function2 (r:5='}aa', r:6='max') ()
      push 0.0, 1, r:'}aa', 'charAt'
      callMethod
      setRegister r:4
      pop
      push 1
      setRegister r:3
      pop
      push 1
      setRegister r:1
      pop
     label59:
      push r:1, r:'}aa', 'length'
      getMember
      lessThan
      not
      branchIfTrue label63
      push r:1, 1, r:'}aa', 'charAt'
      callMethod
      setRegister r:2
      pop
      push r:2, r:4
      equals
      not
      branchIfTrue label60
      push r:3
      increment
      setRegister r:3
      pop
      branch label61
     label60:
      push 1
      setRegister r:3
      pop
      push r:2
      setRegister r:4
      pop
     label61:
      push r:3, r:max
      greaterThan
      not
      branchIfTrue label62
      push TRUE
      return
     label62:
      push r:1
      increment
      setRegister r:1
      pop
      branch label59
     label63:
      push FALSE
      return
    end // of function 

    setMember
    push r:0, ';P8CJ('
    function2 (r:8='}aa') ()
      push ',', 1, r:'}aa', 'split'
      callMethod
      setRegister r:5
      pop
      push 0.0, 'Array'
      new
      setRegister r:4
      pop
      push 0.0
      setRegister r:3
      pop
     label64:
      push r:3, r:5, 'length'
      getMember
      lessThan
      not
      branchIfTrue label67
      push r:5, r:3
      getMember
      push 1, ')9EEf'
      getVariable
      push '2EdU'
      callMethod
      setRegister r:1
      pop
      push '<', 1, r:1, 'indexOf'
      callMethod
      setRegister r:2
      pop
      push r:2, 0.0
      lessThan
      not
      branchIfTrue label65
      push '9)', r:1, 1
      initObject
      push 1, r:4, 'push'
      callMethod
      pop
      branch label66
     label65:
      push r:1, 'length'
      getMember
      push 1
      subtract
      push r:2, 1
      add
      push 2, r:1, 'substring'
      callMethod
      setRegister r:7
      pop
      push r:2, 0.0, 2, r:1, 'substring'
      callMethod
      push 1, ')9EEf'
      getVariable
      push '2EdU'
      callMethod
      setRegister r:6
      pop
      push '9)', r:7, '8)', r:6, 2
      initObject
      push 1, r:4, 'push'
      callMethod
      pop
     label66:
      push r:3
      increment
      setRegister r:3
      pop
      branch label64
     label67:
      push r:4
      return
    end // of function 

    setMember
    push r:0, ',mjO9('
    function2 (r:6='}aa') ()
      push ';', 1, r:'}aa', 'split'
      callMethod
      setRegister r:4
      pop
      push 0.0, 'Object'
      new
      setRegister r:5
      pop
      push 0.0
      setRegister r:2
      pop
     label68:
      push r:2, r:4, 'length'
      getMember
      lessThan
      not
      branchIfTrue label70
      push r:4, r:2
      getMember
      setRegister r:1
      pop
      push UNDEF
      setRegister r:3
      pop
      push '=', 1, r:1, 'indexOf'
      callMethod
      setRegister r:3
      push 0.0
      lessThan
      not
      not
      branchIfTrue label69
      push r:5, r:3, 0.0, 2, r:1, 'substr'
      callMethod
      push r:3, 1
      add
      push 1, r:1, 'substr'
      callMethod
      setMember
     label69:
      push r:2
      increment
      setRegister r:2
      pop
      branch label68
     label70:
      push r:5
      return
    end // of function 

    setMember
    push r:0, '2fC5;('
    function2 (r:2='3(') ()
      push 0.0
      setRegister r:1
      pop
     label71:
      push r:1, '\\n', 2, r:'3(', 'indexOf'
      callMethod
      setRegister r:1
      push -1
      greaterThan
      not
      branchIfTrue label72
      push r:1, 0.0, 2, r:'3(', 'substr'
      callMethod
      push '\n'
      add
      push r:1, 2
      add
      push 1, r:'3(', 'substr'
      callMethod
      add
      setRegister r:'3('
      pop
      branch label71
     label72:
      push r:'3('
      return
    end // of function 

    setMember
    push r:0, '4ucPw'
    function2 (r:1='x') ()
      push r:x, 'nodeType'
      getMember
      push 3
      equals
      not
      branchIfTrue label73
      push 0.0, r:x, 'toString'
      callMethod
      push 1, 'XML'
      new
      return
     label73:
      push 0.0, 'XML'
      new
      setRegister r:2
      pop
      push 0.0, r:x, 'nodeName'
      getMember
      push 'toLowerCase'
      callMethod
      setRegister r:0
      push 'font'
      strictEquals
      branchIfTrue label74
      push r:0, '*)'
      strictEquals
      branchIfTrue label85
      push r:0, '5)'
      strictEquals
      branchIfTrue label85
      push r:0, '8('
      strictEquals
      branchIfTrue label85
      push r:0, '2s('
      strictEquals
      branchIfTrue label85
      push r:0, '+)'
      strictEquals
      branchIfTrue label88
      push r:0, '9 5('
      strictEquals
      branchIfTrue label88
      push r:0, 'p'
      strictEquals
      branchIfTrue label93
      push r:0, '{[zNc'
      strictEquals
      branchIfTrue label96
      branch label96
     label74:
      push 0.0, r:x, 'hasChildNodes'
      callMethod
      not
      not
      branchIfTrue label75
      push UNDEF
      return
     label75:
      push ''
      setRegister r:5
      pop
      push 0.0, r:x, 'attributes'
      getMember
      push '6LpA'
      getMember
      push 'toLowerCase'
      callMethod
      setRegister r:8
      pop
      push r:8, UNDEF
      equals
      not
      dup
      not
      branchIfTrue label76
      pop
      push r:8, ')9EEf'
      getVariable
      push '7RL68('
      getMember
      equals
      not
     label76:
      not
      branchIfTrue label77
      push r:5, 'font-family: ', r:x, 'attributes'
      getMember
      push '6LpA'
      getMember
      add
      push ';'
      add
      add
      setRegister r:5
      pop
      push r:2, 'attributes'
      getMember
      push '{7}f', r:x, 'attributes'
      getMember
      push '6LpA'
      getMember
      setMember
     label77:
      push 0.0, r:x, 'attributes'
      getMember
      push '+bIL'
      getMember
      push 'toLowerCase'
      callMethod
      setRegister r:7
      pop
      push r:7, UNDEF
      equals
      not
      dup
      not
      branchIfTrue label78
      pop
      push r:7, ')9EEf'
      getVariable
      push ')Gg_K('
      getMember
      equals
      not
     label78:
      not
      branchIfTrue label79
      push r:5, 'font-size: ', r:x, 'attributes'
      getMember
      push '+bIL'
      getMember
      add
      push 'px;'
      add
      add
      setRegister r:5
      pop
      push r:2, 'attributes'
      getMember
      push 'size', r:x, 'attributes'
      getMember
      push '+bIL'
      getMember
      setMember
     label79:
      push 0.0, r:x, 'attributes'
      getMember
      push ' M];M'
      getMember
      push 'toUpperCase'
      callMethod
      setRegister r:6
      pop
      push r:6, UNDEF
      equals
      not
      dup
      not
      branchIfTrue label80
      pop
      push r:6, ')9EEf'
      getVariable
      push '+(8uk'
      getMember
      equals
      not
     label80:
      not
      branchIfTrue label81
      push r:5, 'color: ', r:x, 'attributes'
      getMember
      push ' M];M'
      getMember
      add
      push ';'
      add
      add
      setRegister r:5
      pop
      push r:2, 'attributes'
      getMember
      push 'color', r:x, 'attributes'
      getMember
      push ' M];M'
      getMember
      setMember
     label81:
      push 0.0, 'XML'
      new
      setRegister r:4
      pop
      push r:5, 'length'
      getMember
      not
      branchIfTrue label82
      push r:2, 'nodeName', 'font'
      setMember
      push r:4, 'nodeName', ',EhN'
      setMember
      push r:4, 'attributes'
      getMember
      push ' KbuC', r:5
      setMember
     label82:
      push r:x, 'firstChild'
      getMember
      setRegister r:3
      pop
     label83:
      push r:3, 'nodeType'
      getMember
      push 0.0
      greaterThan
      not
      branchIfTrue label84
      push r:3, 1, ')9EEf'
      getVariable
      push '4ucPw'
      callMethod
      push 1, r:4, 'appendChild'
      callMethod
      pop
      push r:3, 'nextSibling'
      getMember
      setRegister r:3
      pop
      branch label83
     label84:
      push r:4, 1, r:2, 'appendChild'
      callMethod
      pop
      branch label99
     label85:
      push r:2, 'nodeName', 0.0, r:x, 'nodeName'
      getMember
      push 'toLowerCase'
      callMethod
      setMember
      push r:x, 'firstChild'
      getMember
      setRegister r:3
      pop
     label86:
      push r:3, 'nodeType'
      getMember
      push 0.0
      greaterThan
      not
      branchIfTrue label87
      push r:3, 1, ')9EEf'
      getVariable
      push '4ucPw'
      callMethod
      push 1, r:2, 'appendChild'
      callMethod
      pop
      push r:3, 'nextSibling'
      getMember
      setRegister r:3
      pop
      branch label86
     label87:
      branch label99
     label88:
      push r:2, 'nodeName', 0.0, r:x, 'nodeName'
      getMember
      push 'toLowerCase'
      callMethod
      setMember
      push r:x, 'attributes'
      getMember
      enumerateValue
     label89:
      setRegister r:0
      push NULL
      equals
      branchIfTrue label90
      push r:0
      setRegister r:3
      pop
      push r:2, 'attributes'
      getMember
      push r:3, r:x, 'attributes'
      getMember
      push r:3
      getMember
      setMember
      branch label89
     label90:
      push r:x, 'firstChild'
      getMember
      setRegister r:3
      pop
     label91:
      push r:3, 'nodeType'
      getMember
      push 0.0
      greaterThan
      not
      branchIfTrue label92
      push r:3, 1, ')9EEf'
      getVariable
      push '4ucPw'
      callMethod
      push 1, r:2, 'appendChild'
      callMethod
      pop
      push r:3, 'nextSibling'
      getMember
      setRegister r:3
      pop
      branch label91
     label92:
      branch label99
     label93:
      push r:2, 'nodeName', '-P('
      setMember
      push r:x, 'firstChild'
      getMember
      setRegister r:3
      pop
     label94:
      push r:3, 'nodeType'
      getMember
      push 0.0
      greaterThan
      not
      branchIfTrue label95
      push r:3, 1, ')9EEf'
      getVariable
      push '4ucPw'
      callMethod
      push 1, r:2, 'appendChild'
      callMethod
      pop
      push r:3, 'nextSibling'
      getMember
      setRegister r:3
      pop
      branch label94
     label95:
      branch label99
     label96:
      push r:x, 'firstChild'
      getMember
      setRegister r:3
      pop
     label97:
      push r:3, 'nodeType'
      getMember
      push 0.0
      greaterThan
      not
      branchIfTrue label98
      push r:3, 1, ')9EEf'
      getVariable
      push '4ucPw'
      callMethod
      push 1, r:2, 'appendChild'
      callMethod
      pop
      push r:3, 'nextSibling'
      getMember
      setRegister r:3
      pop
      branch label97
     label98:
      branch label99
     label99:
      push r:2
      return
    end // of function 

    setMember
    push r:0, '}aDut'
    function2 (r:2='}aa') ()
      push r:'}aa', 1, 'XML'
      new
      setRegister r:1
      pop
      push r:1, 1, ')9EEf'
      getVariable
      push '4ucPw'
      callMethod
      setRegister r:1
      pop
      push '\'', '&apos;', '<br />', '</br>', '', '<br>', 0.0, r:1, 'toString'
      callMethod
      push 3, ')9EEf'
      getVariable
      push '6ub3H('
      callMethod
      push 3, ')9EEf'
      getVariable
      push '6ub3H('
      callMethod
      push 3, ')9EEf'
      getVariable
      push '6ub3H('
      callMethod
      return
    end // of function 

    setMember
    push r:0, ']Nr0A', '&gt;', '&lt;', '"', ')', ' ', 5
    initArray
    setMember
    push r:0, '7RL68(', '+3+{e'
    setMember
    push r:0, ')Gg_K(', '12'
    setMember
    push r:0, '+(8uk', '#335511'
    setMember
    push 1, NULL, '_global'
    getVariable
    push ')9EEf'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label100:
    pop
  end // of initMovieClip 22

  defineMovieClip 23 // total frames: 0
  end // of defineMovieClip 23
  
  exportAssets
    23 as '__Packages.ext.util.MTNumber'
  end // of exportAssets
  
  initMovieClip 23
    constants '_global', '2h,(', 'Object', '[OaT', '-+ZvE(', 'prototype', '75Pi*(', 'Math', 'floor', 'round', 'toString', 'length', '0', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push '2h,('
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push '2h,(', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT'
    getMember
    push '-+ZvE('
    getMember
    not
    not
    branchIfTrue label8
    push '2h,('
    getVariable
    push '[OaT'
    getMember
    push '-+ZvE('
    function ()
    end // of function 

    setRegister r:0
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:0, '75Pi*('
    function2 (r:5='t', r:7='8AxN', r:6='7AxN') ()
      push UNDEF
      setRegister r:1
      pop
      push UNDEF
      setRegister r:2
      pop
      push UNDEF
      setRegister r:3
      pop
      push r:t, 60000
      divide
      push 1, 'Math'
      getVariable
      push 'floor'
      callMethod
      setRegister r:1
      pop
      push r:t, r:1, 60000
      multiply
      subtract
      push 1000
      divide
      push 1, 'Math'
      getVariable
      push 'floor'
      callMethod
      setRegister r:2
      pop
      push r:t, r:1, 60000
      multiply
      push r:2, 1000
      multiply
      add
      subtract
      push 10
      divide
      push 1, 'Math'
      getVariable
      push 'round'
      callMethod
      setRegister r:3
      pop
      push 0.0, r:1, 'toString'
      callMethod
      setRegister r:1
      pop
      push 0.0, r:2, 'toString'
      callMethod
      setRegister r:2
      pop
      push 0.0, r:3, 'toString'
      callMethod
      setRegister r:3
      pop
      push r:1, 'length'
      getMember
      push 2
      lessThan
      not
      branchIfTrue label3
      push '0', r:1
      add
      setRegister r:1
      pop
     label3:
      push r:2, 'length'
      getMember
      push 2
      lessThan
      not
      branchIfTrue label4
      push '0', r:2
      add
      setRegister r:2
      pop
     label4:
      push r:3, 'length'
      getMember
      push 2
      lessThan
      not
      branchIfTrue label5
      push '0', r:3
      add
      setRegister r:3
      pop
     label5:
      push r:1
      setRegister r:4
      pop
      push r:'8AxN', UNDEF
      equals
      not
      not
      branchIfTrue label6
      push r:4, r:'8AxN', r:2
      add
      add
      setRegister r:4
      pop
     label6:
      push r:'7AxN', UNDEF
      equals
      not
      not
      branchIfTrue label7
      push r:4, r:'7AxN', r:3
      add
      add
      setRegister r:4
      pop
     label7:
      push r:4
      return
    end // of function 

    setMember
    push 1, NULL, '2h,('
    getVariable
    push '[OaT'
    getMember
    push '-+ZvE('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label8:
    pop
  end // of initMovieClip 23

  defineMovieClip 24 // total frames: 0
  end // of defineMovieClip 24
  
  exportAssets
    24 as '__Packages.FENumber'
  end // of exportAssets
  
  initMovieClip 24
    constants '_global', '[CZoA(', '2h,(', '[OaT', '-+ZvE(', 'prototype', '4Rej3', 'toString', '3(', '0x', 'substring', '-)', '*)', '69WC', 'Math', 'floor', '33Yx0(', 'length', '', 'toUpperCase', '0', '9_-j{', 'isNaN', '5INaK', 'round', 'max', 'min', ' HAuz', ']+(nH(', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push '[CZoA('
    getMember
    not
    not
    branchIfTrue label17
    push '_global'
    getVariable
    push '[CZoA('
    function2 () (r:1='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push '_global'
    getVariable
    push '[CZoA('
    getMember
    push '2h,('
    getVariable
    push '[OaT'
    getMember
    push '-+ZvE('
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:0, '4Rej3'
    function2 (r:6='6n(') ()
      push 16, 1, r:'6n(', 'toString'
      callMethod
      setRegister r:1
      pop
      push '3(', '0x', 2, 0.0, 2, r:1, 'substring'
      callMethod
      add
      toNumber
      push '-)', '0x', 4, 2, 2, r:1, 'substring'
      callMethod
      add
      toNumber
      push '*)', '0x', 6, 4, 2, r:1, 'substring'
      callMethod
      add
      toNumber
      push 3
      initObject
      setRegister r:2
      pop
      push r:2
      return
    end // of function 

    setMember
    push r:0, '69WC'
    function2 (r:1='6n(') ()
      push r:'6n(', 26
      greaterThan
      not
      branchIfTrue label3
      push r:'6n(', 26
      modulo
      push 0.0
      equals
      not
      branchIfTrue label1
      push r:'6n(', 1
      subtract
      push 26
      divide
      push 1, 'Math'
      getVariable
      push 'floor'
      callMethod
      push 1, '[CZoA('
      getVariable
      push '69WC'
      callMethod
      setRegister r:2
      pop
      push 26
      setRegister r:'6n('
      pop
      branch label2
     label1:
      push r:'6n(', 26
      divide
      push 1, 'Math'
      getVariable
      push 'floor'
      callMethod
      push 1, '[CZoA('
      getVariable
      push '69WC'
      callMethod
      setRegister r:2
      pop
      push r:'6n(', 26
      modulo
      setRegister r:'6n('
      pop
     label2:
      push r:'6n(', 9
      add
      setRegister r:'6n('
      pop
      push r:2, 36, 1, r:'6n(', 'toString'
      callMethod
      add
      return
      branch label4
     label3:
      push 36, 1, r:'6n(', 9
      add
      push 'toString'
      callMethod
      return
     label4:
    end // of function 

    setMember
    push r:0, '33Yx0('
    function2 (r:4='8)', r:5='4wCdf') (r:1='arguments')
      push r:arguments, 'length'
      getMember
      push 1
      equals
      not
      branchIfTrue label5
      push 1
      setRegister r:'4wCdf'
      pop
     label5:
      push ''
      setRegister r:2
      pop
     label6:
      push r:'8)', 0.0
      greaterThan
      not
      branchIfTrue label9
      push r:'8)', 62
      modulo
      setRegister r:3
      pop
      push r:3, 36
      lessThan
      not
      branchIfTrue label7
      push 36, 1, r:3, 'toString'
      callMethod
      push r:2
      add
      setRegister r:2
      pop
      branch label8
     label7:
      push 0.0, 36, 1, r:3, 26
      subtract
      push 'toString'
      callMethod
      push 'toUpperCase'
      callMethod
      push r:2
      add
      setRegister r:2
      pop
     label8:
      push r:'8)', r:3
      subtract
      push 62
      divide
      setRegister r:'8)'
      pop
      branch label6
     label9:
      push r:'4wCdf', r:2, 'length'
      getMember
      greaterThan
      not
      branchIfTrue label10
      push '0', r:2
      add
      setRegister r:2
      pop
      branch label9
     label10:
      push r:2
      return
    end // of function 

    setMember
    push r:0, '9_-j{'
    function2 (r:3='8)', r:2=';)') ()
      push r:'8)', 1, 'isNaN'
      callFunction
      dup
      branchIfTrue label11
      pop
      push r:'8)', UNDEF
      equals
     label11:
      not
      branchIfTrue label12
      push 0.0
      setRegister r:'8)'
      pop
     label12:
      push 0.0, r:'8)', 'toString'
      callMethod
      setRegister r:1
      pop
     label13:
      push r:1, 'length'
      getMember
      push r:';)'
      lessThan
      not
      branchIfTrue label14
      push '0', r:1
      add
      setRegister r:1
      pop
      branch label13
     label14:
      push r:1
      return
    end // of function 

    setMember
    push r:0, '5INaK'
    function2 (r:3='6n(', r:2='8{4(', r:1='3d)b') ()
      push r:'8{4(', UNDEF
      equals
      not
      branchIfTrue label15
      push 0.0
      setRegister r:'8{4('
      pop
     label15:
      push r:'3d)b', UNDEF
      equals
      not
      branchIfTrue label16
      push 1
      setRegister r:'3d)b'
      pop
     label16:
      push r:'6n(', 16
      shiftRight
      push 255
      bitwiseAnd
      setRegister r:5
      pop
      push r:'6n(', 8
      shiftRight
      push 255
      bitwiseAnd
      setRegister r:6
      pop
      push r:'6n(', 255
      bitwiseAnd
      setRegister r:4
      pop
      push 255, r:5, r:'8{4('
      add
      push r:'3d)b'
      multiply
      push 1, 'Math'
      getVariable
      push 'round'
      callMethod
      push 0.0, 2, 'Math'
      getVariable
      push 'max'
      callMethod
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      setRegister r:5
      pop
      push 255, r:6, r:'8{4('
      add
      push r:'3d)b'
      multiply
      push 1, 'Math'
      getVariable
      push 'round'
      callMethod
      push 0.0, 2, 'Math'
      getVariable
      push 'max'
      callMethod
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      setRegister r:6
      pop
      push 255, r:4, r:'8{4('
      add
      push r:'3d)b'
      multiply
      push 1, 'Math'
      getVariable
      push 'round'
      callMethod
      push 0.0, 2, 'Math'
      getVariable
      push 'max'
      callMethod
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      setRegister r:4
      pop
      push '3(', r:5, '-)', r:6, '*)', r:4, 3
      initObject
      push 1, ' HAuz'
      getVariable
      push ']+(nH('
      callMethod
      return
    end // of function 

    setMember
    push 1, NULL, '_global'
    getVariable
    push '[CZoA('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label17:
    pop
  end // of initMovieClip 24

  defineMovieClip 25 // total frames: 0
  end // of defineMovieClip 25
  
  exportAssets
    25 as '__Packages.FEObject'
  end // of exportAssets
  
  initMovieClip 25
    constants '_global', ' HAuz', 'prototype', '8V[xN', 'Object', '+vSOK(', 'object', '7G]E)', ']+(nH(', '0x', '3(', 'toString', '-)', '*)', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push ' HAuz'
    getMember
    not
    not
    branchIfTrue label10
    push '_global'
    getVariable
    push ' HAuz'
    function ()
    end // of function 

    setRegister r:0
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:0, '8V[xN'
    function2 (r:1='8p7(') ()
      push 0.0, 'Object'
      new
      setRegister r:2
      pop
      push r:'8p7('
      enumerateValue
     label1:
      setRegister r:0
      push NULL
      equals
      branchIfTrue label2
      push r:0
      setRegister r:3
      pop
      push r:2, r:3, r:'8p7(', r:3
      getMember
      setMember
      branch label1
     label2:
      push r:2
      return
    end // of function 

    setMember
    push r:0, '+vSOK('
    function2 (r:1='8p7(') ()
      push 0.0, 'Object'
      new
      setRegister r:3
      pop
      push r:'8p7('
      enumerateValue
     label3:
      setRegister r:0
      push NULL
      equals
      branchIfTrue label6
      push r:0
      setRegister r:4
      pop
      push r:'8p7(', r:4
      getMember
      typeof
      setRegister r:2
      pop
      push r:2, 'object'
      equals
      not
      branchIfTrue label4
      push r:3, r:4, r:'8p7(', r:4
      getMember
      push 1, ' HAuz'
      getVariable
      push '+vSOK('
      callMethod
      setMember
      branch label5
     label4:
      push r:3, r:4, r:'8p7(', r:4
      getMember
      setMember
     label5:
      branch label3
     label6:
      push r:3
      return
    end // of function 

    setMember
    push r:0, '7G]E)'
    function2 (r:1='8p7(', r:2='7)', r:4='-1tNi') ()
      push r:'7)'
      enumerateValue
     label7:
      setRegister r:0
      push NULL
      equals
      branchIfTrue label9
      push r:0
      setRegister r:3
      pop
      push r:'8p7(', r:3
      getMember
      push UNDEF
      equals
      push r:'-1tNi'
      or
      not
      branchIfTrue label8
      push r:'8p7(', r:3, r:'7)', r:3
      getMember
      setMember
     label8:
      branch label7
     label9:
    end // of function 

    setMember
    push r:0, ']+(nH('
    function2 (r:2='8p7(') ()
      push '0x', 16, 1, r:'8p7(', '3('
      getMember
      push 'toString'
      callMethod
      add
      push 16, 1, r:'8p7(', '-)'
      getMember
      push 'toString'
      callMethod
      add
      push 16, 1, r:'8p7(', '*)'
      getMember
      push 'toString'
      callMethod
      add
      setRegister r:1
      pop
      push r:1
      toNumber
      return
    end // of function 

    setMember
    push 1, NULL, '_global'
    getVariable
    push ' HAuz'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label10:
    pop
  end // of initMovieClip 25

  defineMovieClip 26 // total frames: 0
  end // of defineMovieClip 26
  
  exportAssets
    26 as '__Packages.miniwave.Client'
  end // of exportAssets
  
  initMovieClip 26
    constants '_global', 'miniwave', 'Object', ']o]m6(', 'name', 'size', ',DVA;', 'getFileInfos', '*o)(', 'isWhite', ' HG[C(', 'frusion', 'gameclient', 'GameClient', 'prototype', 'serviceConnect', ';IwU', '[CLIENT] serviceConnect()\n', 'slots', '[=z', 'onServiceConnect', 'setInterval', '[w;(', 'connected', 'clearInterval', 'onGameReset', '[CLIENT]onGameReset()\n', '9ncqC(', 'onPause', '[CLIENT]onPause()\n', '1TT)7', 'saveSlot', '[CLIENT] saveSlot(', ') \n', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ']o]m6('
    getMember
    not
    not
    branchIfTrue label5
    push 'miniwave'
    getVariable
    push ']o]m6('
    function2 () (r:1='this', r:2='super')
      function2 '*o)(' (r:3=')tSBR') ()
        push 'name', r:')tSBR', 'size', 0.0, 2
        initObject
        return
      end // of function *o)(

      function ' HG[C(' ()
        push TRUE
        return
      end // of function  HG[C(

      push 0.0, r:super, UNDEF
      callMethod
      pop
      push r:this, ',DVA;'
      getMember
      not
      branchIfTrue label2
      push r:this, 'getFileInfos', '*o)('
      getVariable
      setMember
      push r:this, 'isWhite', ' HG[C('
      getVariable
      setMember
     label2:
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push ']o]m6('
    getMember
    push 'frusion'
    getVariable
    push 'gameclient'
    getMember
    push 'GameClient'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, 'serviceConnect'
    function2 () (r:1='this', r:2='super', r:3='_root')
      push r:_root, ';IwU', r:_root, ';IwU'
      getMember
      push '[CLIENT] serviceConnect()\n'
      add
      setMember
      push r:this, ',DVA;'
      getMember
      not
      branchIfTrue label3
      push r:this, 'slots', 0.0
      initArray
      setMember
      push r:this, '[=z', 1000, 'onServiceConnect', r:this, 3, 'setInterval'
      callFunction
      setMember
      push UNDEF
      return
     label3:
      push 0.0, r:super, 'serviceConnect'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'onServiceConnect'
    function2 () (r:1='this')
      push 0.0, r:this, '[w;('
      getMember
      push 'connected'
      callMethod
      pop
      push r:this, ',DVA;'
      getMember
      not
      branchIfTrue label4
      push r:this, '[=z'
      getMember
      push 1, 'clearInterval'
      callFunction
      pop
     label4:
    end // of function 

    setMember
    push r:1, 'onGameReset'
    function2 () (r:1='this', r:2='_root')
      push r:_root, ';IwU', r:_root, ';IwU'
      getMember
      push '[CLIENT]onGameReset()\n'
      add
      setMember
      push 0.0, r:this, '[w;('
      getMember
      push '9ncqC('
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'onPause'
    function2 () (r:1='this', r:2='_root')
      push r:_root, ';IwU', r:_root, ';IwU'
      getMember
      push '[CLIENT]onPause()\n'
      add
      setMember
      push TRUE, 1, r:this, '[w;('
      getMember
      push '1TT)7'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'saveSlot'
    function2 (r:3='8)', r:4='data') (r:1='super', r:2='_root')
      push r:_root, ';IwU', r:_root, ';IwU'
      getMember
      push '[CLIENT] saveSlot(', r:'8)'
      add
      push ') \n'
      add
      add
      setMember
      push r:'data', r:'8)', 2, r:super, 'saveSlot'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ',DVA;', FALSE
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push ']o]m6('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label5:
    pop
  end // of initMovieClip 26

  defineMovieClip 27 // total frames: 0
  end // of defineMovieClip 27
  
  exportAssets
    27 as '__Packages.miniwave.SoundManager'
  end // of exportAssets
  
  initMovieClip 27
    constants '_global', 'miniwave', 'Object', '1L*M (', ';IwU', '[SM] init()\n', '{2*bd', 'Array', '5}gw1', '-q};c', 'MovieClip', 'prototype', '3A_sh', 'length', '+Wcft', 'stop', ';p(', 'removeMovieClip', '*wD,j', '-96b', 'createEmptyMovieClip', ',fi', '6J0l', 'Sound', '6n(', 'enabled', '32WtN', '2d[', ' E}a', '](10((', 'attachSound', 'onSoundComplete', '))Xxt', '[bRwJ', 'start', '9F=HL', 'play', ';f q', ']5uG2(', '95}f', '-iHw1', '=_]51', 'setVolume', '}7xkK', '1UKgY', '9]6w1', '[ {o', '{RC (', ']22d2', '6L]C*(', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '1L*M ('
    getMember
    not
    not
    branchIfTrue label19
    push 'miniwave'
    getVariable
    push '1L*M ('
    function2 () (r:1='this', r:2='super', r:3='_root')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push r:_root, ';IwU', r:_root, ';IwU'
      getMember
      push '[SM] init()\n'
      add
      setMember
      push r:this, '{2*bd', 0.0, 'Array'
      new
      setMember
      push r:this, '5}gw1', -1
      setMember
      push r:this, '-q};c', TRUE
      setMember
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '1L*M ('
    getMember
    push 'MovieClip'
    getVariable
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '3A_sh'
    function2 () (r:1='this')
      push UNDEF
      setRegister r:3
      pop
      push 0.0
      setRegister r:3
      pop
     label2:
      push r:3, r:this, '{2*bd'
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label5
      push r:this, '{2*bd'
      getMember
      push r:3
      getMember
      setRegister r:2
      pop
      push r:2, '+Wcft'
      getMember
      enumerateValue
     label3:
      setRegister r:0
      push NULL
      equals
      branchIfTrue label4
      push r:0
      setRegister r:4
      pop
      push 0.0, r:2, '+Wcft'
      getMember
      push r:4
      getMember
      push 'stop'
      callMethod
      pop
      branch label3
     label4:
      push 0.0, r:2, ';p('
      getMember
      push 'removeMovieClip'
      callMethod
      pop
      push r:3
      increment
      setRegister r:3
      pop
      branch label2
     label5:
      push r:this, '{2*bd', 0.0
      initArray
      setMember
    end // of function 

    setMember
    push r:1, '*wD,j'
    function2 (r:3='-96b') (r:1='this')
      push r:this, '{2*bd'
      getMember
      push r:'-96b'
      getMember
      setRegister r:2
      pop
      push r:2, UNDEF
      equals
      not
      branchIfTrue label6
      push r:'-96b', '-96b', r:'-96b'
      add
      push 2, r:this, 'createEmptyMovieClip'
      callMethod
      setRegister r:4
      pop
      push ';p(', r:4, '+Wcft', 0.0
      initArray
      push ',fi', 100, '6J0l', r:4, 1, 'Sound'
      new
      push '6n(', r:'-96b', 'enabled', TRUE, 6
      initObject
      setRegister r:2
      pop
      push r:this, '{2*bd'
      getMember
      push r:'-96b', r:2
      setMember
     label6:
      push r:2
      return
    end // of function 

    setMember
    push r:1, '32WtN'
    function2 (r:5='name', r:6='-96b') (r:1='this')
      function2 '))Xxt' () (r:1='this')
        push r:this, 1, '2d['
        getVariable
        push ' E}a'
        callMethod
        push '](10((', FALSE
        setMember
      end // of function ))Xxt

      push r:name, 1, '2d['
      getVariable
      push ' E}a'
      callMethod
      setRegister r:4
      pop
      push r:'-96b', 1, r:this, '*wD,j'
      callMethod
      setRegister r:3
      pop
      push r:3, '+Wcft'
      getMember
      push r:4
      getMember
      setRegister r:2
      pop
      push r:2, UNDEF
      equals
      not
      branchIfTrue label7
      push r:3, ';p('
      getMember
      push 1, 'Sound'
      new
      setRegister r:2
      pop
      push r:name, 1, r:2, 'attachSound'
      callMethod
      pop
      push r:2, 'onSoundComplete', '))Xxt'
      getVariable
      setMember
      push r:2, 1, '2d['
      getVariable
      push ' E}a'
      callMethod
      push '](10((', FALSE
      setMember
      push r:3, '+Wcft'
      getMember
      push r:4, r:2
      setMember
     label7:
      push r:2
      return
    end // of function 

    setMember
    push r:1, '[bRwJ'
    function2 (r:4='name', r:3='-96b') (r:1='this')
      push r:'-96b', r:name, 2, r:this, '32WtN'
      callMethod
      setRegister r:2
      pop
      push 1, 0.0, 2, r:2, 'start'
      callMethod
      pop
      push r:2, 1, '2d['
      getVariable
      push ' E}a'
      callMethod
      push '](10((', TRUE
      setMember
      push r:this, '-q};c'
      getMember
      push r:'-96b', 2, r:this, '9F=HL'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'play'
    function2 (r:2='name') (r:1='this')
      push 0.0, r:name, 2, r:this, '[bRwJ'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ';f q'
    function2 (r:4='name', r:3='-96b') (r:1='this')
      push r:'-96b', r:name, 2, r:this, '32WtN'
      callMethod
      setRegister r:2
      pop
      push 65535, 0.0, 2, r:2, 'start'
      callMethod
      pop
      push r:2, 1, '2d['
      getVariable
      push ' E}a'
      callMethod
      push '](10((', TRUE
      setMember
      push r:this, '-q};c'
      getMember
      push r:'-96b', 2, r:this, '9F=HL'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ']5uG2('
    function2 (r:3='name', r:4='-96b') (r:1='this')
      push r:'-96b', r:name, 2, r:this, '32WtN'
      callMethod
      setRegister r:2
      pop
      push 0.0, r:2, 'stop'
      callMethod
      pop
      push r:2, 1, '2d['
      getVariable
      push ' E}a'
      callMethod
      push '](10((', FALSE
      setMember
    end // of function 

    setMember
    push r:1, '95}f'
    function2 (r:3='=a,da', r:4='2w*0G(', r:2='length') (r:1='this')
      push r:this, '5}gw1'
      getMember
      push -1
      equals
      not
      not
      branchIfTrue label8
      push r:this, '-iHw1'
      getMember
      push r:this, '=_]51'
      getMember
      push '6n('
      getMember
      push 2, r:this, 'setVolume'
      callMethod
      pop
      push r:this, '}7xkK'
      getMember
      push '6n('
      getMember
      push 1, r:this, 'stop'
      callMethod
      pop
      push r:this, '-iHw1'
      getMember
      push r:this, '}7xkK'
      getMember
      push '6n('
      getMember
      push 2, r:this, 'setVolume'
      callMethod
      pop
     label8:
      push r:this, '}7xkK', r:'=a,da', 1, r:this, '*wD,j'
      callMethod
      setMember
      push r:this, '=_]51', r:'2w*0G(', 1, r:this, '*wD,j'
      callMethod
      setMember
      push r:this, '1UKgY', r:this, '=_]51'
      getMember
      push ',fi'
      getMember
      setMember
      push r:this, '-iHw1', r:this, '}7xkK'
      getMember
      push ',fi'
      getMember
      setMember
      push r:this, '5}gw1', 0.0
      setMember
      push r:this, '9]6w1', r:length
      setMember
    end // of function 

    setMember
    push r:1, '[ {o'
    function2 () (r:1='this')
      push r:this, '5}gw1'
      getMember
      push -1
      equals
      not
      not
      branchIfTrue label10
      push FALSE
      setRegister r:2
      pop
      push r:this, '5}gw1', r:this, '5}gw1'
      getMember
      push '2d['
      getVariable
      push '{RC ('
      getMember
      push r:this, '9]6w1'
      getMember
      divide
      add
      setMember
      push r:this, '5}gw1'
      getMember
      push 1
      lessThan
      not
      not
      branchIfTrue label9
      push r:this, '5}gw1', 1
      setMember
      push TRUE
      setRegister r:2
      pop
     label9:
      push r:this, '-iHw1'
      getMember
      push r:this, '1UKgY'
      getMember
      subtract
      push r:this, '5}gw1'
      getMember
      multiply
      push r:this, '1UKgY'
      getMember
      add
      setRegister r:3
      pop
      push r:3, r:this, '=_]51'
      getMember
      push '6n('
      getMember
      push 2, r:this, 'setVolume'
      callMethod
      pop
      push r:this, '-iHw1'
      getMember
      push r:3
      subtract
      push r:this, '}7xkK'
      getMember
      push '6n('
      getMember
      push 2, r:this, 'setVolume'
      callMethod
      pop
      push r:2
      not
      branchIfTrue label10
      push r:this, '5}gw1', -1
      setMember
      push r:this, '}7xkK'
      getMember
      push '6n('
      getMember
      push 1, r:this, 'stop'
      callMethod
      pop
      push r:this, '-iHw1'
      getMember
      push r:this, '}7xkK'
      getMember
      push '6n('
      getMember
      push 2, r:this, 'setVolume'
      callMethod
      pop
     label10:
    end // of function 

    setMember
    push r:1, '9F=HL'
    function2 (r:4='-96b', r:3='9e-g') (r:1='this')
      push r:'-96b', 1, r:this, '*wD,j'
      callMethod
      setRegister r:2
      pop
      push r:2, 'enabled', r:'9e-g'
      setMember
      push r:2, 'enabled'
      getMember
      not
      branchIfTrue label11
      push r:2, ',fi'
      getMember
      push 1, r:2, '6J0l'
      getMember
      push 'setVolume'
      callMethod
      pop
      branch label12
     label11:
      push 0.0, 1, r:2, '6J0l'
      getMember
      push 'setVolume'
      callMethod
      pop
     label12:
    end // of function 

    setMember
    push r:1, 'stop'
    function2 (r:4='-96b') (r:1='this')
      push r:'-96b', 1, r:this, '*wD,j'
      callMethod
      setRegister r:2
      pop
      push r:2, '+Wcft'
      getMember
      enumerateValue
     label13:
      setRegister r:0
      push NULL
      equals
      branchIfTrue label14
      push r:0
      setRegister r:3
      pop
      push 0.0, r:2, '+Wcft'
      getMember
      push r:3
      getMember
      push 'stop'
      callMethod
      pop
      push r:2, '+Wcft'
      getMember
      push r:3
      getMember
      push 1, '2d['
      getVariable
      push ' E}a'
      callMethod
      push '](10((', FALSE
      setMember
      branch label13
     label14:
    end // of function 

    setMember
    push r:1, ']22d2'
    function2 (r:3='name', r:4='-96b') (r:1='this')
      push r:'-96b', r:name, 2, r:this, '32WtN'
      callMethod
      setRegister r:2
      pop
      push r:2, 1, '2d['
      getVariable
      push ' E}a'
      callMethod
      push '](10(('
      getMember
      return
    end // of function 

    setMember
    push r:1, 'setVolume'
    function2 (r:3='-96b', r:4='9zY}G') (r:1='this')
      push r:'-96b', 1, r:this, '*wD,j'
      callMethod
      setRegister r:2
      pop
      push r:2, ',fi', r:'9zY}G'
      setMember
      push r:2, 'enabled'
      getMember
      not
      branchIfTrue label15
      push r:2, ',fi'
      getMember
      push 1, r:2, '6J0l'
      getMember
      push 'setVolume'
      callMethod
      pop
     label15:
    end // of function 

    setMember
    push r:1, '6L]C*('
    function2 (r:4='9e-g') (r:1='this')
      push r:this, '-q};c', r:'9e-g'
      setMember
      push 0.0
      setRegister r:2
      pop
     label16:
      push r:2, r:this, '{2*bd'
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label18
      push r:this, '{2*bd'
      getMember
      push r:2
      getMember
      setRegister r:3
      pop
      push r:3, UNDEF
      equals
      not
      not
      branchIfTrue label17
      push r:this, '-q};c'
      getMember
      push r:3, '6n('
      getMember
      push 2, r:this, '9F=HL'
      callMethod
      pop
     label17:
      push r:2
      increment
      setRegister r:2
      pop
      branch label16
     label18:
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '1L*M ('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label19:
    pop
  end // of initMovieClip 27

  defineMovieClip 28 // total frames: 0
  end // of defineMovieClip 28
  
  exportAssets
    28 as '__Packages.Std'
  end // of exportAssets
  
  initMovieClip 28
    constants '_global', '2d[', 'prototype', '=w)l', '5wX2A', '184)((', 'string', 'Array', ',w;zC(', 'length', 'splice', '1{OB (', 'Color', '{]ckD', 'ra', 'rb', 'ba', 'bb', 'ga', 'gb', 'aa', 'ab', 'setTransform', 'XMLNode', 'get', 'attributes', 'set', 'ASSetPropFlags', '[sYE2', '@', '164=p', 'attachMovie', '7PHI3', '_empty@', 'createEmptyMovieClip', '7n3xG(', '_dup@', 'duplicateMovieClip', '_parent', '9]}]I(', '}B(gp', '[]dhN', '=X7BG(', ';(flk', 'createTextField', 'TextField@', '6ub3H(', 'indexOf', 'substr', 'fps', '7J-V', ' E}a', 'hitTest', '6}jsa', '2z0,f', '{RC (', '7}8qX', ')[tXy', '5+R0x', '}SCXE', 'Object', '9{9}E(', 'random', '*UFaA', '', ';HoV7', 'escape', 'unescape', 'parseInt', 'toString', '8ZygI', 'isNaN', 'registerClass'  
    push '_global'
    getVariable
    push '2d['
    getMember
    not
    not
    branchIfTrue label16
    push '_global'
    getVariable
    push '2d['
    function ()
    end // of function 

    setRegister r:0
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:0, '=w)l'
    function2 (r:16='fps') (r:1='this', r:2='_global')
      push '2d['
      getVariable
      push '5wX2A', TRUE
      setMember
      push '2d['
      getVariable
      push '184)((', r:fps
      setMember
      push r:_global, 'string'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label1
      push r:_global, 'string'
      function2 (r:1='x') ()
        push r:x
        return
      end // of function 

      setMember
     label1:
      push 'Array'
      getVariable
      push 'prototype'
      getMember
      push ',w;zC('
      function2 (r:4='8p7(') (r:1='this')
        push UNDEF
        setRegister r:2
        pop
        push r:this, 'length'
        getMember
        setRegister r:3
        pop
        push 0.0
        setRegister r:2
        pop
       label2:
        push r:2, r:3
        lessThan
        not
        branchIfTrue label4
        push r:this, r:2
        getMember
        push r:'8p7('
        equals
        not
        branchIfTrue label3
        push 1, r:2, 2, r:this, 'splice'
        callMethod
        pop
        push TRUE
        return
       label3:
        push r:2
        increment
        setRegister r:2
        pop
        branch label2
       label4:
        push FALSE
        return
      end // of function 

      setMember
      push 'Array'
      getVariable
      push 'prototype'
      getMember
      push '1{OB ('
      function2 () (r:1='this')
        push UNDEF
        setRegister r:4
        pop
        push 0.0
        setRegister r:4
        pop
       label5:
        push r:4, r:this, 'length'
        getMember
        lessThan
        not
        branchIfTrue label6
        push r:this, 'length'
        getMember
        random
        setRegister r:3
        pop
        push r:this, 'length'
        getMember
        random
        setRegister r:2
        pop
        push r:this, r:3
        getMember
        setRegister r:5
        pop
        push r:this, r:3, r:this, r:2
        getMember
        setMember
        push r:this, r:2, r:5
        setMember
        push r:4
        increment
        setRegister r:4
        pop
        branch label5
       label6:
      end // of function 

      setMember
      push 'Color'
      getVariable
      push 'prototype'
      getMember
      push '{]ckD'
      function2 () (r:1='this')
        push 'ra', 100, 'rb', 0.0, 'ba', 100, 'bb', 0.0, 'ga', 100, 'gb', 0.0, 'aa', 100, 'ab', 0.0, 8
        initObject
        push 1, r:this, 'setTransform'
        callMethod
        pop
      end // of function 

      setMember
      push 'XMLNode'
      getVariable
      push 'prototype'
      getMember
      push 'get'
      function2 (r:2='x') (r:1='this')
        push r:this, 'attributes'
        getMember
        push r:x
        getMember
        return
      end // of function 

      setMember
      push 'XMLNode'
      getVariable
      push 'prototype'
      getMember
      push 'set'
      function2 (r:3='x', r:2='y') (r:1='this')
        push r:this, 'attributes'
        getMember
        push r:x, r:y
        setMember
      end // of function 

      setMember
      push 1, ',w;zC(', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 3, r:_global, 'ASSetPropFlags'
      callMethod
      pop
      push 1, '1{OB (', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 3, r:_global, 'ASSetPropFlags'
      callMethod
      pop
      push 1, '{]ckD', 'Color'
      getVariable
      push 'prototype'
      getMember
      push 3, r:_global, 'ASSetPropFlags'
      callMethod
      pop
      push 1, 'get', 'XMLNode'
      getVariable
      push 'prototype'
      getMember
      push 3, r:_global, 'ASSetPropFlags'
      callMethod
      pop
      push 1, 'set', 'XMLNode'
      getVariable
      push 'prototype'
      getMember
      push 3, r:_global, 'ASSetPropFlags'
      callMethod
      pop
    end // of function 

    setMember
    push r:0, '[sYE2'
    function2 (r:2=';p(', r:3=' c2q', r:4='+2,US') ()
      push r:' c2q', '@'
      add
      push '2d['
      getVariable
      push '164=p'
      getMember
      push '2d['
      getVariable
      push '164=p', '2d['
      getVariable
      push '164=p'
      getMember
      increment
      setMember
      add
      setRegister r:1
      pop
      push r:'+2,US', r:1, r:' c2q', 3, r:';p(', 'attachMovie'
      callMethod
      pop
      push r:';p(', r:1
      getMember
      return
    end // of function 

    setMember
    push r:0, '7PHI3'
    function2 (r:2=';p(', r:3='+2,US') ()
      push '_empty@', '2d['
      getVariable
      push '164=p'
      getMember
      push '2d['
      getVariable
      push '164=p', '2d['
      getVariable
      push '164=p'
      getMember
      increment
      setMember
      add
      setRegister r:1
      pop
      push r:'+2,US', r:1, 2, r:';p(', 'createEmptyMovieClip'
      callMethod
      pop
      push r:';p(', r:1
      getMember
      return
    end // of function 

    setMember
    push r:0, '7n3xG('
    function2 (r:2=';p(', r:3='+2,US') ()
      push '_dup@', '2d['
      getVariable
      push '164=p'
      getMember
      push '2d['
      getVariable
      push '164=p', '2d['
      getVariable
      push '164=p'
      getMember
      increment
      setMember
      add
      setRegister r:1
      pop
      push r:'+2,US', r:1, 2, r:';p(', 'duplicateMovieClip'
      callMethod
      pop
      push r:';p(', '_parent'
      getMember
      push r:1
      getMember
      return
    end // of function 

    setMember
    push r:0, '9]}]I('
    function2 (r:2=';p(', r:1='7(') ()
      push r:';p(', r:'7('
      getMember
      return
    end // of function 

    setMember
    push r:0, '}B(gp'
    function2 (r:2=';p(', r:1='7(', r:3='}n[S') ()
      push r:';p(', r:'7(', r:'}n[S'
      setMember
    end // of function 

    setMember
    push r:0, '[]dhN'
    function2 () (r:1='_root')
      push r:_root
      return
    end // of function 

    setMember
    push r:0, '=X7BG('
    function2 (r:2='7(') (r:1='_global')
      push r:_global, r:'7('
      getMember
      return
    end // of function 

    setMember
    push r:0, ';(flk'
    function2 (r:2='7(', r:3='40(') (r:1='_global')
      push r:_global, r:'7(', r:'40('
      setMember
    end // of function 

    setMember
    push r:0, 'createTextField'
    function2 (r:2=';p(', r:3='+2,US', r:6='x', r:4='y', r:7='6(', r:5='h') ()
      push 'TextField@', '2d['
      getVariable
      push '164=p'
      getMember
      push '2d['
      getVariable
      push '164=p', '2d['
      getVariable
      push '164=p'
      getMember
      increment
      setMember
      add
      setRegister r:1
      pop
      push r:h, r:'6(', r:y, r:x, r:'+2,US', r:1, 6, r:';p(', 'createTextField'
      callMethod
      pop
      push r:';p(', r:1
      getMember
      return
    end // of function 

    setMember
    push r:0, '6ub3H('
    function2 (r:1='}aa', r:4='3_a', r:5='8P(') ()
      push UNDEF
      setRegister r:2
      pop
      push r:'3_a', 'length'
      getMember
      setRegister r:3
      pop
     label7:
      push 0.0, r:'3_a', 2, r:'}aa', 'indexOf'
      callMethod
      setRegister r:2
      push -1
      equals
      not
      not
      branchIfTrue label8
      push r:2, 0.0, 2, r:'}aa', 'substr'
      callMethod
      push r:'8P('
      add
      push UNDEF, r:2, r:3
      add
      push 2, r:'}aa', 'substr'
      callMethod
      add
      setRegister r:'}aa'
      pop
      branch label7
     label8:
      push r:'}aa'
      return
    end // of function 

    setMember
    push r:0, 'fps'
    function ()
      push '2d['
      getVariable
      push '184)(('
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      divide
      return
    end // of function 

    setMember
    push r:0, ' E}a'
    function2 (r:1='x') ()
      push r:x
      return
    end // of function 

    setMember
    push r:0, 'hitTest'
    function2 (r:2='4m;(', r:1='3m;(') ()
      push r:'3m;(', 1, r:'4m;(', 'hitTest'
      callMethod
      return
    end // of function 

    setMember
    push r:0, '6}jsa'
    function2 () ()
      push '2d['
      getVariable
      push '5wX2A'
      getMember
      not
      not
      branchIfTrue label9
      push '2d['
      getVariable
      push '184)(('
      getMember
      push 1, '2d['
      getVariable
      push '=w)l'
      callMethod
      pop
     label9:
      push '2d['
      getVariable
      push '2z0,f', '2d['
      getVariable
      push '2z0,f'
      getMember
      increment
      setMember
      getTimer
      setRegister r:1
      pop
      push '2d['
      getVariable
      push '{RC (', r:1, '2d['
      getVariable
      push '7}8qX'
      getMember
      subtract
      push 1000
      divide
      setMember
      push '2d['
      getVariable
      push '7}8qX', r:1
      setMember
      push '2d['
      getVariable
      push '{RC ('
      getMember
      push '2d['
      getVariable
      push ')[tXy'
      getMember
      lessThan
      not
      branchIfTrue label10
      push '2d['
      getVariable
      push '7J-V', '2d['
      getVariable
      push '7J-V'
      getMember
      push '2d['
      getVariable
      push '5+R0x'
      getMember
      multiply
      push 1, '2d['
      getVariable
      push '5+R0x'
      getMember
      subtract
      push '2d['
      getVariable
      push '{RC ('
      getMember
      multiply
      push '2d['
      getVariable
      push '184)(('
      getMember
      multiply
      add
      setMember
      branch label11
     label10:
      push '2d['
      getVariable
      push '{RC (', 1, '2d['
      getVariable
      push '184)(('
      getMember
      divide
      setMember
     label11:
    end // of function 

    setMember
    push r:0, '}SCXE'
    function ()
      push 0.0, 'Object'
      new
      return
    end // of function 

    setMember
    push r:0, '9{9}E('
    function2 (r:2='+)') ()
      push 0.0
      setRegister r:3
      pop
      push UNDEF
      setRegister r:1
      pop
      push r:'+)', 'length'
      getMember
      push 1
      subtract
      setRegister r:1
      pop
     label12:
      push r:1, 0.0
      lessThan
      not
      not
      branchIfTrue label13
      push r:3, r:'+)', r:1
      getMember
      add
      setRegister r:3
      pop
      push r:1
      decrement
      setRegister r:1
      pop
      branch label12
     label13:
      push r:3
      random
      setRegister r:3
      pop
      push 0.0
      setRegister r:1
      pop
     label14:
      push r:3, r:'+)', r:1
      getMember
      lessThan
      not
      not
      branchIfTrue label15
      push r:3, r:'+)', r:1
      getMember
      subtract
      setRegister r:3
      pop
      push r:1
      increment
      setRegister r:1
      pop
      branch label14
     label15:
      push r:1
      return
    end // of function 

    setMember
    push r:0, 'random'
    function2 (r:1='x') ()
      push r:x
      random
      return
    end // of function 

    setMember
    push r:0, '*UFaA'
    function ()
      push '', 20
      getProperty
      return
    end // of function 

    setMember
    push r:0, ';HoV7'
    function ()
      push '', 21
      getProperty
      return
    end // of function 

    setMember
    push r:0, 'escape'
    function2 (r:2='x') (r:1='_global')
      push r:x, 1, r:_global, 'escape'
      callMethod
      return
    end // of function 

    setMember
    push r:0, 'unescape'
    function2 (r:2='x') (r:1='_global')
      push r:x, 1, r:_global, 'unescape'
      callMethod
      return
    end // of function 

    setMember
    push r:0, 'parseInt'
    function2 (r:3='x', r:2='8)') (r:1='_global')
      push r:'8)', r:x, 2, r:_global, 'parseInt'
      callMethod
      return
    end // of function 

    setMember
    push r:0, 'toString'
    function2 (r:1='x') ()
      push r:x
      toString
      return
    end // of function 

    setMember
    push r:0, '8ZygI'
    function2 (r:2='x', r:1='8)') ()
      push r:'8)', 1, r:x
      toNumber
      push 'toString'
      callMethod
      return
    end // of function 

    setMember
    push r:0, 'isNaN'
    function2 (r:2='8)') (r:1='_global')
      push r:'8)', 1, r:_global, 'isNaN'
      callMethod
      return
    end // of function 

    setMember
    push r:0, 'registerClass'
    function2 (r:2=';)', r:1='))') ()
      push r:'))', r:';)', 2, 'Object'
      getVariable
      push 'registerClass'
      callMethod
      pop
    end // of function 

    setMember
    push r:0, ')[tXy', 0.5
    setMember
    push r:0, '184)((', 32
    setMember
    push r:0, '7}8qX'
    getTimer
    setMember
    push r:0, '5wX2A', FALSE
    setMember
    push r:0, '5+R0x', 0.95
    setMember
    push r:0, '7J-V', 1
    setMember
    push r:0, '{RC (', 1
    setMember
    push r:0, '164=p', 0.0
    setMember
    push r:0, '2z0,f', 0.0
    setMember
    push 1, NULL, '_global'
    getVariable
    push '2d['
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label16:
    pop
  end // of initMovieClip 28

  defineMovieClip 29 // total frames: 0
  end // of defineMovieClip 29
  
  exportAssets
    29 as '__Packages.miniwave.MC'
  end // of exportAssets
  
  initMovieClip 29
    constants '_global', 'miniwave', 'Object', '+]', 'prototype', '8_aeB(', 'number', 'toString', '3(', '0x', 'substring', '-)', '*)', '{GR0t', ')dn+X', '+,z', ';UzSK', 'Color', 'ra', 'ga', 'ba', 'aa', 'rb', 'gb', 'bb', 'ab', 'setTransform', '}bMO(', '+)', ']5MPw', ' CLe7(', 'y', 'x', 'moveTo', 'beginFill', '6(', 'lineTo', 'curveTo', 'h', 'endFill', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '+]'
    getMember
    not
    not
    branchIfTrue label10
    push 'miniwave'
    getVariable
    push '+]'
    function ()
    end // of function 

    setRegister r:0
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:0, '8_aeB('
    function2 (r:2=';p(', r:5='color', r:10=';UzSK') ()
      push r:color
      typeof
      push 'number'
      equals
      not
      branchIfTrue label2
      push 16, 1, r:color, 'toString'
      callMethod
      setRegister r:3
      pop
      push '3(', '0x', 2, 0.0, 2, r:3, 'substring'
      callMethod
      add
      toNumber
      push '-)', '0x', 4, 2, 2, r:3, 'substring'
      callMethod
      add
      toNumber
      push '*)', '0x', 6, 4, 2, r:3, 'substring'
      callMethod
      add
      toNumber
      push 3
      initObject
      setRegister r:color
      pop
     label2:
      push r:';p(', '{GR0t'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label3
      push r:';p(', '{GR0t', ')dn+X', '+,z', '3(', 0.0, '-)', 0.0, '*)', 0.0, 3
      initObject
      push ';UzSK', 100, 2
      initObject
      push 1
      initObject
      setMember
      push r:';p(', '{GR0t'
      getMember
      push '+,z', r:';p(', 1, 'Color'
      new
      setMember
     label3:
      push r:color, UNDEF
      equals
      not
      not
      branchIfTrue label4
      push r:';p(', '{GR0t'
      getMember
      push ')dn+X', '+,z', r:color, ';UzSK', r:';UzSK', 2
      initObject
      setMember
     label4:
      push r:';p(', '{GR0t'
      getMember
      push ')dn+X'
      getMember
      setRegister r:1
      pop
      push 100, r:1, ';UzSK'
      getMember
      subtract
      push 100
      divide
      setRegister r:4
      pop
      push r:1, '+,z'
      getMember
      push '3('
      getMember
      push r:4
      multiply
      setRegister r:7
      pop
      push r:1, '+,z'
      getMember
      push '-)'
      getMember
      push r:4
      multiply
      setRegister r:9
      pop
      push r:1, '+,z'
      getMember
      push '*)'
      getMember
      push r:4
      multiply
      setRegister r:6
      pop
      push 'ra', r:1, ';UzSK'
      getMember
      push 'ga', r:1, ';UzSK'
      getMember
      push 'ba', r:1, ';UzSK'
      getMember
      push 'aa', 100, 'rb', r:7, 'gb', r:9, 'bb', r:6, 'ab', 0.0, 8
      initObject
      setRegister r:8
      pop
      push r:8, 1, r:';p(', '{GR0t'
      getMember
      push '+,z'
      getMember
      push 'setTransform'
      callMethod
      pop
    end // of function 

    setMember
    push r:0, '}bMO('
    function2 (r:3=';p(', r:2='7)', r:8='1vBn5') ()
      push r:'7)', '3('
      getMember
      push UNDEF
      equals
      not
      not
      branchIfTrue label6
      push r:'7)', '+)'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label5
      push r:'7)', '+)', 0.0
      setMember
     label5:
      push 'rb', r:'7)', '3('
      getMember
      push 'gb', r:'7)', '-)'
      getMember
      push 'bb', r:'7)', '*)'
      getMember
      push 'ab', r:'7)', '+)'
      getMember
      push 4
      initObject
      setRegister r:1
      pop
      branch label7
     label6:
      push r:'7)'
      typeof
      push 'number'
      equals
      not
      branchIfTrue label7
      push 'rb', r:'7)', 16
      shiftRight
      push 255
      bitwiseAnd
      push 'gb', r:'7)', 8
      shiftRight
      push 255
      bitwiseAnd
      push 'bb', r:'7)', 255
      bitwiseAnd
      push 3
      initObject
      setRegister r:1
      pop
     label7:
      push r:'1vBn5'
      not
      branchIfTrue label8
      push r:1, 'ra', -100
      setMember
      push r:1, 'ga', -100
      setMember
      push r:1, 'ba', -100
      setMember
      branch label9
     label8:
      push r:1, 'ra', 100
      setMember
      push r:1, 'ga', 100
      setMember
      push r:1, 'ba', 100
      setMember
      push r:1, 'rb', r:1, 'rb'
      getMember
      push 255
      subtract
      setMember
      push r:1, 'gb', r:1, 'gb'
      getMember
      push 255
      subtract
      setMember
      push r:1, 'bb', r:1, 'bb'
      getMember
      push 255
      subtract
      setMember
     label9:
      push r:';p(', ']5MPw', r:';p(', 1, 'Color'
      new
      setMember
      push r:1, 1, r:';p(', ']5MPw'
      getMember
      push 'setTransform'
      callMethod
      pop
    end // of function 

    setMember
    push r:0, ' CLe7('
    function2 (r:2=';p(', r:1=';gf', r:4='+,z', r:3='-2Z]N') ()
      push r:';gf', 'y'
      getMember
      push r:';gf', 'x'
      getMember
      push r:'-2Z]N'
      add
      push 2, r:';p(', 'moveTo'
      callMethod
      pop
      push r:'+,z', 1, r:';p(', 'beginFill'
      callMethod
      pop
      push r:';gf', 'y'
      getMember
      push r:';gf', 'x'
      getMember
      push r:';gf', '6('
      getMember
      push r:'-2Z]N'
      subtract
      add
      push 2, r:';p(', 'lineTo'
      callMethod
      pop
      push r:';gf', 'y'
      getMember
      push r:'-2Z]N'
      add
      push r:';gf', 'x'
      getMember
      push r:';gf', '6('
      getMember
      add
      push r:';gf', 'y'
      getMember
      push r:';gf', 'x'
      getMember
      push r:';gf', '6('
      getMember
      add
      push 4, r:';p(', 'curveTo'
      callMethod
      pop
      push r:';gf', 'y'
      getMember
      push r:';gf', 'h'
      getMember
      push r:'-2Z]N'
      subtract
      add
      push r:';gf', 'x'
      getMember
      push r:';gf', '6('
      getMember
      add
      push 2, r:';p(', 'lineTo'
      callMethod
      pop
      push r:';gf', 'y'
      getMember
      push r:';gf', 'h'
      getMember
      add
      push r:';gf', 'x'
      getMember
      push r:';gf', '6('
      getMember
      push r:'-2Z]N'
      subtract
      add
      push r:';gf', 'y'
      getMember
      push r:';gf', 'h'
      getMember
      add
      push r:';gf', 'x'
      getMember
      push r:';gf', '6('
      getMember
      add
      push 4, r:';p(', 'curveTo'
      callMethod
      pop
      push r:';gf', 'y'
      getMember
      push r:';gf', 'h'
      getMember
      add
      push r:';gf', 'x'
      getMember
      push r:'-2Z]N'
      add
      push 2, r:';p(', 'lineTo'
      callMethod
      pop
      push r:';gf', 'y'
      getMember
      push r:';gf', 'h'
      getMember
      push r:'-2Z]N'
      subtract
      add
      push r:';gf', 'x'
      getMember
      push r:';gf', 'y'
      getMember
      push r:';gf', 'h'
      getMember
      add
      push r:';gf', 'x'
      getMember
      push 4, r:';p(', 'curveTo'
      callMethod
      pop
      push r:';gf', 'y'
      getMember
      push r:'-2Z]N'
      add
      push r:';gf', 'x'
      getMember
      push 2, r:';p(', 'lineTo'
      callMethod
      pop
      push r:';gf', 'y'
      getMember
      push r:';gf', 'x'
      getMember
      push r:'-2Z]N'
      add
      push r:';gf', 'y'
      getMember
      push r:';gf', 'x'
      getMember
      push 4, r:';p(', 'curveTo'
      callMethod
      pop
      push 0.0, r:';p(', 'endFill'
      callMethod
      pop
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '+]'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label10:
    pop
  end // of initMovieClip 29

  defineMovieClip 38 // total frames: 4
  end // of defineMovieClip 38

  defineMovieClip 43 // total frames: 1
  end // of defineMovieClip 43

  defineMovieClip 59 // total frames: 46
  end // of defineMovieClip 59
  
  exportAssets
    59 as '2dIdQ'
  end // of exportAssets
  
  exportAssets
    59 as '2dIdQ'
  end // of exportAssets

  defineMovieClip 63 // total frames: 1
  end // of defineMovieClip 63
  
  exportAssets
    63 as '1grti'
  end // of exportAssets

  defineMovieClip 70 // total frames: 5
  end // of defineMovieClip 70
  
  exportAssets
    70 as 'fraise parts'
  end // of exportAssets

  defineMovieClip 76 // total frames: 5
  end // of defineMovieClip 76
  
  exportAssets
    76 as 'orange parts'
  end // of exportAssets

  defineMovieClip 82 // total frames: 5
  end // of defineMovieClip 82
  
  exportAssets
    82 as 'banane part'
  end // of exportAssets

  defineMovieClip 88 // total frames: 5
  end // of defineMovieClip 88
  
  exportAssets
    88 as 'clementine parts'
  end // of exportAssets

  defineMovieClip 94 // total frames: 5
  end // of defineMovieClip 94

  defineMovieClip 100 // total frames: 5
  end // of defineMovieClip 100

  defineMovieClip 106 // total frames: 5
  end // of defineMovieClip 106
  
  exportAssets
    106 as 'radis part'
  end // of exportAssets

  defineMovieClip 111 // total frames: 5
  end // of defineMovieClip 111
  
  exportAssets
    111 as 'pradiou parts'
  end // of exportAssets

  defineMovieClip 117 // total frames: 5
  end // of defineMovieClip 117
  
  exportAssets
    117 as 'croucrou parts'
  end // of exportAssets

  defineMovieClip 123 // total frames: 5
  end // of defineMovieClip 123
  
  exportAssets
    123 as 'prune parts'
  end // of exportAssets

  defineMovieClip 129 // total frames: 5
  end // of defineMovieClip 129
  
  exportAssets
    129 as 'coing parts'
  end // of exportAssets

  defineMovieClip 135 // total frames: 5
  end // of defineMovieClip 135
  
  exportAssets
    135 as 'figue parts'
  end // of exportAssets

  defineMovieClip 141 // total frames: 5
  end // of defineMovieClip 141
  
  exportAssets
    141 as 'madarine parts'
  end // of exportAssets

  defineMovieClip 147 // total frames: 5
  end // of defineMovieClip 147
  
  exportAssets
    147 as 'pomme parts'
  end // of exportAssets

  defineMovieClip 153 // total frames: 5
  end // of defineMovieClip 153
  
  exportAssets
    153 as 'datte parts'
  end // of exportAssets

  defineMovieClip 159 // total frames: 5
  end // of defineMovieClip 159
  
  exportAssets
    159 as 'pruneau parts'
  end // of exportAssets

  defineMovieClip 165 // total frames: 5
  end // of defineMovieClip 165
  
  exportAssets
    165 as 'mûre parts'
  end // of exportAssets

  defineMovieClip 171 // total frames: 5
  end // of defineMovieClip 171
  
  exportAssets
    171 as 'citrus parts'
  end // of exportAssets

  defineMovieClip 177 // total frames: 5
  end // of defineMovieClip 177
  
  exportAssets
    177 as 'pulpe parts'
  end // of exportAssets

  defineMovieClip 183 // total frames: 5
  end // of defineMovieClip 183
  
  exportAssets
    183 as 'baies parts'
  end // of exportAssets

  defineMovieClip 189 // total frames: 5
  end // of defineMovieClip 189
  
  exportAssets
    189 as 'raisin parts'
  end // of exportAssets

  defineMovieClip 195 // total frames: 5
  end // of defineMovieClip 195
  
  exportAssets
    195 as 'mangue parts'
  end // of exportAssets

  defineMovieClip 201 // total frames: 5
  end // of defineMovieClip 201
  
  exportAssets
    201 as 'titi parts'
  end // of exportAssets

  defineMovieClip 207 // total frames: 5
  end // of defineMovieClip 207
  
  exportAssets
    207 as 'mirabelle parts'
  end // of exportAssets

  defineMovieClip 213 // total frames: 5
  end // of defineMovieClip 213
  
  exportAssets
    213 as 'quetsch parts'
  end // of exportAssets

  defineMovieClip 219 // total frames: 5
  end // of defineMovieClip 219
  
  exportAssets
    219 as 'ananas parts'
  end // of exportAssets

  defineMovieClip 225 // total frames: 5
  end // of defineMovieClip 225
  
  exportAssets
    225 as 'myrtille parts'
  end // of exportAssets

  defineMovieClip 231 // total frames: 5
  end // of defineMovieClip 231
  
  exportAssets
    231 as 'strawberry parts'
  end // of exportAssets

  defineMovieClip 237 // total frames: 5
  end // of defineMovieClip 237
  
  exportAssets
    237 as 'aubergine parts'
  end // of exportAssets

  defineMovieClip 243 // total frames: 5
  end // of defineMovieClip 243
  
  exportAssets
    243 as 'groseille parts'
  end // of exportAssets

  defineMovieClip 249 // total frames: 5
  end // of defineMovieClip 249
  
  exportAssets
    249 as 'peche parts'
  end // of exportAssets

  defineMovieClip 255 // total frames: 5
  end // of defineMovieClip 255
  
  exportAssets
    255 as 'abricot parts'
  end // of exportAssets

  defineMovieClip 261 // total frames: 5
  end // of defineMovieClip 261
  
  exportAssets
    261 as 'nectarine parts'
  end // of exportAssets

  defineMovieClip 267 // total frames: 5
  end // of defineMovieClip 267
  
  exportAssets
    267 as 'blackamber parts'
  end // of exportAssets

  defineMovieClip 273 // total frames: 5
  end // of defineMovieClip 273
  
  exportAssets
    273 as 'corinthe parts'
  end // of exportAssets

  defineMovieClip 279 // total frames: 5
  end // of defineMovieClip 279
  
  exportAssets
    279 as 'betterave parts'
  end // of exportAssets

  defineMovieClip 285 // total frames: 5
  end // of defineMovieClip 285
  
  exportAssets
    285 as 'scarab parts'
  end // of exportAssets

  defineMovieClip 291 // total frames: 5
  end // of defineMovieClip 291
  
  exportAssets
    291 as 'kumquat parts'
  end // of exportAssets

  defineMovieClip 297 // total frames: 5
  end // of defineMovieClip 297
  
  exportAssets
    297 as 'poivron parts'
  end // of exportAssets

  defineMovieClip 301 // total frames: 5
  end // of defineMovieClip 301
  
  exportAssets
    301 as 'kiwi parts'
  end // of exportAssets

  defineMovieClip 307 // total frames: 5
  end // of defineMovieClip 307
  
  exportAssets
    307 as 'reineClaude parts'
  end // of exportAssets

  defineMovieClip 313 // total frames: 5
  end // of defineMovieClip 313
  
  exportAssets
    313 as 'jelly parts'
  end // of exportAssets

  defineMovieClip 319 // total frames: 5
  end // of defineMovieClip 319
  
  exportAssets
    319 as 'lemon parts'
  end // of exportAssets

  defineMovieClip 325 // total frames: 5
  end // of defineMovieClip 325

  defineMovieClip 331 // total frames: 5
  end // of defineMovieClip 331
  
  exportAssets
    331 as 'courge parts'
  end // of exportAssets

  defineMovieClip 337 // total frames: 5
  end // of defineMovieClip 337
  
  exportAssets
    337 as 'bulbe parts'
  end // of exportAssets

  defineMovieClip 343 // total frames: 5
  end // of defineMovieClip 343
  
  exportAssets
    343 as 'cassis parts'
  end // of exportAssets

  defineMovieClip 349 // total frames: 5
  end // of defineMovieClip 349
  
  exportAssets
    349 as 'poisChiche parts'
  end // of exportAssets

  defineMovieClip 355 // total frames: 5
  end // of defineMovieClip 355
  
  exportAssets
    355 as 'brugnon parts'
  end // of exportAssets

  defineMovieClip 359 // total frames: 5
  end // of defineMovieClip 359
  
  exportAssets
    359 as 'pommette parts'
  end // of exportAssets

  defineMovieClip 367 // total frames: 8
  end // of defineMovieClip 367
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets
  
  exportAssets
    367 as 'letter parts'
  end // of exportAssets

  defineMovieClip 376 // total frames: 8
  end // of defineMovieClip 376
  
  exportAssets
    376 as 'saucer parts'
  end // of exportAssets

  defineMovieClip 377 // total frames: 100
  end // of defineMovieClip 377
  
  exportAssets
    377 as '*3um4('
  end // of exportAssets

  defineMovieClip 380 // total frames: 1
  end // of defineMovieClip 380
  
  exportAssets
    380 as '=_M9E('
  end // of exportAssets

  defineMovieClip 383 // total frames: 1
  end // of defineMovieClip 383
  
  exportAssets
    383 as '{-l-u'
  end // of exportAssets

  defineMovieClip 386 // total frames: 1
  end // of defineMovieClip 386
  
  exportAssets
    386 as '0]3{l'
  end // of exportAssets

  defineMovieClip 389 // total frames: 1
  end // of defineMovieClip 389
  
  exportAssets
    389 as '6W7Ij'
  end // of exportAssets

  defineMovieClip 392 // total frames: 1
  end // of defineMovieClip 392
  
  exportAssets
    392 as '}1iD9('
  end // of exportAssets

  defineMovieClip 397 // total frames: 2
  end // of defineMovieClip 397
  
  exportAssets
    397 as '1iHRm'
  end // of exportAssets

  defineMovieClip 400 // total frames: 1
  end // of defineMovieClip 400
  
  exportAssets
    400 as '7 8S4'
  end // of exportAssets

  defineMovieClip 405 // total frames: 2
  end // of defineMovieClip 405
  
  exportAssets
    405 as '[k0Vr'
  end // of exportAssets

  defineMovieClip 408 // total frames: 1
  end // of defineMovieClip 408
  
  exportAssets
    408 as '[QoYb'
  end // of exportAssets

  defineMovieClip 411 // total frames: 1
  end // of defineMovieClip 411
  
  exportAssets
    411 as '{{E)6'
  end // of exportAssets

  defineMovieClip 414 // total frames: 1
  end // of defineMovieClip 414
  
  exportAssets
    414 as '=xWuX'
  end // of exportAssets

  defineMovieClip 417 // total frames: 1
  end // of defineMovieClip 417
  
  exportAssets
    417 as ']}FNA'
  end // of exportAssets

  defineMovieClip 422 // total frames: 2
  end // of defineMovieClip 422
  
  exportAssets
    422 as '5X1Mm'
  end // of exportAssets

  defineMovieClip 425 // total frames: 1
  end // of defineMovieClip 425
  
  exportAssets
    425 as '{csi5'
  end // of exportAssets

  defineMovieClip 428 // total frames: 1
  end // of defineMovieClip 428
  
  exportAssets
    428 as '=(*FX'
  end // of exportAssets

  defineMovieClip 431 // total frames: 1
  end // of defineMovieClip 431
  
  exportAssets
    431 as '*k,6]'
  end // of exportAssets

  defineMovieClip 435 // total frames: 8
  end // of defineMovieClip 435

  defineMovieClip 436 // total frames: 2
  end // of defineMovieClip 436
  
  exportAssets
    436 as '9I{Nz'
  end // of exportAssets

  defineMovieClip 439 // total frames: 1
  end // of defineMovieClip 439
  
  exportAssets
    439 as '7,s-6'
  end // of exportAssets

  defineMovieClip 442 // total frames: 1
  end // of defineMovieClip 442
  
  exportAssets
    442 as '2mQbY'
  end // of exportAssets

  defineMovieClip 445 // total frames: 1
  end // of defineMovieClip 445
  
  exportAssets
    445 as '-5L7e'
  end // of exportAssets

  defineMovieClip 448 // total frames: 1
  end // of defineMovieClip 448
  
  exportAssets
    448 as '+v)*=('
  end // of exportAssets

  defineMovieClip 455 // total frames: 1
  end // of defineMovieClip 455
  
  exportAssets
    455 as 'p1'
  end // of exportAssets

  defineMovieClip 458 // total frames: 1
  end // of defineMovieClip 458
  
  exportAssets
    458 as '7(('
  end // of exportAssets

  defineMovieClip 459 // total frames: 2
  end // of defineMovieClip 459
  
  exportAssets
    459 as '+gV,]'
  end // of exportAssets

  defineMovieClip 462 // total frames: 1
  end // of defineMovieClip 462
  
  exportAssets
    462 as '3yV78'
  end // of exportAssets

  defineMovieClip 469 // total frames: 12
  end // of defineMovieClip 469
  
  exportAssets
    469 as ')sW]P'
  end // of exportAssets

  defineMovieClip 472 // total frames: 1
  end // of defineMovieClip 472
  
  exportAssets
    472 as '8Xpv_'
  end // of exportAssets

  defineMovieClip 476 // total frames: 2
  end // of defineMovieClip 476
  
  exportAssets
    476 as '(U;{+'
  end // of exportAssets

  defineMovieClip 479 // total frames: 1
  end // of defineMovieClip 479
  
  exportAssets
    479 as ' rXsS'
  end // of exportAssets

  defineMovieClip 484 // total frames: 4
  end // of defineMovieClip 484
  
  exportAssets
    484 as 'tequila parts'
  end // of exportAssets

  defineMovieClip 489 // total frames: 4
  end // of defineMovieClip 489
  
  exportAssets
    489 as 'porto parts'
  end // of exportAssets

  defineMovieClip 494 // total frames: 4
  end // of defineMovieClip 494
  
  exportAssets
    494 as 'pastaga parts'
  end // of exportAssets

  defineMovieClip 499 // total frames: 4
  end // of defineMovieClip 499
  
  exportAssets
    499 as 'manzana parts'
  end // of exportAssets

  defineMovieClip 504 // total frames: 4
  end // of defineMovieClip 504
  
  exportAssets
    504 as 'curaso parts'
  end // of exportAssets

  defineMovieClip 511 // total frames: 6
  end // of defineMovieClip 511
  
  exportAssets
    511 as 'cherry parts'
  end // of exportAssets

  defineMovieClip 512 // total frames: 6
  end // of defineMovieClip 512
  
  exportAssets
    512 as '5})E4('
  end // of exportAssets

  defineMovieClip 515 // total frames: 1
  end // of defineMovieClip 515
  
  exportAssets
    515 as '4hD(B'
  end // of exportAssets

  defineMovieClip 518 // total frames: 1
  end // of defineMovieClip 518
  
  exportAssets
    518 as '1gDW-('
  end // of exportAssets

  defineMovieClip 523 // total frames: 2
  end // of defineMovieClip 523
  
  exportAssets
    523 as '0XKmH'
  end // of exportAssets

  defineMovieClip 527 // total frames: 2
  end // of defineMovieClip 527
  
  exportAssets
    527 as ',m7Bi'
  end // of exportAssets

  defineMovieClip 530 // total frames: 1
  end // of defineMovieClip 530
  
  exportAssets
    530 as '4HQZF('
  end // of exportAssets

  defineMovieClip 535 // total frames: 2
  end // of defineMovieClip 535
  
  exportAssets
    535 as '=x,d-'
  end // of exportAssets

  defineMovieClip 538 // total frames: 1
  end // of defineMovieClip 538
  
  exportAssets
    538 as '1S,PG'
  end // of exportAssets

  defineMovieClip 541 // total frames: 1
  end // of defineMovieClip 541
  
  exportAssets
    541 as '3,J s'
  end // of exportAssets

  defineMovieClip 544 // total frames: 1
  end // of defineMovieClip 544
  
  exportAssets
    544 as '6U3t5'
  end // of exportAssets

  defineMovieClip 547 // total frames: 1
  end // of defineMovieClip 547
  
  exportAssets
    547 as '30k{='
  end // of exportAssets

  defineMovieClip 550 // total frames: 1
  end // of defineMovieClip 550
  
  exportAssets
    550 as ' VkMU'
  end // of exportAssets

  defineMovieClip 553 // total frames: 2
  end // of defineMovieClip 553
  
  exportAssets
    553 as '4Cw[6'
  end // of exportAssets

  defineMovieClip 556 // total frames: 1
  end // of defineMovieClip 556
  
  exportAssets
    556 as '[-mop'
  end // of exportAssets

  defineMovieClip 559 // total frames: 1
  end // of defineMovieClip 559
  
  exportAssets
    559 as '0y*sL'
  end // of exportAssets

  defineMovieClip 562 // total frames: 1
  end // of defineMovieClip 562
  
  exportAssets
    562 as '*6K[4('
  end // of exportAssets

  defineMovieClip 565 // total frames: 1
  end // of defineMovieClip 565
  
  exportAssets
    565 as '7pZN2'
  end // of exportAssets

  defineMovieClip 568 // total frames: 1
  end // of defineMovieClip 568
  
  exportAssets
    568 as '0vE7A'
  end // of exportAssets

  defineMovieClip 571 // total frames: 1
  end // of defineMovieClip 571
  
  exportAssets
    571 as '0hU7]'
  end // of exportAssets

  defineMovieClip 574 // total frames: 1
  end // of defineMovieClip 574
  
  exportAssets
    574 as ']e}dI'
  end // of exportAssets

  defineMovieClip 580 // total frames: 3
  end // of defineMovieClip 580
  
  exportAssets
    580 as '03Yl7'
  end // of exportAssets

  defineMovieClip 581 // total frames: 1
  end // of defineMovieClip 581
  
  exportAssets
    581 as '[ZNu9'
  end // of exportAssets

  defineMovieClip 584 // total frames: 1
  end // of defineMovieClip 584
  
  exportAssets
    584 as ';SXX8'
  end // of exportAssets

  defineMovieClip 591 // total frames: 3
  end // of defineMovieClip 591
  
  exportAssets
    591 as '1u3{l'
  end // of exportAssets

  defineMovieClip 594 // total frames: 1
  end // of defineMovieClip 594
  
  exportAssets
    594 as '95X5]'
  end // of exportAssets

  defineMovieClip 597 // total frames: 1
  end // of defineMovieClip 597
  
  exportAssets
    597 as '=}{Dn'
  end // of exportAssets

  defineMovieClip 600 // total frames: 1
  end // of defineMovieClip 600
  
  exportAssets
    600 as '94KvY'
  end // of exportAssets

  defineMovieClip 603 // total frames: 1
  end // of defineMovieClip 603
  
  exportAssets
    603 as '}iTLr'
  end // of exportAssets

  defineMovieClip 606 // total frames: 1
  end // of defineMovieClip 606
  
  exportAssets
    606 as '32A;x'
  end // of exportAssets

  defineMovieClip 611 // total frames: 2
  end // of defineMovieClip 611
  
  exportAssets
    611 as ']J_Ri'
  end // of exportAssets

  defineMovieClip 614 // total frames: 1
  end // of defineMovieClip 614
  
  exportAssets
    614 as '6b;Pt'
  end // of exportAssets
  
  exportAssets
    63 as '1grti'
  end // of exportAssets

  defineMovieClip 616 // total frames: 28
  end // of defineMovieClip 616
  
  exportAssets
    616 as '7nA4u'
  end // of exportAssets

  defineMovieClip 617 // total frames: 0
  end // of defineMovieClip 617
  
  exportAssets
    617 as '__Packages.miniwave.panel.Score'
  end // of exportAssets
  
  initMovieClip 617
    constants '_global', 'miniwave', 'Object', ')1]5F', ')3{lB', '=w)l', 'MovieClip', 'prototype', ' a= 5', '3ao2D', 'field', 'text', 'textWidth', '8N(', '_x', '0(}e', '[w;(', '(l;(', '6}jsa', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ')1]5F'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ')1]5F', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ')1]5F'
    getMember
    push ')3{lB'
    getMember
    not
    not
    branchIfTrue label3
    push 'miniwave'
    getVariable
    push ')1]5F'
    getMember
    push ')3{lB'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push ')1]5F'
    getMember
    push ')3{lB'
    getMember
    push 'MovieClip'
    getVariable
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function ()
    end // of function 

    setMember
    push r:1, ' a= 5'
    function2 (r:3='3ao2D') (r:1='this')
      push r:this, '3ao2D', r:'3ao2D'
      setMember
      push r:this, 'field'
      getMember
      push 'text', r:'3ao2D'
      setMember
      push r:this, 'field'
      getMember
      push 'textWidth'
      getMember
      setRegister r:2
      pop
      push r:this, '8N('
      getMember
      push '_x', r:2, 6
      add
      setMember
      push r:this, '_x', r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '(l;('
      getMember
      push r:2
      subtract
      push 2
      divide
      setMember
    end // of function 

    setMember
    push r:1, '6}jsa'
    function ()
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push ')1]5F'
    getMember
    push ')3{lB'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label3:
    pop
  end // of initMovieClip 617

  defineMovieClip 618 // total frames: 0
  end // of defineMovieClip 618
  
  exportAssets
    618 as '__Packages.miniwave.Slot'
  end // of exportAssets
  
  initMovieClip 618
    constants '_global', 'miniwave', 'Object', '4t1M', 'MovieClip', 'prototype', '=w)l', '6}jsa', 'onPause', '1T3j', 'removeMovieClip', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '4t1M'
    getMember
    not
    not
    branchIfTrue label2
    push 'miniwave'
    getVariable
    push '4t1M'
    function2 () (r:1='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '4t1M'
    getMember
    push 'MovieClip'
    getVariable
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function ()
    end // of function 

    setMember
    push r:1, '6}jsa'
    function ()
    end // of function 

    setMember
    push r:1, 'onPause'
    function ()
    end // of function 

    setMember
    push r:1, '1T3j'
    function2 () (r:1='this')
      push 0.0, r:this, 'removeMovieClip'
      callMethod
      pop
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '4t1M'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label2:
    pop
  end // of initMovieClip 618

  defineMovieClip 619 // total frames: 0
  end // of defineMovieClip 619
  
  exportAssets
    619 as '__Packages.miniwave.Game'
  end // of exportAssets
  
  initMovieClip 619
    constants '_global', 'miniwave', 'Object', '5q)A', '4t1M', 'prototype', '=w)l', '(tUA7', '1xgbI(', 'Array', '}=*uB(', '7W4BT', '( ZF6(', '*=bte', '5djvn', ')JqcF', '{[8bP', 'level', '3ao2D', ') vRP', '-VU1(', '*t1{3', '-9NJ+(', '2yJ49(', '6U1)*', '5BC51', ' F851', '95}f', '[w;(', '9tSne', '2B{Tq', '7;WvB', '}F_AB', '7G_AB', '6G_AB', '5G_AB', ' }=UC(', '6E_5i', '7 6BP', 'push', '}RDM)(', '+4FUS', '2dIdQ', 'attachMovie', ' -_JJ(', 'onPress', '_parent', 'onRelease', ',qrhG(', '8x()n', 'shift', 'x', '(l;(', 'y', '9l;(', '5F5}m', ' c2q', '2UM2[', '+3ul', ']Vl8j', '+(-k0', '}yG6+(', ' a= 5', ')zbG)', '2vgb4', '4N}8_', 'min', 'max', '={eF-', ';7Sp4', 'fallSpeed', ')MvQY', 'moveSpeed', ',Ghq=(', 'sd', 'ss', 'list', 'length', 'Math', 'atan2', 'cos', 'sin', ';IwU', 'recal failure layer no', '\n', '0Q_HU', 't', '0HIS2(', '0Xfb2', ' icet', '9nAeE', ' u5MH', '6}jsa', '(,J R', '2d[', '7J-V', '0lWFK', 'pow', '0Hue8(', 'concat', '+_Y=3', ')VjW8(', '9m3sB(', ' DVkC', '_visible', '5pf2X', '=ngD', '9,T}W', '[bRwJ', 'setVolume', ']CS0r', '45(', '*zpZx', '+W0i0', '0(}e', ']C)N+', ',p*Ii', '+2,US', '[_6rB(', ' HkK}', '1Sui2', '-NysU', '2CiDT', '-oUeu', '5uf6O', ';IDPE', '+NGeY', '5ly+0', '(((}f', ',0PWI(', '{ea81', '+V;6J(', '*p,2T', 'splice', 'pop', '=ZiO9', ']si4W', 'abs', '+]', '8_aeB(', ' Z8Ys', '(3cc', '8p7(', ',CeLG', '36_zB', '-B-AZ', '=mb_F', '3XLKj', '{Pp6K(', ']dc', '+N5T', '3fEyH', ']nBjo', ')Ml', '+', ';Eu}5', '=Y(', '$credit', ',O=T+(', 'endGame', '60n=3', 'floor', '5G{', '_currentframe', 'gotoAndStop', '4G{', '_y', 'round', '1h6g9(', ']=lsF', ')JZ[;', '*CcbI', '4N)zC', '*0GPC', 'saveSlot', 'Menu', '5h=iR', 'Key', 'isDown', ';[1Tc', 'so', 'data', ',)8 5', '[2qsN', ']NLZd', '{ihV;', '+;hw4', ']VEg;(', '2h,(', '[OaT', '[Eptz', '2M-sY', '2kTt', 'removeMovieClip', '25(E[', '.', 'miniWave2/level/', 'loadData', '7XfTN', '$stats', '$play', '1T3j', 'stop', '{9)*C(', '[CzZ1', ']R4[6', '=QEBH', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '5q)A'
    getMember
    not
    not
    branchIfTrue label74
    push 'miniwave'
    getVariable
    push '5q)A'
    function2 () (r:1='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '5q)A'
    getMember
    push 'miniwave'
    getVariable
    push '4t1M'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '=w)l'
      callMethod
      pop
      push 0.0, r:this, '(tUA7'
      callMethod
      pop
      push r:this, '1xgbI(', 0.0, 'Array'
      new
      setMember
      push r:this, '}=*uB(', 0.0, 'Array'
      new
      setMember
      push r:this, '7W4BT', 0.0, 'Array'
      new
      setMember
      push r:this, '( ZF6(', 0.0, 'Array'
      new
      setMember
      push r:this, '*=bte', 0.0, 'Array'
      new
      setMember
      push r:this, '5djvn', 0.0, 'Array'
      new
      setMember
      push r:this, ')JqcF', 0.0, 'Array'
      new
      setMember
      push r:this, '{[8bP', FALSE
      setMember
      push r:this, 'level'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label2
      push r:this, 'level', 0.0
      setMember
     label2:
      push r:this, '3ao2D', 0.0
      setMember
      push r:this, ') vRP', 0.0
      setMember
      push r:this, '-VU1(', 0.0
      setMember
      push r:this, '*t1{3', 0.0
      setMember
      push 0.0, r:this, '-9NJ+('
      callMethod
      pop
      push 0.0, r:this, '2yJ49('
      callMethod
      pop
      push 0.0, r:this, '6U1)*'
      callMethod
      pop
      push r:this, '5BC51', 100
      setMember
      push r:this, ' F851', 0.0
      setMember
      push 0.0, r:this, '95}f'
      callMethod
      pop
      push 0.0, r:this, '[w;('
      getMember
      push '9tSne'
      callMethod
      pop
      push 0.0, r:this, '2B{Tq'
      callMethod
      pop
      push r:this, '7;WvB', '}F_AB', '7G_AB', '6G_AB', '5G_AB', 4
      initArray
      setMember
      push 0.0, r:this, ' }=UC('
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '(tUA7'
    function2 () (r:1='this')
      push r:this, '6E_5i', 0.0, 'Array'
      new
      setMember
      push 0.0
      setRegister r:2
      pop
     label3:
      push r:2, r:this, '7 6BP'
      getMember
      lessThan
      not
      branchIfTrue label4
      push r:2, 1, r:this, '6E_5i'
      getMember
      push 'push'
      callMethod
      pop
      push r:2
      increment
      setRegister r:2
      pop
      branch label3
     label4:
    end // of function 

    setMember
    push r:1, '6U1)*'
    function2 () (r:1='this')
      push r:this, '}RDM)('
      getMember
      push '+4FUS', '2dIdQ', 3, r:this, 'attachMovie'
      callMethod
      pop
      push r:this, ' -_JJ(', FALSE
      setMember
      push r:this, '+4FUS'
      getMember
      push 'onPress'
      function2 () (r:1='this')
        push r:this, '_parent'
        getMember
        push ' -_JJ(', TRUE
        setMember
      end // of function 

      setMember
      push r:this, '+4FUS'
      getMember
      push 'onRelease'
      function2 () (r:1='this')
        push r:this, '_parent'
        getMember
        push ' -_JJ(', FALSE
        setMember
      end // of function 

      setMember
    end // of function 

    setMember
    push r:1, ',qrhG('
    function2 () (r:1='this')
      push 0.0, r:this, '8x()n'
      getMember
      push 'shift'
      callMethod
      setRegister r:4
      pop
      push 'x', r:this, '[w;('
      getMember
      push '(l;('
      getMember
      push 2
      divide
      push 'y', r:this, '[w;('
      getMember
      push '9l;('
      getMember
      push 14
      add
      push 2
      initObject
      setRegister r:3
      pop
      push r:3, r:this, '[w;('
      getMember
      push '5F5}m'
      getMember
      push r:4
      getMember
      push ' c2q'
      getMember
      push 2, r:this, '2UM2['
      callMethod
      setRegister r:2
      pop
      push r:this, '+3ul', r:2
      setMember
    end // of function 

    setMember
    push r:1, '-9NJ+('
    function2 () (r:1='this')
      push r:this, ']Vl8j', '+(-k0', 1, r:this, '}yG6+('
      callMethod
      setMember
      push r:this, '3ao2D'
      getMember
      push 1, r:this, ']Vl8j'
      getMember
      push ' a= 5'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ')zbG)'
    function2 () (r:1='this', r:2='_root')
      push r:this, '2vgb4', 1
      setMember
      push r:this, '4N}8_', 'min', 0.0, 'max', r:this, '[w;('
      getMember
      push '(l;('
      getMember
      push 2
      initObject
      setMember
      push r:this, '={eF-', r:this, ';7Sp4'
      getMember
      push r:this, 'level'
      getMember
      getMember
      setMember
      push r:this, 'fallSpeed', r:this, '={eF-'
      getMember
      push 'fallSpeed'
      getMember
      setMember
      push r:this, ')MvQY', r:this, '={eF-'
      getMember
      push 'moveSpeed'
      getMember
      setMember
      push r:this, ',Ghq=(', 0.0
      setMember
      push r:this, '={eF-'
      getMember
      push 'sd'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label5
      push r:this, '={eF-'
      getMember
      push 'sd', 6
      setMember
     label5:
      push r:this, '={eF-'
      getMember
      push 'ss'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label6
      push r:this, '={eF-'
      getMember
      push 'ss', 6
      setMember
     label6:
      push 0.0
      setRegister r:6
      pop
     label7:
      push r:6, r:this, '={eF-'
      getMember
      push 'list'
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label18
      push r:this, '={eF-'
      getMember
      push 'list'
      getMember
      push r:6
      getMember
      setRegister r:3
      pop
      push r:3, 'length'
      getMember
      push 1
      greaterThan
      not
      branchIfTrue label17
      push r:3, 0.0
      getMember
      push 'x'
      getMember
      push r:3, 1
      getMember
      push 'x'
      getMember
      subtract
      setRegister r:22
      pop
      push r:3, 0.0
      getMember
      push 'y'
      getMember
      push r:3, 1
      getMember
      push 'y'
      getMember
      subtract
      setRegister r:21
      pop
      push r:22, r:21, 2, 'Math'
      getVariable
      push 'atan2'
      callMethod
      setRegister r:12
      pop
      push r:12, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push 10
      multiply
      setRegister r:14
      pop
      push r:12, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push 10
      multiply
      setRegister r:13
      pop
      push 'x', r:3, 0.0
      getMember
      push 'x'
      getMember
      push 'y', r:3, 0.0
      getMember
      push 'y'
      getMember
      push 2
      initObject
      setRegister r:4
      pop
      push 0.0
      setRegister r:16
      pop
     label8:
      push r:4, 'x', r:4, 'x'
      getMember
      push r:14
      add
      setMember
      push r:4, 'y', r:4, 'y'
      getMember
      push r:13
      add
      setMember
      push r:16, r:16
      increment
      setRegister r:16
      pop
      push 100
      greaterThan
      not
      branchIfTrue label9
      push r:_root, ';IwU', r:_root, ';IwU'
      getMember
      push 'recal failure layer no', r:6
      add
      push '\n'
      add
      add
      setMember
      branch label10
     label9:
      push 20, r:4, 'y'
      getMember
      push r:4, 'x'
      getMember
      push 3, r:this, '0Q_HU'
      callMethod
      not
      branchIfTrue label8
     label10:
      push 0.0
      setRegister r:11
      pop
      push 0.0
      setRegister r:5
      pop
     label11:
      push r:5, r:3, 'length'
      getMember
      lessThan
      not
      branchIfTrue label13
      push r:3, r:5
      getMember
      push 't'
      getMember
      push UNDEF
      equals
      not
      not
      branchIfTrue label12
      push r:11
      increment
      setRegister r:11
      pop
     label12:
      push r:5
      increment
      setRegister r:5
      pop
      branch label11
     label13:
      push 0.0
      setRegister r:10
      pop
      push 0.0
      setRegister r:5
      pop
     label14:
      push r:5, r:3, 'length'
      getMember
      lessThan
      not
      branchIfTrue label17
      push r:3, r:5
      getMember
      setRegister r:7
      pop
      push r:7, 't'
      getMember
      push UNDEF
      equals
      not
      not
      branchIfTrue label15
      push 'x', r:4, 'x'
      getMember
      push 'y', r:4, 'y'
      getMember
      push '0HIS2(', r:11, r:5, r:10
      subtract
      push 1
      add
      subtract
      push r:this, '={eF-'
      getMember
      push 'sd'
      getMember
      multiply
      push '0Xfb2', r:5, ' icet', r:6, 5
      initObject
      setRegister r:9
      pop
      push r:9, r:7, 't'
      getMember
      push 2, r:this, '9nAeE'
      callMethod
      setRegister r:8
      pop
      push 0.0, r:8, ' u5MH'
      callMethod
      pop
      push r:this, ',Ghq=(', r:this, ',Ghq=('
      getMember
      increment
      setMember
      branch label16
     label15:
      push r:10
      increment
      setRegister r:10
      pop
     label16:
      push r:5
      increment
      setRegister r:5
      pop
      branch label14
     label17:
      push r:6
      increment
      setRegister r:6
      pop
      branch label7
     label18:
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push r:this, '(,J R', '2d['
      getVariable
      push '7J-V'
      getMember
      push r:this, '0lWFK'
      getMember
      push 2, 'Math'
      getVariable
      push 'pow'
      callMethod
      setMember
      push r:this, '0Hue8(', 0.0, 'Array'
      new
      setMember
      push r:this, '0Hue8(', r:this, '1xgbI('
      getMember
      push 1, r:this, '0Hue8('
      getMember
      push 'concat'
      callMethod
      setMember
      push r:this, '0Hue8(', r:this, ')JqcF'
      getMember
      push 1, r:this, '0Hue8('
      getMember
      push 'concat'
      callMethod
      setMember
      push r:this, '0Hue8(', r:this, '5djvn'
      getMember
      push 1, r:this, '0Hue8('
      getMember
      push 'concat'
      callMethod
      setMember
      push 0.0, r:this, '95}f'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '+_Y=3'
    function2 () (r:1='this')
      push 0.0
      setRegister r:2
      pop
     label19:
      push r:2, r:this, '0Hue8('
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label20
      push 0.0, r:this, '0Hue8('
      getMember
      push r:2
      getMember
      push '6}jsa'
      callMethod
      pop
      push r:2
      increment
      setRegister r:2
      pop
      branch label19
     label20:
    end // of function 

    setMember
    push r:1, ')VjW8('
    function2 () (r:1='this')
      push 0.0
      setRegister r:3
      pop
     label21:
      push r:3, r:this, '9m3sB('
      getMember
      lessThan
      not
      branchIfTrue label25
      push r:this, '}=*uB('
      getMember
      push r:this, ') vRP'
      getMember
      getMember
      setRegister r:2
      pop
      push 0.0, r:2, ' DVkC'
      callMethod
      pop
      push r:2, '_visible'
      getMember
      not
      branchIfTrue label22
      push r:this, ') vRP', r:this, ') vRP'
      getMember
      increment
      setMember
     label22:
      push r:this, ') vRP'
      getMember
      push r:this, '}=*uB('
      getMember
      push 'length'
      getMember
      lessThan
      not
      not
      branchIfTrue label24
      push r:this, ') vRP', 0.0
      setMember
      push 0.0, r:this, '5pf2X'
      callMethod
      pop
      push r:this, '*t1{3', r:this, '*t1{3'
      getMember
      increment
      setMember
      push r:this, '*t1{3'
      getMember
      push r:this, '=ngD'
      getMember
      greaterThan
      dup
      not
      branchIfTrue label23
      pop
      push r:this, '}=*uB('
      getMember
      push 'length'
      getMember
      push 0.0
      greaterThan
     label23:
      not
      branchIfTrue label24
      push r:this, '*t1{3', 0.0
      setMember
      push 32, r:this, '7;WvB'
      getMember
      push r:this, '-VU1('
      getMember
      getMember
      push 2, r:this, '[w;('
      getMember
      push '9,T}W'
      getMember
      push '[bRwJ'
      callMethod
      pop
      push 25, 32, 2, r:this, '[w;('
      getMember
      push '9,T}W'
      getMember
      push 'setVolume'
      callMethod
      pop
      push r:this, '-VU1(', r:this, '-VU1('
      getMember
      push 1
      add
      push r:this, '7;WvB'
      getMember
      push 'length'
      getMember
      modulo
      setMember
     label24:
      push r:3
      increment
      setRegister r:3
      pop
      branch label21
     label25:
    end // of function 

    setMember
    push r:1, '5pf2X'
    function2 () (r:1='this')
      push r:this, ']CS0r'
      getMember
      not
      branchIfTrue label27
      push r:this, ']CS0r', FALSE
      setMember
      push r:this, '2vgb4', r:this, '2vgb4'
      getMember
      push -1
      multiply
      setMember
      push 0.0
      setRegister r:2
      pop
     label26:
      push r:2, r:this, '}=*uB('
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label27
      push r:this, '}=*uB('
      getMember
      push r:2
      getMember
      setRegister r:3
      pop
      push r:3, '45(', r:3, '45('
      getMember
      push r:this, 'fallSpeed'
      getMember
      add
      setMember
      push r:2
      increment
      setRegister r:2
      pop
      branch label26
     label27:
    end // of function 

    setMember
    push r:1, '*zpZx'
    function2 (r:6=' c2q', r:4=',to,G(', r:5='8_(') (r:1='this')
      push r:',to,G(', UNDEF
      equals
      not
      branchIfTrue label28
      push 0.0, 'Object'
      new
      setRegister r:',to,G('
      pop
     label28:
      push r:'8_(', UNDEF
      equals
      not
      branchIfTrue label29
      push r:this, '+W0i0'
      getMember
      setRegister r:'8_('
      pop
     label29:
      push r:',to,G(', '0(}e', r:this
      setMember
      push 0.0, r:this, ']C)N+'
      callMethod
      setRegister r:2
      pop
      push r:',to,G(', r:'8_(', r:2
      add
      push ',p*Ii', r:2
      add
      push r:' c2q', 4, r:this, 'attachMovie'
      callMethod
      pop
      push r:this, ',p*Ii', r:2
      add
      getMember
      setRegister r:3
      pop
      push r:3, '+2,US', r:2
      setMember
      push r:3
      return
    end // of function 

    setMember
    push r:1, '2UM2['
    function2 (r:3=' c2q', r:4=',to,G(', r:5='8_(') (r:1='this')
      push r:'8_(', r:',to,G(', r:' c2q', 3, r:this, '*zpZx'
      callMethod
      setRegister r:2
      pop
      push r:2, 1, r:this, '1xgbI('
      getMember
      push 'push'
      callMethod
      pop
      push r:2
      return
    end // of function 

    setMember
    push r:1, '9nAeE'
    function2 (r:4='type', r:3=',to,G(') (r:1='this')
      push r:',to,G(', r:this, '[w;('
      getMember
      push '[_6rB('
      getMember
      push r:type
      getMember
      push ' c2q'
      getMember
      push 2, r:this, '2UM2['
      callMethod
      setRegister r:2
      pop
      push r:2, 1, r:this, '}=*uB('
      getMember
      push 'push'
      callMethod
      pop
      push r:2
      return
    end // of function 

    setMember
    push r:1, ' HkK}'
    function2 (r:3=',to,G(') (r:1='this')
      push r:',to,G(', UNDEF
      equals
      not
      branchIfTrue label30
      push 0.0, 'Object'
      new
      setRegister r:',to,G('
      pop
     label30:
      push r:',to,G(', '1Sui2', '-NysU'
      setMember
      push r:',to,G(', '2CiDT', 2, r:this, '2UM2['
      callMethod
      setRegister r:2
      pop
      push r:2, 1, r:this, '7W4BT'
      getMember
      push 'push'
      callMethod
      pop
      push r:2
      return
    end // of function 

    setMember
    push r:1, '-oUeu'
    function2 (r:3=',to,G(') (r:1='this')
      push r:',to,G(', UNDEF
      equals
      not
      branchIfTrue label31
      push 0.0, 'Object'
      new
      setRegister r:',to,G('
      pop
     label31:
      push r:',to,G(', '1Sui2', '5uf6O'
      setMember
      push r:',to,G(', '2CiDT', 2, r:this, '2UM2['
      callMethod
      setRegister r:2
      pop
      push r:2, 1, r:this, '( ZF6('
      getMember
      push 'push'
      callMethod
      pop
      push r:2
      return
    end // of function 

    setMember
    push r:1, ';IDPE'
    function2 (r:4='name', r:6=',to,G(', r:5='[REUA') (r:1='this')
      push UNDEF
      setRegister r:2
      pop
      push r:'[REUA'
      not
      branchIfTrue label32
      push r:this, '+NGeY'
      getMember
      setRegister r:2
      pop
      branch label33
     label32:
      push r:this, '5ly+0'
      getMember
      setRegister r:2
      pop
     label33:
      push r:2, r:',to,G(', r:name, 3, r:this, '2UM2['
      callMethod
      setRegister r:3
      pop
      push r:3, 1, r:this, '*=bte'
      getMember
      push 'push'
      callMethod
      pop
      push r:3
      return
    end // of function 

    setMember
    push r:1, '}yG6+('
    function2 (r:4='name', r:3=',to,G(') (r:1='this')
      push r:',to,G(', UNDEF
      equals
      not
      branchIfTrue label34
      push 0.0, 'Object'
      new
      setRegister r:',to,G('
      pop
     label34:
      push r:',to,G(', '0(}e', r:this
      setMember
      push r:this, '(((}f'
      getMember
      push r:',to,G(', r:name, 3, r:this, '*zpZx'
      callMethod
      setRegister r:2
      pop
      push r:2, 1, r:this, '5djvn'
      getMember
      push 'push'
      callMethod
      pop
      push r:2
      return
    end // of function 

    setMember
    push r:1, ',0PWI('
    function2 (r:3=',to,G(') (r:1='this')
      push r:',to,G(', UNDEF
      equals
      not
      branchIfTrue label35
      push 0.0, 'Object'
      new
      setRegister r:',to,G('
      pop
     label35:
      push r:',to,G(', '0(}e', r:this
      setMember
      push r:this, '{ea81'
      getMember
      push r:',to,G(', '+V;6J(', 3, r:this, '*zpZx'
      callMethod
      setRegister r:2
      pop
      push r:2, 1, r:this, ')JqcF'
      getMember
      push 'push'
      callMethod
      pop
      push r:2
      return
    end // of function 

    setMember
    push r:1, '*p,2T'
    function2 (r:3=';p(', r:2='list') ()
      push 0.0
      setRegister r:1
      pop
     label36:
      push r:1, r:list, 'length'
      getMember
      lessThan
      not
      branchIfTrue label38
      push r:list, r:1
      getMember
      push r:';p('
      equals
      not
      branchIfTrue label37
      push 1, r:1, 2, r:list, 'splice'
      callMethod
      pop
      push UNDEF
      return
     label37:
      push r:1
      increment
      setRegister r:1
      pop
      branch label36
     label38:
    end // of function 

    setMember
    push r:1, ']C)N+'
    function2 () (r:1='this')
      push 0.0, r:this, '6E_5i'
      getMember
      push 'pop'
      callMethod
      return
    end // of function 

    setMember
    push r:1, '=ZiO9'
    function2 (r:3=';p(') (r:1='this', r:2='_root')
      push r:_root, ';IwU'
      getMember
      not
      branchIfTrue label39
      push r:';p(', '+2,US'
      getMember
      push 1, r:this, '6E_5i'
      getMember
      push 'push'
      callMethod
      pop
     label39:
    end // of function 

    setMember
    push r:1, '95}f'
    function2 () (r:1='this')
      push r:this, '5BC51'
      getMember
      push UNDEF
      equals
      not
      not
      branchIfTrue label44
      push r:this, ']si4W'
      getMember
      push UNDEF
      equals
      not
      not
      branchIfTrue label41
      push r:this, ']si4W', r:this, ']si4W'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
      push r:this, ']si4W'
      getMember
      push 0.0
      lessThan
      not
      branchIfTrue label40
      push r:this, ']si4W'
      delete
      pop
     label40:
      push UNDEF
      return
     label41:
      push r:this, '5BC51'
      getMember
      push r:this, ' F851'
      getMember
      subtract
      setRegister r:3
      pop
      push FALSE
      setRegister r:2
      pop
      push r:3, 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      push 1
      greaterThan
      not
      branchIfTrue label42
      push r:this, ' F851', r:this, ' F851'
      getMember
      push r:3, 0.15
      multiply
      add
      setMember
      branch label43
     label42:
      push r:this, ' F851', r:this, '5BC51'
      getMember
      setMember
      push r:this, '5BC51'
      delete
      pop
      push TRUE
      setRegister r:2
      pop
     label43:
      push r:this, ' F851'
      getMember
      push 4868740, r:this, 3, 'miniwave'
      getVariable
      push '+]'
      getMember
      push '8_aeB('
      callMethod
      pop
      push r:2
      not
      branchIfTrue label44
      push r:this, ' Z8Ys'
      getMember
      push '(3cc'
      getMember
      push 1, r:this, ' Z8Ys'
      getMember
      push '8p7('
      getMember
      push r:this, ' Z8Ys'
      getMember
      push ',CeLG'
      getMember
      callMethod
      pop
     label44:
    end // of function 

    setMember
    push r:1, '36_zB'
    function ()
    end // of function 

    setMember
    push r:1, '-B-AZ'
    function2 () (r:1='this')
     label45:
      push r:this, '( ZF6('
      getMember
      push 'length'
      getMember
      push 0.0
      greaterThan
      not
      branchIfTrue label46
      push 0.0, r:this, '( ZF6('
      getMember
      push 0.0
      getMember
      push '=mb_F'
      callMethod
      pop
      branch label45
     label46:
      push r:this, '7W4BT'
      getMember
      push 'length'
      getMember
      push 0.0
      greaterThan
      not
      branchIfTrue label47
      push 0.0, r:this, '7W4BT'
      getMember
      push 0.0
      getMember
      push '=mb_F'
      callMethod
      pop
      branch label46
     label47:
    end // of function 

    setMember
    push r:1, '3XLKj'
    function2 (r:2='8)') (r:1='this')
      push r:this, '3ao2D', r:this, '3ao2D'
      getMember
      push r:'8)'
      add
      setMember
      push r:this, '3ao2D'
      getMember
      push 1, r:this, ']Vl8j'
      getMember
      push ' a= 5'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '{Pp6K('
    function2 (r:5='8)') (r:1='this')
      push 'x', r:this, '+3ul'
      getMember
      push 'x'
      getMember
      push 'y', r:this, '+3ul'
      getMember
      push 'y'
      getMember
      push r:this, '+3ul'
      getMember
      push ']dc'
      getMember
      subtract
      push '+N5T', -1, '3fEyH', 30, ']nBjo', FALSE, ')Ml', '+', r:'8)'
      add
      push 6
      initObject
      setRegister r:2
      pop
      push r:2, ';Eu}5', 2, r:this, ';IDPE'
      callMethod
      setRegister r:3
      pop
      push r:this, '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$credit', r:this, '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$credit'
      getMember
      push r:'8)'
      add
      setMember
    end // of function 

    setMember
    push r:1, ',O=T+('
    function2 (r:4=',to,G(') (r:1='this')
      push r:this, '{[8bP'
      getMember
      not
      not
      branchIfTrue label48
      push r:this, '{[8bP', TRUE
      setMember
      push r:',to,G(', 1, r:this, ',0PWI('
      callMethod
      pop
      push r:this, ' Z8Ys', '8p7(', r:this, ',CeLG', 'endGame', 2
      initObject
      setMember
      push r:this, ']si4W', 80
      setMember
      push r:this, ' F851', 100
      setMember
      push r:this, '5BC51', 0.0
      setMember
     label48:
    end // of function 

    setMember
    push r:1, '60n=3'
    function2 (r:3='}_(') (r:1='this')
      push r:'}_(', 1000
      divide
      push 1, 'Math'
      getVariable
      push 'floor'
      callMethod
      push 1
      add
      setRegister r:2
      pop
      push r:this, '+4FUS'
      getMember
      push '5G{'
      getMember
      push '_currentframe'
      getMember
      push r:2
      equals
      not
      not
      branchIfTrue label49
      push r:2, 1, r:this, '+4FUS'
      getMember
      push '5G{'
      getMember
      push 'gotoAndStop'
      callMethod
      pop
      push r:2, 1
      add
      push 1, r:this, '+4FUS'
      getMember
      push '4G{'
      getMember
      push 'gotoAndStop'
      callMethod
      pop
     label49:
      push r:this, '+4FUS'
      getMember
      push '_y', r:this, '[w;('
      getMember
      push '9l;('
      getMember
      push r:'}_(', 1000
      modulo
      add
      push 1, 'Math'
      getVariable
      push 'round'
      callMethod
      setMember
    end // of function 

    setMember
    push r:1, '1h6g9('
    function2 (r:8='x', r:7='y', r:6=']dc') (r:1='this')
      push r:']dc', UNDEF
      equals
      not
      branchIfTrue label50
      push 24
      setRegister r:']dc'
      pop
     label50:
      push 0.0
      setRegister r:2
      pop
     label51:
      push r:2, r:this, '}=*uB('
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label54
      push r:this, '}=*uB('
      getMember
      push r:2
      getMember
      setRegister r:3
      pop
      push r:3, 'x'
      getMember
      push r:x
      subtract
      setRegister r:5
      pop
      push r:3, '45('
      getMember
      push r:y
      subtract
      setRegister r:4
      pop
      push r:5, 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      push r:']dc'
      lessThan
      dup
      not
      branchIfTrue label52
      pop
      push r:4, 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      push r:']dc'
      lessThan
     label52:
      not
      branchIfTrue label53
      push FALSE
      return
     label53:
      push r:2
      increment
      setRegister r:2
      pop
      branch label51
     label54:
      push TRUE
      return
    end // of function 

    setMember
    push r:1, ']=lsF'
    function2 () (r:1='this')
      push 0.0
      setRegister r:2
      pop
     label55:
      push r:2, r:this, '}=*uB('
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label57
      push r:this, '}=*uB('
      getMember
      push r:2
      getMember
      push ')JZ[;'
      getMember
      not
      not
      branchIfTrue label56
      push FALSE
      return
     label56:
      push r:2
      increment
      setRegister r:2
      pop
      branch label55
     label57:
      push TRUE
      return
    end // of function 

    setMember
    push r:1, '0Q_HU'
    function2 (r:4='x', r:3='y', r:2='9)') (r:1='this')
      push r:'9)', UNDEF
      equals
      not
      branchIfTrue label58
      push 0.0
      setRegister r:'9)'
      pop
     label58:
      push r:x, 0.0, r:'9)'
      subtract
      lessThan
      dup
      branchIfTrue label59
      pop
      push r:x, r:this, '[w;('
      getMember
      push '(l;('
      getMember
      push r:'9)'
      add
      greaterThan
     label59:
      dup
      branchIfTrue label60
      pop
      push r:y, 0.0, r:'9)'
      subtract
      lessThan
     label60:
      dup
      branchIfTrue label61
      pop
      push r:y, r:this, '[w;('
      getMember
      push '9l;('
      getMember
      push r:'9)'
      add
      greaterThan
     label61:
      return
    end // of function 

    setMember
    push r:1, '*CcbI'
    function2 () (r:1='this')
      push r:this, '+3ul'
      getMember
      setRegister r:2
      pop
      push r:2, '_visible'
      getMember
      push TRUE
      equals
      not
      not
      branchIfTrue label62
      push 'x', r:this, '[w;('
      getMember
      push '(l;('
      getMember
      push 2
      divide
      push 'y', r:this, '[w;('
      getMember
      push '9l;('
      getMember
      push '4N)zC', 0.0, 3
      initObject
      setRegister r:2
      pop
     label62:
      push r:2
      return
    end // of function 

    setMember
    push r:1, 'endGame'
    function2 () (r:1='this')
      push 0.0, 1, r:this, '[w;('
      getMember
      push '*0GPC'
      getMember
      push 'saveSlot'
      callMethod
      pop
      push 'Menu', 1, r:this, '[w;('
      getMember
      push '5h=iR'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '2yJ49('
    function2 () (r:1='this')
      push r:this, ';7Sp4'
      getMember
      push UNDEF
      equals
      dup
      branchIfTrue label63
      pop
      push 67, 1, 'Key'
      getVariable
      push 'isDown'
      callMethod
     label63:
      not
      branchIfTrue label64
      push 0.0, r:this, ';[1Tc'
      callMethod
      pop
      push r:this, ';7Sp4', r:this, 'so'
      getMember
      push 'data'
      getMember
      push 'level'
      getMember
      setMember
      push r:this, ',)8 5', FALSE
      setMember
      branch label66
     label64:
      push r:this, '[w;('
      getMember
      push '[2qsN'
      getMember
      push 0.0, r:this, ']NLZd'
      callMethod
      getMember
      setRegister r:2
      pop
      push r:2, UNDEF
      equals
      not
      branchIfTrue label65
      push r:this, '{ihV;'
      getMember
      push '+;hw4', '+;hw4', 3, r:this, '[w;('
      getMember
      push 'attachMovie'
      callMethod
      pop
      push r:this, ']VEg;(', r:this, ';7Sp4'
      getMember
      push 1, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '[Eptz'
      newMethod
      setMember
      push r:this, ',)8 5', TRUE
      setMember
      branch label66
     label65:
      push r:this, ';7Sp4', r:2
      setMember
     label66:
    end // of function 

    setMember
    push r:1, '2M-sY'
    function2 () (r:1='this')
      push r:this, ',)8 5'
      getMember
      not
      branchIfTrue label70
      push 0.0
      setRegister r:2
      pop
     label67:
      push r:2, 150
      lessThan
      not
      branchIfTrue label69
      push 0.0, r:this, ']VEg;('
      getMember
      push '2kTt'
      callMethod
      not
      branchIfTrue label68
      push 0.0, r:this, '[w;('
      getMember
      push '+;hw4'
      getMember
      push 'removeMovieClip'
      callMethod
      pop
      push r:this, ';7Sp4', 0.0, r:this, ']VEg;('
      getMember
      push '25(E['
      callMethod
      setMember
      push r:this, ',)8 5', FALSE
      setMember
      push r:this, '[w;('
      getMember
      push '[2qsN'
      getMember
      push 0.0, r:this, ']NLZd'
      callMethod
      push r:this, ';7Sp4'
      getMember
      setMember
      push FALSE
      return
     label68:
      push r:2
      increment
      setRegister r:2
      pop
      branch label67
     label69:
      push r:this, '[w;('
      getMember
      push '+;hw4'
      getMember
      push ')Ml', r:this, '[w;('
      getMember
      push '+;hw4'
      getMember
      push ')Ml'
      getMember
      push '.'
      add
      setMember
      push TRUE
      return
     label70:
    end // of function 

    setMember
    push r:1, ';[1Tc'
    function2 () (r:1='this', r:2='_root')
      push r:this, 'so', 'miniWave2/level/', 0.0, r:this, ']NLZd'
      callMethod
      add
      push 1, r:_root, 'loadData'
      callMethod
      setMember
    end // of function 

    setMember
    push r:1, '7XfTN'
    function2 () (r:1='this')
      push r:this, 'level'
      getMember
      push r:this, ';7Sp4'
      getMember
      push 'length'
      getMember
      divide
      setRegister r:2
      pop
      push r:2, 100
      multiply
      push 1, 'Math'
      getVariable
      push 'round'
      callMethod
      return
    end // of function 

    setMember
    push r:1, ']NLZd'
    function ()
    end // of function 

    setMember
    push r:1, '2B{Tq'
    function2 (r:2='name') (r:1='this')
      push r:this, '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$stats'
      getMember
      push '$play'
      getMember
      push r:name, r:this, '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$stats'
      getMember
      push '$play'
      getMember
      push r:name
      getMember
      increment
      setMember
    end // of function 

    setMember
    push r:1, ' }=UC('
    function ()
    end // of function 

    setMember
    push r:1, '1T3j'
    function2 () (r:1='this', r:2='super')
     label71:
      push r:this, '1xgbI('
      getMember
      push 'length'
      getMember
      push 0.0
      greaterThan
      not
      branchIfTrue label72
      push 0.0, r:this, '1xgbI('
      getMember
      push 0.0
      getMember
      push '1T3j'
      callMethod
      pop
      branch label71
     label72:
      push r:this, ',)8 5'
      getMember
      not
      branchIfTrue label73
      push 0.0, r:this, '[w;('
      getMember
      push '+;hw4'
      getMember
      push 'removeMovieClip'
      callMethod
      pop
     label73:
      push 1, 1, r:this, '[w;('
      getMember
      push '9,T}W'
      getMember
      push 'stop'
      callMethod
      pop
      push 0.0, r:super, '1T3j'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '{ihV;', 4600
    setMember
    push r:1, '{ea81', 4000
    setMember
    push r:1, '(((}f', 2950
    setMember
    push r:1, '5ly+0', 2000
    setMember
    push r:1, '+W0i0', 1500
    setMember
    push r:1, '+NGeY', 500
    setMember
    push r:1, '}RDM)(', 40
    setMember
    push r:1, '{9)*C(', 24
    setMember
    push r:1, '9m3sB(', 10
    setMember
    push r:1, '=ngD', 48
    setMember
    push r:1, '[CzZ1', 40
    setMember
    push r:1, ']R4[6', 18.7
    setMember
    push r:1, '7 6BP', 450
    setMember
    push r:1, '0lWFK', 0.95
    setMember
    push r:1, '=QEBH', 1
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '5q)A'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label74:
    pop
  end // of initMovieClip 619

  defineMovieClip 620 // total frames: 0
  end // of defineMovieClip 620
  
  exportAssets
    620 as '__Packages.miniwave.Manager'
  end // of exportAssets
  
  initMovieClip 620
    constants '_global', 'miniwave', 'Object', ';j*J0(', '=w)l', 'MovieClip', 'prototype', ';IwU', '[MNG] init(', '}P=,U', ')\n', '{;U,+', '[zY{z', '-2I89', '3I2[((', '*0GPC', ']o]m6(', '[w;(', 'serviceConnect', '9]by_', ',N6)C', '08;s-(', '[2qsN', '6}jsa', '2d[', 'Key', 'isDown', '*w_=M', 'forcePause', '1TT)7', '1c1O', ']ZGs2', '+]', '8_aeB(', ';j,t+(', '_visible', '5h=iR', 'genSlot !!', '1T3j', 'miniWave2', 'attachMovie', '[_6rB(', ' c2q', '1grti', '=*TTG', '-3(P', 'name', 'Letter-monster', '6b;Pt', 'Nitro-pruneau', ']J_Ri', 'Brugnon cuirassé', '32A;x', 'Pois casseur', '}iTLr', 'Cosmo-Cassis', '94KvY', 'Bulbe spatial', '=}{Dn', 'Courge céleste', '95X5]', 'Pêche jongleuse', ';SXX8', 'Demon lemon', '[ZNu9', 'Prune paralysante', ']e}dI', 'Prune sidérale', '0hU7]', 'Kiwi interstellaire', '0vE7A', 'Poivri le poivron violent', '7pZN2', 'Space-Kumquat', '*6K[4(', 'Scarabé pulpé', '0y*sL', 'Betterave\tastrale', '[-mop', 'Astro-raisin', '4Cw[6', 'Pruneau passe-muraille', ' VkMU', 'Nectarine trou-noir', '30k{=', 'Abricot guerrier', '6U3t5', 'Pêche astronomique', '3,J s', 'Space-Groseille', '1S,PG', 'Aubergine folle', '=x,d-', 'Fraise-shuriken', '0XKmH', 'Myrtillerie lourde', '1gDW-(', 'Ananas sauvage', '4hD(B', 'Astro-Quetsch', '3yV78', '(n{i (', '+gV,]', '1;{)B', '+v)*=(', 'Mangue-strike', '-5L7e', 'Aigrelle assassine', '2mQbY', 'Baies à tête chercheuse', '7,s-6', 'Astéropulpe', '1u3{l', ',=Pw4(', '*k,6]', 'Mûre chercheuse', '9I{Nz', 'Pruneau magnétique', '=(*FX', 'Astro-Datte', '{csi5', 'Pomme d\'épines', '5X1Mm', '+DIY7', ']}FNA', 'Figue-laser', '=xWuX', 'Coing mutant', '{{E)6', 'Cosmo-Prune', '[QoYb', 'Astro-Pamplemousse', '[k0Vr', 'Poire sous cloche', '7 8S4', 'Fraise des bois', '{-l-u', 'Cerises-duo', '0]3{l', '45)H,', '}1iD9(', 'Clémentine mécanique', '=_M9E(', ',f *l', '1iHRm', '= *7I(', '6W7Ij', 'Fraise-bouclier', '5F5}m', ',m7Bi', 'rycher', ' rXsS', 'sacuro', '4HQZF(', 'namazan', '(U;{+', 'gapatsa', '8Xpv_', 'proto', ')sW]P', 'aliquet', '2u;W3', 'Colonel', 'Commandant', 'Capitaine', 'Lieutenant', 'SousLieutenant', 'Major', 'Sergent', 'Chef d\'escadre', 'Patrouilleur', 'Pilote', 'Cornette', 'Aspirant', 'Apprenti', '3[gem', ',DVA;', 'so', 'miniWave2/card', 'loadData', '=Y(', 'data', '-nq]*', 'Array', 'slots', ']rmqo', '$vs', '-VEI7(', '5-dCq', ']=(]0', '$credit', 'format card !!!\n', '$ship00', 'giveItem', '$ship', '$mode', '$arcade', '$bestScore', '$bestLevel', '$letter', '$survival', '$time', '$bonus', '$cons', '$main', '$badsKill', 'length', '$saucerKill', '$shop', '$lvl', '$stats', '$play', '$mission', '$buy', 'saveSlot', '*x1rw', '$bads50', 'push', '$sound', '$key', '9tSne', '5x9z5', '-zJvB(', 'removeMovieClip', 'onPause', ',ljQG', 'movieclip', 'stop', 'connected', ' connected !!', '1b 53(', 'flTest', '8x()n', 'level', 'jumpTo', 'parseInt', 'GameMain', 'Menu', '9ncqC(', '4cB2;', '9,T}W', '6DM]P', ';*b', '6L]C*(', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';j*J0('
    getMember
    not
    not
    branchIfTrue label41
    push 'miniwave'
    getVariable
    push ';j*J0('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push ';j*J0('
    getMember
    push 'MovieClip'
    getVariable
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='_root')
      push r:_root, ';IwU', r:_root, ';IwU'
      getMember
      push '[MNG] init(', r:this, '}P=,U'
      getMember
      add
      push ')\n'
      add
      add
      setMember
      push 0.0, r:this, '{;U,+'
      callMethod
      pop
      push 0.0, r:this, '[zY{z'
      callMethod
      pop
      push r:this, '-2I89', FALSE
      setMember
      push r:this, '3I2[((', 0.0
      setMember
      push r:this, '*0GPC', 0.0, 'miniwave'
      getVariable
      push ']o]m6('
      newMethod
      setMember
      push r:this, '*0GPC'
      getMember
      push '[w;(', r:this
      setMember
      push 0.0, r:this, '*0GPC'
      getMember
      push 'serviceConnect'
      callMethod
      pop
      push 0.0, r:this, '9]by_'
      callMethod
      pop
      push r:this, ',N6)C'
      getMember
      not
      branchIfTrue label2
      push 0.0, r:this, '08;s-('
      callMethod
      pop
     label2:
      push r:this, '[2qsN', 0.0, 'Object'
      new
      setMember
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this')
      push 0.0, '2d['
      getVariable
      push '6}jsa'
      callMethod
      pop
      push 80, 1, 'Key'
      getVariable
      push 'isDown'
      callMethod
      dup
      branchIfTrue label3
      pop
      push 27, 1, 'Key'
      getVariable
      push 'isDown'
      callMethod
     label3:
      not
      branchIfTrue label6
      push r:this, '*w_=M'
      getMember
      dup
      not
      branchIfTrue label4
      pop
      push r:this, '*0GPC'
      getMember
      push 'forcePause'
      getMember
      not
     label4:
      not
      branchIfTrue label5
      push 0.0, r:this, '1TT)7'
      callMethod
      pop
      push r:this, '*w_=M', FALSE
      setMember
     label5:
      branch label7
     label6:
      push r:this, '*w_=M', TRUE
      setMember
     label7:
      push r:this, '-2I89'
      getMember
      not
      not
      branchIfTrue label8
      push 0.0, r:this, '1c1O'
      getMember
      push '6}jsa'
      callMethod
      pop
      branch label9
     label8:
      push r:this, ']ZGs2', r:this, ']ZGs2'
      getMember
      push 0.5
      multiply
      setMember
      push 50, r:this, ']ZGs2'
      getMember
      add
      push 0.0, r:this, '1c1O'
      getMember
      push 3, 'miniwave'
      getVariable
      push '+]'
      getMember
      push '8_aeB('
      callMethod
      pop
     label9:
      push r:this, ',N6)C'
      getMember
      not
      branchIfTrue label10
      push r:this, ';j,t+('
      getMember
      push '_visible', 8, 1, 'Key'
      getVariable
      push 'isDown'
      callMethod
      setMember
     label10:
    end // of function 

    setMember
    push r:1, '5h=iR'
    function2 (r:4=' c2q', r:3=',to,G(') (r:1='this', r:2='_root')
      push r:_root, ';IwU', r:_root, ';IwU'
      getMember
      push 'genSlot !!'
      add
      setMember
      push r:this, '1c1O'
      getMember
      push '_visible'
      getMember
      not
      branchIfTrue label11
      push 0.0, r:this, '1c1O'
      getMember
      push '1T3j'
      callMethod
      pop
     label11:
      push r:',to,G(', UNDEF
      equals
      not
      branchIfTrue label12
      push 0.0, 'Object'
      new
      setRegister r:',to,G('
      pop
     label12:
      push r:',to,G(', '[w;(', r:this
      setMember
      push r:',to,G(', 20, '1c1O', 'miniWave2', r:' c2q'
      add
      push 4, r:this, 'attachMovie'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '{;U,+'
    function2 () (r:1='this')
      push r:this, '[_6rB(', ' c2q', '1grti', '=*TTG', 50, '-3(P', 50, 'name', 'Letter-monster', 4
      initObject
      push ' c2q', '6b;Pt', '=*TTG', 5, '-3(P', 49, 'name', 'Nitro-pruneau', 4
      initObject
      push ' c2q', ']J_Ri', '=*TTG', 220, '-3(P', 48, 'name', 'Brugnon cuirassé', 4
      initObject
      push ' c2q', '32A;x', '=*TTG', 150, '-3(P', 47, 'name', 'Pois casseur', 4
      initObject
      push ' c2q', '}iTLr', '=*TTG', 180, '-3(P', 46, 'name', 'Cosmo-Cassis', 4
      initObject
      push ' c2q', '94KvY', '=*TTG', 150, '-3(P', 45, 'name', 'Bulbe spatial', 4
      initObject
      push ' c2q', '=}{Dn', '=*TTG', 200, '-3(P', 44, 'name', 'Courge céleste', 4
      initObject
      push ' c2q', '95X5]', '=*TTG', 180, '-3(P', 43, 'name', 'Pêche jongleuse', 4
      initObject
      push ' c2q', ';SXX8', '=*TTG', 200, '-3(P', 42, 'name', 'Demon lemon', 4
      initObject
      push ' c2q', '[ZNu9', '=*TTG', 110, '-3(P', 35, 'name', 'Prune paralysante', 4
      initObject
      push ' c2q', ']e}dI', '=*TTG', 110, '-3(P', 40, 'name', 'Prune sidérale', 4
      initObject
      push ' c2q', '0hU7]', '=*TTG', 70, '-3(P', 22, 'name', 'Kiwi interstellaire', 4
      initObject
      push ' c2q', '0vE7A', '=*TTG', 180, '-3(P', 39, 'name', 'Poivri le poivron violent', 4
      initObject
      push ' c2q', '7pZN2', '=*TTG', 110, '-3(P', 38, 'name', 'Space-Kumquat', 4
      initObject
      push ' c2q', '*6K[4(', '=*TTG', 150, '-3(P', 37, 'name', 'Scarabé pulpé', 4
      initObject
      push ' c2q', '0y*sL', '=*TTG', 120, '-3(P', 32, 'name', 'Betterave\tastrale', 4
      initObject
      push ' c2q', '[-mop', '=*TTG', 110, '-3(P', 36, 'name', 'Astro-raisin', 4
      initObject
      push ' c2q', '4Cw[6', '=*TTG', 250, '-3(P', 41, 'name', 'Pruneau passe-muraille', 4
      initObject
      push ' c2q', ' VkMU', '=*TTG', 120, '-3(P', 30, 'name', 'Nectarine trou-noir', 4
      initObject
      push ' c2q', '30k{=', '=*TTG', 95, '-3(P', 31, 'name', 'Abricot guerrier', 4
      initObject
      push ' c2q', '6U3t5', '=*TTG', 95, '-3(P', 33, 'name', 'Pêche astronomique', 4
      initObject
      push ' c2q', '3,J s', '=*TTG', 90, '-3(P', 28, 'name', 'Space-Groseille', 4
      initObject
      push ' c2q', '1S,PG', '=*TTG', 95, '-3(P', 29, 'name', 'Aubergine folle', 4
      initObject
      push ' c2q', '=x,d-', '=*TTG', 65, '-3(P', 21, 'name', 'Fraise-shuriken', 4
      initObject
      push ' c2q', '0XKmH', '=*TTG', 180, '-3(P', 34, 'name', 'Myrtillerie lourde', 4
      initObject
      push ' c2q', '1gDW-(', '=*TTG', 150, '-3(P', 24, 'name', 'Ananas sauvage', 4
      initObject
      push ' c2q', '4hD(B', '=*TTG', 60, '-3(P', 16, 'name', 'Astro-Quetsch', 4
      initObject
      push ' c2q', '3yV78', '=*TTG', 50, '-3(P', 13, 'name', '(n{i (', 4
      initObject
      push ' c2q', '+gV,]', '=*TTG', 70, '-3(P', 17, 'name', '1;{)B', 4
      initObject
      push ' c2q', '+v)*=(', '=*TTG', 65, '-3(P', 20, 'name', 'Mangue-strike', 4
      initObject
      push ' c2q', '-5L7e', '=*TTG', 55, '-3(P', 15, 'name', 'Aigrelle assassine', 4
      initObject
      push ' c2q', '2mQbY', '=*TTG', 85, '-3(P', 27, 'name', 'Baies à tête chercheuse', 4
      initObject
      push ' c2q', '7,s-6', '=*TTG', 80, '-3(P', 26, 'name', 'Astéropulpe', 4
      initObject
      push ' c2q', '1u3{l', '=*TTG', 120, '-3(P', 18, 'name', ',=Pw4(', 4
      initObject
      push ' c2q', '*k,6]', '=*TTG', 70, '-3(P', 23, 'name', 'Mûre chercheuse', 4
      initObject
      push ' c2q', '9I{Nz', '=*TTG', 80, '-3(P', 25, 'name', 'Pruneau magnétique', 4
      initObject
      push ' c2q', '=(*FX', '=*TTG', 55, '-3(P', 14, 'name', 'Astro-Datte', 4
      initObject
      push ' c2q', '{csi5', '=*TTG', 50, '-3(P', 12, 'name', 'Pomme d\'épines', 4
      initObject
      push ' c2q', '5X1Mm', '=*TTG', 45, '-3(P', 10, 'name', '+DIY7', 4
      initObject
      push ' c2q', ']}FNA', '=*TTG', 75, '-3(P', 19, 'name', 'Figue-laser', 4
      initObject
      push ' c2q', '=xWuX', '=*TTG', 30, '-3(P', 7, 'name', 'Coing mutant', 4
      initObject
      push ' c2q', '{{E)6', '=*TTG', 40, '-3(P', 9, 'name', 'Cosmo-Prune', 4
      initObject
      push ' c2q', '[QoYb', '=*TTG', 60, '-3(P', 11, 'name', 'Astro-Pamplemousse', 4
      initObject
      push ' c2q', '[k0Vr', '=*TTG', 40, '-3(P', 5, 'name', 'Poire sous cloche', 4
      initObject
      push ' c2q', '7 8S4', '=*TTG', 20, '-3(P', 4, 'name', 'Fraise des bois', 4
      initObject
      push ' c2q', '{-l-u', '=*TTG', 25, '-3(P', 6, 'name', 'Cerises-duo', 4
      initObject
      push ' c2q', '0]3{l', '=*TTG', 35, '-3(P', 8, 'name', '45)H,', 4
      initObject
      push ' c2q', '}1iD9(', '=*TTG', 15, '-3(P', 2, 'name', 'Clémentine mécanique', 4
      initObject
      push ' c2q', '=_M9E(', '=*TTG', 10, '-3(P', 1, 'name', ',f *l', 4
      initObject
      push ' c2q', '1iHRm', '=*TTG', 30, '-3(P', 3, 'name', '= *7I(', 4
      initObject
      push ' c2q', '6W7Ij', '=*TTG', 5, '-3(P', 0.0, 'name', 'Fraise-bouclier', 4
      initObject
      push 51
      initArray
      setMember
      push r:this, '5F5}m', ' c2q', ',m7Bi', 'name', 'rycher', 2
      initObject
      push ' c2q', ' rXsS', 'name', 'sacuro', 2
      initObject
      push ' c2q', '4HQZF(', 'name', 'namazan', 2
      initObject
      push ' c2q', '(U;{+', 'name', 'gapatsa', 2
      initObject
      push ' c2q', '8Xpv_', 'name', 'proto', 2
      initObject
      push ' c2q', ')sW]P', 'name', 'aliquet', 2
      initObject
      push 6
      initArray
      setMember
      push r:this, '2u;W3', 'Colonel', 'Commandant', 'Capitaine', 'Lieutenant', 'SousLieutenant', 'Major', 'Sergent', 'Chef d\'escadre', 'Patrouilleur', 'Pilote', 'Cornette', 'Aspirant', 'Apprenti', 13
      initArray
      setMember
    end // of function 

    setMember
    push r:1, '3[gem'
    function2 () (r:1='this', r:2='_root')
      push r:this, '*0GPC'
      getMember
      push ',DVA;'
      getMember
      not
      branchIfTrue label14
      push r:this, 'so', 'miniWave2/card', 1, r:_root, 'loadData'
      callMethod
      setMember
      push r:this, '=Y(', r:this, 'so'
      getMember
      push 'data'
      getMember
      push '-nq]*'
      getMember
      setMember
      push r:this, '=Y('
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label13
      push r:this, '=Y(', 0.0, 'Array'
      new
      setMember
      push r:this, 'so'
      getMember
      push 'data'
      getMember
      push '-nq]*', r:this, '=Y('
      getMember
      setMember
     label13:
      branch label15
     label14:
      push r:this, '=Y(', r:this, '*0GPC'
      getMember
      push 'slots'
      getMember
      setMember
     label15:
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push UNDEF
      equals
      dup
      branchIfTrue label16
      pop
      push 70, 1, 'Key'
      getVariable
      push 'isDown'
      callMethod
      dup
      not
      branchIfTrue label16
      pop
      push 32, 1, 'Key'
      getVariable
      push 'isDown'
      callMethod
     label16:
      not
      branchIfTrue label17
      push 0.0, r:this, ']rmqo'
      callMethod
      pop
     label17:
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$vs'
      getMember
      push r:this, '}P=,U'
      getMember
      lessThan
      not
      branchIfTrue label18
      push 0.0, r:this, '-VEI7('
      callMethod
      pop
     label18:
      push r:this, '=Y('
      getMember
      push 1
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label19
      push 0.0, r:this, '5-dCq'
      callMethod
      pop
     label19:
      push 0.0, r:this, ']=(]0'
      callMethod
      pop
      push 13, 1, 'Key'
      getVariable
      push 'isDown'
      callMethod
      dup
      not
      branchIfTrue label20
      pop
      push 32, 1, 'Key'
      getVariable
      push 'isDown'
      callMethod
     label20:
      not
      branchIfTrue label21
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$credit', 1000
      setMember
     label21:
    end // of function 

    setMember
    push r:1, ']rmqo'
    function2 () (r:1='this', r:2='_root')
      push r:_root, ';IwU', r:_root, ';IwU'
      getMember
      push 'format card !!!\n'
      add
      setMember
      push '$ship00', 1, r:this, '*0GPC'
      getMember
      push 'giveItem'
      callMethod
      pop
      push r:this, '=Y('
      getMember
      push 0.0, 0.0, 'Object'
      new
      setMember
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$vs', r:this, '}P=,U'
      getMember
      setMember
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$ship', 0.0, 0.0, 0.0, 0.0, 0.0, 1, 6
      initArray
      setMember
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$mode', 1, 1, 0.0, 0.0, 0.0, 3
      initArray
      push 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8
      initArray
      push 1, 5
      initArray
      setMember
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$arcade', '$bestScore', 0.0, '$bestLevel', 0.0, 2
      initObject
      setMember
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$letter', 0.0
      setMember
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$survival', 0.0
      setMember
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$time', 0.0
      setMember
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$bonus', 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8
      initArray
      setMember
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$cons', '$main', 0.0, '$bonus', 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8
      initArray
      push '$letter', 0.0, 3
      initObject
      setMember
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$badsKill', 0.0, 'Array'
      new
      setMember
      push 0.0
      setRegister r:3
      pop
     label22:
      push r:3, r:this, '[_6rB('
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label23
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$badsKill'
      getMember
      push r:3, 0.0
      setMember
      push r:3
      increment
      setRegister r:3
      pop
      branch label22
     label23:
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$saucerKill', 0.0
      setMember
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$credit', 0.0
      setMember
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$shop', 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 20
      initArray
      setMember
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$lvl', 0.0
      setMember
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$stats', '$play', '$main', 0.0, '$mission', 0.0, '$survival', 0.0, '$letter', 0.0, 4
      initObject
      push '$buy', 0.0
      initArray
      push 2
      initObject
      setMember
      push 0.0, 1, r:this, '*0GPC'
      getMember
      push 'saveSlot'
      callMethod
      pop
      push r:this, 'so'
      getMember
      push 'data'
      getMember
      push '-nq]*', r:this, '=Y('
      getMember
      setMember
    end // of function 

    setMember
    push r:1, '-VEI7('
    function2 () (r:1='this')
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$vs'
      getMember
      push 0.92
      lessThan
      not
      branchIfTrue label24
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$badsKill'
      getMember
      push 50
      getMember
      push r:this, '*x1rw'
      getMember
      lessThan
      not
      not
      branchIfTrue label24
      push '$bads50', 1, r:this, '*0GPC'
      getMember
      push 'giveItem'
      callMethod
      pop
     label24:
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$vs'
      getMember
      push 0.9300000000000001
      lessThan
      not
      branchIfTrue label26
     label25:
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$shop'
      getMember
      push 'length'
      getMember
      push 20
      lessThan
      not
      branchIfTrue label26
      push 1, 1, r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$shop'
      getMember
      push 'push'
      callMethod
      pop
      branch label25
     label26:
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$vs', r:this, '}P=,U'
      getMember
      setMember
      push 0.0, 1, r:this, '*0GPC'
      getMember
      push 'saveSlot'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '5-dCq'
    function2 () (r:1='this')
      push r:this, '=Y('
      getMember
      push 1, '$sound', 1, 1, 2
      initArray
      push '$key', 40, 32, 39, 37, 4
      initArray
      push 2
      initObject
      setMember
      push 1, 1, r:this, '*0GPC'
      getMember
      push 'saveSlot'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '9tSne'
    function2 () (r:1='this')
      push r:this, '5x9z5', 0.0, 'Array'
      new
      setMember
      push r:this, '=Y('
      getMember
      push 0.0
      getMember
      push '$badsKill'
      getMember
      setRegister r:3
      pop
      push 0.0
      setRegister r:2
      pop
     label27:
      push r:2, r:3, 'length'
      getMember
      lessThan
      not
      branchIfTrue label29
      push r:3, r:2
      getMember
      push r:this, '*x1rw'
      getMember
      lessThan
      not
      branchIfTrue label28
      push r:this, '5x9z5'
      getMember
      push r:2, 1
      setMember
     label28:
      push r:2
      increment
      setRegister r:2
      pop
      branch label27
     label29:
    end // of function 

    setMember
    push r:1, '1TT)7'
    function2 (r:2='9e-g') (r:1='this')
      push r:'9e-g', UNDEF
      equals
      not
      branchIfTrue label30
      push r:this, '-2I89'
      getMember
      not
      setRegister r:'9e-g'
      pop
     label30:
      push r:this, '-2I89', r:'9e-g'
      setMember
      push r:this, '-2I89'
      getMember
      not
      branchIfTrue label31
      push 262, '-zJvB(', '-zJvB(', 3, r:this, 'attachMovie'
      callMethod
      pop
      push r:this, ']ZGs2', 50
      setMember
      branch label32
     label31:
      push 0.0, r:this, '-zJvB('
      getMember
      push 'removeMovieClip'
      callMethod
      pop
      push 100, 0.0, r:this, '1c1O'
      getMember
      push 3, 'miniwave'
      getVariable
      push '+]'
      getMember
      push '8_aeB('
      callMethod
      pop
     label32:
      push 0.0, r:this, '1c1O'
      getMember
      push 'onPause'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ',ljQG'
    function2 (r:6=';p(', r:4='list') (r:1='this')
      push r:';p('
      enumerateValue
     label33:
      setRegister r:0
      push NULL
      equals
      branchIfTrue label38
      push r:0
      setRegister r:7
      pop
      push r:';p(', r:7
      getMember
      setRegister r:3
      pop
      push r:3
      typeof
      push 'movieclip'
      equals
      not
      branchIfTrue label37
      push TRUE
      setRegister r:5
      pop
      push 0.0
      setRegister r:2
      pop
     label34:
      push r:2, r:list, 'length'
      getMember
      lessThan
      not
      branchIfTrue label36
      push r:list, r:2
      getMember
      push r:3
      equals
      not
      branchIfTrue label35
      push FALSE
      setRegister r:5
      pop
      branch label36
     label35:
      push r:2
      increment
      setRegister r:2
      pop
      branch label34
     label36:
      push r:5
      not
      branchIfTrue label37
      push r:3, 1, r:list, 'push'
      callMethod
      pop
      push r:list, r:3, 2, r:this, ',ljQG'
      callMethod
      setRegister r:list
      pop
      push 0.0, r:3, 'stop'
      callMethod
      pop
     label37:
      branch label33
     label38:
      push r:list
      return
    end // of function 

    setMember
    push r:1, 'connected'
    function2 () (r:1='this', r:2='_root')
      push r:_root, ';IwU', r:_root, ';IwU'
      getMember
      push ' connected !!'
      add
      setMember
      push 0.0, r:this, '1b 53('
      callMethod
      pop
      push 0.0, r:this, '3[gem'
      callMethod
      pop
      push r:_root, 'flTest'
      getMember
      not
      branchIfTrue label39
      push '8x()n', 3, 0.0, 0.0, 3
      initArray
      push 'level', 10, r:_root, 'jumpTo'
      getMember
      push 2, 'parseInt'
      callFunction
      push 2
      initObject
      push 'GameMain', 2, r:this, '5h=iR'
      callMethod
      pop
      branch label40
     label39:
      push 'Menu', 1, r:this, '5h=iR'
      callMethod
      pop
     label40:
    end // of function 

    setMember
    push r:1, '9ncqC('
    function2 () (r:1='this')
      push 'Menu', 1, r:this, '5h=iR'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '9]by_'
    function2 () (r:1='this')
      push 144, '4cB2;', '4cB2;', 3, r:this, 'attachMovie'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '1b 53('
    function2 () (r:1='this')
      push 0.0, r:this, '4cB2;'
      getMember
      push 'removeMovieClip'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '[zY{z'
    function2 () (r:1='this')
      push 3, '9,T}W', '6DM]P', 3, r:this, 'attachMovie'
      callMethod
      pop
      push 4, ';*b', '6DM]P', 3, r:this, 'attachMovie'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ']=(]0'
    function2 () (r:1='this')
      push r:this, '=Y('
      getMember
      push 1
      getMember
      push '$sound'
      getMember
      push 0.0
      getMember
      push 1, r:this, '9,T}W'
      getMember
      push '6L]C*('
      callMethod
      pop
      push r:this, '=Y('
      getMember
      push 1
      getMember
      push '$sound'
      getMember
      push 1
      getMember
      push 1, r:this, ';*b'
      getMember
      push '6L]C*('
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '08;s-('
    function2 () (r:1='this')
      push 264, ';j,t+(', ';j,t+(', 3, r:this, 'attachMovie'
      callMethod
      pop
      push r:this, ';j,t+('
      getMember
      push '_visible', FALSE
      setMember
    end // of function 

    setMember
    push r:1, ',N6)C', FALSE
    setMember
    push r:1, '}P=,U', 0.9300000000000001
    setMember
    push r:1, '*x1rw', 200
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push ';j*J0('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label41:
    pop
  end // of initMovieClip 620

  defineMovieClip 621 // total frames: 0
  end // of defineMovieClip 621
  
  exportAssets
    621 as '__Packages.miniwave.Client'
  end // of exportAssets
  
  initMovieClip 621
    constants '_global', 'miniwave', 'Object', ']o]m6(', 'name', 'size', ',DVA;', 'getFileInfos', '*o)(', 'isWhite', ' HG[C(', 'frusion', 'gameclient', 'GameClient', 'prototype', 'serviceConnect', ';IwU', '[CLIENT] serviceConnect()\n', 'slots', '[=z', 'onServiceConnect', 'setInterval', '[w;(', 'connected', 'clearInterval', 'onGameReset', '[CLIENT]onGameReset()\n', '9ncqC(', 'onPause', '[CLIENT]onPause()\n', '1TT)7', 'saveSlot', '[CLIENT] saveSlot(', ') \n', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ']o]m6('
    getMember
    not
    not
    branchIfTrue label5
    push 'miniwave'
    getVariable
    push ']o]m6('
    function2 () (r:1='this', r:2='super')
      function2 '*o)(' (r:3=')tSBR') ()
        push 'name', r:')tSBR', 'size', 0.0, 2
        initObject
        return
      end // of function *o)(

      function ' HG[C(' ()
        push TRUE
        return
      end // of function  HG[C(

      push 0.0, r:super, UNDEF
      callMethod
      pop
      push r:this, ',DVA;'
      getMember
      not
      branchIfTrue label2
      push r:this, 'getFileInfos', '*o)('
      getVariable
      setMember
      push r:this, 'isWhite', ' HG[C('
      getVariable
      setMember
     label2:
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push ']o]m6('
    getMember
    push 'frusion'
    getVariable
    push 'gameclient'
    getMember
    push 'GameClient'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, 'serviceConnect'
    function2 () (r:1='this', r:2='super', r:3='_root')
      push r:_root, ';IwU', r:_root, ';IwU'
      getMember
      push '[CLIENT] serviceConnect()\n'
      add
      setMember
      push r:this, ',DVA;'
      getMember
      not
      branchIfTrue label3
      push r:this, 'slots', 0.0
      initArray
      setMember
      push r:this, '[=z', 1000, 'onServiceConnect', r:this, 3, 'setInterval'
      callFunction
      setMember
      push UNDEF
      return
     label3:
      push 0.0, r:super, 'serviceConnect'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'onServiceConnect'
    function2 () (r:1='this')
      push 0.0, r:this, '[w;('
      getMember
      push 'connected'
      callMethod
      pop
      push r:this, ',DVA;'
      getMember
      not
      branchIfTrue label4
      push r:this, '[=z'
      getMember
      push 1, 'clearInterval'
      callFunction
      pop
     label4:
    end // of function 

    setMember
    push r:1, 'onGameReset'
    function2 () (r:1='this', r:2='_root')
      push r:_root, ';IwU', r:_root, ';IwU'
      getMember
      push '[CLIENT]onGameReset()\n'
      add
      setMember
      push 0.0, r:this, '[w;('
      getMember
      push '9ncqC('
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'onPause'
    function2 () (r:1='this', r:2='_root')
      push r:_root, ';IwU', r:_root, ';IwU'
      getMember
      push '[CLIENT]onPause()\n'
      add
      setMember
      push TRUE, 1, r:this, '[w;('
      getMember
      push '1TT)7'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'saveSlot'
    function2 (r:3='8)', r:4='data') (r:1='super', r:2='_root')
      push r:_root, ';IwU', r:_root, ';IwU'
      getMember
      push '[CLIENT] saveSlot(', r:'8)'
      add
      push ') \n'
      add
      add
      setMember
      push r:'data', r:'8)', 2, r:super, 'saveSlot'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ',DVA;', FALSE
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push ']o]m6('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label5:
    pop
  end // of initMovieClip 621

  defineMovieClip 622 // total frames: 0
  end // of defineMovieClip 622
  
  exportAssets
    622 as '__Packages.miniwave.SoundManager'
  end // of exportAssets
  
  initMovieClip 622
    constants '_global', 'miniwave', 'Object', '1L*M (', ';IwU', '[SM] init()\n', '{2*bd', 'Array', '5}gw1', '-q};c', 'MovieClip', 'prototype', '3A_sh', 'length', '+Wcft', 'stop', ';p(', 'removeMovieClip', '*wD,j', '-96b', 'createEmptyMovieClip', ',fi', '6J0l', 'Sound', '6n(', 'enabled', '32WtN', '2d[', ' E}a', '](10((', 'attachSound', 'onSoundComplete', '))Xxt', '[bRwJ', 'start', '9F=HL', 'play', ';f q', ']5uG2(', '95}f', '-iHw1', '=_]51', 'setVolume', '}7xkK', '1UKgY', '9]6w1', '[ {o', '{RC (', ']22d2', '6L]C*(', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '1L*M ('
    getMember
    not
    not
    branchIfTrue label19
    push 'miniwave'
    getVariable
    push '1L*M ('
    function2 () (r:1='this', r:2='super', r:3='_root')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push r:_root, ';IwU', r:_root, ';IwU'
      getMember
      push '[SM] init()\n'
      add
      setMember
      push r:this, '{2*bd', 0.0, 'Array'
      new
      setMember
      push r:this, '5}gw1', -1
      setMember
      push r:this, '-q};c', TRUE
      setMember
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '1L*M ('
    getMember
    push 'MovieClip'
    getVariable
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '3A_sh'
    function2 () (r:1='this')
      push UNDEF
      setRegister r:3
      pop
      push 0.0
      setRegister r:3
      pop
     label2:
      push r:3, r:this, '{2*bd'
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label5
      push r:this, '{2*bd'
      getMember
      push r:3
      getMember
      setRegister r:2
      pop
      push r:2, '+Wcft'
      getMember
      enumerateValue
     label3:
      setRegister r:0
      push NULL
      equals
      branchIfTrue label4
      push r:0
      setRegister r:4
      pop
      push 0.0, r:2, '+Wcft'
      getMember
      push r:4
      getMember
      push 'stop'
      callMethod
      pop
      branch label3
     label4:
      push 0.0, r:2, ';p('
      getMember
      push 'removeMovieClip'
      callMethod
      pop
      push r:3
      increment
      setRegister r:3
      pop
      branch label2
     label5:
      push r:this, '{2*bd', 0.0
      initArray
      setMember
    end // of function 

    setMember
    push r:1, '*wD,j'
    function2 (r:3='-96b') (r:1='this')
      push r:this, '{2*bd'
      getMember
      push r:'-96b'
      getMember
      setRegister r:2
      pop
      push r:2, UNDEF
      equals
      not
      branchIfTrue label6
      push r:'-96b', '-96b', r:'-96b'
      add
      push 2, r:this, 'createEmptyMovieClip'
      callMethod
      setRegister r:4
      pop
      push ';p(', r:4, '+Wcft', 0.0
      initArray
      push ',fi', 100, '6J0l', r:4, 1, 'Sound'
      new
      push '6n(', r:'-96b', 'enabled', TRUE, 6
      initObject
      setRegister r:2
      pop
      push r:this, '{2*bd'
      getMember
      push r:'-96b', r:2
      setMember
     label6:
      push r:2
      return
    end // of function 

    setMember
    push r:1, '32WtN'
    function2 (r:5='name', r:6='-96b') (r:1='this')
      function2 '))Xxt' () (r:1='this')
        push r:this, 1, '2d['
        getVariable
        push ' E}a'
        callMethod
        push '](10((', FALSE
        setMember
      end // of function ))Xxt

      push r:name, 1, '2d['
      getVariable
      push ' E}a'
      callMethod
      setRegister r:4
      pop
      push r:'-96b', 1, r:this, '*wD,j'
      callMethod
      setRegister r:3
      pop
      push r:3, '+Wcft'
      getMember
      push r:4
      getMember
      setRegister r:2
      pop
      push r:2, UNDEF
      equals
      not
      branchIfTrue label7
      push r:3, ';p('
      getMember
      push 1, 'Sound'
      new
      setRegister r:2
      pop
      push r:name, 1, r:2, 'attachSound'
      callMethod
      pop
      push r:2, 'onSoundComplete', '))Xxt'
      getVariable
      setMember
      push r:2, 1, '2d['
      getVariable
      push ' E}a'
      callMethod
      push '](10((', FALSE
      setMember
      push r:3, '+Wcft'
      getMember
      push r:4, r:2
      setMember
     label7:
      push r:2
      return
    end // of function 

    setMember
    push r:1, '[bRwJ'
    function2 (r:4='name', r:3='-96b') (r:1='this')
      push r:'-96b', r:name, 2, r:this, '32WtN'
      callMethod
      setRegister r:2
      pop
      push 1, 0.0, 2, r:2, 'start'
      callMethod
      pop
      push r:2, 1, '2d['
      getVariable
      push ' E}a'
      callMethod
      push '](10((', TRUE
      setMember
      push r:this, '-q};c'
      getMember
      push r:'-96b', 2, r:this, '9F=HL'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'play'
    function2 (r:2='name') (r:1='this')
      push 0.0, r:name, 2, r:this, '[bRwJ'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ';f q'
    function2 (r:4='name', r:3='-96b') (r:1='this')
      push r:'-96b', r:name, 2, r:this, '32WtN'
      callMethod
      setRegister r:2
      pop
      push 65535, 0.0, 2, r:2, 'start'
      callMethod
      pop
      push r:2, 1, '2d['
      getVariable
      push ' E}a'
      callMethod
      push '](10((', TRUE
      setMember
      push r:this, '-q};c'
      getMember
      push r:'-96b', 2, r:this, '9F=HL'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ']5uG2('
    function2 (r:3='name', r:4='-96b') (r:1='this')
      push r:'-96b', r:name, 2, r:this, '32WtN'
      callMethod
      setRegister r:2
      pop
      push 0.0, r:2, 'stop'
      callMethod
      pop
      push r:2, 1, '2d['
      getVariable
      push ' E}a'
      callMethod
      push '](10((', FALSE
      setMember
    end // of function 

    setMember
    push r:1, '95}f'
    function2 (r:3='=a,da', r:4='2w*0G(', r:2='length') (r:1='this')
      push r:this, '5}gw1'
      getMember
      push -1
      equals
      not
      not
      branchIfTrue label8
      push r:this, '-iHw1'
      getMember
      push r:this, '=_]51'
      getMember
      push '6n('
      getMember
      push 2, r:this, 'setVolume'
      callMethod
      pop
      push r:this, '}7xkK'
      getMember
      push '6n('
      getMember
      push 1, r:this, 'stop'
      callMethod
      pop
      push r:this, '-iHw1'
      getMember
      push r:this, '}7xkK'
      getMember
      push '6n('
      getMember
      push 2, r:this, 'setVolume'
      callMethod
      pop
     label8:
      push r:this, '}7xkK', r:'=a,da', 1, r:this, '*wD,j'
      callMethod
      setMember
      push r:this, '=_]51', r:'2w*0G(', 1, r:this, '*wD,j'
      callMethod
      setMember
      push r:this, '1UKgY', r:this, '=_]51'
      getMember
      push ',fi'
      getMember
      setMember
      push r:this, '-iHw1', r:this, '}7xkK'
      getMember
      push ',fi'
      getMember
      setMember
      push r:this, '5}gw1', 0.0
      setMember
      push r:this, '9]6w1', r:length
      setMember
    end // of function 

    setMember
    push r:1, '[ {o'
    function2 () (r:1='this')
      push r:this, '5}gw1'
      getMember
      push -1
      equals
      not
      not
      branchIfTrue label10
      push FALSE
      setRegister r:2
      pop
      push r:this, '5}gw1', r:this, '5}gw1'
      getMember
      push '2d['
      getVariable
      push '{RC ('
      getMember
      push r:this, '9]6w1'
      getMember
      divide
      add
      setMember
      push r:this, '5}gw1'
      getMember
      push 1
      lessThan
      not
      not
      branchIfTrue label9
      push r:this, '5}gw1', 1
      setMember
      push TRUE
      setRegister r:2
      pop
     label9:
      push r:this, '-iHw1'
      getMember
      push r:this, '1UKgY'
      getMember
      subtract
      push r:this, '5}gw1'
      getMember
      multiply
      push r:this, '1UKgY'
      getMember
      add
      setRegister r:3
      pop
      push r:3, r:this, '=_]51'
      getMember
      push '6n('
      getMember
      push 2, r:this, 'setVolume'
      callMethod
      pop
      push r:this, '-iHw1'
      getMember
      push r:3
      subtract
      push r:this, '}7xkK'
      getMember
      push '6n('
      getMember
      push 2, r:this, 'setVolume'
      callMethod
      pop
      push r:2
      not
      branchIfTrue label10
      push r:this, '5}gw1', -1
      setMember
      push r:this, '}7xkK'
      getMember
      push '6n('
      getMember
      push 1, r:this, 'stop'
      callMethod
      pop
      push r:this, '-iHw1'
      getMember
      push r:this, '}7xkK'
      getMember
      push '6n('
      getMember
      push 2, r:this, 'setVolume'
      callMethod
      pop
     label10:
    end // of function 

    setMember
    push r:1, '9F=HL'
    function2 (r:4='-96b', r:3='9e-g') (r:1='this')
      push r:'-96b', 1, r:this, '*wD,j'
      callMethod
      setRegister r:2
      pop
      push r:2, 'enabled', r:'9e-g'
      setMember
      push r:2, 'enabled'
      getMember
      not
      branchIfTrue label11
      push r:2, ',fi'
      getMember
      push 1, r:2, '6J0l'
      getMember
      push 'setVolume'
      callMethod
      pop
      branch label12
     label11:
      push 0.0, 1, r:2, '6J0l'
      getMember
      push 'setVolume'
      callMethod
      pop
     label12:
    end // of function 

    setMember
    push r:1, 'stop'
    function2 (r:4='-96b') (r:1='this')
      push r:'-96b', 1, r:this, '*wD,j'
      callMethod
      setRegister r:2
      pop
      push r:2, '+Wcft'
      getMember
      enumerateValue
     label13:
      setRegister r:0
      push NULL
      equals
      branchIfTrue label14
      push r:0
      setRegister r:3
      pop
      push 0.0, r:2, '+Wcft'
      getMember
      push r:3
      getMember
      push 'stop'
      callMethod
      pop
      push r:2, '+Wcft'
      getMember
      push r:3
      getMember
      push 1, '2d['
      getVariable
      push ' E}a'
      callMethod
      push '](10((', FALSE
      setMember
      branch label13
     label14:
    end // of function 

    setMember
    push r:1, ']22d2'
    function2 (r:3='name', r:4='-96b') (r:1='this')
      push r:'-96b', r:name, 2, r:this, '32WtN'
      callMethod
      setRegister r:2
      pop
      push r:2, 1, '2d['
      getVariable
      push ' E}a'
      callMethod
      push '](10(('
      getMember
      return
    end // of function 

    setMember
    push r:1, 'setVolume'
    function2 (r:3='-96b', r:4='9zY}G') (r:1='this')
      push r:'-96b', 1, r:this, '*wD,j'
      callMethod
      setRegister r:2
      pop
      push r:2, ',fi', r:'9zY}G'
      setMember
      push r:2, 'enabled'
      getMember
      not
      branchIfTrue label15
      push r:2, ',fi'
      getMember
      push 1, r:2, '6J0l'
      getMember
      push 'setVolume'
      callMethod
      pop
     label15:
    end // of function 

    setMember
    push r:1, '6L]C*('
    function2 (r:4='9e-g') (r:1='this')
      push r:this, '-q};c', r:'9e-g'
      setMember
      push 0.0
      setRegister r:2
      pop
     label16:
      push r:2, r:this, '{2*bd'
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label18
      push r:this, '{2*bd'
      getMember
      push r:2
      getMember
      setRegister r:3
      pop
      push r:3, UNDEF
      equals
      not
      not
      branchIfTrue label17
      push r:this, '-q};c'
      getMember
      push r:3, '6n('
      getMember
      push 2, r:this, '9F=HL'
      callMethod
      pop
     label17:
      push r:2
      increment
      setRegister r:2
      pop
      branch label16
     label18:
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '1L*M ('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label19:
    pop
  end // of initMovieClip 622

  defineMovieClip 623 // total frames: 0
  end // of defineMovieClip 623
  
  exportAssets
    623 as '__Packages.Std'
  end // of exportAssets
  
  initMovieClip 623
    constants '_global', '2d[', 'prototype', '=w)l', '5wX2A', '184)((', 'string', 'Array', ',w;zC(', 'length', 'splice', '1{OB (', 'Color', '{]ckD', 'ra', 'rb', 'ba', 'bb', 'ga', 'gb', 'aa', 'ab', 'setTransform', 'XMLNode', 'get', 'attributes', 'set', 'ASSetPropFlags', '[sYE2', '@', '164=p', 'attachMovie', '7PHI3', '_empty@', 'createEmptyMovieClip', '7n3xG(', '_dup@', 'duplicateMovieClip', '_parent', '9]}]I(', '}B(gp', '[]dhN', '=X7BG(', ';(flk', 'createTextField', 'TextField@', '6ub3H(', 'indexOf', 'substr', 'fps', '7J-V', ' E}a', 'hitTest', '6}jsa', '2z0,f', '{RC (', '7}8qX', ')[tXy', '5+R0x', '}SCXE', 'Object', '9{9}E(', 'random', '*UFaA', '', ';HoV7', 'escape', 'unescape', 'parseInt', 'toString', '8ZygI', 'isNaN', 'registerClass'  
    push '_global'
    getVariable
    push '2d['
    getMember
    not
    not
    branchIfTrue label16
    push '_global'
    getVariable
    push '2d['
    function ()
    end // of function 

    setRegister r:0
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:0, '=w)l'
    function2 (r:16='fps') (r:1='this', r:2='_global')
      push '2d['
      getVariable
      push '5wX2A', TRUE
      setMember
      push '2d['
      getVariable
      push '184)((', r:fps
      setMember
      push r:_global, 'string'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label1
      push r:_global, 'string'
      function2 (r:1='x') ()
        push r:x
        return
      end // of function 

      setMember
     label1:
      push 'Array'
      getVariable
      push 'prototype'
      getMember
      push ',w;zC('
      function2 (r:4='8p7(') (r:1='this')
        push UNDEF
        setRegister r:2
        pop
        push r:this, 'length'
        getMember
        setRegister r:3
        pop
        push 0.0
        setRegister r:2
        pop
       label2:
        push r:2, r:3
        lessThan
        not
        branchIfTrue label4
        push r:this, r:2
        getMember
        push r:'8p7('
        equals
        not
        branchIfTrue label3
        push 1, r:2, 2, r:this, 'splice'
        callMethod
        pop
        push TRUE
        return
       label3:
        push r:2
        increment
        setRegister r:2
        pop
        branch label2
       label4:
        push FALSE
        return
      end // of function 

      setMember
      push 'Array'
      getVariable
      push 'prototype'
      getMember
      push '1{OB ('
      function2 () (r:1='this')
        push UNDEF
        setRegister r:4
        pop
        push 0.0
        setRegister r:4
        pop
       label5:
        push r:4, r:this, 'length'
        getMember
        lessThan
        not
        branchIfTrue label6
        push r:this, 'length'
        getMember
        random
        setRegister r:3
        pop
        push r:this, 'length'
        getMember
        random
        setRegister r:2
        pop
        push r:this, r:3
        getMember
        setRegister r:5
        pop
        push r:this, r:3, r:this, r:2
        getMember
        setMember
        push r:this, r:2, r:5
        setMember
        push r:4
        increment
        setRegister r:4
        pop
        branch label5
       label6:
      end // of function 

      setMember
      push 'Color'
      getVariable
      push 'prototype'
      getMember
      push '{]ckD'
      function2 () (r:1='this')
        push 'ra', 100, 'rb', 0.0, 'ba', 100, 'bb', 0.0, 'ga', 100, 'gb', 0.0, 'aa', 100, 'ab', 0.0, 8
        initObject
        push 1, r:this, 'setTransform'
        callMethod
        pop
      end // of function 

      setMember
      push 'XMLNode'
      getVariable
      push 'prototype'
      getMember
      push 'get'
      function2 (r:2='x') (r:1='this')
        push r:this, 'attributes'
        getMember
        push r:x
        getMember
        return
      end // of function 

      setMember
      push 'XMLNode'
      getVariable
      push 'prototype'
      getMember
      push 'set'
      function2 (r:3='x', r:2='y') (r:1='this')
        push r:this, 'attributes'
        getMember
        push r:x, r:y
        setMember
      end // of function 

      setMember
      push 1, ',w;zC(', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 3, r:_global, 'ASSetPropFlags'
      callMethod
      pop
      push 1, '1{OB (', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 3, r:_global, 'ASSetPropFlags'
      callMethod
      pop
      push 1, '{]ckD', 'Color'
      getVariable
      push 'prototype'
      getMember
      push 3, r:_global, 'ASSetPropFlags'
      callMethod
      pop
      push 1, 'get', 'XMLNode'
      getVariable
      push 'prototype'
      getMember
      push 3, r:_global, 'ASSetPropFlags'
      callMethod
      pop
      push 1, 'set', 'XMLNode'
      getVariable
      push 'prototype'
      getMember
      push 3, r:_global, 'ASSetPropFlags'
      callMethod
      pop
    end // of function 

    setMember
    push r:0, '[sYE2'
    function2 (r:2=';p(', r:3=' c2q', r:4='+2,US') ()
      push r:' c2q', '@'
      add
      push '2d['
      getVariable
      push '164=p'
      getMember
      push '2d['
      getVariable
      push '164=p', '2d['
      getVariable
      push '164=p'
      getMember
      increment
      setMember
      add
      setRegister r:1
      pop
      push r:'+2,US', r:1, r:' c2q', 3, r:';p(', 'attachMovie'
      callMethod
      pop
      push r:';p(', r:1
      getMember
      return
    end // of function 

    setMember
    push r:0, '7PHI3'
    function2 (r:2=';p(', r:3='+2,US') ()
      push '_empty@', '2d['
      getVariable
      push '164=p'
      getMember
      push '2d['
      getVariable
      push '164=p', '2d['
      getVariable
      push '164=p'
      getMember
      increment
      setMember
      add
      setRegister r:1
      pop
      push r:'+2,US', r:1, 2, r:';p(', 'createEmptyMovieClip'
      callMethod
      pop
      push r:';p(', r:1
      getMember
      return
    end // of function 

    setMember
    push r:0, '7n3xG('
    function2 (r:2=';p(', r:3='+2,US') ()
      push '_dup@', '2d['
      getVariable
      push '164=p'
      getMember
      push '2d['
      getVariable
      push '164=p', '2d['
      getVariable
      push '164=p'
      getMember
      increment
      setMember
      add
      setRegister r:1
      pop
      push r:'+2,US', r:1, 2, r:';p(', 'duplicateMovieClip'
      callMethod
      pop
      push r:';p(', '_parent'
      getMember
      push r:1
      getMember
      return
    end // of function 

    setMember
    push r:0, '9]}]I('
    function2 (r:2=';p(', r:1='7(') ()
      push r:';p(', r:'7('
      getMember
      return
    end // of function 

    setMember
    push r:0, '}B(gp'
    function2 (r:2=';p(', r:1='7(', r:3='}n[S') ()
      push r:';p(', r:'7(', r:'}n[S'
      setMember
    end // of function 

    setMember
    push r:0, '[]dhN'
    function2 () (r:1='_root')
      push r:_root
      return
    end // of function 

    setMember
    push r:0, '=X7BG('
    function2 (r:2='7(') (r:1='_global')
      push r:_global, r:'7('
      getMember
      return
    end // of function 

    setMember
    push r:0, ';(flk'
    function2 (r:2='7(', r:3='40(') (r:1='_global')
      push r:_global, r:'7(', r:'40('
      setMember
    end // of function 

    setMember
    push r:0, 'createTextField'
    function2 (r:2=';p(', r:3='+2,US', r:6='x', r:4='y', r:7='6(', r:5='h') ()
      push 'TextField@', '2d['
      getVariable
      push '164=p'
      getMember
      push '2d['
      getVariable
      push '164=p', '2d['
      getVariable
      push '164=p'
      getMember
      increment
      setMember
      add
      setRegister r:1
      pop
      push r:h, r:'6(', r:y, r:x, r:'+2,US', r:1, 6, r:';p(', 'createTextField'
      callMethod
      pop
      push r:';p(', r:1
      getMember
      return
    end // of function 

    setMember
    push r:0, '6ub3H('
    function2 (r:1='}aa', r:4='3_a', r:5='8P(') ()
      push UNDEF
      setRegister r:2
      pop
      push r:'3_a', 'length'
      getMember
      setRegister r:3
      pop
     label7:
      push 0.0, r:'3_a', 2, r:'}aa', 'indexOf'
      callMethod
      setRegister r:2
      push -1
      equals
      not
      not
      branchIfTrue label8
      push r:2, 0.0, 2, r:'}aa', 'substr'
      callMethod
      push r:'8P('
      add
      push UNDEF, r:2, r:3
      add
      push 2, r:'}aa', 'substr'
      callMethod
      add
      setRegister r:'}aa'
      pop
      branch label7
     label8:
      push r:'}aa'
      return
    end // of function 

    setMember
    push r:0, 'fps'
    function ()
      push '2d['
      getVariable
      push '184)(('
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      divide
      return
    end // of function 

    setMember
    push r:0, ' E}a'
    function2 (r:1='x') ()
      push r:x
      return
    end // of function 

    setMember
    push r:0, 'hitTest'
    function2 (r:2='4m;(', r:1='3m;(') ()
      push r:'3m;(', 1, r:'4m;(', 'hitTest'
      callMethod
      return
    end // of function 

    setMember
    push r:0, '6}jsa'
    function2 () ()
      push '2d['
      getVariable
      push '5wX2A'
      getMember
      not
      not
      branchIfTrue label9
      push '2d['
      getVariable
      push '184)(('
      getMember
      push 1, '2d['
      getVariable
      push '=w)l'
      callMethod
      pop
     label9:
      push '2d['
      getVariable
      push '2z0,f', '2d['
      getVariable
      push '2z0,f'
      getMember
      increment
      setMember
      getTimer
      setRegister r:1
      pop
      push '2d['
      getVariable
      push '{RC (', r:1, '2d['
      getVariable
      push '7}8qX'
      getMember
      subtract
      push 1000
      divide
      setMember
      push '2d['
      getVariable
      push '7}8qX', r:1
      setMember
      push '2d['
      getVariable
      push '{RC ('
      getMember
      push '2d['
      getVariable
      push ')[tXy'
      getMember
      lessThan
      not
      branchIfTrue label10
      push '2d['
      getVariable
      push '7J-V', '2d['
      getVariable
      push '7J-V'
      getMember
      push '2d['
      getVariable
      push '5+R0x'
      getMember
      multiply
      push 1, '2d['
      getVariable
      push '5+R0x'
      getMember
      subtract
      push '2d['
      getVariable
      push '{RC ('
      getMember
      multiply
      push '2d['
      getVariable
      push '184)(('
      getMember
      multiply
      add
      setMember
      branch label11
     label10:
      push '2d['
      getVariable
      push '{RC (', 1, '2d['
      getVariable
      push '184)(('
      getMember
      divide
      setMember
     label11:
    end // of function 

    setMember
    push r:0, '}SCXE'
    function ()
      push 0.0, 'Object'
      new
      return
    end // of function 

    setMember
    push r:0, '9{9}E('
    function2 (r:2='+)') ()
      push 0.0
      setRegister r:3
      pop
      push UNDEF
      setRegister r:1
      pop
      push r:'+)', 'length'
      getMember
      push 1
      subtract
      setRegister r:1
      pop
     label12:
      push r:1, 0.0
      lessThan
      not
      not
      branchIfTrue label13
      push r:3, r:'+)', r:1
      getMember
      add
      setRegister r:3
      pop
      push r:1
      decrement
      setRegister r:1
      pop
      branch label12
     label13:
      push r:3
      random
      setRegister r:3
      pop
      push 0.0
      setRegister r:1
      pop
     label14:
      push r:3, r:'+)', r:1
      getMember
      lessThan
      not
      not
      branchIfTrue label15
      push r:3, r:'+)', r:1
      getMember
      subtract
      setRegister r:3
      pop
      push r:1
      increment
      setRegister r:1
      pop
      branch label14
     label15:
      push r:1
      return
    end // of function 

    setMember
    push r:0, 'random'
    function2 (r:1='x') ()
      push r:x
      random
      return
    end // of function 

    setMember
    push r:0, '*UFaA'
    function ()
      push '', 20
      getProperty
      return
    end // of function 

    setMember
    push r:0, ';HoV7'
    function ()
      push '', 21
      getProperty
      return
    end // of function 

    setMember
    push r:0, 'escape'
    function2 (r:2='x') (r:1='_global')
      push r:x, 1, r:_global, 'escape'
      callMethod
      return
    end // of function 

    setMember
    push r:0, 'unescape'
    function2 (r:2='x') (r:1='_global')
      push r:x, 1, r:_global, 'unescape'
      callMethod
      return
    end // of function 

    setMember
    push r:0, 'parseInt'
    function2 (r:3='x', r:2='8)') (r:1='_global')
      push r:'8)', r:x, 2, r:_global, 'parseInt'
      callMethod
      return
    end // of function 

    setMember
    push r:0, 'toString'
    function2 (r:1='x') ()
      push r:x
      toString
      return
    end // of function 

    setMember
    push r:0, '8ZygI'
    function2 (r:2='x', r:1='8)') ()
      push r:'8)', 1, r:x
      toNumber
      push 'toString'
      callMethod
      return
    end // of function 

    setMember
    push r:0, 'isNaN'
    function2 (r:2='8)') (r:1='_global')
      push r:'8)', 1, r:_global, 'isNaN'
      callMethod
      return
    end // of function 

    setMember
    push r:0, 'registerClass'
    function2 (r:2=';)', r:1='))') ()
      push r:'))', r:';)', 2, 'Object'
      getVariable
      push 'registerClass'
      callMethod
      pop
    end // of function 

    setMember
    push r:0, ')[tXy', 0.5
    setMember
    push r:0, '184)((', 32
    setMember
    push r:0, '7}8qX'
    getTimer
    setMember
    push r:0, '5wX2A', FALSE
    setMember
    push r:0, '5+R0x', 0.95
    setMember
    push r:0, '7J-V', 1
    setMember
    push r:0, '{RC (', 1
    setMember
    push r:0, '164=p', 0.0
    setMember
    push r:0, '2z0,f', 0.0
    setMember
    push 1, NULL, '_global'
    getVariable
    push '2d['
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label16:
    pop
  end // of initMovieClip 623

  defineMovieClip 624 // total frames: 0
  end // of defineMovieClip 624
  
  exportAssets
    624 as '__Packages.miniwave.MC'
  end // of exportAssets
  
  initMovieClip 624
    constants '_global', 'miniwave', 'Object', '+]', 'prototype', '8_aeB(', 'number', 'toString', '3(', '0x', 'substring', '-)', '*)', '{GR0t', ')dn+X', '+,z', ';UzSK', 'Color', 'ra', 'ga', 'ba', 'aa', 'rb', 'gb', 'bb', 'ab', 'setTransform', '}bMO(', '+)', ']5MPw', ' CLe7(', 'y', 'x', 'moveTo', 'beginFill', '6(', 'lineTo', 'curveTo', 'h', 'endFill', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '+]'
    getMember
    not
    not
    branchIfTrue label10
    push 'miniwave'
    getVariable
    push '+]'
    function ()
    end // of function 

    setRegister r:0
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:0, '8_aeB('
    function2 (r:2=';p(', r:5='color', r:10=';UzSK') ()
      push r:color
      typeof
      push 'number'
      equals
      not
      branchIfTrue label2
      push 16, 1, r:color, 'toString'
      callMethod
      setRegister r:3
      pop
      push '3(', '0x', 2, 0.0, 2, r:3, 'substring'
      callMethod
      add
      toNumber
      push '-)', '0x', 4, 2, 2, r:3, 'substring'
      callMethod
      add
      toNumber
      push '*)', '0x', 6, 4, 2, r:3, 'substring'
      callMethod
      add
      toNumber
      push 3
      initObject
      setRegister r:color
      pop
     label2:
      push r:';p(', '{GR0t'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label3
      push r:';p(', '{GR0t', ')dn+X', '+,z', '3(', 0.0, '-)', 0.0, '*)', 0.0, 3
      initObject
      push ';UzSK', 100, 2
      initObject
      push 1
      initObject
      setMember
      push r:';p(', '{GR0t'
      getMember
      push '+,z', r:';p(', 1, 'Color'
      new
      setMember
     label3:
      push r:color, UNDEF
      equals
      not
      not
      branchIfTrue label4
      push r:';p(', '{GR0t'
      getMember
      push ')dn+X', '+,z', r:color, ';UzSK', r:';UzSK', 2
      initObject
      setMember
     label4:
      push r:';p(', '{GR0t'
      getMember
      push ')dn+X'
      getMember
      setRegister r:1
      pop
      push 100, r:1, ';UzSK'
      getMember
      subtract
      push 100
      divide
      setRegister r:4
      pop
      push r:1, '+,z'
      getMember
      push '3('
      getMember
      push r:4
      multiply
      setRegister r:7
      pop
      push r:1, '+,z'
      getMember
      push '-)'
      getMember
      push r:4
      multiply
      setRegister r:9
      pop
      push r:1, '+,z'
      getMember
      push '*)'
      getMember
      push r:4
      multiply
      setRegister r:6
      pop
      push 'ra', r:1, ';UzSK'
      getMember
      push 'ga', r:1, ';UzSK'
      getMember
      push 'ba', r:1, ';UzSK'
      getMember
      push 'aa', 100, 'rb', r:7, 'gb', r:9, 'bb', r:6, 'ab', 0.0, 8
      initObject
      setRegister r:8
      pop
      push r:8, 1, r:';p(', '{GR0t'
      getMember
      push '+,z'
      getMember
      push 'setTransform'
      callMethod
      pop
    end // of function 

    setMember
    push r:0, '}bMO('
    function2 (r:3=';p(', r:2='7)', r:8='1vBn5') ()
      push r:'7)', '3('
      getMember
      push UNDEF
      equals
      not
      not
      branchIfTrue label6
      push r:'7)', '+)'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label5
      push r:'7)', '+)', 0.0
      setMember
     label5:
      push 'rb', r:'7)', '3('
      getMember
      push 'gb', r:'7)', '-)'
      getMember
      push 'bb', r:'7)', '*)'
      getMember
      push 'ab', r:'7)', '+)'
      getMember
      push 4
      initObject
      setRegister r:1
      pop
      branch label7
     label6:
      push r:'7)'
      typeof
      push 'number'
      equals
      not
      branchIfTrue label7
      push 'rb', r:'7)', 16
      shiftRight
      push 255
      bitwiseAnd
      push 'gb', r:'7)', 8
      shiftRight
      push 255
      bitwiseAnd
      push 'bb', r:'7)', 255
      bitwiseAnd
      push 3
      initObject
      setRegister r:1
      pop
     label7:
      push r:'1vBn5'
      not
      branchIfTrue label8
      push r:1, 'ra', -100
      setMember
      push r:1, 'ga', -100
      setMember
      push r:1, 'ba', -100
      setMember
      branch label9
     label8:
      push r:1, 'ra', 100
      setMember
      push r:1, 'ga', 100
      setMember
      push r:1, 'ba', 100
      setMember
      push r:1, 'rb', r:1, 'rb'
      getMember
      push 255
      subtract
      setMember
      push r:1, 'gb', r:1, 'gb'
      getMember
      push 255
      subtract
      setMember
      push r:1, 'bb', r:1, 'bb'
      getMember
      push 255
      subtract
      setMember
     label9:
      push r:';p(', ']5MPw', r:';p(', 1, 'Color'
      new
      setMember
      push r:1, 1, r:';p(', ']5MPw'
      getMember
      push 'setTransform'
      callMethod
      pop
    end // of function 

    setMember
    push r:0, ' CLe7('
    function2 (r:2=';p(', r:1=';gf', r:4='+,z', r:3='-2Z]N') ()
      push r:';gf', 'y'
      getMember
      push r:';gf', 'x'
      getMember
      push r:'-2Z]N'
      add
      push 2, r:';p(', 'moveTo'
      callMethod
      pop
      push r:'+,z', 1, r:';p(', 'beginFill'
      callMethod
      pop
      push r:';gf', 'y'
      getMember
      push r:';gf', 'x'
      getMember
      push r:';gf', '6('
      getMember
      push r:'-2Z]N'
      subtract
      add
      push 2, r:';p(', 'lineTo'
      callMethod
      pop
      push r:';gf', 'y'
      getMember
      push r:'-2Z]N'
      add
      push r:';gf', 'x'
      getMember
      push r:';gf', '6('
      getMember
      add
      push r:';gf', 'y'
      getMember
      push r:';gf', 'x'
      getMember
      push r:';gf', '6('
      getMember
      add
      push 4, r:';p(', 'curveTo'
      callMethod
      pop
      push r:';gf', 'y'
      getMember
      push r:';gf', 'h'
      getMember
      push r:'-2Z]N'
      subtract
      add
      push r:';gf', 'x'
      getMember
      push r:';gf', '6('
      getMember
      add
      push 2, r:';p(', 'lineTo'
      callMethod
      pop
      push r:';gf', 'y'
      getMember
      push r:';gf', 'h'
      getMember
      add
      push r:';gf', 'x'
      getMember
      push r:';gf', '6('
      getMember
      push r:'-2Z]N'
      subtract
      add
      push r:';gf', 'y'
      getMember
      push r:';gf', 'h'
      getMember
      add
      push r:';gf', 'x'
      getMember
      push r:';gf', '6('
      getMember
      add
      push 4, r:';p(', 'curveTo'
      callMethod
      pop
      push r:';gf', 'y'
      getMember
      push r:';gf', 'h'
      getMember
      add
      push r:';gf', 'x'
      getMember
      push r:'-2Z]N'
      add
      push 2, r:';p(', 'lineTo'
      callMethod
      pop
      push r:';gf', 'y'
      getMember
      push r:';gf', 'h'
      getMember
      push r:'-2Z]N'
      subtract
      add
      push r:';gf', 'x'
      getMember
      push r:';gf', 'y'
      getMember
      push r:';gf', 'h'
      getMember
      add
      push r:';gf', 'x'
      getMember
      push 4, r:';p(', 'curveTo'
      callMethod
      pop
      push r:';gf', 'y'
      getMember
      push r:'-2Z]N'
      add
      push r:';gf', 'x'
      getMember
      push 2, r:';p(', 'lineTo'
      callMethod
      pop
      push r:';gf', 'y'
      getMember
      push r:';gf', 'x'
      getMember
      push r:'-2Z]N'
      add
      push r:';gf', 'y'
      getMember
      push r:';gf', 'x'
      getMember
      push 4, r:';p(', 'curveTo'
      callMethod
      pop
      push 0.0, r:';p(', 'endFill'
      callMethod
      pop
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '+]'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label10:
    pop
  end // of initMovieClip 624

  defineMovieClip 625 // total frames: 0
  end // of defineMovieClip 625
  
  exportAssets
    625 as '__Packages.miniwave.Sprite'
  end // of exportAssets
  
  initMovieClip 625
    constants '_global', 'miniwave', 'Object', '5u;}4', 'MovieClip', 'prototype', '=w)l', '7luP*', '_x', 'x', '_y', 'y', '6}jsa', '4k8;L', '1T3j', '0(}e', '=ZiO9', '1xgbI(', '*p,2T', 'removeMovieClip', '9H(sU', '_parent', 'getBounds', 'xMin', 'xMax', 'yMin', 'yMax', ';qbSN', 'Math', 'sqrt', '-UU_I(', 'atan2', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '5u;}4'
    getMember
    not
    not
    branchIfTrue label7
    push 'miniwave'
    getVariable
    push '5u;}4'
    function2 () (r:1='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '5u;}4'
    getMember
    push 'MovieClip'
    getVariable
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this')
      push 0.0, r:this, '7luP*'
      callMethod
      pop
      push r:this, '_x', r:this, 'x'
      getMember
      setMember
      push r:this, '_y', r:this, 'y'
      getMember
      setMember
    end // of function 

    setMember
    push r:1, '7luP*'
    function2 () (r:1='this')
      push r:this, 'x'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label2
      push r:this, 'x', 0.0
      setMember
     label2:
      push r:this, 'y'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label3
      push r:this, 'y', 0.0
      setMember
     label3:
    end // of function 

    setMember
    push r:1, '6}jsa'
    function ()
    end // of function 

    setMember
    push r:1, '4k8;L'
    function2 () (r:1='this')
      push r:this, '_x', r:this, 'x'
      getMember
      setMember
      push r:this, '_y', r:this, 'y'
      getMember
      setMember
    end // of function 

    setMember
    push r:1, '1T3j'
    function2 () (r:1='this')
      push r:this, 1, r:this, '0(}e'
      getMember
      push '=ZiO9'
      callMethod
      pop
      push r:this, '0(}e'
      getMember
      push '1xgbI('
      getMember
      push r:this, 2, r:this, '0(}e'
      getMember
      push '*p,2T'
      callMethod
      pop
      push 0.0, r:this, 'removeMovieClip'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '9H(sU'
    function2 (r:4='x', r:3='y') (r:1='this')
      push r:this, '_parent'
      getMember
      push 1, r:this, 'getBounds'
      callMethod
      setRegister r:2
      pop
      push r:2, 'xMin'
      getMember
      push r:x
      lessThan
      dup
      not
      branchIfTrue label4
      pop
      push r:x, r:2, 'xMax'
      getMember
      lessThan
     label4:
      dup
      not
      branchIfTrue label5
      pop
      push r:2, 'yMin'
      getMember
      push r:y
      lessThan
     label5:
      dup
      not
      branchIfTrue label6
      pop
      push r:y, r:2, 'yMax'
      getMember
      lessThan
     label6:
      return
    end // of function 

    setMember
    push r:1, ';qbSN'
    function2 (r:4='7)') (r:1='this')
      push r:'7)', 'x'
      getMember
      push r:this, 'x'
      getMember
      subtract
      setRegister r:3
      pop
      push r:'7)', 'y'
      getMember
      push r:this, 'y'
      getMember
      subtract
      setRegister r:2
      pop
      push r:3, r:3
      multiply
      push r:2, r:2
      multiply
      add
      push 1, 'Math'
      getVariable
      push 'sqrt'
      callMethod
      return
    end // of function 

    setMember
    push r:1, '-UU_I('
    function2 (r:4='7)') (r:1='this')
      push r:'7)', 'x'
      getMember
      push r:this, 'x'
      getMember
      subtract
      setRegister r:3
      pop
      push r:'7)', 'y'
      getMember
      push r:this, 'y'
      getMember
      subtract
      setRegister r:2
      pop
      push r:3, r:2, 2, 'Math'
      getVariable
      push 'atan2'
      callMethod
      return
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '5u;}4'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label7:
    pop
  end // of initMovieClip 625

  defineMovieClip 626 // total frames: 0
  end // of defineMovieClip 626
  
  exportAssets
    626 as '__Packages.miniwave.sp.Hero'
  end // of exportAssets
  
  initMovieClip 626
    constants '_global', 'miniwave', 'Object', '8y', '{ry;', '5u;}4', 'prototype', '=w)l', ' m1(', '0(}e', '[w;(', '=Y(', '$key', '*LLoo', '-[ YO', '54OVp', '[DxN', ',_v8c', 't', '2)', '6dvCR', 'stop', '7luP*', '5i(', '4N)zC', '0Pezx', ']dc', '1x99C(', '6}jsa', '9l;(', 'y', 'Math', 'min', 'abs', '2d[', '7J-V', '5R{S (', '( ZF6(', 'length', 'x', '+v0ER', ')]6(', '5uYzV', '0LI3G', ')i=;X', '_alpha', 'removeMovieClip', '*x}z]', 'cos', '+]', '8_aeB(', '(l;(', 'random', ',N5T', '+N5T', '=M5T', ']nBjo', '3fEyH', '80{fB', ';IDPE', '5rGlk', 'type', ';*U}+', '1T3j', 'Key', 'isDown', '4N}8_', 'max', '6KFK+(', '()nBD', '0G)c', '+};I2', ' HkK}', 'gotoAndStop', '1jr84(', ' q)n', '{r-z7', '_xscale', '_yscale', '39Q,v', 'attachMovie', '9b* S', ';*b', '[bRwJ', '5})E4(', '0F3O', '4OIUS', '1K72I(', '+3ul', '0ga]O', '7=bN', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push '{ry;'
    getMember
    not
    not
    branchIfTrue label42
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push '{ry;'
    function2 () (r:1='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push '{ry;'
    getMember
    push 'miniwave'
    getVariable
    push '5u;}4'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ' m1(', r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '=Y('
      getMember
      push 1
      getMember
      push '$key'
      getMember
      setMember
      push r:this, '*LLoo', FALSE
      setMember
      push r:this, '-[ YO', 0.0
      setMember
      push r:this, '54OVp', TRUE
      setMember
      push r:this, '[DxN', 1
      setMember
      push r:this, ',_v8c', 't', 160, '2)', 0.0, 2
      initObject
      setMember
      push r:this, '6dvCR', FALSE
      setMember
      push 0.0, r:this, 'stop'
      callMethod
      pop
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '7luP*'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '7luP*'
      callMethod
      pop
      push r:this, '5i('
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label3
      push r:this, '5i(', 1
      setMember
     label3:
      push r:this, '4N)zC'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label4
      push r:this, '4N)zC', 3
      setMember
     label4:
      push r:this, '0Pezx'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label5
      push r:this, '0Pezx', 4
      setMember
     label5:
      push r:this, ']dc'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label6
      push r:this, ']dc', 8
      setMember
     label6:
      push r:this, '1x99C('
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label7
      push r:this, '1x99C(', 11
      setMember
     label7:
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push r:this, '*LLoo'
      getMember
      not
      not
      branchIfTrue label8
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '9l;('
      getMember
      push r:this, '1x99C('
      getMember
      subtract
      setRegister r:9
      pop
      push r:this, 'y'
      getMember
      push r:9
      subtract
      setRegister r:7
      pop
      push r:this, 'y', r:this, 'y'
      getMember
      push r:7, 0.3
      multiply
      push 2, 2, 'Math'
      getVariable
      push 'min'
      callMethod
      subtract
      setMember
      push r:7, 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      push 0.5
      lessThan
      not
      branchIfTrue label8
      push r:this, 'y', r:9
      setMember
      push r:this, '*LLoo', TRUE
      setMember
     label8:
      push r:this, '-[ YO', r:this, '-[ YO'
      getMember
      push r:this, '0Pezx'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      subtract
      setMember
      push 0.0, r:this, '5R{S ('
      callMethod
      pop
      push 0.0
      setRegister r:4
      pop
     label9:
      push r:4, r:this, '0(}e'
      getMember
      push '( ZF6('
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label13
      push r:this, '0(}e'
      getMember
      push '( ZF6('
      getMember
      push r:4
      getMember
      setRegister r:3
      pop
      push r:3, 'x'
      getMember
      push r:this, 'x'
      getMember
      subtract
      setRegister r:6
      pop
      push r:3, 'y'
      getMember
      push r:this, 'y'
      getMember
      subtract
      setRegister r:5
      pop
      push r:6, 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      push r:this, ']dc'
      getMember
      lessThan
      dup
      not
      branchIfTrue label10
      pop
      push r:5, 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      push r:this, ']dc'
      getMember
      lessThan
     label10:
      not
      branchIfTrue label12
      push r:3, '+v0ER'
      getMember
      not
      branchIfTrue label11
      push 0.0, r:this, ')]6('
      callMethod
      pop
     label11:
      push 0.0, r:3, '5uYzV'
      callMethod
      pop
     label12:
      push r:4
      increment
      setRegister r:4
      pop
      branch label9
     label13:
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '9l;('
      getMember
      push r:this, '1x99C('
      getMember
      subtract
      setRegister r:9
      pop
      push r:this, 'y'
      getMember
      push r:9
      lessThan
      not
      branchIfTrue label14
      push r:this, 'y', r:this, 'y'
      getMember
      push 0.8, '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      add
      setMember
     label14:
      push r:this, '6dvCR'
      getMember
      not
      branchIfTrue label17
      push r:this, '0LI3G'
      getMember
      push 0.0
      greaterThan
      not
      branchIfTrue label16
      push r:this, '0LI3G', r:this, '0LI3G'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
      push r:this, '0LI3G'
      getMember
      push 20
      lessThan
      not
      branchIfTrue label15
      push r:this, ')i=;X'
      getMember
      push '_alpha', r:this, '0LI3G'
      getMember
      push 5
      multiply
      setMember
     label15:
      branch label17
     label16:
      push r:this, '6dvCR', FALSE
      setMember
      push 0.0, r:this, ')i=;X'
      getMember
      push 'removeMovieClip'
      callMethod
      pop
     label17:
      push r:this, '*x}z]'
      getMember
      push UNDEF
      equals
      not
      not
      branchIfTrue label18
      push r:this, '*x}z]', r:this, '*x}z]'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
      push r:this, '*x}z]'
      getMember
      push 0.0
      lessThan
      not
      branchIfTrue label18
      push r:this, '[DxN', 1
      setMember
      push r:this, '*x}z]'
      delete
      pop
     label18:
      push r:this, ',_v8c'
      getMember
      push UNDEF
      equals
      not
      not
      branchIfTrue label21
      push r:this, ',_v8c'
      getMember
      push 't'
      getMember
      push 0.0
      greaterThan
      not
      branchIfTrue label20
      push r:this, ',_v8c'
      getMember
      push 't', r:this, ',_v8c'
      getMember
      push 't'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
      push 50
      setRegister r:8
      pop
      push r:this, ',_v8c'
      getMember
      push 't'
      getMember
      push 30
      lessThan
      not
      branchIfTrue label19
      push r:8, 50
      add
      setRegister r:8
      pop
     label19:
      push r:this, ',_v8c'
      getMember
      push '2)', r:this, ',_v8c'
      getMember
      push '2)'
      getMember
      push r:8, '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      add
      push 628
      modulo
      setMember
      push 50, r:this, ',_v8c'
      getMember
      push '2)'
      getMember
      push 100
      divide
      push 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push 50
      multiply
      add
      push 16777215, r:this, 3, 'miniwave'
      getVariable
      push '+]'
      getMember
      push '8_aeB('
      callMethod
      pop
      branch label21
     label20:
      push r:this, ',_v8c'
      delete
      pop
      push 100, 16777215, r:this, 3, 'miniwave'
      getVariable
      push '+]'
      getMember
      push '8_aeB('
      callMethod
      pop
     label21:
      push r:this, 'x'
      getMember
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '(l;('
      getMember
      greaterThan
      not
      branchIfTrue label22
      push 'x', r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '(l;('
      getMember
      push 6
      add
      push 'y', r:this, 'y'
      getMember
      push 0.0, 'Math'
      getVariable
      push 'random'
      callMethod
      push 2
      multiply
      push 1
      subtract
      push r:this, ']dc'
      getMember
      multiply
      add
      push ',N5T', 0.0, 3, 6
      random
      add
      subtract
      push '+N5T', 0.0, 'Math'
      getVariable
      push 'random'
      callMethod
      push 2
      multiply
      push 1
      subtract
      push 4
      multiply
      push '=M5T', 30
      random
      push 10
      divide
      push ']nBjo', FALSE, '3fEyH', 30, 7
      initObject
      setRegister r:10
      pop
      push r:10, '80{fB', 2, r:this, '0(}e'
      getMember
      push ';IDPE'
      callMethod
      setRegister r:11
      pop
      push r:this, 'x'
      getMember
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '(l;('
      getMember
      push r:this, ']dc'
      getMember
      add
      greaterThan
      not
      branchIfTrue label22
      push 100, 1, r:this, '0(}e'
      getMember
      push '5rGlk'
      callMethod
      pop
      push r:this, 'type'
      getMember
      push 1, r:this, '0(}e'
      getMember
      push ';*U}+'
      callMethod
      pop
      push 0.0, r:this, '1T3j'
      callMethod
      pop
     label22:
    end // of function 

    setMember
    push r:1, '5R{S ('
    function2 () (r:1='this')
      push r:this, ' m1('
      getMember
      push 0.0
      getMember
      push 1, 'Key'
      getVariable
      push 'isDown'
      callMethod
      not
      branchIfTrue label23
      push r:this, 'x', r:this, '0(}e'
      getMember
      push '4N}8_'
      getMember
      push 'min'
      getMember
      push r:this, ']dc'
      getMember
      add
      push r:this, 'x'
      getMember
      push r:this, '4N)zC'
      getMember
      push r:this, '[DxN'
      getMember
      multiply
      push '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      subtract
      push 2, 'Math'
      getVariable
      push 'max'
      callMethod
      setMember
     label23:
      push r:this, ' m1('
      getMember
      push 1
      getMember
      push 1, 'Key'
      getVariable
      push 'isDown'
      callMethod
      not
      branchIfTrue label24
      push r:this, 'x', r:this, '0(}e'
      getMember
      push '4N}8_'
      getMember
      push 'max'
      getMember
      push r:this, ']dc'
      getMember
      subtract
      push r:this, 'x'
      getMember
      push r:this, '4N)zC'
      getMember
      push r:this, '[DxN'
      getMember
      multiply
      push '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      add
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      setMember
     label24:
      push r:this, '-[ YO'
      getMember
      push 0.0
      greaterThan
      not
      dup
      not
      branchIfTrue label25
      pop
      push r:this, ' m1('
      getMember
      push 2
      getMember
      push 1, 'Key'
      getVariable
      push 'isDown'
      callMethod
     label25:
      dup
      not
      branchIfTrue label26
      pop
      push r:this, '6dvCR'
      getMember
      not
     label26:
      dup
      not
      branchIfTrue label27
      pop
      push 0.0, r:this, '6KFK+('
      callMethod
     label27:
      not
      branchIfTrue label28
      push 0.0, r:this, '()nBD'
      callMethod
      pop
     label28:
      push r:this, '54OVp'
      getMember
      dup
      not
      branchIfTrue label29
      pop
      push r:this, ' m1('
      getMember
      push 3
      getMember
      push 1, 'Key'
      getVariable
      push 'isDown'
      callMethod
     label29:
      dup
      not
      branchIfTrue label30
      pop
      push 0.0, r:this, '6KFK+('
      callMethod
     label30:
      not
      branchIfTrue label31
      push 0.0, r:this, '0G)c'
      callMethod
      pop
     label31:
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='this')
      push r:this, '-[ YO', 100
      setMember
      push 'x', r:this, 'x'
      getMember
      push 'y', r:this, 'y'
      getMember
      push 6
      subtract
      push ',N5T', 0.0, '+N5T', -3, '+};I2', TRUE, 5
      initObject
      setRegister r:3
      pop
      push r:3, 1, r:this, '0(}e'
      getMember
      push ' HkK}'
      callMethod
      setRegister r:2
      pop
      push r:this, 'type'
      getMember
      push 1
      add
      push 1, r:2, 'gotoAndStop'
      callMethod
      pop
      push r:2
      return
    end // of function 

    setMember
    push r:1, '0G)c'
    function2 () (r:1='this')
      push r:this, '54OVp', FALSE
      setMember
    end // of function 

    setMember
    push r:1, ')]6('
    function2 (r:3='-SN7F') (r:1='this')
      push r:'-SN7F', UNDEF
      equals
      not
      branchIfTrue label32
      push 1
      setRegister r:'-SN7F'
      pop
     label32:
      push r:this, ',_v8c'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label34
      push r:this, '5i(', r:this, '5i('
      getMember
      push r:'-SN7F'
      subtract
      setMember
      push TRUE, UNDEF, '1jr84(', 3, r:this, '0(}e'
      getMember
      push ';IDPE'
      callMethod
      setRegister r:2
      pop
      push r:2, 'x', r:this, 'x'
      getMember
      setMember
      push r:2, 'y', r:this, 'y'
      getMember
      setMember
      push r:2, ']nBjo', FALSE
      setMember
      push 1, 1, r:2, ' q)n'
      getMember
      push 'gotoAndStop'
      callMethod
      pop
      push r:this, '5i('
      getMember
      push 0.0
      greaterThan
      not
      not
      branchIfTrue label33
      push 0.0, r:this, '{r-z7'
      callMethod
      pop
      push r:2, '_xscale', 150
      setMember
      push r:2, '_yscale', 150
      setMember
      branch label34
     label33:
      push r:this, ',_v8c', 't', 80, '2)', 0.0, 2
      initObject
      setMember
      push r:2, '_xscale', 50
      setMember
      push r:2, '_yscale', 50
      setMember
     label34:
    end // of function 

    setMember
    push r:1, '39Q,v'
    function2 (r:2='9E0(') (r:1='this')
      push r:this, '6dvCR'
      getMember
      not
      branchIfTrue label35
      push r:this, '0LI3G', r:this, '0LI3G'
      getMember
      push r:'9E0('
      add
      setMember
      branch label36
     label35:
      push r:this, '6dvCR', TRUE
      setMember
      push r:this, '0LI3G', r:'9E0('
      setMember
      push 40, ')i=;X', ')i=;X', 3, r:this, 'attachMovie'
      callMethod
      pop
     label36:
    end // of function 

    setMember
    push r:1, '{r-z7'
    function2 () (r:1='this')
      push 14, '9b* S', 2, r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push '[bRwJ'
      callMethod
      pop
      push 0.0
      setRegister r:3
      pop
     label37:
      push r:3, 5
      lessThan
      not
      branchIfTrue label38
      push '5})E4(', 1, r:this, '0(}e'
      getMember
      push ';IDPE'
      callMethod
      setRegister r:2
      pop
      push r:this, 'type'
      getMember
      push 1
      add
      push 1, r:2, 'gotoAndStop'
      callMethod
      pop
      push r:3, 1
      add
      push 1, r:2, '0F3O'
      getMember
      push 'gotoAndStop'
      callMethod
      pop
      push r:2, 'x', r:this, 'x'
      getMember
      setMember
      push r:2, 'y', r:this, 'y'
      getMember
      setMember
      push r:2, ',N5T', 8, 200
      random
      push 100
      subtract
      multiply
      push 100
      divide
      setMember
      push r:2, '+N5T', 8, 0.0, 100
      random
      subtract
      multiply
      push 100
      divide
      setMember
      push r:2, '3fEyH', 16, 14
      random
      add
      setMember
      push r:2, '=M5T', 10, 200
      random
      push 100
      subtract
      multiply
      push 100
      divide
      setMember
      push r:3
      increment
      setRegister r:3
      pop
      branch label37
     label38:
      push 0.0, r:this, '4OIUS'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '4OIUS'
    function2 () (r:1='this')
      push 0.0, r:this, '0(}e'
      getMember
      push '1K72I('
      callMethod
      pop
      push 0.0, r:this, '1T3j'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '1T3j'
    function2 () (r:1='this', r:2='super')
      push r:this, '0(}e'
      getMember
      push '+3ul'
      delete
      pop
      push 0.0, r:super, '1T3j'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '0ga]O'
    function2 (r:2='t') (r:1='this')
      push r:t, UNDEF
      equals
      not
      branchIfTrue label39
      push 100
      setRegister r:t
      pop
     label39:
      push r:this, '*x}z]', r:t
      setMember
      push r:this, '[DxN', -1
      setMember
    end // of function 

    setMember
    push r:1, '6KFK+('
    function2 () (r:1='this')
      push r:this, '0(}e'
      getMember
      push '7=bN'
      getMember
      push 1
      equals
      dup
      branchIfTrue label40
      pop
      push r:this, '0(}e'
      getMember
      push '7=bN'
      getMember
      push 2
      equals
     label40:
      dup
      branchIfTrue label41
      pop
      push r:this, '0(}e'
      getMember
      push '7=bN'
      getMember
      push 4
      equals
     label41:
      return
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push '{ry;'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label42:
    pop
  end // of initMovieClip 626

  defineMovieClip 627 // total frames: 0
  end // of defineMovieClip 627
  
  exportAssets
    627 as '__Packages.miniwave.game.Main'
  end // of exportAssets
  
  initMovieClip 627
    constants '_global', 'miniwave', 'Object', '0(}e', '6i)C', '=w)l', '5q)A', 'prototype', '-XVH6', 'Array', '8Z]eO', '{4E0}', ' Z8Ys', '8p7(', ',CeLG', '8Ge;c', '(3cc', '4Yrb', '6U1)*', '+4FUS', 'gotoAndStop', '5G{', '4G{', '_y', '[w;(', '9l;(', '7=bN', ';7Sp4', 'level', 'name', 'boss', 'type', '3fEyH', 'list', ';N(', '7[swn', '9,T}W', '[bRwJ', 'setVolume', 'level ', ' Qjk]', 'endGame', ',0PWI(', ')zbG)', '(LdX,', '}=*uB(', 'length', ',)ii(', '[CzZ1', '-B-AZ', '5r8(c', '6}jsa', '2M-sY', ']=lsF', '-qlA6(', ')VjW8(', '36_zB', ',N6)C', '5;hhb', '2d[', '7J-V', '0YTB2', ']R4[6', '60n=3', '+_Y=3', '9Pu8B', '2P7V[', '}wCW3(', ')8e;N', '4N}8_', 'max', '(l;(', ')nl,T', '2UM2[', '-9NJ+(', '0)vdG', '4Dcgs', '}yG6+(', '8x()n', ';*U}+', '+3ul', '_visible', '((]fd', '4;omY', ',Ghq=(', 'Math', 'pow', ';6(Fe', '5rGlk', '5rbQP', ';*b', '+e S', '1T3j', 'min', 'x', '8y', ')1Y{(', '4e-1J', 'y', '[DxN', '4N)zC', 'round', '7nA4u', 'push', 'unshift', 'vous avez repoussé l\'attaque des fruits mutants', '1K72I(', '{]ckD', ',O=T+(', ']dGK,(', ' nt*K', '3+BJ4(', ';IwU', '!!! ERROR !!! getOptionType()\n', '6QL_6', ')[vkG', ']NLZd', 'mainWave', '7XfTN', '=Y(', '$cons', '$main', '$arcade', '$bestScore', '3ao2D', '$bestLevel', '=PTc7(', 'Key', 'isDown', '2B{Tq', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '0(}e'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '0(}e', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '0(}e'
    getMember
    push '6i)C'
    getMember
    not
    not
    branchIfTrue label70
    push 'miniwave'
    getVariable
    push '0(}e'
    getMember
    push '6i)C'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '0(}e'
    getMember
    push '6i)C'
    getMember
    push 'miniwave'
    getVariable
    push '5q)A'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '=w)l'
      callMethod
      pop
      push r:this, '-XVH6', 0.0, 'Array'
      new
      setMember
      push r:this, '8Z]eO', 0.0, 'Array'
      new
      setMember
      push 0.0, r:this, '{4E0}'
      callMethod
      pop
      push r:this, ' Z8Ys', '8p7(', r:this, ',CeLG', '8Ge;c', '(3cc', 0.0, 3
      initObject
      setMember
      push r:this, '4Yrb', 0.0
      setMember
    end // of function 

    setMember
    push r:1, '6U1)*'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6U1)*'
      callMethod
      pop
      push 1, 1, r:this, '+4FUS'
      getMember
      push 'gotoAndStop'
      callMethod
      pop
      push 1, 1, r:this, '+4FUS'
      getMember
      push '5G{'
      getMember
      push 'gotoAndStop'
      callMethod
      pop
      push 2, 1, r:this, '+4FUS'
      getMember
      push '4G{'
      getMember
      push 'gotoAndStop'
      callMethod
      pop
      push r:this, '+4FUS'
      getMember
      push '_y', r:this, '[w;('
      getMember
      push '9l;('
      getMember
      setMember
    end // of function 

    setMember
    push r:1, '8Ge;c'
    function2 (r:12='7=bN') (r:1='this')
      push r:this, '7=bN', r:'7=bN'
      setMember
      push r:this, '7=bN'
      getMember
      setRegister r:0
      push 0.0
      strictEquals
      branchIfTrue label3
      push r:0, 1
      strictEquals
      branchIfTrue label8
      push r:0, 2
      strictEquals
      branchIfTrue label9
      push r:0, 3
      strictEquals
      branchIfTrue label12
      push r:0, 4
      strictEquals
      branchIfTrue label13
      branch label14
     label3:
      push r:this, ';7Sp4'
      getMember
      push r:this, 'level'
      getMember
      getMember
      setRegister r:3
      pop
      push r:3, UNDEF
      equals
      not
      not
      branchIfTrue label6
      push r:3, 'name'
      getMember
      push 'boss'
      equals
      not
      branchIfTrue label4
      push 'type', 3, '3fEyH', 160, 'list', 0.0
      initArray
      push ';N(', '8p7(', r:this, ',CeLG', '8Ge;c', '(3cc', 4, 3
      initObject
      push 4
      initObject
      setRegister r:4
      pop
      branch label5
     label4:
      push 33, '7[swn', 2, r:this, '[w;('
      getMember
      push '9,T}W'
      getMember
      push '[bRwJ'
      callMethod
      pop
      push 80, 33, 2, r:this, '[w;('
      getMember
      push '9,T}W'
      getMember
      push 'setVolume'
      callMethod
      pop
      push 'type', 0.0, '3fEyH', 80, 'list', r:3, 'name'
      getMember
      push 'level ', r:this, 'level'
      getMember
      push 1
      add
      add
      push 2
      initArray
      push ';N(', '8p7(', r:this, ',CeLG', '8Ge;c', '(3cc', 1, 3
      initObject
      push 4
      initObject
      setRegister r:4
      pop
     label5:
      branch label7
     label6:
      push 'type', 2, '3fEyH', 160, 'list', 0.0, r:this, ' Qjk]'
      callMethod
      push 1
      initArray
      push ';N(', '8p7(', r:this, ',CeLG', 'endGame', 2
      initObject
      push 4
      initObject
      setRegister r:4
      pop
     label7:
      push r:4, 1, r:this, ',0PWI('
      callMethod
      pop
      branch label14
     label8:
      push 0.0, r:this, ')zbG)'
      callMethod
      pop
      push 0.0, r:this, '(LdX,'
      callMethod
      pop
      branch label14
     label9:
      push 0.0
      setRegister r:2
      pop
     label10:
      push r:2, r:this, '}=*uB('
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label11
      push 0.0, r:this, '}=*uB('
      getMember
      push r:2
      getMember
      push ',)ii('
      callMethod
      pop
      push r:2
      increment
      setRegister r:2
      pop
      branch label10
     label11:
      push 0.0, r:this, '(LdX,'
      callMethod
      pop
      branch label14
     label12:
      push r:this, '3fEyH', r:this, '[CzZ1'
      getMember
      setMember
      push 0.0, r:this, '-B-AZ'
      callMethod
      pop
      branch label14
     label13:
      push 0.0, r:this, '5r8(c'
      callMethod
      pop
      push 0.0, r:this, '(LdX,'
      callMethod
      pop
      branch label14
     label14:
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:this, '2M-sY'
      callMethod
      not
      branchIfTrue label15
      push UNDEF
      return
     label15:
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push r:this, '7=bN'
      getMember
      setRegister r:0
      push 0.0
      strictEquals
      branchIfTrue label16
      push r:0, 1
      strictEquals
      branchIfTrue label17
      push r:0, 2
      strictEquals
      branchIfTrue label19
      push r:0, 3
      strictEquals
      branchIfTrue label22
      push r:0, 4
      strictEquals
      branchIfTrue label24
      branch label25
     label16:
      branch label25
     label17:
      push 0.0, r:this, ']=lsF'
      callMethod
      not
      branchIfTrue label18
      push 2, 1, r:this, '8Ge;c'
      callMethod
      pop
     label18:
      branch label25
     label19:
      push r:this, '}=*uB('
      getMember
      push 'length'
      getMember
      push 0.0
      greaterThan
      not
      branchIfTrue label20
      push 0.0, r:this, '-qlA6('
      callMethod
      pop
      push 0.0, r:this, ')VjW8('
      callMethod
      pop
     label20:
      push 0.0, r:this, '36_zB'
      callMethod
      pop
      push r:this, '[w;('
      getMember
      push ',N6)C'
      getMember
      not
      branchIfTrue label21
      push 0.0, r:this, '5;hhb'
      callMethod
      pop
     label21:
      branch label25
     label22:
      push r:this, '3fEyH', r:this, '3fEyH'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
      push r:this, '3fEyH'
      getMember
      push r:this, '[CzZ1'
      getMember
      divide
      setRegister r:4
      pop
      push r:this, '0YTB2'
      getMember
      push r:this, 'level'
      getMember
      subtract
      push r:4
      multiply
      setRegister r:3
      pop
      push r:this, '0YTB2'
      getMember
      push r:3
      subtract
      push r:this, ']R4[6'
      getMember
      multiply
      setRegister r:5
      pop
      push r:5, 1, r:this, '60n=3'
      callMethod
      pop
      push r:this, '3fEyH'
      getMember
      push 0.0
      lessThan
      not
      branchIfTrue label23
      push r:this, 'level', r:this, '0YTB2'
      getMember
      setMember
      push 0.0, 1, r:this, '8Ge;c'
      callMethod
      pop
     label23:
      branch label25
     label24:
      push 0.0, r:this, '5;hhb'
      callMethod
      pop
      branch label25
     label25:
      push 0.0, r:this, '+_Y=3'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ')zbG)'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ')zbG)'
      callMethod
      pop
      push r:this, '9Pu8B', 0.0
      setMember
      push r:this, '2P7V[', r:this, '}wCW3('
      getMember
      setMember
      push r:this, 'name'
      getMember
      push ')8e;N'
      equals
      not
      branchIfTrue label27
      push r:this, 'level'
      getMember
      push 48
      strictEquals
      branchIfTrue label26
      branch label27
     label26:
      push r:this, '4N}8_'
      getMember
      push 'max', r:this, '[w;('
      getMember
      push '(l;('
      getMember
      push 60
      add
      setMember
      branch label27
     label27:
    end // of function 

    setMember
    push r:1, '5r8(c'
    function2 () (r:1='this')
      push 0.0
      initObject
      setRegister r:2
      pop
      push r:this, 'boss', r:2, ')nl,T', 2, r:this, '2UM2['
      callMethod
      setMember
    end // of function 

    setMember
    push r:1, '-9NJ+('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '-9NJ+('
      callMethod
      pop
      push r:this, '0)vdG', '4Dcgs', 1, r:this, '}yG6+('
      callMethod
      setMember
      push 0.0
      setRegister r:3
      pop
     label28:
      push r:3, r:this, '8x()n'
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label29
      push r:this, '8x()n'
      getMember
      push 'length'
      getMember
      push r:3, 1
      add
      subtract
      setRegister r:4
      pop
      push r:this, '8x()n'
      getMember
      push r:4
      getMember
      push 1, r:this, '0)vdG'
      getMember
      push ';*U}+'
      callMethod
      pop
      push r:3
      increment
      setRegister r:3
      pop
      branch label28
     label29:
    end // of function 

    setMember
    push r:1, '(LdX,'
    function2 () (r:1='this')
      push r:this, '+3ul'
      getMember
      push '_visible'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label30
      push 0.0, r:this, '((]fd'
      callMethod
      pop
     label30:
    end // of function 

    setMember
    push r:1, '((]fd'
    function2 () (r:1='this')
      push 0.0, r:this, '0)vdG'
      getMember
      push '4;omY'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '36_zB'
    function2 () (r:1='this')
      push r:this, ',Ghq=('
      getMember
      push 0.0
      greaterThan
      not
      dup
      not
      branchIfTrue label31
      pop
      push r:this, '8Z]eO'
      getMember
      push 'length'
      getMember
      push 0.0
      equals
     label31:
      dup
      not
      branchIfTrue label32
      pop
      push r:this, '-XVH6'
      getMember
      push 'length'
      getMember
      push 0.0
      equals
     label32:
      not
      branchIfTrue label33
      push r:this, '0YTB2', r:this, 'level'
      getMember
      push 1
      add
      setMember
      push 3, 1, r:this, '8Ge;c'
      callMethod
      pop
     label33:
    end // of function 

    setMember
    push r:1, '-qlA6('
    function2 () (r:1='this')
      push r:this, '2P7V['
      getMember
      push 0.0
      lessThan
      not
      branchIfTrue label36
      push r:this, '2P7V[', r:this, '}wCW3('
      getMember
      setMember
      push 3, r:this, '9Pu8B'
      getMember
      push 1
      add
      push 3, 2, 'Math'
      getVariable
      push 'pow'
      callMethod
      add
      random
      not
      dup
      not
      branchIfTrue label34
      pop
      push r:this, '8Z]eO'
      getMember
      push 'length'
      getMember
      push 0.0
      equals
     label34:
      not
      branchIfTrue label35
      push 0.0, r:this, ';6(Fe'
      callMethod
      pop
     label35:
      branch label37
     label36:
      push r:this, '2P7V[', r:this, '2P7V['
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
     label37:
    end // of function 

    setMember
    push r:1, '5rGlk'
    function2 (r:2='8)') (r:1='this')
      push 15, '5rbQP', 2, r:this, '[w;('
      getMember
      push ';*b'
      getMember
      push '[bRwJ'
      callMethod
      pop
     label38:
      push r:this, '}=*uB('
      getMember
      push 'length'
      getMember
      push 0.0
      greaterThan
      not
      branchIfTrue label39
      push 0.0, r:this, '}=*uB('
      getMember
      push 0.0
      getMember
      push '+e S'
      callMethod
      pop
      branch label38
     label39:
      push r:this, '8Z]eO'
      getMember
      push 'length'
      getMember
      push 0.0
      greaterThan
      not
      branchIfTrue label40
      push 0.0, r:this, '8Z]eO'
      getMember
      push 0.0
      getMember
      push '1T3j'
      callMethod
      pop
      branch label39
     label40:
      push r:this, '-XVH6'
      getMember
      push 'length'
      getMember
      push 0.0
      greaterThan
      not
      branchIfTrue label41
      push 0.0, r:this, '-XVH6'
      getMember
      push 0.0
      getMember
      push '1T3j'
      callMethod
      pop
      branch label40
     label41:
      push 0.0, r:this, '-B-AZ'
      callMethod
      pop
      push r:this, '0YTB2', r:this, ';7Sp4'
      getMember
      push 'length'
      getMember
      push 1
      subtract
      push r:this, 'level'
      getMember
      push r:'8)'
      add
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      setMember
      push 3, 1, r:this, '8Ge;c'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ';6(Fe'
    function2 () (r:1='this')
      push 2
      random
      push 2
      multiply
      push 1
      subtract
      setRegister r:5
      pop
      push r:this, '[w;('
      getMember
      push '9l;('
      getMember
      push 2
      divide
      setRegister r:2
      pop
      push 'x', r:2, r:2, 'miniwave'
      getVariable
      push '8y'
      getMember
      push ')1Y{('
      getMember
      push '4e-1J'
      getMember
      add
      push r:5
      multiply
      subtract
      push 'y', 20, '[DxN', r:5, '4N)zC', 1, 10
      random
      push 10
      divide
      add
      push r:this, '9Pu8B'
      getMember
      push 0.5
      multiply
      add
      push 3, r:this, 'level'
      getMember
      push 50
      divide
      push 1, 'Math'
      getVariable
      push 'round'
      callMethod
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      add
      push 4
      initObject
      setRegister r:4
      pop
      push r:4, '7nA4u', 2, r:this, '2UM2['
      callMethod
      setRegister r:3
      pop
      push r:3, 1, r:this, '8Z]eO'
      getMember
      push 'push'
      callMethod
      pop
      push r:this, '9Pu8B', r:this, '9Pu8B'
      getMember
      increment
      setMember
    end // of function 

    setMember
    push r:1, ';*U}+'
    function2 (r:2='8)') (r:1='this')
      push r:'8)', 1, r:this, '8x()n'
      getMember
      push 'unshift'
      callMethod
      pop
      push r:'8)', 1, r:this, '0)vdG'
      getMember
      push ';*U}+'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' Qjk]'
    function ()
      push 'vous avez repoussé l\'attaque des fruits mutants'
      return
    end // of function 

    setMember
    push r:1, '1K72I('
    function2 () (r:1='this')
      push r:this, '8x()n'
      getMember
      push 'length'
      getMember
      push 0.0
      greaterThan
      not
      branchIfTrue label49
      push 0.0, r:this, '-B-AZ'
      callMethod
      pop
      push r:this, '7=bN'
      getMember
      push 2
      equals
      not
      branchIfTrue label46
      push 0.0, 'Array'
      new
      setRegister r:3
      pop
      push 0.0
      setRegister r:2
      pop
     label42:
      push r:2, r:this, '}=*uB('
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label43
      push r:this, '}=*uB('
      getMember
      push r:2
      getMember
      push 1, r:3, 'push'
      callMethod
      pop
      push r:2
      increment
      setRegister r:2
      pop
      branch label42
     label43:
      push 0.0
      setRegister r:2
      pop
     label44:
      push r:2, r:3, 'length'
      getMember
      lessThan
      not
      branchIfTrue label45
      push r:2, 2
      multiply
      push 1, r:3, r:2
      getMember
      push '{]ckD'
      callMethod
      pop
      push r:2
      increment
      setRegister r:2
      pop
      branch label44
     label45:
      push r:this, '7=bN', 1
      setMember
      branch label47
     label46:
      push 0.0, r:this, '((]fd'
      callMethod
      pop
     label47:
      push r:this, '7=bN'
      getMember
      push 4
      equals
      not
      branchIfTrue label48
      push 0.0, r:this, 'boss'
      getMember
      push '1K72I('
      callMethod
      pop
     label48:
      branch label50
     label49:
      push 'type', 1, 'list', 0.0
      initArray
      push 2
      initObject
      setRegister r:4
      pop
      push r:4, 1, r:this, ',O=T+('
      callMethod
      pop
     label50:
    end // of function 

    setMember
    push r:1, '{4E0}'
    function2 () (r:1='this')
      push r:this, ']dGK,(', 8, 5, 5, 5, 2, 6, 12, 1, 5, 20, 40, 11
      initArray
      setMember
      push r:this, ' nt*K', 0.0
      setMember
      push 0.0
      setRegister r:2
      pop
     label51:
      push r:2, r:this, ']dGK,('
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label52
      push r:this, ' nt*K', r:this, ' nt*K'
      getMember
      push r:this, ']dGK,('
      getMember
      push r:2
      getMember
      add
      setMember
      push r:2
      increment
      setRegister r:2
      pop
      branch label51
     label52:
    end // of function 

    setMember
    push r:1, '3+BJ4('
    function2 () (r:1='this', r:2='_root')
      push r:this, ' nt*K'
      getMember
      random
      setRegister r:5
      pop
      push 0.0
      setRegister r:4
      pop
      push 0.0
      setRegister r:3
      pop
     label53:
      push r:3, r:this, ']dGK,('
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label55
      push r:4, r:this, ']dGK,('
      getMember
      push r:3
      getMember
      add
      setRegister r:4
      pop
      push r:4, r:5
      greaterThan
      not
      branchIfTrue label54
      push r:3
      return
     label54:
      push r:3
      increment
      setRegister r:3
      pop
      branch label53
     label55:
      push r:_root, ';IwU', r:_root, ';IwU'
      getMember
      push '!!! ERROR !!! getOptionType()\n'
      add
      setMember
    end // of function 

    setMember
    push r:1, '6QL_6'
    function2 (r:5='x', r:4='y') (r:1='this')
      push 'x', r:x, 'y', r:y, 'type', 0.0, r:this, '3+BJ4('
      callMethod
      push 3
      initObject
      setRegister r:3
      pop
      push r:3, ')[vkG', 2, r:this, '2UM2['
      callMethod
      setRegister r:2
      pop
      push r:2, 1, r:this, '-XVH6'
      getMember
      push 'push'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ']NLZd'
    function ()
      push 'mainWave'
      return
    end // of function 

    setMember
    push r:1, 'endGame'
    function2 () (r:1='this', r:2='super')
      push r:this, 'name'
      getMember
      push ')8e;N'
      equals
      not
      branchIfTrue label57
      push 0.0, r:this, '7XfTN'
      callMethod
      setRegister r:3
      pop
      push r:3, r:this, '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$cons'
      getMember
      push '$main'
      getMember
      greaterThan
      not
      branchIfTrue label56
      push r:this, '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$cons'
      getMember
      push '$main', r:3
      setMember
     label56:
      push r:this, '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$arcade'
      getMember
      push '$bestScore', r:this, '3ao2D'
      getMember
      push r:this, '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$arcade'
      getMember
      push '$bestScore'
      getMember
      push 2, 'Math'
      getVariable
      push 'max'
      callMethod
      setMember
      push r:this, '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$arcade'
      getMember
      push '$bestLevel', r:this, 'level'
      getMember
      push 1
      add
      push r:this, '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$arcade'
      getMember
      push '$bestLevel'
      getMember
      push 2, 'Math'
      getVariable
      push 'max'
      callMethod
      setMember
     label57:
      push 0.0, r:super, 'endGame'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '=PTc7('
    function2 (r:2='[DxN') (r:1='this')
      push 1, 16, 1, 'Key'
      getVariable
      push 'isDown'
      callMethod
      push 200
      multiply
      add
      push r:'[DxN'
      multiply
      push 1, r:this, '5rGlk'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '5;hhb'
    function2 () (r:1='this')
      push r:this, '4Yrb'
      getMember
      push 0.0
      lessThan
      not
      branchIfTrue label67
      push 33, 1, 'Key'
      getVariable
      push 'isDown'
      callMethod
      not
      branchIfTrue label58
      push 1, 1, r:this, '=PTc7('
      callMethod
      pop
     label58:
      push r:this, '4Yrb', 4
      setMember
      push 34, 1, 'Key'
      getVariable
      push 'isDown'
      callMethod
      not
      branchIfTrue label59
      push -1, 1, r:this, '=PTc7('
      callMethod
      pop
     label59:
      push r:this, '4Yrb', 4
      setMember
      push 96, 1, 'Key'
      getVariable
      push 'isDown'
      callMethod
      not
      branchIfTrue label60
      push 0.0, 1, r:this, ';*U}+'
      callMethod
      pop
     label60:
      push r:this, '4Yrb', 4
      setMember
      push 97, 1, 'Key'
      getVariable
      push 'isDown'
      callMethod
      not
      branchIfTrue label61
      push 1, 1, r:this, ';*U}+'
      callMethod
      pop
     label61:
      push r:this, '4Yrb', 4
      setMember
      push 98, 1, 'Key'
      getVariable
      push 'isDown'
      callMethod
      not
      branchIfTrue label62
      push 2, 1, r:this, ';*U}+'
      callMethod
      pop
     label62:
      push r:this, '4Yrb', 4
      setMember
      push 99, 1, 'Key'
      getVariable
      push 'isDown'
      callMethod
      not
      branchIfTrue label63
      push 3, 1, r:this, ';*U}+'
      callMethod
      pop
     label63:
      push r:this, '4Yrb', 4
      setMember
      push 100, 1, 'Key'
      getVariable
      push 'isDown'
      callMethod
      not
      branchIfTrue label64
      push 4, 1, r:this, ';*U}+'
      callMethod
      pop
     label64:
      push r:this, '4Yrb', 4
      setMember
      push 101, 1, 'Key'
      getVariable
      push 'isDown'
      callMethod
      not
      branchIfTrue label65
      push 5, 1, r:this, ';*U}+'
      callMethod
      pop
     label65:
      push r:this, '4Yrb', 4
      setMember
      push 36, 1, 'Key'
      getVariable
      push 'isDown'
      callMethod
      not
      branchIfTrue label66
      push 0.0, r:this, ';6(Fe'
      callMethod
      pop
     label66:
      push r:this, '4Yrb', 4
      setMember
      branch label68
     label67:
      push r:this, '4Yrb', r:this, '4Yrb'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
     label68:
    end // of function 

    setMember
    push r:1, '2B{Tq'
    function2 (r:2='name') (r:1='super')
      push r:name, UNDEF
      equals
      not
      branchIfTrue label69
      push '$main'
      setRegister r:name
      pop
     label69:
      push r:name, 1, r:super, '2B{Tq'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '}wCW3(', 100
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '0(}e'
    getMember
    push '6i)C'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label70:
    pop
  end // of initMovieClip 627

  defineMovieClip 628 // total frames: 0
  end // of defineMovieClip 628
  
  exportAssets
    628 as '__Packages.miniwave.panel.Life'
  end // of exportAssets
  
  initMovieClip 628
    constants '_global', 'miniwave', 'Object', ')1]5F', '(_7D', '=w)l', 'MovieClip', 'prototype', 'size', '_x', '0(}e', '[w;(', '(l;(', '_y', '9l;(', '4Acl;', '3fEyH', '89PHI', 'Array', '1U,WA', ';*U}+', '+3ul', '5F5}m', ' c2q', 'attachMovie', 'length', '_xscale', '_yscale', 'push', '4;omY', '*T9LK', 'pop', '6}jsa', 'Math', 'abs', ',qrhG(', '4eQ90(', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ')1]5F'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ')1]5F', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ')1]5F'
    getMember
    push '(_7D'
    getMember
    not
    not
    branchIfTrue label5
    push 'miniwave'
    getVariable
    push ')1]5F'
    getMember
    push '(_7D'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push ')1]5F'
    getMember
    push '(_7D'
    getMember
    push 'MovieClip'
    getVariable
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this')
      push r:this, 'size'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label3
      push r:this, 'size', 8
      setMember
     label3:
      push r:this, '_x', r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '(l;('
      getMember
      setMember
      push r:this, '_y', r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '9l;('
      getMember
      setMember
      push r:this, '4Acl;', 0.0
      setMember
      push r:this, '3fEyH', 0.0
      setMember
      push r:this, '89PHI', 0.0, 'Array'
      new
      setMember
      push r:this, '1U,WA', 0.0, 'Array'
      new
      setMember
    end // of function 

    setMember
    push r:1, ';*U}+'
    function2 (r:4='[g(') (r:1='this')
      push r:this, '4Acl;'
      getMember
      push r:this, '4Acl;', r:this, '4Acl;'
      getMember
      increment
      setMember
      setRegister r:3
      pop
      push r:3, '+3ul', r:3
      add
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '5F5}m'
      getMember
      push r:'[g('
      getMember
      push ' c2q'
      getMember
      push 3, r:this, 'attachMovie'
      callMethod
      pop
      push r:this, '+3ul', r:3
      add
      getMember
      setRegister r:2
      pop
      push r:2, '_x', 0.0, r:this, '89PHI'
      getMember
      push 'length'
      getMember
      push 0.5
      add
      subtract
      push r:this, 'size'
      getMember
      push 4
      add
      multiply
      setMember
      push r:2, '_y', -6
      setMember
      push r:2, '_xscale', r:this, 'size'
      getMember
      push 100
      multiply
      push 20
      divide
      setMember
      push r:2, '_yscale', r:this, 'size'
      getMember
      push 100
      multiply
      push 20
      divide
      setMember
      push r:2, 1, r:this, '89PHI'
      getMember
      push 'push'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '4;omY'
    function2 () (r:1='this')
      push r:this, '*T9LK', 0.0, r:this, '89PHI'
      getMember
      push 'pop'
      callMethod
      setMember
      push r:this, '89PHI'
      getMember
      push 'length'
      getMember
      push 0.0
      equals
      return
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this')
      push r:this, '*T9LK'
      getMember
      push UNDEF
      equals
      not
      not
      branchIfTrue label4
      push 10
      setRegister r:2
      pop
      push r:this, '*T9LK'
      getMember
      push '_y', r:this, '*T9LK'
      getMember
      push '_y'
      getMember
      push 0.9
      multiply
      push r:2, 0.1
      multiply
      add
      setMember
      push r:this, '*T9LK'
      getMember
      push '_y'
      getMember
      push r:2
      subtract
      push 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      push 5
      lessThan
      not
      branchIfTrue label4
      push 0.0, r:this, '0(}e'
      getMember
      push ',qrhG('
      callMethod
      pop
      push r:this, '*T9LK'
      delete
      pop
     label4:
    end // of function 

    setMember
    push r:1, '4eQ90(', 50
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push ')1]5F'
    getMember
    push '(_7D'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label5:
    pop
  end // of initMovieClip 628

  defineMovieClip 629 // total frames: 0
  end // of defineMovieClip 629
  
  exportAssets
    629 as '__Packages.miniwave.sp.Boss'
  end // of exportAssets
  
  initMovieClip 629
    constants '_global', 'miniwave', 'Object', '8y', '=K)a', '=w)l', '5u;}4', 'prototype', ')(w+4', '9I0x3(', '8Ge;c', 'stop', '4k8;L', '7=bN', '+i(g', ' VZ*2', ',}}BD', ',,_)Y', 'x', '0(}e', '[w;(', '(l;(', 'y', '5 Z+V', '2],fJ', '5i(', '96}b', ',N5T', '+N5T', '*zWsa', '(;;(', 'Array', '2)', '2(', '4y', ' q1E)', 'type', '4NWxl', '3fEyH', ' }Mw4(', '2lv_1(', '4N(', '3N(', 'gotoAndStop', 'h0', 'h1', '63WwF', '_x', '_y', 'Math', 'cos', 'sin', '=M5T', ']nBjo', '(mlUw', ';IDPE', '_rotation', '8G}_+(', '[)kLd', '[47*D(', '2D0X3', '_xscale', 'h', '3(', '55(', '45(', ')5(', '}_(', '(1(', ';[(', '7+z', '8+z', '4N)zC', '[DxN', '2i(', '+)N,p', '+8{l', '4eQ90(', ']dc', ')qGaQ', '_visible', '0Umk]', '43,g*(', ')1(', '0)Jso', '$arcade', '*0GPC', 'giveItem', '3I2[((', 'clear', ',eQ55', '+olm4(', 'p', '+]', '8_aeB(', 'atan2', 'sqrt', '6}jsa', '*r,3C(', '15q9I(', '2d[', '7J-V', '9l;(', '570=z', '=WCn*(', '-2)ve', '0w*(((', 'max', 'min', 'pow', '=jRD5(', '_yscale', ']3s],', '{ZS7N', '*CcbI', '6l{Wy', '8-FUS', ']oVzo', '+)', '9nAeE', '7o  1(', '+3ul', '0ga]O', ']F)y0(', '1T3j', '8D(]0', '}=*uB(', 'length', ' DVkC', '-ySDR', ']dk1(', '3,(', ']1y57', 'round', ')j(', '(j(', 'abs', ']9;(', '[9;(', '*W0ZQ', '(,J R', '0zL=R', 'lineStyle', 'moveTo', 'curveTo', ')]6(', '7W4BT', '+v0ER', '9H(sU', '*-4N2', '-oUeu', '-UU_I(', ',eX{I(', '[pJN8(', '1U_vK', 'random', '}cj8F(', '=iAcX', '5uYzV', '}W}DT', ',F}tl', '-)', '*)', '}bMO(', '1K72I(', ';qbSN', '0YTB2', 'level', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push '=K)a'
    getMember
    not
    not
    branchIfTrue label211
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push '=K)a'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push '=K)a'
    getMember
    push 'miniwave'
    getVariable
    push '5u;}4'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '=w)l'
      callMethod
      pop
      push r:this, ')(w+4', FALSE
      setMember
      push r:this, '9I0x3(', 1
      setMember
      push 0.0, 1, r:this, '8Ge;c'
      callMethod
      pop
      push 0.0, r:this, 'stop'
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '8Ge;c'
    function2 (r:35='7=bN') (r:1='this')
      push r:this, '7=bN', r:'7=bN'
      setMember
      push r:this, '7=bN'
      getMember
      setRegister r:0
      push 0.0
      strictEquals
      branchIfTrue label3
      push r:0, 1
      strictEquals
      branchIfTrue label6
      push r:0, 2
      strictEquals
      branchIfTrue label7
      push r:0, 3
      strictEquals
      branchIfTrue label8
      push r:0, 9
      strictEquals
      branchIfTrue label9
      push r:0, 10
      strictEquals
      branchIfTrue label10
      push r:0, 11
      strictEquals
      branchIfTrue label15
      push r:0, 12
      strictEquals
      branchIfTrue label18
      push r:0, 13
      strictEquals
      branchIfTrue label21
      push r:0, 14
      strictEquals
      branchIfTrue label22
      push r:0, 19
      strictEquals
      branchIfTrue label23
      push r:0, 20
      strictEquals
      branchIfTrue label24
      push r:0, 21
      strictEquals
      branchIfTrue label27
      push r:0, 22
      strictEquals
      branchIfTrue label30
      push r:0, 23
      strictEquals
      branchIfTrue label31
      push r:0, 24
      strictEquals
      branchIfTrue label34
      push r:0, 25
      strictEquals
      branchIfTrue label37
      push r:0, 29
      strictEquals
      branchIfTrue label38
      push r:0, 30
      strictEquals
      branchIfTrue label39
      branch label45
     label3:
      push r:this, '+i(g', 0.0
      setMember
      push r:this, ' VZ*2', r:this, ',}}BD'
      getMember
      push ',,_)Y'
      getMember
      setMember
      push r:this, 'x', r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '(l;('
      getMember
      push 2
      divide
      setMember
      push r:this, 'y', -100
      setMember
      push r:this, '5 Z+V', r:this, '2],fJ'
      getMember
      setMember
      push r:this, '5i(', r:this, '5 Z+V'
      getMember
      setMember
      push r:this, '96}b', r:this, ',}}BD'
      getMember
      setMember
      push r:this, ',N5T', 0.0
      setMember
      push r:this, '+N5T', 0.0
      setMember
      push r:this, '*zWsa', 0.0
      setMember
      push r:this, '(;;(', 0.0, 'Array'
      new
      setMember
      push 0.0
      setRegister r:4
      pop
     label4:
      push r:4, 2
      lessThan
      not
      branchIfTrue label5
      push '2)', 157, '2(', 0.0, '4y', 5, 5
      random
      add
      push 3
      initObject
      setRegister r:16
      pop
      push r:this, '(;;('
      getMember
      push r:4, r:16
      setMember
      push r:4
      increment
      setRegister r:4
      pop
      branch label4
     label5:
      branch label45
     label6:
      branch label45
     label7:
      push r:this, ' q1E)', 'type', 0.0, '4NWxl', 3, '3fEyH', 0.0, ' }Mw4(', 2, 4
      initObject
      setMember
      push r:this, 'x'
      getMember
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '(l;('
      getMember
      push 2
      divide
      lessThan
      push 2
      multiply
      push 1
      subtract
      setRegister r:3
      pop
      push r:this, ',N5T', r:this, ',N5T'
      getMember
      push 15, r:3
      multiply
      add
      setMember
      push r:this, '9I0x3(', 8
      setMember
      push r:this, '*zWsa', 100
      setMember
      branch label45
     label8:
      push r:this, ' q1E)', 'type', 1, '4NWxl', 10, '3fEyH', 36, ' }Mw4(', 3, 4
      initObject
      setMember
      push r:this, '*zWsa', 200
      setMember
      branch label45
     label9:
      push 0.0, r:this, '2lv_1('
      callMethod
      pop
      push r:this, '3fEyH', 20
      setMember
      push r:this, '(;;('
      getMember
      push '4N(', r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '(l;('
      getMember
      push 2
      divide
      setMember
      push r:this, '(;;('
      getMember
      push '3N(', 120
      setMember
      push r:this, ',N5T', 0.0
      setMember
      push r:this, '+N5T', 0.0
      setMember
      branch label45
     label10:
      push 2, 1, r:this, 'gotoAndStop'
      callMethod
      pop
      push 0.0, r:this, 'h0'
      getMember
      push 'stop'
      callMethod
      pop
      push 0.0, r:this, 'h1'
      getMember
      push 'stop'
      callMethod
      pop
      push r:this, '+i(g', 1
      setMember
      push r:this, ' VZ*2', r:this, '63WwF'
      getMember
      push ',,_)Y'
      getMember
      setMember
      push 0.0
      setRegister r:4
      pop
     label11:
      push r:4, 12
      lessThan
      not
      branchIfTrue label12
      push r:4, 12
      divide
      push 6.28
      multiply
      setRegister r:5
      pop
      push 3, 30
      random
      push 10
      divide
      add
      setRegister r:15
      pop
      push 'x', r:this, '_x'
      getMember
      push 'y', r:this, '_y'
      getMember
      push ',N5T', r:5, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push r:15
      multiply
      push '+N5T', r:5, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push r:15
      multiply
      push '=M5T', 4, '3fEyH', 8, 12
      random
      add
      push ']nBjo', FALSE, 7
      initObject
      setRegister r:7
      pop
      push r:7, '(mlUw', 2, r:this, '0(}e'
      getMember
      push ';IDPE'
      callMethod
      setRegister r:2
      pop
      push r:2, '_rotation', r:5, 0.0174532925199433
      divide
      setMember
      push r:4
      increment
      setRegister r:4
      pop
      branch label11
     label12:
      push r:this, '5 Z+V', r:this, '8G}_+('
      getMember
      setMember
      push r:this, '5i(', r:this, '5 Z+V'
      getMember
      setMember
      push r:this, '*zWsa', 100
      setMember
      push 0.0, r:this, '[)kLd'
      getMember
      push '[47*D('
      getMember
      push 'stop'
      callMethod
      pop
      push 0.0, r:this, '[)kLd'
      getMember
      push '2D0X3'
      getMember
      push 'stop'
      callMethod
      pop
      push r:this, '3fEyH', 10
      setMember
      push r:this, '96}b', r:this, '[)kLd'
      getMember
      setMember
      push r:this, ',N5T', 0.0
      setMember
      push r:this, '+N5T', 0.0
      setMember
      push r:this, 'h1'
      getMember
      push '_xscale', -100
      setMember
      push 0.0
      setRegister r:4
      pop
     label13:
      push r:4, 2
      lessThan
      not
      branchIfTrue label14
      push r:this, 'h', r:4
      add
      getMember
      setRegister r:22
      pop
      push r:4, 2
      multiply
      push 1
      subtract
      setRegister r:3
      pop
      push r:22, 'x', r:3, 20
      multiply
      setMember
      push r:22, 'y', 18
      setMember
      push r:22, '3(', 0.0
      setMember
      push r:22, '55(', r:3, 30
      multiply
      setMember
      push r:22, '45(', 15
      setMember
      push r:22, ')5(', 0.0
      setMember
      push r:4
      increment
      setRegister r:4
      pop
      branch label13
     label14:
      push r:this, '(;;(', '}_(', 0.0, '(1(', 10, '3N(', 80, ';[(', 30, '7+z', 1, '8+z', 1, '4N)zC', 2, '[DxN', 1, '2i(', 3, 9
      initObject
      setMember
      push 0.0, r:this, '+)N,p'
      callMethod
      pop
      branch label45
     label15:
      push r:this, '(;;('
      getMember
      push '8+z', 1
      setMember
      push 0.0
      setRegister r:4
      pop
     label16:
      push r:4, 2
      lessThan
      not
      branchIfTrue label17
      push r:this, 'h', r:4
      add
      getMember
      setRegister r:22
      pop
      push r:4, 2
      multiply
      push 1
      subtract
      setRegister r:3
      pop
      push r:22, '55(', r:3, 30
      multiply
      setMember
      push r:22, '45(', 15
      setMember
      push r:22, ')5(', 0.0
      setMember
      push r:4
      increment
      setRegister r:4
      pop
      branch label16
     label17:
      branch label45
     label18:
      push r:this, ' q1E)', 'type', 2, '4NWxl', 50, '3fEyH', 40, ' }Mw4(', 2.5, 4
      initObject
      setMember
      push 0.0
      setRegister r:4
      pop
     label19:
      push r:4, 2
      lessThan
      not
      branchIfTrue label20
      push r:this, 'h', r:4
      add
      getMember
      setRegister r:22
      pop
      push r:22, '55(', r:4, 2
      multiply
      push 1
      subtract
      push 36
      multiply
      setMember
      push r:22, '45(', 13
      setMember
      push r:4
      increment
      setRegister r:4
      pop
      branch label19
     label20:
      push r:this, '*zWsa', 200
      setMember
      push r:this, '(;;('
      getMember
      push '45(', 132
      setMember
      push r:this, '(;;('
      getMember
      push '8+z', 0.2
      setMember
      branch label45
     label21:
      push r:this, ' q1E)', 'type', 3, '4NWxl', 3, '3fEyH', 60, ' }Mw4(', 20, 4
      initObject
      setMember
      push r:this, '*zWsa', 100
      setMember
      branch label45
     label22:
      push r:this, ' q1E)', 'type', 3, '4NWxl', 6, '3fEyH', 70, ' }Mw4(', 9, '+8{l', 2
      random
      push 5
      initObject
      setMember
      push r:this, ' q1E)'
      getMember
      push '+8{l'
      getMember
      not
      setRegister r:21
      pop
      push r:this, 'h', r:21
      toNumber
      add
      getMember
      setRegister r:22
      pop
      push r:22, '55(', r:21, 2
      multiply
      push 1
      subtract
      push 40
      multiply
      setMember
      push r:22, '45(', -16
      setMember
      push r:22, ')5(', 0.0, r:21, 2
      multiply
      push 1
      subtract
      subtract
      push 1.3
      multiply
      setMember
      push r:this, '*zWsa', 100
      setMember
      branch label45
     label23:
      push r:this, '(;;(', '2)', 10, '4eQ90(', 10, 'x', r:this, 'x'
      getMember
      push 'y', r:this, 'y'
      getMember
      push 4
      initObject
      setMember
      push r:this, '3fEyH', r:this, '(;;('
      getMember
      push '4eQ90('
      getMember
      setMember
      branch label45
     label24:
      push 0.0
      setRegister r:4
      pop
     label25:
      push r:4, 16
      lessThan
      not
      branchIfTrue label26
      push 628
      random
      push 100
      divide
      setRegister r:5
      pop
      push 5, 50
      random
      push 10
      divide
      add
      setRegister r:15
      pop
      push r:5, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      setRegister r:10
      pop
      push r:5, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      setRegister r:9
      pop
      push 'x', r:this, 'x'
      getMember
      push r:10, r:this, ']dc'
      getMember
      random
      push r:this, ']dc'
      getMember
      push 2
      divide
      add
      multiply
      add
      push 'y', r:this, 'y'
      getMember
      push r:9, r:this, ']dc'
      getMember
      random
      push r:this, ']dc'
      getMember
      push 2
      divide
      add
      multiply
      add
      push ',N5T', r:10, r:15
      multiply
      push '+N5T', r:9, r:15
      multiply
      push 5
      random
      subtract
      push '=M5T', 21
      random
      push 10
      subtract
      push '3fEyH', 8, 12
      random
      add
      push ']nBjo', TRUE, 7
      initObject
      setRegister r:7
      pop
      push r:7, ')qGaQ', 2, r:this, '0(}e'
      getMember
      push ';IDPE'
      callMethod
      setRegister r:2
      pop
      push r:2, '_rotation', r:5, 0.0174532925199433
      divide
      setMember
      push r:4, 1
      add
      push 1, r:2, 'gotoAndStop'
      callMethod
      pop
      push r:4
      increment
      setRegister r:4
      pop
      branch label25
     label26:
      push r:this, '+i(g', 2
      setMember
      push 2, 1, r:this, 'h0'
      getMember
      push 'gotoAndStop'
      callMethod
      pop
      push 2, 1, r:this, 'h1'
      getMember
      push 'gotoAndStop'
      callMethod
      pop
      push r:this, '63WwF'
      getMember
      push '_visible', FALSE
      setMember
      push r:this, '3fEyH', 20
      setMember
      push r:this, ',N5T', 0.0
      setMember
      push r:this, '+N5T', 0.0
      setMember
      push r:this, '5 Z+V', r:this, '0Umk]'
      getMember
      setMember
      push r:this, '5i(', r:this, '5 Z+V'
      getMember
      setMember
      push r:this, '(;;(', '}_(', 0.0, '45(', 100, '(1(', 16, '3N(', 100, ';[(', 60, '7+z', 1, '8+z', 1, '4N)zC', 4, '[DxN', 1, '2i(', 3, '43,g*(', TRUE, 11
      initObject
      setMember
      branch label45
     label27:
      push r:this, '(;;('
      getMember
      push '3N(', 100
      setMember
      push r:this, '(;;('
      getMember
      push ';[(', 60
      setMember
      push r:this, '(;;('
      getMember
      push '2i(', 3
      setMember
      push 0.0
      setRegister r:4
      pop
     label28:
      push r:4, 2
      lessThan
      not
      branchIfTrue label29
      push r:this, 'h', r:4
      add
      getMember
      setRegister r:22
      pop
      push r:4, 2
      multiply
      push 1
      subtract
      setRegister r:3
      pop
      push r:22, ')1(', 0.0
      setMember
      push r:22, '(1(', 0.0
      setMember
      push r:22, ')5(', 0.0
      setMember
      push r:22, '0)Jso', TRUE
      setMember
      push 3, 1, r:22, 'gotoAndStop'
      callMethod
      pop
      push r:4
      increment
      setRegister r:4
      pop
      branch label28
     label29:
      branch label45
     label30:
      push r:this, ' q1E)', 'type', 4, '4NWxl', 5, '3fEyH', 20, ' }Mw4(', 14, '+8{l', 2
      random
      push 5
      initObject
      setMember
      push r:this, ' q1E)'
      getMember
      push '+8{l'
      getMember
      setRegister r:21
      pop
      push r:this, 'h', r:21
      add
      getMember
      setRegister r:22
      pop
      push r:22, '55(', r:21, 2
      multiply
      push 1
      subtract
      push 50
      multiply
      setMember
      push r:22, '45(', -8
      setMember
      push r:22, ')5(', 0.0, r:21, 2
      multiply
      push 1
      subtract
      subtract
      push 0.75
      multiply
      setMember
      push r:22, '0)Jso', FALSE
      setMember
      push 2, 1, r:22, 'gotoAndStop'
      callMethod
      pop
      push r:this, '*zWsa', 140
      setMember
      branch label45
     label31:
      push r:this, ' q1E)', '4eQ90(', 60, 1
      initObject
      setMember
      push r:this, '3fEyH', r:this, ' q1E)'
      getMember
      push '4eQ90('
      getMember
      setMember
      push r:this, '(;;('
      getMember
      push '2i(', 100
      setMember
      push 0.0
      setRegister r:4
      pop
     label32:
      push r:4, 2
      lessThan
      not
      branchIfTrue label33
      push r:this, 'h', r:4
      add
      getMember
      setRegister r:22
      pop
      push r:4, 2
      multiply
      push 1
      subtract
      setRegister r:3
      pop
      push r:22, '55(', 0.0
      setMember
      push r:22, '45(', 0.0
      setMember
      push r:22, ')5(', 0.0
      setMember
      push r:22, '0)Jso', FALSE
      setMember
      push 2, 1, r:22, 'gotoAndStop'
      callMethod
      pop
      push r:4
      increment
      setRegister r:4
      pop
      branch label32
     label33:
      push r:this, '*zWsa', 180
      setMember
      branch label45
     label34:
      push r:this, ' q1E)', '7=bN', 0.0, 1
      initObject
      setMember
      push r:this, '(;;('
      getMember
      push '45(', 0.0
      setMember
      push r:this, '(;;('
      getMember
      push '3N(', 50
      setMember
      push r:this, '(;;('
      getMember
      push ';[(', 10
      setMember
      push r:this, '(;;('
      getMember
      push '2i(', 100
      setMember
      push 0.0
      setRegister r:4
      pop
     label35:
      push r:4, 2
      lessThan
      not
      branchIfTrue label36
      push r:this, 'h', r:4
      add
      getMember
      setRegister r:22
      pop
      push r:4, 2
      multiply
      push 1
      subtract
      setRegister r:3
      pop
      push r:22, '55(', 20, r:3
      multiply
      setMember
      push r:22, '45(', 14
      setMember
      push r:22, ')5(', -2.1, r:3
      multiply
      setMember
      push r:22, '0)Jso', FALSE
      setMember
      push 2, 1, r:22, 'gotoAndStop'
      callMethod
      pop
      push r:4
      increment
      setRegister r:4
      pop
      branch label35
     label36:
      push r:this, '3fEyH', 80
      setMember
      push r:this, '*zWsa', 200
      setMember
      branch label45
     label37:
      push r:this, 'x'
      getMember
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '(l;('
      getMember
      push 2
      divide
      lessThan
      push 2
      multiply
      push 1
      subtract
      setRegister r:3
      pop
      push r:this, ' q1E)', 'type', 6, '4NWxl', 8, '3fEyH', 0.0, ' }Mw4(', 3, '+8{l', r:3, 1
      add
      push 2
      divide
      push 5
      initObject
      setMember
      push r:this, 'h', r:this, ' q1E)'
      getMember
      push '+8{l'
      getMember
      add
      getMember
      setRegister r:22
      pop
      push 2, 1, r:22, 'gotoAndStop'
      callMethod
      pop
      push r:22, ')1(', r:22, ')1('
      getMember
      push r:3, 4
      multiply
      add
      setMember
      push r:this, '*zWsa', 80
      setMember
      branch label45
     label38:
      push r:this, '(;;(', '2)', 8, '4eQ90(', 80, 'x', r:this, 'x'
      getMember
      push 'y', r:this, 'y'
      getMember
      push 4
      initObject
      setMember
      push r:this, '3fEyH', r:this, '(;;('
      getMember
      push '4eQ90('
      getMember
      setMember
      push 2, 1, r:this, '[)kLd'
      getMember
      push '[47*D('
      getMember
      push 'gotoAndStop'
      callMethod
      pop
      push 2, 1, r:this, '[)kLd'
      getMember
      push '2D0X3'
      getMember
      push 'gotoAndStop'
      callMethod
      pop
      push '$arcade', 1, r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '*0GPC'
      getMember
      push 'giveItem'
      callMethod
      pop
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '3I2[((', r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '3I2[(('
      getMember
      increment
      setMember
      branch label45
     label39:
      push 0.0, r:this, 'clear'
      callMethod
      pop
      push r:this, '3fEyH', 80
      setMember
      push r:this, '[)kLd'
      getMember
      push '_visible', FALSE
      setMember
      push r:this, 'h0'
      getMember
      push '_visible', FALSE
      setMember
      push r:this, 'h1'
      getMember
      push '_visible', FALSE
      setMember
      push 0.0
      setRegister r:8
      pop
     label40:
      push r:8, 2
      lessThan
      not
      branchIfTrue label44
      push 2, r:8
      multiply
      push 1
      subtract
      setRegister r:3
      pop
      push 0.0
      setRegister r:4
      pop
     label41:
      push r:4, 13
      lessThan
      not
      branchIfTrue label43
      push r:5, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      setRegister r:10
      pop
      push r:5, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      setRegister r:9
      pop
      push '=M5T', 5
      random
      push 2
      subtract
      push '3fEyH', 16, 16
      random
      add
      push ',eQ55', 0.3, ']nBjo', FALSE, 4
      initObject
      setRegister r:7
      pop
      push r:4, 1
      greaterThan
      push r:7, '+olm4(', 3, r:this, '0(}e'
      getMember
      push ';IDPE'
      callMethod
      setRegister r:2
      pop
      push r:4, 1
      add
      push 1, r:2, 'gotoAndStop'
      callMethod
      pop
      push r:4, 1
      add
      push 1, r:2, 'p'
      getMember
      push 'gotoAndStop'
      callMethod
      pop
      push r:2, 'x', r:this, '_x'
      getMember
      push r:2, 'p'
      getMember
      push '_x'
      getMember
      push r:3
      multiply
      add
      setMember
      push r:2, 'y', r:this, '_y'
      getMember
      push r:2, 'p'
      getMember
      push '_y'
      getMember
      push r:3
      multiply
      add
      setMember
      push r:3, 1
      equals
      not
      branchIfTrue label42
      push r:2, '_rotation', 180
      setMember
      push 0.0, 13072173, r:2, 3, 'miniwave'
      getVariable
      push '+]'
      getMember
      push '8_aeB('
      callMethod
      pop
     label42:
      push r:2, 'p'
      getMember
      push '_x'
      getMember
      push r:3
      multiply
      push r:2, 'p'
      getMember
      push '_y'
      getMember
      push r:3
      multiply
      push 2, 'Math'
      getVariable
      push 'atan2'
      callMethod
      setRegister r:5
      pop
      push r:2, 'p'
      getMember
      push '_x'
      getMember
      push r:2, 'p'
      getMember
      push '_x'
      getMember
      multiply
      push r:2, 'p'
      getMember
      push '_y'
      getMember
      push r:2, 'p'
      getMember
      push '_y'
      getMember
      multiply
      add
      push 1, 'Math'
      getVariable
      push 'sqrt'
      callMethod
      setRegister r:6
      pop
      push r:2, ',N5T', r:5, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push r:6, 8, r:3, 2
      multiply
      add
      divide
      multiply
      setMember
      push r:2, '+N5T', r:5, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push r:6, 8, r:3, 2
      multiply
      add
      divide
      multiply
      push 1
      subtract
      setMember
      push 0.0, r:2, '4k8;L'
      callMethod
      pop
      push r:4
      increment
      setRegister r:4
      pop
      branch label41
     label43:
      push r:8
      increment
      setRegister r:8
      pop
      branch label40
     label44:
      branch label45
     label45:
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push r:this, '9I0x3(', r:this, '9I0x3('
      getMember
      push 0.9
      multiply
      push 0.1
      add
      setMember
      push 0.0, r:this, '*r,3C('
      callMethod
      pop
      push 0.0, r:this, '15q9I('
      callMethod
      pop
      push r:this, '7=bN'
      getMember
      setRegister r:0
      push 0.0
      strictEquals
      branchIfTrue label46
      push r:0, 1
      strictEquals
      branchIfTrue label48
      push r:0, 2
      strictEquals
      branchIfTrue label49
      push r:0, 3
      strictEquals
      branchIfTrue label51
      push r:0, 9
      strictEquals
      branchIfTrue label53
      push r:0, 10
      strictEquals
      branchIfTrue label57
      push r:0, 11
      strictEquals
      branchIfTrue label60
      push r:0, 12
      strictEquals
      branchIfTrue label62
      push r:0, 13
      strictEquals
      branchIfTrue label64
      push r:0, 14
      strictEquals
      branchIfTrue label68
      push r:0, 19
      strictEquals
      branchIfTrue label70
      push r:0, 20
      strictEquals
      branchIfTrue label73
      push r:0, 21
      strictEquals
      branchIfTrue label76
      push r:0, 22
      strictEquals
      branchIfTrue label78
      push r:0, 23
      strictEquals
      branchIfTrue label80
      push r:0, 24
      strictEquals
      branchIfTrue label87
      push r:0, 25
      strictEquals
      branchIfTrue label95
      push r:0, 29
      strictEquals
      branchIfTrue label97
      push r:0, 30
      strictEquals
      branchIfTrue label101
      branch label104
     label46:
      push 0.0, r:this, '2lv_1('
      callMethod
      pop
      push r:this, 'y', r:this, 'y'
      getMember
      push 6, '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      add
      setMember
      push r:this, 'y'
      getMember
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '9l;('
      getMember
      push 2
      divide
      greaterThan
      not
      branchIfTrue label47
      push 1, 1, r:this, '8Ge;c'
      callMethod
      pop
     label47:
      branch label104
     label48:
      push 0.0, r:this, '2lv_1('
      callMethod
      pop
      push 0.0, r:this, '570=z'
      callMethod
      pop
      push 0.0, r:this, '=WCn*('
      callMethod
      pop
      push 0.0, r:this, '-2)ve'
      callMethod
      pop
      branch label104
     label49:
      push 0.0, r:this, '2lv_1('
      callMethod
      pop
      push 0.0, r:this, '570=z'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push r:this, ' q1E)'
      getMember
      push '4NWxl'
      getMember
      push 0.0
      equals
      not
      branchIfTrue label50
      push r:this, '7=bN', 1
      setMember
     label50:
      push 0.0, r:this, '-2)ve'
      callMethod
      pop
      branch label104
     label51:
      push 0.0, r:this, '2lv_1('
      callMethod
      pop
      push 0.0, r:this, '570=z'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push r:this, '(;;('
      getMember
      push 0.0
      getMember
      push '2(', r:this, '(;;('
      getMember
      push 0.0
      getMember
      push '2('
      getMember
      push 0.8
      multiply
      setMember
      push r:this, '(;;('
      getMember
      push 1
      getMember
      push '2(', r:this, '(;;('
      getMember
      push 1
      getMember
      push '2('
      getMember
      push 0.8
      multiply
      setMember
      push r:this, '9I0x3(', r:this, '9I0x3('
      getMember
      push 1.1
      multiply
      setMember
      push r:this, ' q1E)'
      getMember
      push '4NWxl'
      getMember
      push 0.0
      equals
      not
      branchIfTrue label52
      push r:this, '7=bN', 1
      setMember
     label52:
      push 0.0, r:this, '-2)ve'
      callMethod
      pop
      branch label104
     label53:
      push r:this, '(;;('
      getMember
      push '4N('
      getMember
      push r:this, '_x'
      getMember
      subtract
      setRegister r:18
      pop
      push r:this, '(;;('
      getMember
      push '3N('
      getMember
      push r:this, '_y'
      getMember
      subtract
      setRegister r:17
      pop
      push 1
      setRegister r:11
      pop
      push r:this, ',N5T', r:this, ',N5T'
      getMember
      push r:11, r:18, 10
      divide
      push 0.0, r:11
      subtract
      push 2, 'Math'
      getVariable
      push 'max'
      callMethod
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      push '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      add
      setMember
      push r:this, '+N5T', r:this, '+N5T'
      getMember
      push r:11, r:17, 10
      divide
      push 0.0, r:11
      subtract
      push 2, 'Math'
      getVariable
      push 'max'
      callMethod
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      push '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      add
      setMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      push 0.99, 2, 'Math'
      getVariable
      push 'pow'
      callMethod
      setRegister r:14
      pop
      push r:this, ',N5T', r:this, ',N5T'
      getMember
      push r:14
      multiply
      setMember
      push r:this, '+N5T', r:this, '+N5T'
      getMember
      push r:14
      multiply
      setMember
      push r:this, 'x', r:this, 'x'
      getMember
      push r:this, ',N5T'
      getMember
      add
      setMember
      push r:this, 'y', r:this, 'y'
      getMember
      push r:this, '+N5T'
      getMember
      add
      setMember
      push r:this, ',}}BD'
      getMember
      push '_x', r:this, ',}}BD'
      getMember
      push '_x'
      getMember
      push 0.5
      multiply
      push 11
      random
      push 5
      subtract
      push 0.5
      multiply
      add
      setMember
      push r:this, ',}}BD'
      getMember
      push '_y', r:this, ',}}BD'
      getMember
      push '_y'
      getMember
      push 0.5
      multiply
      push 11
      random
      push 5
      subtract
      push 0.5
      multiply
      add
      setMember
      push 1, r:this, '3fEyH'
      getMember
      push 100
      divide
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      setRegister r:12
      pop
      push r:12, 10
      multiply
      push '2d['
      getVariable
      push '7J-V'
      getMember
      divide
      random
      not
      not
      branchIfTrue label54
      push 628
      random
      push 100
      divide
      setRegister r:5
      pop
      push r:this, ']dc'
      getMember
      random
      setRegister r:13
      pop
      push 'x', r:this, '_x'
      getMember
      push r:5, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push r:13
      multiply
      add
      push 'y', r:this, '_y'
      getMember
      push r:5, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push r:13
      multiply
      add
      push ']nBjo', FALSE, 3
      initObject
      setRegister r:16
      pop
      push r:16, '=jRD5(', 2, r:this, '0(}e'
      getMember
      push ';IDPE'
      callMethod
      setRegister r:3
      pop
      push r:3, '_rotation', 360
      random
      setMember
      push r:3, '_xscale', 100, 100
      random
      push 1, r:12
      subtract
      multiply
      add
      setMember
      push r:3, '_yscale', 100, 100
      random
      push 1, r:12
      subtract
      multiply
      add
      setMember
     label54:
      push r:this, '3fEyH'
      getMember
      push 0.0
      lessThan
      not
      branchIfTrue label55
      push 10, 1, r:this, '8Ge;c'
      callMethod
      pop
      branch label56
     label55:
      push r:this, '3fEyH', r:this, '3fEyH'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
     label56:
      branch label104
     label57:
      push 0.0, r:this, ']3s],'
      callMethod
      pop
      push 0.0, r:this, '+)N,p'
      callMethod
      pop
      push r:this, '3fEyH'
      getMember
      push 0.0
      lessThan
      not
      branchIfTrue label58
      push r:this, '3fEyH'
      delete
      pop
      push 11, 1, r:this, '8Ge;c'
      callMethod
      pop
      branch label59
     label58:
      push r:this, '3fEyH', r:this, '3fEyH'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
     label59:
      branch label104
     label60:
      push 0.0, r:this, ']3s],'
      callMethod
      pop
      push 0.0, r:this, '{ZS7N'
      callMethod
      pop
      push 0.0, r:this, '+)N,p'
      callMethod
      pop
      push 0.0, r:this, '=WCn*('
      callMethod
      pop
      push 0.0, r:this, '-2)ve'
      callMethod
      pop
      push r:this, '5i('
      getMember
      push r:this, '5 Z+V'
      getMember
      divide
      setRegister r:19
      pop
      push 40, 40, r:19
      multiply
      add
      push '2d['
      getVariable
      push '7J-V'
      getMember
      divide
      random
      not
      not
      branchIfTrue label61
      push r:this, ' q1E)', 'type', 3, '4NWxl', 0.0, '3fEyH', -1, 3
      initObject
      setMember
      push 0.0, r:this, '0w*((('
      callMethod
      pop
     label61:
      branch label104
     label62:
      push 0.0, r:this, ']3s],'
      callMethod
      pop
      push 0.0, r:this, '{ZS7N'
      callMethod
      pop
      push 0.0, r:this, '+)N,p'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push r:this, ' q1E)'
      getMember
      push '4NWxl'
      getMember
      push 0.0
      equals
      not
      branchIfTrue label63
      push 11, 1, r:this, '8Ge;c'
      callMethod
      pop
     label63:
      push 0.0, r:this, '-2)ve'
      callMethod
      pop
      branch label104
     label64:
      push 0.0, r:this, ']3s],'
      callMethod
      pop
      push 0.0, r:this, '{ZS7N'
      callMethod
      pop
      push 0.0, r:this, '+)N,p'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 0.0
      setRegister r:4
      pop
     label65:
      push r:4, 2
      lessThan
      not
      branchIfTrue label66
      push r:this, 'h', r:4
      add
      getMember
      setRegister r:6
      pop
      push 0.0, r:this, '0(}e'
      getMember
      push '*CcbI'
      callMethod
      setRegister r:15
      pop
      push r:15, 'x'
      getMember
      push r:this, 'x'
      getMember
      push r:6, 'x'
      getMember
      add
      subtract
      setRegister r:18
      pop
      push r:15, 'y'
      getMember
      push r:this, 'y'
      getMember
      push r:6, 'y'
      getMember
      add
      subtract
      setRegister r:17
      pop
      push r:18, r:17, 2, 'Math'
      getVariable
      push 'atan2'
      callMethod
      push 1.57
      subtract
      setRegister r:5
      pop
      push 0.3, r:5, -0.3, 2, 'Math'
      getVariable
      push 'max'
      callMethod
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      setRegister r:5
      pop
      push r:6, ')5(', r:5
      setMember
      push r:4
      increment
      setRegister r:4
      pop
      branch label65
     label66:
      push r:this, ' q1E)'
      getMember
      push '4NWxl'
      getMember
      push 0.0
      equals
      not
      branchIfTrue label67
      push 11, 1, r:this, '8Ge;c'
      callMethod
      pop
     label67:
      push 0.0, r:this, '-2)ve'
      callMethod
      pop
      branch label104
     label68:
      push 0.0, r:this, ']3s],'
      callMethod
      pop
      push 0.0, r:this, '{ZS7N'
      callMethod
      pop
      push 0.0, r:this, '+)N,p'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push r:this, 'h', r:this, ' q1E)'
      getMember
      push '+8{l'
      getMember
      add
      getMember
      setRegister r:6
      pop
      push 0.0, r:this, '0(}e'
      getMember
      push '*CcbI'
      callMethod
      setRegister r:15
      pop
      push r:15, 'x'
      getMember
      push r:this, 'x'
      getMember
      push r:6, 'x'
      getMember
      add
      subtract
      setRegister r:18
      pop
      push r:15, 'y'
      getMember
      push r:this, 'y'
      getMember
      push r:6, 'y'
      getMember
      add
      subtract
      setRegister r:17
      pop
      push r:18, r:17, 2, 'Math'
      getVariable
      push 'atan2'
      callMethod
      push 1.57
      subtract
      setRegister r:5
      pop
      push 0.5, r:5, -0.5, 2, 'Math'
      getVariable
      push 'max'
      callMethod
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      setRegister r:5
      pop
      push r:6, ')5(', r:5
      setMember
      push r:this, ' q1E)'
      getMember
      push '4NWxl'
      getMember
      push 0.0
      equals
      not
      branchIfTrue label69
      push 11, 1, r:this, '8Ge;c'
      callMethod
      pop
     label69:
      push 0.0, r:this, '-2)ve'
      callMethod
      pop
      branch label104
     label70:
      push 1, r:this, '3fEyH'
      getMember
      push r:this, '(;;('
      getMember
      push '4eQ90('
      getMember
      divide
      subtract
      setRegister r:12
      pop
      push r:this, 'x', r:this, '(;;('
      getMember
      push 'x'
      getMember
      push r:this, '(;;('
      getMember
      push '2)'
      getMember
      push 2
      multiply
      random
      push r:this, '(;;('
      getMember
      push '2)'
      getMember
      subtract
      push r:12
      multiply
      add
      setMember
      push r:this, 'y', r:this, '(;;('
      getMember
      push 'y'
      getMember
      push r:this, '(;;('
      getMember
      push '2)'
      getMember
      push 2
      multiply
      random
      push r:this, '(;;('
      getMember
      push '2)'
      getMember
      subtract
      push r:12
      multiply
      add
      setMember
      push r:this, '3fEyH'
      getMember
      push 0.0
      lessThan
      not
      branchIfTrue label71
      push 20, 1, r:this, '8Ge;c'
      callMethod
      pop
      branch label72
     label71:
      push r:this, '3fEyH', r:this, '3fEyH'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
     label72:
      branch label104
     label73:
      push r:this, '3fEyH'
      getMember
      push 0.0
      lessThan
      not
      branchIfTrue label74
      push r:this, '3fEyH'
      delete
      pop
      push 21, 1, r:this, '8Ge;c'
      callMethod
      pop
      branch label75
     label74:
      push r:this, '3fEyH', r:this, '3fEyH'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
     label75:
      branch label104
     label76:
      push 0.0, r:this, ']3s],'
      callMethod
      pop
      push 0.0, r:this, '{ZS7N'
      callMethod
      pop
      push 0.0, r:this, '+)N,p'
      callMethod
      pop
      push 0.0, r:this, '-2)ve'
      callMethod
      pop
      push 0.0, r:this, '=WCn*('
      callMethod
      pop
      push r:this, '5i('
      getMember
      push r:this, '5 Z+V'
      getMember
      divide
      setRegister r:19
      pop
      push 20, 30, r:19
      multiply
      add
      push '2d['
      getVariable
      push '7J-V'
      getMember
      divide
      random
      not
      not
      branchIfTrue label77
      push r:this, ' q1E)', 'type', 5, '4NWxl', 0.0, '3fEyH', -1, 3
      initObject
      setMember
      push 0.0, r:this, '0w*((('
      callMethod
      pop
     label77:
      push r:this, '(;;('
      getMember
      push '8+z', r:this, '(;;('
      getMember
      push '8+z'
      getMember
      push 0.5
      multiply
      push 0.5
      add
      setMember
      push r:this, '(;;('
      getMember
      push '7+z', r:this, '(;;('
      getMember
      push '7+z'
      getMember
      push 0.5
      multiply
      push 0.5
      add
      setMember
      branch label104
     label78:
      push 0.0, r:this, ']3s],'
      callMethod
      pop
      push 0.0, r:this, '{ZS7N'
      callMethod
      pop
      push 0.0, r:this, '+)N,p'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push r:this, '(;;('
      getMember
      push '8+z', r:this, '(;;('
      getMember
      push '8+z'
      getMember
      push 0.7
      multiply
      setMember
      push r:this, '(;;('
      getMember
      push '7+z', r:this, '(;;('
      getMember
      push '7+z'
      getMember
      push 0.7
      multiply
      setMember
      push r:this, ' q1E)'
      getMember
      push '4NWxl'
      getMember
      push 0.0
      equals
      not
      branchIfTrue label79
      push 21, 1, r:this, '8Ge;c'
      callMethod
      pop
     label79:
      push 0.0, r:this, '-2)ve'
      callMethod
      pop
      branch label104
     label80:
      push 0.0, r:this, ']3s],'
      callMethod
      pop
      push 0.0, r:this, '{ZS7N'
      callMethod
      pop
      push 0.0, r:this, '+)N,p'
      callMethod
      pop
      push 0.0, r:this, '-2)ve'
      callMethod
      pop
      push r:this, '3fEyH'
      getMember
      push r:this, ' q1E)'
      getMember
      push '4eQ90('
      getMember
      divide
      setRegister r:12
      pop
      push 0.0
      setRegister r:4
      pop
     label81:
      push r:4, 2
      lessThan
      not
      branchIfTrue label82
      push r:this, 'h', r:4
      add
      getMember
      setRegister r:6
      pop
      push r:12, 3.14
      multiply
      push 3.14, r:4
      multiply
      subtract
      push 1.57
      add
      setRegister r:5
      pop
      push r:6, '55(', r:5, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push 50
      multiply
      setMember
      push r:6, '45(', r:5, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push 50
      multiply
      setMember
      push r:6, ')5(', r:5, 1.3
      add
      setMember
      push r:6, '0)Jso', FALSE
      setMember
      push r:4
      increment
      setRegister r:4
      pop
      branch label81
     label82:
      push r:this, '(;;('
      getMember
      push '8+z', r:this, '(;;('
      getMember
      push '8+z'
      getMember
      push 0.95
      multiply
      setMember
      push r:this, '(;;('
      getMember
      push '7+z', r:this, '(;;('
      getMember
      push '7+z'
      getMember
      push 0.95
      multiply
      setMember
      push r:this, '3fEyH'
      getMember
      push 0.0
      lessThan
      not
      branchIfTrue label85
      push r:this, '6l{Wy', ']dc', 50, '4N)zC', 6, '8-FUS', 0.0, 3
      initObject
      setMember
      push 12
      setRegister r:9
      pop
      push 0.0
      setRegister r:4
      pop
     label83:
      push r:4, r:9
      lessThan
      not
      branchIfTrue label84
      push r:4, r:9
      divide
      push 6.28
      multiply
      setRegister r:5
      pop
      push ']oVzo', FALSE, 'x', r:this, 'x'
      getMember
      push r:5, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push r:this, '6l{Wy'
      getMember
      push ']dc'
      getMember
      multiply
      add
      push 'y', r:this, 'y'
      getMember
      push r:5, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push r:this, '6l{Wy'
      getMember
      push ']dc'
      getMember
      multiply
      add
      push '+)', r:5, 4
      initObject
      setRegister r:16
      pop
      push r:16, 1, 2, r:this, '0(}e'
      getMember
      push '9nAeE'
      callMethod
      setRegister r:3
      pop
      push r:3, '7=bN', 2
      setMember
      push r:4
      increment
      setRegister r:4
      pop
      branch label83
     label84:
      push r:this, '3fEyH'
      delete
      pop
      push 21, 1, r:this, '8Ge;c'
      callMethod
      pop
      branch label86
     label85:
      push r:this, '3fEyH', r:this, '3fEyH'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
     label86:
      branch label104
     label87:
      push 0.0, r:this, '{ZS7N'
      callMethod
      pop
      push 0.0, r:this, '+)N,p'
      callMethod
      pop
      push 0.0, r:this, '-2)ve'
      callMethod
      pop
      push r:this, '[)kLd'
      getMember
      push '_rotation', r:this, '[)kLd'
      getMember
      push '_rotation'
      getMember
      push 0.7
      multiply
      setMember
      push r:this, '3fEyH'
      getMember
      push 0.0
      lessThan
      not
      branchIfTrue label93
      push r:this, ' q1E)'
      getMember
      push '7=bN'
      getMember
      setRegister r:0
      push 0.0
      strictEquals
      branchIfTrue label88
      push r:0, 1
      strictEquals
      branchIfTrue label91
      branch label92
     label88:
      push 0.0
      setRegister r:4
      pop
     label89:
      push r:4, 2
      lessThan
      not
      branchIfTrue label90
      push r:this, 'h', r:4
      add
      getMember
      setRegister r:6
      pop
      push r:4, 2
      multiply
      push 1
      subtract
      setRegister r:7
      pop
      push r:6, '55(', 40, r:7
      multiply
      setMember
      push r:6, '45(', 8
      setMember
      push r:4
      increment
      setRegister r:4
      pop
      branch label89
     label90:
      push r:this, '3fEyH', 26
      setMember
      push r:this, '(;;('
      getMember
      push '8+z', 0.0
      setMember
      push r:this, '(;;('
      getMember
      push '7+z', 0.0
      setMember
      push r:this, ' q1E)'
      getMember
      push '7=bN', 1
      setMember
      push 3, 1, r:this, '[)kLd'
      getMember
      push '[47*D('
      getMember
      push 'gotoAndStop'
      callMethod
      pop
      push 3, 1, r:this, '[)kLd'
      getMember
      push '2D0X3'
      getMember
      push 'gotoAndStop'
      callMethod
      pop
      push r:this, '[)kLd'
      getMember
      push '7o  1(', 16
      setMember
      push 300, 1, r:this, '0(}e'
      getMember
      push '+3ul'
      getMember
      push '0ga]O'
      callMethod
      pop
      branch label92
     label91:
      push r:this, '3fEyH'
      delete
      pop
      push r:this, '(;;('
      getMember
      push '45(', 0.0
      setMember
      push 21, 1, r:this, '8Ge;c'
      callMethod
      pop
      branch label92
     label92:
      branch label94
     label93:
      push r:this, '3fEyH', r:this, '3fEyH'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
     label94:
      branch label104
     label95:
      push 0.0, r:this, ']3s],'
      callMethod
      pop
      push 0.0, r:this, '{ZS7N'
      callMethod
      pop
      push 0.0, r:this, '+)N,p'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push r:this, '(;;('
      getMember
      push '8+z', r:this, '(;;('
      getMember
      push '8+z'
      getMember
      push 0.9
      multiply
      setMember
      push r:this, ' q1E)'
      getMember
      push '4NWxl'
      getMember
      push 0.0
      equals
      not
      branchIfTrue label96
      push 21, 1, r:this, '8Ge;c'
      callMethod
      pop
     label96:
      push 0.0, r:this, '-2)ve'
      callMethod
      pop
      branch label104
     label97:
      push 1, r:this, '3fEyH'
      getMember
      push r:this, '(;;('
      getMember
      push '4eQ90('
      getMember
      divide
      subtract
      setRegister r:12
      pop
      push r:this, 'x', r:this, '(;;('
      getMember
      push 'x'
      getMember
      push r:this, '(;;('
      getMember
      push '2)'
      getMember
      push 2
      multiply
      random
      push r:this, '(;;('
      getMember
      push '2)'
      getMember
      subtract
      push r:12
      multiply
      add
      setMember
      push r:this, 'y', r:this, '(;;('
      getMember
      push 'y'
      getMember
      push r:this, '(;;('
      getMember
      push '2)'
      getMember
      push 2
      multiply
      random
      push r:this, '(;;('
      getMember
      push '2)'
      getMember
      subtract
      push r:12
      multiply
      add
      setMember
      push 20, 1, r:12
      subtract
      multiply
      push '2d['
      getVariable
      push '7J-V'
      getMember
      divide
      random
      not
      not
      branchIfTrue label98
      push 5, r:this, ']dc'
      getMember
      push 5
      subtract
      random
      add
      setRegister r:13
      pop
      push 628
      random
      push 100
      divide
      setRegister r:5
      pop
      push 'x', r:this, 'x'
      getMember
      push r:this, '96}b'
      getMember
      push '_x'
      getMember
      add
      push r:5, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push r:13
      multiply
      add
      push 'y', r:this, 'y'
      getMember
      push r:this, '96}b'
      getMember
      push '_y'
      getMember
      add
      push r:5, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push r:13
      multiply
      add
      push ',N5T', 0.0, ',N5T', 0.0, ']nBjo', FALSE, 5
      initObject
      setRegister r:16
      pop
      push r:16, ']F)y0(', 2, r:this, '0(}e'
      getMember
      push ';IDPE'
      callMethod
      setRegister r:3
      pop
      push r:3, '_rotation', r:5, 0.0174532925199433
      divide
      setMember
     label98:
      push r:this, '3fEyH'
      getMember
      push 0.0
      lessThan
      not
      branchIfTrue label99
      push 30, 1, r:this, '8Ge;c'
      callMethod
      pop
      branch label100
     label99:
      push r:this, '3fEyH', r:this, '3fEyH'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
     label100:
      branch label104
     label101:
      push r:this, '3fEyH'
      getMember
      push 0.0
      lessThan
      not
      branchIfTrue label102
      push 0.0, r:this, '1T3j'
      callMethod
      pop
      branch label103
     label102:
      push r:this, '3fEyH', r:this, '3fEyH'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
     label103:
      branch label104
     label104:
      push r:this, '+i(g'
      getMember
      setRegister r:0
      push 1
      strictEquals
      branchIfTrue label105
      push r:0, 2
      strictEquals
      branchIfTrue label106
      branch label111
     label105:
      push 0.0, r:this, '8D(]0'
      callMethod
      pop
      push r:this, '63WwF'
      getMember
      push '_x', r:this, '[)kLd'
      getMember
      push '_x'
      getMember
      setMember
      push r:this, '63WwF'
      getMember
      push '_y', r:this, '[)kLd'
      getMember
      push '_y'
      getMember
      setMember
      branch label111
     label106:
      push r:this, '7=bN'
      getMember
      push 30
      lessThan
      not
      branchIfTrue label107
      push 0.0, r:this, '8D(]0'
      callMethod
      pop
     label107:
      push r:this, '6l{Wy'
      getMember
      push UNDEF
      equals
      not
      not
      branchIfTrue label110
      push r:this, '6l{Wy'
      getMember
      push '8-FUS', r:this, '6l{Wy'
      getMember
      push '8-FUS'
      getMember
      push r:this, '6l{Wy'
      getMember
      push '4N)zC'
      getMember
      add
      push 628
      modulo
      setMember
      push r:this, '0(}e'
      getMember
      push '}=*uB('
      getMember
      setRegister r:8
      pop
      push 0.0
      setRegister r:4
      pop
     label108:
      push r:4, r:8, 'length'
      getMember
      lessThan
      not
      branchIfTrue label109
      push r:8, r:4
      getMember
      setRegister r:3
      pop
      push r:3, '+)'
      getMember
      push r:this, '6l{Wy'
      getMember
      push '8-FUS'
      getMember
      push 100
      divide
      add
      setRegister r:5
      pop
      push r:3, 'x', r:this, 'x'
      getMember
      push r:5, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push r:this, '6l{Wy'
      getMember
      push ']dc'
      getMember
      multiply
      add
      setMember
      push r:3, 'y', r:this, 'y'
      getMember
      push r:5, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push r:this, '6l{Wy'
      getMember
      push ']dc'
      getMember
      multiply
      add
      setMember
      push 0.0, r:3, ' DVkC'
      callMethod
      pop
      push r:4
      increment
      setRegister r:4
      pop
      branch label108
     label109:
      push r:8, 'length'
      getMember
      push 0.0
      equals
      not
      branchIfTrue label110
      push r:this, '6l{Wy'
      delete
      pop
     label110:
      branch label111
     label111:
      push r:this, '-ySDR'
      getMember
      push UNDEF
      equals
      not
      not
      branchIfTrue label112
      push 0.0, r:this, ']dk1('
      callMethod
      pop
     label112:
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '2lv_1('
    function2 () (r:1='this')
      push r:this, ',}}BD'
      getMember
      push '3,('
      getMember
      push '_rotation', r:this, ',}}BD'
      getMember
      push '3,('
      getMember
      push '_rotation'
      getMember
      push r:this, ']1y57'
      getMember
      push r:this, '9I0x3('
      getMember
      multiply
      add
      setMember
    end // of function 

    setMember
    push r:1, '570=z'
    function2 () (r:1='this')
      push 0.95
      setRegister r:4
      pop
      push 0.0
      setRegister r:3
      pop
     label113:
      push r:3, 2
      lessThan
      not
      branchIfTrue label115
      push r:this, '(;;('
      getMember
      push r:3
      getMember
      setRegister r:2
      pop
      push r:2, '2(', r:2, '2('
      getMember
      push r:4
      multiply
      push r:2, '4y'
      getMember
      push 1, r:4
      subtract
      multiply
      add
      setMember
      push r:2, '2)', r:2, '2)'
      getMember
      push r:2, '2('
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      add
      push 628
      modulo
      setMember
      push 200, '2d['
      getVariable
      push '7J-V'
      getMember
      divide
      random
      not
      not
      branchIfTrue label114
      push r:2, '4y', 5, 5
      random
      add
      setMember
     label114:
      push r:3
      increment
      setRegister r:3
      pop
      branch label113
     label115:
      push 50
      setRegister r:6
      pop
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '(l;('
      getMember
      push 2
      divide
      setRegister r:5
      pop
      push 100
      setRegister r:7
      pop
      push r:this, 'x', r:5, r:this, '(;;('
      getMember
      push 0.0
      getMember
      push '2)'
      getMember
      push 100
      divide
      push 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push r:5, r:6
      subtract
      multiply
      add
      setMember
      push r:this, 'y', r:7, r:this, '(;;('
      getMember
      push 1
      getMember
      push '2)'
      getMember
      push 100
      divide
      push 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push 40
      multiply
      add
      setMember
    end // of function 

    setMember
    push r:1, '*r,3C('
    function2 () (r:1='this')
      push 5
      setRegister r:3
      pop
      push 0.5
      setRegister r:2
      pop
      push r:this, '96}b'
      getMember
      push '_x'
      getMember
      push 0.0, r:3
      subtract
      lessThan
      not
      branchIfTrue label116
      push r:this, ',N5T', r:this, ',N5T'
      getMember
      push r:2, '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      add
      setMember
     label116:
      push r:this, '96}b'
      getMember
      push '_x'
      getMember
      push r:3
      greaterThan
      not
      branchIfTrue label117
      push r:this, ',N5T', r:this, ',N5T'
      getMember
      push r:2, '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      subtract
      setMember
     label117:
      push r:this, '96}b'
      getMember
      push '_y'
      getMember
      push 0.0, r:3
      subtract
      lessThan
      not
      branchIfTrue label118
      push r:this, '+N5T', r:this, '+N5T'
      getMember
      push r:2, '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      add
      setMember
     label118:
      push r:this, '96}b'
      getMember
      push '_y'
      getMember
      push r:3
      greaterThan
      not
      branchIfTrue label119
      push r:this, '+N5T', r:this, '+N5T'
      getMember
      push r:2, '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      subtract
      setMember
     label119:
      push '2d['
      getVariable
      push '7J-V'
      getMember
      push 0.95, 2, 'Math'
      getVariable
      push 'pow'
      callMethod
      setRegister r:4
      pop
      push r:this, ',N5T', r:this, ',N5T'
      getMember
      push r:4
      multiply
      setMember
      push r:this, '+N5T', r:this, '+N5T'
      getMember
      push r:4
      multiply
      setMember
      push r:this, '96}b'
      getMember
      push '_x', r:this, '96}b'
      getMember
      push '_x'
      getMember
      push r:this, ',N5T'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      add
      setMember
      push r:this, '96}b'
      getMember
      push '_y', r:this, '96}b'
      getMember
      push '_y'
      getMember
      push r:this, '+N5T'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      add
      setMember
    end // of function 

    setMember
    push r:1, ']3s],'
    function2 () (r:1='this')
      push 0.0, r:this, '0(}e'
      getMember
      push '*CcbI'
      callMethod
      setRegister r:5
      pop
      push r:this, 'x'
      getMember
      push r:5, 'x'
      getMember
      subtract
      setRegister r:4
      pop
      push r:4, r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '(l;('
      getMember
      push 2
      divide
      divide
      setRegister r:2
      pop
      push 1, r:2, -1, 2, 'Math'
      getVariable
      push 'max'
      callMethod
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      setRegister r:2
      pop
      push 20
      setRegister r:3
      pop
      push r:3, 1
      add
      push r:2, r:3
      multiply
      add
      push 1, 'Math'
      getVariable
      push 'round'
      callMethod
      push 1, r:this, '[)kLd'
      getMember
      push '[47*D('
      getMember
      push ')j('
      getMember
      push 'gotoAndStop'
      callMethod
      pop
      push r:3, 1
      add
      push r:2, r:3
      multiply
      subtract
      push 1, 'Math'
      getVariable
      push 'round'
      callMethod
      push 1, r:this, '[)kLd'
      getMember
      push '[47*D('
      getMember
      push '(j('
      getMember
      push 'gotoAndStop'
      callMethod
      pop
      push r:this, '[)kLd'
      getMember
      push '_rotation', 0.0, r:4
      subtract
      push 8
      divide
      setMember
      push r:this, '63WwF'
      getMember
      push '_rotation', r:this, '[)kLd'
      getMember
      push '_rotation'
      getMember
      push 0.5
      multiply
      setMember
    end // of function 

    setMember
    push r:1, '{ZS7N'
    function2 () (r:1='this')
      push r:this, '5i('
      getMember
      push r:this, '5 Z+V'
      getMember
      divide
      setRegister r:4
      pop
      push r:this, '(;;('
      getMember
      push '4N)zC'
      getMember
      push 1, r:4
      subtract
      push 6
      multiply
      add
      push r:this, '(;;('
      getMember
      push '8+z'
      getMember
      multiply
      push r:this, '(;;('
      getMember
      push '[DxN'
      getMember
      multiply
      setRegister r:3
      pop
      push r:this, 'x', r:this, 'x'
      getMember
      push r:3, '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      add
      setMember
      push r:this, '(;;('
      getMember
      push '}_(', r:this, '(;;('
      getMember
      push '}_('
      getMember
      push r:this, '(;;('
      getMember
      push '(1('
      getMember
      push r:this, '(;;('
      getMember
      push '7+z'
      getMember
      multiply
      push '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      add
      push 628
      modulo
      setMember
      push r:this, '(;;('
      getMember
      push '3N('
      getMember
      push r:this, '(;;('
      getMember
      push '}_('
      getMember
      push 100
      divide
      push 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push r:this, '(;;('
      getMember
      push ';[('
      getMember
      multiply
      add
      setRegister r:2
      pop
      push r:this, '(;;('
      getMember
      push '45('
      getMember
      push UNDEF
      equals
      not
      not
      branchIfTrue label123
      push r:this, '7=bN'
      getMember
      setRegister r:0
      push 11
      strictEquals
      branchIfTrue label120
      push r:0, 21
      strictEquals
      branchIfTrue label120
      push r:0, 24
      strictEquals
      branchIfTrue label120
      branch label122
     label120:
      push r:this, '(;;('
      getMember
      push '45(', r:2
      setMember
      push r:this, 'y'
      getMember
      push r:this, '(;;('
      getMember
      push '45('
      getMember
      subtract
      push 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      push 2
      lessThan
      not
      branchIfTrue label121
      push r:this, '(;;('
      getMember
      push '45('
      delete
      pop
     label121:
      branch label122
     label122:
      push r:this, 'y', r:this, 'y'
      getMember
      push 0.9
      multiply
      push r:this, '(;;('
      getMember
      push '45('
      getMember
      push 0.1
      multiply
      add
      setMember
     label123:
      push r:this, '(;;('
      getMember
      push '45('
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label124
      push r:this, 'y', r:2
      setMember
     label124:
      push r:this, 'x'
      getMember
      push r:this, ']dc'
      getMember
      lessThan
      not
      branchIfTrue label125
      push r:this, 'x', r:this, ']dc'
      getMember
      setMember
      push r:this, '(;;('
      getMember
      push '[DxN', r:this, '(;;('
      getMember
      push '[DxN'
      getMember
      push -1
      multiply
      setMember
     label125:
      push r:this, 'x'
      getMember
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '(l;('
      getMember
      push r:this, ']dc'
      getMember
      subtract
      greaterThan
      not
      branchIfTrue label126
      push r:this, 'x', r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '(l;('
      getMember
      push r:this, ']dc'
      getMember
      subtract
      setMember
      push r:this, '(;;('
      getMember
      push '[DxN', r:this, '(;;('
      getMember
      push '[DxN'
      getMember
      push -1
      multiply
      setMember
     label126:
      push r:this, '[)kLd'
      getMember
      push '7o  1('
      getMember
      push UNDEF
      equals
      not
      not
      branchIfTrue label128
      push r:this, '[)kLd'
      getMember
      push '7o  1('
      getMember
      push 0.0
      lessThan
      not
      branchIfTrue label127
      push r:this, '[)kLd'
      getMember
      push '7o  1('
      delete
      pop
      push 1, 1, r:this, '[)kLd'
      getMember
      push '[47*D('
      getMember
      push 'gotoAndStop'
      callMethod
      pop
      push 1, 1, r:this, '[)kLd'
      getMember
      push '2D0X3'
      getMember
      push 'gotoAndStop'
      callMethod
      pop
      branch label128
     label127:
      push r:this, '[)kLd'
      getMember
      push '7o  1(', r:this, '[)kLd'
      getMember
      push '7o  1('
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
     label128:
      push r:this, ']9;(', r:this, 'x'
      getMember
      push r:this, '_x'
      getMember
      subtract
      setMember
      push r:this, '[9;(', r:this, 'y'
      getMember
      push r:this, '_y'
      getMember
      subtract
      setMember
      push r:this, '[)kLd'
      getMember
      push '_x', r:this, '[)kLd'
      getMember
      push '_x'
      getMember
      push r:this, ',N5T'
      getMember
      add
      setMember
      push r:this, '[)kLd'
      getMember
      push '_y', r:this, '[)kLd'
      getMember
      push '_y'
      getMember
      push r:this, '+N5T'
      getMember
      add
      setMember
    end // of function 

    setMember
    push r:1, '+)N,p'
    function2 () (r:1='this')
      push 0.0
      setRegister r:4
      pop
     label129:
      push r:4, 2
      lessThan
      not
      branchIfTrue label136
      push r:this, 'h', r:4
      add
      getMember
      setRegister r:2
      pop
      push r:2, '0)Jso'
      getMember
      not
      branchIfTrue label131
      push r:2, ')1(', r:2, ')1('
      getMember
      push r:this, ']9;('
      getMember
      push 50
      divide
      subtract
      setMember
      push r:2, '(1(', r:2, '(1('
      getMember
      push r:this, '[9;('
      getMember
      push 50
      divide
      subtract
      setMember
      push r:2, '(1(', r:2, '(1('
      getMember
      push 0.5, '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      add
      setMember
      push r:this, '[)kLd'
      getMember
      push '_rotation'
      getMember
      push 0.0174532925199433
      multiply
      setRegister r:12
      pop
      push r:4, 2
      multiply
      push 1
      subtract
      setRegister r:13
      pop
      push r:12, 1, r:4
      subtract
      push 3.14
      multiply
      add
      setRegister r:5
      pop
      push 'x', r:this, '[)kLd'
      getMember
      push '_x'
      getMember
      push r:5, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push r:this, '*W0ZQ'
      getMember
      multiply
      add
      push 'y', r:this, '[)kLd'
      getMember
      push '_y'
      getMember
      push r:5, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push r:this, '*W0ZQ'
      getMember
      multiply
      add
      push 2
      initObject
      setRegister r:6
      pop
      push r:2, 'x'
      getMember
      push r:6, 'x'
      getMember
      subtract
      setRegister r:11
      pop
      push r:2, 'y'
      getMember
      push r:6, 'y'
      getMember
      subtract
      setRegister r:10
      pop
      push r:11, r:11
      multiply
      push r:10, r:10
      multiply
      add
      push 1, 'Math'
      getVariable
      push 'sqrt'
      callMethod
      setRegister r:8
      pop
      push r:11, r:10, 2, 'Math'
      getVariable
      push 'atan2'
      callMethod
      setRegister r:5
      pop
      push r:8, 16
      greaterThan
      not
      branchIfTrue label130
      push r:8, 16
      divide
      setRegister r:9
      pop
      push r:2, ')1(', r:2, ')1('
      getMember
      push r:5, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push r:9
      multiply
      push 0.8
      multiply
      push '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      subtract
      setMember
      push r:2, '(1(', r:2, '(1('
      getMember
      push r:5, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push r:9
      multiply
      push 0.8
      multiply
      push '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      subtract
      setMember
      push 48
      setRegister r:7
      pop
      push r:8, r:7
      greaterThan
      not
      branchIfTrue label130
      push r:2, 'x', r:2, 'x'
      getMember
      push 0.5
      multiply
      push r:6, 'x'
      getMember
      push r:5, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push r:7
      multiply
      add
      push 0.5
      multiply
      add
      setMember
      push r:2, 'y', r:2, 'y'
      getMember
      push 0.5
      multiply
      push r:6, 'y'
      getMember
      push r:5, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push r:7
      multiply
      add
      push 0.5
      multiply
      add
      setMember
     label130:
      push r:2, ')1(', r:2, ')1('
      getMember
      push r:this, '0(}e'
      getMember
      push '(,J R'
      getMember
      multiply
      setMember
      push r:2, '(1(', r:2, '(1('
      getMember
      push r:this, '0(}e'
      getMember
      push '(,J R'
      getMember
      multiply
      setMember
      push r:2, 'x', r:2, 'x'
      getMember
      push r:2, ')1('
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      add
      setMember
      push r:2, 'y', r:2, 'y'
      getMember
      push r:2, '(1('
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      add
      setMember
      branch label132
     label131:
      push r:2, '55('
      getMember
      push r:2, 'x'
      getMember
      subtract
      setRegister r:11
      pop
      push r:2, '45('
      getMember
      push r:2, 'y'
      getMember
      subtract
      setRegister r:10
      pop
      push r:2, 'x', r:2, 'x'
      getMember
      push r:this, '(;;('
      getMember
      push '2i('
      getMember
      push r:11, 0.3
      multiply
      push 0.0, r:this, '(;;('
      getMember
      push '2i('
      getMember
      subtract
      push 2, 'Math'
      getVariable
      push 'max'
      callMethod
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      add
      setMember
      push r:2, 'y', r:2, 'y'
      getMember
      push r:this, '(;;('
      getMember
      push '2i('
      getMember
      push r:10, 0.3
      multiply
      push 0.0, r:this, '(;;('
      getMember
      push '2i('
      getMember
      subtract
      push 2, 'Math'
      getVariable
      push 'max'
      callMethod
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      add
      setMember
     label132:
      push r:2, ')5('
      getMember
      push r:2, '3('
      getMember
      subtract
      setRegister r:3
      pop
     label133:
      push r:3, 3.14
      greaterThan
      not
      branchIfTrue label134
      push r:3, 6.28
      subtract
      setRegister r:3
      pop
      branch label133
     label134:
      push r:3, -3.14
      lessThan
      not
      branchIfTrue label135
      push r:3, 6.28
      add
      setRegister r:3
      pop
      branch label134
     label135:
      push r:2, '3(', r:2, '3('
      getMember
      push r:3, 0.2
      multiply
      add
      setMember
      push r:2, '_rotation', r:2, '3('
      getMember
      push 0.0174532925199433
      divide
      setMember
      push r:2, '_x', r:2, 'x'
      getMember
      setMember
      push r:2, '_y', r:2, 'y'
      getMember
      setMember
      push r:4
      increment
      setRegister r:4
      pop
      branch label129
     label136:
    end // of function 

    setMember
    push r:1, '8D(]0'
    function2 () (r:1='this')
      push 0.0, r:this, 'clear'
      callMethod
      pop
      push r:this, '[)kLd'
      getMember
      push '_rotation'
      getMember
      push 0.0174532925199433
      multiply
      setRegister r:10
      pop
      push 0.0
      setRegister r:2
      pop
     label137:
      push r:2, 2
      lessThan
      not
      branchIfTrue label138
      push r:2, 2
      multiply
      push 1
      subtract
      setRegister r:7
      pop
      push r:10, 1, r:2
      subtract
      push 3.14
      multiply
      add
      setRegister r:3
      pop
      push 'x', r:this, '[)kLd'
      getMember
      push '_x'
      getMember
      push r:3, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push r:this, '0zL=R'
      getMember
      multiply
      add
      push 'y', r:this, '[)kLd'
      getMember
      push '_y'
      getMember
      push r:3, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push r:this, '0zL=R'
      getMember
      multiply
      add
      push 2
      initObject
      setRegister r:5
      pop
      push 'x', r:this, '[)kLd'
      getMember
      push '_x'
      getMember
      push r:3, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push r:this, '*W0ZQ'
      getMember
      multiply
      add
      push 'y', r:this, '[)kLd'
      getMember
      push '_y'
      getMember
      push r:3, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push r:this, '*W0ZQ'
      getMember
      multiply
      add
      push 2
      initObject
      setRegister r:6
      pop
      push 'x', r:this, 'h', r:2
      add
      getMember
      push 'x'
      getMember
      push 'y', r:this, 'h', r:2
      add
      getMember
      push 'y'
      getMember
      push 2
      initObject
      setRegister r:4
      pop
      push 6633486, 8, 2, r:this, 'lineStyle'
      callMethod
      pop
      push r:5, 'y'
      getMember
      push r:5, 'x'
      getMember
      push 2, r:this, 'moveTo'
      callMethod
      pop
      push r:4, 'y'
      getMember
      push r:4, 'x'
      getMember
      push r:6, 'y'
      getMember
      push r:6, 'x'
      getMember
      push 4, r:this, 'curveTo'
      callMethod
      pop
      push 16088067, 6, 2, r:this, 'lineStyle'
      callMethod
      pop
      push r:5, 'y'
      getMember
      push r:5, 'x'
      getMember
      push 2, r:this, 'moveTo'
      callMethod
      pop
      push r:4, 'y'
      getMember
      push r:4, 'x'
      getMember
      push r:6, 'y'
      getMember
      push r:6, 'x'
      getMember
      push 4, r:this, 'curveTo'
      callMethod
      pop
      push r:2
      increment
      setRegister r:2
      pop
      branch label137
     label138:
    end // of function 

    setMember
    push r:1, '15q9I('
    function2 () (r:1='this')
      push r:this, '0(}e'
      getMember
      push '+3ul'
      getMember
      push 'x'
      getMember
      push r:this, 'x'
      getMember
      push r:this, '96}b'
      getMember
      push '_x'
      getMember
      add
      subtract
      setRegister r:3
      pop
      push r:this, '0(}e'
      getMember
      push '+3ul'
      getMember
      push 'y'
      getMember
      push r:this, 'y'
      getMember
      push r:this, '96}b'
      getMember
      push '_y'
      getMember
      add
      subtract
      setRegister r:2
      pop
      push r:3, r:3
      multiply
      push r:2, r:2
      multiply
      add
      push 1, 'Math'
      getVariable
      push 'sqrt'
      callMethod
      setRegister r:4
      pop
      push r:4, r:this, ']dc'
      getMember
      push r:this, '0(}e'
      getMember
      push '+3ul'
      getMember
      push ']dc'
      getMember
      add
      lessThan
      not
      branchIfTrue label139
      push 10, 1, r:this, '0(}e'
      getMember
      push '+3ul'
      getMember
      push ')]6('
      callMethod
      pop
     label139:
    end // of function 

    setMember
    push r:1, '-2)ve'
    function2 () (r:1='this')
      push 0.0
      setRegister r:3
      pop
     label140:
      push r:3, r:this, '0(}e'
      getMember
      push '7W4BT'
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label143
      push r:this, '0(}e'
      getMember
      push '7W4BT'
      getMember
      push r:3
      getMember
      setRegister r:2
      pop
      push r:2, '+v0ER'
      getMember
      dup
      not
      branchIfTrue label141
      pop
      push r:2, 'y'
      getMember
      push r:2, 'x'
      getMember
      push 2, r:this, '9H(sU'
      callMethod
     label141:
      not
      branchIfTrue label142
      push r:2, 1, r:this, '*-4N2'
      callMethod
      pop
     label142:
      push r:3
      increment
      setRegister r:3
      pop
      branch label140
     label143:
    end // of function 

    setMember
    push r:1, '=WCn*('
    function2 () (r:1='this')
      push r:this, '*zWsa'
      getMember
      push 0.0
      lessThan
      not
      branchIfTrue label161
      push r:this, '5i('
      getMember
      push r:this, '5 Z+V'
      getMember
      divide
      setRegister r:2
      pop
      push r:this, '+i(g'
      getMember
      setRegister r:0
      push 0.0
      strictEquals
      branchIfTrue label144
      push r:0, 1
      strictEquals
      branchIfTrue label150
      push r:0, 2
      strictEquals
      branchIfTrue label154
      branch label160
     label144:
      push r:this, 'y'
      getMember
      push 100
      lessThan
      dup
      not
      branchIfTrue label145
      pop
      push 100, '2d['
      getVariable
      push '7J-V'
      getMember
      divide
      random
      not
     label145:
      not
      branchIfTrue label146
      push r:this, '+N5T', 18
      setMember
      push r:this, '*zWsa', 80
      setMember
     label146:
      push 100, '2d['
      getVariable
      push '7J-V'
      getMember
      divide
      random
      not
      not
      branchIfTrue label147
      push 2, 1, r:this, '8Ge;c'
      callMethod
      pop
     label147:
      push r:2, 0.5
      lessThan
      dup
      not
      branchIfTrue label148
      pop
      push 100, '2d['
      getVariable
      push '7J-V'
      getMember
      divide
      random
      not
     label148:
      not
      branchIfTrue label149
      push 3, 1, r:this, '8Ge;c'
      callMethod
      pop
     label149:
      branch label160
     label150:
      push 100, '2d['
      getVariable
      push '7J-V'
      getMember
      divide
      random
      not
      not
      branchIfTrue label151
      push 12, 1, r:this, '8Ge;c'
      callMethod
      pop
     label151:
      push 100, '2d['
      getVariable
      push '7J-V'
      getMember
      divide
      random
      not
      not
      branchIfTrue label152
      push 13, 1, r:this, '8Ge;c'
      callMethod
      pop
     label152:
      push 100, '2d['
      getVariable
      push '7J-V'
      getMember
      divide
      random
      not
      not
      branchIfTrue label153
      push 14, 1, r:this, '8Ge;c'
      callMethod
      pop
     label153:
      branch label160
     label154:
      push 100, '2d['
      getVariable
      push '7J-V'
      getMember
      divide
      random
      not
      not
      branchIfTrue label155
      push 22, 1, r:this, '8Ge;c'
      callMethod
      pop
     label155:
      push r:this, '6l{Wy'
      getMember
      push UNDEF
      equals
      dup
      not
      branchIfTrue label156
      pop
      push 60, '2d['
      getVariable
      push '7J-V'
      getMember
      divide
      random
      not
     label156:
      not
      branchIfTrue label157
      push 23, 1, r:this, '8Ge;c'
      callMethod
      pop
     label157:
      push 160, '2d['
      getVariable
      push '7J-V'
      getMember
      divide
      random
      not
      not
      branchIfTrue label158
      push 24, 1, r:this, '8Ge;c'
      callMethod
      pop
     label158:
      push 100, '2d['
      getVariable
      push '7J-V'
      getMember
      divide
      random
      not
      not
      branchIfTrue label159
      push 25, 1, r:this, '8Ge;c'
      callMethod
      pop
     label159:
      branch label160
     label160:
      branch label162
     label161:
      push r:this, '*zWsa', r:this, '*zWsa'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
     label162:
    end // of function 

    setMember
    push r:1, '0w*((('
    function2 () (r:1='this')
      push r:this, ' q1E)'
      getMember
      setRegister r:4
      pop
      push r:4, '3fEyH'
      getMember
      push 0.0
      lessThan
      dup
      branchIfTrue label163
      pop
      push r:4, '3fEyH'
      getMember
      push UNDEF
      equals
     label163:
      not
      branchIfTrue label182
      push r:4, 'type'
      getMember
      setRegister r:0
      push 0.0
      strictEquals
      branchIfTrue label164
      push r:0, 1
      strictEquals
      branchIfTrue label164
      push r:0, 2
      strictEquals
      branchIfTrue label165
      push r:0, 3
      strictEquals
      branchIfTrue label168
      push r:0, 4
      strictEquals
      branchIfTrue label173
      push r:0, 5
      strictEquals
      branchIfTrue label176
      push r:0, 6
      strictEquals
      branchIfTrue label177
      branch label178
     label164:
      push 'x', r:this, 'x'
      getMember
      push r:this, '96}b'
      getMember
      push '_x'
      getMember
      add
      push 'y', r:this, 'y'
      getMember
      push r:this, '96}b'
      getMember
      push '_y'
      getMember
      add
      push 2
      initObject
      setRegister r:10
      pop
      push r:10, 1, r:this, '0(}e'
      getMember
      push '-oUeu'
      callMethod
      setRegister r:6
      pop
      push 157, 1, r:6, 'gotoAndStop'
      callMethod
      pop
      push 0.0, r:this, '0(}e'
      getMember
      push '*CcbI'
      callMethod
      setRegister r:5
      pop
      push 'x', r:5, 'x'
      getMember
      push r:this, '96}b'
      getMember
      push '_x'
      getMember
      subtract
      push 'y', r:5, 'y'
      getMember
      push r:this, '96}b'
      getMember
      push '_y'
      getMember
      subtract
      push 2
      initObject
      push 1, r:this, '-UU_I('
      callMethod
      setRegister r:7
      pop
      push r:6, ',N5T', r:7, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push 6.5
      multiply
      setMember
      push r:6, '+N5T', r:7, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push 6.5
      multiply
      setMember
      push 0.0, r:6, ',eX{I('
      callMethod
      pop
      branch label178
     label165:
      push 0.0
      setRegister r:2
      pop
     label166:
      push r:2, 2
      lessThan
      not
      branchIfTrue label167
      push 'x', r:this, 'x'
      getMember
      push r:this, 'h', r:2
      add
      getMember
      push 'x'
      getMember
      add
      push 'y', r:this, 'y'
      getMember
      push 28
      add
      push ',N5T', r:this, ']9;('
      getMember
      push 0.8
      multiply
      push 20
      random
      push 10
      subtract
      push 20
      divide
      add
      push '+N5T', 6, 4
      initObject
      setRegister r:10
      pop
      push r:10, 1, r:this, '0(}e'
      getMember
      push '-oUeu'
      callMethod
      setRegister r:6
      pop
      push 158, 1, r:6, 'gotoAndStop'
      callMethod
      pop
      push r:2
      increment
      setRegister r:2
      pop
      branch label166
     label167:
      branch label178
     label168:
      push 0.0
      setRegister r:2
      pop
     label169:
      push r:2, 2
      lessThan
      not
      branchIfTrue label172
      push r:this, ' q1E)'
      getMember
      push '+8{l'
      getMember
      push UNDEF
      equals
      dup
      branchIfTrue label170
      pop
      push r:this, ' q1E)'
      getMember
      push '+8{l'
      getMember
      push r:2
      equals
     label170:
      not
      branchIfTrue label171
      push r:this, 'h', r:2
      add
      getMember
      setRegister r:5
      pop
      push r:5, '_rotation'
      getMember
      push 90
      add
      push 0.0174532925199433
      multiply
      setRegister r:7
      pop
      push r:7, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      setRegister r:9
      pop
      push r:7, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      setRegister r:8
      pop
      push 'x', r:this, 'x'
      getMember
      push r:5, 'x'
      getMember
      add
      push r:9, 10
      multiply
      add
      push 'y', r:this, 'y'
      getMember
      push r:5, 'y'
      getMember
      add
      push r:8, 10
      multiply
      add
      push ',N5T', r:9, 10
      multiply
      push '+N5T', r:8, 10
      multiply
      push 4
      initObject
      setRegister r:10
      pop
      push r:10, 1, r:this, '0(}e'
      getMember
      push '-oUeu'
      callMethod
      setRegister r:6
      pop
      push 159, 1, r:6, 'gotoAndStop'
      callMethod
      pop
      push r:6, '[pJN8(', 100
      setMember
     label171:
      push r:2
      increment
      setRegister r:2
      pop
      branch label169
     label172:
      branch label178
     label173:
      push 18
      setRegister r:3
      pop
      push 0.0
      setRegister r:2
      pop
     label174:
      push r:2, r:3
      lessThan
      not
      branchIfTrue label175
      push r:this, 'h', r:this, ' q1E)'
      getMember
      push '+8{l'
      getMember
      add
      getMember
      setRegister r:5
      pop
      push r:2, r:3
      divide
      push 6.28
      multiply
      setRegister r:7
      pop
      push r:7, r:this, ' q1E)'
      getMember
      push '4NWxl'
      getMember
      push 2
      modulo
      push 6.28, r:3, 2
      multiply
      divide
      multiply
      add
      setRegister r:7
      pop
      push 'x', r:this, 'x'
      getMember
      push r:5, 'x'
      getMember
      add
      push 'y', r:this, 'y'
      getMember
      push r:5, 'y'
      getMember
      add
      push ',N5T', r:7, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push 5
      multiply
      push '+N5T', r:7, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push 5
      multiply
      push 4
      initObject
      setRegister r:10
      pop
      push r:10, 1, r:this, '0(}e'
      getMember
      push '-oUeu'
      callMethod
      setRegister r:6
      pop
      push 160, 1, r:6, 'gotoAndStop'
      callMethod
      pop
      push r:2
      increment
      setRegister r:2
      pop
      branch label174
     label175:
      branch label178
     label176:
      push 0.0, r:this, '0(}e'
      getMember
      push '*CcbI'
      callMethod
      setRegister r:5
      pop
      push r:5, 'x'
      getMember
      push r:this, 'x'
      getMember
      subtract
      setRegister r:12
      pop
      push r:5, 'y'
      getMember
      push r:this, 'y'
      getMember
      subtract
      setRegister r:11
      pop
      push r:12, r:11, 2, 'Math'
      getVariable
      push 'atan2'
      callMethod
      setRegister r:7
      pop
      push r:7, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      setRegister r:9
      pop
      push r:7, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      setRegister r:8
      pop
      push 'x', r:this, 'x'
      getMember
      push r:this, '96}b'
      getMember
      push '_x'
      getMember
      add
      push r:9, r:this, '0zL=R'
      getMember
      multiply
      add
      push 'y', r:this, 'y'
      getMember
      push r:this, '96}b'
      getMember
      push '_y'
      getMember
      add
      push r:8, r:this, '0zL=R'
      getMember
      multiply
      add
      push ',N5T', r:9, 3.5
      multiply
      push '+N5T', r:8, 3.5
      multiply
      push 4
      initObject
      setRegister r:10
      pop
      push r:10, 1, r:this, '0(}e'
      getMember
      push '-oUeu'
      callMethod
      setRegister r:6
      pop
      push r:6, '1U_vK', 4
      setMember
      push 161, 1, r:6, 'gotoAndStop'
      callMethod
      pop
      branch label178
     label177:
      push r:this, 'h', r:this, ' q1E)'
      getMember
      push '+8{l'
      getMember
      add
      getMember
      setRegister r:5
      pop
      push r:5, '(1(', r:5, '(1('
      getMember
      push -1.5
      add
      setMember
      push 'x', r:this, 'x'
      getMember
      push r:5, 'x'
      getMember
      add
      push 'y', r:this, 'y'
      getMember
      push r:5, 'y'
      getMember
      add
      push ',N5T', 2, 0.0, 'Math'
      getVariable
      push 'random'
      callMethod
      push 2
      multiply
      push 1
      subtract
      multiply
      push '+N5T', 4, 4
      initObject
      setRegister r:10
      pop
      push r:10, 1, r:this, '0(}e'
      getMember
      push '-oUeu'
      callMethod
      setRegister r:6
      pop
      push r:6, '1U_vK', 4
      setMember
      push 161, 1, r:6, 'gotoAndStop'
      callMethod
      pop
      branch label178
     label178:
      push r:4, '4NWxl'
      getMember
      push 0.0
      equals
      dup
      branchIfTrue label179
      pop
      push r:4, '4NWxl'
      getMember
      push UNDEF
      equals
     label179:
      not
      branchIfTrue label180
      push r:this, ')(w+4', FALSE
      setMember
      branch label181
     label180:
      push r:4, '4NWxl', r:4, '4NWxl'
      getMember
      decrement
      setMember
      push r:4, '3fEyH', r:4, '3fEyH'
      getMember
      push r:4, ' }Mw4('
      getMember
      add
      setMember
     label181:
      branch label183
     label182:
      push r:this, ' q1E)'
      getMember
      push '3fEyH', r:this, ' q1E)'
      getMember
      push '3fEyH'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
     label183:
    end // of function 

    setMember
    push r:1, '*-4N2'
    function2 (r:2=';p(') (r:1='this')
      push r:';p(', '}cj8F('
      getMember
      push 10
      equals
      not
      branchIfTrue label184
      push 0.0, r:';p(', '1T3j'
      callMethod
      pop
      push UNDEF
      return
     label184:
      push r:this, '+i(g'
      getMember
      setRegister r:0
      push 0.0
      strictEquals
      branchIfTrue label185
      push r:0, 1
      strictEquals
      branchIfTrue label188
      push r:0, 2
      strictEquals
      branchIfTrue label189
      branch label193
     label185:
      push r:this, '9I0x3('
      getMember
      push 1.5
      greaterThan
      not
      branchIfTrue label186
      push r:';p(', 1, r:this, '=iAcX'
      callMethod
      pop
      branch label187
     label186:
      push r:';p(', 1, r:this, ')]6('
      callMethod
      pop
      push 0.0, r:';p(', '5uYzV'
      callMethod
      pop
     label187:
      branch label193
     label188:
      push r:';p(', 1, r:this, ')]6('
      callMethod
      pop
      push 0.0, r:';p(', '5uYzV'
      callMethod
      pop
      branch label193
     label189:
      push r:this, '7=bN'
      getMember
      push 24
      equals
      dup
      not
      branchIfTrue label190
      pop
      push r:this, ' q1E)'
      getMember
      push '7=bN'
      getMember
      push 0.0
      equals
     label190:
      not
      branchIfTrue label191
      push r:';p(', 1, r:this, '=iAcX'
      callMethod
      pop
      branch label192
     label191:
      push r:';p(', 1, r:this, ')]6('
      callMethod
      pop
      push 0.0, r:';p(', '5uYzV'
      callMethod
      pop
     label192:
      branch label193
     label193:
      push 0.0, r:';p(', '1T3j'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '=iAcX'
    function2 (r:4=';p(') (r:1='this')
      push 0.0, r:';p(', '}W}DT'
      callMethod
      setRegister r:2
      pop
      push r:';p(', 'x'
      getMember
      push r:this, 'x'
      getMember
      subtract
      setRegister r:6
      pop
      push r:';p(', 'y'
      getMember
      push r:this, 'y'
      getMember
      subtract
      setRegister r:5
      pop
      push r:6, r:5, 2, 'Math'
      getVariable
      push 'atan2'
      callMethod
      setRegister r:3
      pop
      push r:2, ',N5T', r:3, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push 4
      multiply
      push r:this, ',N5T'
      getMember
      add
      setMember
      push r:2, '+N5T', r:3, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push 4
      multiply
      push r:this, '+N5T'
      getMember
      add
      setMember
      push r:2, '3fEyH', 20
      setMember
    end // of function 

    setMember
    push r:1, ')]6('
    function2 (r:4=';p(') (r:1='this')
      push r:this, '5i(', r:this, '5i('
      getMember
      decrement
      setMember
      push 0.0, r:this, ',F}tl'
      callMethod
      pop
      push 1
      setRegister r:2
      pop
      push r:';p(', '}cj8F('
      getMember
      push 8
      strictEquals
      branchIfTrue label194
      branch label195
     label194:
      push 0.1
      setRegister r:2
      pop
      branch label195
     label195:
      push r:this, '+i(g'
      getMember
      setRegister r:0
      push 0.0
      strictEquals
      branchIfTrue label196
      push r:0, 1
      strictEquals
      branchIfTrue label198
      push r:0, 2
      strictEquals
      branchIfTrue label200
      branch label202
     label196:
      push r:this, '9I0x3(', r:this, '9I0x3('
      getMember
      push 4
      add
      setMember
      push r:this, 'x'
      getMember
      push r:';p(', 'x'
      getMember
      subtract
      setRegister r:3
      pop
      push r:this, ',N5T', r:this, ',N5T'
      getMember
      push r:3, 6
      divide
      add
      setMember
      push r:this, '+N5T', r:this, '+N5T'
      getMember
      push -12, r:2
      multiply
      add
      setMember
      push r:this, '5i('
      getMember
      push 0.0
      greaterThan
      not
      not
      branchIfTrue label197
      push 9, 1, r:this, '8Ge;c'
      callMethod
      pop
     label197:
      branch label202
     label198:
      push r:this, '+N5T', r:this, '+N5T'
      getMember
      push -1, r:2
      multiply
      add
      setMember
      push r:this, ',N5T', r:this, ',N5T'
      getMember
      push 0.0, 'Math'
      getVariable
      push 'random'
      callMethod
      push 2
      multiply
      push 1
      subtract
      push 1
      multiply
      add
      setMember
      push 2, 1, r:this, '[)kLd'
      getMember
      push '[47*D('
      getMember
      push 'gotoAndStop'
      callMethod
      pop
      push 2, 1, r:this, '[)kLd'
      getMember
      push '2D0X3'
      getMember
      push 'gotoAndStop'
      callMethod
      pop
      push r:this, '[)kLd'
      getMember
      push '7o  1(', 6
      setMember
      push r:this, '5i('
      getMember
      push 0.0
      greaterThan
      not
      not
      branchIfTrue label199
      push 19, 1, r:this, '8Ge;c'
      callMethod
      pop
     label199:
      branch label202
     label200:
      push r:this, '+N5T', r:this, '+N5T'
      getMember
      push -2, r:2
      multiply
      add
      setMember
      push r:this, ',N5T', r:this, ',N5T'
      getMember
      push 0.0, 'Math'
      getVariable
      push 'random'
      callMethod
      push 2
      multiply
      push 1
      subtract
      push 2
      multiply
      add
      setMember
      push 2, 1, r:this, '[)kLd'
      getMember
      push '[47*D('
      getMember
      push 'gotoAndStop'
      callMethod
      pop
      push 2, 1, r:this, '[)kLd'
      getMember
      push '2D0X3'
      getMember
      push 'gotoAndStop'
      callMethod
      pop
      push r:this, '[)kLd'
      getMember
      push '7o  1(', 6
      setMember
      push r:this, '5i('
      getMember
      push 0.0
      greaterThan
      not
      not
      branchIfTrue label201
      push 29, 1, r:this, '8Ge;c'
      callMethod
      pop
     label201:
      branch label202
     label202:
      push r:this, '-ySDR', 'p', 60, '2)', 0.0, 2
      initObject
      setMember
    end // of function 

    setMember
    push r:1, ',F}tl'
    function2 () (r:1='this')
      push r:this, '5i('
      getMember
      push r:this, '5 Z+V'
      getMember
      divide
      setRegister r:2
      pop
      push 1, 1, r:2
      subtract
      push 2
      multiply
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      setRegister r:4
      pop
      push 1, r:2, 2
      multiply
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      setRegister r:3
      pop
      push '3(', 255, r:4
      multiply
      push '-)', 255, r:3
      multiply
      push '*)', 0.0, 3
      initObject
      setRegister r:5
      pop
      push r:5, r:this, ' VZ*2'
      getMember
      push 2, 'miniwave'
      getVariable
      push '+]'
      getMember
      push '}bMO('
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ']dk1('
    function2 () (r:1='this')
      push r:this, '-ySDR'
      getMember
      push '2)', r:this, '-ySDR'
      getMember
      push '2)'
      getMember
      push 42, '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      add
      push 628
      modulo
      setMember
      push r:this, '-ySDR'
      getMember
      push 'p', r:this, '-ySDR'
      getMember
      push 'p'
      getMember
      push 1.5, r:this, '-ySDR'
      getMember
      push '2)'
      getMember
      push 100
      divide
      push 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push 8
      multiply
      add
      push '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      add
      setMember
      push UNDEF
      setRegister r:2
      pop
      push r:this, '-ySDR'
      getMember
      push 'p'
      getMember
      push 100
      greaterThan
      not
      branchIfTrue label204
      push 100
      setRegister r:2
      pop
      push r:this, '-ySDR'
      getMember
      push 'p'
      getMember
      push 120
      greaterThan
      not
      branchIfTrue label203
      push r:this, '-ySDR'
      delete
      pop
     label203:
      branch label205
     label204:
      push r:this, '-ySDR'
      getMember
      push 'p'
      getMember
      setRegister r:2
      pop
     label205:
      push r:2, 16711680, r:this, 3, 'miniwave'
      getVariable
      push '+]'
      getMember
      push '8_aeB('
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '1K72I('
    function2 () (r:1='this')
      push r:this, '*zWsa', 100
      setMember
      push r:this, '7=bN'
      getMember
      setRegister r:0
      push 2
      strictEquals
      branchIfTrue label206
      push r:0, 3
      strictEquals
      branchIfTrue label206
      push r:0, 4
      strictEquals
      branchIfTrue label206
      push r:0, 12
      strictEquals
      branchIfTrue label207
      push r:0, 13
      strictEquals
      branchIfTrue label207
      push r:0, 14
      strictEquals
      branchIfTrue label207
      push r:0, 22
      strictEquals
      branchIfTrue label208
      branch label209
     label206:
      push r:this, '7=bN', 1
      setMember
      branch label209
     label207:
      push 11, 1, r:this, '8Ge;c'
      callMethod
      pop
      branch label209
     label208:
      push 21, 1, r:this, '8Ge;c'
      callMethod
      pop
      branch label209
     label209:
    end // of function 

    setMember
    push r:1, '9H(sU'
    function2 (r:5='x', r:4='y') (r:1='this')
      push 1
      setRegister r:2
      pop
      push r:this, '+i(g'
      getMember
      push 0.0
      equals
      not
      branchIfTrue label210
      push 1.3
      setRegister r:2
      pop
     label210:
      push 'x', r:x, r:this, '96}b'
      getMember
      push '_x'
      getMember
      subtract
      push 'y', r:y, r:this, '96}b'
      getMember
      push '_y'
      getMember
      subtract
      push 2
      initObject
      push 1, r:this, ';qbSN'
      callMethod
      setRegister r:3
      pop
      push r:3, r:this, ']dc'
      getMember
      push r:2
      multiply
      lessThan
      return
    end // of function 

    setMember
    push r:1, '1T3j'
    function2 () (r:1='this', r:2='super')
      push r:this, '0(}e'
      getMember
      push '0YTB2', r:this, '0(}e'
      getMember
      push 'level'
      getMember
      push 1
      add
      setMember
      push 3, 1, r:this, '0(}e'
      getMember
      push '8Ge;c'
      callMethod
      pop
      push 0.0, r:super, '1T3j'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ']1y57', 3
    setMember
    push r:1, ']dc', 25
    setMember
    push r:1, '2],fJ', 30
    setMember
    push r:1, '8G}_+(', 30
    setMember
    push r:1, '0Umk]', 30
    setMember
    push r:1, '0zL=R', 25
    setMember
    push r:1, '*W0ZQ', 36
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push '=K)a'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label211:
    pop
  end // of initMovieClip 629

  defineMovieClip 630 // total frames: 0
  end // of defineMovieClip 630
  
  exportAssets
    630 as '__Packages.miniwave.sp.Saucer'
  end // of exportAssets
  
  initMovieClip 630
    constants '_global', 'miniwave', 'Object', '8y', ')1Y{(', '=w)l', '5u;}4', 'prototype', '}bIdG(', '0(}e', '[w;(', ';*b', ';f q', '6}jsa', 'x', '4N)zC', '[DxN', '4e-1J', '(l;(', '1T3j', '-2)ve', '4k8;L', '7W4BT', 'length', '+v0ER', 'y', '9H(sU', '5uYzV', '6QL_6', '{r-z7', '}EroC', '[bRwJ', ',jJih', '3XLKj', '=Y(', '$saucerKill', ',N5T', '+N5T', '3fEyH', '=M5T', '*3um4(', ';IDPE', 'gotoAndStop', '0F3O', 'stop', '8Z]eO', '*p,2T', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ')1Y{('
    getMember
    not
    not
    branchIfTrue label11
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ')1Y{('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ')1Y{('
    getMember
    push 'miniwave'
    getVariable
    push '5u;}4'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '=w)l'
      callMethod
      pop
      push 57, '}bIdG(', 2, r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push ';f q'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push r:this, 'x', r:this, 'x'
      getMember
      push r:this, '4N)zC'
      getMember
      push r:this, '[DxN'
      getMember
      multiply
      add
      setMember
      push r:this, 'x'
      getMember
      push 'miniwave'
      getVariable
      push '8y'
      getMember
      push ')1Y{('
      getMember
      push '4e-1J'
      getMember
      add
      push 0.0
      lessThan
      dup
      branchIfTrue label3
      pop
      push r:this, 'x'
      getMember
      push 'miniwave'
      getVariable
      push '8y'
      getMember
      push ')1Y{('
      getMember
      push '4e-1J'
      getMember
      subtract
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '(l;('
      getMember
      greaterThan
     label3:
      not
      branchIfTrue label4
      push 0.0, r:this, '1T3j'
      callMethod
      pop
     label4:
      push 0.0, r:this, '-2)ve'
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '-2)ve'
    function2 () (r:1='this')
      push 0.0
      setRegister r:3
      pop
     label5:
      push r:3, r:this, '0(}e'
      getMember
      push '7W4BT'
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label8
      push r:this, '0(}e'
      getMember
      push '7W4BT'
      getMember
      push r:3
      getMember
      setRegister r:2
      pop
      push r:2, '+v0ER'
      getMember
      dup
      not
      branchIfTrue label6
      pop
      push r:2, 'y'
      getMember
      push r:2, 'x'
      getMember
      push 2, r:this, '9H(sU'
      callMethod
     label6:
      not
      branchIfTrue label7
      push 0.0, r:2, '5uYzV'
      callMethod
      pop
      push 0.0, r:2, '1T3j'
      callMethod
      pop
      push r:this, 'y'
      getMember
      push r:this, 'x'
      getMember
      push 2, r:this, '0(}e'
      getMember
      push '6QL_6'
      callMethod
      pop
      push 0.0, r:this, '{r-z7'
      callMethod
      pop
     label7:
      push r:3
      increment
      setRegister r:3
      pop
      branch label5
     label8:
    end // of function 

    setMember
    push r:1, '{r-z7'
    function2 () (r:1='this')
      push 11, '}EroC', 2, r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push '[bRwJ'
      callMethod
      pop
      push 0.0
      setRegister r:2
      pop
     label9:
      push r:2, 8
      lessThan
      not
      branchIfTrue label10
      push r:2, 1
      add
      push 1, r:this, ',jJih'
      callMethod
      pop
      push r:2
      increment
      setRegister r:2
      pop
      branch label9
     label10:
      push 200, 1, r:this, '0(}e'
      getMember
      push '3XLKj'
      callMethod
      pop
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$saucerKill', r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$saucerKill'
      getMember
      increment
      setMember
      push 0.0, r:this, '1T3j'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ',jJih'
    function2 (r:10='23V R') (r:1='this')
      push 'x', r:this, 'x'
      getMember
      push 'y', r:this, 'y'
      getMember
      push ',N5T', 8, 200
      random
      push 100
      subtract
      multiply
      push 100
      divide
      push '+N5T', 8, 0.0, 100
      random
      subtract
      multiply
      push 100
      divide
      push '3fEyH', 16, 14
      random
      add
      push '=M5T', 10, 200
      random
      push 100
      subtract
      multiply
      push 100
      divide
      push 6
      initObject
      setRegister r:3
      pop
      push r:3, '*3um4(', 2, r:this, '0(}e'
      getMember
      push ';IDPE'
      callMethod
      setRegister r:2
      pop
      push 100, 1, r:2, 'gotoAndStop'
      callMethod
      pop
      push r:'23V R', 1, r:2, '0F3O'
      getMember
      push 'gotoAndStop'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '1T3j'
    function2 () (r:1='this', r:2='super')
      push 57, 1, r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push 'stop'
      callMethod
      pop
      push r:this, '0(}e'
      getMember
      push '8Z]eO'
      getMember
      push r:this, 2, r:this, '0(}e'
      getMember
      push '*p,2T'
      callMethod
      pop
      push 0.0, r:super, '1T3j'
      callMethod
      pop
    end // of function 

    setMember
    push r:0, '4e-1J', 40
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ')1Y{('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label11:
    pop
  end // of initMovieClip 630

  defineMovieClip 631 // total frames: 0
  end // of defineMovieClip 631
  
  exportAssets
    631 as '__Packages.miniwave.sp.Shot'
  end // of exportAssets
  
  initMovieClip 631
    constants '_global', 'miniwave', 'Object', '8y', '[p7M', '=w)l', '5u;}4', 'prototype', 'stop', ',eX{I(', '7luP*', ',N5T', '+N5T', '+v0ER', '92*e}', '{2{X2(', '6}jsa', 'x', '2d[', '7J-V', 'y', '1U_vK', '_rotation', '}cj8F(', '0(}e', '7W4BT', 'length', '9H(sU', '1T3j', '[w;(', '9l;(', '1K5V', '-oUeu', 'gotoAndStop', '+3ul', 'Math', 'max', 'min', '_visible', '(l;(', '[E6Gr', '(,J R', '7=bN', '3d)b', '_alpha', '}h R', '[g(', ';rdKH', ';9s=p', '9]7O', ';pzah', '_xscale', '1{SDR', '_yscale', '_x', ']dc', 'abs', ')]6(', ' m1(', 'Key', 'isDown', ']}47;', 'pow', '3fEyH', '}=*uB(', 'sqrt', 'target', 'boss', '=mb_F', '72{sF', '+zt;E', '2)', '0ttdQ', 'cos', '8-FUS', '0AVi3', '=-4]K', ',OClF', '(( Uy', 'play', '-EUoo', '0NJr+', '4N)zC', 'oldPos', '-UU_I(', 'sin', ' nr=c', ';qbSN', '70 (', '45(', '4OIUS', 'gotoAndPlay', '{r-z7', '[pJN8(', '+};I2', '3XLKj', '4k8;L', ',,toG(', ';IDPE', ']nBjo', '2O9aS', '1Sui2', '-NysU', '( ZF6(', '*p,2T', 'atan2', '-_WGz', ';*b', '[bRwJ', ' HkK}', '5uYzV', '39Q,v', '=jRD5(', '}W}DT', '),+Xu', ' mMv2(', '0F3O', '2CiDT', 'attachMovie', '_currentframe', '[3=oN', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push '[p7M'
    getMember
    not
    not
    branchIfTrue label132
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push '[p7M'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push '[p7M'
    getMember
    push 'miniwave'
    getVariable
    push '5u;}4'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '=w)l'
      callMethod
      pop
      push 0.0, r:this, 'stop'
      callMethod
      pop
      push 0.0, r:this, ',eX{I('
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '7luP*'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '7luP*'
      callMethod
      pop
      push r:this, ',N5T'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label3
      push r:this, ',N5T', 0.0
      setMember
     label3:
      push r:this, '+N5T'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label4
      push r:this, '+N5T', 0.0
      setMember
     label4:
      push r:this, '+v0ER'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label5
      push r:this, '+v0ER', TRUE
      setMember
     label5:
      push r:this, '+v0ER'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label6
      push r:this, '+v0ER', TRUE
      setMember
     label6:
      push r:this, '92*e}'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label7
      push r:this, '92*e}', FALSE
      setMember
     label7:
      push r:this, '{2{X2('
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label8
      push r:this, '{2{X2(', 0.0, 'Object'
      new
      setMember
     label8:
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push r:this, 'x', r:this, 'x'
      getMember
      push r:this, ',N5T'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      add
      setMember
      push r:this, 'y', r:this, 'y'
      getMember
      push r:this, '+N5T'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      add
      setMember
      push r:this, '1U_vK'
      getMember
      push UNDEF
      equals
      not
      not
      branchIfTrue label9
      push r:this, '_rotation', r:this, '_rotation'
      getMember
      push r:this, '1U_vK'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      add
      setMember
     label9:
      push r:this, '}cj8F('
      getMember
      setRegister r:0
      push 0.0
      strictEquals
      branchIfTrue label10
      push r:0, 1
      strictEquals
      branchIfTrue label16
      push r:0, 2
      strictEquals
      branchIfTrue label17
      push r:0, 3
      strictEquals
      branchIfTrue label19
      push r:0, 4
      strictEquals
      branchIfTrue label20
      push r:0, 5
      strictEquals
      branchIfTrue label27
      push r:0, 6
      strictEquals
      branchIfTrue label30
      push r:0, 7
      strictEquals
      branchIfTrue label32
      push r:0, 8
      strictEquals
      branchIfTrue label38
      push r:0, 9
      strictEquals
      branchIfTrue label43
      push r:0, 10
      strictEquals
      branchIfTrue label44
      push r:0, 11
      strictEquals
      branchIfTrue label45
      push r:0, 12
      strictEquals
      branchIfTrue label50
      push r:0, 13
      strictEquals
      branchIfTrue label52
      push r:0, 14
      strictEquals
      branchIfTrue label57
      push r:0, 15
      strictEquals
      branchIfTrue label60
      push r:0, 16
      strictEquals
      branchIfTrue label65
      push r:0, 17
      strictEquals
      branchIfTrue label69
      push r:0, 18
      strictEquals
      branchIfTrue label80
      push r:0, 19
      strictEquals
      branchIfTrue label81
      push r:0, 20
      strictEquals
      branchIfTrue label82
      push r:0, 21
      strictEquals
      branchIfTrue label83
      push r:0, 22
      strictEquals
      branchIfTrue label85
      push r:0, 23
      strictEquals
      branchIfTrue label93
      push r:0, 24
      strictEquals
      branchIfTrue label99
      push r:0, 25
      strictEquals
      branchIfTrue label103
      branch label107
     label10:
      push FALSE
      setRegister r:8
      pop
      push 0.0
      setRegister r:3
      pop
     label11:
      push r:3, r:this, '0(}e'
      getMember
      push '7W4BT'
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label13
      push r:this, '0(}e'
      getMember
      push '7W4BT'
      getMember
      push r:3
      getMember
      setRegister r:4
      pop
      push r:4, 'y'
      getMember
      push r:4, 'x'
      getMember
      push 2, r:this, '9H(sU'
      callMethod
      not
      branchIfTrue label12
      push 0.0, r:4, '1T3j'
      callMethod
      pop
      push TRUE
      setRegister r:8
      pop
     label12:
      push r:3
      increment
      setRegister r:3
      pop
      branch label11
     label13:
      push r:this, 'y'
      getMember
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '9l;('
      getMember
      push 12
      subtract
      greaterThan
      not
      branchIfTrue label14
      push TRUE
      setRegister r:8
      pop
     label14:
      push r:8
      not
      branchIfTrue label15
      push '1K5V', 40, 'x', r:this, 'x'
      getMember
      push 'y', r:this, 'y'
      getMember
      push ',N5T', 2, '+N5T', 0.0, 5
      initObject
      setRegister r:14
      pop
      push r:14, 1, r:this, '0(}e'
      getMember
      push '-oUeu'
      callMethod
      setRegister r:4
      pop
      push 150, 1, r:4, 'gotoAndStop'
      callMethod
      pop
      push r:14, ',N5T', r:14, ',N5T'
      getMember
      push -1
      multiply
      setMember
      push r:14, 1, r:this, '0(}e'
      getMember
      push '-oUeu'
      callMethod
      setRegister r:4
      pop
      push 150, 1, r:4, 'gotoAndStop'
      callMethod
      pop
      push 0.0, r:this, '1T3j'
      callMethod
      pop
     label15:
      branch label107
     label16:
      push 1.8
      setRegister r:13
      pop
      push r:this, '0(}e'
      getMember
      push '+3ul'
      getMember
      push 'x'
      getMember
      push r:this, 'x'
      getMember
      subtract
      setRegister r:15
      pop
      push r:this, 'x', r:this, 'x'
      getMember
      push r:13, r:15, 8
      divide
      push 0.0, r:13
      subtract
      push 2, 'Math'
      getVariable
      push 'max'
      callMethod
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      add
      setMember
      branch label107
     label17:
      push r:this, '0(}e'
      getMember
      push '+3ul'
      getMember
      setRegister r:9
      pop
      push r:9, '_visible'
      getMember
      push TRUE
      equals
      not
      not
      branchIfTrue label18
      push 'x', r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '(l;('
      getMember
      push 2
      divide
      push 'y', -200, 2
      initObject
      setRegister r:9
      pop
     label18:
      push 0.5, 0.3, r:this, '0(}e'
      getMember
      push '+3ul'
      getMember
      push 3, r:this, '[E6Gr'
      callMethod
      pop
      branch label107
     label19:
      push r:this, '+N5T', r:this, '+N5T'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      push 0.4
      multiply
      add
      setMember
      push r:this, ',N5T', r:this, ',N5T'
      getMember
      push r:this, '0(}e'
      getMember
      push '(,J R'
      getMember
      multiply
      setMember
      push r:this, '+N5T', r:this, '+N5T'
      getMember
      push r:this, '0(}e'
      getMember
      push '(,J R'
      getMember
      multiply
      setMember
      push 0.0, r:this, ',eX{I('
      callMethod
      pop
      branch label107
     label20:
      push r:this, '{2{X2('
      getMember
      push '7=bN'
      getMember
      setRegister r:0
      push 0.0
      strictEquals
      branchIfTrue label21
      push r:0, 1
      strictEquals
      branchIfTrue label23
      branch label26
     label21:
      push r:this, 'y'
      getMember
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '9l;('
      getMember
      push 10
      subtract
      greaterThan
      not
      branchIfTrue label22
      push r:this, '{2{X2('
      getMember
      push '7=bN', 1
      setMember
      push r:this, '{2{X2('
      getMember
      push '3d)b', 0.0
      setMember
      push r:this
      pop
      push r:this, '_alpha', 70
      setMember
      push r:this, '+v0ER', FALSE
      setMember
     label22:
      branch label26
     label23:
      push r:this, '{2{X2('
      getMember
      push '3d)b', r:this, '{2{X2('
      getMember
      push '3d)b'
      getMember
      push 0.02, '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      add
      setMember
      push r:this, '{2{X2('
      getMember
      push '3d)b'
      getMember
      setRegister r:7
      pop
      push r:this, '{2{X2('
      getMember
      push '}h R'
      getMember
      push 'x'
      getMember
      push r:this, '{2{X2('
      getMember
      push '[g('
      getMember
      push 9
      multiply
      push 4.5
      subtract
      add
      setRegister r:24
      pop
      push r:this, '{2{X2('
      getMember
      push '}h R'
      getMember
      push 'y'
      getMember
      push 4.5
      add
      setRegister r:23
      pop
      push r:7, 0.6
      lessThan
      not
      branchIfTrue label24
      push r:this, 'x', r:this, 'x'
      getMember
      push 1, r:7
      subtract
      multiply
      push r:24, r:7
      multiply
      add
      setMember
      push r:this, 'y', r:this, 'y'
      getMember
      push 1, r:7
      subtract
      multiply
      push r:23, r:7
      multiply
      add
      setMember
      branch label25
     label24:
      push r:this, '{2{X2('
      getMember
      push '[g('
      getMember
      push 1, r:this, '{2{X2('
      getMember
      push '}h R'
      getMember
      push ';rdKH'
      callMethod
      pop
      push 0.0, r:this, '1T3j'
      callMethod
      pop
     label25:
      branch label26
     label26:
      branch label107
     label27:
      push r:this, '{2{X2('
      getMember
      setRegister r:21
      pop
      push r:21, ';9s=p', r:21, ';9s=p'
      getMember
      push r:this, '+N5T'
      getMember
      add
      setMember
      push 1, r:21, ';9s=p'
      getMember
      push r:21, 'length'
      getMember
      divide
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      setRegister r:7
      pop
      push r:this, '9]7O'
      getMember
      push ';pzah'
      getMember
      push '_xscale', r:7, 100
      multiply
      setMember
      push r:this, '1{SDR'
      getMember
      push '_xscale', 1, r:7
      subtract
      push 100
      multiply
      setMember
      push r:this, '1{SDR'
      getMember
      push '_yscale', 1, r:7
      subtract
      push 100
      multiply
      setMember
      push r:this, '1{SDR'
      getMember
      push '_x', 0.0, r:7
      subtract
      push r:21, 'length'
      getMember
      multiply
      setMember
      push r:this, '0(}e'
      getMember
      push '+3ul'
      getMember
      setRegister r:9
      pop
      push r:this, 'y'
      getMember
      push r:9, 'y'
      getMember
      push r:9, ']dc'
      getMember
      subtract
      greaterThan
      dup
      not
      branchIfTrue label28
      pop
      push r:this, 'y'
      getMember
      push r:21, 'length'
      getMember
      subtract
      push r:9, 'y'
      getMember
      push r:9, ']dc'
      getMember
      add
      lessThan
     label28:
      not
      branchIfTrue label29
      push r:9, 'x'
      getMember
      push r:this, 'x'
      getMember
      subtract
      push 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      push r:9, ']dc'
      getMember
      lessThan
      not
      branchIfTrue label29
      push 0.0, r:9, ')]6('
      callMethod
      pop
     label29:
      branch label107
     label30:
      push r:this, '0(}e'
      getMember
      push '+3ul'
      getMember
      push ' m1('
      getMember
      push 2
      getMember
      push 1, 'Key'
      getVariable
      push 'isDown'
      callMethod
      not
      branchIfTrue label31
      push 0.0, r:this, '1T3j'
      callMethod
      pop
     label31:
      branch label107
     label32:
      push r:this, '{2{X2('
      getMember
      setRegister r:21
      pop
      push r:21, ']dc', r:21, ']dc'
      getMember
      push r:21, ']}47;'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      add
      setMember
      push r:21, ']dc', r:21, ']dc'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      push r:21, '(,J R'
      getMember
      push 2, 'Math'
      getVariable
      push 'pow'
      callMethod
      multiply
      setMember
      push r:21, '3fEyH', r:21, '3fEyH'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
      push r:this, '_xscale', r:21, ']dc'
      getMember
      push 2
      multiply
      setMember
      push r:this, '_yscale', r:21, ']dc'
      getMember
      push 2
      multiply
      setMember
      push r:21, '3fEyH'
      getMember
      push 0.0
      lessThan
      not
      branchIfTrue label33
      push 0.0, r:this, '1T3j'
      callMethod
      pop
      branch label34
     label33:
      push r:21, '3fEyH'
      getMember
      push 10
      lessThan
      not
      branchIfTrue label34
      push r:this, '_alpha', r:21, '3fEyH'
      getMember
      push 10
      multiply
      setMember
     label34:
      push r:21, '3fEyH'
      getMember
      push 5
      greaterThan
      not
      branchIfTrue label37
      push r:this, '0(}e'
      getMember
      push '}=*uB('
      getMember
      setRegister r:6
      pop
      push 0.0
      setRegister r:3
      pop
     label35:
      push r:3, r:6, 'length'
      getMember
      lessThan
      not
      branchIfTrue label37
      push r:6, r:3
      getMember
      setRegister r:4
      pop
      push r:4, 'x'
      getMember
      push r:this, 'x'
      getMember
      subtract
      setRegister r:12
      pop
      push r:4, 'y'
      getMember
      push r:this, 'y'
      getMember
      subtract
      setRegister r:10
      pop
      push r:12, r:12
      multiply
      push r:10, r:10
      multiply
      add
      push 1, 'Math'
      getVariable
      push 'sqrt'
      callMethod
      setRegister r:17
      pop
      push r:17, r:21, ']dc'
      getMember
      lessThan
      not
      branchIfTrue label36
      push 0.0, r:4, ')]6('
      callMethod
      pop
     label36:
      push r:3
      increment
      setRegister r:3
      pop
      branch label35
     label37:
      branch label107
     label38:
      push r:this, '{2{X2('
      getMember
      setRegister r:21
      pop
      push r:21, 'target'
      getMember
      push UNDEF
      equals
      dup
      branchIfTrue label39
      pop
      push r:21, 'target'
      getMember
      push '_visible'
      getMember
      push TRUE
      equals
      not
     label39:
      not
      branchIfTrue label42
      push r:this, '0(}e'
      getMember
      push '}=*uB('
      getMember
      setRegister r:6
      pop
      push r:6, 'length'
      getMember
      push 0.0
      greaterThan
      not
      branchIfTrue label40
      push r:21, 'target', r:6, r:6, 'length'
      getMember
      random
      getMember
      setMember
      branch label42
     label40:
      push r:this, '0(}e'
      getMember
      push '7=bN'
      getMember
      push 4
      equals
      not
      branchIfTrue label41
      push r:21, 'target', r:this, '0(}e'
      getMember
      push 'boss'
      getMember
      setMember
      branch label42
     label41:
      push 0.0, r:this, '=mb_F'
      callMethod
      pop
     label42:
      push 0.5, 1, r:21, 'target'
      getMember
      push 3, r:this, '[E6Gr'
      callMethod
      pop
      push '72{sF', 1, r:this, '+zt;E'
      callMethod
      pop
      branch label107
     label43:
      push r:this, '{2{X2('
      getMember
      setRegister r:21
      pop
      push r:21, '2)', r:21, '2)'
      getMember
      push r:21, '0ttdQ'
      getMember
      add
      push 628
      modulo
      setMember
      push r:21, '2)'
      getMember
      push 100
      divide
      push 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push r:21, '8-FUS'
      getMember
      multiply
      setRegister r:12
      pop
      push r:this, 'x', r:21, 'x'
      getMember
      push r:12
      add
      setMember
      push '0AVi3', 1, r:this, '+zt;E'
      callMethod
      pop
      branch label107
     label44:
      branch label107
     label45:
      push r:this, '{2{X2('
      getMember
      setRegister r:21
      pop
      push r:21, '3fEyH'
      getMember
      push 0.0
      greaterThan
      not
      branchIfTrue label47
      push r:21, '3fEyH', r:21, '3fEyH'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
      push r:this, '0(}e'
      getMember
      push '+3ul'
      getMember
      setRegister r:7
      pop
      push r:7, '_visible'
      getMember
      push TRUE
      equals
      not
      not
      branchIfTrue label46
      push 'x', r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '(l;('
      getMember
      push 2
      divide
      push 'y', r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '9l;('
      getMember
      push 10
      subtract
      push 2
      initObject
      setRegister r:7
      pop
     label46:
      branch label49
     label47:
      push r:21, '=-4]K'
      getMember
      setRegister r:7
      pop
      push r:7, '_visible'
      getMember
      push TRUE
      equals
      not
      not
      branchIfTrue label48
      push 'x', r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '(l;('
      getMember
      push 2
      divide
      push 'y', -200, 2
      initObject
      setRegister r:7
      pop
     label48:
      push r:7, 'x'
      getMember
      push r:this, 'x'
      getMember
      subtract
      setRegister r:12
      pop
      push r:7, 'y'
      getMember
      push r:this, 'y'
      getMember
      subtract
      setRegister r:10
      pop
      push r:12, r:12
      multiply
      push r:10, r:10
      multiply
      add
      push 1, 'Math'
      getVariable
      push 'sqrt'
      callMethod
      setRegister r:17
      pop
      push r:17, 10
      lessThan
      not
      branchIfTrue label49
      push 0.0, r:21, '=-4]K'
      getMember
      push ',OClF'
      callMethod
      pop
      push 0.0, r:this, '1T3j'
      callMethod
      pop
     label49:
      push 0.5, 0.3, r:7, 3, r:this, '[E6Gr'
      callMethod
      pop
      push r:this, '_rotation', 360
      random
      setMember
      branch label107
     label50:
      push r:this, '{2{X2('
      getMember
      setRegister r:21
      pop
      push 0.5, 0.7, r:21, 'target'
      getMember
      push 3, r:this, '[E6Gr'
      callMethod
      pop
      push '(( Uy', 1, r:this, '+zt;E'
      callMethod
      pop
      push r:this, 'y'
      getMember
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '9l;('
      getMember
      push 4
      add
      greaterThan
      not
      branchIfTrue label51
      push 0.0, r:this, '1T3j'
      callMethod
      pop
     label51:
      branch label107
     label52:
      push r:this, '{2{X2('
      getMember
      setRegister r:21
      pop
      push r:this, '0(}e'
      getMember
      push '+3ul'
      getMember
      setRegister r:7
      pop
      push r:7, '_visible'
      getMember
      push TRUE
      equals
      not
      not
      branchIfTrue label53
      push 'x', r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '(l;('
      getMember
      push 2
      divide
      push 'y', r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '9l;('
      getMember
      push 10
      subtract
      push 2
      initObject
      setRegister r:7
      pop
     label53:
      push r:this, 'y'
      getMember
      push r:7, 'y'
      getMember
      greaterThan
      not
      branchIfTrue label54
      push r:this, 'y', r:7, 'y'
      getMember
      setMember
      push r:this, ',N5T', 0.0
      setMember
      push r:this, '+N5T', 0.0
      setMember
      push 0.0, r:this, '9]7O'
      getMember
      push 'play'
      callMethod
      pop
      push r:this, '9]7O'
      getMember
      push '-EUoo', TRUE
      setMember
      push r:21, '0NJr+', TRUE
      setMember
      push r:21, '3fEyH', 100
      setMember
     label54:
      push r:21, '0NJr+'
      getMember
      not
      branchIfTrue label56
      push r:21, '3fEyH'
      getMember
      push 0.0
      greaterThan
      not
      branchIfTrue label55
      push r:21, '3fEyH', r:21, '3fEyH'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
      push r:this, '0(}e'
      getMember
      push '+3ul'
      getMember
      push 'x'
      getMember
      push r:this, 'x'
      getMember
      subtract
      setRegister r:16
      pop
      push r:this, '0(}e'
      getMember
      push '+3ul'
      getMember
      push 'x', r:this, '0(}e'
      getMember
      push '+3ul'
      getMember
      push 'x'
      getMember
      push 2, 40, r:16
      divide
      push -2, 2, 'Math'
      getVariable
      push 'max'
      callMethod
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      push '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      subtract
      setMember
      branch label56
     label55:
      push r:this, '9]7O'
      getMember
      push '-EUoo', FALSE
      setMember
     label56:
      branch label107
     label57:
      push r:this, '{2{X2('
      getMember
      setRegister r:21
      pop
      push '2d['
      getVariable
      push '7J-V'
      getMember
      push 0.8, 2, 'Math'
      getVariable
      push 'pow'
      callMethod
      setRegister r:7
      pop
      push r:this, ',N5T', r:this, ',N5T'
      getMember
      push r:7
      multiply
      setMember
      push r:this, '+N5T', r:this, '+N5T'
      getMember
      push r:7
      multiply
      setMember
      push r:this, '+N5T'
      getMember
      push 1
      greaterThan
      not
      branchIfTrue label58
      push '(( Uy', 1, r:this, '+zt;E'
      callMethod
      pop
     label58:
      push r:this, '+N5T'
      getMember
      push 0.1
      lessThan
      not
      branchIfTrue label59
      push r:this, '+N5T', r:this, '{2{X2('
      getMember
      push '4N)zC'
      getMember
      setMember
      push r:this, ',N5T', r:this, '{2{X2('
      getMember
      push '4N)zC'
      getMember
      push 3
      random
      push 1
      subtract
      multiply
      setMember
      push r:21, 'oldPos', 'x', r:this, 'x'
      getMember
      push 'y', r:this, 'y'
      getMember
      push 2
      initObject
      setMember
     label59:
      branch label107
     label60:
      push r:this, 'x'
      getMember
      push 0.0
      lessThan
      dup
      branchIfTrue label61
      pop
      push r:this, 'x'
      getMember
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '(l;('
      getMember
      greaterThan
     label61:
      dup
      not
      branchIfTrue label62
      pop
      push r:this, 'y'
      getMember
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '9l;('
      getMember
      push 10
      subtract
      lessThan
     label62:
      not
      branchIfTrue label64
      push r:this, '0(}e'
      getMember
      push '+3ul'
      getMember
      setRegister r:7
      pop
      push r:7, '_visible'
      getMember
      push TRUE
      equals
      not
      not
      branchIfTrue label63
      push 'x', r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '(l;('
      getMember
      push 2
      divide
      push 'y', r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '9l;('
      getMember
      push 10
      subtract
      push 2
      initObject
      setRegister r:7
      pop
     label63:
      push r:7, 1, r:this, '-UU_I('
      callMethod
      setRegister r:11
      pop
      push r:this, ',N5T', r:11, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push 4
      multiply
      setMember
      push r:this, '+N5T', r:11, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push 4
      multiply
      setMember
      push 0.0, r:this, ',eX{I('
      callMethod
      pop
     label64:
      push ' nr=c', 1, r:this, '+zt;E'
      callMethod
      pop
      branch label107
     label65:
      push 0.0
      setRegister r:3
      pop
     label66:
      push r:3, r:this, '0(}e'
      getMember
      push '7W4BT'
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label68
      push r:this, '0(}e'
      getMember
      push '7W4BT'
      getMember
      push r:3
      getMember
      setRegister r:4
      pop
      push r:4, 'y'
      getMember
      push r:4, 'x'
      getMember
      push 2, r:this, '9H(sU'
      callMethod
      not
      branchIfTrue label67
      push 0.0, r:4, '1T3j'
      callMethod
      pop
      push 0.0, r:this, '9]7O'
      getMember
      push 'play'
      callMethod
      pop
      push r:this, '+v0ER', FALSE
      setMember
     label67:
      push r:3
      increment
      setRegister r:3
      pop
      branch label66
     label68:
      branch label107
     label69:
      push r:this, '{2{X2('
      getMember
      setRegister r:21
      pop
      push r:21, '7=bN'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label70
      push r:21, '7=bN', 0.0
      setMember
     label70:
      push 0.0
      setRegister r:3
      pop
     label71:
      push r:3, r:this, '0(}e'
      getMember
      push '7W4BT'
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label73
      push r:this, '0(}e'
      getMember
      push '7W4BT'
      getMember
      push r:3
      getMember
      setRegister r:4
      pop
      push r:4, 'y'
      getMember
      push r:4, 'x'
      getMember
      push 2, r:this, '9H(sU'
      callMethod
      not
      branchIfTrue label72
      push 0.0, r:4, '1T3j'
      callMethod
      pop
      push 0.0, r:this, '9]7O'
      getMember
      push 'play'
      callMethod
      pop
      push r:this, '+v0ER', FALSE
      setMember
     label72:
      push r:3
      increment
      setRegister r:3
      pop
      branch label71
     label73:
      push r:this, '+v0ER'
      getMember
      not
      branchIfTrue label79
      push r:this, '0(}e'
      getMember
      push '+3ul'
      getMember
      setRegister r:7
      pop
      push r:21, '7=bN'
      getMember
      setRegister r:0
      push 0.0
      strictEquals
      branchIfTrue label74
      push r:0, 1
      strictEquals
      branchIfTrue label76
      branch label79
     label74:
      push r:7, '_visible'
      getMember
      not
      branchIfTrue label75
      push r:7, 1, r:this, ';qbSN'
      callMethod
      setRegister r:5
      pop
      push r:5, 100
      lessThan
      not
      branchIfTrue label75
      push r:21, '7=bN', 1
      setMember
     label75:
      branch label79
     label76:
      push r:7, '_visible'
      getMember
      not
      branchIfTrue label77
      push 2, 0.7, r:7, 3, r:this, '[E6Gr'
      callMethod
      pop
      branch label78
     label77:
      push 0.0, r:this, '1T3j'
      callMethod
      pop
     label78:
      branch label79
     label79:
      branch label107
     label80:
      branch label107
     label81:
      push r:this, '{2{X2('
      getMember
      setRegister r:21
      pop
      push r:21, '70 (', r:21, '70 ('
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      push 0.6
      multiply
      add
      setMember
      push r:21, '2)', r:21, '2)'
      getMember
      push 18
      add
      push 628
      modulo
      setMember
      push r:this, 'x', r:21, 'x'
      getMember
      push r:21, '2)'
      getMember
      push 100
      divide
      push 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push r:21, '70 ('
      getMember
      multiply
      add
      setMember
      push ' nr=c', 1, r:this, '+zt;E'
      callMethod
      pop
      branch label107
     label82:
      push 5, 0.25, r:this, '0(}e'
      getMember
      push '+3ul'
      getMember
      push 3, r:this, '[E6Gr'
      callMethod
      pop
      push r:this, '+N5T', r:this, '+N5T'
      getMember
      push 0.3, '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      add
      setMember
      push 0.0, r:4, ',eX{I('
      callMethod
      pop
      branch label107
     label83:
      push r:this, '{2{X2('
      getMember
      setRegister r:21
      pop
      push r:21, '3fEyH'
      getMember
      push 0.0
      greaterThan
      not
      branchIfTrue label84
      push r:21, '3fEyH', r:21, '3fEyH'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
      push 1, 0.5, r:this, '0(}e'
      getMember
      push '+3ul'
      getMember
      push 3, r:this, '[E6Gr'
      callMethod
      pop
      push r:21, '3fEyH'
      getMember
      push 0.0
      greaterThan
      not
      not
      branchIfTrue label84
      push r:this, '1K5V', 100
      setMember
     label84:
      branch label107
     label85:
      push r:this, '{2{X2('
      getMember
      setRegister r:21
      pop
      push r:21, '7=bN'
      getMember
      setRegister r:0
      push 0.0
      strictEquals
      branchIfTrue label86
      push r:0, 1
      strictEquals
      branchIfTrue label90
      branch label92
     label86:
      push 60
      random
      not
      not
      branchIfTrue label87
      push r:21, '7=bN', 1
      setMember
      push r:21, '45(', r:this, 'y'
      getMember
      push 80
      subtract
      setMember
      push r:21, ',N5T', 0.0, r:this, ',N5T'
      getMember
      subtract
      setMember
      push r:21, '+N5T', r:this, '+N5T'
      getMember
      setMember
      push r:this, ',N5T', 0.0
      setMember
      push r:this, '+N5T', 0.0
      setMember
     label87:
      push r:this, 'x'
      getMember
      push 0.0
      lessThan
      not
      branchIfTrue label88
      push r:this, ',N5T', r:this, ',N5T'
      getMember
      push 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      setMember
     label88:
      push r:this, 'x'
      getMember
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '(l;('
      getMember
      greaterThan
      not
      branchIfTrue label89
      push r:this, ',N5T', 0.0, r:this, ',N5T'
      getMember
      push 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      subtract
      setMember
     label89:
      branch label92
     label90:
      push r:21, '45('
      getMember
      push r:this, 'y'
      getMember
      subtract
      setRegister r:10
      pop
      push r:this, 'y', r:this, 'y'
      getMember
      push r:10, '2d['
      getVariable
      push '7J-V'
      getMember
      push 0.5, 2, 'Math'
      getVariable
      push 'pow'
      callMethod
      multiply
      add
      setMember
      push r:10, 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      push 2
      lessThan
      not
      branchIfTrue label91
      push r:this, ',N5T', r:21, ',N5T'
      getMember
      setMember
      push r:this, '+N5T', r:21, '+N5T'
      getMember
      setMember
      push r:21, '7=bN', 0.0
      setMember
     label91:
      branch label92
     label92:
      push ' nr=c', 1, r:this, '+zt;E'
      callMethod
      pop
      branch label107
     label93:
      push r:this, '{2{X2('
      getMember
      setRegister r:21
      pop
      push 0.0
      setRegister r:3
      pop
     label94:
      push r:3, r:this, '0(}e'
      getMember
      push '7W4BT'
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label96
      push r:this, '0(}e'
      getMember
      push '7W4BT'
      getMember
      push r:3
      getMember
      setRegister r:4
      pop
      push r:4, 1, r:this, ';qbSN'
      callMethod
      setRegister r:5
      pop
      push r:5, 10
      lessThan
      not
      branchIfTrue label95
      push 0.0, r:4, '1T3j'
      callMethod
      pop
      push '4OIUS', 1, r:this, '9]7O'
      getMember
      push 'gotoAndPlay'
      callMethod
      pop
      push r:this, '+v0ER', FALSE
      setMember
      push r:this, '1U_vK', 0.0
      setMember
     label95:
      push r:3
      increment
      setRegister r:3
      pop
      branch label94
     label96:
      push 18, '2d['
      getVariable
      push '7J-V'
      getMember
      divide
      random
      not
      dup
      not
      branchIfTrue label97
      pop
      push r:this, '+v0ER'
      getMember
     label97:
      not
      branchIfTrue label98
      push 628
      random
      push 100
      divide
      setRegister r:11
      pop
      push 'x', r:this, 'x'
      getMember
      push 'y', r:this, 'y'
      getMember
      push ',N5T', r:11, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push 4
      multiply
      push '+N5T', r:11, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push 4
      multiply
      push '1U_vK', 60
      random
      push 30
      subtract
      push 5
      initObject
      setRegister r:14
      pop
      push r:14, 1, r:this, '0(}e'
      getMember
      push '-oUeu'
      callMethod
      setRegister r:4
      pop
      push 162, 1, r:4, 'gotoAndStop'
      callMethod
      pop
     label98:
      branch label107
     label99:
      push r:this, 'x'
      getMember
      push 0.0
      lessThan
      not
      branchIfTrue label100
      push r:this, ',N5T', r:this, ',N5T'
      getMember
      push 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      setMember
     label100:
      push r:this, 'x'
      getMember
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '(l;('
      getMember
      greaterThan
      not
      branchIfTrue label101
      push r:this, ',N5T', 0.0, r:this, ',N5T'
      getMember
      push 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      subtract
      setMember
     label101:
      push r:this, 'y'
      getMember
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '9l;('
      getMember
      greaterThan
      not
      branchIfTrue label102
      push r:this, '+N5T', 0.0, r:this, '+N5T'
      getMember
      push 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      subtract
      setMember
     label102:
      branch label107
     label103:
      push r:this, '0(}e'
      getMember
      push '}=*uB('
      getMember
      setRegister r:6
      pop
      push 0.0
      setRegister r:3
      pop
     label104:
      push r:3, r:6, 'length'
      getMember
      lessThan
      not
      branchIfTrue label106
      push r:6, r:3
      getMember
      setRegister r:4
      pop
      push r:4, 'y'
      getMember
      push r:this, 'y'
      getMember
      greaterThan
      not
      branchIfTrue label105
      push 0.0, r:4, '{r-z7'
      callMethod
      pop
     label105:
      push r:3
      increment
      setRegister r:3
      pop
      branch label104
     label106:
      branch label107
     label107:
      push r:this, '1K5V'
      getMember
      push UNDEF
      equals
      not
      not
      branchIfTrue label109
      push r:this, '1K5V', r:this, '1K5V'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
      push r:this, '1K5V'
      getMember
      push 0.0
      lessThan
      not
      branchIfTrue label108
      push 0.0, r:this, '1T3j'
      callMethod
      pop
      branch label109
     label108:
      push r:this, '1K5V'
      getMember
      push 10
      lessThan
      not
      branchIfTrue label109
      push r:this, '_alpha', r:this, '1K5V'
      getMember
      push 10
      multiply
      setMember
     label109:
      push r:this, 'x'
      getMember
      push 0.0, r:this, '[pJN8('
      getMember
      subtract
      lessThan
      dup
      branchIfTrue label110
      pop
      push r:this, 'x'
      getMember
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '(l;('
      getMember
      push r:this, '[pJN8('
      getMember
      add
      greaterThan
     label110:
      dup
      branchIfTrue label111
      pop
      push r:this, 'y'
      getMember
      push 0.0, r:this, '[pJN8('
      getMember
      subtract
      lessThan
     label111:
      dup
      branchIfTrue label112
      pop
      push r:this, 'y'
      getMember
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '9l;('
      getMember
      push r:this, '[pJN8('
      getMember
      add
      greaterThan
     label112:
      not
      branchIfTrue label114
      push r:this, '+};I2'
      getMember
      not
      branchIfTrue label113
      push -1, 1, r:this, '0(}e'
      getMember
      push '3XLKj'
      callMethod
      pop
     label113:
      push 0.0, r:this, '1T3j'
      callMethod
      pop
     label114:
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '=mb_F'
    function2 () (r:1='this')
      push ',,toG(', 1, r:this, '0(}e'
      getMember
      push ';IDPE'
      callMethod
      setRegister r:2
      pop
      push r:2, 'x', r:this, 'x'
      getMember
      setMember
      push r:2, 'y', r:this, 'y'
      getMember
      setMember
      push r:2, ']nBjo', FALSE
      setMember
      push 0.0, r:this, '1T3j'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '1T3j'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:this, '2O9aS'
      callMethod
      pop
      push UNDEF
      setRegister r:3
      pop
      push r:this, '1Sui2'
      getMember
      push '-NysU'
      equals
      not
      branchIfTrue label115
      push r:this, '0(}e'
      getMember
      push '7W4BT'
      getMember
      setRegister r:3
      pop
      branch label116
     label115:
      push r:this, '0(}e'
      getMember
      push '( ZF6('
      getMember
      setRegister r:3
      pop
     label116:
      push r:3, r:this, 2, r:this, '0(}e'
      getMember
      push '*p,2T'
      callMethod
      pop
      push 0.0, r:super, '1T3j'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ',eX{I('
    function2 () (r:1='this')
      push r:this, '_rotation', r:this, ',N5T'
      getMember
      push r:this, '+N5T'
      getMember
      push 2, 'Math'
      getVariable
      push 'atan2'
      callMethod
      push 0.0174532925199433
      divide
      setMember
    end // of function 

    setMember
    push r:1, '2O9aS'
    function2 () (r:1='this')
      push r:this, '}cj8F('
      getMember
      push 6
      strictEquals
      branchIfTrue label117
      branch label118
     label117:
      push 62, '-_WGz', 2, r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push '[bRwJ'
      callMethod
      pop
      push 'x', r:this, 'x'
      getMember
      push 'y', r:this, 'y'
      getMember
      push ',N5T', 0.0, '+N5T', 0.0, '}cj8F(', 7, '{2{X2(', ']dc', 0.0, ']}47;', 12, '(,J R', 0.85, '3fEyH', 22, 4
      initObject
      push 6
      initObject
      setRegister r:3
      pop
      push r:3, 1, r:this, '0(}e'
      getMember
      push ' HkK}'
      callMethod
      setRegister r:2
      pop
      push r:2, '_xscale', 0.0
      setMember
      push r:2, '_yscale', 0.0
      setMember
      push 153, 1, r:2, 'gotoAndStop'
      callMethod
      pop
      branch label118
     label118:
    end // of function 

    setMember
    push r:1, '5uYzV'
    function2 () (r:1='this')
      push r:this, '}cj8F('
      getMember
      setRegister r:0
      push 10
      strictEquals
      branchIfTrue label119
      push r:0, 18
      strictEquals
      branchIfTrue label122
      branch label123
     label119:
      push 5
      setRegister r:4
      pop
      push 0.0
      setRegister r:2
      pop
     label120:
      push r:2, r:4
      lessThan
      not
      branchIfTrue label121
      push r:2, r:4
      divide
      push 628
      multiply
      push 100
      divide
      setRegister r:3
      pop
      push 'x', r:this, 'x'
      getMember
      push 'y', r:this, 'y'
      getMember
      push ',N5T', r:3, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push 4
      multiply
      push '+N5T', r:3, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push 4
      multiply
      push '1K5V', 20, '}cj8F(', 10, 6
      initObject
      setRegister r:10
      pop
      push r:10, 1, r:this, '0(}e'
      getMember
      push ' HkK}'
      callMethod
      setRegister r:9
      pop
      push 155, 1, r:9, 'gotoAndStop'
      callMethod
      pop
      push r:2
      increment
      setRegister r:2
      pop
      branch label120
     label121:
      push 0.0, r:this, '1T3j'
      callMethod
      pop
      branch label125
     label122:
      push 100, 1, r:this, '0(}e'
      getMember
      push '+3ul'
      getMember
      push '39Q,v'
      callMethod
      pop
      push 0.0, r:this, '1T3j'
      callMethod
      pop
      branch label125
     label123:
      push 'x', r:this, 'x'
      getMember
      push 'y', r:this, 'y'
      getMember
      push ']nBjo', FALSE, 3
      initObject
      setRegister r:10
      pop
      push r:10, '=jRD5(', 2, r:this, '0(}e'
      getMember
      push ';IDPE'
      callMethod
      setRegister r:9
      pop
      push r:9, '_rotation', 360
      random
      setMember
      push r:this, '92*e}'
      getMember
      not
      not
      branchIfTrue label124
      push 0.0, r:this, '1T3j'
      callMethod
      pop
     label124:
      branch label125
     label125:
    end // of function 

    setMember
    push r:1, '[E6Gr'
    function2 (r:6='target', r:3='4N)zC', r:2='2dl') (r:1='this')
      push r:target, 'x'
      getMember
      push r:this, 'x'
      getMember
      subtract
      setRegister r:5
      pop
      push r:target, 'y'
      getMember
      push r:this, 'y'
      getMember
      subtract
      setRegister r:4
      pop
      push r:5, r:'2dl'
      greaterThan
      not
      branchIfTrue label126
      push r:this, ',N5T', r:this, ',N5T'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      push r:'4N)zC'
      multiply
      add
      setMember
     label126:
      push r:5, 0.0, r:'2dl'
      subtract
      lessThan
      not
      branchIfTrue label127
      push r:this, ',N5T', r:this, ',N5T'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      push r:'4N)zC'
      multiply
      subtract
      setMember
     label127:
      push r:4, r:'2dl'
      greaterThan
      not
      branchIfTrue label128
      push r:this, '+N5T', r:this, '+N5T'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      push r:'4N)zC'
      multiply
      add
      setMember
     label128:
      push r:4, 0.0, r:'2dl'
      subtract
      lessThan
      not
      branchIfTrue label129
      push r:this, '+N5T', r:this, '+N5T'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      push r:'4N)zC'
      multiply
      subtract
      setMember
     label129:
      push r:this, ',N5T', r:this, ',N5T'
      getMember
      push r:this, '0(}e'
      getMember
      push '(,J R'
      getMember
      multiply
      setMember
      push r:this, '+N5T', r:this, '+N5T'
      getMember
      push r:this, '0(}e'
      getMember
      push '(,J R'
      getMember
      multiply
      setMember
      push 0.0, r:this, ',eX{I('
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '+zt;E'
    function2 (r:12=' c2q') (r:1='this')
      push r:this, '{2{X2('
      getMember
      setRegister r:2
      pop
      push r:2, 'oldPos'
      getMember
      push UNDEF
      equals
      not
      not
      branchIfTrue label130
      push 'x', r:this, 'x'
      getMember
      push 'y', r:this, 'y'
      getMember
      push ']nBjo', FALSE, 3
      initObject
      setRegister r:6
      pop
      push TRUE, r:6, r:' c2q', 3, r:this, '0(}e'
      getMember
      push ';IDPE'
      callMethod
      setRegister r:5
      pop
      push r:this, 'x'
      getMember
      push r:2, 'oldPos'
      getMember
      push 'x'
      getMember
      subtract
      setRegister r:4
      pop
      push r:this, 'y'
      getMember
      push r:2, 'oldPos'
      getMember
      push 'y'
      getMember
      subtract
      setRegister r:3
      pop
      push r:4, r:4
      multiply
      push r:3, r:3
      multiply
      add
      push 1, 'Math'
      getVariable
      push 'sqrt'
      callMethod
      setRegister r:8
      pop
      push r:4, r:3, 2, 'Math'
      getVariable
      push 'atan2'
      callMethod
      setRegister r:7
      pop
      push r:5, '_xscale', r:8
      setMember
      push r:5, '_rotation', r:7, 0.0174532925199433
      divide
      setMember
     label130:
      push r:2, 'oldPos', 'x', r:this, 'x'
      getMember
      push 'y', r:this, 'y'
      getMember
      push 2
      initObject
      setMember
    end // of function 

    setMember
    push r:1, '}W}DT'
    function2 (r:2=',to,G(') (r:1='this')
      push r:',to,G(', UNDEF
      equals
      not
      branchIfTrue label131
      push 0.0, 'Object'
      new
      setRegister r:',to,G('
      pop
     label131:
      push r:',to,G(', 'x', r:this, 'x'
      getMember
      setMember
      push r:',to,G(', 'y', r:this, 'y'
      getMember
      setMember
      push r:',to,G(', '),+Xu', TRUE
      setMember
      push r:',to,G(', ' mMv2(', 2, r:this, '0(}e'
      getMember
      push ';IDPE'
      callMethod
      setRegister r:3
      pop
      push 10, '0F3O', '2CiDT', 3, r:3, 'attachMovie'
      callMethod
      pop
      push r:this, '_currentframe'
      getMember
      push 1, r:3, '0F3O'
      getMember
      push 'gotoAndStop'
      callMethod
      pop
      push r:3
      return
    end // of function 

    setMember
    push r:1, '[3=oN'
    function2 () (r:1='this')
      push r:this, ',N5T'
      getMember
      push r:this, ',N5T'
      getMember
      multiply
      push r:this, '+N5T'
      getMember
      push r:this, '+N5T'
      getMember
      multiply
      add
      push 1, 'Math'
      getVariable
      push 'sqrt'
      callMethod
      return
    end // of function 

    setMember
    push r:1, '[pJN8(', 20
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push '[p7M'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label132:
    pop
  end // of initMovieClip 631

  defineMovieClip 632 // total frames: 0
  end // of defineMovieClip 632
  
  exportAssets
    632 as '__Packages.ext.util.PersistCodec'
  end // of exportAssets
  
  initMovieClip 632
    constants '_global', '2h,(', 'Object', '[OaT', '[Eptz', '{P(', '0Qd*i', '3ma9n', '(z8na', '41rdI(', ',E*0H', '[2qsN', 'Array', '1tvm', 'prototype', ']sx{+(', 'length', '98c]F', '0ts7K(', '=UTxR', '173MJ', ';gf', 'unshift', ')LCL1', '1XxO', '=2)kt', '9FmGz', ' EOa{', 'charCodeAt', 'charAt', '(9-(', '=di(2', '', '3mx', '=bcGs', 'function', ' GUF;', '1jTbM', '[94u}', 'Math', 'abs', '0VGFE', 'string', 'number', 'boolean', 'isNaN', 'Infinity', 'NaN', 'toString', '2kTt', 'shift', '3vz1B(', '25(E[', '(s6JL', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push '2h,('
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push '2h,(', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT'
    getMember
    push '[Eptz'
    getMember
    not
    not
    branchIfTrue label87
    push '2h,('
    getVariable
    push '[OaT'
    getMember
    push '[Eptz'
    function2 (r:2='data') (r:1='this')
      push r:this, '{P(', r:'data', 1, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '0Qd*i'
      newMethod
      setMember
      push r:this, '3ma9n', 0.0
      initObject
      setMember
      push r:this, '(z8na', 0.0
      setMember
      push r:this, '41rdI(', 1
      setMember
      push r:this, ',E*0H', 0.0
      setMember
      push r:this, '[2qsN', 0.0, 'Array'
      new
      setMember
      push r:this, '1tvm', NULL
      setMember
    end // of function 

    setRegister r:0
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, ']sx{+('
    function2 (r:4='+)') (r:1='this')
      push UNDEF
      setRegister r:2
      pop
      push 0.0
      setRegister r:3
      pop
      push 0.0
      setRegister r:2
      pop
     label3:
      push r:2, r:'+)', 'length'
      getMember
      lessThan
      not
      branchIfTrue label7
      push r:'+)', r:2
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label4
      push r:3
      increment
      setRegister r:3
      pop
      branch label6
     label4:
      push r:3, 0.0
      greaterThan
      not
      branchIfTrue label5
      push 2, 2, 2, r:this, '{P('
      getMember
      push '98c]F'
      callMethod
      pop
      push r:3, 1, r:this, '0ts7K('
      callMethod
      pop
      push 0.0
      setRegister r:3
      pop
     label5:
      push 0.0, 1, 2, r:this, '{P('
      getMember
      push '98c]F'
      callMethod
      pop
      push r:'+)', r:2
      getMember
      push 1, r:this, '=UTxR'
      callMethod
      pop
     label6:
      push r:2
      increment
      setRegister r:2
      pop
      branch label3
     label7:
      push 3, 2, 2, r:this, '{P('
      getMember
      push '98c]F'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '173MJ'
    function2 () (r:1='this')
      push 0.0, 'Array'
      new
      setRegister r:2
      pop
      push r:2, ';gf', 0.0
      setMember
      push r:2, 1, r:this, '[2qsN'
      getMember
      push 'unshift'
      callMethod
      pop
      push r:2
      return
    end // of function 

    setMember
    push r:1, ')LCL1'
    function2 (r:2='+)') (r:1='this')
      push 1, 1, r:this, '{P('
      getMember
      push '1XxO'
      callMethod
      not
      setRegister r:4
      pop
      push r:4
      not
      branchIfTrue label8
      push r:'+)', r:'+)', ';gf'
      getMember
      push r:'+)', ';gf', r:'+)', ';gf'
      getMember
      increment
      setMember
      push 0.0, r:this, '=2)kt'
      callMethod
      setMember
      branch label10
     label8:
      push 1, 1, r:this, '{P('
      getMember
      push '1XxO'
      callMethod
      setRegister r:3
      pop
      push r:3
      not
      branchIfTrue label9
      push FALSE
      return
     label9:
      push r:'+)', ';gf', r:'+)', ';gf'
      getMember
      push 0.0, r:this, '9FmGz'
      callMethod
      add
      setMember
     label10:
      push TRUE
      return
    end // of function 

    setMember
    push r:1, ' EOa{'
    function2 (r:3='2(') (r:1='this')
      push TRUE
      setRegister r:4
      pop
      push TRUE
      setRegister r:6
      pop
      push UNDEF
      setRegister r:2
      pop
      push 0.0
      setRegister r:2
      pop
     label11:
      push r:2, r:'2(', 'length'
      getMember
      lessThan
      not
      branchIfTrue label14
      push r:2, 1, r:'2(', 'charCodeAt'
      callMethod
      push 127
      greaterThan
      not
      branchIfTrue label12
      push FALSE
      setRegister r:4
      pop
      push FALSE
      setRegister r:6
      pop
      branch label14
      branch label13
     label12:
      push r:4
      not
      branchIfTrue label13
      push r:2, 1, r:'2(', 'charAt'
      callMethod
      setRegister r:5
      pop
      push r:5, 1, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '0Qd*i'
      getMember
      push '(9-('
      callMethod
      push NULL
      equals
      not
      branchIfTrue label13
      push FALSE
      setRegister r:4
      pop
     label13:
      push r:2
      increment
      setRegister r:2
      pop
      branch label11
     label14:
      push r:'2(', 'length'
      getMember
      push 1, r:this, '0ts7K('
      callMethod
      pop
      push r:4
      not
      branchIfTrue label17
      push 0.0, 1, 2, r:this, '{P('
      getMember
      push '98c]F'
      callMethod
      pop
      push 0.0
      setRegister r:2
      pop
     label15:
      push r:2, r:'2(', 'length'
      getMember
      lessThan
      not
      branchIfTrue label16
      push r:2, 1, r:'2(', 'charAt'
      callMethod
      push 1, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '0Qd*i'
      getMember
      push '(9-('
      callMethod
      push 6, 2, r:this, '{P('
      getMember
      push '98c]F'
      callMethod
      pop
      push r:2
      increment
      setRegister r:2
      pop
      branch label15
     label16:
      branch label23
     label17:
      push r:6
      branchIfTrue label18
      push 3
      branch label19
     label18:
      push 2
     label19:
      push 2, 2, r:this, '{P('
      getMember
      push '98c]F'
      callMethod
      pop
      push 0.0
      setRegister r:2
      pop
     label20:
      push r:2, r:'2(', 'length'
      getMember
      lessThan
      not
      branchIfTrue label23
      push r:2, 1, r:'2(', 'charCodeAt'
      callMethod
      push r:6
      branchIfTrue label21
      push 8
      branch label22
     label21:
      push 7
     label22:
      push 2, r:this, '{P('
      getMember
      push '98c]F'
      callMethod
      pop
      push r:2
      increment
      setRegister r:2
      pop
      branch label20
     label23:
    end // of function 

    setMember
    push r:1, '=di(2'
    function2 () (r:1='this')
      push 0.0, r:this, '9FmGz'
      callMethod
      setRegister r:4
      pop
      push 1, 1, r:this, '{P('
      getMember
      push '1XxO'
      callMethod
      not
      setRegister r:6
      pop
      push ''
      setRegister r:3
      pop
      push UNDEF
      setRegister r:2
      pop
      push r:6
      not
      branchIfTrue label26
      push 0.0
      setRegister r:2
      pop
     label24:
      push r:2, r:4
      lessThan
      not
      branchIfTrue label25
      push r:3, 6, 1, r:this, '{P('
      getMember
      push '1XxO'
      callMethod
      push 1, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '0Qd*i'
      getMember
      push '3mx'
      callMethod
      add
      setRegister r:3
      pop
      push r:2
      increment
      setRegister r:2
      pop
      branch label24
     label25:
      branch label30
     label26:
      push 1, 1, r:this, '{P('
      getMember
      push '1XxO'
      callMethod
      not
      setRegister r:5
      pop
      push 0.0
      setRegister r:2
      pop
     label27:
      push r:2, r:4
      lessThan
      not
      branchIfTrue label30
      push r:3, r:5
      branchIfTrue label28
      push 8
      branch label29
     label28:
      push 7
     label29:
      push 1, r:this, '{P('
      getMember
      push '1XxO'
      callMethod
      chr
      add
      setRegister r:3
      pop
      push r:2
      increment
      setRegister r:2
      pop
      branch label27
     label30:
      push r:3
      return
    end // of function 

    setMember
    push r:1, '=bcGs'
    function2 (r:4='7)') (r:1='this')
      push UNDEF
      setRegister r:2
      pop
      push r:'7)'
      enumerateValue
     label31:
      setRegister r:0
      push NULL
      equals
      branchIfTrue label37
      push r:0
      setRegister r:2
      pop
      push r:'7)', r:2
      getMember
      setRegister r:3
      pop
      push r:3
      typeof
      push 'function'
      equals
      not
      dup
      not
      branchIfTrue label32
      pop
      push r:3, UNDEF
      equals
      not
     label32:
      not
      branchIfTrue label36
      push r:this, '3ma9n'
      getMember
      push r:2
      getMember
      push UNDEF
      equals
      not
      not
      branchIfTrue label33
      push 0.0, 1, 2, r:this, '{P('
      getMember
      push '98c]F'
      callMethod
      pop
      push r:this, '3ma9n'
      getMember
      push r:2
      getMember
      push r:this, ',E*0H'
      getMember
      push 2, r:this, '{P('
      getMember
      push '98c]F'
      callMethod
      pop
      branch label35
     label33:
      push r:this, '3ma9n'
      getMember
      push r:2, r:this, '(z8na'
      getMember
      push r:this, '(z8na', r:this, '(z8na'
      getMember
      increment
      setMember
      setMember
      push r:this, '(z8na'
      getMember
      push r:this, '41rdI('
      getMember
      lessThan
      not
      not
      branchIfTrue label34
      push r:this, ',E*0H', r:this, ',E*0H'
      getMember
      increment
      setMember
      push r:this, '41rdI(', r:this, '41rdI('
      getMember
      push 2
      multiply
      setMember
     label34:
      push 2, 2, 2, r:this, '{P('
      getMember
      push '98c]F'
      callMethod
      pop
      push r:2, 1, r:this, ' EOa{'
      callMethod
      pop
     label35:
      push r:3, 1, r:this, '=UTxR'
      callMethod
      pop
     label36:
      branch label31
     label37:
      push 3, 2, 2, r:this, '{P('
      getMember
      push '98c]F'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' GUF;'
    function2 () (r:1='this')
      push 0.0, 'Object'
      new
      setRegister r:2
      pop
      push r:2, 1, r:this, '[2qsN'
      getMember
      push 'unshift'
      callMethod
      pop
      push r:2
      return
    end // of function 

    setMember
    push r:1, '1jTbM'
    function2 (r:5='7)') (r:1='this')
      push UNDEF
      setRegister r:2
      pop
      push 1, 1, r:this, '{P('
      getMember
      push '1XxO'
      callMethod
      not
      setRegister r:3
      pop
      push r:3
      not
      branchIfTrue label38
      push r:this, '3ma9n'
      getMember
      push r:this, ',E*0H'
      getMember
      push 1, r:this, '{P('
      getMember
      push '1XxO'
      callMethod
      getMember
      setRegister r:2
      pop
      branch label40
     label38:
      push 1, 1, r:this, '{P('
      getMember
      push '1XxO'
      callMethod
      setRegister r:4
      pop
      push r:4
      not
      branchIfTrue label39
      push FALSE
      return
     label39:
      push 0.0, r:this, '=di(2'
      callMethod
      setRegister r:2
      pop
      push r:this, '3ma9n'
      getMember
      push r:this, '(z8na'
      getMember
      push r:this, '(z8na', r:this, '(z8na'
      getMember
      increment
      setMember
      push r:2
      setMember
      push r:this, '(z8na'
      getMember
      push r:this, '41rdI('
      getMember
      lessThan
      not
      not
      branchIfTrue label40
      push r:this, ',E*0H', r:this, ',E*0H'
      getMember
      increment
      setMember
      push r:this, '41rdI(', r:this, '41rdI('
      getMember
      push 2
      multiply
      setMember
     label40:
      push r:'7)', r:2, 0.0, r:this, '=2)kt'
      callMethod
      setMember
      push TRUE
      return
    end // of function 

    setMember
    push r:1, '0ts7K('
    function2 (r:2='7)') (r:1='this')
      push r:'7)', 0.0
      lessThan
      not
      branchIfTrue label41
      push 7, 3, 2, r:this, '{P('
      getMember
      push '98c]F'
      callMethod
      pop
      push 0.0, r:'7)'
      subtract
      push 1, r:this, '0ts7K('
      callMethod
      pop
      branch label46
     label41:
      push r:'7)', 4
      lessThan
      not
      branchIfTrue label42
      push 0.0, 2, 2, r:this, '{P('
      getMember
      push '98c]F'
      callMethod
      pop
      push r:'7)', 2, 2, r:this, '{P('
      getMember
      push '98c]F'
      callMethod
      pop
      branch label46
     label42:
      push r:'7)', 16
      lessThan
      not
      branchIfTrue label43
      push 1, 2, 2, r:this, '{P('
      getMember
      push '98c]F'
      callMethod
      pop
      push r:'7)', 4, 2, r:this, '{P('
      getMember
      push '98c]F'
      callMethod
      pop
      branch label46
     label43:
      push r:'7)', 64
      lessThan
      not
      branchIfTrue label44
      push 2, 2, 2, r:this, '{P('
      getMember
      push '98c]F'
      callMethod
      pop
      push r:'7)', 6, 2, r:this, '{P('
      getMember
      push '98c]F'
      callMethod
      pop
      branch label46
     label44:
      push r:'7)', 65536
      lessThan
      not
      branchIfTrue label45
      push 12, 4, 2, r:this, '{P('
      getMember
      push '98c]F'
      callMethod
      pop
      push r:'7)', 16, 2, r:this, '{P('
      getMember
      push '98c]F'
      callMethod
      pop
      branch label46
     label45:
      push 13, 4, 2, r:this, '{P('
      getMember
      push '98c]F'
      callMethod
      pop
      push r:'7)', 4294967295.0
      bitwiseAnd
      push 32, 2, r:this, '{P('
      getMember
      push '98c]F'
      callMethod
      pop
     label46:
    end // of function 

    setMember
    push r:1, '9FmGz'
    function2 () (r:1='this')
      push 2, 1, r:this, '{P('
      getMember
      push '1XxO'
      callMethod
      setRegister r:2
      pop
      push r:2, 3
      equals
      not
      branchIfTrue label49
      push 1, 1, r:this, '{P('
      getMember
      push '1XxO'
      callMethod
      setRegister r:5
      pop
      push r:5
      not
      branchIfTrue label47
      push 0.0, 0.0, r:this, '9FmGz'
      callMethod
      subtract
      return
     label47:
      push 1, 1, r:this, '{P('
      getMember
      push '1XxO'
      callMethod
      setRegister r:4
      pop
      push r:4
      not
      branchIfTrue label48
      push 32, 1, r:this, '{P('
      getMember
      push '1XxO'
      callMethod
      return
      branch label49
     label48:
      push 16, 1, r:this, '{P('
      getMember
      push '1XxO'
      callMethod
      return
     label49:
      push r:2, 1
      add
      push 2
      multiply
      push 1, r:this, '{P('
      getMember
      push '1XxO'
      callMethod
      setRegister r:3
      pop
      push r:3
      return
    end // of function 

    setMember
    push r:1, '[94u}'
    function2 (r:2='7)') (r:1='this')
      push r:'7)', 0.0
      lessThan
      not
      not
      branchIfTrue label50
      push r:'7)'
      int
      push 1, r:this, '0ts7K('
      callMethod
      pop
      branch label51
     label50:
      push r:'7)', 1
      subtract
      int
      push 1, r:this, '0ts7K('
      callMethod
      pop
     label51:
      push r:'7)', 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      push 65536
      multiply
      int
      push 65535
      bitwiseAnd
      push 1, r:this, '0ts7K('
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '0VGFE'
    function2 () (r:1='this')
      push 0.0, r:this, '9FmGz'
      callMethod
      setRegister r:2
      pop
      push 0.0, r:this, '9FmGz'
      callMethod
      push 65536
      divide
      setRegister r:3
      pop
      push r:2, 0.0
      lessThan
      not
      not
      branchIfTrue label52
      push r:2, r:3
      add
      return
      branch label53
     label52:
      push r:2, 1
      add
      push r:3
      subtract
      return
     label53:
    end // of function 

    setMember
    push r:1, '=UTxR'
    function2 (r:2='7)') (r:1='this')
      push r:'7)', UNDEF
      equals
      not
      branchIfTrue label54
      push 15, 4, 2, r:this, '{P('
      getMember
      push '98c]F'
      callMethod
      pop
      branch label67
     label54:
      push r:'7)', 'Array'
      getVariable
      instanceOf
      not
      branchIfTrue label55
      push 4, 3, 2, r:this, '{P('
      getMember
      push '98c]F'
      callMethod
      pop
      push r:'7)', 1, r:this, ']sx{+('
      callMethod
      pop
      branch label67
     label55:
      push r:'7)'
      typeof
      setRegister r:0
      push 'string'
      strictEquals
      branchIfTrue label56
      push r:0, 'number'
      strictEquals
      branchIfTrue label57
      push r:0, 'boolean'
      strictEquals
      branchIfTrue label63
      branch label66
     label56:
      push 14, 4, 2, r:this, '{P('
      getMember
      push '98c]F'
      callMethod
      pop
      push r:'7)', 1, r:this, ' EOa{'
      callMethod
      pop
      branch label67
     label57:
      push r:'7)', 1, 'isNaN'
      callFunction
      not
      branchIfTrue label58
      push 6, 4, 2, r:this, '{P('
      getMember
      push '98c]F'
      callMethod
      pop
      branch label62
     label58:
      push r:'7)', 'Infinity'
      getVariable
      equals
      not
      branchIfTrue label59
      push 14, 5, 2, r:this, '{P('
      getMember
      push '98c]F'
      callMethod
      pop
      branch label62
     label59:
      push r:'7)', 'Infinity'
      getVariable
      equals
      not
      branchIfTrue label60
      push 15, 5, 2, r:this, '{P('
      getMember
      push '98c]F'
      callMethod
      pop
      branch label62
     label60:
      push r:'7)'
      int
      push r:'7)'
      equals
      not
      branchIfTrue label61
      push 0.0, 2, 2, r:this, '{P('
      getMember
      push '98c]F'
      callMethod
      pop
      push r:'7)', 1, r:this, '0ts7K('
      callMethod
      pop
      branch label62
     label61:
      push 2, 3, 2, r:this, '{P('
      getMember
      push '98c]F'
      callMethod
      pop
      push r:'7)', 1, r:this, '[94u}'
      callMethod
      pop
     label62:
      branch label67
     label63:
      push r:'7)', TRUE
      equals
      not
      branchIfTrue label64
      push 13, 4, 2, r:this, '{P('
      getMember
      push '98c]F'
      callMethod
      pop
      branch label65
     label64:
      push 12, 4, 2, r:this, '{P('
      getMember
      push '98c]F'
      callMethod
      pop
     label65:
      branch label67
     label66:
      push 5, 3, 2, r:this, '{P('
      getMember
      push '98c]F'
      callMethod
      pop
      push r:'7)', 1, r:this, '=bcGs'
      callMethod
      pop
      branch label67
     label67:
      push TRUE
      return
    end // of function 

    setMember
    push r:1, '=2)kt'
    function2 () (r:1='this')
      push 1, 1, r:this, '{P('
      getMember
      push '1XxO'
      callMethod
      not
      setRegister r:7
      pop
      push r:7
      not
      branchIfTrue label75
      push 1, 1, r:this, '{P('
      getMember
      push '1XxO'
      callMethod
      setRegister r:5
      pop
      push r:5
      not
      branchIfTrue label74
      push 1, 1, r:this, '{P('
      getMember
      push '1XxO'
      callMethod
      setRegister r:3
      pop
      push r:3
      not
      branchIfTrue label72
      push 1, 1, r:this, '{P('
      getMember
      push '1XxO'
      callMethod
      setRegister r:9
      pop
      push r:9
      not
      branchIfTrue label70
      push 1, 1, r:this, '{P('
      getMember
      push '1XxO'
      callMethod
      setRegister r:6
      pop
      push r:6
      not
      branchIfTrue label68
      push 0.0, 'Infinity'
      getVariable
      subtract
      return
      branch label69
     label68:
      push 'Infinity'
      getVariable
      return
     label69:
      branch label71
     label70:
      push 'NaN'
      getVariable
      return
     label71:
      branch label73
     label72:
      push 0.0, r:this, '0VGFE'
      callMethod
      return
     label73:
      branch label75
     label74:
      push 0.0, r:this, '9FmGz'
      callMethod
      return
     label75:
      push 1, 1, r:this, '{P('
      getMember
      push '1XxO'
      callMethod
      not
      setRegister r:4
      pop
      push r:4
      not
      branchIfTrue label77
      push 1, 1, r:this, '{P('
      getMember
      push '1XxO'
      callMethod
      setRegister r:8
      pop
      push r:8
      not
      branchIfTrue label76
      push 0.0, r:this, ' GUF;'
      callMethod
      return
      branch label77
     label76:
      push 0.0, r:this, '173MJ'
      callMethod
      return
     label77:
      push 2, 1, r:this, '{P('
      getMember
      push '1XxO'
      callMethod
      setRegister r:2
      pop
      push r:2, 0.0
      equals
      not
      branchIfTrue label78
      push FALSE
      return
      branch label81
     label78:
      push r:2, 1
      equals
      not
      branchIfTrue label79
      push TRUE
      return
      branch label81
     label79:
      push r:2, 2
      equals
      not
      branchIfTrue label80
      push 0.0, r:this, '=di(2'
      callMethod
      return
      branch label81
     label80:
      push UNDEF
      return
     label81:
    end // of function 

    setMember
    push r:1, 'toString'
    function2 () (r:1='this')
      push 0.0, r:this, '{P('
      getMember
      push 'toString'
      callMethod
      return
    end // of function 

    setMember
    push r:1, '2kTt'
    function2 () (r:1='this')
      push r:this, '[2qsN'
      getMember
      push 'length'
      getMember
      push 0.0
      equals
      not
      branchIfTrue label82
      push r:this, '1tvm', 0.0, r:this, '=2)kt'
      callMethod
      setMember
      branch label85
     label82:
      push r:this, '[2qsN'
      getMember
      push 0.0
      getMember
      setRegister r:2
      pop
      push r:2, 'Array'
      getVariable
      instanceOf
      not
      branchIfTrue label84
      push r:2, 1, r:this, ')LCL1'
      callMethod
      not
      not
      branchIfTrue label83
      push 0.0, r:this, '[2qsN'
      getMember
      push 'shift'
      callMethod
      pop
     label83:
      branch label85
     label84:
      push r:2, 1, r:this, '1jTbM'
      callMethod
      not
      not
      branchIfTrue label85
      push r:2, ';gf'
      delete
      pop
      push 0.0, r:this, '[2qsN'
      getMember
      push 'shift'
      callMethod
      pop
     label85:
      push r:this, '{P('
      getMember
      push '3vz1B('
      getMember
      not
      branchIfTrue label86
      push r:this, '1tvm', NULL
      setMember
      push TRUE
      return
     label86:
      push r:this, '[2qsN'
      getMember
      push 'length'
      getMember
      push 0.0
      equals
      return
    end // of function 

    setMember
    push r:1, '25(E['
    function2 () (r:1='this')
      push r:this, '1tvm'
      getMember
      return
    end // of function 

    setMember
    push r:0, '(s6JL'
    function2 (r:2='7)') ()
      push NULL, 1, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '[Eptz'
      newMethod
      setRegister r:1
      pop
      push r:'7)', 1, r:1, '=UTxR'
      callMethod
      pop
      push 0.0, r:1, 'toString'
      callMethod
      return
    end // of function 

    setMember
    push 1, NULL, '2h,('
    getVariable
    push '[OaT'
    getMember
    push '[Eptz'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label87:
    pop
  end // of initMovieClip 632

  defineMovieClip 633 // total frames: 0
  end // of defineMovieClip 633
  
  exportAssets
    633 as '__Packages.ext.util.MTBitcodec'
  end // of exportAssets
  
  initMovieClip 633
    constants '_global', '2h,(', 'Object', '[OaT', '0Qd*i', '3vz1B(', '3giYW', '}+4c', '*E;cf', '', 'input', '(uCFL(', 'prototype', '1XxO', 'charAt', '(9-(', 'length', ') 1g,(', ',29;0', 'toString', '98c]F', '3mx', '$azAZ_', '0', '9', '-', '$aA_', '?', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push '2h,('
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push '2h,(', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push '2h,('
    getMember
    push '[OaT'
    getMember
    push '0Qd*i'
    getMember
    not
    not
    branchIfTrue label24
    push '2h,('
    getVariable
    push '[OaT'
    getMember
    push '0Qd*i'
    function2 (r:2='*-3WU') (r:1='this')
      push r:this, '3vz1B(', FALSE
      setMember
      push r:this, '3giYW', 0.0
      setMember
      push r:this, '}+4c', 0.0
      setMember
      push r:this, '*E;cf', ''
      setMember
      push r:this, 'input', r:'*-3WU'
      setMember
      push r:this, '(uCFL(', 0.0
      setMember
    end // of function 

    setRegister r:0
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '1XxO'
    function2 (r:3='8)') (r:1='this')
     label3:
      push r:this, '3giYW'
      getMember
      push r:'8)'
      lessThan
      not
      branchIfTrue label6
      push r:this, '(uCFL('
      getMember
      push r:this, '(uCFL(', r:this, '(uCFL('
      getMember
      increment
      setMember
      push 1, r:this, 'input'
      getMember
      push 'charAt'
      callMethod
      push 1, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '0Qd*i'
      getMember
      push '(9-('
      callMethod
      setRegister r:2
      pop
      push r:this, '(uCFL('
      getMember
      push r:this, 'input'
      getMember
      push 'length'
      getMember
      greaterThan
      dup
      branchIfTrue label4
      pop
      push r:2, NULL
      equals
     label4:
      not
      branchIfTrue label5
      push r:this, '3vz1B(', TRUE
      setMember
      push 0.0, r:this, ') 1g,('
      callMethod
      pop
      push -1
      return
     label5:
      push r:this, '3giYW', r:this, '3giYW'
      getMember
      push 6
      add
      setMember
      push r:this, '}+4c', r:this, '}+4c'
      getMember
      push 6
      shiftLeft
      setMember
      push r:this, '}+4c', r:this, '}+4c'
      getMember
      push r:2
      bitwiseOr
      setMember
      branch label3
     label6:
      push r:this, '3giYW', r:this, '3giYW'
      getMember
      push r:'8)'
      subtract
      setMember
      push r:this, '}+4c'
      getMember
      push r:this, '3giYW'
      getMember
      shiftRight
      push 1, r:'8)'
      shiftLeft
      push 1
      subtract
      bitwiseAnd
      return
    end // of function 

    setMember
    push r:1, ',29;0'
    function2 () (r:1='this')
      push r:this, '3giYW', 0.0
      setMember
    end // of function 

    setMember
    push r:1, ') 1g,('
    function2 () (r:1='this')
      push r:this, '3vz1B('
      getMember
      return
    end // of function 

    setMember
    push r:1, 'toString'
    function2 () (r:1='this')
      push r:this, '3giYW'
      getMember
      push 0.0
      greaterThan
      not
      branchIfTrue label7
      push 0.0, 6, r:this, '3giYW'
      getMember
      subtract
      push 2, r:this, '98c]F'
      callMethod
      pop
     label7:
      push r:this, '*E;cf'
      getMember
      return
    end // of function 

    setMember
    push r:1, '98c]F'
    function2 (r:2='8)', r:3='*)') (r:1='this')
      push r:this, '3giYW', r:this, '3giYW'
      getMember
      push r:'8)'
      add
      setMember
      push r:this, '}+4c', r:this, '}+4c'
      getMember
      push r:'8)'
      shiftLeft
      setMember
      push r:this, '}+4c', r:this, '}+4c'
      getMember
      push r:'*)'
      bitwiseOr
      setMember
     label8:
      push r:this, '3giYW'
      getMember
      push 6
      lessThan
      not
      not
      branchIfTrue label9
      push r:this, '3giYW', r:this, '3giYW'
      getMember
      push 6
      subtract
      setMember
      push r:this, '*E;cf', r:this, '*E;cf'
      getMember
      push r:this, '}+4c'
      getMember
      push r:this, '3giYW'
      getMember
      shiftRight
      push 63
      bitwiseAnd
      push 1, '2h,('
      getVariable
      push '[OaT'
      getMember
      push '0Qd*i'
      getMember
      push '3mx'
      callMethod
      add
      setMember
      branch label8
     label9:
    end // of function 

    setMember
    push r:0, '(9-('
    function2 (r:1='9f)b') ()
      push '$azAZ_'
      setRegister r:2
      pop
      push r:'9f)b', 1, 1, r:2, 'charAt'
      callMethod
      lessThan
      not
      dup
      not
      branchIfTrue label10
      pop
      push r:'9f)b', 2, 1, r:2, 'charAt'
      callMethod
      greaterThan
      not
     label10:
      not
      branchIfTrue label11
      push r:'9f)b'
      ord
      push 1, 1, r:2, 'charAt'
      callMethod
      ord
      subtract
      return
     label11:
      push r:'9f)b', 3, 1, r:2, 'charAt'
      callMethod
      lessThan
      not
      dup
      not
      branchIfTrue label12
      pop
      push r:'9f)b', 4, 1, r:2, 'charAt'
      callMethod
      greaterThan
      not
     label12:
      not
      branchIfTrue label13
      push r:'9f)b'
      ord
      push 3, 1, r:2, 'charAt'
      callMethod
      ord
      subtract
      push 26
      add
      return
     label13:
      push r:'9f)b', '0'
      lessThan
      not
      dup
      not
      branchIfTrue label14
      pop
      push r:'9f)b', '9'
      greaterThan
      not
     label14:
      not
      branchIfTrue label15
      push r:'9f)b'
      ord
      push 48
      subtract
      push 52
      add
      return
     label15:
      push r:'9f)b', '-'
      equals
      not
      branchIfTrue label16
      push 62
      return
     label16:
      push r:'9f)b', 5, 1, r:2, 'charAt'
      callMethod
      equals
      not
      branchIfTrue label17
      push 63
      return
     label17:
      push NULL
      return
    end // of function 

    setMember
    push r:0, '3mx'
    function2 (r:1='9f)b') ()
      push '$aA_'
      setRegister r:2
      pop
      push r:'9f)b', 0.0
      lessThan
      not
      branchIfTrue label18
      push '?'
      return
     label18:
      push r:'9f)b', 26
      lessThan
      not
      branchIfTrue label19
      push r:'9f)b', 1, 1, r:2, 'charAt'
      callMethod
      ord
      add
      chr
      return
     label19:
      push r:'9f)b', 52
      lessThan
      not
      branchIfTrue label20
      push r:'9f)b', 26
      subtract
      push 2, 1, r:2, 'charAt'
      callMethod
      ord
      add
      chr
      return
     label20:
      push r:'9f)b', 62
      lessThan
      not
      branchIfTrue label21
      push r:'9f)b', 52
      subtract
      push 48
      add
      chr
      return
     label21:
      push r:'9f)b', 62
      equals
      not
      branchIfTrue label22
      push '-'
      return
     label22:
      push r:'9f)b', 63
      equals
      not
      branchIfTrue label23
      push 3, 1, r:2, 'charAt'
      callMethod
      return
     label23:
      push '?'
      return
    end // of function 

    setMember
    push 1, NULL, '2h,('
    getVariable
    push '[OaT'
    getMember
    push '0Qd*i'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label24:
    pop
  end // of initMovieClip 633

  defineMovieClip 634 // total frames: 0
  end // of defineMovieClip 634
  
  exportAssets
    634 as '__Packages.miniwave.sp.Bads'
  end // of exportAssets
  
  initMovieClip 634
    constants '_global', 'miniwave', 'Object', '8y', ']q}_', '=w)l', '5u;}4', 'prototype', ')JZ[;', 'stop', '7luP*', ']oVzo', ']qbf', '0Pezx', '-[ YO', ']dc', ' DVkC', '6}jsa', 'x', '0(}e', ')MvQY', '2vgb4', '{9)*C(', ')SDM;(', '[w;(', '(l;(', 'y', '9l;(', '+3ul', '{r-z7', '-2)ve', '15q9I(', 'Math', 'abs', ')]6(', '7W4BT', 'length', '+v0ER', '9H(sU', '5uYzV', '0w*(((', '2d[', '7J-V', '()nBD', '7=bN', '0HIS2(', '[sBn2(', ' a(', '_rotation', ';M3i', '={eF-', 'ss', '[g(', '0Xfb2', '45(', ' u5MH', '}_(', '4k8;L', 'min', ',itn', 'list', ' icet', '1)', 'sqrt', 'atan2', 'cos', 'sin', ']CS0r', '}EroC', '[EroC', ']EroC', ';*b', '[bRwJ', ',jJih', '[_6rB(', 'type', '=*TTG', '3XLKj', '=Y(', '$badsKill', '1T3j', ',N5T', '+N5T', '3fEyH', '=M5T', '*3um4(', ';IDPE', 'gotoAndStop', '0F3O', '}=*uB(', '*p,2T', ',Ghq=(', '(]4q-', 'setVolume', '-oUeu', ',)ii(', '{]ckD', '+e S', ',eQ55', '9uOr0', '_xscale', '_yscale', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ']q}_'
    getMember
    not
    not
    branchIfTrue label45
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    push 'miniwave'
    getVariable
    push '5u;}4'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '=w)l'
      callMethod
      pop
      push r:this, ')JZ[;', FALSE
      setMember
      push 0.0, r:this, 'stop'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '7luP*'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '7luP*'
      callMethod
      pop
      push r:this, ']oVzo'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label3
      push r:this, ']oVzo', TRUE
      setMember
     label3:
      push r:this, ']qbf'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label4
      push r:this, ']qbf', 200
      setMember
     label4:
      push r:this, '0Pezx'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label5
      push r:this, '0Pezx', 5
      setMember
     label5:
      push r:this, '-[ YO'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label6
      push r:this, '-[ YO', 0.0
      setMember
     label6:
      push r:this, ']dc'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label7
      push r:this, ']dc', 10
      setMember
     label7:
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push r:this, ']oVzo'
      getMember
      not
      branchIfTrue label12
      push r:this, 'x', r:this, 'x'
      getMember
      push r:this, '0(}e'
      getMember
      push ')MvQY'
      getMember
      push r:this, '0(}e'
      getMember
      push '2vgb4'
      getMember
      multiply
      add
      setMember
      push r:this, '0(}e'
      getMember
      push '{9)*C('
      getMember
      push 2
      divide
      setRegister r:3
      pop
      push r:this, '0(}e'
      getMember
      push '2vgb4'
      getMember
      push 0.0
      lessThan
      dup
      not
      branchIfTrue label8
      pop
      push r:this, 'x'
      getMember
      push r:3
      lessThan
     label8:
      not
      branchIfTrue label9
      push 0.0, r:this, ')SDM;('
      callMethod
      pop
     label9:
      push r:this, '0(}e'
      getMember
      push '2vgb4'
      getMember
      push 0.0
      greaterThan
      dup
      not
      branchIfTrue label10
      pop
      push r:this, 'x'
      getMember
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '(l;('
      getMember
      push r:3
      subtract
      greaterThan
     label10:
      not
      branchIfTrue label11
      push 0.0, r:this, ')SDM;('
      callMethod
      pop
     label11:
      push r:this, 'y'
      getMember
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '9l;('
      getMember
      push r:this, ']dc'
      getMember
      subtract
      greaterThan
      not
      branchIfTrue label12
      push 0.0, r:this, '0(}e'
      getMember
      push '+3ul'
      getMember
      push '{r-z7'
      callMethod
      pop
     label12:
      push r:this, 'y'
      getMember
      push r:this, 'x'
      getMember
      push 2, r:this, '-2)ve'
      callMethod
      pop
      push r:this, 'y'
      getMember
      push r:this, ']dc'
      getMember
      add
      push r:this, '0(}e'
      getMember
      push '+3ul'
      getMember
      push 'y'
      getMember
      push r:this, '0(}e'
      getMember
      push '+3ul'
      getMember
      push ']dc'
      getMember
      subtract
      greaterThan
      not
      branchIfTrue label13
      push r:this, 'y'
      getMember
      push r:this, 'x'
      getMember
      push 2, r:this, '15q9I('
      callMethod
      pop
     label13:
    end // of function 

    setMember
    push r:1, '15q9I('
    function2 (r:7='x', r:6='y') (r:1='this')
      push r:this, '0(}e'
      getMember
      push '+3ul'
      getMember
      setRegister r:2
      pop
      push r:2, 'x'
      getMember
      push r:x
      subtract
      setRegister r:5
      pop
      push r:2, 'y'
      getMember
      push r:y
      subtract
      setRegister r:4
      pop
      push 1.2, r:this, ']dc'
      getMember
      push r:2, ']dc'
      getMember
      add
      multiply
      push 2
      divide
      setRegister r:3
      pop
      push r:5, 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      push r:3
      lessThan
      dup
      not
      branchIfTrue label14
      pop
      push r:4, 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      push r:3
      lessThan
     label14:
      not
      branchIfTrue label15
      push 0.0, r:this, ')]6('
      callMethod
      pop
      push 0.0, r:2, ')]6('
      callMethod
      pop
     label15:
    end // of function 

    setMember
    push r:1, '-2)ve'
    function2 ('x', 'y') (r:1='this')
      push 0.0
      setRegister r:3
      pop
     label16:
      push r:3, r:this, '0(}e'
      getMember
      push '7W4BT'
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label19
      push r:this, '0(}e'
      getMember
      push '7W4BT'
      getMember
      push r:3
      getMember
      setRegister r:2
      pop
      push r:2, '+v0ER'
      getMember
      dup
      not
      branchIfTrue label17
      pop
      push r:2, 'y'
      getMember
      push r:2, 'x'
      getMember
      push 2, r:this, '9H(sU'
      callMethod
     label17:
      not
      branchIfTrue label18
      push 0.0, r:2, '5uYzV'
      callMethod
      pop
      push 0.0, r:this, ')]6('
      callMethod
      pop
     label18:
      push r:3
      increment
      setRegister r:3
      pop
      branch label16
     label19:
    end // of function 

    setMember
    push r:1, '0w*((('
    function2 () (r:1='this')
      push r:this, '-[ YO'
      getMember
      push 0.0
      greaterThan
      not
      not
      branchIfTrue label20
      push r:this, ']qbf'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      divide
      random
      not
      not
      branchIfTrue label20
      push r:this, '-[ YO', 100
      setMember
      push 0.0, r:this, '()nBD'
      callMethod
      pop
     label20:
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this')
      push r:this, '0(}e'
      getMember
      push '7=bN'
      getMember
      setRegister r:0
      push 1
      strictEquals
      branchIfTrue label21
      push r:0, 2
      strictEquals
      branchIfTrue label30
      branch label33
     label21:
      push r:this, '0HIS2('
      getMember
      push 0.0
      lessThan
      not
      branchIfTrue label28
      push r:this, '[sBn2('
      getMember
      push ' a('
      getMember
      push 0.0
      greaterThan
      not
      branchIfTrue label22
      push r:this, '_rotation', 5
      setMember
     label22:
      push r:this, '[sBn2('
      getMember
      push ' a('
      getMember
      push 0.0
      lessThan
      not
      branchIfTrue label23
      push r:this, '_rotation', -5
      setMember
     label23:
      push r:this, '[sBn2('
      getMember
      push ';M3i'
      getMember
      push r:this, '0(}e'
      getMember
      push '={eF-'
      getMember
      push 'ss'
      getMember
      lessThan
      not
      branchIfTrue label26
      push r:this, 'x', r:this, '[sBn2('
      getMember
      push 'x'
      getMember
      setMember
      push r:this, 'y', r:this, '[sBn2('
      getMember
      push 'y'
      getMember
      setMember
      push r:this, '[sBn2('
      getMember
      push '[g('
      getMember
      push r:this, '0Xfb2'
      getMember
      equals
      not
      branchIfTrue label24
      push r:this, ')JZ[;', TRUE
      setMember
      push r:this, '45(', r:this, 'y'
      getMember
      setMember
      push r:this, '_rotation', 0.0
      setMember
      branch label25
     label24:
      push 0.0, r:this, ' u5MH'
      callMethod
      pop
     label25:
      branch label27
     label26:
      push r:this, 'x', r:this, 'x'
      getMember
      push r:this, '[sBn2('
      getMember
      push ' a('
      getMember
      add
      setMember
      push r:this, 'y', r:this, 'y'
      getMember
      push r:this, '[sBn2('
      getMember
      push '}_('
      getMember
      add
      setMember
      push r:this, '[sBn2('
      getMember
      push ';M3i', r:this, '[sBn2('
      getMember
      push ';M3i'
      getMember
      push r:this, '0(}e'
      getMember
      push '={eF-'
      getMember
      push 'ss'
      getMember
      subtract
      setMember
     label27:
      branch label29
     label28:
      push r:this, '0HIS2(', r:this, '0HIS2('
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
     label29:
      push 0.0, r:this, '-2)ve'
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
      branch label33
     label30:
      push r:this, '-[ YO'
      getMember
      push 0.0
      greaterThan
      not
      branchIfTrue label31
      push r:this, '-[ YO', r:this, '-[ YO'
      getMember
      push r:this, '0Pezx'
      getMember
      subtract
      setMember
     label31:
      push r:this, ']oVzo'
      getMember
      not
      branchIfTrue label32
      push r:this, '45('
      getMember
      push r:this, 'y'
      getMember
      subtract
      push 0.3
      multiply
      setRegister r:2
      pop
      push r:this, 'y', r:this, 'y'
      getMember
      push 4, r:2, 2, 'Math'
      getVariable
      push 'min'
      callMethod
      push '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      add
      setMember
     label32:
      branch label33
     label33:
    end // of function 

    setMember
    push r:1, ' u5MH'
    function2 (r:4='[g(') (r:1='this')
      push r:this, '[sBn2('
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label34
      push r:this, '[sBn2(', '[g(', 0.0, 1
      initObject
      setMember
      branch label36
     label34:
      push r:this, '[sBn2('
      getMember
      push '[g(', r:this, '[sBn2('
      getMember
      push '[g('
      getMember
      increment
      setMember
      push ',itn', r:this, '0(}e'
      getMember
      push '={eF-'
      getMember
      push 'list'
      getMember
      push r:this, ' icet'
      getMember
      getMember
      push r:this, '[sBn2('
      getMember
      push '[g('
      getMember
      getMember
      varEquals
      push ',itn'
      getVariable
      push '1)'
      getMember
      dup
      not
      branchIfTrue label35
      pop
      push r:this, '[sBn2('
      getMember
      push '[g('
      getMember
      push r:this, '0Xfb2'
      getMember
      equals
      not
     label35:
      branchIfTrue label34
     label36:
      push r:'[g(', UNDEF
      equals
      not
      not
      branchIfTrue label37
      push r:this, '[sBn2('
      getMember
      push '[g(', r:'[g('
      setMember
     label37:
      push r:this, '0(}e'
      getMember
      push '={eF-'
      getMember
      push 'list'
      getMember
      push r:this, ' icet'
      getMember
      getMember
      push r:this, '[sBn2('
      getMember
      push '[g('
      getMember
      getMember
      setRegister r:6
      pop
      push r:this, '[sBn2('
      getMember
      push 'x', r:6, 'x'
      getMember
      setMember
      push r:this, '[sBn2('
      getMember
      push 'y', r:6, 'y'
      getMember
      setMember
      push r:this, '[sBn2('
      getMember
      push 'x'
      getMember
      push r:this, 'x'
      getMember
      subtract
      setRegister r:3
      pop
      push r:this, '[sBn2('
      getMember
      push 'y'
      getMember
      push r:this, 'y'
      getMember
      subtract
      setRegister r:2
      pop
      push r:3, r:3
      multiply
      push r:2, r:2
      multiply
      add
      push 1, 'Math'
      getVariable
      push 'sqrt'
      callMethod
      setRegister r:7
      pop
      push r:3, r:2, 2, 'Math'
      getVariable
      push 'atan2'
      callMethod
      setRegister r:5
      pop
      push r:this, '[sBn2('
      getMember
      push ' a(', r:5, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push r:this, '0(}e'
      getMember
      push '={eF-'
      getMember
      push 'ss'
      getMember
      multiply
      setMember
      push r:this, '[sBn2('
      getMember
      push '}_(', r:5, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push r:this, '0(}e'
      getMember
      push '={eF-'
      getMember
      push 'ss'
      getMember
      multiply
      setMember
      push r:this, '[sBn2('
      getMember
      push ';M3i', r:7
      setMember
    end // of function 

    setMember
    push r:1, ')SDM;('
    function2 () (r:1='this')
      push r:this, '0(}e'
      getMember
      push ']CS0r', TRUE
      setMember
    end // of function 

    setMember
    push r:1, '{r-z7'
    function2 (r:3='9sv8-') (r:1='this')
      push UNDEF
      setRegister r:4
      pop
      push 3
      random
      setRegister r:0
      push 0.0
      strictEquals
      branchIfTrue label38
      push r:0, 1
      strictEquals
      branchIfTrue label39
      push r:0, 2
      strictEquals
      branchIfTrue label40
      branch label41
     label38:
      push '}EroC'
      setRegister r:4
      pop
      branch label41
     label39:
      push '[EroC'
      setRegister r:4
      pop
      branch label41
     label40:
      push ']EroC'
      setRegister r:4
      pop
      branch label41
     label41:
      push 11, r:4, 2, r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push '[bRwJ'
      callMethod
      pop
      push r:'9sv8-', UNDEF
      equals
      not
      branchIfTrue label42
      push 5
      setRegister r:'9sv8-'
      pop
     label42:
      push 0.0
      setRegister r:2
      pop
     label43:
      push r:2, r:'9sv8-'
      lessThan
      not
      branchIfTrue label44
      push r:2, 1
      add
      push 1, r:this, ',jJih'
      callMethod
      pop
      push r:2
      increment
      setRegister r:2
      pop
      branch label43
     label44:
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '[_6rB('
      getMember
      push r:this, 'type'
      getMember
      getMember
      push '=*TTG'
      getMember
      push 1, r:this, '0(}e'
      getMember
      push '3XLKj'
      callMethod
      pop
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$badsKill'
      getMember
      push r:this, 'type'
      getMember
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$badsKill'
      getMember
      push r:this, 'type'
      getMember
      getMember
      increment
      setMember
      push 0.0, r:this, '1T3j'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ',jJih'
    function2 (r:10='23V R') (r:1='this')
      push 'x', r:this, 'x'
      getMember
      push 'y', r:this, 'y'
      getMember
      push ',N5T', 8, 200
      random
      push 100
      subtract
      multiply
      push 100
      divide
      push '+N5T', 8, 0.0, 100
      random
      subtract
      multiply
      push 100
      divide
      push '3fEyH', 16, 14
      random
      add
      push '=M5T', 10, 200
      random
      push 100
      subtract
      multiply
      push 100
      divide
      push 6
      initObject
      setRegister r:3
      pop
      push r:3, '*3um4(', 2, r:this, '0(}e'
      getMember
      push ';IDPE'
      callMethod
      setRegister r:2
      pop
      push r:this, 'type'
      getMember
      push 1
      add
      push 1, r:2, 'gotoAndStop'
      callMethod
      pop
      push r:'23V R', 1, r:2, '0F3O'
      getMember
      push 'gotoAndStop'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ')]6('
    function2 () (r:1='this')
      push 0.0, r:this, '{r-z7'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '1T3j'
    function2 () (r:1='this', r:2='super')
      push r:this, '0(}e'
      getMember
      push '}=*uB('
      getMember
      push r:this, 2, r:this, '0(}e'
      getMember
      push '*p,2T'
      callMethod
      pop
      push r:this, '0(}e'
      getMember
      push ',Ghq=(', r:this, '0(}e'
      getMember
      push ',Ghq=('
      getMember
      decrement
      setMember
      push 0.0, r:super, '1T3j'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='this')
      push 12, '(]4q-', 2, r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push '[bRwJ'
      callMethod
      pop
      push 20, 12, 2, r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push 'setVolume'
      callMethod
      pop
      push 'x', r:this, 'x'
      getMember
      push 'y', r:this, 'y'
      getMember
      push ',N5T', 0.0, '+N5T', 2, 4
      initObject
      setRegister r:3
      pop
      push r:3, 1, r:this, '0(}e'
      getMember
      push '-oUeu'
      callMethod
      setRegister r:2
      pop
      push 10, r:this, 'type'
      getMember
      add
      push 1, r:2, 'gotoAndStop'
      callMethod
      pop
      push r:2
      return
    end // of function 

    setMember
    push r:1, ',)ii('
    function2 () (r:1='this')
      push r:this, '[sBn2('
      delete
      pop
    end // of function 

    setMember
    push r:1, '{]ckD'
    function2 (r:2='t') (r:1='this')
      push r:this, ')JZ[;', FALSE
      setMember
      push r:this, '0Xfb2'
      getMember
      push 1, r:this, ' u5MH'
      callMethod
      pop
      push r:this, '0HIS2(', r:t
      setMember
    end // of function 

    setMember
    push r:1, '+e S'
    function2 () (r:1='this')
      push 'x', r:this, 'x'
      getMember
      push 'y', r:this, 'y'
      getMember
      push ',N5T', 0.0, '+N5T', 0.0, ',eQ55', -0.5, 5
      initObject
      setRegister r:3
      pop
      push r:3, '9uOr0', 2, r:this, '0(}e'
      getMember
      push ';IDPE'
      callMethod
      setRegister r:2
      pop
      push r:2, '_rotation', 360
      random
      setMember
      push r:2, '_xscale', 70
      setMember
      push r:2, '_yscale', 70
      setMember
      push 0.0, r:this, '1T3j'
      callMethod
      pop
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label45:
    pop
  end // of initMovieClip 634

  defineMovieClip 635 // total frames: 0
  end // of defineMovieClip 635
  
  exportAssets
    635 as '__Packages.miniwave.sp.bads.Jelly'
  end // of exportAssets
  
  initMovieClip 635
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '}kX,9', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', 'type', ' DVkC', '0w*(((', '4k8;L', '()nBD', '0(}e', '*CcbI', '-UU_I(', ',N5T', 'Math', 'cos', '+N5T', 'sin', ',eX{I(', '}cj8F(', '+v0ER', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '}kX,9'
    getMember
    not
    not
    branchIfTrue label4
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '}kX,9'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '}kX,9'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 220
      setMember
      push r:this, '0Pezx', 10
      setMember
      push r:this, 'type', 41
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:3
      pop
      push 0.0, r:this, '0(}e'
      getMember
      push '*CcbI'
      callMethod
      setRegister r:5
      pop
      push r:5, 1, r:this, '-UU_I('
      callMethod
      setRegister r:4
      pop
      push r:3, ',N5T', r:4, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push 8
      multiply
      setMember
      push r:3, '+N5T', r:4, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push 8
      multiply
      setMember
      push 0.0, r:3, ',eX{I('
      callMethod
      pop
      push r:3, '}cj8F(', 18
      setMember
      push r:3, '+v0ER', FALSE
      setMember
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '}kX,9'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label4:
    pop
  end // of initMovieClip 635

  defineMovieClip 636 // total frames: 0
  end // of defineMovieClip 636
  
  exportAssets
    636 as '__Packages.miniwave.sp.bads.Datte'
  end // of exportAssets
  
  initMovieClip 636
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '97irL', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', 'type', '6dji=(', ' DVkC', '3fEyH', '()nBD', '0w*(((', '4k8;L', '6}jsa', '2d[', '7J-V', '];i=-', '0(}e', '*CcbI', 'x', 'y', 'Math', 'atan2', ',N5T', 'cos', ';[G=L', '+N5T', 'sin', ',eX{I(', '8-FUS', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '97irL'
    getMember
    not
    not
    branchIfTrue label9
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '97irL'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '97irL'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 240
      setMember
      push r:this, '0Pezx', 4
      setMember
      push r:this, 'type', 14
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
      push r:this, '6dji=(', 0.0
      setMember
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push r:this, '6dji=('
      getMember
      push 0.0
      greaterThan
      not
      branchIfTrue label5
      push r:this, '3fEyH'
      getMember
      push 0.0
      lessThan
      not
      branchIfTrue label4
      push 0.0, r:this, '()nBD'
      callMethod
      pop
      push r:this, '6dji=(', r:this, '6dji=('
      getMember
      decrement
      setMember
     label4:
      branch label6
     label5:
      push 0.0, r:this, '0w*((('
      callMethod
      pop
     label6:
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push r:this, '6dji=('
      getMember
      push 0.0
      greaterThan
      not
      branchIfTrue label7
      push r:this, '3fEyH', r:this, '3fEyH'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
     label7:
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='this', r:2='super')
      push r:this, '6dji=('
      getMember
      push 0.0
      equals
      not
      branchIfTrue label8
      push r:this, '6dji=(', r:this, '];i=-'
      getMember
      push 1
      subtract
      setMember
     label8:
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:3
      pop
      push 0.0, r:this, '0(}e'
      getMember
      push '*CcbI'
      callMethod
      setRegister r:5
      pop
      push r:5, 'x'
      getMember
      push r:this, 'x'
      getMember
      subtract
      setRegister r:7
      pop
      push r:5, 'y'
      getMember
      push r:this, 'y'
      getMember
      subtract
      setRegister r:6
      pop
      push r:7, r:6, 2, 'Math'
      getVariable
      push 'atan2'
      callMethod
      setRegister r:4
      pop
      push r:3, ',N5T', r:4, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push r:this, ';[G=L'
      getMember
      multiply
      setMember
      push r:3, '+N5T', r:4, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push r:this, ';[G=L'
      getMember
      multiply
      setMember
      push 0.0, r:3, ',eX{I('
      callMethod
      pop
      push r:this, '3fEyH', r:this, '8-FUS'
      getMember
      setMember
    end // of function 

    setMember
    push r:1, '];i=-', 3
    setMember
    push r:1, '8-FUS', 5
    setMember
    push r:1, ';[G=L', 3
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '97irL'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label9:
    pop
  end // of initMovieClip 636

  defineMovieClip 637 // total frames: 0
  end // of defineMovieClip 637
  
  exportAssets
    637 as '__Packages.miniwave.Box'
  end // of exportAssets
  
  initMovieClip 637
    constants '_global', 'miniwave', 'Object', '6Yx', 'MovieClip', 'prototype', '=w)l', '7luP*', '9j; N', '7=bN', '6KXx((', '3}f()(', '3fEyH', '+f}KA(', '4kJ_=(', 'h', '6(', 'y', 'x', '=aUoo', '1W(', '0W(', '9V(', '(X(', '6}jsa', '2d[', '7J-V', '9I0x3(', 'Math', 'pow', ',zNC9', '1T3j', '{{TXH', ']npnt', '7Y,z7(', '_x', '_y', '9,Grw', 'abs', '(cY5Z', 'max', 'min', 'clear', 'lineStyle', 'moveTo', 'beginFill', 'lineTo', 'curveTo', 'endFill', '=mb_F', '8M -D', '+l s (', ',1(R', '[{Q0m', 'removeMovieClip', '3UD50', '=vto', '[w;(', ';*b', '[bRwJ', 'setVolume', '{)zoW', ']*(q', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '6Yx'
    getMember
    not
    not
    branchIfTrue label22
    push 'miniwave'
    getVariable
    push '6Yx'
    function2 () (r:1='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '6Yx'
    getMember
    push 'MovieClip'
    getVariable
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this')
      push 0.0, r:this, '7luP*'
      callMethod
      pop
      push r:this, '9j; N', FALSE
      setMember
      push r:this, '7=bN', 0.0
      setMember
      push r:this, '6KXx((', 12369114
      setMember
      push r:this, '3}f()(', 16777215
      setMember
      push r:this, '3fEyH', r:this, '+f}KA('
      getMember
      setMember
      push r:this, '4kJ_=(', 'h', '6(', 'y', 'x', 4
      initArray
      setMember
      push r:this, '=aUoo'
      getMember
      not
      branchIfTrue label2
      push r:this, '6KXx((', 9079485
      setMember
      push r:this, '3}f()(', 12369114
      setMember
     label2:
    end // of function 

    setMember
    push r:1, '7luP*'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '7luP*'
      callMethod
      pop
      push r:this, '1W('
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label3
      push r:this, '1W(', 100
      setMember
     label3:
      push r:this, '0W('
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label4
      push r:this, '0W(', 100
      setMember
     label4:
      push r:this, '9V('
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label5
      push r:this, '9V(', 100
      setMember
     label5:
      push r:this, '(X('
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label6
      push r:this, '(X(', 100
      setMember
     label6:
      push r:this, 'x'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label7
      push r:this, 'x', r:this, '1W('
      getMember
      setMember
     label7:
      push r:this, 'y'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label8
      push r:this, 'y', r:this, '0W('
      getMember
      setMember
     label8:
      push r:this, '6('
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label9
      push r:this, '6(', 0.0
      setMember
     label9:
      push r:this, 'h'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label10
      push r:this, 'h', 0.0
      setMember
     label10:
      push r:this, '+f}KA('
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label11
      push r:this, '+f}KA(', 0.0
      setMember
     label11:
      push r:this, '=aUoo'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label12
      push r:this, '=aUoo', FALSE
      setMember
     label12:
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this')
      push '2d['
      getVariable
      push '7J-V'
      getMember
      push r:this, '9I0x3('
      getMember
      push 2, 'Math'
      getVariable
      push 'pow'
      callMethod
      setRegister r:2
      pop
      push r:this, '7=bN'
      getMember
      setRegister r:0
      push 0.0
      strictEquals
      branchIfTrue label13
      push r:0, 1
      strictEquals
      branchIfTrue label15
      push r:0, 2
      strictEquals
      branchIfTrue label18
      branch label19
     label13:
      push r:this, '3fEyH', r:this, '3fEyH'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
      push r:this, '3fEyH'
      getMember
      push 0.0
      greaterThan
      not
      not
      branchIfTrue label14
      push r:this, '7=bN', 1
      setMember
     label14:
      branch label19
     label15:
      push 1, r:2
      subtract
      push 1, r:this, ',zNC9'
      callMethod
      setRegister r:3
      pop
      push r:3, 0.5
      lessThan
      not
      branchIfTrue label17
      push r:this, '9j; N'
      getMember
      not
      branchIfTrue label16
      push 0.0, r:this, '1T3j'
      callMethod
      pop
      branch label17
     label16:
      push 1, 1, r:this, '{{TXH'
      callMethod
      pop
      push r:this, '7=bN', 2
      setMember
      push 0.0, r:this, ']npnt'
      callMethod
      pop
     label17:
      push 0.0, r:this, '7Y,z7('
      callMethod
      pop
      push r:this, '_x', r:this, 'x'
      getMember
      setMember
      push r:this, '_y', r:this, 'y'
      getMember
      setMember
      branch label19
     label18:
      branch label19
     label19:
    end // of function 

    setMember
    push r:1, ',zNC9'
    function2 (r:2='))') (r:1='this')
      push r:this, '9,Grw', 0.0
      setMember
      push r:this, 'x', r:this, 'x'
      getMember
      push r:'))', r:this, '1W('
      getMember
      push r:this, 'x'
      getMember
      push 3, r:this, '{{TXH'
      callMethod
      add
      setMember
      push r:this, 'y', r:this, 'y'
      getMember
      push r:'))', r:this, '0W('
      getMember
      push r:this, 'y'
      getMember
      push 3, r:this, '{{TXH'
      callMethod
      add
      setMember
      push r:this, '6(', r:this, '6('
      getMember
      push r:'))', r:this, '9V('
      getMember
      push r:this, '6('
      getMember
      push 3, r:this, '{{TXH'
      callMethod
      add
      setMember
      push r:this, 'h', r:this, 'h'
      getMember
      push r:'))', r:this, '(X('
      getMember
      push r:this, 'h'
      getMember
      push 3, r:this, '{{TXH'
      callMethod
      add
      setMember
      push r:this, '9,Grw'
      getMember
      return
    end // of function 

    setMember
    push r:1, '{{TXH'
    function2 (r:3='7(', r:5='-)', r:4='))') (r:1='this')
      push r:'-)', r:'7('
      subtract
      setRegister r:2
      pop
      push r:this, '9,Grw', r:this, '9,Grw'
      getMember
      push r:2, 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      add
      setMember
      push r:this, '(cY5Z'
      getMember
      push r:2, r:'))'
      multiply
      push 0.0, r:this, '(cY5Z'
      getMember
      subtract
      push 2, 'Math'
      getVariable
      push 'max'
      callMethod
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      return
    end // of function 

    setMember
    push r:1, '7Y,z7('
    function2 () (r:1='this')
      push 0.0, r:this, 'clear'
      callMethod
      pop
      push r:this, '3}f()('
      getMember
      push 2, 2, r:this, 'lineStyle'
      callMethod
      pop
      push 10, r:this, 'h'
      getMember
      push 2
      divide
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      push r:this, '6('
      getMember
      push 2
      divide
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      setRegister r:2
      pop
      push 0.0, r:2, 2, r:this, 'moveTo'
      callMethod
      pop
      push r:this, '6KXx(('
      getMember
      push 1, r:this, 'beginFill'
      callMethod
      pop
      push 0.0, r:this, '6('
      getMember
      push r:2
      subtract
      push 2, r:this, 'lineTo'
      callMethod
      pop
      push r:2, r:this, '6('
      getMember
      push 0.0, r:this, '6('
      getMember
      push 4, r:this, 'curveTo'
      callMethod
      pop
      push r:this, 'h'
      getMember
      push r:2
      subtract
      push r:this, '6('
      getMember
      push 2, r:this, 'lineTo'
      callMethod
      pop
      push r:this, 'h'
      getMember
      push r:this, '6('
      getMember
      push r:2
      subtract
      push r:this, 'h'
      getMember
      push r:this, '6('
      getMember
      push 4, r:this, 'curveTo'
      callMethod
      pop
      push r:this, 'h'
      getMember
      push r:2, 2, r:this, 'lineTo'
      callMethod
      pop
      push r:this, 'h'
      getMember
      push r:2
      subtract
      push 0.0, r:this, 'h'
      getMember
      push 0.0, 4, r:this, 'curveTo'
      callMethod
      pop
      push r:2, 0.0, 2, r:this, 'lineTo'
      callMethod
      pop
      push 0.0, r:2, 0.0, 0.0, 4, r:this, 'curveTo'
      callMethod
      pop
      push 0.0, r:this, 'endFill'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '=mb_F'
    function2 (r:2='3fEyH') (r:1='this')
      push r:'3fEyH', UNDEF
      equals
      not
      branchIfTrue label20
      push 0.0
      setRegister r:'3fEyH'
      pop
     label20:
      push r:this, '3fEyH', r:'3fEyH'
      setMember
      push 0.0, r:this, '8M -D'
      callMethod
      pop
      push r:this, '1W(', r:this, '1W('
      getMember
      push r:this, '9V('
      getMember
      add
      push 4
      subtract
      setMember
      push r:this, '0W(', r:this, '0W('
      getMember
      push r:this, '(X('
      getMember
      add
      push 4
      subtract
      setMember
      push r:this, '9V(', 4
      setMember
      push r:this, '(X(', 4
      setMember
      push r:this, '7=bN', 0.0
      setMember
      push r:this, '9j; N', TRUE
      setMember
    end // of function 

    setMember
    push r:1, '+l s ('
    function ()
    end // of function 

    setMember
    push r:1, '1T3j'
    function2 () (r:1='this')
      push r:this, 1, r:this, ',1(R'
      getMember
      push '[{Q0m'
      callMethod
      pop
      push 0.0, r:this, 'removeMovieClip'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ']npnt'
    function2 () (r:1='this')
      push r:this, '=aUoo'
      getMember
      not
      not
      branchIfTrue label21
      push 47, '3UD50', 2, r:this, ',1(R'
      getMember
      push '=vto'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push '[bRwJ'
      callMethod
      pop
      push 50, 48, 2, r:this, ',1(R'
      getMember
      push '=vto'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push 'setVolume'
      callMethod
      pop
      push 0.0, r:this, '{)zoW'
      callMethod
      pop
     label21:
    end // of function 

    setMember
    push r:1, '{)zoW'
    function ()
    end // of function 

    setMember
    push r:1, '8M -D'
    function ()
    end // of function 

    setMember
    push r:1, ']*(q'
    function2 () (r:1='this')
      push r:this, '6KXx((', 9079485
      setMember
      push r:this, '3}f()(', 12369114
      setMember
      push 0.0, r:this, '7Y,z7('
      callMethod
      pop
      push 0.0, r:this, '8M -D'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '9I0x3(', 0.5
    setMember
    push r:1, '(cY5Z', 8
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '6Yx'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label22:
    pop
  end // of initMovieClip 637

  defineMovieClip 638 // total frames: 0
  end // of defineMovieClip 638
  
  exportAssets
    638 as '__Packages.miniwave.Page'
  end // of exportAssets
  
  initMovieClip 638
    constants '_global', 'miniwave', 'Object', '];)H', 'MovieClip', 'prototype', '=w)l', '-q};c', '0dnQG(', 'Array', '4Acl;', '7=bN', ')sY,G(', '3ZaHs', '=vto', '[w;(', ';*b', 'play', '6}jsa', 'length', '_alpha', '1T3j', '3L9n1', ',1(R', '=Ai81', ';W{', 'attachMovie', 'push', '=mb_F', '[{Q0m', 'splice', '30dfK', 'boolean', 'number', 'string', '4Pzmp', '9LaTD', '}9WO', 'pop', 'removeMovieClip', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '];)H'
    getMember
    not
    not
    branchIfTrue label22
    push 'miniwave'
    getVariable
    push '];)H'
    function2 () (r:1='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '];)H'
    getMember
    push 'MovieClip'
    getVariable
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this')
      push r:this, '-q};c', TRUE
      setMember
      push r:this, '0dnQG(', 0.0, 'Array'
      new
      setMember
      push r:this, '4Acl;', 0.0
      setMember
      push r:this, '7=bN', 0.0
      setMember
      push 0.0, r:this, ')sY,G('
      callMethod
      pop
      push '3ZaHs', 1, r:this, '=vto'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push 'play'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ')sY,G('
    function ()
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push 0.0
      setRegister r:3
      pop
     label2:
      push r:3, r:this, '0dnQG('
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label3
      push 0.0, r:this, '0dnQG('
      getMember
      push r:3
      getMember
      push '6}jsa'
      callMethod
      pop
      push r:3
      increment
      setRegister r:3
      pop
      branch label2
     label3:
      push r:this, '7=bN'
      getMember
      setRegister r:0
      push 0.0
      strictEquals
      branchIfTrue label4
      push r:0, 1
      strictEquals
      branchIfTrue label5
      branch label7
     label4:
      branch label7
     label5:
      push r:this, '_alpha', r:this, '_alpha'
      getMember
      push 0.9
      multiply
      setMember
      push r:this, '0dnQG('
      getMember
      push 'length'
      getMember
      push 0.0
      equals
      not
      branchIfTrue label6
      push 0.0, r:this, '1T3j'
      callMethod
      pop
     label6:
      branch label7
     label7:
    end // of function 

    setMember
    push r:1, '3L9n1'
    function2 (r:5=' c2q', r:4=',to,G(') (r:1='this')
      push r:',to,G(', UNDEF
      equals
      not
      branchIfTrue label8
      push 0.0, 'Object'
      new
      setRegister r:',to,G('
      pop
     label8:
      push r:',to,G(', ',1(R', r:this
      setMember
      push r:this, '4Acl;'
      getMember
      push r:this, '4Acl;', r:this, '4Acl;'
      getMember
      increment
      setMember
      setRegister r:2
      pop
      push r:',to,G(', r:this, '=Ai81'
      getMember
      push r:2
      add
      push ';W{', r:2
      add
      push r:' c2q', 4, r:this, 'attachMovie'
      callMethod
      pop
      push r:this, ';W{', r:2
      add
      getMember
      setRegister r:3
      pop
      push r:3, 1, r:this, '0dnQG('
      getMember
      push 'push'
      callMethod
      pop
      push r:3
      return
    end // of function 

    setMember
    push r:1, '=mb_F'
    function2 ('[g(') (r:1='this')
      push 0.0
      setRegister r:2
      pop
     label9:
      push r:2, r:this, '0dnQG('
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label10
      push r:2, 4
      multiply
      push 1, r:this, '0dnQG('
      getMember
      push r:2
      getMember
      push '=mb_F'
      callMethod
      pop
      push r:2
      increment
      setRegister r:2
      pop
      branch label9
     label10:
      push r:this, '7=bN', 1
      setMember
    end // of function 

    setMember
    push r:1, '[{Q0m'
    function2 (r:3=';W{') (r:1='this')
      push 0.0
      setRegister r:2
      pop
     label11:
      push r:2, r:this, '0dnQG('
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label13
      push r:this, '0dnQG('
      getMember
      push r:2
      getMember
      push r:';W{'
      equals
      not
      branchIfTrue label12
      push 1, r:2, 2, r:this, '0dnQG('
      getMember
      push 'splice'
      callMethod
      pop
      branch label13
     label12:
      push r:2
      increment
      setRegister r:2
      pop
      branch label11
     label13:
    end // of function 

    setMember
    push r:1, '30dfK'
    function2 (r:2='+)') ()
      push r:'+)'
      typeof
      push 'boolean'
      equals
      dup
      branchIfTrue label14
      pop
      push r:'+)'
      typeof
      push 'number'
      equals
     label14:
      dup
      branchIfTrue label15
      pop
      push r:'+)'
      typeof
      push 'string'
      equals
     label15:
      not
      branchIfTrue label16
      push r:'+)'
      return
     label16:
      push 0.0
      setRegister r:1
      pop
     label17:
      push r:1, r:'+)', 'length'
      getMember
      lessThan
      not
      branchIfTrue label19
      push r:'+)', r:1
      getMember
      not
      branchIfTrue label18
      push TRUE
      return
     label18:
      push r:1
      increment
      setRegister r:1
      pop
      branch label17
     label19:
      push FALSE
      return
    end // of function 

    setMember
    push r:1, '4Pzmp'
    function ('[g(')
    end // of function 

    setMember
    push r:1, '9LaTD'
    function ('[g(')
    end // of function 

    setMember
    push r:1, '}9WO'
    function ('[g(')
    end // of function 

    setMember
    push r:1, '1T3j'
    function2 () (r:1='this')
     label20:
      push r:this, '0dnQG('
      getMember
      push 'length'
      getMember
      push 0.0
      greaterThan
      not
      branchIfTrue label21
      push 0.0, 0.0, r:this, '0dnQG('
      getMember
      push 'pop'
      callMethod
      push '1T3j'
      callMethod
      pop
      branch label20
     label21:
      push 0.0, r:this, 'removeMovieClip'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '=Ai81', 100
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '];)H'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label22:
    pop
  end // of initMovieClip 638

  defineMovieClip 639 // total frames: 0
  end // of defineMovieClip 639
  
  exportAssets
    639 as '__Packages.miniwave.Menu'
  end // of exportAssets
  
  initMovieClip 639
    constants '_global', 'miniwave', 'Object', 'Menu', '=w)l', '4t1M', 'prototype', '=Xj_+(', '4Acl;', '7=bN', ',P=wD(', 'Array', ' c2q', '+GS_=(', '[Xv3c', ';;,cC', '[w;(', '9,T}W', ';f q', 'setVolume', '2W6yH', 'onPress', '_parent', '9ncqC(', '6}jsa', 'length', '2d[', '7J-V', 'Math', 'pow', '_y', '3fEyH', 'type', '5h=iR', '97;ft', '-,SU4', '=mb_F', ',to,G(', '-oCPE', '=vto', 'width', '(l;(', '4e-1J', 'height', '9l;(', '*qyxo', ' Gz+0', ',1(R', 'attachMovie', '_x', 'push', '2v3VX', ';IwU', 'checkPowerUp()\n', '=Y(', '$cons', '$bonus', '$main', '5)', '$badsKill', '[_6rB(', '=*TTG', '- c:', ' score:', '\n', 'round', '- score:', ' lvl:', '$lvl', '2u;W3', '*0GPC', 'saveSlot', '9d[GQ', '4k8(', ')1o+K', '-l2gn', '5x9z5', '*x1rw', '$bads', 'giveItem', '=C6yH', '3I2[((', '74[9J(', '4g=(', '6i)C', 'level', ';7Sp4', 'name', ']A4]1(', '+m7O', '-IB,V', '1T3j', ']5uG2(', '6G}o-', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push 'Menu'
    getMember
    not
    not
    branchIfTrue label28
    push 'miniwave'
    getVariable
    push 'Menu'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push 'Menu'
    getMember
    push 'miniwave'
    getVariable
    push '4t1M'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, '=Xj_+(', 0.0, 'Object'
      new
      setMember
      push r:this, '4Acl;', 0.0
      setMember
      push r:this, '7=bN', 0.0
      setMember
      push r:this, ',P=wD(', 0.0, 'Array'
      new
      setMember
      push ' c2q', '+GS_=(', 1
      initObject
      push 1, r:this, '[Xv3c'
      callMethod
      pop
      push 1, ';;,cC', 2, r:this, '[w;('
      getMember
      push '9,T}W'
      getMember
      push ';f q'
      callMethod
      pop
      push 50, 1, 2, r:this, '[w;('
      getMember
      push '9,T}W'
      getMember
      push 'setVolume'
      callMethod
      pop
      push 0.0, r:super, '=w)l'
      callMethod
      pop
      push r:this, '2W6yH'
      getMember
      push 'onPress'
      function2 () (r:1='this')
        push 0.0, r:this, '_parent'
        getMember
        push '[w;('
        getMember
        push '9ncqC('
        callMethod
        pop
      end // of function 

      setMember
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push 0.0
      setRegister r:3
      pop
     label2:
      push r:3, r:this, ',P=wD('
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label3
      push r:this, ',P=wD('
      getMember
      push r:3
      getMember
      setRegister r:4
      pop
      push 0.0, r:4, '6}jsa'
      callMethod
      pop
      push r:3
      increment
      setRegister r:3
      pop
      branch label2
     label3:
      push r:this, '7=bN'
      getMember
      setRegister r:0
      push 0.0
      strictEquals
      branchIfTrue label4
      push r:0, 1
      strictEquals
      branchIfTrue label5
      branch label8
     label4:
      branch label8
     label5:
      push '2d['
      getVariable
      push '7J-V'
      getMember
      push 0.8, 2, 'Math'
      getVariable
      push 'pow'
      callMethod
      setRegister r:5
      pop
      push r:this, '2W6yH'
      getMember
      push '_y', r:this, '2W6yH'
      getMember
      push '_y'
      getMember
      push r:5
      multiply
      push 60, 1, r:5
      subtract
      multiply
      subtract
      setMember
      push r:this, '3fEyH'
      getMember
      push 0.0
      lessThan
      not
      branchIfTrue label6
      push r:this, '=Xj_+('
      getMember
      push r:this, '=Xj_+('
      getMember
      push 'type'
      getMember
      push 2, r:this, '[w;('
      getMember
      push '5h=iR'
      callMethod
      pop
      branch label7
     label6:
      push r:this, '3fEyH', r:this, '3fEyH'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
     label7:
      branch label8
     label8:
    end // of function 

    setMember
    push r:1, '[Xv3c'
    function2 (r:2='8p7(') (r:1='this')
      push r:'8p7(', ' c2q'
      getMember
      push '+GS_=('
      equals
      dup
      not
      branchIfTrue label9
      pop
      push 0.0, r:this, '97;ft'
      callMethod
     label9:
      not
      branchIfTrue label10
      push UNDEF
      return
     label10:
      push r:'8p7(', ' c2q'
      getMember
      push '-,SU4'
      equals
      not
      branchIfTrue label11
      push 0.0, r:this, '=mb_F'
      callMethod
      pop
      branch label12
     label11:
      push r:'8p7(', ',to,G('
      getMember
      push r:'8p7(', ' c2q'
      getMember
      push 2, r:this, '-oCPE'
      callMethod
      pop
     label12:
    end // of function 

    setMember
    push r:1, '-oCPE'
    function2 (r:5=' c2q', r:2=',to,G(') (r:1='this')
      push r:',to,G(', UNDEF
      equals
      not
      branchIfTrue label13
      push 0.0, 'Object'
      new
      setRegister r:',to,G('
      pop
     label13:
      push r:',to,G(', '=vto', r:this
      setMember
      push r:',to,G(', 'width', r:this, '[w;('
      getMember
      push '(l;('
      getMember
      push r:this, '4e-1J'
      getMember
      push 2
      multiply
      subtract
      setMember
      push r:',to,G(', 'height', r:this, '[w;('
      getMember
      push '9l;('
      getMember
      push r:this, '4e-1J'
      getMember
      push r:this, '*qyxo'
      getMember
      add
      subtract
      setMember
      push r:this, '4Acl;'
      getMember
      push r:this, '4Acl;', r:this, '4Acl;'
      getMember
      increment
      setMember
      setRegister r:3
      pop
      push r:',to,G(', r:this, ' Gz+0'
      getMember
      push r:3
      add
      push ',1(R', r:3
      add
      push r:' c2q', 4, r:this, 'attachMovie'
      callMethod
      pop
      push r:this, ',1(R', r:3
      add
      getMember
      setRegister r:4
      pop
      push r:4, '_x', r:this, '4e-1J'
      getMember
      setMember
      push r:4, '_y', r:this, '*qyxo'
      getMember
      setMember
      push r:4, 1, r:this, ',P=wD('
      getMember
      push 'push'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '2v3VX'
    function2 (r:4='8p7(') (r:1='this')
      push 0.0
      setRegister r:2
      pop
     label14:
      push r:2, r:this, ',P=wD('
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label15
      push r:this, ',P=wD('
      getMember
      push r:2
      getMember
      setRegister r:3
      pop
      push 0.0, r:3, '=mb_F'
      callMethod
      pop
      push r:2
      increment
      setRegister r:2
      pop
      branch label14
     label15:
      push r:'8p7(', 1, r:this, '[Xv3c'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '97;ft'
    function2 () (r:1='this', r:2='_root')
      push r:_root, ';IwU', r:_root, ';IwU'
      getMember
      push 'checkPowerUp()\n'
      add
      setMember
      push 0.0
      setRegister r:4
      pop
      push r:this, '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      setRegister r:3
      pop
      push r:3, '$cons'
      getMember
      push '$bonus'
      getMember
      push 'length'
      getMember
      setRegister r:6
      pop
      push r:3, '$cons'
      getMember
      push '$main'
      getMember
      push 0.1
      multiply
      push 10, r:6
      subtract
      multiply
      setRegister r:5
      pop
      push '5)', 0.0
      setVariable
     label16:
      push '5)'
      getVariable
      push r:6
      lessThan
      not
      branchIfTrue label17
      push r:5, r:3, '$cons'
      getMember
      push '$bonus'
      getMember
      push '5)'
      getVariable
      getMember
      push 0.1
      multiply
      add
      setRegister r:5
      pop
      push '5)', '5)'
      getVariable
      increment
      setVariable
      branch label16
     label17:
      push '5)', 0.0
      varEquals
     label18:
      push '5)'
      getVariable
      push r:3, '$badsKill'
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label19
      push r:4, r:this, '[w;('
      getMember
      push '[_6rB('
      getMember
      push '5)'
      getVariable
      getMember
      push '=*TTG'
      getMember
      push r:3, '$badsKill'
      getMember
      push '5)'
      getVariable
      getMember
      multiply
      add
      setRegister r:4
      pop
      push '5)', '5)'
      getVariable
      increment
      setVariable
      branch label18
     label19:
      push r:_root, ';IwU', r:_root, ';IwU'
      getMember
      push '- c:', r:5
      add
      push ' score:'
      add
      push r:4
      add
      push '\n'
      add
      add
      setMember
      push r:4, r:5
      multiply
      push 10000
      divide
      push 1, 'Math'
      getVariable
      push 'round'
      callMethod
      setRegister r:4
      pop
      push 0.2, r:4, 2, 'Math'
      getVariable
      push 'pow'
      callMethod
      push 1, 'Math'
      getVariable
      push 'round'
      callMethod
      setRegister r:8
      pop
      push r:_root, ';IwU', r:_root, ';IwU'
      getMember
      push '- score:', r:4
      add
      push ' lvl:'
      add
      push r:8
      add
      push '\n'
      add
      add
      setMember
      push r:8, r:3, '$lvl'
      getMember
      greaterThan
      dup
      not
      branchIfTrue label20
      pop
      push r:8, r:this, '[w;('
      getMember
      push '2u;W3'
      getMember
      push 'length'
      getMember
      lessThan
     label20:
      not
      branchIfTrue label21
      push r:3, '$lvl', r:8
      setMember
      push 0.0, 1, r:this, '[w;('
      getMember
      push '*0GPC'
      getMember
      push 'saveSlot'
      callMethod
      pop
      push 'type', '9d[GQ', '4k8(', r:8, ')1o+K', ' c2q', '+GS_=(', 1
      initObject
      push 3
      initObject
      setRegister r:11
      pop
      push ' c2q', '-l2gn', ',to,G(', r:11, 2
      initObject
      push 1, r:this, '[Xv3c'
      callMethod
      pop
      push TRUE
      return
     label21:
      push r:this, '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$badsKill'
      getMember
      setRegister r:7
      pop
      push '5)', 0.0
      varEquals
     label22:
      push '5)'
      getVariable
      push r:this, '[w;('
      getMember
      push '5x9z5'
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label25
      push r:this, '[w;('
      getMember
      push '5x9z5'
      getMember
      push '5)'
      getVariable
      getMember
      dup
      not
      branchIfTrue label23
      pop
      push r:7, '5)'
      getVariable
      getMember
      push r:this, '[w;('
      getMember
      push '*x1rw'
      getMember
      lessThan
      not
     label23:
      not
      branchIfTrue label24
      push r:this, '[w;('
      getMember
      push '5x9z5'
      getMember
      push '5)'
      getVariable
      push UNDEF
      setMember
      push '$bads', '5)'
      getVariable
      add
      push 1, r:this, '[w;('
      getMember
      push '*0GPC'
      getMember
      push 'giveItem'
      callMethod
      pop
      push 'type', '=C6yH', '4k8(', '5)'
      getVariable
      push ')1o+K', ' c2q', '+GS_=(', 1
      initObject
      push 3
      initObject
      setRegister r:11
      pop
      push ' c2q', '-l2gn', ',to,G(', r:11, 2
      initObject
      push 1, r:this, '[Xv3c'
      callMethod
      pop
      push TRUE
      return
     label24:
      push '5)', '5)'
      getVariable
      increment
      setVariable
      branch label22
     label25:
      push r:this, '[w;('
      getMember
      push '3I2[(('
      getMember
      push 0.0
      greaterThan
      not
      branchIfTrue label26
      push r:this, '[w;('
      getMember
      push '3I2[((', r:this, '[w;('
      getMember
      push '3I2[(('
      getMember
      decrement
      setMember
      push 'type', '=C6yH', '4k8(', '5)'
      getVariable
      push ')1o+K', ' c2q', '+GS_=(', 1
      initObject
      push 3
      initObject
      setRegister r:11
      pop
      push ' c2q', '-l2gn', ',to,G(', r:11, 2
      initObject
      push 1, r:this, '[Xv3c'
      callMethod
      pop
      push TRUE
      return
     label26:
      push FALSE
      return
    end // of function 

    setMember
    push r:1, '=mb_F'
    function2 () (r:1='this')
      push r:this, '3fEyH', 40
      setMember
      push r:this, '7=bN', 1
      setMember
    end // of function 

    setMember
    push r:1, '74[9J('
    function2 () (r:1='this')
      push r:this, '=Xj_+('
      getMember
      push '4g=('
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label27
      push 'miniwave'
      getVariable
      push '4g=('
      getMember
      push '6i)C'
      getMember
      push 'level'
      getMember
      setRegister r:2
      pop
      push r:this, '=Xj_+('
      getMember
      push ';7Sp4', r:2, '4g=('
      getMember
      setMember
      push r:this, '=Xj_+('
      getMember
      push 'name', r:2, 'name'
      getMember
      setMember
      push r:this, '=Xj_+('
      getMember
      push ']A4]1(', r:2, '+m7O'
      getMember
      setMember
     label27:
      push ' c2q', '-IB,V', 1
      initObject
      push 1, r:this, '2v3VX'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '1T3j'
    function2 () (r:1='this', r:2='super')
      push 1, ';;,cC', 2, r:this, '[w;('
      getMember
      push '9,T}W'
      getMember
      push ']5uG2('
      callMethod
      pop
      push 0.0, r:super, '1T3j'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' Gz+0', 100
    setMember
    push r:1, '6G}o-', 50
    setMember
    push r:1, '4e-1J', 10
    setMember
    push r:1, '*qyxo', 54
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push 'Menu'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label28:
    pop
  end // of initMovieClip 639

  defineMovieClip 640 // total frames: 0
  end // of defineMovieClip 640
  
  exportAssets
    640 as '__Packages.miniwave.lvl.Main'
  end // of exportAssets
  
  initMovieClip 640
    constants '_global', 'miniwave', 'Object', '4g=(', '6i)C', 'prototype', 'level', 'name', ')8e;N', '+m7O', 'IYG0aWtPduhjLBwNOCMuGzxnJywrYzzKyCQjyEiigdmHqcY7dXbaXAiKKlreGXAufKjjXfHjGqLZabiHmfHkdWeX76MaoyajcdabitFweicya5GaWilbn9vaMaowccWtFvqjGdLGGWaye31ucya5GaWimagbn_rtahmajbbyjVQya5GbiimaeHn9vaMaoyavccWtFvqjGdMadWGSe31ucya5Ga8imagbn9vaMaoyavcdabGtF_uSru3qyakXYLmbQM6dabUouPGpru3quXY9mfQM6dabwoxPGpru3qyakXZabvmbQM6dabUoyakPGprubhmag3vn0fmCWaBtbEIPUGWavJMaekydvn0gadCCWaHtaEIPUGPJMae6ylvn0gacSCWaNtaEIPUGWavJMafQydvn0gadCCWaTtaFKfHIWHyiioKAnYW6EExMGtimwhDH3yEEOoK6nYW6EExMGtimwhDH3yEAbKeeqSmwilfIkCWaFueVQCWaFefPQyi5GbqOlrn9tbhmakfbojV6kyi5Ga4OjXn9tbhmahfbAjVQyi5GaGOlrn9tbhmaefbojV6kya5GaGOmae1n9tahmafLbGaYPVQya5GaSOmah1n9tahmaefbGaYPV6kya5GbqOmae1n9tahmaiLbGaYPVQya5GbeOmah1n9tahmakfbGaYPV_QdPRq2ZPBwvUDgLUzxmG4cbSysbYzxnJB3vZC2uiiHyySqwleuWzYWqpPVQyi5nOkzn9tbNl1bAPVQym5GaQOj1n_trtahmagzbGaHjVQya5GaZimahjn_rtahmah5bGaHjVQya5Ga_imahjn_rtahlzbGaTjVQya5GaNimafPn_rtahmak5bGaTjVQya5GblimafPn_rtbNmalfa-M-PGJMaggGPK31mgCWaPKfQM-PGZMaeCGNu39p1b0HOZE5nRc6nlE3edMYUtL0SOqrcWXyGSwiPGJMacyGPu31meCWazefkM-PGJMad4GPu31meCWaLefkM_OPGZMaeOGVu31mgCWaFef6M-PGZMadiGVu31mgCWatef6M_OPGdMacyGWavu31maCWazegacQM-PGdMad4GWavu31maCWaLegacQM_OPGdMad4GWaBu31maCWazegadAM_-OoK6nYW6EExMGtimwhDH3yEAbMeeqSmwilfIkyi5FOj1n9tahl9bGaXPVQya5GaROmagnn_rtbhmaj9boPVQya5GbpOmagnn9tahmaiDbGaXPVQya5Ga3OmahTn_rtbhmag9bpPVQyi5GbdOlvn9tbhmag9bGaMPVQyi5GaROlvn_t9qC_ORMXSli5mPaZotQ0UNsYHbeldfIcXyIMaowcdacOtFuWbZabiqyavcB6MaoyamcdacqtFuWbYWqyascB-IMcowccytFuWrZabiqtcB6McoyajccWtFuWrYWqwcB-IMcoyavccytFuWrZacqqtcB6McoyasccWtFuWrZacOqwcB-IMdoyamcdabitFuWzZabGqyamcB6MdoyapcdabGtFuWzZab4qyajcB-IMaoyavcdacOtFuWbZacqqyavcB6MaoyapcdacqtFuWbZacOqyascB_6G6u0zVCM1HDgLVBIbWyxmGC2vYCULLcciwglefIXfmeCVKeSM-PGJL8GRK31meCWavKfCM-PGJMadCGRK31meCWaHKfCM-PGJMae8GRK31meCWaNKeSM_OPGZMae8GWaxK31mgCWaHKgac8M-PGZMadCGWaxK31mgCWavKgac8M-PGZL8GWaxK39fmaCVKgafmM-PGdMacSGWaPK31maCWaBKgafmM-PGdMaemGWaPK31maCWaNKgafmM_-OoKARUqESVpPLqB82BlU56CWqrcWXyGSwiQBOjC5GbdMd1tDbGaJNmaiCWEQBOmaeC5GbpMd1tDbxNmalCWFOQBOmagG5Fgc1tDbGbahmafyWwQBOmagG5GaRgc1tDbGbahmag4WwQBOmaia5Gbdgc1tDbGa0hmaiyWwQBOmagG5Gbpgc9ftDblNmafCWEQBOmaeC5GaRMd1tDbGaJNl8WEQBOk85tMd_1bZQHea0yq40brmriiiHyySqwlevn0f-CSda6PUGWawtLGyhvn0gacYCWasda6PUGVZMacqyh0vn0gadWCSdaAPUGWaEdMacqydvn0gadWCWaydaAPUGWaEdMadWydvn0gadWCWaKdaAPUGWaEdMafqyd0vn0f-CWaQda6PUGWawtMafqyhvn0gacYCWaKda6PUGVZMaeGyh0vn0f-CWaBta6MboyanIdabztF_uhpkureKHpGbKvdbeGGIfHIXbySrtaNlPbCjVQye5GaPilHn9taNmafjbGaOjVQye5Dimafbn_rtbhlPbmjVQyi5GaPijHn9tbhmagPbmjVQyi5GbbijHn9tbhmajPbmjV6kyi5Gbnimahfn9tbhmaijbGa4PVQyi5Ga1imahfn9tbhmafjbGa4PVQyi5Dimahfn_rtaNmajPbCjVQye5GbbilHn9taNmaijbGaOjVQye5Gbnimafbn_9sXftDbGaIhmaeGWwQBOmaem5Ga3ga1tDbGaIhmajaWxOQBOkS5GboMb1tDbvNmaiuWoQBOkS5GaQMb1tDbvNl0WpOQBOmafS5Gbpga1tDbGaUhmahGWwQBOmafW5GaWgc1tDbGaTNl4WhOQBOmahm5GaRga1tDbGa5NmaiyWgQBOmaiS5Ga3ga_ildfHcWqqDiuBFY24EMNFUqzDYbf2rALIkM6cLowbG9u3quPZabimhQM6dabcowbGDu3qyairZabGmd6kM6dabDouzGTu3qyalPZabtmfQM6dab1oyakzGTu3qyaoPY7mf6kM6cLoyavbG9u3quPZacqmhQM6dabcoyavbGDu3qyairZab4md6kM6dabDoyawzGTu3qyalPZacdmfQM6dab1oyaqzGTu3qyaoPZacBmf-qwglcfGGG6uO-hLLqyEVHbW5B9wxh007mVpuSru3qtHYKmhQM6cCoyakHG9u3qwHZabumhQM6dabmoyakHG9u3qyajHY8mhQM6dabmouHG9u3qwHYKmh6kCOugadxQye5DimagTn9taNlPbGbbPVQye5GaPimainn9taNmaijbGbbPVQye5Gbnimainn9taNmajPbGa1PV6kM6cBoyawrGTu3qtzZaccmfQM6cZoyaqrGTu3qyajzZaccmfQM6dabloyatrGTu3qyajzZacYmfQM6cZoyawrGVYcWXyqSeehp6u3TZo2mloYKdm5oRs6DoOoMQnYW6EExMGYzEAdfV080ghQGX79Uld0cciwglefIXfmlhmaj5biPVQywoyanYcrtFuWSCWaHKfsM-PHy5Gbdimaefn_rtcXY-qskB6Nmaf5a_QywoyakYcPtFuWSCWavKgaccM_OPGtL8GWaw031mcCWavKgadMM-PGtMadCGWaw039fmcCWaNKgac2M-PGtMaemGWaC031mcCWaB0gaeCM_P-Ooz0XLiglPBgLLCGGIfHIXbySrtbhkvbvPVQyi5GaQOkTn9taNmafzbGaHPVQye5GaRimafTn9tbNmafzbGbfPVQym5Fimahnn9tbNmag5bGbfPV6kyi5GbAOkTn9tbhmaivbvPVQye5Gbdimaenn9taNmaizbGaTPVQym5GbdimaiTn9tbNmaj5bGa5PV_QwiQBOmaeC5tgd1tDbGaVNkyWEQBOmahC5tgd9ftDblNl4WTQM6cVoxXHBvn0gacoCVJc2QBOmahC5Fgc1tDbGa7NmafyWwQBOmahC5Ga3gc9ftDblNmag4WTQM6cVoyanXHBvn0gacoCWaBJcYGFru3qs5ZacEmlAPUGRZMae8yw1tDbGaJNmaj4WTQM6dab3oyatXGTu3qyao5Zacgmf6kM6dabhoyawXG9u3qyal5Zac2mhQM6dab3oyawXG_YcWXyqSeehn0prH5z8VPaHqODsXftDbGaPhmammWTQM6dabsoyapzHBvn0gacKCWayZc2QBOmafi5nMfVru3qtbZabymhQM6cWoyalbG9u3qtbYOmhQM6cWovbG_ru3qyanrYBmlAPUGWaAJLMyw1tDbGa1hmagmWTQM6dabQoyapzHBvn0gaduCWaQZc2QBOmagO5GbHMfVru3qtbZacimhQM6cWoyarbG9u3qtbZac4mhQM6cWoyaxbG_ru3qyarrYYmbQM6dackoyamrGnu3qyarrZab6mbQM6dackoyavrGpYcWXyqSeehmlusdsaWa9sXftDbshleWoQBOlW5mMb9ftDbrNmakKWoQBOlS5GbGMb9ftDbGaPNleWTQM6dabtoyajjG9u3qyanzYXmdQM6dabRotjHBvn0gaegCStbAPUGWaGZMacsyl0vn0gacMCWaQtc2QBOmafm5GbiMd1tDbGa1NmakKWoQBOmagS5GbGMfTu3qyaqzZacPmfQM6dacdoyasjGVru3quzZabHmlAPUGWauZMadcyw1tDbGa1NmageWFOQBOkm5Ga8MfTu3qyakzZab5mlAPUGWaAZMadYyp8GSmwelbbb0Lte-hP0W8EUvbK6OmFldIY6G6IOMxMGZCSoNNL5RegtlZqCn-NLL5RegxOGYzEA5CUcciwglefIXfox6cY1mlNmaefbGaOPVQyxoyalkdabrtFuWUCWaIugacIM-PHC5GbqOmaffn_rtbhmajvbqPVQyi5GbkOlLn9tbhmah1bCPVQyi5GaYOlLn9tbhmae1bCPVQyi5GaMOkfn9tbhmagvbqPVQyi5Ga-Okfn_rtMaf2GWasDtahmalLbGa3jVQya5GbqOmag5n9tahmaiLbGa3jVQya5Ga4Omag5n9tahmafLbGa3jVQya5GaGOmag5n9tahkLbGa3jV_QwiQBOlK5GaXgb1tDbGaONmagiWVQM6dabPoyamrGTu3qyanjZabkmhQM6dabPowrGTu3qyakjYYmfQM6dabroyajrHF0vn0fYCWaEJa6PUGWautMad0yx1tDbGa0NmahOWTQM6dabPoyasrG9u3qyanjZacQmlAPUGWautMafuyw1tDbGaONmajiWV-qwglcfGGG6tPMvb0W7Eg_CG59mUZzH08SUOoFOxltZY8KgZcGZ7mopkeeqSmwilfIkyxoyanccstFuWUCWaAefuM-PHC5Ga0imaejn9tc5ZabOqyalsB6MfZMadqGWaCK39fmcCWauefuM-PGtMacGGWaqK31mcCWauegac0M-PGtLWGWaqK31mcCUefuM_OPGtMaeaGQK31mcCWaGegaceM-PGtMaeaGWawK31mcCWaMegaceM-PGtMaeWGQK39fmlNmajDbGaSPVQyxoyap6dabXtF0uWUCT0gacYM-PHC5GaNOmahfn_9qDj6m3UtAWUJs3TXaYDlmYTZM0UZkeeqSmwilfIkyxoyajccytFuWrZabiqyajcB6McoyajcdabGtFuWbZabiqyapcB-IMbowccWtFuWjYWqyajcB6MbowcdabGtF0uWUCWayefGM-PGJMadaGWase31maCWayegadaM-PGdMadaGWaEe39fmlNmahHbyjVQyi5Ga8imaeHn9tahmahHbGaWjVQya5Ga8imahHn_rtc5ZacqqtcB6McoyascdabitFuWrZacqqyamcB6Maoyascdab4tF0uWjZacOqwcB6MboyavcdabitFuWjZacOqyamcB_6G6tO2_LTW9no_CG35S2xDZ09SOqrcWXyGSwiPGtMaeGGK031mcCWaEefwM-PGtMadaGQ031mcCWaseeMM_OPGJMacqGQ031meCWayegacgM-PGJMadWGWaq031meCWaKefwM_OPGZMaeGGWaq031mgCWaEegac2M-PGZMadaGWaw031mgCWasegacgM_OPHC5GbiimafTn9u3qyaozZab3ml6MfZMadaGWaC031mlNmaeHbGaTPV6kye5Gbiimahnn9taNmahHbGbfPVQye5GaWimaiTn9taNmaeHbGa5PV_QdPsJ4EwvbH6-egplY088VnaHqOqGIfHIXbySrtMadCG8RQyvox6cutFuWQCWav0eOM-PHu5Ga3Ojrn9tcPZachqsIB6MftMae-GLe39fmkNmalDbyjVQyxoyaw6dabotFuWQCWaH0fGM-PHC5GbdOmae5n_rtcPYNqwcB6MfZLoGWatK31mkNmafDbyjVQyxoyak6dabotF0uWbYNqyanIB6Maox6dabStFuWbZabxqyanIB6Maox6dacetF0uWbZac3qyanIB6Maoyat6dabStFuWbZachqyanIB6Maoyat6dacetF_uhsgGTJT0T7yYUzaZmlOWTJk5HbeldfIcXyIMdoyawQcwtFuWrZacDqvYB6McoyawQdabgtFuWQCWaNugac8M-PHu5GbAOmahzn_rtbNkvbljVQyi5EOk5n9tbhkvbGaJjVQyvoxQdabEtFuWQCPugadSM_OPGZMacQGLK31meCWaBufCM-PGJMacQGWarK31mkNmafvbGa7jV6kym5GbcOjzn9tbhmaivbGaJjVQyvoyanQdabEtFuWQCWaHugadSM_P-OoMDmzsbTyxj0zwf1ihbPBg9UigLTCoLYAwfScciwglefIXfmlNmainbijVQyxoyatAcOtFuWUCWaG0fqM-PHu5GbbOmaebn9taNmajTbGaSPVQyvoyaqAdabWtFuWjZabRqyalcB6MboyanAdabatF0uWUCWau0eGM-PHC5DOkHn9tc5ZabtqvcB6MftMacMGWaqe31mcCU0gacYM-PHu5GaPOmahbn9tcPZabRqyaocB-N6LIkM6csoxXHBvn0fuCWavJc2QBOmafW5GbdgfDu3qyaoHZacEmk-IPUGKJMae8yw1tDbvhmaiyWTQM6dabCoyakXHxvn0gadOCVJcVOQBOji5Ga3gfTu3qvrZabUmlAPUGWaqZMadCylvn0gac4CWaBJcUQBOmahq5Ga3gfFru3qyaizZacDmfQM6dabdoyaqPGVru3qyaizY9mfQM6dabdoyakPGVYcWXyqSeehs1f6B9oZkGYzEAdDL058VnBZW7S-PyIPUGBoyan5HFvn0fgCWaBZc-QBOlO5Ga4gf9u3qyakzZabVmlAPUGWaAZMadEyw1tDbGbbNmag8WT6kGyowwQBOky5ygd1tDbFhjGWEQBOmafy5mgd1tDbGa3hlaWFOQby5Gbw6PUGPJMafAypvn0f8CWaXtb6PUGWavJMagkypvn0gadCCWaRtb-IOfdMacXQM6cKoyak5HFvn0f4CVZc-QBOmafq5FMfTu3qyanHZabxmlEIOdoyaq2QBOkq5GbdMf9u3qxHZacFml6PUGWavdMae-yw1tDbGa2hmaiCWT-qwglcfGGG5HgqmCQCqhQwiQBOkG5GaGgb1tDbGaGhmaeaW1QM6dabyoyaibHRvn0gadGCWaqda-IPUGKtMacWyw1tDbuNmafGWTQM6dabaoyalbHRvn0gacWCWawddwQBOmahe5GaSgfTu3qyarjZabymlEIPUGQdMadGyhvn0gacaCWaCddwQBOmafG5Ga4ggTu3qyaobZabWmd6kM6croyarbHBvn0fsCWaIdc2QBOmaea5GbeggTu3qyalbZacimnAPUGWaCtMaeqyw1tDbGbeNmaiGWT6kM6cOoyaubGDu3qyaibZacGmnAPUGWawdMafayA1tDbGa4hmakaWpWP5byySiwccdPFroLIyxjXDwvTzw50igrLCYbJB2LUz3puhsgMmPaXSlK5Dja2Slo0UlQYHbeldfIcXyIMfZLGGNe31mnhmaeHbAjVQyvoyajcdabmtFuWQCWasegadiM-PHO5GaKimahXn_rtc5ZacOqtQB6MgJMaeGGTu31mkNmajbbGaMPVQyvoyascdabLtFuW0CWaKegad6M_OPHC5GaWij5n9tcPZabGqwYB6MgJMadaGWatK31mnhmagbbGaZjVQyvoyamcdab-tF0uWUCWaEee-M-PHu5Ga8ilDn9tdrZab4qyaj6B6MgJMadWGWaz031mkNmahHbGa_PV_QdPgN9SVjb00zugZtUYOekfceeqSmwilfIkywoyakQcztFuWSCWavufIM-PHy5EOlfn9tbhkvbGaKPVQyi5EOmagfn9tbhmafvbGa8PVQyuoyakQdabjtFuWOCVugacsM_OPHy5GbdOjHn9tcXZachqwcB6MfJMae-GSe31meCWaT0gacqM-PGJMae-GWaye31meCWaH0gadWM-PHq5GbdOmaeHn9tcHZacFqyajcB-IMfJMadEGMe31mlhmag9byjVQyuoyan6dabitFuWOCWaB0gadaM-PHq5Ga3OmahHn9tcHZabVqyascB_6G6s0f2zxjZzsbWCMLUDgfUAEHYzqGIfHIXbySrtcPZabnqtcB6QbmkNmagvbyjVQOeWQCTufGM_OPHu5GbkOjHn9vaMftMad6GSe31ucyvoyavQcWtF0uWOCWatugacqM-QGtcHZabLqyajcB6Qbmkhmae1bGaWjVQOeWOCTugacqM_OPHq5GbkOmaeHn9vaMfdMad6GWase31ucyuoyasQdabGtFvqjHq5GbwOmaeHn_rtaNlvbGa8jVQye5GaMOmahHn_rtaNmak1bGa8jVQye5GbkOmahHn_9sXftDbpNl0WTQM6cFoyakPHBvn0fUCWavtc2QBOlC5EMfnu3qyaj5Y9mkAPUGWatZMacQyu1tDbGaZNmafuWPQM6dab_oyakPHt0vn0e-CWaNtc2QBOj85GbcMfTu3qw5ZacfmlAPUGTZMae6yu1tDbGaNNmaj0WPQM6dabpoyaqPHtvn0gadoCWaHtcMQBOmah85GbcMfpru3qt5ZabTmlAPUGTZMadAyu1tDbGaNNmag0WPQM6dabNoyanPHt408GSmwelbbb0NQFs2mRg6nlE3edCWUJQ5mRy2mUPyIPUGNtLgyA1tDbGaMNmafmWVQM6c1oyanzHFvn0e6CWaGZdwQBOmae05GbzMgVru3qtPZacZmnAPUGTtMae2yx1tDbGaMNmaimWVQM6cDoyakzHRvn0fQCUZc-QBOmae05rMgVru3qyan5ZacZmbQM6dabVoyatzGnu3qyan5ZacdmbQM6dabVoyanzGnu3qyan5ZabtmbQM6dabVoxzGnu3qyan5YJmb-qwglcfGGG5YI49gxgGY9eg3d01levn0d5ZabSmnAPUGQtMacqyhvn0gaccCSda6PUGWawtKWypvn0gadICSda6PUGWaItMacqyh0vn0fsCWaKda6PUGWaqtMafqyhvn0gacYCWaWdb6PUGWaCtMafqyhvn0gaesCWaKda6PUGWaNZMadyyA9fqsXZab91tDbtNmagWW1QM6dabzoyajbHBvn0gaeoCWaBddwQBOmafK5GbigfTu3qyak5ZabSmnENKfHIWHyiioK9dAwjSzsb2zxjYB3vPBgZPzsaH1levn0eWCQJcUQBOjG5GaHgfDu3qtbZabAmk6PUGSdMac0yu1tDbGaKhmafOWPQM6dabioyairHtvn0fGCWaqJcNOQBOjG5GbDgfDu3qtbZacImk6PUGMdMaeuyv1tDbyhmaiOWPQM6dabioyarrHtvn0gacqCWaOJcMQBOla5Gbrgfpru3qyambYQml6PUGWaydMaceyx1tDbGaWhmafOWV6kM6dabGoyaxrHFvn0gadaCWaOJc-QBOmaga5Gbfgf_YcWXyqSeehtfmYOohllZ55vUhpY67CQdNWW9nohzQwiQBOka5yggTu3qubZabimnAPUGOdMadayw1tDbChmagaW1QM6dabqoyambHRvn0gacGCWasdb6PUGWaAdMacqyw1tDbGa0hmagaWFOQBOke5GbuggTu3qujZacqmnAPUGOtMadWyw1tDbCNmahGW1QM6dabroyapbHRvn0gadsCWaEdb6PUGWaAtMaeGyw1tDbGaONmajaWFOQBOmah45rga1tDbGbihlOWgQBOmah45GaPga1tDbGbihmagOWgQBOmah45Gbbga1tDbGbihmajOWgQBOmah45Gbzga9pildfHcWqqDquxNJW5ow_CG5B_ohyGYzEAdpH5zmVnbJ36D2FNQwiQBOla5uMf9u3qtbZabbmk6PUGSdMacYyv1tDbmhmaheWRQM6cWoyarjHxvn0eWCWaOtcUQBOla5GbCMf_ru3qyajbZacHmkAPUGWasdMaesyu1tDbGaKhmaheWPQM6dabioyaljHtvn0gacqCWaqtcMQBOmaga5GaSMfnu3qyambZabXmkAPUGWaydMaesyu1tDbGa8hmaheWP-qwglcfGGG6s0XHigzS6gnOzsbKj1vSExnZzDqDqulLPZ4CMvbKYOohlF0Y4-MNFUqzmVnbW5DD2xMeeqSmwilfIkyzoyakIcytFuWYCWaBeeWM-PHK5GbcijHn_rtbhmajXbyjVQyAoyaqIcWtFuW0CWaBefGM-PHO5GaQilbn9tbhlXbyjV6kyvouIdabitFuWrY8qyajcB6MgJMacOGWase31mnhmagXbGaWjVQyvoyakIdabGtFuWQCVegadaM-PHu5simagbn_rtcPZac0qyamcB6MftMae4GWaye31mkNmairbGaWjVQyi5Ga2imaeHn9tdrZaceqyajcB6McoyatIdabitFuWQCWaTegacqM_-OoCQM_RZqCn_xLY08WGIfHIXbySrtbNlbbyjVQym5yimaeHn9tbNlbbGaWjVQym5yimahHn_rtdrZabiqtcB6MgtMacqGSe31mmNmaeHbGaKjVQyzoyajcdabGtFuW0CWasegadWM-PHO5GaWimagbn9tdjZabGqyajcB6MgJMadaGSe39fmnhmajbbmjVQyzoyasccWtFuWYCWaKegacqM-PHK5Gbiimagbn9tdrZacqqyapcB6MgJMadWGWaye31mmNmahHbGaKjVQyAoyapccWtF0uWzZacOqwcB6MdoyavcdabitFuWzZacOqyamcB6Mdoyavcdab4tF_uhtwMmRMqDlSWSNs5KdiYKdyWKdSWS7QYKbIBMyqrcWXyGSwiPGtLcGWaye31mohlLbGaWjVQye5COmahHn9taNmagLbGa8jV6kye5GbyOmagbn9tdHZaczqyamcB6Mboyatkdab4tF0uWYCUueWM-PHq5COlbn9tcHY5qyajcB6MfdMacIGWaye31mmNmaffbGaKjVQyzoyakkcWtF0uWYCWaMueWM-PHq5GbmOlbn9tcHZaczqyajcB6MfdMaecGWaye31mmNmaifbGaKjVQyzoyaqkcWtF0uWYCWaAueWM-PHK5Ga0Olbn9tdHZabPqyajcB6MfdMadsGWaye3_1b1btmVnbcW9nUhDKW8To7lZqDT_xMG34UExL2Y7UGqrcWXyGSwiPHW5yijHn9tdHZabiqtcB6MfZMadaGMe31mlNmagbbyjVQyvoyamcdabitFuWUCWasegadaM-PHW5yimaeHn9tdHYyqwcB6MftMacqGSe39fmohmakHbmjVQyCoyasccytFuWUCWaEeeWM-PHC5Ga8ilbn9tcPZab4qyajcB6MfZMaeGGWaye31mohmakHbGaKjVQyCoyayccWtFuWQCWaKefGM_-OoLkzHqDmUprU08EUvbK6Oog_D0cciwglefIXfmlhl1bGaKjVQywoyakQcWtFuWSCWaBufGM-PHy5GbcOlbn9tcXZacDqyajcB6MgtMaekGWaye31mmNmag1bGaWjVQyzoyakQdabGtFuWYCVugadWM-PHK5GboOmahHn9tbhmalvbGaKjVQyi5GbAOmagbn9tbhmalvbGa8jVQyi5sOmaeHn9tbhkvbGaWjVQyi5sOmahHn_9qDj0tlZX5D3tkGW9FcdlUZzExmiiHyySqwleuW4CWaseeWM-PHW5GbiijHn9tdHZadaqwcB6MhdMagaGWase31mmNmajbbGaWjVQyzoyapcdabGtFuWYCWayegadaM-PHK5GaKimagbn9tdHYyqyajcB6MhdKWGSe31mmNlbbyjVQyzoyajccWtFuW4CWayefGM-PHW5Ga8ilbn9tdjZacqqwcB6MgtMafqGSe31mmNmakHbGaKjVQyzoyascdabitFuW4CWaEegacqM-PHW5GaWimaeHn9tdjZabiqyajcB6MgtLGGWase3_1bZTmYOmEJdUYzDMNlYcciwglefIXfmohlnbyjVQyAowAdabitFuWrZablqyamcB6McoyamAdab4tFuWrZab7qyapcB6McoyasAdabGtFuW0CWaQ0gacqM-PHW5GbvOlbn_ru3qtbZablmoAPUGSdMacwyv1mnhmaeTbGaKjVQyi5GaXOmagbn9tbhmahTbGaWjVQyAoyasAdabitFuWQCWaK0fGM-QBOjG5GbjMhpHrtcPZabJqtcB6MftMadgGSe31mnhmagnbGaKjVQyAoyapAdabitFuWQCWaE0fGM-PHu5Ga9OjHn_9sXftDbmhmae8WwQBOjG5GaZMhnu3qwbZabNmfQM6dabioyam5Htvn0gacqCWatZbAPUGWasdLUyC1tDbGaWhlCW5QM6dabGoyaj5Htvn0gadaCWazZcMQBOmahG5GaZMfpru3qtbZacvmfQM6cyoyapPHZvn0fGCWaFtbAPUGWasdMad6yu1tDbGaKhmajuWwQBOmaeG5GbwMhnu3qyambZacTmoAPUGWaydMaeQyu1tDbGaWhmah0WPQM6dab4oyapPHt008GSmwelbbb0LPJkqodE0T3o3TXa2oRCWTlKY6G6w0zVCM1HDgLVBIbKzsbSysbJAoH2CMuiqHyySqwleuWzY8qtcB6MdoyakIcWtFuWzZabSqwcB6MdoyaqIcWtFuWzZacCqtcB-IMftMae4GWase31mgCWaHegacqM-PHu5Ga2imaeHn9tbNmafrbGaKjVQyvoxIdabitF0uWYCPegadaM-PHK5Eimagbn9tcPZabuqyamcB6MdoyanIdabGtFuWQCWaHegadaM-PHK5Gboimagbn9tdjZac0qyamcB-IMgtMaeiGWaEe31mgCWaBegadWM-PGZMaeiGWaKe39fmgCWavegaeGM-PGZMadyGWaKe31mmNmafrbGa8jV_QwiQBOjG5EMgDu3qyajbY9mm6PUGSdLkyz-fftDbmhmaj0WZQM6dabioyatPHNvn0fGCWaTtdpOQBOjG5Ga2Mfnu3qwbZabTmkAPUGWasdMadAyu1tDbGaKhmafuWOOhvn0gadaCWavtakb1tDbGaWhmag0WcGDu3qyambZacfmaOhvn0gacqCWaHtcIGFYcWXyqUeihlAeWTZ0W9-PyIPUGSdL0yz1tDbGaKhlOWZQM6dabGoxrHNvn0gadaCWauJb6PUGWaydMaduypvn0fGCWaAJdgQBOla5GaPggnu3qtbY6mmEIPUGSdMae0yz1tDbGaKhmajOWZQM6dabGoyatrHNvn0gadaCWaGJb6PUGWasdMaduypvn0fGCWaGJdgQBOjG5GbnggpYcWXyqSeehtEOmlA4nJk2T7Q5UBkqCba2mja5mRMXT7Q5UBlQwiQBOjG5ygd1tDbmhmaeGWXQM6cWowbG9u3qwbZabimdQM6dabiowbG9u3qyajbZabimmAPUGWaydLGyp0vn0eWCWaQdb6PUGMdMaeGyy1tDbyhmakGWEQBOla5Gbigb1tDbGaKhmakGWEQBOmaeG5Gbiggnu3qyambZacOmh6kM6cyoyapbHtvn0fGCWaEdcMQBOmaeG5Ga8gb1tDbGaWhmahGWX6kM6cyoyambHtvn0fGCWaydcMQBOmaeG5GaWgb1tDbGaWhmagaWX-qwglcfGGG5-OyEwNMGXP8VpOG279oPyIPUGSdMacuyD1tDbGaKhmaeOW7QM6cWowrH3vn0gacqCSJdUQBOmaga5zghDu3qyambZabkmo6PUGWaEdMacuyhvn0gadWCWayJdVOQBOla5GbjghDu3qyajbZacsmo6PUGSdMafuyD1tDbGaKhmakOW7QM6dabGoyavrH3vn0gadaCWaKJdUQBOmahG5Gbjgb1tDbGa8hmahOW76kM6c-oyamzGDu3qyakXZabJmdQM6dabwoyapzGDu3qxXZab7md6AAEqwglcfGGG6tPoXbW2zEVrbKY80glFTXzEEPyIPUGMdMacqyy1tDbyhmagaWRQM6dabioyajbHJvn0gadaCWaydcUQBOmahG5GaKggpru3qtbZacOmmAPUGSdMaeGyv1tDbGaKhmakGWXQM6dabGoyasbHxvn0gadWCWaQddhOQBOjG5Ga8gfDu3qwbZab4mmAPUGWasdMadWyv_ildfHcWqGDi0pFJ19moNyGY-ogZFZ05TsXftDbmhmagaW5QM6cyoyapbHFvn0eWCWaKddMQBOla5Gbugf9u3qwbZacqmoAPUGSdMadWyx1tDbyhmagaW5QM6cWoyajbHFvn0gacqCWayddMQBOmaeG5Ga8gf9u3qyajbZacqmoEIPUGWasdLGyD1tDbGaWhmaeGW7QM6dabGoyapbH3vn0gadaCWaQddUQBOmaeG5GbGghFYcWXyqSeehs2MmjaXmlM5TlCYKdk2UdE0UBE3n3sY6G6yOMhDZYOmMxMGXB9pnbJ389UNJ1Y8WHcfHIXbySrtcXYNqucBkcYdrajqMWEilsHiOG28yfroY4q0aeSqpz0OKjcaAg4OIKCJV6JcW5tKfWtsWdby251p1dF1gfHY_imafaMLGgcXTZQFQg_QmldMacUqxbnlamfJBNu_un_uywhmag8GOcAwaylg3oP-OB_OOWSoyaw5bqe0SeWwnUDt9q39rHyCWaTYc4jPyjGSBC6N6HV6JcW5GbpKgacGtsWtby251p1dF1gfHZachilGMLGMcXTZQFQg_QmldMadEqyakbnlbmfJBNu_un__uwiPnYcyhmaeGyz1jUqwa5yddoPnYcWhmaeGyz1jUqyaja5GaKdcUPnYdabihmagayz1jUqyama5GaWdcVOPnYcyhmakGyz1jUqwa5GbGddoPnYcWhmakGyz1jUqyaja5GbudcUPnYdabihmajayz1jUqyama5GbidcVOPnYcyhmahGyC1jUqwa5Ga8ddoPnYdabihmahGyvkb1jUqwa5GaWddHqoPnYcWhmajayCkb_efGXyiwbba6y0nS6w1LBNrPBMvZigvUigvTyNvZy2fKzDryIK3imahGCWasbHJuM5bGa8dMadammAK3imagaCWaybHJuM5bGaWdMacqmmAK3imagaCSbHJuM5bGaKdMacqmkAK3imaeGCWaybGDsBKgacqoyapaWPQtCGSbZabGgfnsBKfGoyajaWpOPnYcWhmakGyhuM5bydMaeGmkAK3ilaCWaEbHtuM5bGaKdMaeGmdQtCGWasbZacOgfnsBKgadaoyayaWEPnYdabGhmakGypuM5bGaWdMaeGmhQtCGWaEbZacqgd1jUqyapa5Gbudb_IcWySelaGGC4Attacagrumes1fIktCGVHZabFghnsBKgacGoyan4W5QtCGVHZab_ghnscNhmajBuM5bGaHJMafgmoAK3imafSCWaJXHZuM5bGa2JMadGmoAK3imafSCWatXHZuM5bGaHJL2moEIK3ikiCWaObHFuM5bldMaecml6K3ikKCWaBXHFuM5bldMac6ml6K3ikiCVHHF8qwdfGHyeedN9cAw70BwuGB2zMzw5ZAwBuwiPnYcUhjSyA1jUqyaiW5zJdwPnYdabEhmagmyA1jUqyaiW5GaLJdwPnYcUhlmyA1jUqvW5GaXJdwPnYcwhmagmyA9fjUqvW5GbHJdwPnYdabghmakSyA1jUqyalW5Ga9JdwPnYdabghmajmyA1jUqvW5GbvJdwPnYcUhmahSyA1jUqsW5Ga9Jdx4GSglbc4iqhnuhQGX79o7oGq6IXfjUqpJMac4mo6K3ij4CWarXH3uM5byJLUmo6K3imaeGCSXH3uM5bGaVJLYmo6K3imahiCWarbH3uM5bGa_dMacUmo6K3imaimCWaCbH3uM5bGa_dMaeomo6K3imahiCWaMHH3uM5bGaVJMafkmo6K3imaeGCWaQXH3uM5byJMafomo6K3ij4CWaLXH3uM5a-oyaqqW76ktCGPrZabVghDsBKfGoyaq4W7Qms45GbfegacmtFuM5bGaVdMaemmo6K3imagiCWaCbH3uM5bGaVdMacWmo6JeUoyakHbGaJK31jUqwa5GaRJdUPnYdabghmag8yD9pefGXyiwbba6B01PCMfIzwXSzxmGC3vYigXPDcbKj-LWAw5LC9ryIK3ijGCWaybIx1jUqwa5GaWdeVQtCGWasbZabGgjFuM5bGaWdMacqms-PnYdabihlayL9sBKfGoyajaXl6K3ilaCSbIx1jUqta5mdeV6ktCGMbZab4gjFuM5bydMadWms-PnYdabihmahGyL9sBKgadaoyasaXl6K3imaeGCWaQbIx1jUqwa5GbideVQtCGSbZacOgjFuM5bmdMagams_4GSglbcWiihmuXpL588oNBQleuM5bldMad6ms-PnYcUhmah0yL9sBKgacmoyapOXl6K3imaeyCWaLrIx1jUqvW5GbkJeVQtCGRHZacTgjFuM5bGaJdMafAms-PnYcUhmamuyL9sBKeSoyavOXl-IK3ijqCTrHJuM5bwdK6mmAK3imaeqCTrHJuM5bwdLQmmAK3ikWCWatrHJuM5bGaIdMacAmmAK3imaeqCWazrHJuM5bwdMadkmmAK3ijqCWazrHJ0uGWauXZado1jUqyara5GbzdaAK3imaiGCWaMbGnsBKgaeqoyapWWgPnYdacihmagqyduM5bGbedMacumbQtCGWaIbYWga_efGXyiwbba6GQhlFT39no_CG59EsdzL5Om3lRP6C0g3R0W7UNpuwiPnYcqhmaeayL9sBKfqoyaiiXl6K3ikGCQrIx1jUqyaia5uJc-PnYdabyhmaeeyx1jUqyaia5GaGJc-PnYdabahmafKyx1jUqva5GaSJeV6ktCGKrZacHgjFuM5budMafcms-PnYcOhmalKyL9sBKgacaoyaxiWoPnYdabahmakeyhuM5bGaSdMafcmdQtCGWaqbZacjgb1jUqva5GbeJeV6AEilbIWqSccb0XuTppJ1Y80gtkG4BoUNlZqyCENjL56IXfjUqta5FddMPnYcWhmafyyC1jUqwa5FddMPnYcWhkyyC1jUqyaja5tddgPnYdabGhkyyy9fjUqta5GbpddMPnYcWhmaiyyC1jUqwa5GbpddMPnYcWhmalyyC1jUqyaja5GbBddgPnYdabGhmalyyy9fjUqyaja5Ga3ddgPnYdabGhmag4yykb1jUqyama5GaRddbqoPnYdabGhmaiyyykb1jUqyaja5GaRddbqoPnYdabihmaiyyykb_efGXyiwbba5BtcFPDgf11fIktCGNrY9ghTsBKfQoyakOW9QtCGWatrZabTghTsBKfQoyaqOW9QtCGNrZacDghTsBKe6oyaqOW9QtCGNrZabTghTsBKe6oyakOW9QtCGTrZabTghVrsBKgacAoyatOWgPnYdabLhmaiuyduM5bGa-JMadAmbQtCGWazrZabTga1jUqyamO5GaQJaAK3imae0CVrGpXbymwcfGqqoCOMhP0YOmptPHX69ryIK3ijGCWaQbHxuM5bydMadWmk6K3ilaCWaKbHxuM5bydMafqms-PnYdabihmakGyv1jUqyama5GbudeVQtCGWaEbZacOgjFuM5bGa8dMaeGmpAK3imagaCWaKbIx1jUqyaja5Gbidd2PnYdabGhmahGyE9fjUqta5ydcUPnYcWhmagayv1jUqwa5GaKdcUPnYcWhlayL9sBKgacqowaWRQtCGWaybYWgjFuM5bGa8dLGms-PnYdab4hmaeGyE1jUqyama5GaKdeVQtCGWasbZabighTsBKgadaoyamaW9-ilbIWqSccb0HumpnbKYOopxdY6ACVlNQleuM5bnJMad2mmAK3iliCWaEXH7uM5bGaLdMad2mpAK3imageCWaFXHJuM5bGaOdMaeQmmAK3ilWCWaNrHJuM5bsJMaeMmmEIK3ijSCWayXHJuM5bzdMadgmpAK3imaeOCWayXH7uM5bGaWJMac-mmAK3imafaCWasrHJuM5bEdMaccmmAK3ikuCWasXHJ8qwdfGHyeedPwOyDVdzL27-VpNLqC-VlHY088UOSrsBKfkovqW9QtCGPrZabcgfTsBKfkoyalqW9QtCGVrZabAghTsBKf6oyaiqWTQtCGVrYQghTsBKgacQovqWPQtCGWavrZabcgfnsBKgacQoyalqWPQtCGWavrZabYgfprsBKfkoyaxqW9QtCGPrZacIgfTsBKfkoyarqW9QtCGVrZackghTsBKf6oyauqWTQtCGVrZac6ghTsBKgacQoyaxqWPQtCGWavrZacIgfnsBKgacQoyarqWP-ilbIWqSccbXUv-DryIK3ilaCWasbHNuM5bGaKdMacqmm6K3imagaCWaybHNuM5bGaWdMadWms-PnYdabGhmajayz1jUqyaja5GbuddoPnYcWhmakGyz9fjUqta5GbideVQtCGSbZacqggDsBKgacqoyasaXl6K3imaeGCWaEbIx1jUqyaja5GaWdeVQtCGSbZabGggDsBKeWoyamaXl-IK3ijGCWaEbIx1jUqwa5Ga8deV-ilbIWqSccb01vmUprU08EUvbKYOnIFlUX4CNllTY7UMOSrsBKeYoyatWXkAK3ijKCWaHHIu1jUqti5Ga3dePQtCGMrZabwgjtuM5bmJL8msMPnYcXhkyyLnsBKgacsouWXkAK3imageCVHIu1jUqyami5GaRdePQtCGWayrZabUgjtuM5bGaWJMaemmsMPnYdabHhmaj4yLnsBKgacsoyawWXkAK3ileCWaTHIu9fjUqwi5Fdc2PnYcXhmafyyw1jUqwi5Ga3dc2PnYcXhmaiyyw1jUqwi5Gbpdc2PnYdabjhmaj4ypuM5bGaKJMaemmhQtCGWasrZabUgd1jUqyaji5GaRdb6K3imaeKCVHG_HtXbymwcfGqqozPMvbZ0ACUZjQleuM5bmdMae6msMPnYcWhmaj0yy1jUqyaja5GboJdgPnYdabGhmaj0yv1jUqyama5GbcJcUPnYdabGhmag0yv9fjUqta5EJePQtCGSbY9ggnsBKgacqoxOWXQtCGWaybY9gfDsBKgadaoyakOWR6ktCGMbZabTgjtuM5bGaKdMadAmsMPnYdabihmafuyykb1jUqyaja5GbcJdbqoPnYcWhmaiuyLcGDsBKfGoyakOXkfa_IcWySelaGGDj6g3URK3TZCYKdit9lH0Uds3mRNQleuM5bmdMadampAK3ilaCWasbH7uM5bGaKdLGmm6K3imagaCWasbHRuM5bGa8dMadamnAK3imagaCWaybHRuM5bGaKdMadamm6K3ilaCWaybH70uM5bmdMadWmpAK3ilaCWaKbH7uM5bGaKdMafqmm6K3imagaCWaKbHRuM5bGa8dMadWmnAK3imagaCWaEbHRuM5bGaKdMadWmm6K3ilaCWaEbH78qwdfGHyeedPkM4CEhLV3impxWG4CUU7lZ1fIktCGPHZabagjtuM5btdMacWmsMPnYc-hmafGyL9sBKf8oyaiaXl-IK3ikyCWaObIu1jUquW5GbedePQtCGVHZacigjFuM5bFdMafams_OPnYcMhmahayL9sBKf8oyaoaXkAK3imafyCWaCbIx9fijeCWaUTscVhmamFuGWasHZadh1imageCWaTTsBKgadCoyauaWoPnYdabUhmaiGyhuM5bGa3dMadGmdQtCGWaBHZabygb1jUqyanW5GaGda_IcWySelaGGDjuFz1X7-EvaMqy9-3d0388UOSrsBKeSoyalGW9QtCGLHZab0ghTsBKeSoyarGW9QtCGRHZacKghTsBKfCoyaoGWVQtCGRHZabeghVrsBKgacmoyarGWVQtCGWarHZab0gf9sBKgacmoyalGWVQtCGWaxHZabegjtuM5bGaVdMac4msMPnYdabEhmahqyLnsBKgac8oyarGXkAK3imaf4CWaPbIu_efGXyiwbba6vPMfbM37UMhtUYOmMvbN65ExllQleuM5bGbadMafambQtCGWaGbZaciga1jUqyaqa5Ga4daAK3imaiaCWawbGnsBKgaeaoyaiaWgPnYdabOhmaeayluM5bGa0dMacWmfQtCGWaAbZabWgc1jUqyana5GbedbAK3imagGCWaObGVrsBKfaoyaoaXmAK3ilGCWawbIy1jUqyaka5GaGdeXQtCGWaubZabygjJuM5bGaOdMadGmtgPnYdabqhmaiGyMnsBKgacGoyauaXmAK3ilGCWaIbIy1jUqxa5Ga4deX-ilbIWqSccb0_q9-3BH3zn6djL5Oopxl0549gxMGZDExtt2Y89ryIK3imafeCRHIy1jUqyamO5GaIJeXQtCGWaCrZabIgjJuM5bGa4JMad4mtgPnYdabLhmajKyMnsBKgacIoyawiXmEIK3ijGCWaCbIu1jUqwa5Ga4dePQtCGSbZabygjqOhuM5bydMaeqmsHqoPnYdabihmaiGyLcGDsBKgacqoyaoaXkfa6K3imaeGCWawbIukb_efGXyiwbba6w0XLigjVDwnSAwvYig1Hz27PDgLXDwxuwiPnYcyhmaeGyLnsBKeWoyamaXkAK3ijGCWaEbIu1jUqta5GbidePQtCGSbZacOgjtuM5bGaKdMafqmpAK3imagaCWaQbH70uM5bydLGmsMPnYcWhmaeGyy1jUqwa5GaWddgPnYcWhmahGyy1jUqwa5GbiddgPnYdabihmajayE1jUqyama5GbidcVOPnYdabihlayE1jUqyaja5GaKdd2PnYdabihmagayy1jUqyaja5Ga8ddgPnYdabGhmahGyv9fjUqyama5ydd2PnYdabGhmaeGyv1jUqyama5GaWdcVP4GSglbcWiihsfmYOmEJdYqze-hNZW9EMOSrsBKd45Ddd2PnYb8CWauHH7uM5a-oyanqW7QtCGPXZabsghDsBKf-oxqW7QtCGWavXZabsghDsBKgadEoyanqW7QtCGWaBXZabsgfTsBKgadEoxqWT6ktCGFhmajOyE1jUqpJMaeempAK3ikCCWaAHH7uM5btJMaeemo6K3il8CWaMHH3uM5bGaRJMaeemo6K3imafCCWaAHHBuM5bGa3JMaeemlAK3imag8CWaMHHB8qwdfGHyeidPoMyuglFI07SQdj1qznohfSY6IXfjUqsq5Ga5JdgPnYcQhmahmyy1jUqyaiq5GaTJdgPnYcQhmafSyy9fikyCUnsc6hkluGWavbYA1imag0CPTsBKgadKoyaiyXmAK3imahiCWawXIy1jUqyaoq5Ga5JeXQtCGWaCHZaclgjJuM5bGa5dMafgmthOPnYcQhmaiSyy1jUqyaiq5GbfJdgPnYdabAhmahmyy1jUqyaiq5Ga5Jdh4GSglbcWiihp1dL13zEAdd1qzUw_D01a5LqIaAmiagiccelbIWGSleuyeCWasccWjVQmcoyajbbGaKe31gbhmaeGGWaycB6JaJMadaqyambn9rGrZab4imagaM-OWi5GbiegadatFuyeCWaKcdabijVQmcoyasbbye39fgjyCWaEccyjVQmsW5Ga8efGtFuyLHZab4imaeGM-OXldMadaqyajbn9rIwhmagaGScB6JeSoyambbme3_1a5QKzEwvb3YOm-8eeiwdfHbywiOXldMacqquPn9rIwhlaGVsB-IJeSoyasbbsK31gjyCWaQcc9jV6kms45GaWefktFuyLXZabGil0M-OXlJMadaqyakPn_rrIxhmahGGPsB6JeUoyapbbEK31gjCCWaEcdabvjV_QbY1c37mIcqccelbIWGSleuyChlaGMcB6JdG5yefGtFuyLbYWimaeGM-OXkdLGqyambn9rH4CWaycdabijVQmpdMadWqwbn9rHWCWaKccyjVQmodMaeGqwbn9rIuhmajaGWascB6JeOoyasbbGaWe39fghbZacOijGM-OW4oyavbbye31gjqCWaQcdabijVQmsG5GbuegadatFuyEhmahGGWascB6JdW5GaWefGtFuyChmaeGGMcB6JdG5GaKefGtFuyLbZabiimaeGM-OXkdMacqqyambn_9qoKTdAxrYDxmGyw50As1H6xjPzw4eeiwdfHbywiOXiJL4qujn9rIrhmafqGOsB6JeIoyanHbqK31gjeCWaHccHjVQmsi5GboefctFuyuhmajWGUsB6JcG5GbcefYtFuyuhmagWGUsB6JcG5GaQefYtFuyuhlWGUsB6JdO5EegacItFuyDhmafqGWausB6JdO5Ga2egacItFuyDhmaiqGWausB6JdO5GboegacItF_udPIP4DMhjLqzmQdBV3C-NllZqzUwhtZbbcfGXyqwfIkmsG5xKeYtFuyLbZabhijKM-OWWoyai5byK31ghrZabhimaeKM-OW8oyai5bGaWK31ghHYVimageM-OW6ov5bGaKK31ggbYVileM_OOXkdMafqqtjn9rIuhmajaGMsB6Jda5GbiefItFuyDhmajaGWassB6JdW5GbiegadctFuyEhmakGGWaysB6JdO5GbuegacstFuyyhmakGGSsB-IJeOoyapbbmK31ggbZab4ileM-OW6oyapbbGaKK31ghHZab4imageM-OW8oyambbGaWK31ghrZabGimaeKM-OWWoyambbyK31gjqCWaycczjV_Qb0TQtkXUJc3m7yYKdc6Utc3oJsWSFsYUyiiqSglccWSrrIwhmahGGMcB6LaJeSoyapbbye31kbgjyCWayccWjVQucmsW5GaWeeWtFuOeyLHZacqilaM-PqiXldMaeGqtbn_rrIrhmahGGWascB6LaJeIoyapbbGaWe31kbgjeCWaycdabGjVQucmsi5GaWegacqtFuOeyKrZacqimagaM-PqiXiJMaeGqyajbn_9qoL9uzwnOBMLXDwuGzguGBgeGCg9Pz27PzqqqHymwefHyIJc45GaKefatFuyLXZabGilGM-OWUoyambbqe31gjCCWaEcc4jVQmlJMadWqubn9rIxhmajaGUcB6Jc45GbiefatFuyxhmakGGOcB-IJMagEqmAJMafKqtwO5GbuKfDQoyawrbGaH6JeWoyatPbGaSK31gjGCWaHsdabXjVQmta5Ga2KgadItFuyMbZabvimafKM_-OhswMmPa2SlD0m7kqmRCYnlcXnNsccelbIWGSleuyKrZabiilaM-OWYowbbGaKe31hjCGWazDrYIimahxuyzhmaeGGWaycB6JeIoyambbGaWe39fgjeCWaKccWjVQmmJMafqqyajbn9rZac-imaghuCWaRIdabU1ggrZacqimagaM-OXiJMadWqyambn_rrIrhmagaGScB6JeSoyajbbGaKe31gjyCWaycdabijVQmsW5Ga8egacqtFuyLHZacqimaeGM-OXiJMadWqwbn_9qoBPMfbI37Cw_DUYGGHcWySilcXfghHZabiijGM-OW8owbbye31ghHYWimaeGM-OWSoyajbbGaKe31gfHZabiimagaM-OWSoyambbye39fghHZacOijGM-OW8oyaybbye31ghHZadaimaeGM-OWSoyavbbGaKe31gfHZacOimagaM-OWSoyasbbye39fgjyCWaEccyjVQucmsW5Ga8efGtFuOeyLHZabGijGM-PqiXldMaeGqtbn9sGrIwhmajaGWaycB6LaJeSoyapbbGaWe31kbgjyCWaycdabGjV6FQbZ9mYOmMNdTW7UIdTL5DaqqHymwefHyIJeIoyajHboe31gjeCTcc0jVQms45GaMefOtFuyLXZabKilqM-OXiJMadiqtHn_rrIrhmajuGNcB6JeIoyavPbAe31gjCCWaLsc0jVQms45Ga-KfOtFuyKrZab9ijWM_OOWOoyasPbGaMe31gfbZab9imaeWM-OWOoyamPbGaMe31gfbZabnimaeWM-OWOoyamPbGaYe31gfbZab9imagqM_-OhsLg05-UvBSW88VjbH6Om3lFU6aGHcWySilcXfgjqCSYcxjVQmsG5GaLKfEtFuyLbZablimaeCM-OW2oyajzbGaVK31gjqCWayYcVjV6kmsG5GbvKeUtFuyLbZactik8M-OXkdMaeMqyai5n9rHSCWaKYdabFjVQmsG5Ga9KfEtF_udMAyNW5-whHOYGGHcWySilcXfgfrZacqijGM-OWYoyavbbye31gjCCWaKcdabijVQmmJMafqqyambn_rrHuCWasccyjVQmmJMadaqwbn9rIxhmaeGGWascB6Jdi5GaWegadatF0uyvhmahGGMcB6Jdy5Ga8efGtF0uyvhmakGGMcB6Jdi5GbiefGtFuyLXZacOimaeGM-OWYoyasbbGaWe3-ffgfrZabGijGM-OWYoyajbbye31gjCCWaycdabijVQmmJMacqqyambn_9ryIK3ihbX8yLnsBKfcopJdwPnYc5hhXIu1jUqyaki5tJdwPnYc5hl8yLnsBKfaoyan4W3QtCGUbZacCgjtuM5bGaOdMafOmnAK3ilGCWaZbIu1jUqua5GbMddwPnYbWCWaZbIu9npefGXyiwbba5IMyuhBdN65DryIK3imafqCPHGnsBKgacOoyakWWgPnYdabShmafyyduM5bGa2dL8mbQtCGWaBbYMga9fjUquG5Ga3ddEPnYc8hmag4yB1jUqyakG5Ga3ddEPnYdabShmag4yB9fjUqyakG5GbBdaAK3imafqCWaHHGnsBKgadyoyaqWWgPnYdabShmaj4yduM5bGa2dMafSmb-ilbIWqSccb0XQdt0m7kqCba2n7Q4ediYKdytSRM4mlgY6IXfjUqoJMac0msMPnYb0CWaCHIu1jUqoJMaeumsMPnYcLhmakiyLnsdabbhmalNuM5bGaXJMafemtgPnYdab7hmaiOyMnsBKgad2oyaoqXmAK3imahSCWawHIy1jUqyamy5GaHdeXQqx45vAK3ikuCWaqHIu9fjUqxO5GaHdeTQtCGWavrZabAgjBuM5bEJMadKms2PnYdabvhmaiOyLTsBKf6oyauqXlFIcWySelaGGC0Tournicoti1fIktCGMbZacOgjxuM5bydMaeGmsUPnYdabihmajayLDsBKgadaoyasaXk6K3imagaCWaQbIv1jUqyaja5GbudeR6ktCGMbZab4gjxuM5bydMadWmsVOPnYcyhmaeGyLDsBKfGoyamaXk6K3imaeGCWaybIv1jUqyama5GaWdeRQtCGWaybZabigjxuM5bGaKdMacqmsV4GSglbcWiihsLcW8Upxl06zugtkG24D2FRL56IXfjUqyaja5ydeRQtCGWaybYWgjxuM5bydMacimsUPnYcyhmagayLDsBKeWoyapaXk6K3ilaCWaKbIv1jUqyaja5GbudeRQtCGWaybZacOgjx0uM5bydMadWmlAK3imaeGCWaEbHBuM5bGaWdMadWmlAK3imagaCWaybHBuM5bGaKdMadamlAK3ilaCWaybHB8qwdfGHyeedPdtgeGDM91DguGBwfUz3xPzDryIK3ilyCWawbHtuM5bGaNdMacWmkAK3imae4CWaqbHtuM5bGaNdLqmm6K3ilyCQbHNuM5bBdMacamn6K3ij4CWawbIu1jUqtW5GaGdePQtCGNHYOgjt0uM5bBdMaeqmkAK3imae4CWaIbHtuM5bGaNdMafamkAK3imae4CWaUbHNuM5bBdMafWmm6K3ilyCWaObHVuM5bpdMaeqmsMPnYcEhmakayLnsBKe8oyaxaXkEIKcO5Ga46K3ilyCWaCbIv_efGXyiwbba56MzugpFT4CSVpNL68TryIK3ijeCWaqHHJuM5buJMac0mmAK3ikKCWaqHHJuM5buJLummAK3imaeeCWaqHIr1jUqyaii5GaTdeJQtCGWawrZabAgd1jUqyaoi5Ga5db-IK3ijeCWaOHHJuM5buJMaeummAK3ikKCWaOHHJuM5buJMaf0mmAK3imaeeCWaOHIr1jUqyaii5GbfdeJQtCGWaqrZabYgjhuM5bGaSJMaeumhQtCGWawrZabYgd_efGXyiwbba6tQg_BL2B0gxOG55EAdHV6zEEOSrsBKeMoxWXl6K3ikSCVHIx1jUqyaly5FdeVQtCGWaCXY-gjF0uM5bjJMae8ms-PnYcRhmaj4yL9sBKgac2oyatWXl6K3imahmCWaNHIx9fjUqsy5GbddcUPnYcRhmaiyyv1jUqvy5Ga3dcUPnYcthmag4yv1jUqsy5GaRdcUPnYcRhmafyyv1jUqyaiy5Ga3ddEPnYdabBhmaiyyE1jUqyaoy5Gbddd2PnYdabZhmag4yE1jUqyaly5Ga3dd2PnYdabBhmafyyE1jUqyaoy5GaRdd34GSglbcWiihsfmYOmE_BW5zEFpl15igwOSrsBKeWoyajaXn6K3ilaCWaybIB1jUqyaja5GaKde36ktCGMbZacOgjVuM5bydMaeGmtEPnYdabihmakGyM_rsBKeWoyapaXn6K3imaeGCWaEbIB1jUqyama5Ga8de3-ilbIWqSccb0JrUwhtZY80ghQGX79Uld01a6APMvbZ0DEwNxL3imVrbSt4DplN05ADEueeiwdfHbywiOXkJMafqqyajbn9rIvhmajaGScB6Je2oyapbbme31gjSCWayccyjVQmsO5GaKefGtFuyLrYWimaeGM-OXnJMacqqyajbn9rIBhmagaGWascB6Je2oyapbbGaKe31gjSCWaKcdabijVQmsO5GbiegadatFuyLrZabiimagaM_-Ohm0ZcG6B-xtRLbbcfGXyqwfIkmty5GaKeeKtFuyChmaeGGQIB6JdG5GaKegacetFuyLrZabGikOM-OXnJMadaqsrn_rrIBhmaeGGWaCIB6Je2oyambbGa5e31gjuCWaycdabAjVQmsO5GaWegacetFuyChmaeGGWawIB-IJe2oyasbbGa5e31gjSCWaEcdabYjVQmsO5Ga8egac0tFuyLrZab4imaeiM-OW4oyasbbGaTe39fgjSCWaKccsjVQmodMaeGqvrn9rHWCWaKcdabcjVQmsO5Ga8efutFuyMXZab4ijiM_-Ohn0pcG7B9MvbIW8WqqHymwefHyIJeSoyaijbsK31gjSCWaqsc9jVQmsW5GaSKfktFuyMXZabXil0M-OXldMaesquPn9rIwhmakeGPsB6Je2oyaujbEK39fgjGCWaIIdabvjVQmta5GaTegacQtFuyMbZabcimag0M-OXmdMadKqyanPn9rIyhmakiGWaBsB_6IXfjUqta5GaKdfpQtCGMbZabGgkFuM5bmdMadWmu-PnYcyhmajayP9sBKeWoyavaXt6K3ilaCWaQbGDsBKgacqoyavaXk6K3imagaCWaQbIx1jUqyama5GbideVQtCGWaybZab4gjFuM5bGaWdMadams-PnYdabGhmaeGyL_rsBKfGoyasaWoPnYcWhmahGyhuM5bydMadamdQtCGSbZabigb1jUqyaja5GaKdeRQtCGWasbZabGgjxuM5bGaKdMadWmsUPnYdabihmajayLFXbymwcfGqqoMAzHqC8oZTLqzoQdxP76ugpFZ26EpxlQleuM5a-oyapOW1QtCGQbZaccgjVuM5bCJMadEmtEPnYdabphmaf4yP9sBKgacmox4W1QtCGSHYNgkFuM5bpdMacamu_OPnYb8CWayrHRuM5budMac4mtEPnYdabphmaiayP9sBKgacmoyat4W1QtCGSHZac3gkFuM5bpdMae8mu_P4GSglbcWiihsnmt78UNyGYDugpZJ2B92xuwiPnYcyhmaeGyLDsBKeWoyamaWXQtCGSbZabGgfTsBKgacqoyamaWTQtCGSbZabigjxuM5bGaKdMacqmsUPnYcWhlayB9fjUqta5GbudeRQtCGMbZacqggnsBKfGoyasaWTQtCGWasbZacqgfTsBKfGoyavaXk6K3imaeGCWaQbIv1jUqwa5GbGddFOPnYcyhmahGyy1jUqwa5Ga8ddgPnYdabihmahGyw_efGXyiwbba5EMyuhdtSY6IXfjUqta5GaWdc-PnYcWhmaeGyx1jUqwa5GaWde3QtCGWaybZabiga1jUqyama5GaWdaEIK3ijGCWaKbHFuM5bydMafqml6K3ilaCWaKbIB1jUqyama5GbudaAK3imagaCWaKbGprsBKfGoyapaWVQtCGWasbZab4gjVuM5bGaWdMadWmb-ilbIWqSccb0HqugBLH088QdtUqBSUxjQleuM5bsJMacqmk6K3il0CWasbIN1jUqyakO5GaKddUPnYdabvhmagayD1jUqxO5GaWdfpQtCGPrZab4gfDsBKfkoyamaWRQtCGVrZab4gkFuM5bGaQJMadWmo6K3imafuCWaKbH3uM5bEJMaeGmu-PnYcLhmajayv_efGXyiwbba5_rMv1AwXSzxtPigfJAwrL1fIktCGPXZabCghTsBKf-oyalGXn6K3imagCCWaxbIu1jUqyam45GaIdePQtCGVXZabegjtuGWarrZab01jUqu45Ga6ddFOPnYcNhmaiWyE1jUqx45Gbgde3QtCGWazXZacmgjtuM5bGaZJMafimsMPnYc_hmakqyLnsdabchmahFuM5a-oyaoGW96EilbIWqSccbZDmWOohNLH26CMxuwiPnYcWhmakGyKnsBKgacqoyavaXiAK3imaeGCWaKbIq1jUqwa5Ga8deHQtCGWasbZab4gjduM5bGaKdMadamsgPnYcWhmagayKnsBKgacqoyajaXiAK3imaeGCSbIq1jUqwa5ydeH-ilbIWqSccb0HrFhtLH09egtkG29EwxNQleuM5bwdMacMmsUPnYdabehlSyLDsBKgac4oxyXk6K3imahqCWauXIv1jUqyaoG5GbbJeRQtCGWaxbZacBgjxuM5bGaIdMae2msUPnYcShmaimyLDsBKgacioyakyXi6K3imafWCWauXIr1jUqyalG5Ga1JeJQtCGWaxbZacdgjhuM5bGaIdMaegmsoPnYdabehmagSyKFXbymwcfGqqoKALV67mUhQGYzuhpdP5792OSrsBKfSoyatOXt6Kgacwoyau2PnYdabohmaiuyKnsdabJhmahtuM5bGaNdMacQmsgPbGaPJL7QtCGTHY9gkFuGNrZabu1jUqwW5Ga2JfpQqu45GbgAK3ij4CWaBrIq_efGXyiwbba6sPIFdY6imMvbSt5EFhRP7zDryIK3ijqCWatXIq1jUqvG5GaNJdUPnYdabehlCyD1jUqyaiG5GaNJdUPnYdabehmagCyl0uM5bkdMad-msgPnYcShmah8yD1jUqyaiG5GblJdUPnYdabehmah8yD1jUqvG5GaZJbFIcWySelaGGDovhRPqDSVxOG2yuhdlH6OmMvbcW7So7cGF6GC3qEVHbHXCTpnaHbbcfGXyqwfIkmpdMadaqtzn9rH4CWayccZjVQmsO5GaKefMtFuyLrZabGimaeSM-OXmdMadaqyamzn9rIyhmaeGGWayYB-IJdW5Ga8ee2tFuyEhmahGGSYB6JeQoyasbbzK31gjuCWaEcdabljVQmta5Ga8egadgtFuyMbZacqimagmM_-OhtEITZO5DlkqmJkqnHoGTZc3mlMqnlA4oRy5TlmccelbIWGSleuyMrYWilaM-O5GaHeeRQmndMadaqwbn9rHOCWascdabijVQmndMadaqyambn9rHOCWaycdabijV6kmti5GbuefGtFuCWaKYcs1ggHZab4ilaM-OW0oyasbbGaKe31ggHZab4imagaM-OW0oyapbbGaKe3_1a6q0nLBNrYzsbW6xjPBgXLDxGeeiwdfHbywiO5GaPegadbQmmdMadaqwbn9rHGCWaycdabijVQmmdMacqqyajbn9rHGCScdabijVQmaoyajbbGaWe31gahmagaGWaycB6JeYoyapbbGaKe39fggbZacqilaM-OWWoyasbbGaKe31ggbZacOimaeGM-OWWoyaybbGaKe31gahmakGGWaycB6JadMaeGqyambn9rZab-imafluyMrZab4ilaM_-OhsoGUtO0TJyYUtsYKdz0S_q5mOiiqSglccWSrrIuhlaGWascB6JeOoyajbbye31gjaCWayccWjVQmsa5GaWegacqtFuyKbZab4imaeGM-OXidMadWqwbn9rIuhmajaGScB6JeOoyavbbGaKe3_1a6yMBbkGYzuhBt0W7Do7lZqzDYdHS68WqqHymwefHyIJbdLGqurn9rGHYyilOM-OWq5yegacKtFuyKrZabGimafiM-OXiJMadWqyakrn9rGHZacOimafiM-OWq5GbGef0tFuyiCWaQccIjVQmsi5Gbief0tFuyBhmahGGUIB6Jdy5GaWef0tFuyKrZabiilOM-OXiJMadaqurn9rIrhmahGGOIB_6GC3tmQdnYW6EENlYbbcfGXyqwfIkmty5GaRKfqtFuyMXZabVikGM-OXnJMadEqyaibn9rIBhl8GWaqcB6JadL-qyalbn9rGbZabximafGM-OWa5GaRKgadGtFuyaCVYdabWjV6kmty5Ga3KeGtFuyMXZachikGM-OXnJMae-qyaibn9rGbZabVimafGM-OWa5Ga3KgadGtFuyaCWaHYdabWjVQmaoyaq5bGaSe31gahmaj8GWawcB6JadMae-qyaobn_9qoKTqCNvUzwf1ig1Hz27PDgLXDwueeiwdfHbywiOW-oxHbme31gjaCWavccWjVQmpJMacOqyajbn9rIqhmagWGWaycB-IJd45GboeeWtFuyKbZaceilaM-OW-oyaqHbGaKe31ghXZabSijGM_-Ohtfb4Cow_hOYReg7kGX8SoNDZqCToxCccelbIWGSleuCAikBuyFhkGGPYB6JLKqnAJd45GaGefotFuCWasIbJuyFhmafGGPYB6JMadaqmAJeYoyaobbtK31hmahSGv1ghXZaciikCM-O5GbjedoOW-oyaubbtK31hmakSGF1ghXZac4ikCM_OOWSoyaubbFK31gfHZaciil8M-OWSoyarbbGaRK31gfHZabWimafCM-OWSoyalbbGaRK31gfHZabyil8M-OWSoyaibbFK3_1a6w0XHihbVAw50zsbKzsbSysbn6wr1C2ueeiwdfHbywiOW-oyapbbme31gjyCWayccWjVQmsW5Ga8efGtFuyLHZacqilaM_OOW4oyajbbGaKe31ghbZabGimaeGM-OW4oyapbbGaKe31ghbZacqimaeGM-OW4oyavbbGaKe39fgjGCWaWcdabGjVQmta5GbiegadatFuyMbZabGimagaM-OXmdLGqyambn_9qoKQZV6OoEJdS2in2_OG4yEFmeeiwdfHbywiOW2oyajbbme31gjqCWasccWjVQmsG5GaWefGtFuyFhmahGGMcB-IJdy5GbueeWtFuyLbZacOilaM-OXkdMaeGqwbn9rIuhmahGGScB-IJdW5GaWegacqtFuOeyEhmahGGWascB6LaJdW5GaWegadatF0uyEhmajaGWaycB6LaJdW5Ga8egadatFuOeyEhmajaGWascB_6GC3q8kdNLqy9_lNLbbcfGXyqwfIkmkdLGqtbn9rHqCWasccyjVQmkdLGqwbn9rHqCScdabijVQmkdMacqqyajbn9rHqCWascdabGjVQmkdMadaqyambn9rHqCWaEcdabGjVQmkdMaeGqyambn9rHqCWaQcdabGjVQmkdMafqqyajbn9rHqCWaWcdabijVQmkdMagaqwbn9rHqCWaQccyjVQmkdMagaqtbn_trrIxhmagaGMcB6JdW5GaWefGtFuyEhmaeGGScB-IJeUoyasbbme31ghHZacqilaM-OW8oyavbbye39fgjCCWaEccyjVQmpdMadWqwbn9sGrIvhmagaGWascB6LaJeQoyapbbGaKe31kbgjuCWaKcdabijV6FQb0LtmkdH12CmQdJ10OohxzZYGGHcWySilcXfgfrZabwijGM-OWQoyanXbme31gfrZacgijGM-OXjdMaemqwbn9rIshmag4GScB6JeKoyakXbye39fghbY-imaeGM-OXjdMacSqyajbn9rIshmag4GWascB6JeKoyaqXbGaKe31ghbZacEimaeGM_OOW4oyatXbGaWe31ghbZacgimagaM-OXjdMadCqyambn9rHWCWavIdabGjVQmodL8qyambn_9qoL6dN5zEFpt2YOoFxKG2zEAdfV5zoyiiqSglccWSrrIshmaeGGPsB6LaJeKoyajbbEK31kbgjiCSccLjVQucmsq5GaWefktF0uyKHZacOikuM-PqiXjdMafqqxPn9sGrIshmamaGPsB6LaJeKoyasbbsK39fgjqCWaEcc9jVQucmsG5Ga8egacQtFuOeyLbZabGimafuM-PqiXkdMaeGqyakPn_9qoN6PH3DehhQN07ehLbH68SkdjL5Okpxl0549gxMccelbIWGSleuyDhlaGOcB6JdO5yefWtFuyDhmaeGGOcB6JeWoyajbbCe31gjGCWaycdabqjV6kmoJMafqqubn9rH0CWaQcc4jVQmoJMaeGqubn9rIyhmajaGUcB6JeWoyapbbGaOe39fgjKCWayccGjVQmti5GaWefWtFuyMrZab4ilGM-OXmJMadWqubn_9qoz0nHA2uGyxjT6qqqHymwefHyIJdW5GaKefGtFuyxhmaeGGWascB6Je2oyajbbGaWe31ggXYWimaeGM_OOW8oyasbbye31gfXZacqimaeGM-OXnJMaeGqyambn9rHSCWaQcdabijV6kmpdMadWqwbn9rHCCWaEcdabijVQmty5Ga8egadatFuyMXZabGimagaM-OWUoyambbGaKe31ghHZabGilaM_-Oho6G6TJGYKhaqmBc3n7CccelbIWGSleuyKHZabuikeM-OXjdMacOqxjn9rH8CVcc5jVQmpdL4qujn_rrIshmaimGOsB6JeKoyaqzbCK31ghXZacBilKM-OW8oyatzbqK39fghHZabRikeM-OXmJMadwqxjn9rZabRimafduOeyKHZabtimafeM-PqiXjdMaegqyakjn_rrIyhmakmGWazcB6JeWoyaq5bGa3K31gjGCWaBsdab0jVQmta5GaNKgadEtFuyMbYZimagqM_-OSrsBKfWov4Xj6K3imae8CWaCrIt1jUqxa5GbxJeN6ktCGSbZactgjhuM5bsdMad2msoPnYcKhmagmyKDsBKfGoyajyXi-IK3ijiCSXIx1jUqyaoq5GaXJeVQtCGWaCHZab7gjFuM5bjdMafwms_4GSglbcWiihs-HmlsYUzbWedP1oJkqmBqYUtg0mRQ5SUOhnRtLetsaJKZJqqqHymwefHyIJcO5GaSee8tFuyKXY8ilyM-OWQoxbbGaPe31gjmCWaucdabSjVQmkJMadEqyapbn9rGXZabWimaf0M-OWy5GaSKgacwtF0uyvhmaiyGNIB6JeMoyaurbBe31gfrZacMimafiM-OXjJMaeCqyanHn9rGXZacfimaeSM-OWy5Ga3KfUtF_udNAdZqzmQdhH5CSUhQccelbIWGSleuyKHZabGijeM-OXjdMadWqsjn9rIshmajaGKsB-IJeMoyasbbGaGK31gjmCWaEcdabzjVQmsy5GaWegacctFuyKXZab4ikKM_OOWOoyambbGa4K31gfbZabiimaheM-OWOoyapbbGa4K31gfbZacqimaheM-OWOoyavbbGa4K3_1a5QMyugpR2Y9oMueeiwdfHbywiOXidMacqqurn9rGHZabGilOM-OWq5GaWegacKtFuyiCWascdabsjVQmsq5yegacKtFuyKHYWilOM_OOXidMaeGqurn9rGHZab4ilOM-OWq5Ga8egacKtFuyiCWaKcdabsjVQmsq5GbuegacKtFuyKHZacOilOM_-OhovtR06AueBL16DniiiqSglccWSrrZadhilluyzhmakGGScB6Je2oyasbbme31gjSCWaEccyjVQmty5GaWeeWtFuyzhmaeGGScB-IJda5GaKegacqtFuyKHZabGimaeGM-OWWoyambbye31ggbZacqilaM-OXjdMaeGqyajbn9rHGCWaQcdabijV6kmsq5GbiegadatFuyKHZab4imagaM-OWWoyapbbGaKe39fgjiCWaycdabGjVQoyanXbGaWAJdi5Ga8efGtF_udPRroLIyxjXDwvTzw50igrLieDYB3nLAwXSzxmeiiwdfHbywiOXoJMacqqyajbn9rIDhmagaGWascB6Je6oyapbbGaKe31gj0CWaKcdabijVQmtO5Ga8efGtFuyNrZabGilaM-OXoJMadaqyambn9rIDhmahGGWaycB-IJeWoyajbbGaWe31gjGCWaycdab4jVQmta5Ga8egadWtFuyMbZacqimagaM-OWQoyasbbye31gfrZab4ijGM-OWQoyambbme31gfrZabiilaM_-OSrsBKfGoyavaXo6K3imaeGCWaKbID1jUqyama5Ga8de7QtCGWaybZabGgj3uM5bGaKdMacqmtUPnYcWhlayNFrsBKeWowaW1QtCGSbZabiggTsBKgacqoyamaW1QtCGWasbZab4ggTsBKfGoyasaW1QtCGMbZacOggVrsBKeWoyasaXj6K3ilaCWaEbIt1jUqwa5GaWdeNQtCGMbZabigjpuM5bmdMadamp6K3ijGCWaEbH_8qwdfGHyeedNkjL2DmkdhV3zTptuwiPnYcyhmaeGyF1jUqwa5GaWde3QtCGWasbZab4gkF0uM5bmdMaeGmp6K3ilaCWaEbIB1jUqyaja5GaWdfp6ktCGMbZabGgj3uM5bydMacqmtEPnYdabihmaeGyP9sBKgadaoyamaXo-IK3ijGCWaEbID1jUqwa5Gbide3QtCGWasbZacqgkFuM5bGaWdMadWmtV4GSglbcWiihsLg38SExMGW6C_llZw5n_xhL56IXfjUqxa5xJeVQtCGWavrY0gjFuM5bGa2dMacmms-PnYdab2hmageyL9sBKgadSoyapOXl6K3imagWCWaMbIx1jUqyakO5GbvdeVQtCGUbZacVgjF0uGMXZac31jUqua5GblJdoPnYcrhmah4yz1jUqsi5GaWddoPnYcGhmaeCyz9fjUquG5Ga3deZQtCGWaxbZabWgjpuM5bGaPJMacUmsEPnYdabthmaiCyK9sBKf6oyamqXj6K3il0CWaFbIt_efGXyiwbba6sPIFdU3zCpvbJW9EFttX65DryIK3ijqCWaEbIs1jUqvG5Ga8dfpQtCGRbZabGgjiOhuM5bwdMaeGmsrqpOPnYdabehmaeGyLTsBKgac4oyamaXlAK3imafWCWasbIv1jUqyaoG5GaWdeR6ktCGWarbZacOgjBuM5bGaUdMaeGms2PnYdabChmakGyLDsBKgadOoyasaXk-IK3imaeqCWaKbIN1jUqyalG5Ga8deRQtCGWarbZabGgkFuM5bGaIdMadWmu_P4GSglbcWiihsLmYOmwxLUW8SI3zOY8TUNP0Y6IXfjUqyam45GaVdc-PnYdabRhmahOyx1jUqyam45Gbkdc_OPnYcyhmahGyNnsBKfGoyamaXofa6K3ilaCWaKbICkb1jUqwa5Ga8de4ud6ktCGTXZac2gj3uM5bGaLJMae4mtUPnYdabqhmahSyNDsBKgacwoyalqXo6K3ilCCWaqbID_efGXyiwbba6rOpxfL5z9o7kGZB-wxTL5AIXfjUqwa5yddMPnYcWhmaeGyC1jUqyaja5GaWde5QtCGSbZabGghnsBKgacqoyajaXoAK3imagaCWasbICkb1jUqyaja5yde4ud6ktCGSbZadaghnsBKfGoyavaW5QtCGWasbZacqgjZuM5bydMaeGmoAK3imaeGCWaQbIC1jUqyama5Gbude4udQtCGWasbZadagjWOh0uM5bmdMadWmtEPnYdabihmahGyM9sBKfGoyapaXn6K3ijGCWaybIBkb1jUqta5Gbide2ud-ilbIWqSccb0VPRE2Dlg6TJkqmJkqmJk5UJK6SBO0T7DQleuM5bodLEmtUPnYc0hmaeCyNDsBKfOov4Xo6K3imaeWCRXID1jUqyajG5GaJJdhOPnYcChmal8yNDsBKfOoyau4Xo6K3ilqCWaVXID1jUqyajG5GbFJe7QtCGWatbZacNggprsBKe4oyau4WXQtCGTbZacpggprsBKe4oyai4WXQtCGTbZabFggprsBKe4oyao4WXQtCGWatbZab3ggprsdQJMadXQtCGTbZab3gjNuM5bodMac-mtjqoPnYcChmai8yMsGFXbymwcfGqqoxPIFdYX6mUOSrsBKeWowaW_QtCGSbZabigjZuM5bGaKdMadamtMPnYdabihmahGyNnsBKfGoyasaXoAK3ijGCWaQbH_uM5byJMadymp-IK3ilaCSbHNuM5bGaKdLGmm6K3imagaCWasbIy1jUqyama5GaWdeX6ktCGSbZacOggDsBKgacqoyavaWZQtCGWaybZacqgjJuM5bGaWdMadWmth4GSglbcWiihsfq68UgZkGW9EMJFY09poOSrsBKeWoyamaXo6K3ilaCWaybIt1jUqta5Ga8de76ktCGMbZacOgj3uM5bydMafqmsEPnYcyhmajayNFrsBKgacqoyamaXjAK3imaeGCWaEbIs1jUqyaja5GbideLQtCGWasbZacOgjl0uM5bGaWdMafqmtMPnYdabGhmajayNnsBKgadaoyapaXoAK3imagaCWaybIC9nnpefGXyiwbba6rPMfbZ6CSptkG1DEMxRZY6GDk1BF1W4CoZcG2yue7lJ6yEwNDLbbcfGXyqwfIkmua5GaKee4tFuywhmagaGTcB6Jc45GaKegacytF0uyObZacOijWM-OWSoyasbbAe31gfXZacOimaeWM_OOXqdMadWqtHn9rHyCWaEcc0jVQmlJMadWqyajHn_9ryIK3ijGCVbIN1jUqwa5GaQdfbQtCGWasbZabugjFuM5bGaWdL4mkEIK3ijGCWaNbIN1jUqwa5GbcdfbQtCGWasbZacegjFuM5bGaWdMae4mkEIK3ijGCWaBbIN1jUqwa5Ga2dfbQtCGWasbZabSgjFuM5bGaWdMadymkFIcWySelaGGC9qEFtLLqC9_xLU36EEOhu1t68ogZtJYOmMvbM5DDptMG59EsdhV67npnbKt7-whDNYGGHcWySilcXfgjmCWayccyjVQmsy5Ga8eeWtFuyKXZab4ilaM-OW6oyambbye31ghrZabiilaM-OW6oyajbbGaKe31gjSCWaycdabijVQmty5GaWegadatFuyMXZab4imagaM-OXlJMadWqyajbn9rIxhmajaGWascB6JeUoyasbbye39fgbhmaemGWaAcB6JaJMacSqyaprn9rGrZabUimaiaM-OWi5Gbdegad0tFuyeCWaMsdabOjV_QleuM5bmdMadamugPnYcWhmaeGyOnsBKgacqoyamaXqAK3imagaCWasbIG1jUqyapa5GaWdfb6ktCGMbZab4gj3uM5bydMadamtUPnYdabihmahGyNDsBKgadaoyamaXo6K3imahGCWaEbID9fjUqta5Gbidd2PnYcWhmahGyE1jUqyaja5Gbidd2PnYdabGhmahGyE1jUqyapa5Gbidd34GSglbcWiihpvRtNTyC6dn13zEFtlQleuG6W5B6K3ijqCWarrIC1ioy5GaO6K3ijqCWaxrIC1ioy5Ga1AK3ijqCWaDrIC1ioOoyaqwPnYcuhmai0yNnsdQJMaeXQtCGLbZacLgjZ0uM5bGaIdLAmsoPnYcShmaeuyB1jUqyaiG5GaIJeIudQtCGWarbZabDgjeOh0uM5bGaIdMaf6msoPnYcShmakuyB1jUqyaiG5GbsJeIudQtCGWarbZacngjeOh0uM5bGaUdMackmtUPnYdabChmaf0yNDsBKgac4oyaoOXo6K3imafWCWaJrID1jUqyalG5GbsJe7-ilbIWqSccb07OlAWUzaYmPa4DlG0TZMqmRCqodk5oBGYSBO0UZlQleuM5bGaKdMaeGmt-PnYcuhmaeGyN9sBKfyoyajaXp6K3imaeGCWasbIF1jUqyalG5GaKde7QtCGWaEbZabGgj30uM5bkdMaeGmt-PnYcShmajayN9sBKgac4oyasaXo6K3imahGCWaEbID9fjUqsG5GaWdfbQtCGRbZabGgkduM5bGaKdMadamugPnYdabGhmagayNFrsBKeOoyapaXqAK3ikWCWaEbIG1jUqyaja5Ga8dfbQtCGWaybZab4gj38qwdfGHyeedNdGaWHYFX6jXH2OSrsBKfiowaXiAK3ilWCSbIq9fjUquG5GbudeHQtCGVbZacOgjd0uM5bsdMacqmt-PnYc8hmaeGyN9sBKgacOoyamaXp-IK3ikqCWaKbIF1jUqxG5Gbide_QtCGWavbZab4gj_0uGiCWaBTsBKfgoyanWXqfa6K3ilWCWaybIGkb1jUqxG5Ga8dfaud6ktCGWaAbZabmghTsBKgadGoyanOW9QtCGWaAbZacoghVXbymwcfGqqoLnwywD1zsbTDwX0AxzPDgfTAw7PzDryIK3ij0CUbIx1jUqtO5GaOdeVQtCGTrZabqgkd0uM5boJMaeWms-PnYcDhmaiayL9sBKfQoyaqaXqEIK3imae0CWaMbHJuM5bGaMJMaeammEIK3imae0CUbHJuM5bGaMJMacGmmEIK3ij0CWaAbIx1jUqwO5Ga0dfbQtCGWatrZabOggpXbymwcfGqqoKTozwn0yxjPBMuGzxnJB3j06wxuwiPnYdabihmakGyLDsBKgadaoyasaXmAK3imahGCWaEbIy1jUqyaja5Ga8de7QtCGWasbZacqgj3uM5bydMaeGmtNOPnYdabihlayLDsBKgadaoyajaXmAK3imahGCWaybIy1jUqyaja5GaWde7QtCGWasbZabigj3uM5bydMacqmtNOPnYcyhmaeGyN9sBKeWoyamaXp6K3ilaCWaybIC9fjUqta5Gbide_QtCGMbZab4gj_uM5bydMadWmtN4GSglbcWiihmuXpH5y8otlQleuM5bmdLGmtMPnYcyhmaeGyKTsBKfGoyajaXjAK3imaeGCSbHNuM5bGaKdMacqmsxOPnYcyhmakGyNnsBKeWoyasaXjAK3ilaCWaKbIs1jUqyaja5GbuddoPnYdabihmajayKVrsBKeWoyamaXoAK3ilaCWaybHFuM5bGaKdMadamsEPnYdabGhmagayx9fjUqta5Ga8de5QtCGSbZab4gf9sBKgacqoyapaXj6K3imagaCWaEbHF8qwdfGHyeedPAK7UMxL2Y7UMNFUqyEUllYZ6D2xuwiPnYcyhmagayO9sBKfGoyamaXr6K3ilaCWasbIJ1jUqyaja5GaKddpOPnYcWhmahGyLnsBKgacqoyapaXkAK3imagaCWaEbIukb1jUqyaja5GaWdeOudQtCGWasbZacqgjqOh0uM5bmdMaeGmuEPnYcWhmajayO9sBKfGoyavaXr6K3imaeGCWaQbHN8qwdfGHyeedPEMyuhpF14zughR4qySVtPL5yE2xNQleuM5bmdMadamsUPnYcWhmahGyO9sdablhmagVuM5bGaKdMadamuEPnYdabihmaeGyO9sBKgadaoyajaXk6K3imagaCWaybIv9fjUqta5GbideRQquq5Ga86K3imaeGCWaEbIv1jUqyaja5GbidfhQtCGWasbZacOgkpuM5bGaWdMafqmsUPnYdabGhmajayLFXbymwcfGqqoDO_lFZqy8oZtI5zEEOSrsBKfGoyajaXqAK3imaeGCWasbIG1jUqyaja5GaWdfh6ktCGSbZacOgkduM5bGaKdMafqmugPnYdabihmajayO_rsBKeWoyapaXt6K3ilaCWaEbIC1jUqyaja5Ga8dfgudQtCGSbZabGgjWOhuM5bydMaeGmtHqoPnYcyhmagayPYGDsBKeWoyasaXtLa_IcWySelaGGCYFarenheit1fIktCGMbZabGgj3uM5bydMadamtUPnYcWhmahGyNDsBKfGoyasaXo6K3ijGCWaKbID1jUqyaja5GbudeZQtCGWasbZab4gh_rsBKgacqoyajaXm6K3imahGCWaybIB1jUqyama5GaWde3QtCGWaybZab4gjVuM5bGaWdMaeGmtEPnYdab4hmajayM_XbymwcfGqqoKnhywzMzsdGigWNyw5HBMfZ1fIktCGSbZabGgjZuM5bGaKdMadWmtMPnYdabGhmajayNnsdabphmak_uGVHZacV1jUqwa5Gbide5QtCGWaybZab4gjZuM5bGaKdMaeGmuFOPnYcWhmahGyNnsBKgacqoyamaXoAK3imagaCWasbIC1imae4CSnsc5hk7uM5bydMacqmtMPnYdabGhmagayNnsBKgacqoyajaXr_IcWySelaGGC2Aubetterave1fIktCGMbZabYgj7uM5bydMadKmtUPnYcWhmafOyNTsBKgacqoyalqXo6K3imaeGCWaqHIE9fjUqyaja5Gbrde9QtCGWasbZackgj3uM5bGaWdMaeumt2PnYdabGhmahiyNDsBKgadWoyaoqXpEIK3ilaCWaIHIE1jUqyaja5Ga5de7QtCGWaybZabAgj78qwdfGHyeedPltguGy2fYCMvHDsbIAs1NB_T01fIktCGMbZabGgj7uM5bydMadamt2PnYdabihmaeGyKTsBKgadaoyajaXjEIK3ijGCWaKbIE1jUqwa5Gbide9QtCGWasbZacOgjluM5bGaWdMafqmsxOPnYcyhmahGyNDsBKfGoyapaXo6K3imaeGCWaEbIJ1jUqyama5Ga8de6udQtCGWasbZabGgkmOhuM5bGaWdMadamtPqoPnYdabihmajayOYGDsBKgadaoyasaXoLa_IcWySelaGGC5QhuXTdk5KdAYTJeW6IXfjUqta5GaKdd2PnYcWhmagayP9sBKgacqoyamaXl6K3imagaCWaybIF1jUqyama5GaKde_6ktCGMbZacOghTsBKfGoyasaXt6K3imaeGCWaKbIx1jUqyama5Gbide_QtCGWaybZacOgj_0uM5bmdMadWmpAK3ilaCWaEbIN1jUqyaja5Ga8deVQtCGWaybZab4gjF8qwdfGHyeedM9mzxmGy3jVAxpPC9ryIK3ijGCMbIJ1jUqta5ydfhQtCGMbZabigkduM5bydLGmugPnYdabihlayNnsBKgadaowaXoAK3imagaCWasbIC1jUqyama5GaWde56ktCGMbZacOgkpuM5bmdMaeGmuEPnYcyhmahGyOnsBKfGoyasaXqAK3imaeGCWaKbIC1jUqyama5Gbide5QtCGWaybZab4gjZ0uM5bmdMadamo6K3ilaCWaybH3uM5bGaKdMadamoLa6K3imaeGCWasbH0OhuM5bGaKdMadWmoLa6K3ilaCWaEbH0OhuM5bydMacqmoLa_IcWySelaGGCZtmQdfS349_puwiPnYdabGhmaeGyKDsBKgadaoyamaXi6K3imaeGCWaybIE1jUqyaja5GaKde9QtCGSbZabGgj7uM5bmdMacqmn-IK3imagaCWaKbIr1jUqyama5Ga8deJQtCGWasbZab4gj7uM5bGaKdMaeGmt2PnYcWhmahGyNTsBKeWoyasaW3-ilbIWqSccb0NwT-7kGYzuhtRYXDDMxDJY89ryIK3ijGCWaybIA1jUqyaja5GaWdfhQtCGWasbZabigkpuM5bGaWdMadamk-IK3ijGCWaKbIA1jUqyaja5GbidfhQtCGWasbZacOgkpuM5bGaWdMaeGmk-IK3ilaCWaEbIA1jUqyaja5Ga8dfhQtCGWaybZab4gfFXbymwcfGqqoLAB55DnoZzL5OoE_RZqy9M_hOY6IXfjUqta5Ga4de1QtCGSbZabWgjRuM5bGaKdMadGmtrqoPnYcWhmafGyykb1jUqwa5GbeddbqoPnYdabihmafGyykb1jUqyaja5GbeddbqoPnYcyhmafGyMIGDsBKeWoyaraXnfa-IK3imaeGCWaqbHBuM5bGaWdMacamlAK3imagaCWawbHJuM5bGa8dMacWmlAK3imahGCWaCbHB0uM5bGaKdMafamlAK3imagaCWaObHBuM5bGa8dMaeqmlAK3imagaCWaIbHJuM5bGaWdMadGmmFIcWySelaGGC3rUxxt08OjwhVZ1fIktCGMbZabigjduM5bmdMadamsgPnYcWhmahGyMTsBKgacqoyamaXt6K3imaeGCWasbIN1jUqwa5GaKde16ktCGMbZacOgjduM5bmdMaeGmsgPnYdabihmahGyP9sBKgacqoyasaXt6K3imaeGCWaQbIN1jUqwa5Gbude1-ilbIWqSccb0Ju-Nld0Y80ghLN3zEVplZ1fIktCGLbZabqgjZuM5budMacGmugPnYc8hmafayN9sBKgacGoyakaXr6K3imagqCWaubIE1jUqyapa5GaOde16ktCGLbZab4gjZuM5bEdMadWmt-PnYdabKhmahGyNVrsBKeOoyauaXoAK3ikGCWaObIG1jUqxG5Gbqde_QtCGWaubZacGgkpuM5bGaYdMafamt2PnYdab4hmakayMVXbymwcfGqqoF0nVBg9UBMvZigfYBELLC9ryIK3ijiCWaurIA1jUquW5GaXJe1QtCGWaqHZabVgjRuM5bGaVJMademtUPnYdab7hmafCyy1jUqyany5DddgPnYdabnhkSyy1jUqwa5yddgPnYcZhmaeWyNDsBKgacEoyajyXo-IK3ijiCWaJrIA1jUquW5Ga9Je1Qqyaj45Ga36K3imaf8CWaFbID1jUqyapy5GbdJdgPnYdabRhmakqyy1jUqyajO5GbAddgPnYcWhmak4yy1jUqwy5Gbjde7QtCGWatXZactgj38qwdfGHyeedNQFUYzEAddZ6CSoZlZ1fIktCGMbZabigkNuM5bGa8dMacqml6K3imagaCWaybH7uM5bGaKdMadampAK3ilaCWaybH70uM5bmdMafqmvoPnYdab4hmakGyx1jUqyama5Gbidd2PnYdabihmajayE1jUqwa5Gbidd3OPnYcyhmahGyQDsBKfGoyapaW9QtCGWasbZab4ghTsBKgadWoyapaWV-ilbIWqSccb0RsSUZz5qBSVxPYW7nppd05ACExuwiPnYcyhl0yQDsBKfGoyakOXjAK3imaeGCWavrIs1jUqyaja5EJeLQtCGSbY9gjl0uM5bmdMae6mvoPnYcWhmaiuyKTsBKgacqoyaqOXjAK3imaeGCWaNrIs1jUqwa5GboJeL6ktCGSbZabTgjNuM5bGaKdMadAmtoPnYdabGhmag0yNsGDsBKgadaoyakOXoLa6K3imagaCWaHrIDkb_efGXyiwbba5UOAD2TbH3yD2hNQleuM5bmdMacWmvoPnYcWhmaeayMTsBKfGoyalaXqAK3imaeGCWawbIA1jUqyapa5GaSdeXQtCGWaybZabWgjJ0uM5bmdMaeqmvoPnYcWhmakayMTsBKfGoyaraXqAK3imaeGCWaIbIA1jUqyapa5GbedeXQtCGSbZabWgkd08qwdfGHyeedNAzL5OoMxDH07nMxNQleuM5bGaWdMadamtwPnYdabGhmahGyMTsBKgacqoyasaXnAK3imaeGCWaEbIC1jUqyaja5GaWde5QtCGWasbZabigjR0uM5bmdLGmkAK3ijGCWasbHtuM5bydMadamtEPnYcWhmaeGyM_rsBKfGoyasaXn6K3ilaCWaEbIB1jUqta5GbidcMPnYcyhmakGyu_efGXyiwbba5QP9EgxKGNB-2huwiPnYcyhmagayQDsBKfGoyamaXr6K3ilaCWasbIJ1jUqyaja5GaWdeTQtCGWaybZabGgjBuM5bGaKdMadWms3OPnYcyhmajayQDsBKfGoyapaXr6K3ilaCWaKbIJ1jUqyaja5GbideTQtCGWaybZacqgjBuM5bydMafqmuF4GSglbcWiihn0BL16EuhdRUX6nryIK3ijWCWaHHII1jUqyajG5Gbdde1QtCGTbZab6gjd0uM5bodMacSmuwPnYdabmhmafyyMTsBKfOoyamqXiEIK3ijWCWaBHII1jUqyajG5Ga3de1-ilbIWhtoMmRMqotc0UBs3ozaYmPa2mjaXT7z0otkqaGHc2OSrsBKe8oyajqXrAK3ilyCWayHIu1jUqyajW5Ga9deNQtCGWazHZacsgkl0uM5bpdMaeKmuwPnYc2hmahOyLnsBKgacCoyamqXj6K3imagyCWasHII9fjUqtW5GaXde5QtCGTHZabkgjtuM5bGaZdMademtpOPnYcEhmahOyNnsBKfSoyasqXkAK3imagyCWaEHIz_efGXyiwbba6w0qNB_KGDMLLBMrYysbSzsbJB3vWid_uwiPnYcWhmahGyQDsBKgacqoyapaXr6K3imagaCWaEbIGkb1jUqyama5GaWdfaudQtCGWaybZacqgkaOh0uM5bydMacqmvoPnYcWhmagayO9sBKeWoyapaXr6K3ilaCWaKbIJ1jUqwa5Gbudft-ilbIWqSccbZnu0zugpLV589ryIK3il4CWaNbID1jUqyanW5Gbode1QtCGWavHZacegj3uM5bFdMaeimt2PnYcMhmaiqyNVrsBKf8oxGXo6K3imag4CVbIA1jUqyakW5GaQde7QtCGVHZabugj7uM5btdMacOmt3OPnYb4CWaBbIJ1jUquW5Ga2dfhQtCGVHZabSgkpuM5bGaRdMadymt2PnYdabUhmagWyNDsBKgaemoyanGXnFIcWySelaGGDjAyYKdgWUtKYTJk6edm5oRs6DoOSrsBKfmoyauqXp6K3il8CWaPbIF1jUqyakG5Gblde_QtCGWatXZab7gjFuM5bGaZJMad2ms_OPnYb0CWatbIP1jUqta5GaXJffQtCGSbZab7gkluM5bydMadgmuwPnYcyhmahSyOTsBKdO5Gbkdft6ktCGPHY8gj_uM5bFJL0mt-PnYdabuhmaeGyN9sBKgacEoyamyXl6K3imagCCWayXIx9npefGXyiwbba6D05LDxrYywXPC2f0Aw9Uigv0ihrPCNmGzoL2AELZ1a6xO-hLLqyEVHbZX4EwhfZqAUVtl18aGHcWySilcXfgjiCWasccyjVQmuq5GaWefGtFuyPbZabGimaeGM-OXsdMacqqyambn_rrIshmakGGMcB6Jfeoyasbbye31gkqCWaKcdabijVQmuG5GbuegadatF0uyOHZab4ijGM-OXrdMadWqwbn9rIKhmahGGWascB_6GC7tmQdHL6AEIdPP4AqqqHymwefHyIJfaoyajbbGaKe31gkqCWascdabGjVQmuG5GaWegacqtFuyObZabGilaM_OOXqdMafqqyajbn9rIKhmakGGWaycB6JfioyasbbGaKe31gkaCWaKccWjV6kmuG5Ga8eeWtFuyPbZab4ilaM-OXoJMadWqyajbn9sGrIDhmagaGWaycB6LaJe6oyasbbGaWe3_1a5LeAMIOKqCAccelbIWGSleuyOHY_ijGM-OXsdL-qwbn9rIIhmafCGScB6Jfioyak5bGaKe31gj4CWavYdabGjVQmtW5FKgacqtF0uyOHZacFijGM-OXsdMae-qwbn9rIIhmaiCGScB6Jfioyaq5bGaKe31gj4CWaHYdabGjVQmtW5GbpKgacqtF0uyOHZabVilaM-OXsdMadEqyajbn9rIEhmag8GWaEcB_6GC5rUxxt08OmplLV7GGHcWySilcXfgkmCWayccEjVQmtG5GaWefStFuyPXZabGimae4M-OXpJMacqqwXn_rrIJhmajaGNIB6Je4oyasbbBe31gkCCWaKcdabojVQmt45GbuefStF0uyOXZab4ij4M-OXodMadWqwXn9rINhmahGGWatIB6JeWoyapbbGa_e31kbgjGCWaKcdabMjVQucmta5GaWegadmtF_udPEOB-VjbX66uhpFU3zugZkG2yEExKccelbIWGSleuyFhmahGGMcB6Jfeoyapbbye31gfrZab4imaeGM-OXmdMadWqyapbn_rrH8CWasccyjVQmuq5GaKefGtFuyMbZabiimagaM-OXmdMadaqyambn9rHuCWaycdabijVQmuq5GaWefGtFuyBhmagaGMcB-IJd45GbueeWtFuyOHZacOilaM-OXmdMafqqyambn9rIyhmajaGWaycB6JcO5GbiegacqtFuyOHZacqilaM-OW2oyasbbme3_1a6tPMvbI2DCVnbK6OjFxBX64EGiiqSglccWSrrIKhmae8GNYB6JfioxjbAK31gkqCWatYdabljVQmuG5CKgadctFuyiCVsdacdjV6kmuO5Ga9Ke-tFuyPrZabLiluM-OXsJMad2qyajzn9rILhmaguGWaysB6JbdMadAqyaqzn_rrHWCWaPYcFjVQmodMaeIqwPn9rHWCWaPYdabljVQmodMaeIqyamjn9rGHZacDimaimM_-Ohp0BL109pkdHH5yCM_XLbbcfGXyqwfIkmvi5GaGeeWtFuyPbZabyimagaM-OXsdMacaqyambn9rIKhmaeaGWascB-IJfsoyaubbme31gkqCWaIcdabGjVQmuG5GbqegadatFuyPbZacGimaeGM_OOXuJMadGqtbn9rIBhmahaGScB6Je2oyaobbGaKe31kbgjSCWawccWjVQucmty5GaSegacqtFuOeyMXZaciilaM-PqiXnJMaeqqyajbn9sGrIBhmahaGWaycB_6GC7sppdlYqy8plLLW9qqqHymwefHyIJfkoyajbbye31gjuCWaycdabijVQms45GaKegadatFuyAhmagaGWaEcB-IJfkoyambbye31gjCCWascdabijVQmsO5GaWegadatFuyAhmaeGGWaEcB-IJfkoyapbbye31gjCCWaKcdabijVQmsO5Ga8egadatFuyAhmajaGWaEcB-IJfkoyasbbye31gjuCWaEcdabijVQms45GbiegadatFuyAhmahGGWaEcB_6GC0OppressionbbcfGXyqwfIkmvi5GaWee4tFuyyhmahGGTcB6JfioyapbbGaYe31ggbZabGimagqM-OXsdMacqqyamHn9rIKhmaeGGWatcB6JfsoyajbbAe31ggbZabGimaeWM_OOXuJMaeGqtHn9rZab3ikFuyPbZab4imaeWM-OWWoyasbbGaYe31gkqCWaQcdabKjVQmuG5GbuegacytFuyQrZacOilqM-OWWoyasbbGaMe3_1a6tQhxLW2zugNMGXzCpxPPZDDGiiqSglccWSrrIIhmagaGMcB6Jfeoyajbbye31gjOCWaycdabGjVQmsa5GaWegacqtFuyKbZabGilaM-OXrdMadWqtbn_rrIIhmajaGMcB6Jfeoyavbbye31gjOCWaKcdabGjVQmsa5GbiegacqtFuyKbZacqilaM-OXndMadWqyajbn_9qoNkzLqun-NTY37KhpFY6imMvbZY80gFFUYCWqqHymwefHyIJfgowbbye31gkqCWascdabGjVQmuG5GaWegacqtFuyPbZabiilaM-OXtdMacqqtbn9rIMhmagaGMcB6Jfgoyambbye39fgkmCWaQccWjVQmuG5GbiegadatFuyPbZab4imaeGM-OXsdMaeGqwbn9rIMhmajaGMcB6Jfmoyapbbme31gkmCWaEccWjV6FQb0TOBE3mBk3oJL0KdiYKdS0UJc2TlCYUyiiqSglccWSrrINhmahGGScB6Je6oyapbbGaKe31gjeCWaEcdabGjV6kmuW5GbuefGtFuyNrZacOimaeGM-OXiJMaeGqyambn9rIDhmajaGWascB6Jfooyasbbye31gkyCWaKccyjV6kmuW5GaKefGtFuyNrZabiimaeGM-OXiJMadaqyambn9rIDhmagaGWascB6Jfooyambbye31gkyCWayccyjV_Qb0Nuow_XP24ugxN0W49o_CUxlGqqHymwefHyIJcW5GaKeeWtFuywhmagaGScB6JcW5Ga8eeWtFuywhmajaGScB6JcW5GbueeWtF0uyPrZacOimaeGM-OXsJMaeGqyambn9rILhmagaGWaycB6JfkoyajbbGaKe39fgjmCWaEccWjVQucmsy5Ga8egacqtFuOeyKXZabGimaeGM-PqiXjJMaeGqyajbn_9qoyPMvbW07n-4eeiwdfHbywiOXsJMaeGqyajbn9rILhmahGGWaycB6JfooyambbGaKe31gjWCWaEccWjVQmua5GbiefGtFuyNbZab4ijGM-OXqdMaeGqtbn_rrILhmaeGGWascB6JfkoyambbGaWe31gkCCWaEcdabijVQmtG5GaWefGtFuyObZabiilaM-OXodMadaqtbn9rIGhmaeGGMcB_6GCYRatissagebbcfGXyqwfIkmuO5GaWeeQtFuyPrZab4ik0M-OXsJMadaqvPn9rILhmahGGLsB-IJJXbGaKAJeSowbbwK31gjyCWasccTjVQmlJMadaqyaiPn9rHCCWaycdabDjVQmta5GaKegadQtFuyMbYWimahuM_OO5GbHKgaclQmsW5GbuefAtFuyLHZacqik0M-OWUoyapbbGaIK31gfXZab4imaf0M-OXmdMaeGqyaoPn9rIyhmakGGWaDsB_6GDo0ZlZqAT_Nd18imMvbSWOkwxtUYRyEZd1YzqqqHymwefHyIJfqoyairbqK31gkGCWawcc3jVQmva5GbcegadgtFuyQbZacAimahKM_OOXudMae0qujn9rIOhmaiqGTYB6Jdy5Ga3egacAtFuyQbZabyimagmM-OXudMaceqyapjn_9qoLQNO37-IdjH3C0gZkGX6ENlFUqiqqqHymwefHyIJfooyambbye31gkCCWaycdabijVQmkdMadaqyambn9rHqCWaycdab4jVQmva5GaKegadatFuyQbZabiimaeGM-OXtdMacqqwbn_rrINhmahGGScB6JfooyapbbGaKe31gfbZab4imagaM-OWOoyapbbGa8e31gkGCWaKcdabGjVQmva5GbiegacqtFuyPHZacqilaM_P-Ohoutt4qzmQdhO69mOiiqSglccWSrrHWCSccyjVQmuW5GaKeeWtFuyChmaeGGScB6Jfmoyambbye31ghbZabiimaeGM-OXodMadaqyajbn9rHWCWascdabGjVQmuG5GaWegadatF0uyChmamaGMcB6Jfmoyavbbme31ghbZacOilaM-OXtdMaeGqwbn9rHWCWaQcdabijVQmtG5GbiegacqtFuyChmakGGWaycB6JfioyasbbGaWe3_1a5_tgeGDM9PzsbMCNvPDoLLbbcfGXyqwfIkmva5GbvefQttQHP-5TZcOla9rIOhmajuGNIADunp3nUyvbyhQmva5Ga-eeIttQHP-5TZcOla9rIOhmagiGKsADunp3nUyvbyhQmva5GaKKe8ttQHP-5TZcOla9rIOhlqGTsADunp3nUyvbyh6kmsq5regacyttQHP-5TZcslb9rY6imae_uyFhmafiGWaqsADunp3nUypLG-OXjdMadmqwznoQgN7M3mjiSh1gjiCWaFccZjP1q0_C25HjfG-OW-oyasbbGaGK06OAFUBCWFlb9rZacIimae_uyKHZac8imaeWMNvdt9ZBMeKwd6JMafsqyam2O5GbiegadPQmuO5Ga4egadwttQHP-5TZcLlb9rILhmaguGWauYADunp3nUyuPypQmuO5Ga-KgacMttQHP-5TZcLlb_tt9qoDQUZPP25ughNZW9EGiiqSglccWSrrIPhmaeGGMcB6Jfkoyambbme31ggbYWilaM-OWWoyajbbye31gkuCWayccWjVQmvi5GaKegacqtFuyyhmagaGWascB-IJfsoyavbbme31gkuCWaKccyjVQmmdMagaqwbn9rHGCWaQccWjVQmuO5GbiefGtFuyQrZacOimaeGM-OWWoyasbbGaKe39fhmamKGWau9rZac2imag_uCWaOsdab71hmaiqGWaEnrIOhmahGGWaycB6JfqoyapbbGaKe31gkGCWaEccWjVQmva5Ga8eeWtF_udLajYsqiiqSglccWSrrIIhmagaGWascB6JfeoyapbbGaKe3_8', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '4g=('
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '4g=(', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '4g=('
    getMember
    push '6i)C'
    getMember
    not
    not
    branchIfTrue label3
    push 'miniwave'
    getVariable
    push '4g=('
    getMember
    push '6i)C'
    function ()
    end // of function 

    setRegister r:0
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:0, 'level', 'name', ')8e;N', '+m7O', 4, '4g=(', '', 3
    initObject
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '4g=('
    getMember
    push '6i)C'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label3:
    pop
  end // of initMovieClip 640

  defineMovieClip 641 // total frames: 0
  end // of defineMovieClip 641
  
  exportAssets
    641 as '__Packages.miniwave.box.Desc'
  end // of exportAssets
  
  initMovieClip 641
    constants '_global', 'miniwave', 'Object', ';W{', '9dv[', '=w)l', '6Yx', 'prototype', '02nS (', '_visible', 'field', '_width', '9V(', 'field2', '6}jsa', '9PO]k', 'text', ']eS}I(', '{)zoW', '8M -D', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{'
    getMember
    push '9dv['
    getMember
    not
    not
    branchIfTrue label3
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '9dv['
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '9dv['
    getMember
    push 'miniwave'
    getVariable
    push '6Yx'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '=w)l'
      callMethod
      pop
      push r:this, '02nS ('
      getMember
      push '_visible', FALSE
      setMember
      push r:this, '02nS ('
      getMember
      push 'field'
      getMember
      push '_width', r:this, '9V('
      getMember
      setMember
      push r:this, '02nS ('
      getMember
      push 'field2'
      getMember
      push '_width', r:this, '9V('
      getMember
      setMember
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '9PO]k'
    function2 (r:2='}aa') (r:1='this')
      push r:this, '02nS ('
      getMember
      push 'field'
      getMember
      push 'text', r:'}aa'
      setMember
    end // of function 

    setMember
    push r:1, ']eS}I('
    function2 (r:2='}aa') (r:1='this')
      push r:this, '02nS ('
      getMember
      push 'field2'
      getMember
      push 'text', r:'}aa'
      setMember
    end // of function 

    setMember
    push r:1, '{)zoW'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '{)zoW'
      callMethod
      pop
      push r:this, '02nS ('
      getMember
      push '_visible', TRUE
      setMember
    end // of function 

    setMember
    push r:1, '8M -D'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '8M -D'
      callMethod
      pop
      push r:this, '02nS ('
      getMember
      push '_visible', FALSE
      setMember
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '9dv['
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label3:
    pop
  end // of initMovieClip 641

  defineMovieClip 642 // total frames: 0
  end // of defineMovieClip 642
  
  exportAssets
    642 as '__Packages.miniwave.sp.bads.Letter'
  end // of exportAssets
  
  initMovieClip 642
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '74DTE(', '=w)l', ']q}_', 'prototype', 'type', '3oQo;', 'field', 'text', '3pCTE(', ' DVkC', '4k8;L', '6}jsa', '9f)b', '-WeX=', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '74DTE('
    getMember
    not
    not
    branchIfTrue label8
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '74DTE('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '74DTE('
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, 'type', 50
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
      push 0.0, r:this, '3oQo;'
      callMethod
      pop
      push r:this, 'field'
      getMember
      push 'text', r:this, '3pCTE('
      getMember
      chr
      setMember
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '3oQo;'
    function2 () (r:1='this')
      push r:this, '9f)b'
      getMember
      push 0.0
      lessThan
      not
      dup
      not
      branchIfTrue label4
      pop
      push r:this, '9f)b'
      getMember
      push 26
      lessThan
     label4:
      not
      branchIfTrue label5
      push r:this, '3pCTE(', r:this, '9f)b'
      getMember
      push 65
      add
      setMember
      push r:this, '-WeX=', r:this, '9f)b'
      getMember
      push 65
      add
      push 1
      initArray
      setMember
     label5:
      push r:this, '9f)b'
      getMember
      push 26
      lessThan
      not
      dup
      not
      branchIfTrue label6
      pop
      push r:this, '9f)b'
      getMember
      push 36
      lessThan
     label6:
      not
      branchIfTrue label7
      push r:this, '3pCTE(', 22, r:this, '9f)b'
      getMember
      add
      setMember
      push r:this, '-WeX=', 70, r:this, '9f)b'
      getMember
      add
      push 22, r:this, '9f)b'
      getMember
      add
      push 2
      initArray
      setMember
     label7:
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '74DTE('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label8:
    pop
  end // of initMovieClip 642

  defineMovieClip 643 // total frames: 0
  end // of defineMovieClip 643
  
  exportAssets
    643 as '__Packages.miniwave.game.Letter'
  end // of exportAssets
  
  initMovieClip 643
    constants '_global', 'miniwave', 'Object', '0(}e', '74DTE(', '=w)l', '5q)A', 'prototype', ';IwU', 'Letter Invader ! \n', '7rYCI', ' Z8Ys', '8p7(', ',CeLG', '8Ge;c', '(3cc', '6U1)*', '+4FUS', 'gotoAndStop', '5G{', '4G{', '_y', '[w;(', '9l;(', '6}jsa', '2M-sY', '7=bN', ']=lsF', '4tlo4(', ')VjW8(', '36_zB', '3fEyH', '2d[', '7J-V', '[CzZ1', '0YTB2', 'level', ']R4[6', '60n=3', '+_Y=3', '-9NJ+(', '0)vdG', '}+ZR;', '}yG6+(', ';*U}+', ';7Sp4', 'type', 'list', 'name', 'level ', ';N(', 'Bravo vous avez exterminé les infames letter-Monsters !!', 'endGame', ',0PWI(', ')zbG)', '}=*uB(', 'length', ',)ii(', '-B-AZ', ';c(', 'onKeyDown', '1-GEn', 'onKeyUp', 'Key', 'addListener', ',Ghq=(', '{hauN', 'y', ']dc', ',O=T+(', '9nAeE', '9f)b', 'getCode', '{[8bP', '-2I89', '-WeX=', ')]6(', '4;omY', '{r-z7', '4k8(', '-;zo7(', '}h R', ']nBjo', ' eDR3', ';IDPE', ')Ml', 'combo ', 'Math', 'pow', '3XLKj', ' +', '4OIUS', 'gotoAndPlay', ']NLZd', 'letterWave', '=Y(', '$letter', '3ao2D', 'max', '7XfTN', '$cons', '*0GPC', 'giveItem', '3I2[((', 'onPause', '_visible', '2B{Tq', '1T3j', 'removeListener', '5yGoU', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '0(}e'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '0(}e', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '0(}e'
    getMember
    push '74DTE('
    getMember
    not
    not
    branchIfTrue label53
    push 'miniwave'
    getVariable
    push '0(}e'
    getMember
    push '74DTE('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '0(}e'
    getMember
    push '74DTE('
    getMember
    push 'miniwave'
    getVariable
    push '5q)A'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super', r:3='_root')
      push r:_root, ';IwU', r:_root, ';IwU'
      getMember
      push 'Letter Invader ! \n'
      add
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
      push 0.0, r:this, '7rYCI'
      callMethod
      pop
      push r:this, ' Z8Ys', '8p7(', r:this, ',CeLG', '8Ge;c', '(3cc', 0.0, 3
      initObject
      setMember
    end // of function 

    setMember
    push r:1, '6U1)*'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6U1)*'
      callMethod
      pop
      push 4, 1, r:this, '+4FUS'
      getMember
      push 'gotoAndStop'
      callMethod
      pop
      push 1, 1, r:this, '+4FUS'
      getMember
      push '5G{'
      getMember
      push 'gotoAndStop'
      callMethod
      pop
      push 2, 1, r:this, '+4FUS'
      getMember
      push '4G{'
      getMember
      push 'gotoAndStop'
      callMethod
      pop
      push r:this, '+4FUS'
      getMember
      push '_y', r:this, '[w;('
      getMember
      push '9l;('
      getMember
      setMember
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:this, '2M-sY'
      callMethod
      not
      branchIfTrue label3
      push UNDEF
      return
     label3:
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push r:this, '7=bN'
      getMember
      setRegister r:0
      push 0.0
      strictEquals
      branchIfTrue label4
      push r:0, 1
      strictEquals
      branchIfTrue label5
      push r:0, 2
      strictEquals
      branchIfTrue label7
      push r:0, 3
      strictEquals
      branchIfTrue label8
      branch label10
     label4:
      branch label10
     label5:
      push 0.0, r:this, ']=lsF'
      callMethod
      not
      branchIfTrue label6
      push 2, 1, r:this, '8Ge;c'
      callMethod
      pop
     label6:
      push 0.0, r:this, '4tlo4('
      callMethod
      pop
      branch label10
     label7:
      push 0.0, r:this, ')VjW8('
      callMethod
      pop
      push 0.0, r:this, '36_zB'
      callMethod
      pop
      push 0.0, r:this, '4tlo4('
      callMethod
      pop
      branch label10
     label8:
      push r:this, '3fEyH', r:this, '3fEyH'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
      push r:this, '3fEyH'
      getMember
      push r:this, '[CzZ1'
      getMember
      divide
      setRegister r:4
      pop
      push r:this, '0YTB2'
      getMember
      push r:this, 'level'
      getMember
      subtract
      push r:4
      multiply
      setRegister r:3
      pop
      push r:this, '0YTB2'
      getMember
      push r:3
      subtract
      push r:this, ']R4[6'
      getMember
      multiply
      setRegister r:5
      pop
      push r:5, 1, r:this, '60n=3'
      callMethod
      pop
      push r:this, '3fEyH'
      getMember
      push 0.0
      lessThan
      not
      branchIfTrue label9
      push r:this, 'level', r:this, '0YTB2'
      getMember
      setMember
      push 0.0, 1, r:this, '8Ge;c'
      callMethod
      pop
     label9:
      branch label10
     label10:
      push 0.0, r:this, '+_Y=3'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '-9NJ+('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '-9NJ+('
      callMethod
      pop
      push r:this, '0)vdG', '}+ZR;', 1, r:this, '}yG6+('
      callMethod
      setMember
      push 4, 1, r:this, '0)vdG'
      getMember
      push ';*U}+'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '8Ge;c'
    function2 (r:12='7=bN') (r:1='this')
      push r:this, '7=bN', r:'7=bN'
      setMember
      push r:this, '7=bN'
      getMember
      setRegister r:0
      push 0.0
      strictEquals
      branchIfTrue label11
      push r:0, 1
      strictEquals
      branchIfTrue label14
      push r:0, 2
      strictEquals
      branchIfTrue label15
      push r:0, 3
      strictEquals
      branchIfTrue label18
      branch label19
     label11:
      push r:this, ';7Sp4'
      getMember
      push r:this, 'level'
      getMember
      getMember
      setRegister r:3
      pop
      push r:3, UNDEF
      equals
      not
      not
      branchIfTrue label12
      push 'type', 0.0, '3fEyH', 80, 'list', r:3, 'name'
      getMember
      push 'level ', r:this, 'level'
      getMember
      push 1
      add
      add
      push 2
      initArray
      push ';N(', '8p7(', r:this, ',CeLG', '8Ge;c', '(3cc', 1, 3
      initObject
      push 4
      initObject
      setRegister r:4
      pop
      branch label13
     label12:
      push 'type', 2, '3fEyH', 160, 'list', 'Bravo vous avez exterminé les infames letter-Monsters !!', 1
      initArray
      push ';N(', '8p7(', r:this, ',CeLG', 'endGame', 2
      initObject
      push 4
      initObject
      setRegister r:4
      pop
     label13:
      push r:4, 1, r:this, ',0PWI('
      callMethod
      pop
      branch label19
     label14:
      push 0.0, r:this, ')zbG)'
      callMethod
      pop
      branch label19
     label15:
      push 0.0
      setRegister r:2
      pop
     label16:
      push r:2, r:this, '}=*uB('
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label17
      push 0.0, r:this, '}=*uB('
      getMember
      push r:2
      getMember
      push ',)ii('
      callMethod
      pop
      push r:2
      increment
      setRegister r:2
      pop
      branch label16
     label17:
      branch label19
     label18:
      push r:this, '3fEyH', r:this, '[CzZ1'
      getMember
      setMember
      push 0.0, r:this, '-B-AZ'
      callMethod
      pop
      branch label19
     label19:
    end // of function 

    setMember
    push r:1, '7rYCI'
    function2 () (r:1='this')
      push r:this, ';c(', 0.0, 'Object'
      new
      setMember
      push r:this, ';c('
      getMember
      push '8p7(', r:this
      setMember
      push r:this, ';c('
      getMember
      push 'onKeyDown'
      function2 () (r:1='this')
        push 0.0, r:this, '8p7('
        getMember
        push '1-GEn'
        callMethod
        pop
      end // of function 

      setMember
      push r:this, ';c('
      getMember
      push 'onKeyUp'
      function ()
      end // of function 

      setMember
      push r:this, ';c('
      getMember
      push 1, 'Key'
      getVariable
      push 'addListener'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '36_zB'
    function2 () (r:1='this')
      push r:this, ',Ghq=('
      getMember
      push 0.0
      greaterThan
      not
      dup
      not
      branchIfTrue label20
      pop
      push r:this, '{hauN'
      getMember
      push UNDEF
      equals
     label20:
      not
      branchIfTrue label21
      push r:this, '0YTB2', r:this, 'level'
      getMember
      push 1
      add
      setMember
      push 3, 1, r:this, '8Ge;c'
      callMethod
      pop
     label21:
    end // of function 

    setMember
    push r:1, ')VjW8('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ')VjW8('
      callMethod
      pop
      push 0.0
      setRegister r:3
      pop
     label22:
      push r:3, r:this, '}=*uB('
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label24
      push r:this, '}=*uB('
      getMember
      push r:3
      getMember
      setRegister r:4
      pop
      push r:4, 'y'
      getMember
      push r:4, ']dc'
      getMember
      add
      push r:this, '[w;('
      getMember
      push '9l;('
      getMember
      greaterThan
      not
      branchIfTrue label23
      push 'type', 1, 'list', 0.0
      initArray
      push 2
      initObject
      setRegister r:5
      pop
      push r:5, 1, r:this, ',O=T+('
      callMethod
      pop
     label23:
      push r:3
      increment
      setRegister r:3
      pop
      branch label22
     label24:
    end // of function 

    setMember
    push r:1, '9nAeE'
    function2 ('type', r:3=',to,G(') (r:1='this', r:2='super')
      push r:',to,G(', UNDEF
      equals
      not
      branchIfTrue label25
      push 0.0, 'Object'
      new
      setRegister r:',to,G('
      pop
     label25:
      push r:this, 'level'
      getMember
      push 10
      greaterThan
      not
      branchIfTrue label26
      push r:',to,G(', '9f)b', 36
      random
      setMember
      branch label27
     label26:
      push r:',to,G(', '9f)b', 26
      random
      setMember
     label27:
      push r:',to,G(', '9f)b'
      getMember
      push 15
      equals
      dup
      branchIfTrue label28
      pop
      push r:',to,G(', '9f)b'
      getMember
      push 26
      equals
     label28:
      branchIfTrue label25
      push r:',to,G(', 50, 2, r:super, '9nAeE'
      callMethod
      setRegister r:4
      pop
      push r:4
      return
    end // of function 

    setMember
    push r:1, '1-GEn'
    function2 () (r:1='this')
      push 0.0, 'Key'
      getVariable
      push 'getCode'
      callMethod
      setRegister r:5
      pop
      push r:this, '{[8bP'
      getMember
      dup
      branchIfTrue label29
      pop
      push r:this, '7=bN'
      getMember
      push 0.0
      equals
     label29:
      dup
      branchIfTrue label30
      pop
      push r:this, '7=bN'
      getMember
      push 3
      equals
     label30:
      dup
      branchIfTrue label31
      pop
      push r:this, '[w;('
      getMember
      push '-2I89'
      getMember
     label31:
      not
      branchIfTrue label32
      push UNDEF
      return
     label32:
      push r:5, 65
      lessThan
      not
      dup
      not
      branchIfTrue label33
      pop
      push r:5, 91
      lessThan
     label33:
      dup
      branchIfTrue label34
      pop
      push r:5, 48
      greaterThan
      dup
      not
      branchIfTrue label34
      pop
      push r:5, 58
      lessThan
     label34:
      dup
      branchIfTrue label35
      pop
      push r:5, 96
      greaterThan
      dup
      not
      branchIfTrue label35
      pop
      push r:5, 106
      lessThan
     label35:
      not
      dup
      branchIfTrue label36
      pop
      push r:5, 80
      equals
     label36:
      not
      branchIfTrue label37
      push UNDEF
      return
     label37:
      push 0.0
      setRegister r:4
      pop
     label38:
      push r:4, r:this, '}=*uB('
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label42
      push r:this, '}=*uB('
      getMember
      push r:4
      getMember
      setRegister r:3
      pop
      push 0.0
      setRegister r:2
      pop
     label39:
      push r:2, r:3, '-WeX='
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label41
      push r:3, '-WeX='
      getMember
      push r:2
      getMember
      push r:5
      equals
      not
      branchIfTrue label40
      push r:3, 1, r:this, ')]6('
      callMethod
      pop
      push UNDEF
      return
     label40:
      push r:2
      increment
      setRegister r:2
      pop
      branch label39
     label41:
      push r:4
      increment
      setRegister r:4
      pop
      branch label38
     label42:
      push 1, 1, r:this, '0)vdG'
      getMember
      push '4;omY'
      callMethod
      not
      branchIfTrue label43
      push 'type', 1, 'list', 0.0
      initArray
      push 2
      initObject
      setRegister r:6
      pop
      push r:6, 1, r:this, ',O=T+('
      callMethod
      pop
     label43:
    end // of function 

    setMember
    push r:1, ')]6('
    function2 (r:5=';p(') (r:1='this')
      push 0.0, r:';p(', '{r-z7'
      callMethod
      pop
      push r:this, '{hauN'
      getMember
      push UNDEF
      equals
      not
      not
      branchIfTrue label45
      push r:this, '{hauN'
      getMember
      push '4k8(', r:this, '{hauN'
      getMember
      push '4k8('
      getMember
      increment
      setMember
      push r:this, '{hauN'
      getMember
      push '3fEyH', r:this, '-;zo7('
      getMember
      setMember
      push r:this, '{hauN'
      getMember
      push '4k8('
      getMember
      push 2
      equals
      not
      branchIfTrue label44
      push r:this, '{hauN'
      getMember
      push '}h R', ']nBjo', FALSE, 1
      initObject
      push ' eDR3', 2, r:this, ';IDPE'
      callMethod
      setMember
     label44:
      push r:this, '{hauN'
      getMember
      push '}h R'
      getMember
      push ')Ml', 'combo ', r:this, '{hauN'
      getMember
      push '4k8('
      getMember
      add
      setMember
      branch label46
     label45:
      push r:this, '{hauN', '4k8(', 1, '3fEyH', r:this, '-;zo7('
      getMember
      push 2
      initObject
      setMember
     label46:
    end // of function 

    setMember
    push r:1, '4tlo4('
    function2 () (r:1='this')
      push r:this, '{hauN'
      getMember
      push UNDEF
      equals
      not
      not
      branchIfTrue label49
      push r:this, '{hauN'
      getMember
      push '3fEyH'
      getMember
      push 0.0
      lessThan
      not
      branchIfTrue label48
      push r:this, '{hauN'
      getMember
      push '4k8('
      getMember
      push 1
      greaterThan
      not
      branchIfTrue label47
      push 2, r:this, '{hauN'
      getMember
      push '4k8('
      getMember
      push 2, 'Math'
      getVariable
      push 'pow'
      callMethod
      push 10
      multiply
      setRegister r:2
      pop
      push r:2, 1, r:this, '3XLKj'
      callMethod
      pop
      push r:this, '{hauN'
      getMember
      push '}h R'
      getMember
      push ')Ml', r:this, '{hauN'
      getMember
      push '}h R'
      getMember
      push ')Ml'
      getMember
      push ' +', r:2
      add
      add
      setMember
      push '4OIUS', 1, r:this, '{hauN'
      getMember
      push '}h R'
      getMember
      push 'gotoAndPlay'
      callMethod
      pop
     label47:
      push r:this, '{hauN'
      delete
      pop
      branch label49
     label48:
      push r:this, '{hauN'
      getMember
      push '3fEyH', r:this, '{hauN'
      getMember
      push '3fEyH'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
     label49:
    end // of function 

    setMember
    push r:1, ']NLZd'
    function ()
      push 'letterWave'
      return
    end // of function 

    setMember
    push r:1, 'endGame'
    function2 () (r:1='this', r:2='super')
      push r:this, '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$letter', r:this, '3ao2D'
      getMember
      push r:this, '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$letter'
      getMember
      push 2, 'Math'
      getVariable
      push 'max'
      callMethod
      setMember
      push 0.0, r:this, '7XfTN'
      callMethod
      setRegister r:3
      pop
      push r:3, r:this, '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$cons'
      getMember
      push '$letter'
      getMember
      greaterThan
      not
      branchIfTrue label50
      push r:this, '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$cons'
      getMember
      push '$letter', r:3
      setMember
      push r:3, 100
      equals
      not
      branchIfTrue label50
      push '$letter', 1, r:this, '[w;('
      getMember
      push '*0GPC'
      getMember
      push 'giveItem'
      callMethod
      pop
      push r:this, '[w;('
      getMember
      push '3I2[((', r:this, '[w;('
      getMember
      push '3I2[(('
      getMember
      increment
      setMember
     label50:
      push 0.0, r:super, 'endGame'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'onPause'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, 'onPause'
      callMethod
      pop
      push 0.0
      setRegister r:3
      pop
     label51:
      push r:3, r:this, '}=*uB('
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label52
      push r:this, '}=*uB('
      getMember
      push r:3
      getMember
      push '_visible', r:this, '[w;('
      getMember
      push '-2I89'
      getMember
      not
      setMember
      push r:3
      increment
      setRegister r:3
      pop
      branch label51
     label52:
    end // of function 

    setMember
    push r:1, '2B{Tq'
    function2 () (r:1='super')
      push '$letter', 1, r:super, '2B{Tq'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '1T3j'
    function2 () (r:1='this', r:2='super')
      push r:this, ';c('
      getMember
      push 1, 'Key'
      getVariable
      push 'removeListener'
      callMethod
      pop
      push 0.0, r:super, '1T3j'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '5yGoU', 8
    setMember
    push r:1, '-;zo7(', 8
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '0(}e'
    getMember
    push '74DTE('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label53:
    pop
  end // of initMovieClip 643

  defineMovieClip 644 // total frames: 0
  end // of defineMovieClip 644
  
  exportAssets
    644 as '__Packages.miniwave.panel.LetterLife'
  end // of exportAssets
  
  initMovieClip 644
    constants '_global', 'miniwave', 'Object', ')1]5F', '(j5be', '=w)l', 'MovieClip', 'prototype', '_x', '0(}e', '[w;(', '(l;(', '_y', '9l;(', '4Acl;', '89PHI', 'Array', ';*U}+', '0t2q', '(4+px', 'attachMovie', 'length', 'push', '4;omY', ';IwU', 'removeLife(', ')\n', '4OIUS', 'pop', 'gotoAndPlay', '6}jsa', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ')1]5F'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ')1]5F', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ')1]5F'
    getMember
    push '(j5be'
    getMember
    not
    not
    branchIfTrue label9
    push 'miniwave'
    getVariable
    push ')1]5F'
    getMember
    push '(j5be'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push ')1]5F'
    getMember
    push '(j5be'
    getMember
    push 'MovieClip'
    getVariable
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this')
      push r:this, '_x', r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '(l;('
      getMember
      setMember
      push r:this, '_y', r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '9l;('
      getMember
      setMember
      push r:this, '4Acl;', 0.0
      setMember
      push r:this, '89PHI', 0.0, 'Array'
      new
      setMember
    end // of function 

    setMember
    push r:1, ';*U}+'
    function2 (r:5='8)') (r:1='this')
      push r:'8)', UNDEF
      equals
      not
      branchIfTrue label3
      push 1
      setRegister r:'8)'
      pop
     label3:
      push 0.0
      setRegister r:4
      pop
     label4:
      push r:4, r:'8)'
      lessThan
      not
      branchIfTrue label5
      push r:this, '4Acl;'
      getMember
      push r:this, '4Acl;', r:this, '4Acl;'
      getMember
      increment
      setMember
      setRegister r:2
      pop
      push r:2, '0t2q', r:2
      add
      push '(4+px', 3, r:this, 'attachMovie'
      callMethod
      pop
      push r:this, '0t2q', r:2
      add
      getMember
      setRegister r:3
      pop
      push r:3, '_x', 0.0, r:this, '89PHI'
      getMember
      push 'length'
      getMember
      push 0.8
      add
      subtract
      push 12
      multiply
      setMember
      push r:3, '_y', -6
      setMember
      push r:3, 1, r:this, '89PHI'
      getMember
      push 'push'
      callMethod
      pop
      push r:4
      increment
      setRegister r:4
      pop
      branch label4
     label5:
    end // of function 

    setMember
    push r:1, '4;omY'
    function2 (r:4='8)') (r:1='this', r:2='_root')
      push r:_root, ';IwU', r:_root, ';IwU'
      getMember
      push 'removeLife(', r:'8)'
      add
      push ')\n'
      add
      add
      setMember
      push r:'8)', UNDEF
      equals
      not
      branchIfTrue label6
      push 1
      setRegister r:'8)'
      pop
     label6:
      push 0.0
      setRegister r:3
      pop
     label7:
      push r:3, r:'8)'
      lessThan
      not
      branchIfTrue label8
      push '4OIUS', 1, 0.0, r:this, '89PHI'
      getMember
      push 'pop'
      callMethod
      push 'gotoAndPlay'
      callMethod
      pop
      push r:3
      increment
      setRegister r:3
      pop
      branch label7
     label8:
      push r:this, '89PHI'
      getMember
      push 'length'
      getMember
      push 0.0
      equals
      return
    end // of function 

    setMember
    push r:1, '6}jsa'
    function ()
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push ')1]5F'
    getMember
    push '(j5be'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label9:
    pop
  end // of initMovieClip 644

  defineMovieClip 645 // total frames: 0
  end // of defineMovieClip 645
  
  exportAssets
    645 as '__Packages.miniwave.sp.bads.Poivron'
  end // of exportAssets
  
  initMovieClip 645
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '135 =', '=w)l', ']q}_', 'prototype', ' m1(', '0(}e', '[w;(', '=Y(', '$key', ']qbf', '0Pezx', 'type', ' DVkC', '0w*(((', '4k8;L', '()nBD', '*CcbI', 'Key', 'isDown', ';qbSN', ';[G=L', 'Math', 'min', 'x', '4N)zC', 'y', '-UU_I(', ',N5T', 'cos', '+N5T', 'sin', ',eX{I(', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '135 ='
    getMember
    not
    not
    branchIfTrue label6
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '135 ='
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '135 ='
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ' m1(', r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '=Y('
      getMember
      push 1
      getMember
      push '$key'
      getMember
      setMember
      push r:this, ']qbf', 220
      setMember
      push r:this, '0Pezx', 40
      setMember
      push r:this, 'type', 38
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:4
      pop
      push 0.0, r:this, '0(}e'
      getMember
      push '*CcbI'
      callMethod
      setRegister r:3
      pop
      push 0.0
      setRegister r:5
      pop
      push r:this, ' m1('
      getMember
      push 0.0
      getMember
      push 1, 'Key'
      getVariable
      push 'isDown'
      callMethod
      not
      branchIfTrue label4
      push -1
      setRegister r:5
      pop
     label4:
      push r:this, ' m1('
      getMember
      push 1
      getMember
      push 1, 'Key'
      getVariable
      push 'isDown'
      callMethod
      not
      branchIfTrue label5
      push 1
      setRegister r:5
      pop
     label5:
      push 24, r:3, 1, r:this, ';qbSN'
      callMethod
      push r:this, ';[G=L'
      getMember
      divide
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      setRegister r:7
      pop
      push 'x', r:3, 'x'
      getMember
      push r:7, r:5
      multiply
      push r:3, '4N)zC'
      getMember
      multiply
      add
      push 'y', r:3, 'y'
      getMember
      push 2
      initObject
      setRegister r:8
      pop
      push r:8, 1, r:this, '-UU_I('
      callMethod
      setRegister r:6
      pop
      push r:4, ',N5T', r:6, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push r:this, ';[G=L'
      getMember
      multiply
      setMember
      push r:4, '+N5T', r:6, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push r:this, ';[G=L'
      getMember
      multiply
      setMember
      push 0.0, r:4, ',eX{I('
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ';[G=L', 6
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '135 ='
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label6:
    pop
  end // of initMovieClip 645

  defineMovieClip 646 // total frames: 0
  end // of defineMovieClip 646
  
  exportAssets
    646 as '__Packages.miniwave.sp.bads.Groseille'
  end // of exportAssets
  
  initMovieClip 646
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '}QBXj', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', 'type', ' DVkC', '0w*(((', '4k8;L', '()nBD', '}cj8F(', '0(}e', '*CcbI', '{2{X2(', 'target', 'x', 'y', ',N5T', 'Math', 'cos', '+N5T', 'sin', '[pJN8(', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '}QBXj'
    getMember
    not
    not
    branchIfTrue label6
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '}QBXj'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '}QBXj'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 400
      setMember
      push r:this, '0Pezx', 100
      setMember
      push r:this, 'type', 29
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='this', r:2='super')
      push 0.0
      setRegister r:6
      pop
     label4:
      push r:6, 1
      lessThan
      not
      branchIfTrue label5
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:3
      pop
      push r:3, '}cj8F(', 12
      setMember
      push 0.0, r:this, '0(}e'
      getMember
      push '*CcbI'
      callMethod
      setRegister r:7
      pop
      push r:3, '{2{X2(', 'target', 'x', r:7, 'x'
      getMember
      push 'y', r:7, 'y'
      getMember
      push 2
      initObject
      push 1
      initObject
      setMember
      push 78.53981633974483
      setRegister r:4
      pop
      push 2, r:4
      multiply
      random
      push r:4, 3
      multiply
      subtract
      push 100
      divide
      setRegister r:5
      pop
      push r:3, ',N5T', r:5, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push 12
      multiply
      setMember
      push r:3, '+N5T', r:5, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push 12
      multiply
      setMember
      push r:3, '[pJN8(', 100
      setMember
      push r:6
      increment
      setRegister r:6
      pop
      branch label4
     label5:
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '}QBXj'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label6:
    pop
  end // of initMovieClip 646

  defineMovieClip 647 // total frames: 0
  end // of defineMovieClip 647
  
  exportAssets
    647 as '__Packages.miniwave.sp.bads.Mangue'
  end // of exportAssets
  
  initMovieClip 647
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '8,rk,(', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', 'type', '6dji=(', ' DVkC', '3fEyH', '()nBD', '_rotation', '0w*(((', '4k8;L', '6}jsa', '2d[', '7J-V', '];i=-', ',N5T', 'Math', 'cos', ';[G=L', '+N5T', 'sin', ',eX{I(', '8-FUS', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '8,rk,('
    getMember
    not
    not
    branchIfTrue label9
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '8,rk,('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '8,rk,('
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 400
      setMember
      push r:this, '0Pezx', 100
      setMember
      push r:this, 'type', 21
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
      push r:this, '6dji=(', 0.0
      setMember
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push r:this, '6dji=('
      getMember
      push 0.0
      greaterThan
      not
      branchIfTrue label5
      push r:this, '3fEyH'
      getMember
      push 0.0
      lessThan
      not
      branchIfTrue label4
      push 0.0, r:this, '()nBD'
      callMethod
      pop
      push r:this, '6dji=('
      getMember
      push 0.0
      equals
      not
      branchIfTrue label4
      push r:this, '_rotation', 0.0
      setMember
     label4:
      branch label6
     label5:
      push 0.0, r:this, '0w*((('
      callMethod
      pop
     label6:
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push r:this, '6dji=('
      getMember
      push 0.0
      greaterThan
      not
      branchIfTrue label7
      push r:this, '3fEyH', r:this, '3fEyH'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
     label7:
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='this', r:2='super')
      push r:this, '6dji=('
      getMember
      push 0.0
      equals
      not
      branchIfTrue label8
      push r:this, '6dji=(', r:this, '];i=-'
      getMember
      push 1
      subtract
      setMember
     label8:
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:3
      pop
      push r:this, '6dji=('
      getMember
      push r:this, '];i=-'
      getMember
      divide
      setRegister r:6
      pop
      push 1.570796326794897
      setRegister r:5
      pop
      push r:5, r:6, 2
      multiply
      push 1
      subtract
      push r:5
      multiply
      add
      setRegister r:4
      pop
      push r:3, ',N5T', r:4, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push r:this, ';[G=L'
      getMember
      multiply
      setMember
      push r:3, '+N5T', r:4, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push r:this, ';[G=L'
      getMember
      multiply
      setMember
      push 0.0, r:3, ',eX{I('
      callMethod
      pop
      push r:this, '3fEyH', r:this, '8-FUS'
      getMember
      setMember
      push r:this, '_rotation', r:4, 0.0174532925199433
      divide
      push 90
      subtract
      setMember
      push r:this, '6dji=(', r:this, '6dji=('
      getMember
      decrement
      setMember
    end // of function 

    setMember
    push r:1, '];i=-', 8
    setMember
    push r:1, '8-FUS', 3
    setMember
    push r:1, ';[G=L', 3
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '8,rk,('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label9:
    pop
  end // of initMovieClip 647

  defineMovieClip 648 // total frames: 0
  end // of defineMovieClip 648
  
  exportAssets
    648 as '__Packages.miniwave.sp.bads.Pulpe'
  end // of exportAssets
  
  initMovieClip 648
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', ')NO8;', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', 'type', ' DVkC', '0w*(((', '4k8;L', ')SDM;(', '0(}e', '2vgb4', '()nBD', ',N5T', 'Math', 'cos', ';[G=L', '+N5T', 'sin', ',eX{I(', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ')NO8;'
    getMember
    not
    not
    branchIfTrue label6
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ')NO8;'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ')NO8;'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 500
      setMember
      push r:this, '0Pezx', 8
      setMember
      push r:this, 'type', 18
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ')SDM;('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ')SDM;('
      callMethod
      pop
      push 5
      setRegister r:7
      pop
      push 0.0
      setRegister r:4
      pop
     label4:
      push r:4, r:7
      lessThan
      not
      branchIfTrue label5
      push 1.570796326794897
      setRegister r:5
      pop
      push r:5, r:4, 1
      add
      push r:7
      divide
      push r:5
      multiply
      push r:this, '0(}e'
      getMember
      push '2vgb4'
      getMember
      multiply
      add
      setRegister r:6
      pop
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:3
      pop
      push r:3, ',N5T', r:6, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push r:this, ';[G=L'
      getMember
      multiply
      setMember
      push r:3, '+N5T', r:6, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push r:this, ';[G=L'
      getMember
      multiply
      setMember
      push 0.0, r:3, ',eX{I('
      callMethod
      pop
      push r:4
      increment
      setRegister r:4
      pop
      branch label4
     label5:
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:3
      pop
      push r:3, ',N5T', r:this, ';[G=L'
      getMember
      setMember
      push r:3, '+N5T', r:this, ';[G=L'
      getMember
      setMember
      push 0.0, r:3, ',eX{I('
      callMethod
      pop
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:3
      pop
      push r:3, ',N5T', 0.0, r:this, ';[G=L'
      getMember
      subtract
      setMember
      push r:3, '+N5T', r:this, ';[G=L'
      getMember
      setMember
      push 0.0, r:3, ',eX{I('
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ';[G=L', 3
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ')NO8;'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label6:
    pop
  end // of initMovieClip 648

  defineMovieClip 649 // total frames: 0
  end // of defineMovieClip 649
  
  exportAssets
    649 as '__Packages.miniwave.box.Option'
  end // of exportAssets
  
  initMovieClip 649
    constants '_global', 'miniwave', 'Object', ';W{', '{45}p', '=w)l', '6Yx', 'prototype', '02nS (', '_visible', '*sdQ', ',1(R', '=vto', '[w;(', '=Y(', '6ZfRw', 'asml', '9P57I', '-XVH6', 'Array', '6}jsa', 'length', '[5(', '5u*(', '+)', ';P(', '_alpha', '{)zoW', 'Super Attaque', 'Tirer', 'Aller à droite', 'Aller à gauche', '+N7(', '2]MeT', 'attachMovie', '[g(', '9e-g', '$sound', '542(', 'name', '-Asr (', '*vz', 'onPress', '_parent', ']94En', 'onRollOver', 'onRollOut', 'onDragOut', '_y', 'push', '8M -D', 'field', 'text', 'Musique activée', 'Musique desactivée', 'Effets sonores activés', 'Effets sonores desactivés', ' : ', '$key', ']k{xr', '1OeZs', ';*b', 'play', ']=(]0', '6l;(', '1-GEn', '5-+P', 'onKeyDown', 'Key', 'getCode', ' : ---', 'addListener', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{'
    getMember
    push '{45}p'
    getMember
    not
    not
    branchIfTrue label26
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '{45}p'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '{45}p'
    getMember
    push 'miniwave'
    getVariable
    push '6Yx'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '=w)l'
      callMethod
      pop
      push r:this, '02nS ('
      getMember
      push '_visible', FALSE
      setMember
      push r:this, '*sdQ', r:this, ',1(R'
      getMember
      push '=vto'
      getMember
      push '[w;('
      getMember
      push '=Y('
      getMember
      push 1
      getMember
      setMember
      push r:this, '6ZfRw', 0.0, 'asml'
      getVariable
      push '9P57I'
      newMethod
      setMember
      push r:this, '-XVH6', 0.0, 'Array'
      new
      setMember
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push 0.0
      setRegister r:4
      pop
     label3:
      push r:4, r:this, '-XVH6'
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label5
      push r:this, '-XVH6'
      getMember
      push r:4
      getMember
      setRegister r:3
      pop
      push r:3, '[5('
      getMember
      setRegister r:5
      pop
      push r:3, '5u*('
      getMember
      push UNDEF
      equals
      not
      not
      branchIfTrue label4
      push r:3, '5u*('
      getMember
      setRegister r:5
      pop
     label4:
      push r:3, '+)', r:3, '+)'
      getMember
      push 0.9
      multiply
      push r:5, 0.1
      multiply
      add
      setMember
      push r:3, ';P('
      getMember
      push '_alpha', r:3, '+)'
      getMember
      setMember
      push r:4
      increment
      setRegister r:4
      pop
      branch label3
     label5:
    end // of function 

    setMember
    push r:1, '{)zoW'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '{)zoW'
      callMethod
      pop
      push r:this, '02nS ('
      getMember
      push '_visible', TRUE
      setMember
      push 'Super Attaque', 'Tirer', 'Aller à droite', 'Aller à gauche', 4
      initArray
      setRegister r:6
      pop
      push 28
      setRegister r:5
      pop
      push 0.0
      setRegister r:4
      pop
     label6:
      push r:4, 6
      lessThan
      not
      branchIfTrue label11
      push 10, r:4
      add
      push '+N7(', r:4
      add
      push '2]MeT', 3, r:this, '02nS ('
      getMember
      push 'attachMovie'
      callMethod
      pop
      push r:this, '02nS ('
      getMember
      push '+N7(', r:4
      add
      getMember
      setRegister r:3
      pop
      push r:3, '[g(', r:4
      setMember
      push r:4
      setRegister r:0
      push 0.0
      strictEquals
      branchIfTrue label7
      push r:0, 1
      strictEquals
      branchIfTrue label7
      push r:0, 2
      strictEquals
      branchIfTrue label8
      push r:0, 3
      strictEquals
      branchIfTrue label9
      push r:0, 4
      strictEquals
      branchIfTrue label9
      push r:0, 5
      strictEquals
      branchIfTrue label9
      branch label10
     label7:
      push r:3, '9e-g', r:this, '*sdQ'
      getMember
      push '$sound'
      getMember
      push r:4
      getMember
      setMember
      branch label10
     label8:
      push r:5, 8
      add
      setRegister r:5
      pop
     label9:
      push r:3, '542(', r:4, 2
      subtract
      setMember
      push r:3, 'name', r:6, r:3, '542('
      getMember
      getMember
      setMember
      branch label10
     label10:
      push r:3, 1, r:this, '-Asr ('
      callMethod
      pop
      push r:3, '*vz'
      getMember
      push 'onPress'
      function2 () (r:1='this')
        push r:this, '_parent'
        getMember
        push 1, r:this, '_parent'
        getMember
        push '_parent'
        getMember
        push '_parent'
        getMember
        push ']94En'
        callMethod
        pop
      end // of function 

      setMember
      push r:3, '*vz'
      getMember
      push 'onRollOver'
      function2 () (r:1='this')
        push r:this, '_parent'
        getMember
        push '[5(', 50
        setMember
      end // of function 

      setMember
      push r:3, '*vz'
      getMember
      push 'onRollOut'
      function2 () (r:1='this')
        push r:this, '_parent'
        getMember
        push '[5(', 0.0
        setMember
      end // of function 

      setMember
      push r:3, '*vz'
      getMember
      push 'onDragOut', r:3, '*vz'
      getMember
      push 'onRollOut'
      getMember
      setMember
      push r:3, '+)', 0.0
      setMember
      push r:3, '[5(', 0.0
      setMember
      push r:3, '_y', r:5
      setMember
      push r:5, 17
      add
      setRegister r:5
      pop
      push r:3, 1, r:this, '-XVH6'
      getMember
      push 'push'
      callMethod
      pop
      push r:4
      increment
      setRegister r:4
      pop
      branch label6
     label11:
    end // of function 

    setMember
    push r:1, '8M -D'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '8M -D'
      callMethod
      pop
      push r:this, '02nS ('
      getMember
      push '_visible', FALSE
      setMember
    end // of function 

    setMember
    push r:1, '-Asr ('
    function2 (r:2=';p(') (r:1='this')
      push r:';p(', '[g('
      getMember
      setRegister r:0
      push 0.0
      strictEquals
      branchIfTrue label12
      push r:0, 1
      strictEquals
      branchIfTrue label15
      push r:0, 2
      strictEquals
      branchIfTrue label18
      push r:0, 3
      strictEquals
      branchIfTrue label18
      push r:0, 4
      strictEquals
      branchIfTrue label18
      push r:0, 5
      strictEquals
      branchIfTrue label18
      branch label19
     label12:
      push r:';p(', '9e-g'
      getMember
      not
      branchIfTrue label13
      push r:';p(', 'field'
      getMember
      push 'text', 'Musique activée'
      setMember
      branch label14
     label13:
      push r:';p(', 'field'
      getMember
      push 'text', 'Musique desactivée'
      setMember
     label14:
      branch label19
     label15:
      push r:';p(', '9e-g'
      getMember
      not
      branchIfTrue label16
      push r:';p(', 'field'
      getMember
      push 'text', 'Effets sonores activés'
      setMember
      branch label17
     label16:
      push r:';p(', 'field'
      getMember
      push 'text', 'Effets sonores desactivés'
      setMember
     label17:
      branch label19
     label18:
      push r:';p(', 'field'
      getMember
      push 'text', r:';p(', 'name'
      getMember
      push ' : '
      add
      push r:this, '*sdQ'
      getMember
      push '$key'
      getMember
      push r:';p(', '542('
      getMember
      getMember
      push 1, r:this, '6ZfRw'
      getMember
      push ']k{xr'
      callMethod
      add
      setMember
      branch label19
     label19:
    end // of function 

    setMember
    push r:1, ']94En'
    function2 (r:2=';p(') (r:1='this')
      push r:';p(', '+)', 100
      setMember
      push '1OeZs', 1, r:this, ',1(R'
      getMember
      push '=vto'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push 'play'
      callMethod
      pop
      push r:';p(', '[g('
      getMember
      setRegister r:0
      push 0.0
      strictEquals
      branchIfTrue label20
      push r:0, 1
      strictEquals
      branchIfTrue label20
      push r:0, 2
      strictEquals
      branchIfTrue label21
      push r:0, 3
      strictEquals
      branchIfTrue label21
      push r:0, 4
      strictEquals
      branchIfTrue label21
      push r:0, 5
      strictEquals
      branchIfTrue label21
      branch label24
     label20:
      push r:';p(', '9e-g', r:';p(', '9e-g'
      getMember
      not
      setMember
      push r:this, '*sdQ'
      getMember
      push '$sound'
      getMember
      push r:';p(', '[g('
      getMember
      push r:';p(', '9e-g'
      getMember
      setMember
      push r:';p(', 1, r:this, '-Asr ('
      callMethod
      pop
      push 0.0, r:this, ',1(R'
      getMember
      push '=vto'
      getMember
      push '[w;('
      getMember
      push ']=(]0'
      callMethod
      pop
      branch label24
     label21:
      push r:';p(', '5u*(', 50
      setMember
      push r:this, '02nS ('
      getMember
      push '6l;('
      getMember
      push UNDEF
      equals
      not
      not
      branchIfTrue label23
      push r:this, '02nS ('
      getMember
      push '6l;('
      getMember
      push r:';p('
      equals
      not
      branchIfTrue label22
      push UNDEF
      return
     label22:
      push r:this, '*sdQ'
      getMember
      push '$key'
      getMember
      push r:this, '02nS ('
      getMember
      push '6l;('
      getMember
      push '542('
      getMember
      getMember
      push 1, r:this, '1-GEn'
      callMethod
      pop
     label23:
      push r:this, '02nS ('
      getMember
      push '6l;(', r:';p('
      setMember
      push 0.0, 'Object'
      new
      setRegister r:3
      pop
      push r:3, '5-+P', r:this
      setMember
      push r:3, 'onKeyDown'
      function2 () (r:1='this')
        push 0.0, 'Key'
        getVariable
        push 'getCode'
        callMethod
        push 1, r:this, '5-+P'
        getMember
        push '1-GEn'
        callMethod
        pop
      end // of function 

      setMember
      push r:';p(', 'field'
      getMember
      push 'text', r:';p(', 'name'
      getMember
      push ' : ---'
      add
      setMember
      push r:3, 1, 'Key'
      getVariable
      push 'addListener'
      callMethod
      pop
      branch label24
     label24:
    end // of function 

    setMember
    push r:1, '1-GEn'
    function2 (r:3='8)') (r:1='this')
      push r:this, '02nS ('
      getMember
      push '6l;('
      getMember
      push UNDEF
      equals
      not
      not
      branchIfTrue label25
      push '1OeZs', 1, r:this, ',1(R'
      getMember
      push '=vto'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push 'play'
      callMethod
      pop
      push r:this, '02nS ('
      getMember
      push '6l;('
      getMember
      push '542('
      getMember
      setRegister r:2
      pop
      push r:this, '*sdQ'
      getMember
      push '$key'
      getMember
      push r:2, r:'8)'
      setMember
      push r:this, '02nS ('
      getMember
      push '6l;('
      getMember
      push 1, r:this, '-Asr ('
      callMethod
      pop
      push r:this, '02nS ('
      getMember
      push '6l;('
      getMember
      push '5u*('
      delete
      pop
      push r:this, '02nS ('
      getMember
      push '6l;('
      delete
      pop
     label25:
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '{45}p'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label26:
    pop
  end // of initMovieClip 649

  defineMovieClip 650 // total frames: 0
  end // of defineMovieClip 650
  
  exportAssets
    650 as '__Packages.asml.KeyManager'
  end // of exportAssets
  
  initMovieClip 650
    constants '_global', 'asml', 'Object', '9P57I', '4DzGC(', '*QM5A', '2m1VE', 'Array', 'prototype', '?', 'PavNum ', 'PavNum *', 'PavNum +', 'PavNum Entrée', 'PavNum -', 'PavNum Suppr', 'PavNum /', 'F ', 'Retour', 'TAB', 'Supprimer', 'Entrée', 'Majuscule', 'Controle', 'Alt', 'Verr.Maj.', 'Echappe', 'Espace', 'Page préc.', 'Page suiv.', 'Fin', 'Début', 'Gauche', 'Haut', 'Droite', 'Bas', 'Insérer', 'Aide', 'VerrNum', '$ £', ' =  +', '- _', ': /', 'ù %', '° )', '* µ', '^ ¨', '²', ',-,Pz', ' xLkB(', ']k{xr', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'asml'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'asml', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'asml'
    getMember
    push '9P57I'
    getMember
    not
    not
    branchIfTrue label13
    push 'asml'
    getVariable
    push '9P57I'
    function2 () (r:1='this')
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push NULL
      equals
      not
      branchIfTrue label2
      push 0.0, r:this, '*QM5A'
      callMethod
      pop
     label2:
      push r:this, '2m1VE', 0.0, 'Array'
      new
      setMember
    end // of function 

    setRegister r:0
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '*QM5A'
    function2 () ()
      push UNDEF
      setRegister r:1
      pop
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC(', 0.0, 'Array'
      new
      setMember
      push 0.0
      setRegister r:1
      pop
     label3:
      push r:1, 256
      lessThan
      not
      branchIfTrue label4
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push r:1, '?'
      setMember
      push r:1
      increment
      setRegister r:1
      pop
      branch label3
     label4:
      push 65
      setRegister r:1
      pop
     label5:
      push r:1, 90
      greaterThan
      not
      not
      branchIfTrue label6
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push r:1, r:1
      chr
      setMember
      push r:1
      increment
      setRegister r:1
      pop
      branch label5
     label6:
      push 48
      setRegister r:1
      pop
     label7:
      push r:1, 57
      greaterThan
      not
      not
      branchIfTrue label8
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push r:1, r:1
      chr
      setMember
      push r:1
      increment
      setRegister r:1
      pop
      branch label7
     label8:
      push 96
      setRegister r:1
      pop
     label9:
      push r:1, 105
      greaterThan
      not
      not
      branchIfTrue label10
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push r:1, 'PavNum ', r:1, 96
      subtract
      add
      setMember
      push r:1
      increment
      setRegister r:1
      pop
      branch label9
     label10:
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 106, 'PavNum *'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 107, 'PavNum +'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 108, 'PavNum Entrée'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 109, 'PavNum -'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 110, 'PavNum Suppr'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 111, 'PavNum /'
      setMember
      push 112
      setRegister r:1
      pop
     label11:
      push r:1, 123
      greaterThan
      not
      not
      branchIfTrue label12
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push r:1, 'F ', r:1, 111
      subtract
      add
      setMember
      push r:1
      increment
      setRegister r:1
      pop
      branch label11
     label12:
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 8, 'Retour'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 9, 'TAB'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 12, 'Supprimer'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 13, 'Entrée'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 16, 'Majuscule'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 17, 'Controle'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 18, 'Alt'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 20, 'Verr.Maj.'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 27, 'Echappe'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 32, 'Espace'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 33, 'Page préc.'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 34, 'Page suiv.'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 35, 'Fin'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 36, 'Début'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 37, 'Gauche'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 38, 'Haut'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 39, 'Droite'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 40, 'Bas'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 45, 'Insérer'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 46, 'Supprimer'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 47, 'Aide'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 144, 'VerrNum'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 186, '$ £'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 187, ' =  +'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 189, '- _'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 191, ': /'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 192, 'ù %'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 219, '° )'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 220, '* µ'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 221, '^ ¨'
      setMember
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push 222, '²'
      setMember
    end // of function 

    setMember
    push r:1, ',-,Pz'
    function2 (r:3='[g(', r:2=' m1(') (r:1='this')
      push r:this, '2m1VE'
      getMember
      push r:'[g(', r:' m1('
      setMember
    end // of function 

    setMember
    push r:1, ' xLkB('
    function2 (r:2='[g(') (r:1='this')
      push r:this, '2m1VE'
      getMember
      push r:'[g('
      getMember
      return
    end // of function 

    setMember
    push r:1, ']k{xr'
    function2 (r:1=' m1(') ()
      push 'asml'
      getVariable
      push '9P57I'
      getMember
      push '4DzGC('
      getMember
      push r:' m1('
      getMember
      return
    end // of function 

    setMember
    push r:0, '4DzGC(', NULL
    setMember
    push 1, NULL, 'asml'
    getVariable
    push '9P57I'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label13:
    pop
  end // of initMovieClip 650

  defineMovieClip 651 // total frames: 0
  end // of defineMovieClip 651
  
  exportAssets
    651 as '__Packages.miniwave.box.ShipDemo'
  end // of exportAssets
  
  initMovieClip 651
    constants '_global', 'miniwave', 'Object', ';W{', '5MIiJ(', '=w)l', '6Yx', 'prototype', '8x()n', 'Array', '6KXx((', '3}f()(', ',b3(K', '6}jsa', '7=bN', 'length', '2d[', '7J-V', 'Math', 'pow', 'y', '_y', 'max', 'min', '0WAS0', '{)zoW', '1c1O', 'createEmptyMovieClip', '=gzo', 'x', '6(', '9V(', 'h', '(X(', '+]', ' CLe7(', 'setMask', '2)', '6-3]M', '*vz', ';F1j,(', 'attachMovie', '_xscale', '_yscale', 'onRollOver', '_parent', '9LaTD', 'onRollOut', '}9WO', 'onDragOut', 'onPress', '4Pzmp', ',1(R', '-q};c', '1OeZs', '=vto', '[w;(', ';*b', 'play', '+3ul', '[g(', '_visible', '5F5}m', ' c2q', '_x', 'push', '8M -D', 'removeMovieClip', ' jGro', ',BWA)', '2(', 'clear', 'lineStyle', 'splice', 'moveTo', 'lineTo', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{'
    getMember
    push '5MIiJ('
    getMember
    not
    not
    branchIfTrue label16
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '5MIiJ('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '5MIiJ('
    getMember
    push 'miniwave'
    getVariable
    push '6Yx'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '=w)l'
      callMethod
      pop
      push r:this, '8x()n', 0.0, 'Array'
      new
      setMember
      push r:this, '6KXx((', 9079485
      setMember
      push r:this, '3}f()(', 16777215
      setMember
      push r:this, ',b3(K', 0.0, 'Array'
      new
      setMember
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push r:this, '7=bN'
      getMember
      push 2
      strictEquals
      branchIfTrue label3
      branch label6
     label3:
      push 0.0
      setRegister r:4
      pop
     label4:
      push r:4, r:this, '8x()n'
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label5
      push r:this, '8x()n'
      getMember
      push r:4
      getMember
      setRegister r:3
      pop
      push '2d['
      getVariable
      push '7J-V'
      getMember
      push 0.2, 2, 'Math'
      getVariable
      push 'pow'
      callMethod
      setRegister r:5
      pop
      push r:3, 'y'
      getMember
      push r:3, '_y'
      getMember
      subtract
      push r:5
      multiply
      setRegister r:6
      pop
      push r:3, '_y', r:3, '_y'
      getMember
      push 16, r:6, -16, 2, 'Math'
      getVariable
      push 'max'
      callMethod
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      add
      setMember
      push r:4
      increment
      setRegister r:4
      pop
      branch label4
     label5:
      push 0.0, r:this, '0WAS0'
      callMethod
      pop
      branch label6
     label6:
    end // of function 

    setMember
    push r:1, '{)zoW'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '{)zoW'
      callMethod
      pop
      push 10, '1c1O', 2, r:this, 'createEmptyMovieClip'
      callMethod
      pop
      push 12, '=gzo', 2, r:this, 'createEmptyMovieClip'
      callMethod
      pop
      push 10, 16711680, 'x', 0.0, 'y', 0.0, '6(', r:this, '9V('
      getMember
      push 'h', r:this, '(X('
      getMember
      push 4
      initObject
      push r:this, '=gzo'
      getMember
      push 4, 'miniwave'
      getVariable
      push '+]'
      getMember
      push ' CLe7('
      callMethod
      pop
      push r:this, '=gzo'
      getMember
      push 1, r:this, '1c1O'
      getMember
      push 'setMask'
      callMethod
      pop
      push r:this, '1c1O'
      getMember
      push '2)', 10
      setMember
      push 0.0, r:this, '6-3]M'
      callMethod
      pop
      push 14, '*vz', ';F1j,(', 3, r:this, 'attachMovie'
      callMethod
      pop
      push r:this, '*vz'
      getMember
      push '_xscale', r:this, '6('
      getMember
      setMember
      push r:this, '*vz'
      getMember
      push '_yscale', r:this, 'h'
      getMember
      setMember
      push r:this, '*vz'
      getMember
      push 'onRollOver'
      function2 () (r:1='this')
        push 0.0, r:this, '_parent'
        getMember
        push '9LaTD'
        callMethod
        pop
      end // of function 

      setMember
      push r:this, '*vz'
      getMember
      push 'onRollOut'
      function2 () (r:1='this')
        push 0.0, r:this, '_parent'
        getMember
        push '}9WO'
        callMethod
        pop
      end // of function 

      setMember
      push r:this, '*vz'
      getMember
      push 'onDragOut', r:this, '*vz'
      getMember
      push 'onRollOut'
      getMember
      setMember
      push r:this, '*vz'
      getMember
      push 'onPress'
      function2 () (r:1='this')
        push 0.0, r:this, '_parent'
        getMember
        push '4Pzmp'
        callMethod
        pop
      end // of function 

      setMember
    end // of function 

    setMember
    push r:1, '4Pzmp'
    function2 () (r:1='this')
      push r:this, ',1(R'
      getMember
      push '-q};c'
      getMember
      not
      branchIfTrue label9
      push '1OeZs', 1, r:this, ',1(R'
      getMember
      push '=vto'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push 'play'
      callMethod
      pop
      push r:this, '+3ul'
      getMember
      push 'y', -120
      setMember
      push r:this, '[g('
      getMember
      push 0.0
      equals
      not
      branchIfTrue label7
      push 0.0, r:this, '6-3]M'
      callMethod
      pop
      branch label8
     label7:
      push r:this, '*vz'
      getMember
      push '_visible', FALSE
      setMember
     label8:
      push r:this, '[g('
      getMember
      push 1, r:this, ',1(R'
      getMember
      push '4Pzmp'
      callMethod
      pop
     label9:
    end // of function 

    setMember
    push r:1, '6-3]M'
    function2 () (r:1='this')
      push r:this, ',1(R'
      getMember
      push '=vto'
      getMember
      push '[w;('
      getMember
      push '5F5}m'
      getMember
      push r:this, '[g('
      getMember
      getMember
      push ' c2q'
      getMember
      setRegister r:4
      pop
      push r:this, '1c1O'
      getMember
      push '2)'
      getMember
      push r:this, '1c1O'
      getMember
      push '2)', r:this, '1c1O'
      getMember
      push '2)'
      getMember
      increment
      setMember
      setRegister r:3
      pop
      push r:3, '+3ul', r:3
      add
      push r:4, 3, r:this, '1c1O'
      getMember
      push 'attachMovie'
      callMethod
      pop
      push r:this, '1c1O'
      getMember
      push '+3ul', r:3
      add
      getMember
      setRegister r:2
      pop
      push r:2, '_x', r:this, '9V('
      getMember
      push 2
      divide
      setMember
      push r:2, '_y', r:this, '(X('
      getMember
      push 16
      add
      setMember
      push r:2, 'y', r:this, '(X('
      getMember
      push 12
      subtract
      setMember
      push r:2, 1, r:this, '8x()n'
      getMember
      push 'push'
      callMethod
      pop
      push r:this, '+3ul', r:2
      setMember
    end // of function 

    setMember
    push r:1, '8M -D'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '8M -D'
      callMethod
      pop
      push 0.0, r:this, '1c1O'
      getMember
      push 'removeMovieClip'
      callMethod
      pop
      push 0.0, r:this, '=gzo'
      getMember
      push 'removeMovieClip'
      callMethod
      pop
      push r:this, '*vz'
      getMember
      push '_visible', FALSE
      setMember
    end // of function 

    setMember
    push r:1, '9LaTD'
    function2 () (r:1='this')
      push r:this, ' jGro', TRUE
      setMember
      push r:this, '[g('
      getMember
      push 1, r:this, ',1(R'
      getMember
      push '9LaTD'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '}9WO'
    function2 () (r:1='this')
      push r:this, ' jGro', FALSE
      setMember
      push r:this, '[g('
      getMember
      push 1, r:this, ',1(R'
      getMember
      push '}9WO'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '0WAS0'
    function2 () (r:1='this')
      push '2d['
      getVariable
      push '7J-V'
      getMember
      push 1.3
      lessThan
      dup
      not
      branchIfTrue label10
      pop
      push r:this, ',b3(K'
      getMember
      push 'length'
      getMember
      push 40, r:this, ',BWA)'
      getMember
      divide
      lessThan
     label10:
      not
      branchIfTrue label11
      push 'x', r:this, '9V('
      getMember
      random
      push 'y', 0.0, '2(', 8, 80
      random
      add
      push 3
      initObject
      setRegister r:2
      pop
      push r:2, 1, r:this, ',b3(K'
      getMember
      push 'push'
      callMethod
      pop
     label11:
      push 0.0, r:this, '1c1O'
      getMember
      push 'clear'
      callMethod
      pop
      push 50, 16777215, 1, 3, r:this, '1c1O'
      getMember
      push 'lineStyle'
      callMethod
      pop
      push 0.0
      setRegister r:3
      pop
     label12:
      push r:3, r:this, ',b3(K'
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label15
      push r:this, ',b3(K'
      getMember
      push r:3
      getMember
      setRegister r:2
      pop
      push r:2, '2('
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      setRegister r:4
      pop
      push r:4, 3
      multiply
      setRegister r:5
      pop
      push r:2, 'y', r:2, 'y'
      getMember
      push r:4
      add
      setMember
      push r:2, 'y'
      getMember
      push r:5
      subtract
      push r:this, '(X('
      getMember
      greaterThan
      not
      branchIfTrue label13
      push 1, r:3, 2, r:this, ',b3(K'
      getMember
      push 'splice'
      callMethod
      pop
      push r:3
      decrement
      setRegister r:3
      pop
      branch label14
     label13:
      push r:2, 'y'
      getMember
      push r:2, 'x'
      getMember
      push 2, r:this, '1c1O'
      getMember
      push 'moveTo'
      callMethod
      pop
      push r:2, 'y'
      getMember
      push r:5
      subtract
      push r:2, 'x'
      getMember
      push 2, r:this, '1c1O'
      getMember
      push 'lineTo'
      callMethod
      pop
     label14:
      push r:3
      increment
      setRegister r:3
      pop
      branch label12
     label15:
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '5MIiJ('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label16:
    pop
  end // of initMovieClip 651

  defineMovieClip 652 // total frames: 0
  end // of defineMovieClip 652
  
  exportAssets
    652 as '__Packages.miniwave.game.Survival'
  end // of exportAssets
  
  initMovieClip 652
    constants '_global', 'miniwave', 'Object', '0(}e', '}-Ky5(', '=w)l', '5q)A', 'prototype', '8x()n', 'level', ' Z8Ys', '8p7(', ',CeLG', '8Ge;c', '(3cc', '6U1)*', '+4FUS', 'gotoAndStop', '_y', '[w;(', '9l;(', ')zbG)', '4N}8_', 'min', 'max', '(l;(', 'fallSpeed', ')MvQY', '2vgb4', '7uWP]', '-LpQY', '5tRs(', 'x', 'y', '+RRzE', 'Math', '9nAeE', '7=bN', '45(', '-9NJ+(', '0)vdG', '4Dcgs', '}yG6+(', 'length', ';*U}+', '((]fd', '3Vyx3(', '1nD1+(', '6}jsa', '2M-sY', '0yZ],', ')VjW8(', '}P 4l', '2d[', '7J-V', '+_Y=3', '}=*uB(', '5Bp*v', '=N;;P', 'sqrt', 'floor', '(LdX,', '+3ul', '_visible', '4;omY', 'unshift', 'endGame', '=Y(', '$survival', '3ao2D', '1K72I(', 'type', 'list', ',O=T+(', '2B{Tq', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '0(}e'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '0(}e', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '0(}e'
    getMember
    push '}-Ky5('
    getMember
    not
    not
    branchIfTrue label28
    push 'miniwave'
    getVariable
    push '0(}e'
    getMember
    push '}-Ky5('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '0(}e'
    getMember
    push '}-Ky5('
    getMember
    push 'miniwave'
    getVariable
    push '5q)A'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, '8x()n', 0.0, 1
      initArray
      setMember
      push r:this, 'level', 0.0
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
      push r:this, ' Z8Ys', '8p7(', r:this, ',CeLG', '8Ge;c', '(3cc', 0.0, 3
      initObject
      setMember
    end // of function 

    setMember
    push r:1, '6U1)*'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6U1)*'
      callMethod
      pop
      push 2, 1, r:this, '+4FUS'
      getMember
      push 'gotoAndStop'
      callMethod
      pop
      push r:this, '+4FUS'
      getMember
      push '_y', r:this, '[w;('
      getMember
      push '9l;('
      getMember
      setMember
    end // of function 

    setMember
    push r:1, ')zbG)'
    function2 () (r:1='this')
      push r:this, '4N}8_', 'min', 0.0, 'max', r:this, '[w;('
      getMember
      push '(l;('
      getMember
      push 2
      initObject
      setMember
      push r:this, 'fallSpeed', 5
      setMember
      push r:this, ')MvQY', 0.6
      setMember
      push r:this, '2vgb4', 1
      setMember
      push r:this, '7uWP]', 4
      setMember
      push r:this, '-LpQY', 24
      setMember
      push r:this, '5tRs(', 0.0
      setMember
      push r:this, '-LpQY'
      getMember
      setRegister r:7
      pop
      push r:this, '[w;('
      getMember
      push '(l;('
      getMember
      push r:this, '7uWP]'
      getMember
      push r:this, '-LpQY'
      getMember
      multiply
      subtract
      push 2
      divide
      setRegister r:6
      pop
      push 0.0
      setRegister r:4
      pop
     label3:
      push r:4, 3
      lessThan
      not
      branchIfTrue label6
      push 0.0
      setRegister r:5
      pop
     label4:
      push r:5, r:this, '7uWP]'
      getMember
      lessThan
      not
      branchIfTrue label5
      push 'x', r:6, r:5, r:this, '-LpQY'
      getMember
      multiply
      add
      push 'y', r:4, 1
      add
      push r:this, '-LpQY'
      getMember
      multiply
      push 2
      initObject
      setRegister r:3
      pop
      push r:3, r:this, '+RRzE'
      getMember
      push r:this, 'level'
      getMember
      push 3
      add
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      random
      push 2, r:this, '9nAeE'
      callMethod
      setRegister r:2
      pop
      push r:2, '7=bN', 2
      setMember
      push r:2, '45(', r:2, 'y'
      getMember
      setMember
      push r:5
      increment
      setRegister r:5
      pop
      branch label4
     label5:
      push r:4
      increment
      setRegister r:4
      pop
      branch label3
     label6:
    end // of function 

    setMember
    push r:1, '-9NJ+('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '-9NJ+('
      callMethod
      pop
      push r:this, '0)vdG', '4Dcgs', 1, r:this, '}yG6+('
      callMethod
      setMember
      push 0.0
      setRegister r:3
      pop
     label7:
      push r:3, r:this, '8x()n'
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label8
      push r:this, '8x()n'
      getMember
      push 'length'
      getMember
      push r:3, 1
      add
      subtract
      setRegister r:4
      pop
      push r:this, '8x()n'
      getMember
      push r:4
      getMember
      push 1, r:this, '0)vdG'
      getMember
      push ';*U}+'
      callMethod
      pop
      push r:3
      increment
      setRegister r:3
      pop
      branch label7
     label8:
    end // of function 

    setMember
    push r:1, '8Ge;c'
    function2 (r:2='7=bN') (r:1='this')
      push r:this, '7=bN', r:'7=bN'
      setMember
      push r:this, '7=bN'
      getMember
      setRegister r:0
      push 0.0
      strictEquals
      branchIfTrue label9
      push r:0, 1
      strictEquals
      branchIfTrue label10
      push r:0, 2
      strictEquals
      branchIfTrue label11
      branch label12
     label9:
      branch label12
     label10:
      branch label12
     label11:
      push 0.0, r:this, ')zbG)'
      callMethod
      pop
      push 0.0, r:this, '((]fd'
      callMethod
      pop
      push r:this, '3Vyx3(', 800
      setMember
      push r:this, '1nD1+(', r:this, '1nD1+('
      getMember
      setMember
      branch label12
     label12:
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:this, '2M-sY'
      callMethod
      not
      branchIfTrue label13
      push UNDEF
      return
     label13:
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push r:this, '7=bN'
      getMember
      setRegister r:0
      push 0.0
      strictEquals
      branchIfTrue label14
      push r:0, 1
      strictEquals
      branchIfTrue label15
      push r:0, 2
      strictEquals
      branchIfTrue label16
      branch label19
     label14:
      push 1, 1, r:this, '8Ge;c'
      callMethod
      pop
      branch label19
     label15:
      push 2, 1, r:this, '8Ge;c'
      callMethod
      pop
      branch label19
     label16:
      push 0.0, r:this, '0yZ],'
      callMethod
      pop
      push 0.0, r:this, ')VjW8('
      callMethod
      pop
      push r:this, '1nD1+('
      getMember
      push 0.0
      greaterThan
      not
      not
      branchIfTrue label17
      push 0.0, r:this, '}P 4l'
      callMethod
      pop
      branch label18
     label17:
      push r:this, '1nD1+(', r:this, '1nD1+('
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
     label18:
      branch label19
     label19:
      push 0.0, r:this, '+_Y=3'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '0yZ],'
    function2 () (r:1='this')
      push r:this, '[w;('
      getMember
      push '9l;('
      getMember
      setRegister r:4
      pop
      push 0.0
      setRegister r:2
      pop
     label20:
      push r:2, r:this, '}=*uB('
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label21
      push r:this, '}=*uB('
      getMember
      push r:2
      getMember
      setRegister r:3
      pop
      push r:3, '45('
      getMember
      push r:4, 2, 'Math'
      getVariable
      push 'min'
      callMethod
      setRegister r:4
      pop
      push r:2
      increment
      setRegister r:2
      pop
      branch label20
     label21:
      push r:4, r:this, '5Bp*v'
      getMember
      greaterThan
      not
      branchIfTrue label22
      push 0.0, r:this, '=N;;P'
      callMethod
      pop
     label22:
    end // of function 

    setMember
    push r:1, '=N;;P'
    function2 () (r:1='this')
      push r:this, '[w;('
      getMember
      push '(l;('
      getMember
      push r:this, '7uWP]'
      getMember
      push r:this, '-LpQY'
      getMember
      multiply
      subtract
      push 2
      divide
      setRegister r:6
      pop
      push 0.0
      setRegister r:4
      pop
      push 0.0
      setRegister r:5
      pop
     label23:
      push r:5, r:this, '7uWP]'
      getMember
      lessThan
      not
      branchIfTrue label24
      push 'x', r:6, r:5, r:this, '-LpQY'
      getMember
      multiply
      add
      push 'y', r:4, 1
      add
      push r:this, '-LpQY'
      getMember
      multiply
      push 2
      initObject
      setRegister r:3
      pop
      push r:3, r:this, '+RRzE'
      getMember
      push r:this, 'level'
      getMember
      push 3
      add
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      random
      push 2, r:this, '9nAeE'
      callMethod
      setRegister r:2
      pop
      push r:2, '7=bN', 2
      setMember
      push r:2, '45(', r:2, 'y'
      getMember
      setMember
      push r:2, 'y', r:2, 'y'
      getMember
      push 40
      subtract
      setMember
      push r:5
      increment
      setRegister r:5
      pop
      branch label23
     label24:
    end // of function 

    setMember
    push r:1, '}P 4l'
    function2 () (r:1='this')
      push r:this, 'level', r:this, 'level'
      getMember
      increment
      setMember
      push r:this, '3Vyx3(', r:this, '3Vyx3('
      getMember
      push 1.1
      multiply
      setMember
      push r:this, '1nD1+(', r:this, '3Vyx3('
      getMember
      setMember
      push r:this, '7uWP]', 8, 3, r:this, 'level'
      getMember
      push 1, 'Math'
      getVariable
      push 'sqrt'
      callMethod
      push 1, 'Math'
      getVariable
      push 'floor'
      callMethod
      add
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      setMember
      push r:this, ')MvQY', 0.6, r:this, 'level'
      getMember
      push 0.03
      multiply
      add
      setMember
    end // of function 

    setMember
    push r:1, '(LdX,'
    function2 () (r:1='this')
      push r:this, '+3ul'
      getMember
      push '_visible'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label25
      push 0.0, r:this, '((]fd'
      callMethod
      pop
     label25:
    end // of function 

    setMember
    push r:1, '((]fd'
    function2 () (r:1='this')
      push 0.0, r:this, '0)vdG'
      getMember
      push '4;omY'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ';*U}+'
    function2 (r:2='8)') (r:1='this')
      push r:'8)', 1, r:this, '8x()n'
      getMember
      push 'unshift'
      callMethod
      pop
      push r:'8)', 1, r:this, '0)vdG'
      getMember
      push ';*U}+'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, 'endGame'
    function2 () (r:1='this', r:2='super')
      push r:this, '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$survival', r:this, '3ao2D'
      getMember
      push r:this, '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$survival'
      getMember
      push 2, 'Math'
      getVariable
      push 'max'
      callMethod
      setMember
      push 0.0, r:super, 'endGame'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '1K72I('
    function2 () (r:1='this')
      push r:this, '8x()n'
      getMember
      push 'length'
      getMember
      push 0.0
      greaterThan
      not
      branchIfTrue label26
      push 0.0, r:this, '((]fd'
      callMethod
      pop
      branch label27
     label26:
      push 'type', 1, 'list', 0.0
      initArray
      push 2
      initObject
      setRegister r:2
      pop
      push r:2, 1, r:this, ',O=T+('
      callMethod
      pop
     label27:
    end // of function 

    setMember
    push r:1, '2B{Tq'
    function2 () (r:1='super')
      push '$survival', 1, r:super, '2B{Tq'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '5Bp*v', 48
    setMember
    push r:1, '+RRzE', 45
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '0(}e'
    getMember
    push '}-Ky5('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label28:
    pop
  end // of initMovieClip 652

  defineMovieClip 653 // total frames: 0
  end // of defineMovieClip 653
  
  exportAssets
    653 as '__Packages.miniwave.sp.Part'
  end // of exportAssets
  
  initMovieClip 653
    constants '_global', 'miniwave', 'Object', '8y', ',w(H', '=w)l', '5u;}4', 'prototype', '7luP*', ']nBjo', '),+Xu', ',N5T', '+N5T', '=M5T', ',eQ55', '6}jsa', '0(}e', '=QEBH', '2d[', '7J-V', '(,J R', 'x', 'y', '_rotation', '3fEyH', '1T3j', '0_X42', '_xscale', '_yscale', '_alpha', 'Math', 'atan2', '4k8;L', '*=bte', '*p,2T', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ',w(H'
    getMember
    not
    not
    branchIfTrue label15
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ',w(H'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ',w(H'
    getMember
    push 'miniwave'
    getVariable
    push '5u;}4'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='super')
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '7luP*'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '7luP*'
      callMethod
      pop
      push r:this, ']nBjo'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label3
      push r:this, ']nBjo', TRUE
      setMember
     label3:
      push r:this, '),+Xu'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label4
      push r:this, '),+Xu', FALSE
      setMember
     label4:
      push r:this, ',N5T'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label5
      push r:this, ',N5T', 0.0
      setMember
     label5:
      push r:this, '+N5T'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label6
      push r:this, '+N5T', 0.0
      setMember
     label6:
      push r:this, '=M5T'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label7
      push r:this, '=M5T', 0.0
      setMember
     label7:
      push r:this, ',eQ55'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label8
      push r:this, ',eQ55', 0.5
      setMember
     label8:
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push r:this, ']nBjo'
      getMember
      not
      branchIfTrue label9
      push r:this, '+N5T', r:this, '+N5T'
      getMember
      push r:this, '0(}e'
      getMember
      push '=QEBH'
      getMember
      push r:this, ',eQ55'
      getMember
      multiply
      push '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      add
      setMember
     label9:
      push r:this, ',N5T', r:this, ',N5T'
      getMember
      push r:this, '0(}e'
      getMember
      push '(,J R'
      getMember
      multiply
      setMember
      push r:this, '+N5T', r:this, '+N5T'
      getMember
      push r:this, '0(}e'
      getMember
      push '(,J R'
      getMember
      multiply
      setMember
      push r:this, '=M5T', r:this, '=M5T'
      getMember
      push r:this, '0(}e'
      getMember
      push '(,J R'
      getMember
      multiply
      setMember
      push r:this, 'x', r:this, 'x'
      getMember
      push r:this, ',N5T'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      add
      setMember
      push r:this, 'y', r:this, 'y'
      getMember
      push r:this, '+N5T'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      add
      setMember
      push r:this, '_rotation', r:this, '_rotation'
      getMember
      push r:this, '=M5T'
      getMember
      add
      setMember
      push r:this, '3fEyH'
      getMember
      push UNDEF
      equals
      not
      not
      branchIfTrue label13
      push r:this, '3fEyH', r:this, '3fEyH'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
      push r:this, '3fEyH'
      getMember
      push 0.0
      lessThan
      not
      branchIfTrue label10
      push 0.0, r:this, '1T3j'
      callMethod
      pop
      branch label13
     label10:
      push r:this, '3fEyH'
      getMember
      push 10
      lessThan
      not
      branchIfTrue label13
      push r:this, '0_X42'
      getMember
      push 1
      strictEquals
      branchIfTrue label11
      branch label12
     label11:
      push r:this, '_xscale', r:this, '3fEyH'
      getMember
      push 10
      multiply
      setMember
      push r:this, '_yscale', r:this, '3fEyH'
      getMember
      push 10
      multiply
      setMember
      branch label13
     label12:
      push r:this, '_alpha', r:this, '3fEyH'
      getMember
      push 10
      multiply
      setMember
      branch label13
     label13:
      push r:this, '),+Xu'
      getMember
      not
      branchIfTrue label14
      push r:this, ',N5T'
      getMember
      push r:this, '+N5T'
      getMember
      push 2, 'Math'
      getVariable
      push 'atan2'
      callMethod
      setRegister r:3
      pop
      push r:this, '_rotation', r:3, 0.0174532925199433
      divide
      setMember
     label14:
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '1T3j'
    function2 () (r:1='this', r:2='super')
      push r:this, '0(}e'
      getMember
      push '*=bte'
      getMember
      push r:this, 2, r:this, '0(}e'
      getMember
      push '*p,2T'
      callMethod
      pop
      push 0.0, r:super, '1T3j'
      callMethod
      pop
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ',w(H'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label15:
    pop
  end // of initMovieClip 653

  defineMovieClip 654 // total frames: 0
  end // of defineMovieClip 654
  
  exportAssets
    654 as '__Packages.miniwave.sp.bads.ReineClaude'
  end // of exportAssets
  
  initMovieClip 654
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '5xtyJ(', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', 'type', ' DVkC', '0w*(((', '4k8;L', '()nBD', ',N5T', '+N5T', 'y', ',eX{I(', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '5xtyJ('
    getMember
    not
    not
    branchIfTrue label4
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '5xtyJ('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '5xtyJ('
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 80
      setMember
      push r:this, '0Pezx', 10
      setMember
      push r:this, 'type', 40
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:3
      pop
      push r:3, ',N5T', 3, 200
      random
      push 100
      subtract
      multiply
      push 100
      divide
      setMember
      push r:3, '+N5T', 7
      setMember
      push r:3, 'y', r:this, 'y'
      getMember
      push 12
      add
      setMember
      push 0.0, r:3, ',eX{I('
      callMethod
      pop
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '5xtyJ('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label4:
    pop
  end // of initMovieClip 654

  defineMovieClip 655 // total frames: 0
  end // of defineMovieClip 655
  
  exportAssets
    655 as '__Packages.miniwave.sp.bads.Kumquat'
  end // of exportAssets
  
  initMovieClip 655
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '{mbI[', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', 'type', ' DVkC', '0w*(((', '4k8;L', '()nBD', '}cj8F(', ',N5T', '+N5T', ',eX{I(', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '{mbI['
    getMember
    not
    not
    branchIfTrue label4
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '{mbI['
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '{mbI['
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 280
      setMember
      push r:this, '0Pezx', 8
      setMember
      push r:this, 'type', 37
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='super')
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:2
      pop
      push r:2, '}cj8F(', 15
      setMember
      push r:2, ',N5T', 4, 2
      random
      push 2
      multiply
      push 1
      subtract
      multiply
      setMember
      push r:2, '+N5T', 2
      setMember
      push 0.0, r:2, ',eX{I('
      callMethod
      pop
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '{mbI['
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label4:
    pop
  end // of initMovieClip 655

  defineMovieClip 656 // total frames: 0
  end // of defineMovieClip 656
  
  exportAssets
    656 as '__Packages.miniwave.sp.bads.Myrtille'
  end // of exportAssets
  
  initMovieClip 656
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '}5(HL', '=w)l', ']q}_', 'prototype', ',N5T', '+N5T', '*9Ep+(', '5i(', 'type', ' DVkC', '2umGl', '4k8;L', '6}jsa', '0(}e', '+3ul', '_visible', 'x', '[w;(', '(l;(', 'y', '2d[', '7J-V', 'Math', 'pow', '_rotation', 'atan2', ')]6(', '{r-z7', 'nextFrame', ']oVzo', '{]ckD', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '}5(HL'
    getMember
    not
    not
    branchIfTrue label16
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '}5(HL'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '}5(HL'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ',N5T', 0.0
      setMember
      push r:this, '+N5T', 0.0
      setMember
      push r:this, '*9Ep+(', FALSE
      setMember
      push r:this, '5i(', 2
      setMember
      push r:this, 'type', 26
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push r:this, '5i('
      getMember
      push 1
      equals
      dup
      not
      branchIfTrue label4
      pop
      push r:this, '*9Ep+('
      getMember
      not
     label4:
      not
      branchIfTrue label5
      push 0.0, r:this, '2umGl'
      callMethod
      pop
     label5:
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push r:this, '*9Ep+('
      getMember
      not
      branchIfTrue label11
      push 5
      setRegister r:3
      pop
      push 0.2
      setRegister r:4
      pop
      push r:this, '0(}e'
      getMember
      push '+3ul'
      getMember
      setRegister r:5
      pop
      push r:5, '_visible'
      getMember
      push TRUE
      equals
      not
      not
      branchIfTrue label6
      push 'x', r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '(l;('
      getMember
      push 2
      divide
      push 'y', -100, 2
      initObject
      setRegister r:5
      pop
     label6:
      push r:5, 'x'
      getMember
      push r:this, 'x'
      getMember
      subtract
      setRegister r:8
      pop
      push r:5, 'y'
      getMember
      push r:this, 'y'
      getMember
      subtract
      setRegister r:7
      pop
      push r:8, r:3
      greaterThan
      not
      branchIfTrue label7
      push r:this, ',N5T', r:this, ',N5T'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      push r:4
      multiply
      add
      setMember
     label7:
      push r:8, 0.0, r:3
      subtract
      lessThan
      not
      branchIfTrue label8
      push r:this, ',N5T', r:this, ',N5T'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      push r:4
      multiply
      subtract
      setMember
     label8:
      push r:7, r:3
      greaterThan
      not
      branchIfTrue label9
      push r:this, '+N5T', r:this, '+N5T'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      push r:4
      multiply
      add
      setMember
     label9:
      push r:7, 0.0, r:3
      subtract
      lessThan
      not
      branchIfTrue label10
      push r:this, '+N5T', r:this, '+N5T'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      push r:4
      multiply
      subtract
      setMember
     label10:
      push '2d['
      getVariable
      push '7J-V'
      getMember
      push 0.98, 2, 'Math'
      getVariable
      push 'pow'
      callMethod
      setRegister r:6
      pop
      push r:this, ',N5T', r:this, ',N5T'
      getMember
      push r:6
      multiply
      setMember
      push r:this, '+N5T', r:this, '+N5T'
      getMember
      push r:6
      multiply
      setMember
      push r:this, '_rotation', r:this, ',N5T'
      getMember
      push r:this, '+N5T'
      getMember
      push 2, 'Math'
      getVariable
      push 'atan2'
      callMethod
      push 0.0174532925199433
      divide
      push 90
      subtract
      setMember
      push r:this, 'x', r:this, 'x'
      getMember
      push r:this, ',N5T'
      getMember
      add
      setMember
      push r:this, 'y', r:this, 'y'
      getMember
      push r:this, '+N5T'
      getMember
      add
      setMember
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
     label11:
    end // of function 

    setMember
    push r:1, ')]6('
    function2 () (r:1='this')
      push r:this, '5i(', r:this, '5i('
      getMember
      decrement
      setMember
      push r:this, '5i('
      getMember
      push 0.0
      equals
      not
      branchIfTrue label12
      push 0.0, r:this, '{r-z7'
      callMethod
      pop
      branch label13
     label12:
      push 0.0, r:this, 'nextFrame'
      callMethod
      pop
     label13:
    end // of function 

    setMember
    push r:1, '2umGl'
    function2 () (r:1='this')
      push r:this, '*9Ep+(', TRUE
      setMember
      push r:this, ']oVzo', FALSE
      setMember
    end // of function 

    setMember
    push r:1, '{]ckD'
    function2 (r:3='t') (r:1='this', r:2='super')
      push r:this, '*9Ep+('
      getMember
      not
      branchIfTrue label14
      push 0.0, r:this, '{r-z7'
      callMethod
      pop
      branch label15
     label14:
      push r:t, 1, r:super, '{]ckD'
      callMethod
      pop
     label15:
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '}5(HL'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label16:
    pop
  end // of initMovieClip 656

  defineMovieClip 657 // total frames: 0
  end // of defineMovieClip 657
  
  exportAssets
    657 as '__Packages.miniwave.sp.bads.Coing'
  end // of exportAssets
  
  initMovieClip 657
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '3DsXM', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', 'type', ' DVkC', '0w*(((', '4k8;L', '()nBD', ',N5T', 'Math', 'cos', ';[G=L', '+N5T', 'sin', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '3DsXM'
    getMember
    not
    not
    branchIfTrue label4
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '3DsXM'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '3DsXM'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 200
      setMember
      push r:this, '0Pezx', 10
      setMember
      push r:this, 'type', 10
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:3
      pop
      push 57, 200
      random
      add
      push 100
      divide
      setRegister r:4
      pop
      push r:3, ',N5T', r:4, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push r:this, ';[G=L'
      getMember
      multiply
      setMember
      push r:3, '+N5T', r:4, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push r:this, ';[G=L'
      getMember
      multiply
      setMember
    end // of function 

    setMember
    push r:1, ';[G=L', 2.5
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '3DsXM'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label4:
    pop
  end // of initMovieClip 657

  defineMovieClip 658 // total frames: 0
  end // of defineMovieClip 658
  
  exportAssets
    658 as '__Packages.miniwave.sp.bads.Baies'
  end // of exportAssets
  
  initMovieClip 658
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', ';Ym8N', '=w)l', ']q}_', 'prototype', 'type', ' DVkC', '4k8;L', '{r-z7', '()nBD', ',N5T', '+N5T', '[pJN8(', '}cj8F(', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ';Ym8N'
    getMember
    not
    not
    branchIfTrue label6
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ';Ym8N'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ';Ym8N'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, 'type', 19
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '{r-z7'
    function2 () (r:1='this', r:2='super')
      push 0.0
      setRegister r:4
      pop
     label4:
      push r:4, 3
      lessThan
      not
      branchIfTrue label5
      push 0.0, r:this, '()nBD'
      callMethod
      setRegister r:3
      pop
      push r:3, ',N5T', 8, 200
      random
      push 100
      subtract
      multiply
      push 100
      divide
      setMember
      push r:3, '+N5T', 0.0, 3, 30
      random
      push 10
      divide
      add
      subtract
      setMember
      push r:3, '[pJN8(', 0.0
      setMember
      push r:3, '}cj8F(', 2
      setMember
      push r:4
      increment
      setRegister r:4
      pop
      branch label4
     label5:
      push 0.0, r:super, '{r-z7'
      callMethod
      pop
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ';Ym8N'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label6:
    pop
  end // of initMovieClip 658

  defineMovieClip 659 // total frames: 0
  end // of defineMovieClip 659
  
  exportAssets
    659 as '__Packages.miniwave.sp.bads.Radis'
  end // of exportAssets
  
  initMovieClip 659
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', ' G1SC', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', 'type', ' DVkC', '0w*(((', '4k8;L', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ' G1SC'
    getMember
    not
    not
    branchIfTrue label4
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ' G1SC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ' G1SC'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 130
      setMember
      push r:this, '0Pezx', 10
      setMember
      push r:this, 'type', 6
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ' G1SC'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label4:
    pop
  end // of initMovieClip 659

  defineMovieClip 660 // total frames: 0
  end // of defineMovieClip 660
  
  exportAssets
    660 as '__Packages.miniwave.box.Life'
  end // of exportAssets
  
  initMovieClip 660
    constants '_global', 'miniwave', 'Object', ';W{', '(_7D', '=w)l', '6Yx', 'prototype', '6KXx((', '3}f()(', '6}jsa', '7=bN', '{)zoW', '0(}e', ',1(R', '=vto', ')1]5F', '4Dcgs', 'attachMovie', '_x', '9V(', '_y', '(X(', 'size', ';*U}+', '8M -D', 'removeMovieClip', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{'
    getMember
    push '(_7D'
    getMember
    not
    not
    branchIfTrue label5
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '(_7D'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '(_7D'
    getMember
    push 'miniwave'
    getVariable
    push '6Yx'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '=w)l'
      callMethod
      pop
      push r:this, '6KXx((', 9079485
      setMember
      push r:this, '3}f()(', 16777215
      setMember
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push r:this, '7=bN'
      getMember
      push 2
      strictEquals
      branchIfTrue label3
      branch label4
     label3:
      branch label4
     label4:
    end // of function 

    setMember
    push r:1, '{)zoW'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '{)zoW'
      callMethod
      pop
      push '0(}e', r:this, ',1(R'
      getMember
      push '=vto'
      getMember
      push 1
      initObject
      push 10, ')1]5F', '4Dcgs', 4, r:this, 'attachMovie'
      callMethod
      pop
      push r:this, ')1]5F'
      getMember
      push '_x', r:this, '9V('
      getMember
      push 6
      subtract
      setMember
      push r:this, ')1]5F'
      getMember
      push '_y', r:this, '(X('
      getMember
      push 4
      subtract
      setMember
      push r:this, ')1]5F'
      getMember
      push 'size', 12
      setMember
    end // of function 

    setMember
    push r:1, ';*U}+'
    function2 (r:2='[g(') (r:1='this')
      push r:'[g(', 1, r:this, ')1]5F'
      getMember
      push ';*U}+'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '8M -D'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '8M -D'
      callMethod
      pop
      push 0.0, r:this, ')1]5F'
      getMember
      push 'removeMovieClip'
      callMethod
      pop
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '(_7D'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label5:
    pop
  end // of initMovieClip 660

  defineMovieClip 661 // total frames: 0
  end // of defineMovieClip 661
  
  exportAssets
    661 as '__Packages.miniwave.page.PowerUp'
  end // of exportAssets
  
  initMovieClip 661
    constants '_global', 'miniwave', 'Object', ',1(R', '+v-ZI', '=w)l', '];)H', 'prototype', 'size', '6(', 'h', 'onPress', ')1o+K', '=vto', '2v3VX', ')sY,G(', '1W(', 'width', '0W(', 'height', '9V(', '(X(', '+f}KA(', ';W{', '4h,c=', '3L9n1', 'type', '=C6yH', '67xo+', '9d[GQ', '[AB7p', '2=c41', 'récompense!', '9PO]k', 'Vous avez gagné un nouveau titem !!', '4k8(', 'bonus!', 'Une nouvelle mission a été débloqué dans la section bonus.', 'promotion!', 'Félicitation, votre nouveau grade est : ', '[w;(', '2u;W3', '\n', '- briefing -', 'Votre mission est de freiner le developpement des fruits mutants jaunes qui sevissent actuellement dans le secteur d\'ananas-centauri. \n', 'Nous venons d\'intercepter un message de l\'ennemi. Vous allez devoir faire face à une nouvelle escouadre qualifiée "d\'explosive" par ces démoniaques fruits mutants. Soyez très prudent !\n', 'Selon nos services de renseignement, les fruits mutants ont commencé a construire un canon a pulpe géant d\'une puissance colossale. Retrouvez-le et Détruisez-le.\n', 'L\'état-major a reçu ce matin une demande de cessez-le-feu de la part des fruits mutants. Nous avons besoin d\'un émissaire pour établir un contact avec eux\n', 'Une nouvelle offensive des fruits mutants a été lancé dans le secteur Sirion-Banana. Défendez au mieux la zone contre cette nouvelle vague.\n', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ',1(R'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ',1(R', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ',1(R'
    getMember
    push '+v-ZI'
    getMember
    not
    not
    branchIfTrue label14
    push 'miniwave'
    getVariable
    push ',1(R'
    getMember
    push '+v-ZI'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push ',1(R'
    getMember
    push '+v-ZI'
    getMember
    push 'miniwave'
    getVariable
    push '];)H'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, 'size'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label3
      push r:this, 'size', '6(', 160, 'h', 160, 2
      initObject
      setMember
     label3:
      push 0.0, r:super, '=w)l'
      callMethod
      pop
      push r:this, 'onPress'
      function2 () (r:1='this')
        push r:this, ')1o+K'
        getMember
        push 1, r:this, '=vto'
        getMember
        push '2v3VX'
        callMethod
        pop
      end // of function 

      setMember
    end // of function 

    setMember
    push r:1, ')sY,G('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ')sY,G('
      callMethod
      pop
      push 24
      setRegister r:6
      pop
      push '1W(', r:this, 'width'
      getMember
      push r:this, 'size'
      getMember
      push '6('
      getMember
      subtract
      push 2
      divide
      push '0W(', r:this, 'height'
      getMember
      push r:this, 'size'
      getMember
      push 'h'
      getMember
      subtract
      push 2
      divide
      push '9V(', r:this, 'size'
      getMember
      push '6('
      getMember
      push '(X(', r:this, 'size'
      getMember
      push 'h'
      getMember
      push '+f}KA(', 0.0, 5
      initObject
      setRegister r:3
      pop
      push r:this, ';W{', r:3, '4h,c=', 2, r:this, '3L9n1'
      callMethod
      setMember
      push r:this, 'type'
      getMember
      setRegister r:0
      push '=C6yH'
      strictEquals
      branchIfTrue label4
      push r:0, '67xo+'
      strictEquals
      branchIfTrue label5
      push r:0, '9d[GQ'
      strictEquals
      branchIfTrue label6
      push r:0, '[AB7p'
      strictEquals
      branchIfTrue label7
      branch label13
     label4:
      push 1, 1, r:this, ';W{'
      getMember
      push '2=c41'
      callMethod
      pop
      push 'récompense!', 0.0, 2, r:this, ';W{'
      getMember
      push '9PO]k'
      callMethod
      pop
      push 'Vous avez gagné un nouveau titem !!', 1, 2, r:this, ';W{'
      getMember
      push '9PO]k'
      callMethod
      pop
      branch label13
     label5:
      push 10, r:this, '4k8('
      getMember
      add
      push 1, r:this, ';W{'
      getMember
      push '2=c41'
      callMethod
      pop
      push 'bonus!', 0.0, 2, r:this, ';W{'
      getMember
      push '9PO]k'
      callMethod
      pop
      push 'Une nouvelle mission a été débloqué dans la section bonus.', 1, 2, r:this, ';W{'
      getMember
      push '9PO]k'
      callMethod
      pop
      branch label13
     label6:
      push 20, r:this, '4k8('
      getMember
      add
      push 1, r:this, ';W{'
      getMember
      push '2=c41'
      callMethod
      pop
      push 'promotion!', 0.0, 2, r:this, ';W{'
      getMember
      push '9PO]k'
      callMethod
      pop
      push 'Félicitation, votre nouveau grade est : ', r:this, '=vto'
      getMember
      push '[w;('
      getMember
      push '2u;W3'
      getMember
      push r:this, '4k8('
      getMember
      getMember
      add
      push '\n'
      add
      push 1, 2, r:this, ';W{'
      getMember
      push '9PO]k'
      callMethod
      pop
      branch label13
     label7:
      push 40, r:this, '4k8('
      getMember
      add
      push 1, r:this, ';W{'
      getMember
      push '2=c41'
      callMethod
      pop
      push '- briefing -', 0.0, 2, r:this, ';W{'
      getMember
      push '9PO]k'
      callMethod
      pop
      push r:this, '4k8('
      getMember
      setRegister r:0
      push 1
      strictEquals
      branchIfTrue label8
      push r:0, 0.0
      strictEquals
      branchIfTrue label9
      push r:0, 2
      strictEquals
      branchIfTrue label10
      push r:0, 3
      strictEquals
      branchIfTrue label11
      push r:0, 4
      strictEquals
      branchIfTrue label12
      branch label13
     label8:
      push 'Votre mission est de freiner le developpement des fruits mutants jaunes qui sevissent actuellement dans le secteur d\'ananas-centauri. \n', 1, 2, r:this, ';W{'
      getMember
      push '9PO]k'
      callMethod
      pop
      branch label13
     label9:
      push 'Nous venons d\'intercepter un message de l\'ennemi. Vous allez devoir faire face à une nouvelle escouadre qualifiée "d\'explosive" par ces démoniaques fruits mutants. Soyez très prudent !\n', 1, 2, r:this, ';W{'
      getMember
      push '9PO]k'
      callMethod
      pop
      branch label13
     label10:
      push 'Selon nos services de renseignement, les fruits mutants ont commencé a construire un canon a pulpe géant d\'une puissance colossale. Retrouvez-le et Détruisez-le.\n', 1, 2, r:this, ';W{'
      getMember
      push '9PO]k'
      callMethod
      pop
      branch label13
     label11:
      push 'L\'état-major a reçu ce matin une demande de cessez-le-feu de la part des fruits mutants. Nous avons besoin d\'un émissaire pour établir un contact avec eux\n', 1, 2, r:this, ';W{'
      getMember
      push '9PO]k'
      callMethod
      pop
      branch label13
     label12:
      push 'Une nouvelle offensive des fruits mutants a été lancé dans le secteur Sirion-Banana. Défendez au mieux la zone contre cette nouvelle vague.\n', 1, 2, r:this, ';W{'
      getMember
      push '9PO]k'
      callMethod
      pop
      branch label13
     label13:
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push ',1(R'
    getMember
    push '+v-ZI'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label14:
    pop
  end // of initMovieClip 661

  defineMovieClip 662 // total frames: 0
  end // of defineMovieClip 662
  
  exportAssets
    662 as '__Packages.miniwave.box.PowerUp'
  end // of exportAssets
  
  initMovieClip 662
    constants '_global', 'miniwave', 'Object', ';W{', '+v-ZI', '=w)l', '6Yx', 'prototype', '02nS (', '_visible', 'field0', '_width', '9V(', 'field1', '_x', '_height', ',dl', '(muaU', '6}jsa', '9PO]k', 'field', 'text', '_y', '(X(', 'textHeight', 'Math', 'round', '2=c41', 'gotoAndStop', '{)zoW', '[g(', '8M -D', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{'
    getMember
    push '+v-ZI'
    getMember
    not
    not
    branchIfTrue label4
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '+v-ZI'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '+v-ZI'
    getMember
    push 'miniwave'
    getVariable
    push '6Yx'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '=w)l'
      callMethod
      pop
      push r:this, '02nS ('
      getMember
      push '_visible', FALSE
      setMember
      push r:this, '02nS ('
      getMember
      push 'field0'
      getMember
      push '_width', r:this, '9V('
      getMember
      setMember
      push r:this, '02nS ('
      getMember
      push 'field1'
      getMember
      push '_x', 5
      setMember
      push r:this, '02nS ('
      getMember
      push 'field1'
      getMember
      push '_width', r:this, '9V('
      getMember
      push 10
      subtract
      setMember
      push r:this, '02nS ('
      getMember
      push 'field1'
      getMember
      push '_height', r:this, '9V('
      getMember
      push r:this, ',dl'
      getMember
      subtract
      setMember
      push r:this, '02nS ('
      getMember
      push '(muaU'
      getMember
      push '_x', r:this, '9V('
      getMember
      push r:this, '02nS ('
      getMember
      push '(muaU'
      getMember
      push '_width'
      getMember
      subtract
      push 2
      divide
      setMember
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '9PO]k'
    function2 (r:3='4k8(', r:4='}aa') (r:1='this')
      push r:this, '02nS ('
      getMember
      push 'field', r:'4k8('
      add
      getMember
      setRegister r:2
      pop
      push r:2, 'text', r:'}aa'
      setMember
      push r:'4k8(', 1
      equals
      not
      branchIfTrue label3
      push r:2, '_y', r:this, ',dl'
      getMember
      push r:this, '(X('
      getMember
      push r:this, ',dl'
      getMember
      subtract
      push 2
      divide
      add
      push r:2, 'textHeight'
      getMember
      push 2
      divide
      push 1, 'Math'
      getVariable
      push 'round'
      callMethod
      subtract
      setMember
     label3:
    end // of function 

    setMember
    push r:1, '2=c41'
    function2 (r:2='23V R') (r:1='this')
      push r:'23V R', 1, r:this, '02nS ('
      getMember
      push '(muaU'
      getMember
      push 'gotoAndStop'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '{)zoW'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '{)zoW'
      callMethod
      pop
      push r:this, '02nS ('
      getMember
      push '_visible', TRUE
      setMember
      push r:this, '[g('
      getMember
      push 1
      add
      push 1, r:this, '02nS ('
      getMember
      push '(muaU'
      getMember
      push 'gotoAndStop'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '8M -D'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '8M -D'
      callMethod
      pop
      push r:this, '02nS ('
      getMember
      push '_visible', FALSE
      setMember
    end // of function 

    setMember
    push r:1, ',dl', 78
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '+v-ZI'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label4:
    pop
  end // of initMovieClip 662

  defineMovieClip 663 // total frames: 0
  end // of defineMovieClip 663
  
  exportAssets
    663 as '__Packages.miniwave.sp.bads.Peche'
  end // of exportAssets
  
  initMovieClip 663
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', ')lZM;', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', 'type', ' DVkC', '0w*(((', '4k8;L', '()nBD', ',N5T', 'Math', 'cos', '+N5T', 'sin', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ')lZM;'
    getMember
    not
    not
    branchIfTrue label4
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ')lZM;'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ')lZM;'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 220
      setMember
      push r:this, '0Pezx', 6
      setMember
      push r:this, 'type', 30
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='super')
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:2
      pop
      push 78.53981633974483
      setRegister r:3
      pop
      push r:3, 3
      multiply
      push 2, r:3
      multiply
      random
      subtract
      push 100
      divide
      setRegister r:4
      pop
      push r:2, ',N5T', r:4, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push 6
      multiply
      setMember
      push r:2, '+N5T', r:4, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push 6
      multiply
      setMember
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ')lZM;'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label4:
    pop
  end // of initMovieClip 663

  defineMovieClip 664 // total frames: 0
  end // of defineMovieClip 664
  
  exportAssets
    664 as '__Packages.miniwave.sp.bads.Aubergine'
  end // of exportAssets
  
  initMovieClip 664
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '6y[ ((', '=w)l', ']q}_', 'prototype', 'type', '7=bN', ' DVkC', 'target', '0(}e', '*CcbI', '3fEyH', ';qbSN', ',c(', 'x', '+c(', 'y', ',N5T', '+N5T', '4k8;L', '6}jsa', '_rotation', 'Math', 'max', 'min', '2d[', '7J-V', '(,J R', 'atan2', 'sqrt', '15q9I(', '-2)ve', '{r-z7', '_x', '_y', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '6y[ (('
    getMember
    not
    not
    branchIfTrue label22
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '6y[ (('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '6y[ (('
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, 'type', 28
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
      push r:this, '7=bN', 0.0
      setMember
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push r:this, '7=bN'
      getMember
      push 0.0
      strictEquals
      branchIfTrue label4
      branch label6
     label4:
      push 300
      random
      not
      not
      branchIfTrue label5
      push r:this, '7=bN', 1
      setMember
      push r:this, 'target', 0.0, r:this, '0(}e'
      getMember
      push '*CcbI'
      callMethod
      setMember
      push r:this, '3fEyH', r:this, 'target'
      getMember
      push 1, r:this, ';qbSN'
      callMethod
      push 6.6
      divide
      setMember
      push r:this, ',c(', r:this, 'x'
      getMember
      setMember
      push r:this, '+c(', r:this, 'y'
      getMember
      setMember
      push r:this, ',N5T', 0.0
      setMember
      push r:this, '+N5T', 0.0
      setMember
     label5:
      branch label6
     label6:
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push r:this, '7=bN'
      getMember
      setRegister r:0
      push 0.0
      strictEquals
      branchIfTrue label7
      push r:0, 1
      strictEquals
      branchIfTrue label8
      branch label15
     label7:
      push r:this, '_rotation', r:this, '_rotation'
      getMember
      push 15, r:this, '_rotation'
      getMember
      push 0.4
      multiply
      push -15, 2, 'Math'
      getVariable
      push 'max'
      callMethod
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      subtract
      setMember
      branch label15
     label8:
      push 1
      setRegister r:3
      pop
      push 0.5
      setRegister r:4
      pop
      push r:this, 'target'
      getMember
      push 'x'
      getMember
      push r:this, ',c('
      getMember
      subtract
      setRegister r:8
      pop
      push r:this, 'target'
      getMember
      push 'y'
      getMember
      push r:this, '+c('
      getMember
      subtract
      setRegister r:7
      pop
      push r:8, r:3
      greaterThan
      not
      branchIfTrue label9
      push r:this, ',N5T', r:this, ',N5T'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      push r:4
      multiply
      add
      setMember
     label9:
      push r:8, 0.0, r:3
      subtract
      lessThan
      not
      branchIfTrue label10
      push r:this, ',N5T', r:this, ',N5T'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      push r:4
      multiply
      subtract
      setMember
     label10:
      push r:7, r:3
      greaterThan
      not
      branchIfTrue label11
      push r:this, '+N5T', r:this, '+N5T'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      push r:4
      multiply
      add
      setMember
     label11:
      push r:7, 0.0, r:3
      subtract
      lessThan
      not
      branchIfTrue label12
      push r:this, '+N5T', r:this, '+N5T'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      push r:4
      multiply
      subtract
      setMember
     label12:
      push r:this, ',N5T', r:this, ',N5T'
      getMember
      push r:this, '0(}e'
      getMember
      push '(,J R'
      getMember
      multiply
      setMember
      push r:this, '+N5T', r:this, '+N5T'
      getMember
      push r:this, '0(}e'
      getMember
      push '(,J R'
      getMember
      multiply
      setMember
      push r:this, ',c(', r:this, ',c('
      getMember
      push r:this, ',N5T'
      getMember
      add
      setMember
      push r:this, '+c(', r:this, '+c('
      getMember
      push r:this, '+N5T'
      getMember
      add
      setMember
      push r:this, '_rotation', r:this, ',N5T'
      getMember
      push r:this, '+N5T'
      getMember
      push 2, 'Math'
      getVariable
      push 'atan2'
      callMethod
      push 0.0174532925199433
      divide
      push 90
      subtract
      setMember
      push r:this, '3fEyH'
      getMember
      push 0.0
      greaterThan
      not
      branchIfTrue label13
      push r:this, '3fEyH', r:this, '3fEyH'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
      branch label14
     label13:
      push r:this, 'target', r:this
      setMember
      push r:this, ',c('
      getMember
      push r:this, 'x'
      getMember
      subtract
      setRegister r:6
      pop
      push r:this, '+c('
      getMember
      push r:this, 'y'
      getMember
      subtract
      setRegister r:5
      pop
      push r:5, r:5
      multiply
      push r:6, r:6
      multiply
      add
      push 1, 'Math'
      getVariable
      push 'sqrt'
      callMethod
      setRegister r:9
      pop
      push r:9, 6
      lessThan
      not
      branchIfTrue label14
      push r:this, '7=bN', 0.0
      setMember
     label14:
      push r:this, '+c('
      getMember
      push r:this, ',c('
      getMember
      push 2, r:this, '15q9I('
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
      branch label15
     label15:
    end // of function 

    setMember
    push r:1, '-2)ve'
    function2 ('x', 'y') (r:1='this', r:2='super')
      push r:this, '7=bN'
      getMember
      push 1
      equals
      not
      branchIfTrue label16
      push r:this, '+c('
      getMember
      push r:this, ',c('
      getMember
      push 2, r:super, '-2)ve'
      callMethod
      pop
      branch label17
     label16:
      push r:this, 'y'
      getMember
      push r:this, 'x'
      getMember
      push 2, r:super, '-2)ve'
      callMethod
      pop
     label17:
    end // of function 

    setMember
    push r:1, '{r-z7'
    function2 (r:5='9sv8-') (r:1='this', r:2='super')
      push r:this, '7=bN'
      getMember
      push 1
      equals
      not
      branchIfTrue label18
      push r:this, 'x'
      getMember
      setRegister r:4
      pop
      push r:this, 'y'
      getMember
      setRegister r:3
      pop
      push r:this, 'x', r:this, ',c('
      getMember
      setMember
      push r:this, 'y', r:this, '+c('
      getMember
      setMember
      push r:'9sv8-', 1, r:super, '{r-z7'
      callMethod
      pop
      push r:this, 'x', r:4
      setMember
      push r:this, 'y', r:3
      setMember
      branch label19
     label18:
      push r:'9sv8-', 1, r:super, '{r-z7'
      callMethod
      pop
     label19:
    end // of function 

    setMember
    push r:1, '4k8;L'
    function2 () (r:1='this', r:2='super')
      push r:this, '7=bN'
      getMember
      push 1
      equals
      not
      branchIfTrue label20
      push r:this, '_x', r:this, ',c('
      getMember
      setMember
      push r:this, '_y', r:this, '+c('
      getMember
      setMember
      branch label21
     label20:
      push 0.0, r:super, '4k8;L'
      callMethod
      pop
     label21:
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '6y[ (('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label22:
    pop
  end // of initMovieClip 664

  defineMovieClip 665 // total frames: 0
  end // of defineMovieClip 665
  
  exportAssets
    665 as '__Packages.miniwave.sp.bads.Fraise'
  end // of exportAssets
  
  initMovieClip 665
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '21AKR', '=w)l', ']q}_', 'prototype', 'type', ' DVkC', '4k8;L', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '21AKR'
    getMember
    not
    not
    branchIfTrue label4
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '21AKR'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '21AKR'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, 'type', 0.0
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '21AKR'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label4:
    pop
  end // of initMovieClip 665

  defineMovieClip 666 // total frames: 0
  end // of defineMovieClip 666
  
  exportAssets
    666 as '__Packages.miniwave.page.Shop'
  end // of exportAssets
  
  initMovieClip 666
    constants '_global', 'miniwave', 'Object', ',1(R', ' q7M', '=w)l', '];)H', 'prototype', '[M1gG', ')sY,G(', 'width', 'xMax', 'height', 'yMax', '(hz](', '1W(', '0W(', '9V(', '(X(', '+f}KA(', ')8PK,', '8 +xs', '3L9n1', '11DyK(', '[g(', 'name', 'RETOUR', ')A4ho', '=vto', '[w;(', '=Y(', '$mode', '[YN{D(', '-UhxE', '=aUoo', '$shop', '6XA2Z', '4Pzmp', ' c2q', '+GS_=(', '2v3VX', 'Mission 6', 'Mission 5', 'Mission 4', 'Wallpaper 2', 'Wallpaper 1', 'Smiley 3', 'Smiley 2', 'Smiley 1', '=Jm;m', 'Letter Invader', 'Mission 3', 'Mission 2', 'Mission 1', '+-J,I', '{(Fi(', '2asd-', '4WDT[', '5TJ=;', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ',1(R'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ',1(R', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ',1(R'
    getMember
    push ' q7M'
    getMember
    not
    not
    branchIfTrue label13
    push 'miniwave'
    getVariable
    push ',1(R'
    getMember
    push ' q7M'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push ',1(R'
    getMember
    push ' q7M'
    getMember
    push 'miniwave'
    getVariable
    push '];)H'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:this, '[M1gG'
      callMethod
      pop
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ')sY,G('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ')sY,G('
      callMethod
      pop
      push 5
      setRegister r:9
      pop
      push r:this, 'width'
      getMember
      push r:this, 'xMax'
      getMember
      push 1
      subtract
      push r:9
      multiply
      subtract
      push r:this, 'xMax'
      getMember
      divide
      setRegister r:12
      pop
      push r:this, 'height'
      getMember
      push r:this, 'yMax'
      getMember
      push 1
      subtract
      push r:9
      multiply
      push r:this, '(hz]('
      getMember
      add
      push 7
      add
      subtract
      push r:this, 'yMax'
      getMember
      divide
      setRegister r:11
      pop
      push '1W(', 0.0, '0W(', r:this, 'height'
      getMember
      push r:this, '(hz]('
      getMember
      subtract
      push '9V(', r:this, 'width'
      getMember
      push 105
      subtract
      push '(X(', r:this, '(hz]('
      getMember
      push '+f}KA(', 15, 5
      initObject
      setRegister r:7
      pop
      push r:this, ')8PK,', r:7, '8 +xs', 2, r:this, '3L9n1'
      callMethod
      setMember
      push 0.0, r:this, ')8PK,'
      getMember
      push '11DyK('
      callMethod
      pop
      push '[g(', 100, '1W(', r:this, 'width'
      getMember
      push 100
      subtract
      push '0W(', r:this, 'height'
      getMember
      push r:this, '(hz]('
      getMember
      subtract
      push '+f}KA(', 35, 'name', 'RETOUR', 5
      initObject
      setRegister r:7
      pop
      push r:7, ')A4ho', 2, r:this, '3L9n1'
      callMethod
      setRegister r:15
      pop
      push 0.0
      setRegister r:4
      pop
      push r:this, '=vto'
      getMember
      push '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      setRegister r:10
      pop
      push 0.0
      setRegister r:8
      pop
     label3:
      push r:8, r:this, 'yMax'
      getMember
      lessThan
      not
      branchIfTrue label10
      push 0.0
      setRegister r:5
      pop
     label4:
      push r:5, r:this, 'xMax'
      getMember
      lessThan
      not
      branchIfTrue label9
      push r:4
      setRegister r:3
      pop
      push r:4, 5
      equals
      dup
      not
      branchIfTrue label5
      pop
      push r:10, '$mode'
      getMember
      push 1
      getMember
      push 0.0
      getMember
      push 0.0
      equals
      not
     label5:
      not
      branchIfTrue label6
      push 15
      setRegister r:3
      pop
     label6:
      push r:4, 6
      equals
      dup
      not
      branchIfTrue label7
      pop
      push r:10, '$mode'
      getMember
      push 1
      getMember
      push 1
      getMember
      push 0.0
      equals
      not
     label7:
      not
      branchIfTrue label8
      push 16
      setRegister r:3
      pop
     label8:
      push r:this, '[YN{D('
      getMember
      push r:3
      getMember
      setRegister r:6
      pop
      push '[g(', r:3, '1W(', r:5, r:12, r:9
      add
      multiply
      push '0W(', r:8, r:11, r:9
      add
      multiply
      push '9V(', r:12, '(X(', r:11, 'name', r:6, 'name'
      getMember
      push '-UhxE', r:6, '-UhxE'
      getMember
      push ')8PK,', r:this, ')8PK,'
      getMember
      push '=aUoo', r:this, '=vto'
      getMember
      push '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$shop'
      getMember
      push r:3
      getMember
      not
      push '+f}KA(', r:4, 3
      multiply
      push 10
      initObject
      setRegister r:7
      pop
      push r:7, '6XA2Z', 2, r:this, '3L9n1'
      callMethod
      setRegister r:15
      pop
      push r:4
      increment
      setRegister r:4
      pop
      push r:5
      increment
      setRegister r:5
      pop
      branch label4
     label9:
      push r:8
      increment
      setRegister r:8
      pop
      branch label3
     label10:
    end // of function 

    setMember
    push r:1, '4Pzmp'
    function2 (r:3='[g(') (r:1='this')
      push r:'[g(', 100
      strictEquals
      branchIfTrue label11
      branch label12
     label11:
      push ' c2q', '+GS_=(', 1
      initObject
      push 1, r:this, '=vto'
      getMember
      push '2v3VX'
      callMethod
      pop
      branch label12
     label12:
    end // of function 

    setMember
    push r:1, '[M1gG'
    function2 () (r:1='this')
      push r:this, '[YN{D(', 'name', 'Mission 6', '-UhxE', 80, 2
      initObject
      push 'name', 'Mission 5', '-UhxE', 400, 2
      initObject
      push 'name', 'Mission 4', '-UhxE', 200, 2
      initObject
      push 'name', 'Wallpaper 2', '-UhxE', 2400, 2
      initObject
      push 'name', 'Wallpaper 1', '-UhxE', 1600, 2
      initObject
      push 'name', 'Smiley 3', '-UhxE', 480, 2
      initObject
      push 'name', 'Smiley 2', '-UhxE', 220, 2
      initObject
      push 'name', 'Smiley 1', '-UhxE', 30, 2
      initObject
      push 'name', '=Jm;m', '-UhxE', 120, 2
      initObject
      push 'name', 'Letter Invader', '-UhxE', 120, 2
      initObject
      push 'name', 'Mission 3', '-UhxE', 80, 2
      initObject
      push 'name', 'Mission 2', '-UhxE', 50, 2
      initObject
      push 'name', 'Mission 1', '-UhxE', 10, 2
      initObject
      push 'name', '+-J,I', '-UhxE', 680, 2
      initObject
      push 'name', '{(Fi(', '-UhxE', 320, 2
      initObject
      push 'name', '2asd-', '-UhxE', 160, 2
      initObject
      push 'name', '4WDT[', '-UhxE', 140, 2
      initObject
      push 'name', '5TJ=;', '-UhxE', 80, 2
      initObject
      push 18
      initArray
      setMember
    end // of function 

    setMember
    push r:1, '(hz](', 20
    setMember
    push r:1, 'xMax', 5
    setMember
    push r:1, 'yMax', 3
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push ',1(R'
    getMember
    push ' q7M'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label13:
    pop
  end // of initMovieClip 666

  defineMovieClip 667 // total frames: 0
  end // of defineMovieClip 667
  
  exportAssets
    667 as '__Packages.miniwave.box.Credit'
  end // of exportAssets
  
  initMovieClip 667
    constants '_global', 'miniwave', 'Object', ';W{', ')JxRJ(', '=w)l', '6Yx', 'prototype', 'field', '_visible', '(JrN', '{)zoW', '_width', '9V(', '8M -D', '11DyK(', ']Lca', ',1(R', '=vto', '[w;(', '=Y(', '$credit', '_x', 'textWidth', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{'
    getMember
    push ')JxRJ('
    getMember
    not
    not
    branchIfTrue label3
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push ')JxRJ('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push ')JxRJ('
    getMember
    push 'miniwave'
    getVariable
    push '6Yx'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '=w)l'
      callMethod
      pop
      push r:this, 'field'
      getMember
      push '_visible', FALSE
      setMember
      push r:this, '(JrN'
      getMember
      push '_visible', FALSE
      setMember
    end // of function 

    setMember
    push r:1, '{)zoW'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '{)zoW'
      callMethod
      pop
      push r:this, 'field'
      getMember
      push '_visible', TRUE
      setMember
      push r:this, '(JrN'
      getMember
      push '_visible', TRUE
      setMember
      push r:this, 'field'
      getMember
      push '_width', r:this, '9V('
      getMember
      setMember
    end // of function 

    setMember
    push r:1, '8M -D'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '8M -D'
      callMethod
      pop
      push r:this, 'field'
      getMember
      push '_visible', FALSE
      setMember
      push r:this, '(JrN'
      getMember
      push '_visible', FALSE
      setMember
    end // of function 

    setMember
    push r:1, '11DyK('
    function2 () (r:1='this')
      push r:this, ']Lca', r:this, ',1(R'
      getMember
      push '=vto'
      getMember
      push '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$credit'
      getMember
      setMember
      push r:this, '(JrN'
      getMember
      push '_x', r:this, '9V('
      getMember
      push 2
      divide
      push r:this, 'field'
      getMember
      push 'textWidth'
      getMember
      push 2
      divide
      add
      setMember
      push r:this, 'field'
      getMember
      push '_x', -11
      setMember
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push ';W{'
    getMember
    push ')JxRJ('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label3:
    pop
  end // of initMovieClip 667

  defineMovieClip 668 // total frames: 0
  end // of defineMovieClip 668
  
  exportAssets
    668 as '__Packages.miniwave.sp.bads.Lemon'
  end // of exportAssets
  
  initMovieClip 668
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', ',eeh7', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', 'type', ' DVkC', '0w*(((', '4k8;L', '()nBD', '+N5T', '}cj8F(', '_rotation', '[pJN8(', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ',eeh7'
    getMember
    not
    not
    branchIfTrue label4
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ',eeh7'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ',eeh7'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 400
      setMember
      push r:this, '0Pezx', 1
      setMember
      push r:this, 'type', 42
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='super')
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:2
      pop
      push r:2, '+N5T', 2.2
      setMember
      push r:2, '}cj8F(', 17
      setMember
      push r:2, '_rotation', 0.0
      setMember
      push r:2, '[pJN8(', 5
      setMember
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ',eeh7'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label4:
    pop
  end // of initMovieClip 668

  defineMovieClip 669 // total frames: 0
  end // of defineMovieClip 669
  
  exportAssets
    669 as '__Packages.miniwave.sp.bads.Kiwi'
  end // of exportAssets
  
  initMovieClip 669
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '0(7E', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', 'type', ' DVkC', '0w*(((', '4k8;L', '()nBD', '];i=-', '-;]AP', ',N5T', 'Math', 'cos', '+N5T', 'sin', '}cj8F(', '_rotation', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '0(7E'
    getMember
    not
    not
    branchIfTrue label6
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '0(7E'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '0(7E'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 360
      setMember
      push r:this, '0Pezx', 1
      setMember
      push r:this, 'type', 39
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='this', r:2='super')
      push 0.0
      setRegister r:4
      pop
     label4:
      push r:4, r:this, '];i=-'
      getMember
      lessThan
      not
      branchIfTrue label5
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:3
      pop
      push 1.570796326794897, r:this, '-;]AP'
      getMember
      push r:4, r:this, '];i=-'
      getMember
      push 1
      subtract
      divide
      push 2
      multiply
      push 1
      subtract
      multiply
      add
      setRegister r:5
      pop
      push r:3, ',N5T', r:5, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push 3.5
      multiply
      setMember
      push r:3, '+N5T', r:5, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push 3.5
      multiply
      setMember
      push r:3, '}cj8F(', 16
      setMember
      push r:3, '_rotation', 360
      random
      setMember
      push r:4
      increment
      setRegister r:4
      pop
      branch label4
     label5:
    end // of function 

    setMember
    push r:1, '];i=-', 8
    setMember
    push r:1, '-;]AP', 0.8
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '0(7E'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label6:
    pop
  end // of initMovieClip 669

  defineMovieClip 670 // total frames: 0
  end // of defineMovieClip 670
  
  exportAssets
    670 as '__Packages.miniwave.sp.bads.Scarab'
  end // of exportAssets
  
  initMovieClip 670
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '3d1+*', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', '=gs5y', 'type', ' DVkC', '0w*(((', '2d[', '7J-V', 'y', '1x{f', 'x', '0(}e', '1h6g9(', '45(', '4k8;L', '6}jsa', '()nBD', '1U_vK', '+N5T', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '3d1+*'
    getMember
    not
    not
    branchIfTrue label6
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '3d1+*'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '3d1+*'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 400
      setMember
      push r:this, '0Pezx', 4
      setMember
      push r:this, '=gs5y', 0.0
      setMember
      push r:this, 'type', 36
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push r:this, '=gs5y'
      getMember
      push 0.0
      lessThan
      not
      branchIfTrue label5
      push 240, '2d['
      getVariable
      push '7J-V'
      getMember
      divide
      random
      not
      dup
      not
      branchIfTrue label4
      pop
      push 12, r:this, 'y'
      getMember
      push r:this, '1x{f'
      getMember
      add
      push r:this, 'x'
      getMember
      push 3, r:this, '0(}e'
      getMember
      push '1h6g9('
      callMethod
     label4:
      not
      branchIfTrue label5
      push r:this, '45(', r:this, '45('
      getMember
      push r:this, '1x{f'
      getMember
      add
      setMember
      push r:this, '=gs5y', 12
      setMember
     label5:
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push r:this, '=gs5y', r:this, '=gs5y'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='super')
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:2
      pop
      push r:2, '1U_vK', 10
      setMember
      push r:2, '+N5T', 4
      setMember
    end // of function 

    setMember
    push r:1, '1x{f', 24
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '3d1+*'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label6:
    pop
  end // of initMovieClip 670

  defineMovieClip 671 // total frames: 0
  end // of defineMovieClip 671
  
  exportAssets
    671 as '__Packages.miniwave.box.ShopSlot'
  end // of exportAssets
  
  initMovieClip 671
    constants '_global', 'miniwave', 'Object', ';W{', '2j0pB(', '=w)l', '6Yx', 'prototype', '(p4(', '_visible', 'field', '{)zoW', '_width', '9V(', '[g(', '_xscale', '_yscale', '_x', '_y', '(X(', 'text', '-UhxE', 'gotoAndStop', '*vz', ';F1j,(', 'attachMovie', 'onPress', '_parent', '4Pzmp', '8M -D', ',1(R', '=vto', '[w;(', '=Y(', '$credit', '1OeZs', ';*b', 'play', '$shop', ')8PK,', '11DyK(', ']*(q', '$ship', '$ship0', '*0GPC', 'giveItem', '$mode', '$smiley_love', '$smiley_laugh', '$smiley_twirl', '$wpMinistar', '$wpNostromo', '$stats', '$play', '$main', '$mission', '$survival', '$letter', '-)', '$buy', 'push', 'saveSlot', '3x_R9(', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{'
    getMember
    push '2j0pB('
    getMember
    not
    not
    branchIfTrue label17
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '2j0pB('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '2j0pB('
    getMember
    push 'miniwave'
    getVariable
    push '6Yx'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '=w)l'
      callMethod
      pop
      push r:this, '(p4('
      getMember
      push '_visible', FALSE
      setMember
      push r:this, 'field'
      getMember
      push '_visible', FALSE
      setMember
    end // of function 

    setMember
    push r:1, '{)zoW'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '{)zoW'
      callMethod
      pop
      push r:this, '(p4('
      getMember
      push '_visible', TRUE
      setMember
      push r:this, 'field'
      getMember
      push '_visible', TRUE
      setMember
      push r:this, 'field'
      getMember
      push '_width', r:this, '9V('
      getMember
      setMember
      push r:this, '[g('
      getMember
      push 10
      lessThan
      dup
      branchIfTrue label3
      pop
      push r:this, '[g('
      getMember
      push 12
      greaterThan
     label3:
      not
      branchIfTrue label4
      push r:this, '(p4('
      getMember
      push '_xscale', r:this, '9V('
      getMember
      push 10
      subtract
      setMember
      push r:this, '(p4('
      getMember
      push '_yscale', r:this, '9V('
      getMember
      push 10
      subtract
      setMember
     label4:
      push r:this, '(p4('
      getMember
      push '_x', r:this, '9V('
      getMember
      push 2
      divide
      setMember
      push r:this, '(p4('
      getMember
      push '_y', r:this, '(X('
      getMember
      push 2
      divide
      push 6
      add
      setMember
      push r:this, 'field'
      getMember
      push 'text', r:this, '-UhxE'
      getMember
      setMember
      push r:this, '[g('
      getMember
      push 1
      add
      push 1, r:this, '(p4('
      getMember
      push 'gotoAndStop'
      callMethod
      pop
      push 10, '*vz', ';F1j,(', 3, r:this, 'attachMovie'
      callMethod
      pop
      push r:this, '*vz'
      getMember
      push '_xscale', r:this, '9V('
      getMember
      setMember
      push r:this, '*vz'
      getMember
      push '_yscale', r:this, '(X('
      getMember
      setMember
      push r:this, '*vz'
      getMember
      push 'onPress'
      function2 () (r:1='this')
        push 0.0, r:this, '_parent'
        getMember
        push '4Pzmp'
        callMethod
        pop
      end // of function 

      setMember
    end // of function 

    setMember
    push r:1, '8M -D'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '8M -D'
      callMethod
      pop
      push r:this, '(p4('
      getMember
      push '_visible', FALSE
      setMember
      push r:this, 'field'
      getMember
      push '_visible', FALSE
      setMember
      push r:this, '*vz'
      getMember
      push '_visible', FALSE
      setMember
    end // of function 

    setMember
    push r:1, '4Pzmp'
    function2 () (r:1='this')
      push r:this, ',1(R'
      getMember
      push '=vto'
      getMember
      push '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      setRegister r:2
      pop
      push r:this, '-UhxE'
      getMember
      push r:2, '$credit'
      getMember
      greaterThan
      not
      not
      branchIfTrue label15
      push '1OeZs', 1, r:this, ',1(R'
      getMember
      push '=vto'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push 'play'
      callMethod
      pop
      push r:2, '$shop'
      getMember
      push r:this, '[g('
      getMember
      push 0.0
      setMember
      push r:2, '$credit', r:2, '$credit'
      getMember
      push r:this, '-UhxE'
      getMember
      subtract
      setMember
      push 0.0, r:this, ')8PK,'
      getMember
      push '11DyK('
      callMethod
      pop
      push 0.0, r:this, ']*(q'
      callMethod
      pop
      push r:this, '[g('
      getMember
      setRegister r:0
      push 0.0
      strictEquals
      branchIfTrue label5
      push r:0, 1
      strictEquals
      branchIfTrue label5
      push r:0, 2
      strictEquals
      branchIfTrue label5
      push r:0, 3
      strictEquals
      branchIfTrue label5
      push r:0, 4
      strictEquals
      branchIfTrue label5
      push r:0, 5
      strictEquals
      branchIfTrue label6
      push r:0, 6
      strictEquals
      branchIfTrue label6
      push r:0, 7
      strictEquals
      branchIfTrue label6
      push r:0, 8
      strictEquals
      branchIfTrue label7
      push r:0, 9
      strictEquals
      branchIfTrue label7
      push r:0, 10
      strictEquals
      branchIfTrue label8
      push r:0, 11
      strictEquals
      branchIfTrue label9
      push r:0, 12
      strictEquals
      branchIfTrue label10
      push r:0, 13
      strictEquals
      branchIfTrue label11
      push r:0, 14
      strictEquals
      branchIfTrue label12
      push r:0, 15
      strictEquals
      branchIfTrue label13
      push r:0, 16
      strictEquals
      branchIfTrue label13
      push r:0, 17
      strictEquals
      branchIfTrue label13
      branch label14
     label5:
      push r:2, '$ship'
      getMember
      push r:this, '[g('
      getMember
      push 1
      add
      push 1
      setMember
      push '$ship0', r:this, '[g('
      getMember
      push 1
      add
      add
      push 1, r:this, ',1(R'
      getMember
      push '=vto'
      getMember
      push '[w;('
      getMember
      push '*0GPC'
      getMember
      push 'giveItem'
      callMethod
      pop
      branch label14
     label6:
      push r:2, '$mode'
      getMember
      push 1
      getMember
      push r:this, '[g('
      getMember
      push 5
      subtract
      push 1
      setMember
      branch label14
     label7:
      push r:2, '$mode'
      getMember
      push 2
      getMember
      push r:this, '[g('
      getMember
      push 8
      subtract
      push 1
      setMember
      branch label14
     label8:
      push '$smiley_love', 1, r:this, ',1(R'
      getMember
      push '=vto'
      getMember
      push '[w;('
      getMember
      push '*0GPC'
      getMember
      push 'giveItem'
      callMethod
      pop
      branch label14
     label9:
      push '$smiley_laugh', 1, r:this, ',1(R'
      getMember
      push '=vto'
      getMember
      push '[w;('
      getMember
      push '*0GPC'
      getMember
      push 'giveItem'
      callMethod
      pop
      branch label14
     label10:
      push '$smiley_twirl', 1, r:this, ',1(R'
      getMember
      push '=vto'
      getMember
      push '[w;('
      getMember
      push '*0GPC'
      getMember
      push 'giveItem'
      callMethod
      pop
      branch label14
     label11:
      push '$wpMinistar', 1, r:this, ',1(R'
      getMember
      push '=vto'
      getMember
      push '[w;('
      getMember
      push '*0GPC'
      getMember
      push 'giveItem'
      callMethod
      pop
      branch label14
     label12:
      push '$wpNostromo', 1, r:this, ',1(R'
      getMember
      push '=vto'
      getMember
      push '[w;('
      getMember
      push '*0GPC'
      getMember
      push 'giveItem'
      callMethod
      pop
      branch label14
     label13:
      push r:2, '$mode'
      getMember
      push 1
      getMember
      push r:this, '[g('
      getMember
      push 12
      subtract
      push 1
      setMember
      branch label14
     label14:
      push 0.0
      setRegister r:4
      pop
      push r:4, r:2, '$stats'
      getMember
      push '$play'
      getMember
      push '$main'
      getMember
      add
      setRegister r:4
      pop
      push r:4, r:2, '$stats'
      getMember
      push '$play'
      getMember
      push '$mission'
      getMember
      add
      setRegister r:4
      pop
      push r:4, r:2, '$stats'
      getMember
      push '$play'
      getMember
      push '$survival'
      getMember
      add
      setRegister r:4
      pop
      push r:4, r:2, '$stats'
      getMember
      push '$play'
      getMember
      push '$letter'
      getMember
      add
      setRegister r:4
      pop
      push '[g(', r:this, '[g('
      getMember
      push '-)', r:4, 2
      initObject
      push 1, r:2, '$stats'
      getMember
      push '$buy'
      getMember
      push 'push'
      callMethod
      pop
      push 0.0, 1, r:this, ',1(R'
      getMember
      push '=vto'
      getMember
      push '[w;('
      getMember
      push '*0GPC'
      getMember
      push 'saveSlot'
      callMethod
      pop
      branch label16
     label15:
      push '3x_R9(', 1, r:this, ',1(R'
      getMember
      push '=vto'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push 'play'
      callMethod
      pop
     label16:
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '2j0pB('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label17:
    pop
  end // of initMovieClip 671

  defineMovieClip 672 // total frames: 0
  end // of defineMovieClip 672
  
  exportAssets
    672 as '__Packages.miniwave.box.LevelTitle'
  end // of exportAssets
  
  initMovieClip 672
    constants '_global', 'miniwave', 'Object', ';W{', '-BCwm', '=w)l', '6Yx', 'prototype', 'field', '_visible', '{)zoW', 'text', '_width', '9V(', 'getTextFormat', 'align', 'center', 'setTextFormat', '*vz', ';F1j,(', 'attachMovie', '_xscale', '_yscale', '(X(', 'onPress', '_parent', '4Pzmp', '8M -D', '[g(', ',1(R', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{'
    getMember
    push '-BCwm'
    getMember
    not
    not
    branchIfTrue label3
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '-BCwm'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '-BCwm'
    getMember
    push 'miniwave'
    getVariable
    push '6Yx'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '=w)l'
      callMethod
      pop
      push r:this, 'field'
      getMember
      push '_visible', FALSE
      setMember
    end // of function 

    setMember
    push r:1, '{)zoW'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '{)zoW'
      callMethod
      pop
      push r:this, 'field'
      getMember
      push '_visible', TRUE
      setMember
      push r:this, 'field'
      getMember
      push 'text', r:this, 'text'
      getMember
      setMember
      push r:this, 'field'
      getMember
      push '_width', r:this, '9V('
      getMember
      setMember
      push 0.0, r:this, 'field'
      getMember
      push 'getTextFormat'
      callMethod
      setRegister r:3
      pop
      push r:3, 'align', 'center'
      setMember
      push r:3, 1, r:this, 'field'
      getMember
      push 'setTextFormat'
      callMethod
      pop
      push 10, '*vz', ';F1j,(', 3, r:this, 'attachMovie'
      callMethod
      pop
      push r:this, '*vz'
      getMember
      push '_xscale', r:this, '9V('
      getMember
      setMember
      push r:this, '*vz'
      getMember
      push '_yscale', r:this, '(X('
      getMember
      setMember
      push r:this, '*vz'
      getMember
      push 'onPress'
      function2 () (r:1='this')
        push 0.0, r:this, '_parent'
        getMember
        push '4Pzmp'
        callMethod
        pop
      end // of function 

      setMember
    end // of function 

    setMember
    push r:1, '8M -D'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '8M -D'
      callMethod
      pop
      push r:this, '*vz'
      getMember
      push '_visible', FALSE
      setMember
      push r:this, 'field'
      getMember
      push '_visible', FALSE
      setMember
    end // of function 

    setMember
    push r:1, '4Pzmp'
    function2 () (r:1='this')
      push r:this, '[g('
      getMember
      push 1, r:this, ',1(R'
      getMember
      push '4Pzmp'
      callMethod
      pop
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '-BCwm'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label3:
    pop
  end // of initMovieClip 672

  defineMovieClip 673 // total frames: 0
  end // of defineMovieClip 673
  
  exportAssets
    673 as '__Packages.miniwave.sp.bads.Ananas'
  end // of exportAssets
  
  initMovieClip 673
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '+h;J0(', '=w)l', ']q}_', 'prototype', '0Pezx', 'type', ' DVkC', '0w*(((', '4k8;L', '-[ YO', 'x', '0(}e', '+3ul', 'Math', 'abs', '2d[', '7J-V', '()nBD', '+N5T', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '+h;J0('
    getMember
    not
    not
    branchIfTrue label5
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '+h;J0('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '+h;J0('
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, '0Pezx', 15
      setMember
      push r:this, 'type', 25
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '0w*((('
    function2 () (r:1='this')
      push r:this, '-[ YO'
      getMember
      push 0.0
      greaterThan
      not
      not
      branchIfTrue label4
      push r:this, 'x'
      getMember
      push r:this, '0(}e'
      getMember
      push '+3ul'
      getMember
      push 'x'
      getMember
      subtract
      setRegister r:2
      pop
      push r:2, 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      push 3
      multiply
      push '2d['
      getVariable
      push '7J-V'
      getMember
      divide
      random
      not
      not
      branchIfTrue label4
      push r:this, '-[ YO', 100
      setMember
      push 0.0, r:this, '()nBD'
      callMethod
      pop
     label4:
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='super')
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:2
      pop
      push r:2, '+N5T', 8
      setMember
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '+h;J0('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label5:
    pop
  end // of initMovieClip 673

  defineMovieClip 674 // total frames: 0
  end // of defineMovieClip 674
  
  exportAssets
    674 as '__Packages.miniwave.sp.hero.Manzana'
  end // of exportAssets
  
  initMovieClip 674
    constants '_global', 'miniwave', 'Object', '8y', '+3ul', '-(2,0(', 'type', '=w)l', '{ry;', 'prototype', '6}jsa', '4k8;L', '()nBD', '[[4q-', '0(}e', '[w;(', ';*b', '[bRwJ', 'setVolume', '+N5T', '0G)c', '0sSXP', 'x', 'y', ',N5T', 'Math', 'cos', 'sin', '}cj8F(', ' HkK}', 'gotoAndStop', '[pJN8(', '4N)zC', '0Pezx', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push '+3ul'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push '+3ul', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push '+3ul'
    getMember
    push '-(2,0('
    getMember
    not
    not
    branchIfTrue label6
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push '+3ul'
    getMember
    push '-(2,0('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push r:this, 'type', 3
      setMember
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push '+3ul'
    getMember
    push '-(2,0('
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push '{ry;'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, 'type', 3
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='this', r:2='super')
      push 10, '[[4q-', 2, r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push '[bRwJ'
      callMethod
      pop
      push 40, 10, 2, r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push 'setVolume'
      callMethod
      pop
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:3
      pop
      push r:3, '+N5T', -6
      setMember
    end // of function 

    setMember
    push r:1, '0G)c'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '0G)c'
      callMethod
      pop
      push 62, '0sSXP', 2, r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push '[bRwJ'
      callMethod
      pop
      push 8
      setRegister r:8
      pop
      push 0.0
      setRegister r:3
      pop
     label4:
      push r:3, r:8
      lessThan
      not
      branchIfTrue label5
      push r:3, r:8, 1
      subtract
      divide
      push 2
      multiply
      push 1
      subtract
      setRegister r:6
      pop
      push 77, r:6
      multiply
      push 157
      subtract
      push 100
      divide
      setRegister r:5
      pop
      push 'x', r:this, 'x'
      getMember
      push 'y', r:this, 'y'
      getMember
      push 6
      subtract
      push ',N5T', r:5, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push 4
      multiply
      push '+N5T', r:5, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push 4
      multiply
      push '}cj8F(', 8, 5
      initObject
      setRegister r:7
      pop
      push r:7, 1, r:this, '0(}e'
      getMember
      push ' HkK}'
      callMethod
      setRegister r:4
      pop
      push 154, 1, r:4, 'gotoAndStop'
      callMethod
      pop
      push r:4, '[pJN8(', 200
      setMember
      push r:3
      increment
      setRegister r:3
      pop
      branch label4
     label5:
    end // of function 

    setMember
    push r:1, '4N)zC', 4.5
    setMember
    push r:1, '0Pezx', 3.6
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push '+3ul'
    getMember
    push '-(2,0('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label6:
    pop
  end // of initMovieClip 674

  defineMovieClip 675 // total frames: 0
  end // of defineMovieClip 675
  
  exportAssets
    675 as '__Packages.miniwave.box.Menu'
  end // of exportAssets
  
  initMovieClip 675
    constants '_global', 'miniwave', 'Object', ';W{', 'Menu', '=w)l', '6Yx', 'prototype', '9V(', '(X(', '-q};c', '{)zoW', '*vz', ';F1j,(', 'attachMovie', '_xscale', '6(', '_yscale', 'h', 'onRollOver', '_parent', '6L]C*(', 'onRollOut', 'onDragOut', 'onPress', '4Pzmp', ' )hwX', '40e1B', '4n)(', 'field', 'text', 'name', '8M -D', 'removeMovieClip', '_visible', '6}jsa', '7=bN', 'nextFrame', 'prevFrame', '786WA(', ',1(R', '=vto', '[w;(', ';*b', 'play', '6KXx((', '[g(', '9LaTD', '}9WO', '3}f()(', '7Y,z7(', '1OeZs', '=Wg++(', ']zVC)', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{'
    getMember
    push 'Menu'
    getMember
    not
    not
    branchIfTrue label9
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push 'Menu'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push 'Menu'
    getMember
    push 'miniwave'
    getVariable
    push '6Yx'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, '9V(', 100
      setMember
      push r:this, '(X(', 20
      setMember
      push r:this, '-q};c', FALSE
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '{)zoW'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '{)zoW'
      callMethod
      pop
      push 14, '*vz', ';F1j,(', 3, r:this, 'attachMovie'
      callMethod
      pop
      push r:this, '*vz'
      getMember
      push '_xscale', r:this, '6('
      getMember
      setMember
      push r:this, '*vz'
      getMember
      push '_yscale', r:this, 'h'
      getMember
      setMember
      push r:this, '*vz'
      getMember
      push 'onRollOver'
      function2 () (r:1='this')
        push TRUE, 1, r:this, '_parent'
        getMember
        push '6L]C*('
        callMethod
        pop
      end // of function 

      setMember
      push r:this, '*vz'
      getMember
      push 'onRollOut'
      function2 () (r:1='this')
        push FALSE, 1, r:this, '_parent'
        getMember
        push '6L]C*('
        callMethod
        pop
      end // of function 

      setMember
      push r:this, '*vz'
      getMember
      push 'onDragOut', r:this, '*vz'
      getMember
      push 'onRollOut'
      getMember
      setMember
      push r:this, '*vz'
      getMember
      push 'onPress'
      function2 () (r:1='this')
        push 0.0, r:this, '_parent'
        getMember
        push '4Pzmp'
        callMethod
        pop
      end // of function 

      setMember
      push 20, ' )hwX', '40e1B', 3, r:this, 'attachMovie'
      callMethod
      pop
      push r:this, ' )hwX'
      getMember
      push '4n)('
      getMember
      push 'field'
      getMember
      push 'text', r:this, 'name'
      getMember
      setMember
    end // of function 

    setMember
    push r:1, '8M -D'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '8M -D'
      callMethod
      pop
      push 0.0, r:this, ' )hwX'
      getMember
      push 'removeMovieClip'
      callMethod
      pop
      push r:this, '*vz'
      getMember
      push '_visible', FALSE
      setMember
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push r:this, '7=bN'
      getMember
      push 2
      strictEquals
      branchIfTrue label3
      branch label6
     label3:
      push r:this, '-q};c'
      getMember
      not
      branchIfTrue label4
      push 0.0, r:this, ' )hwX'
      getMember
      push 'nextFrame'
      callMethod
      pop
      branch label5
     label4:
      push 0.0, r:this, ' )hwX'
      getMember
      push 'prevFrame'
      callMethod
      pop
     label5:
      branch label6
     label6:
    end // of function 

    setMember
    push r:1, '6L]C*('
    function2 (r:2='9e-g') (r:1='this')
      push r:this, '-q};c', r:'9e-g'
      setMember
      push r:this, '-q};c'
      getMember
      not
      branchIfTrue label7
      push '786WA(', 1, r:this, ',1(R'
      getMember
      push '=vto'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push 'play'
      callMethod
      pop
      push r:this, '6KXx((', 10526923
      setMember
      push r:this, '[g('
      getMember
      push 1, r:this, ',1(R'
      getMember
      push '9LaTD'
      callMethod
      pop
      branch label8
     label7:
      push r:this, '6KXx((', 12369114
      setMember
      push r:this, '[g('
      getMember
      push 1, r:this, ',1(R'
      getMember
      push '}9WO'
      callMethod
      pop
     label8:
      push r:this, '3}f()(', 16777215
      setMember
      push 0.0, r:this, '7Y,z7('
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '4Pzmp'
    function2 () (r:1='this')
      push '1OeZs', 1, r:this, ',1(R'
      getMember
      push '=vto'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push 'play'
      callMethod
      pop
      push r:this, '[g('
      getMember
      push 1, r:this, ',1(R'
      getMember
      push '4Pzmp'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '=Wg++(', 6
    setMember
    push r:1, ']zVC)', 0.3
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push ';W{'
    getMember
    push 'Menu'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label9:
    pop
  end // of initMovieClip 675

  defineMovieClip 676 // total frames: 0
  end // of defineMovieClip 676
  
  exportAssets
    676 as '__Packages.miniwave.page.SelectLevel'
  end // of exportAssets
  
  initMovieClip 676
    constants '_global', 'miniwave', 'Object', ',1(R', '+{A*C(', '=w)l', '];)H', 'prototype', ')sY,G(', '4g=(', '8Jf;N', 'level', 'length', '1W(', '0W(', '9V(', 'width', '(X(', '+f}KA(', 'text', 'name', '[g(', '=aUoo', '=vto', '[w;(', '=Y(', '$mode', '0cPfH', '3L9n1', '=(boD', '$cons', '$bonus', '(fND)(', '4Pzmp', '1OeZs', ';*b', 'play', '=Xj_+(', ';7Sp4', ']A4]1(', '+m7O', '6ehxE', ',}AlE', ' c2q', '-IB,V', '2v3VX', '(hz](', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ',1(R'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ',1(R', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ',1(R'
    getMember
    push '+{A*C('
    getMember
    not
    not
    branchIfTrue label7
    push 'miniwave'
    getVariable
    push ',1(R'
    getMember
    push '+{A*C('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push ',1(R'
    getMember
    push '+{A*C('
    getMember
    push 'miniwave'
    getVariable
    push '];)H'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='super')
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ')sY,G('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ')sY,G('
      callMethod
      pop
      push 'miniwave'
      getVariable
      push '4g=('
      getMember
      push '8Jf;N'
      getMember
      push 'level'
      getMember
      setRegister r:4
      pop
      push 0.0
      setRegister r:3
      pop
     label3:
      push r:3, r:4, 'length'
      getMember
      lessThan
      not
      branchIfTrue label4
      push r:4, r:3
      getMember
      setRegister r:8
      pop
      push 150
      setRegister r:17
      pop
      push '1W(', 0.0, '0W(', 23, r:3
      multiply
      push '9V(', r:this, 'width'
      getMember
      push 56
      subtract
      push '(X(', 18, '+f}KA(', 4, r:3
      multiply
      push 'text', r:8, 'name'
      getMember
      push '[g(', r:3, '=aUoo', r:this, '=vto'
      getMember
      push '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$mode'
      getMember
      push 1
      getMember
      push r:3
      getMember
      not
      push 8
      initObject
      setRegister r:5
      pop
      push r:5, '0cPfH', 2, r:this, '3L9n1'
      callMethod
      setRegister r:7
      pop
      push r:3
      increment
      setRegister r:3
      pop
      branch label3
     label4:
      push 0.0
      setRegister r:3
      pop
     label5:
      push r:3, r:4, 'length'
      getMember
      lessThan
      not
      branchIfTrue label6
      push r:4, r:3
      getMember
      setRegister r:8
      pop
      push 150
      setRegister r:17
      pop
      push '1W(', r:this, 'width'
      getMember
      push 50
      subtract
      push '0W(', 23, r:3
      multiply
      push '+f}KA(', 20, 4, r:3
      multiply
      add
      push '=(boD', r:this, '=vto'
      getMember
      push '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$cons'
      getMember
      push '$bonus'
      getMember
      push r:3
      getMember
      push '=aUoo', r:this, '=vto'
      getMember
      push '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$mode'
      getMember
      push 1
      getMember
      push r:3
      getMember
      not
      push 5
      initObject
      setRegister r:5
      pop
      push r:5, '(fND)(', 2, r:this, '3L9n1'
      callMethod
      setRegister r:7
      pop
      push r:3
      increment
      setRegister r:3
      pop
      branch label5
     label6:
    end // of function 

    setMember
    push r:1, '4Pzmp'
    function2 (r:4='[g(') (r:1='this')
      push '1OeZs', 1, r:this, '=vto'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push 'play'
      callMethod
      pop
      push 'miniwave'
      getVariable
      push '4g=('
      getMember
      push '8Jf;N'
      getMember
      push 'level'
      getMember
      push r:'[g('
      getMember
      setRegister r:2
      pop
      push r:this, '=vto'
      getMember
      push '=Xj_+('
      getMember
      push ';7Sp4', r:2, '4g=('
      getMember
      setMember
      push r:this, '=vto'
      getMember
      push '=Xj_+('
      getMember
      push 'name', r:2, 'name'
      getMember
      setMember
      push r:this, '=vto'
      getMember
      push '=Xj_+('
      getMember
      push ']A4]1(', r:2, '+m7O'
      getMember
      setMember
      push r:this, '=vto'
      getMember
      push '=Xj_+('
      getMember
      push '6ehxE', r:2, '6ehxE'
      getMember
      setMember
      push r:this, '=vto'
      getMember
      push '=Xj_+('
      getMember
      push ',}AlE', r:'[g('
      setMember
      push ' c2q', '-IB,V', 1
      initObject
      push 1, r:this, '=vto'
      getMember
      push '2v3VX'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '(hz](', 20
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push ',1(R'
    getMember
    push '+{A*C('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label7:
    pop
  end // of initMovieClip 676

  defineMovieClip 677 // total frames: 0
  end // of defineMovieClip 677
  
  exportAssets
    677 as '__Packages.miniwave.lvl.Bonus'
  end // of exportAssets
  
  initMovieClip 677
    constants '_global', 'miniwave', 'Object', '4g=(', '8Jf;N', 'prototype', 'level', 'name', 'level bonus no8', '+m7O', '', 'level bonus no7', 'level bonus no6', 'Mission New Wave', '6ehxE', '', 'Guerre ou paix ?', '', 'Canon à pulpe', 'IYGSHjoiSOpathVcyjIeUyapejmhuBKwbMadaGoO3iWasdmaeHaDrUrGaKgyapca6JCJabimWaQeb1g5fGzGbiid6knYmagaZabiqduBKyambMadaGgO3iWaydmahHanrUrGaWgyascaAJCJabGmWaQea_IjbI0rjiwMqObzDH4GGyTmJdLrldXbaWzqAayjZ-Ootk2Tpq5mPaZnJE6oJlQciOBImagazGaKea1dCrGaWdmagaGgOBImagazGa8ea1dCrGaWdmajaGgOBImagazGbuea9fdCrmdmahGGwOBIlazGaWec1dCrGaKdmaeGGwOBImaeGzGa8ec1dCrGaKdmakGGwOBIlazGbiec_klgfJIYau8_OJk6Vdt0nRkqmZy3UJOY6GIkg4Iygyapba9q3ewaZabGihQg4Jabigyajba9q3eyajaZab4ihQg4Jabigyavba9q3ewaZacqih6kg4JabGgyajbanq3eyamaZabGibQg4JabGgyapbanq3eyamaZacqibQg4JabGgyavbapYIXHy4SGfpsgQotE0UBt0nRkqmZy3UJOY6GIkg4IygyapbbtunXfGmWayccMOBImaeGzGaKefnq3eyajaZab4ikAHUiWasbMafqqu1dCrydmajaGP6kg4JabGgyajba9q3eyamaZabGihQg4JabGgyapba9q3eyamaZacqihQg4JabGgyavba_YIXHy4SGfpsgOURc6ott0nRkqmZy3UJOY6GIkg4JabGgyajba9q3eyamaZabGihQg4JabGgyapba9q3eyamaZacqihQg4JabGgyavba_rq3etaZab4ik6HUiSbMadaqv1dCrGaKdmaeGGRQg4JabigyapbbxunXgacqmWaQccUOBIlazGbiefFYIXHy4SGfpsgHTlC4URt0nRkqmZy3UJOY6GIkg4IygyapbbBunXfGmWaycc2OBImaeGzGaKefTq3eyajaZab4ilAHUiWasbMafqqw1dCrydmajaGT6kg4JabGgyajba9q3eyamaZabGihQg4JabGgyapba9q3eyamaZacqihQg4JabGgyavba_YIXHy4SGfppAM0Vdt0nRkqmZy3UJOY6GIkg4IygyapbbFunXfGmWaycc-OBImaeGzGaKef9q3eyajaZab4il6HUiWasbMafqqx1dCrydmajaGV6kg4JabGgyajba9q3eyamaZabGihQg4JabGgyapba9q3eyamaZacqihQg4JabGgyavba_YIXHy4SGfpp6MYUdO09dAYKdm2n7O6mUOiIHUiWaybMacqqv1dCrGaWdmagaGRQg4JabGgyapbbxunXgadamWaKccUOBImagazGbuefFrq3etaZab4inAHUiSbMadaqA1dCrGaKdmaeGG1Qg4JabigyapbbRunXgacqmWaQcdwOBIlazGbiegVYIXHy4SGfpp6q6TlO09dAYKdm2n7O6mUOiIHUiMbMadWqy1dCrydmagaGXQg4JabigyajbbJunXgacqmWaEcdgOBImaeGzGbuegnq3ewaZacqimEIHUiWaybMacqqv1dCrGaWdmagaGRQg4JabGgyapbbxunXgadamWaKccUOBImagazGbuefFYIXHy4SGfpp6CYURS09dAYKdm2n7O6mUOiIHUiMbMadWqz1dCrydmagaGZQg4JabigyajbbNunXgacqmWaEcdoOBImaeGzGbuegDq3ewaZacqim-IHUiWaybMacqqA1dCrGaWdmagaG1Qg4JabGgyapbbRunXgadamWaKcdwOBImagazGbuegVYIXHy4SGfppAi0Vdt0nRkqmZy3UJOY6GIkg4Jabigyasbanq3eyamaZacqibQg4JabGgyapbanq3eyamaZabGibQg4JabGgyajbanq3eyajaZabiib6kg4Iygyambb3unXfGmWaycdUOBImaeGzGaWehDq3eyajaZab4io6HUiSbMadWqD1dCrmdmahGG7-uwmlhfKaP6q1bYzw1P6hjLigvZy2fKCMxuerq3etaZabGipAHUiSbMadaqE1dCrGaKdmagaG9Qg4Jabigyapbb7unXfGmWaEcd2OBIjGzGa8ehVrq3eyajaZacqifQg4JabGgyasbaTq3eyamaZab4ifQg4JabGgyambaTq3eyamaZabiifQg4JabigyajbaVYIXHy4SGfpsgImRQ8npq2SPaYUBgWSJKY6GIkg4JabigyasbbBunXgadamWaKcc2OBImagazGa8efTq3eyamaZabGilAHUiWaybMacqqw1dCrGaKdmaeGGT6kg4Iygyambcu1dCrydmagaHkAHUiWasbMadaqLnq3eyajaZab4isMOBIlazGa8ejtunXeWmWaEceP-uwmlhfKaP6r1rYB2LZAEHTzsbLC2nHzhjL1beunXeWmWaycfpQg4IWgyambcN1dCrGaKdmagaHt6HUiWasbMadWqP9q3ewaZab4iu-OBIjGzGa8ekF0unXgacqmWaKcdwOBImagazGbiegTq3eyamaZab4inAHUiWaybMadaqA1dCrGaWdmaeGG1Qg4JabigyajbbR8OSywolibt0JQlQWUJK09dAYKdk5SBcYotlQciOBImaeGzGbiefTq3eyamaZacqilAHUiWaybMadWqw1dCrGaWdmagaGTQg4JabGgyajbbBunXgacqmWascc3OOBIjGzGaWejxunXfGmWayceRQg4Jabigyambcv1dCrGaKdmahGHk6HUiSbMadWqLDq3etaZab4isV5ryWSCwqcNPhq2LUCxvP6g1LigvZy2fKCMxuerq3etaZabGisoOBIlazGaWejhunXgacqmWayceJQg4Jabigyapbcr1dCrydmahGHi6HUiMbMadWqKFrq3eyajaZacqipAHUiWaybMaeGqE1dCrGaWdmahGG9Qg4JabGgyambb7unXgadamWascd2OBImaeGzGaKehVYIXHy4SGfpp6M0Vdt0nRkqmRMXSli5mUOiIHUiMbMadaqL9q3ewaZabGis-OBImaeGzGaWejFunXgacqmWaEceVQg4IWgyapbcx1dCrmdmahGHl-IHUiWasbMaeGqP9q3eyamaZacqiu-OBImagazGa8ekFunXgadamWaycfpQg4JabGgyajbcN1dCrGaKdmaeGHt_LfJcXXzakEKntzxb0AEHTzsbLC2nHzhjL1beunXgacqmWaKcePQg4JabGgyasbcu1dCrGaWdmahGHkAHUiWaybMadaqLnq3eyamaZabiisMOBImaeGzGaKejt0unXeWmWayceTQg4IWgyambcw1dCrGaKdmagaHlAHUiWasbMadWqLTq3ewaZab4is2OBIjGzGa8ejB8OSywolibt0HPdQ0UJt0nRkqmRMXSli5mUOiIHUiWasbMaeGqA1dCrGaWdmajaG1Qg4JabGgyapbbRunXgadamWaycdwOBImagazGaKegTq3eyajaZabiinEIHUiMbMadaqM9q3ewaZabGitEOBImaeGzGaWejVunXgacqmWaEce3Qg4IWgyapbcB1dCrmdmahGHn_LfJcXXzakEKnozxv2AEHTzsbLC2nHzhjL1beunXgacqmWaKceHQg4Jabigyapbcq1dCrGaKdmagaHiAHUiWaybMadaqKnq3eyamaZab4isgOBImagazGbiejd0unXfGmWaQcdEOBIlazGbieg9q3ewaZab4in6HUiSbMadaqB1dCrydmaeGG3-uwmlhfKaP5_uhjLBwNOCMuGyxjTywrH1beunXfGmWaQcfpQg4IWgyasbcN1dCrydmahGHt6HUiSbMadaqP9q3ewaZabiiu_OOBImaeGzGbieldunXgacqmWaEcfHQg4JabigyambcW1dCrGaWdmagaHyAHUiWaybMadWqSnq3eyamaZacqiwh5ryWSCwqcNN9ezxv4AEHTzsbHCM1Hzghuerq3ewaZacOis-OBIlazGbiejFunXfGmWaEceVQg4IWgyambcx1dCrydmaeGHl-IHUiWasbMaeGqw1dCrGaKdmahGGTQg4JabigyambbBunXgadamWaycc2OBImagazGa8efTq3eyamaZacqilFLfJcXXzakEKnuCM9PC2NOBwuGyxjTywrH1beunXfGmWaQceJQg4IWgyasbcr1dCrydmahGHi6HUiSbMadaqKDq3ewaZabiispOOBImaeGzGbiefDq3eyajaZab4ik6HUiWasbMadaqv1dCrGaWdmagaGRQg4JabGgyapbbxunXgadamWaKccV5ryWSCwqcNPduxvHDhjP6g1LigfYBwfKyDqrfdCrGaKdmajaGXQg4JabigyapbbJunXgacqmWaycdgOBImagazGaWegnq3eyamaZab4imAHUiWaybMaeGqy9fdCrydmakGG5Qg4IWgyasbbZunXfGmWaEcdMOBIlazGaWehnq3ewaZabiioFLfJcXXzakEKndAw5XDwNOBwuGyxjTywrH1beunXfGmWaQcfdQg4IWgyasbcH1dCrydmahGHq6HUiSbMadaqODq3ewaZabiiupOOBImaeGzGbiehnq3eyajaZab4ioAHUiWasbMadaqC1dCrGaWdmagaG5Qg4JabGgyapbbZunXgadamWaKcdN5ryWSCwqcNNTtAxHP6g1LigfYBwfKyDqrfdCrydmakGG_Qg4IWgyasbb_unXfGmWaEcd-OBIlazGaWeh9q3ewaZabiip-IHUiWasbMaeGqE1dCrGaKdmahGG9Qg4Jabigyambb7unXgadamWaycd2OBImagazGa8ehTq3eyamaZacqipFLfJcXXzakEF1nLChrP6g1LigfYBwfKyDqrfdCrydmakGHiAHUiSbMaeGqKnq3ewaZab4isgOBIlazGaWejdunXfGmWasceH6kg4JabigyasbcN1dCrGaKdmahGHt6HUiWasbMadaqP9q3eyamaZabGiu-OBImagazGa8ekFunXgadamWaKcfp-uwmlhfKaP5_shvPDgNOBwuGyxjTywrH1beunXgacqmWaKcc-OBImaeGzGa8ef9q3eyajaZabGil6HUiWaybMadaqx1dCrGaWdmahGGVQg4JabGgyasbbF0unXfGmWaQcfBQg4IWgyasbcT1dCrydmahGHw6HUiSbMadaqRDq3ewaZabiivV5ryWSCwqcNN9ozxv2AEHTzsbHCM1Hzghuerq3ewaZacOis-OBIlazGbiejFunXfGmWaEceVQg4IWgyambcx1dCrydmaeGHl-IHUiWasbMaeGqM9q3eyajaZab4itEOBImaeGzGaWejVunXgadamWayce3Qg4JabGgyapbcB1dCrGaWdmajaHn_LfJcXXzakEE0rPEgNOBwuGyxjTywrH1beunXgacqmWaKcdwOBImaeGzGa8egTq3eyajaZabGinAHUiWaybMadaqA1dCrGaWdmahGG1Qg4JabGgyasbbR0unXfGmWaQceZQg4IWgyasbcz1dCrydmahGHm6HUiSbMadaqMDq3ewaZabiitp5ryWSCwqcNNTpBNPP6g1LigfYBwfKyDu8_QdKYTRt0otkqnNsZTlE3ibolgfIIWiIKjazzIlen9rKQiWasnrKMiWaz9rLAiWaHDrMacAiWaFTrMac4iWaz9seGmWasXgadcg-PcqgwyJabHdFuHidlmrGaKHV6kqKbMafwiSq31gyay4Jabe1gyazyJabJ1gyawGJacf1gyaryJab71gyapyJabO1isaZacteyamiB6KjazGbvImagen9seGmWaQXgacsg_OPbuzGaXIlen9scOZabJeyajiB6KfrMacwiWasq39fikJmahSryHVQqvgyapyJabjdFuGQmWaKXgacsg_-QEF0rLDxHP6g1LigZPz2LVBKaNfJcXryersdOYZewiB6JjurGaKAJjmrGaZ6Jk0rGbc6Jmae0rGa_AJmafWrGaZ6KhrMacwiWayq31ioJlmrGaWHVQqDgwyJabjdF0uG6mWaQXfIg-OZadheyaiMOZadleyamEOZac0eyaqUOZacleyapEOZab7eyangPb0zGbjImagen9sdOZacReyamiB6KhrMafwiWasq39fisOZabJewiB6KjuzGaXImaeKn9seQmWasXgacsg_OPcvgyapyIXdFuHkJmahSrGaKHVQqLrMaeMiWasq3_1t0HQJK3TlM09dAYKdz0S7s3TYatIXHyOSciPaXLMiSq31gsOJabi1gsyJabN1gvOJacf1gyajOJab-1gyalGJabN1igmWasXgadcg-PaXLMiWayq31igmSXgacsg_OPaXMafwiSq31gyay4Jabe1gyazyJabJ1gyawGJacf1gyaryJab71gyapyJabO1igmWaKXgadcg-PaXMafwiWayq31igmWaQXgacsg_OPbqzGaXIlen9scGZabJeyajiB6KfbMacwiWasq39fikdmahSryHVQqugyapyJabjdFuGOmWaKXgacsg_-QEKnrDwf0CMNOBwuGBoLNAw9UqcCwmlffGrfildlmryHVQmLrgacrQmKXgadpQmRrgaelQmWatrgad9QmWaxbgadpQqwgyajyJabHdFuGSmSXgadcg-PbyzzImaeKn_rscWZacRewiB6JmamCrGaIAJmamSrGaX6JmalqrGbc6JmaiSrGa96JmahSrGa0AKfHMaeMiWayq31ildmakSrGaWHVQqwgyavyJabjdF0uHiJmagmryHVQqKrMadgiWasq31isiZableyajiB-IKjezGa9Ilen9seImWaEXgacsg-PcrgyasyJabjdF_vpsgHTlC4URt0nRkqnNsZTlE3ibolgfIIWiIKbgwyIXdFuzkImaeJuzjImagFuzwImaixuzGaMImah7uzGaUcmagFuGiZableyamiB6KbgwyJabHdFuGiYZeyajiB-IKbgyavyIXdFuzGbJImaetuzGbLImagpuzGbAcmaixuzGbfImahVuzGa9ImagJuGiZacteyamiB6KbgyavyJabHdFuGiZacReyajiB-IKjyzGaXIlen9seSmWayXgacsg-PcwgyajyJabjdF0uHldmahSryHVQqLHMad2iWasq31isWZacteyajiB_6P57u2L4AEHTzsbS6wDPB25ajXyWSuwbeuG4mSXfIg-OYveyajgOYteyam-OYTeyaqUOZabneyap2OZabCeyam-PbWzGaLImagen9sdGYZeyamiB6KhbLMiWasq39fiodmakSryHVQmWaXXgacjQmWaYXgadhQmWaTbgaelQmWaIXgad3QmWaEXgadrQqCgyasyJabHdFuG4mWaQXgadcg-PbWzGbvImaeKn_rscOZabJewiB6KfrMadgiWasq31ikJmaeSrGaKHV6kqvgyapyIXdFuGQmWaEXgacsg-PbuzGbjImaeKn_9u8_QBk4oJt0nRkqnNsZTlE3ibolgfIIWiIKkCzzIlen9rKQiWasnrKMiWaz9rLAiWaHDrMacAiWaFTrMac4iWaz9sfomWasXgadcg-PcNgwyJabHdFuHtJlmrGaKHV6kqPXMafwiSq31gyay4Jabe1gyazyJabJ1gyawGJacf1gyaryJab71gyapyJabO1iu4ZacteyamiB6KkCzGbvImagen9sfomWaQXgacsg_OPcBgyamyIXdFuHnJmagmrGaKHVQqMXMacwiWasq39fityZab7ewiB6KjSzGa9ImaeKn9se2mWaKXgacsg_-QEF0H1AxrP6g1LigZPz2LVBKaNfJcXryersdqYZewiB6JjurGaKAJjmrGaZ6Jk0rGbc6Jmae0rGa_AJmafWrGaZ6KgHMacwiWayq31indlmrGaWHVQqAgwyJabjdF0uG0mWaQXfIg-OZadheyaiMOZadleyamEOZac0eyaqUOZacleyapEOZab7eyangPbOzGbjImagen9sdqZacReyamiB6KgHMafwiWasq39fimdmagmryHVQqygyamyJabjdFuGWmWasXgacsg_OPbGzGa9Ilen9sdaZab7eyajiB6KgbMaeMiWasq3_1tZ-NmRQ7npq2SPa2Dlo0T7CGe4SywklaIkqLbLMiSq31gsOJabi1gsyJabN1gvOJacf1gyajOJab-1gyalGJabN1isGZableyamiB6KjqzzImagen9seOmSXgacsg_OPcugyavyIXdFuzGbJImaetuzGbLImagpuzGbAcmaixuzGbfImahVuzGa9ImagJuHkdmajmrGaWHVQqLbMafwiWayq31isGZacReyajiB-IKhHMadgiSq31ipdmagmrGaKHVQqEgyajyJabjdF0uG8mWaEXfIg-Pb4zGa9ImaeKn9sdWZacteyajiB_6P57rgL4AEHTzsbS6wDPB25ajXyWSuwbeuGUmSXfIgYGSG0qcujShIc8OskinVgbutSUenabled2DkjcqGgHUkiPhi7-OzkHgacrQgsyrGaZ6HLAeyaqUOzGaMHgad9QgyalGrGaZ6Ic4zGaLHgadcdsGcXCY5To0_F1efWYZcmagegLafI5LZADP-_QilHLMeyajinkalfZlM07t9_0uqxdmakSiSqAucwlMxnP2N7-OzGbJHgacjQgyazyrGaX6HMafOeyaqUOzGbfHgad3QgyapyrGa0AIc4zGbjHgadcdsGsXCY5To0_F1efWZacRcmagegLaLI5LZADP-_QilHMafweyajinkblfZlM07t9_0uqLWZabJclegLbfKUzC2NAFV6IeUgyamyrGaKG0OiSLZlM07t9_uqLWZablcmaeKgLbfKUzC2NAFV-IIeUgyapyryG0OmSLZlM07t9_uqLWZab7cmaeKgLbLKUzC2NAFV6IeUgyasyrGaKG0OmSLZlM07t9__uNNPb2W5-UvbU3Tgk5CUibhfHHyuwaN4', 'Mort aux fruits jaunes !', 'IYG0aWtNRHYY7DoxLLqBnoFDLMrHYOLH4GGymYfallSpeedfOIsqTesdfPqwqKNeweMnqLYZHmfdkdWeX76MgJMacwGOu31mnhmaeTbCPVQCWat0gaeFQCTugafnQCCqyau-PZMGWaFDtJsdabf1ov6c21mnhmagnbCPV6kyAoyavAcHtFuW0CWaK0fcM-PHO5GbjOlLn9tMaeGGWaLTtMafCGWaQntMagEGWaOTtMagYGWaGntMagsGWasntMafoGTTtdrZab7qxkB-INlrb1ntKSGMDtKKGS9tbNlLbGaQPVQym5GaNOmagnn9tbNmagrbGaUjV6kCWaSehu1oyazAcu1oyazsc21mgCWaPugacSM-PGZMaeEGWaze31mgCWaEKgac6M_OPZabUqCDteICWaBKe0M_-PzeIPUGWaydMadyyx1tDbGaKhmahGWwQBOla5Gbigd1tDbmhmakGXi6PUGMdMaeGyKDu3qtbZab4msoQBOjG5GaWgjhvn0eWCWasdeJQM6cyowbIr1tDbyhmaeGWEQBOmaeG5GaWgc1tDbyhmahGWEQBOla5GaWgd_ildfHcWqqCQtalon1bY4ereXqmqiiHyySqwleuWWCWaEKgacSM-PHG5GaYimafzn9tdbZabVqyaiAB6MfZMae0GWaBu31mlNmaerbGa2PVQyxoyanYcHtF_uhmdaeuXcXeWGIhbIXbySrtdbZabmqt6B6Mju5GaYij9n9tc5ZabKqw6B6NmagrbGa56NmaeXbGbo6Nj1bGbr6Ndqyar2PWegadxQCxqyajwPYDqw-PHC5GaMilDn_rtdbZacvqt6B6Mju5Ga-Oj9n9tc5Zab9qw6B6NmahXbGa6ANmai1bGbp6Nmal1bGbuANmanPbGbiANmanXbGaWANmamTbD6MfZMaeQGT03-ut9qC2avant-gardecciwglefIYffmlNlXbGaLPVQyxoyakcdabFtFuW0CWauegacwM-PHC5GbqimaeTn9tc5Zacmqyal6B6MgJMaeyGWas031mv5ZabTqv6B_eIMgJMadiGWaue31mnhmahHbGaOjVQyxoyapcdabKtFuWUCWazegadiM_-PyIPUGKJMaeEylvn0fgCWaQdbAPUGTdMagaylvbGaMNmanFvbGa7hmanJvbGbkhmamBvbGbnNmaj_vbGbhNmagJvbGa5hmafJvn0gacKCWawddwQBOlO5GaSggVru3qsrZabtmfQM6cJoxrGTu3qwHYEmfQGWasJIMQdabSobQGWaKdJ-Qdacvox2Qdaccoyap2QdabToyaq2QBOmafi5GbeggTu3qxrZacimnEMIOaoyan-Qdadkoyan-QBOmafi5Ga4ggTu3qxrZabWmnAPUGOZMadGyQVYcWXyqSeehmNsdrIXeZJDsXftDbrhlaWXQM6cSoyajbHJvn0fGCWayddgQBOla5Ga8ggnu3qvHZacqmmAPUGOJMafqyy9ftDbDhlaW1QM6dabeoyajbHRvn0gacqCWayddwQBOmaeG5Ga8ggTu3qyaiHZacqmnAPUGUJMafqyA9fqCJLlQGKJMacnQM6cyoyambIQ1tDbmhmahGXvFKfHIWHyiioAbagNg_aGfL6G5CoawMiIieeqSmwilfIkCWavubAMgJMacMGQu31mnhmafnbEPVRcebmnhl9bEPVQOeW0CWau0gacIM-QGtdrZabNqxQB-INoOGWaLntK4GWaUDtLGGWaU9tMacAGWaRntMacQGWaLTtMacuGWaGntKOGWatTtJIcU1osYcs1mv5YSqtkB-INmaobbGbiANmamjbGbB6NmakrbGbzANmajzbGbpANmajDbGbcANmakDbGa8ANmanzbCANmanrbn6NmamXbjAMk85GbzijLn_rtMadKG62PIVoyaokcytF0u5GbiiooPHO5GbhOkLn9tdrZacpqxQB6MgJMad2GVu31mnhmai9bGaOPVQyAoyauAc9tF_uhsfSYOn2_l1YinUhpP49COqrcWXyGSwiPIVowIcGtFuXxNmaeDbAPVQyRZMad2GWaru31mv5ZacqqyalsB6MgJMaeGGWaB031mnhmahPbGbcPVQyAoyamIdacftFuW0CWatKgadEM-PIVoyajYdabAtFuXxNmagnbGaIPVQyRZMaeUGTu31mv5ZacQqucB_6G5ugCmyaeeqSmwilfIkCWa3ugae5QCWaVugafDQCWaIegaf5QCWas0gafZQCN0gafxQCnbGbl6Naqyam2PYuqyaiwPYYqvUPIOoyajccDtFuXuhmaf5biPVQyQdMaeaGKu31mvbZacwqtQB6Mju5Ga2Ok9n_rtNfbGbqANj1bGbz6NmaePbGbE6NmakXbGbrANmamTbGa96NmamPbGaR6NmalbbGaKAMgJMaeIGWase31mnhmahLbGaKjVQyAoyamkdabitFuW0CWasugacqM-PYCqyaloPYDqyanUPYVqyapUPZabCqyaq-PZaciqyaqoPZacPqyapgPZac0qyamUPZacKqyalMPHC5GbiOmagbn9tc5Zab5qyamcB6MfZMadcGWaye31mlNmaeLbGaWjV_QwiQBOmaje5iMc1tDbGbmhkyWwQBOmajm5GaIgc1tDbGbaNmafuWwQBOmagS5GaJgc1tDbGaTNkWWEQBOmaeK5lMd1tDbxNjmWEQBOj05tgd1tDbphl4WEQBOkW5GaQgd1tDbDhlaXkQb1tDbGaLNmaeWXkQb1tDa8CWaxJfoOhvn0gacCCWaBteQOh0vn0gaeICWaZtbAPUGWaMdMafWylvn0gaeMCWaMJbAPUGWaGtMaesylvn0gadwCWaMdbAPUGWawZMafKypvn0gacsCWaXZb6PUGRZMagwypvn0e6CWaUdb6PUGNJMafaypvn0fyCWaIJb6PUGUJMafCyLva6PUGWasZMaeKyLva6PUGEoyaqbINud-qwglcfGGG5SaOUqwqaqIiLQwiQBOjG5GbpMkJvn0fyCWaIZfrQM6dabaoyao5IO1tDbGaXhmajiWXQM6dabIoyavbHJvn0gacECWaNtdgQdabaoyatgQcZoyatUQcHoyav2QbS5Gbz6OboyauEQbG5GbgAPUGRdMadUyQpru3qtbY7mvgQBOkW5GaNMkJvn0gacaCWayZfrQM6dabIoyajHHJvn0gadeCTJdgQBOmae85GaGMgnuf0CWaqDufmCSnueICO9uhe5BAOaoyajoQBOkW5GaXMkJ8GSmwelbbbZa8a8GSS43uSru3qmNliWVQM6cFoyaiXHFvn0fUCWavZc_OQBOgtMafyyx1tDbpNmajGWVQM6c3oyaq5HF0vbZoyan-QdabMoyan-QdackoyaooQdacCoyapEQdacKoyasoQdacFoyav2QdacmoyayoQdab2oyaxUQBOmahC5GbuMkJvn0gadUCWaGtfrQM6dab3oyaljIO1tDbGa7NleXuAOmagO5lAOmafa5lAOmaeu5q6Omaeu5z6OmaeG5GaPAPUGWasZMadEyKFItYcWXyqSeehlcGgqbYnqCZzSppOGX9CwuiiIuglefIYjfmlNmafbbujVQyxoyakcc8tFuWUCWauegacGM-PHC5GaYimafbn9tc5Zab4qyakcB6MfZMaeyGWaue31mlNmaiXbEjVQyxoyarIcOtFuWUCWaEefqM-PHC5GaYikHn9tc5ZabKqxIB6MfZMadWGVe31mlNmafbbkjVQyxoyamIcutFuWUCWaEeeOM-PHC5Gbgijrn_9sXftDbGaHNmafaXuEIPUGVdL4yQnu3qxHZabKmvgQBOmaem5Ga8gkJvn0f4CWaJdfrQM6dabdoyaubIO1tDbEhmalqXuEIPUGLdMafOyQTu3qpNmakaXvAPUGLdMaeyyQTu3qpNmahGXvAPUGLdMadiyQTu3qpNmafaXvAPUGLdL4yQTu3qu5Zab3mu_P5byySiwccdM7zHqBCoprV08SUOoDhGfIFjGefLGbIbbeldfIcXyIMgJMafQGWaqK31mnhmakfbxjVQyAoyawQcAtFuW0CWaYufCM-PIQoyawQcUtF0uWWCWaDugadCM-PHG5GbeOmaijn9tdbZacDqyanYB6MgdMaesGWawK31mvrZacjqyanYB_cIMfZLqGQe31mlNlXbkjVQyxoyakccOtFuWUCVef4M-PIQoxIcOtF0uXxNlbbGbmPVQyRZMaciGWaHu31mv5YWqyaokB6Mk85oimaivn9tfuCSegaekM_-PyIPUGNdMaegyQTu3qv5ZacemvwQBOmaeq5GblMgfa6PUGWawdMaegyy1tDbGa2hmaimWXQM6dabToyauzHFvn0gacWCWaTtc6GDu3qyaojZac7ml6PUGWaGJMagIyx9ftDbohmafSXvAPUGRZMac0yQTu3qyaiHZabhmmkb1tDbGaShmafSWXQM6dabSoyalzHJvn0gadACUZc-QBOmafG5uMf1a6PUGWaCtLgyx1tDbGbbhhtc_OQBOjW5Ga3MkRvn0gacWCWaBZdgQBOmagW5Ga3MgpYcWXyqSeehowBFY6zuhdFPZ7SUOoxegIIiMNbbeldfIcXyMIMkG5GaGOjbn9tfqCWawueGM-PIOoyaokcqtFuXuhmaiLbijVQyQdMad6GQe31mvbZabLqvcB6MkG5GaMOkHn9tfqCWawugacaM-PIOoyamQdabytFuXuhmah1bGaSjVQyQdMadIGWaqe31mvbZacjqyaicB6MkG5GbkOkHn9tfqCWaOueGM_-PyIPSOlineaLcBb4HxYHiOG28yfroY4q0aeSqpz0OKjcaAg4OIKCJVKfooyapqXx6K0SaWRZBNu_un8GUXZab6gk_uMLGgdbTZQFQg-qyaj45Ga9ddgPnlamgJBNu_un8GWayXZab6ggTsAwayng3oP-OB5bGa1JMaeCmnAK0SaWAnUDt9q3Ydab0hmakiyA1imai8CWaWDsdacShmamNuGWaWrZac81imamSCWaODsdac5hmahhuGWaOXZabq1imaiKCRTsdab3hkxuGWaAbYM1jPybGWBC6N6HVKgadaoxWWXQtsWdbG251p1dFimafCCWauHHJuMLGgfEBC6N6HVKgacgoyakqXx6K0SaWRZBNu_un8GRXZabsgk_uMLGgfEBC6N6HVKfWoxWXx6K0SaWRZBNu_un8GWatbY-gk_0uMLGMfEBC6N6HVKfooyamWXx6K0SeWRZBNu_un8GUXZabMgk_uMLGMdbTZQFQg-qyaj45GaZddgPnlbmgJBNu_un8GWayXZabMggTsAwcyng3oP-OB5bGa1JMacKmnAK0SeWAnUDt9q3Ydab0hl4yA1imajeCMTsdacVhh9sdadghjVuGWaZrY-1imalyCWaDTsdacIhmajhuGWaFXZacY1imag8CWaUTsdabMhmalRuMLGMdbTZQFQg-qyama5GbrddgPnlbmgdBNu_un8GWavXZacoggnsAwcyv5TZQFQg-qyaiy5GbhdfFQtsWtcVnUDt9q3YcVhmai4yR9sAwcyv5TZQFQg-qxa5GbrdfFQtsWtcVnUDt9q3YdabmhmakiyR_XbymwcfGqqoAQgxPP6iog_D01fIkqDqCMTsBKeOotyXuAK3igXY1gkGOhuM5buJLCmvbqoPnYdabdhjKyA1jUqyak45mJdwPnYdabShjKyA1jUqyapG5wddgPnYdaclhmaeeyy1jUqyasO5GaTJdgPnYdacfhmag8yy1jUqyalO5Ga_JfFQtCGWaAXZacxgk8OhuM5bGaPJMaeSmlLa6K3imaeCCWaFXIV1jUqxO5GbldfEudQtCGNHZabHgkRuM5aWoyaoaXvAKhiCWaH9scvhmajRuGWaqrZacO1jUqyalO5Gbwdc_OPb1bZade1jUqsG5GbHJfrQtCGBhmakKyQcGDsBKfsoyawaXufa6K3imaemCWaXrHRuM5bGaRJMagkmnAK3imagWCWaXrHRuM5bGa-dMafKmmAK3imaiSCWaNrHJuM5bGbkJMaegmmAK3imaf0CWaxXIV1jUqyany5GaJJfEudQtCGWauXZabigfYGDsBKgacooyal4Xx6K3il0CWasbIVkb1jUqwq5Ga4deJQtCGNHZab9gkRuG5dMac5QqlJMacxQqx45AAK3imaf0CSHHF04K8qwdfGHyeedPEqwCUZzV7Oi3lRP6C0ghzSqC-MhL4', 'Fruit d\'artifice', '', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '4g=('
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '4g=(', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '4g=('
    getMember
    push '8Jf;N'
    getMember
    not
    not
    branchIfTrue label3
    push 'miniwave'
    getVariable
    push '4g=('
    getMember
    push '8Jf;N'
    function ()
    end // of function 

    setRegister r:0
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:0, 'level', 'name', 'level bonus no8', '+m7O', 3, '4g=(', '', 3
    initObject
    push 'name', 'level bonus no7', '+m7O', 3, '4g=(', '', 3
    initObject
    push 'name', 'level bonus no6', '+m7O', 3, '4g=(', '', 3
    initObject
    push 'name', 'Mission New Wave', '6ehxE', 500, '+m7O', 2, '4g=(', 'IYGSHjoiSOpathSOlineaLcBb4GeOskinVgbutSUenabled2DkjcqGgHUkiPhi78jGLOs5GbcqKWnq0qaWsxltAFFqvItaceudQgIagas5ABt76dabcsyaqIGnq0qaWsxltAFFqyalctacAud6kgIbgas5ABt76dacAsyalcGnq0qiWsxltAFFqyaqItabyudQgIbgas5ABt76dabUsyalcGnq0qiWsxltAFFqyalctabUudceb1draJbjCTnP99bGaSjmaejqkWF4IqyTessfPKkawxyEiigltiW5usW8qqmgugGgcCQGamma1aIkqsHjGaYfa6KfqsyakbqgPbkeL4ud6kqxHjEfaAKgacGsyakbqwPbEeMadiufQqvbjGa8faEIKf4syarHqwPbGaOeMadWufQqyamHjGaYfaAKgadWsyapbqpOPbGa8eMafaudQqyamHjGbgfaAKgacGsyaubqh5GSAlhcX4khm0BLLYOowNjL1aIkqtPjGbAfbAKdjjGa8faAKe6syapbqwPboKMadiud6kqwjjkfbAKfIsvbqoPboKLqub6kqyaiPjGaOfbAKgacYsyakbqgPbGaIKMadiud6kqtPjGbqfa6KfIsyaubqgPbteMafD6kqyanPjGbAfa6KgadAsyaubqwPbGaSKMafOub6kqyasPjGbgfbAKgaecsyarHqgPbGbaKMadWud6kqyaqjjufaAKgaecsxHqwPbGa2KLqud-ylgIXWSEcH0JOBqWUBMYURK5Kdit9ly0UJlQbeuGWaxYsMkd1imaf8KUIGnsdabljlOOpuGWaCYtabokb9fikmKUIG9scJjmae4OduGFjmae4OpuGTYtabIkc9fimaf8KWaDIG9sdabFjmaiOOduGWasYtackkd1imahmKWaNIGVrscJjmaiOOpuGOYtacEka1ihYtacEkd1ilCKWaSIGFZby0wofJWuoFPUhDPW40hxDP7zExplQbeuGNctabukc1ilGKUcG9scCjlGOpuGUcsCkc9fijWKWaCcGTsc4jmaiWOpuGNctacmkd1ilGKWaQcGVrsdabqjmakpuGWavctabWkc1imahaKWaJcGDsdabWjmakGOh0uGWauIsQ1imafqKWavcGTsdabWjlGOhuGWaCcsCkb9fimaiWKWaQcGnsdacEjmajZuGWaJctacmka1imahyKWaFTsdacmjmahaOduGWaNstabJ1imaiWKWavcGnsdab8jmaeBuGWaJcs4ka1imakiKQnsdacmjjWOd8WwnfJHy8fdNTqyw5PCxvLioaGyM9YznqiIKeUsyarrqEPbxeMaeuuhQqvXjGbqLb-IKfCsvzqoPbGaIKLwulAKgac4syairqTQqyaozjGaSLc2PbGbfeMadMulAKgaeusyarrqpOPbGa5KLwuhQqyaozjGaHfb6KgaeusyairqFOPblKMackudQqs5jGaUfc2PbxeMadMulAKgacksyarrqTQqyalHjGbqLc2PbGa5KMafcud-ylgIXWSEcHZ9t6yExprP4inUxzV3C9qiIKgadisvbqEPbGa8eLquhQqyau5jtAKgaeysvbqpOPbkeL4ulAKfqsxHqTQqyakPjD6Kf4sxHqpOPbEeMadiuhQqyakbjGaYfb6Kgad4syam2PbGaYeMadiud6kqsHjGa8fc2PbueMadWulAKgacUsyapwPbEeMadWud6kqsHjGbqfb6KfqsyaubqEPbGaReMafdQqxHjGbqfa-IKgacGsyawHqTQqyamHjGbAfc2PbGbieMafPQqyapbjGbAfa_McXOSClhGODj6yWKdo5mlCYmPaZotsXSlM59llQbeuGScsykfTscyjlaOv1ijGKWascHxuGMctabGkfDscWjmahGOw1imaeGKWaKcHBuGWayctab4kd1imai4KWax9sdacqjlaOhuGWaBYsJ1imahGKWascGFrscWjmamaOw1ijGKWaQcHxuGMctacqkfDscyjmahGOv1ilaKWaycHBuGWasctabikfTsdabGjmagaOpuGWaJItab61imajaKWaQcGDsdabPjmalBuGWaEctacqkb_mfJry4wpcq52JCUUNP5qzmVptN3AOCYCavalcadepbofJryWwaIkuleMafMqyal-PqSsyat5bGa56LcXjGa7KgadNQuesyat5bGaV6LbeMafMqyaoFOPqQsyavbbyALcPjGbiefHQukeMadWqtgPqOsyambbmALcHjGaWefH6kukKLGqwgPqQsyajbbyALcHjGaWegacrQukeMadWqyajgPqOsyapbbyEILcXjtKgac_QuleL2qyaoEPqSsyamzbGa56LbeL2qyal-PqrjtKgadN_QHY-GKdD0SlC6hGNcXOSylarfkfItac0ij7uOujmakOGWasTsHCKWaTcdab49fkfItacwij7uOujmajeGWasTsHCKWaLIdab49fkfItabAij7uOujmaf8GWasTsHCKWawIdab49fkfIs8ij7uOujmaeyGWasTsHCKVcdab49fkfYtab4ilZuOxjmahGGWawV9uoKTbDMvUDhvYAwvYCYbWDwXW6xm8e4wnfJbyciPqQsyal5biALcPjGbbKeHQulKMaeQquwPqUsyau5brALc5jGbCKff6kulKLsquwPqUsxzbrALc5jGaMKffQulKMac-qwMPqUsyaqzbAEILcXjGbCKgacnQuleMafoqyai2PqSsyasPbGaJALbeMaegqyalgPqrjGaVKgacX6kuleLsqyai2PqSsxzbGaJALcXjGaMKgacnQuesyajPbGa1ALbeL2qyanwPqrjuKgadv6kuesyaxjbGa1ALbeMafoqyanwPqrjGbkKgadv_QbeuGLItacekgnscSjmaiqOD1imaeiKWaHcGDsdabcjmag4OhuGWaqItabykb1ikWKWawcH3uGLItabykgprsdabcjkWOy1ikWKWaqIHJuGWawctabckhDsdabyjmafGOD1imag4KWaBIHFuGWaHctabykf_rsdabcjmalaOy1ikWKWaMIHJuGWawctacAkhDsdabyjmaiqOD1imafGKWaBIH3uGWaHctacekf_Zby0wofJWuoD0t0BwuGzw5QB2XLDxluciPbmeNw1ilOK6MPbGaKeJgPbGaLeLeumAKf0swzqTQqu5jFfdgPbleMacEulAKdPjGaYfdhOPbGaWKMaeuul6KgacEsyapbqoPbEKMadWunAKeUsyan-PbEKMadmunAKgacEsyamXqoPbGaWKMacOul-IKgaecsyatgPbGbceMafJQqyapPjGbJAKgadwsyaAoPbGaRKMagzQqyajrjGbEfdgPbDeMafwulAKfosyaubqXQqsXjGbhLc2Pa6syaprqX-ylgIXWSEcHZfnW5eghXP56GrfihYtabPkfnsb8KWaEYHFuGOstacnkfTscZjmaj8Oy9filmKWaAsHtuGSYtabxkfDsdabfjmaeuOw1imafCKSYHJ0uGWavYtabPkfnsdabxjmahSOx1imagKKWaJsHBuGWaEYtacFkgprsdab7jmagKOu1imahSKWavYHxuGWaJstabfkfTsdacFjlmOy_mfJry4wpbq5G0MCyqGOjQbeuGNYs8kfTsbCKWavcHBuGNYtabSkfTsbCKWaHcHBuGNYtacCkfVrsc3jmajWOy1ilCKWaHcHJuGWatYtabSkgprsc3jlWOy1ilCKWavcHJ0uGWatYtac0kb1imae8KWaNcGDsdabpjmaiqOpuGWazYtacekd9fimae8KPcGDsdabpjlWOhuGWatYtabukd1imagCKWavcG_rsdacxjkqOMnsdacPjl_uGWaLYtabukjJuGWaHYtabT1imajCKWaHcIy1imakCKWaNTsdacxjmalqOMpZby0wofJWuozrdgNgegKcAGrfij4KWaTcHZuGNItacwkc1ij4KWaEcGTscEjmafOOC1imahGKWawIHZuGWaEctab4kc1imahGKWaLIGTsdab4jmalqOC9filWKNIHZuGVcs8kf9sc8jmafOOx1ilWKWaEcHZuGWawItab4khnsdabAjmafOOx1imafOKVcHFuGWawIsEkhpZby0wofJWuoKQfH59n-5bP3AEMNd008EUxuciPbleMaeuusoPbGaYeMadGusoPbleMacSusoPbXjmaf7uGLItabWkjh0uGSctac-kfTsdabkjmakqOw1imagqKWaVIHBuGWazctacKkfTsdabkjmal4Ow1ilaKWaPcHB0uGScsIkfTsdabkjlWOw1imagqKOIHBuGWazcs8kfTsdabkjkiOw1ilaKVcHB0uGWaFItac-kjJuGWaLYtacE1imakeKWaETsdacEjmafxuGWaKcsZ1imah4KOIIy9fimafCKKnsdab-jlWOMnsdacjjmafJuGWaFItabWkjJuGWaIYtacc1imah4KWaPcIy_mfJry4wpbq5HwigEiaejQbeuGWawYtacPkfDsdabFjmajqOluGWavItacckfDsdabijmahWOluGVItacmkfDscTjmaiuOluGNstacnkfDsb4KWaFYHxuGmKWaAIGVrsdabBjk0Ow1imaf8KWaqIH3uGWavItabukfTsdabijmafOOD1il4KWasIHBuGRstabrkhDscDjmaeKOw1ihItabxkfVrsdacfjmalqOluGWaKItacKkgnsdachjmajmOluGWaEYtacgkgnsdabYjmahuOl0uGWaHssIkd1imajiKSIIr1imaiCKWaqYG9sdab7jmafaOKDsdabYjmageOp8WwnfJHy8fdPhq29SBoNP6EKGC2vYCUKUlI7uciPbpeMaeSusoPbEeMafOup6Kgac0syasXri6KgadWsyapbq7QqyasXjGa8fdVOPbpeMac0up6Kf6syakjqwPbGaTeMac0ufQqyalrjGa8fbAKf6syaqjqwPbpeMadWup6Kf6syanjri-IKgaeSsyalrq7QqyapbjGaTfdUPbGaTeL4usoPbEeK8up6Ke8sxHri_McXOSClhGOC9quhtF16zuhBdWY9EwOersdabqjmamGOMnsc8jmalqOx1ikGKWaOcHZuGLctacmkfVrscujmafaOw1ikGKWazcHZuGVctab4kf9sdabqjmaiWOMprsdacmjmaiWOMnsdab4jmahGOx1imagqKWazcHZuGWauctabqkfVrsdabqjjqOw1imagqKQcHZuGWaEcs8kf9sdacmjmafaOMpZby0wofJWuoKQnY37UIddU6AvUhzP49CVtuciPbGbdKMafUuk6KgaeWsyauPqRQqyatzjGbhLeXQqyarPjGa-fcVOPbGbdKLouk6KgaeWsxjqRQqyatzjGaNLeXQqyarPjGaXfcVOPaYsyamHri6KdjjGa8LeJQqsPjGbhLeJQqxzjGbtfdMPbGaWeMae0uoAKgadEsyan5rl6KgadasyaiHq5QqxzjCfdMPbkKMacEusoPbteMadEus-PbEeMaekuo6KgacKsyan5rl6Kf4syaljq7QqxHjGa3LdV5GSAlhcX4khmMKqareKfbnqiIKeWsyaxzq5QqsjjGbdfeJQqsjjGaSfeJQqtbjrLdNOPbteMae0usoPbEKMafauoAKgacKsyarHqZQqyamHjGa4fdoPbGaPeMacKum6Kf6sxXq5QquXjGaIfeJ6kqyajXjrfdMPbGaYeLEumAKgadMsyaiPqXQqyapPjGaUfdgPbGa-KMaeeul6KgadMsyatjqVQqyamHjGbxLc-PbGaNeMaf4uoFMcXOSClhGOC5tCpJtT67uhdRS4AOC7rSpxWG55DUlzH3DdWtHC0wmfGiILcXjGbGefHQus5jGbueeXQus5jGbiefHQuleMaeGqyajgPq-syapbbGaKEILeUswbbmALcXjmefHQus5jGaKefHQupKMadaqwgPqSsyajbbGaKEILdbjGbGegadbQuoKMaeGqyapgPq6syapbbGaWFcILdbjmegadbQuoKMacqqyapgPq6syambbGaWF6OCQTangopbofJryWwaIkusPjGbneeTQusPjGbceeTQulKMacWqyaixOPrkKLyqs2PrkKMaceqs2PqSsyanXbGaHEILdbjwefzQumeMaceqvMPqSsyalbbGaSEILdbjGbnefzQumeMaeiqvMPqUsyanXbGaSEILdbjGbnegadDQusjjGbcegadDQusjjGaHegaejQusjjwegaej6kumeLyqyan2PriKMaceqyan2PriKMaeiqyaqMPriKMae0qyaqN-QhtfmYOmwZRL5OmNvbWW7EgZlT39EFpkEcClgIXGSbeuOLItadaijJuOKstacOilduOFjmajaGMprsIwjj4GMnsIrjlyGSnsH8KWatIcy9fkjeKWazIcW1kfItab4imaeJuKWaFYdabx1jmag4GWaA9sHCKWaysdabR1jmageGWav9sHWKWatsdabK1jlKGWaBTsHCKUcdabA1jlWGWaqTsHWKPsdabo9fkjeKWaEccW1kfItabMimaeJuKWayIdabu1jmag4GWaADsHCKWaFsdabR1jmaimGWavDsHWKWaKsdabK1jmakuGWaBDsHCKWaPIdabA1jmakqGWaqDsHWKWaUsdabo_1q5rwqAmEeClMIXGSbeuOyjmahKGLDstacuihnstacEijBuOyjmajaGODsIxjmaiqGUnstab8imaeVuKWaCsdabF1jmahmGWaBTstab-imah3uKWaKYdacg1jmakyGWaHTstac5imaiduKWaXIdab21jmam4GWaADstadpimafNuKWaYYdabe1jmamaGTnstacTik_uKWaLIcZ1jmaiCGWaqTsHCKWaFIdabF1kgstacoimag_uOxjmakeGWaE9sHKKWaTsdabZ1kgstadcimaghuOzjmalKGWatDsHCKWaPcdabd1kgstacrimae30uOyjmaguGLDstabtifTstabgihTsHGKWatIcH1kjCKWawIc41kjCKWaBYdabk1jmaheGWaxDstabSimag3uKWaxcdab51jmaeWGWaGTss4imaixuKPIdab-1jjmGWaCnsrWGWax9sstimae3uKOsc_1jluGTTstabhilJuKWavsdabd1kfYtabGimaf_uOzjmafaGWaB9sHCKVsdab71kgssPimahpuOzjjWGWayDsHKKPsdabn1kfYs6imaepuOzjmae0GWatF9uoy1bHCMfUB-9HpcofJryWwaIkus5jGbnedEPrleMaeGquUPrleMafqqxUPjGbHKfxQsyayzbkAKMafMqlAKMae2qCDsIwjmahGGD9fkjCKWarcbVuOLItaboikxuOLIs2il3uKPccO1jkeGK9ssSid1jmaeaG6MPjGaQKhluOLItabMihFrstadFimagtuKWa1sdabt1jmal4GWasDstacWimafduOCjmajOGWay9sIyjmaiqGWaEDsIyjmag4GWaJ9stabwimajVuKWaqcdacu1jmaeqGWaGnsIyjmafOGWaEDsHOKWaBIdabJ1kgItaceimae3uKWaIIc61kjCKWaBIc31kgItabyimae3uOCjmaeqGWay_9uoyP2xUG74E2u8i4wnfJbyciPrleLOqsEPqOsvHbwALdrjAegacpQumKLyqyaooPrieMacCqyamoPq0syajXbGaJ6LcHjGaIefzQupKMacCqsFOPrleMae4qsEPqOsyauHbwALdrjGboegacpQumKMafiqyaooPrieMaeeqyamoPq0syaqrbGaJ6LcHjGbgefzQupKMaeeqsFOPrleMadqqsEPjGaZegaf7QusbjGa0egad3QusbjGa0egaddQuszjGa0efB_QHZLmWOoNxLW09oUtkEcClgIXGSbeuKQcdabB1jjSGWat9ssAilxuOMssTikhuOeKWaqsb3uOeKWavscH1khstab9imaeN0uKWaOsdaby1jmaluGWasnstac1ilpuOMstacLikhuOeKWaKsb3uOeKWaFscH1kjKKWaAsc11khstabvimaeNuOSstabPimaf30uODjmaf4GWaGDsH0KWascdacs1khssYimaiNuODjleGWaB9sH0KWaqYdabD9fkhstab0imaihuODjmaiOGWaKTsH0KWaOcdacj1khstacHimag_uODjmai8GWaxF9uoK6zH5z-Ux0G2zEAddTW8UwxMEcClgIXGSbeuOAjmamaGMnsHOKWaQccy1kgItacqijJuOKctacqimagduOMstacOimaeJuOKctadailduKWa1Idaba1jman4GWawnstadjimag7uOKstacOimahJuOujmajaGWaKprsHOKSccy1kgItabiijJuOAjmagaGMnsIqjmagaGWaynsIzjmaeGGWasnsIqjlaGSnssuil3uKEimafxuKOsdabR1kjeKWascdab41kfctabGimajd0uOMstab4ilduKWaDYdacO1jmageGWaV9stacoimamhuKWaDIdacL1kjeKWaEcdab41kjGKWaEcdabG1kjaKWaEcdabi_1q5QG49orbI08SNm8e4vnfJbyciPq8syaq5bC6LdHjGbpegacnQuoeMafyqyalMPq4syatrbGa1ALdXjGbdKgadRQupeMacUqyaoUPq4syaiHbGa1ALdHjzegac5QuoeMacaqyai2Pq8syak5bC6LcXjGa3egaclQuleMaeaqyak-PqSsyanXbGa06LcXjGaUegacVQutjjGa3egacV6kuszjGbaKgaexQuszjGa3Kgae7QuszjGaUKgaexQupeMadEqyarFOPrjKMac6quMPrjKMadEqswPrjKMaecquMPq8syan5bsEN6OCXrDYdnV5y8P4jWSAlgcWersH4KWaKccs1khItab-ijl0uOLss2ijluOLstabiijl0uOLss2ilBuOLstabiilB0uOAjmalqGPnsHOKWaOIcK9fkgIssiktuOAjkqGPprstabBiooPq0syalrbsALdrjGa2efjQunKMac0qyajgPq2syanHbGaKALeIsyasbbGaTALeIsyapXbGaTALeWsyanHbGa2ALeWsyalrbGa2ALeIsyajbbGaTALeIswXbGaTEILdXjGbiefTQupeMad8qw3POPq2suHbGaKEILdzjGbregacr_QHZbWCGq0SHm8e4wnfJbyciPjGbNec-PjGbGehw1jmakqG5AKMafcqsgPjGbhKe5QsyaqjaZQupKMadCqs3OProKLyqvMProKMacWqyaiwProKMaeiqyaiwProKMafGqvNOPrmKMafGqyaiwPrmKMaeiqvMPrmKMacWqvMPrmKLyqyaixOPq8ssXbGaSALdXjGaHegacTQsyalrbGaUALdXjGaTKgadRQsyanrbGbd6LdXjGbaKgadRQsyaqbbGaU6LdXjGbnegacTQupeMagmqyalhOPjGbVKgaepQsyaAjbGa36KMafOqyaoMPqrjGbkKgadtQuesyanXbGa3ALbeMacoqyanp-Qhsft4AD27tUZOnFxBX64EH4jWSAlgcWerstacpiooPjGa5ehv1jmafCG6MPjFKcUPjAKeTQsvrby6KLyqyakwPjEKgadJQsyakXbGa86KMadQqyapEPjGbiKgadRQsyauzbGa06KMafIqyakEPjGbAKf9QsyawbbsAKMafcqsoPjGbfeb6KMadIqhQsyakXa5Qsyai5bn6LfksyaizbAALe6syaibbGaJALfksyajrbGaS6Le6syalHbGa0ALfksyan5bGa2ALe6syaqrbGa0ALfksyasHbGaS6Le6syatXbGaJALfksyatzbAALe6syarHbr6Lfksyapbbm6LfksyamXbm6Le6syakrbr6KMacCqxwProKMadcqyajMPrsKMad6qyajMProKMad0qwMPrsKMadiqwNOPqjjGbGKgadnQutbjGbxegad1QucsyatjbGbe6LeWsyapXbGbi6LaKMadaqyasoPrmeMackqyaroPqjjyegad1QutbjoKgadn_QH0LvmplPLqyEVHbT08-ENzL5NHhcXOSylarfkkuKWaIcb3uOPstab6ij_uOPstacjilpuOzjmajSGWaqDsHKKWaQcdabu1kgstacJimagNuOxjmai4GWaDnsIwjmahWGWaHprsILjmafyGD1kkuKWazccF1kkuKWavscZ1kgstabdimaehuOzjlyGWavnsHKKUYdabP1kfYtabqimahtuOLItabIimaituOxjmag8GWaNFrsIwjmagyGWarTsIwjmafOGWaxnsHCKWaCcdabU1kjyKWaHcdabC1kjyKWaEcdabg_1aIkqtbjGaKfd-PbyeMacqusgPbyeMadauuUPbmeMadaup6KeWsyapbq_QqwbjGa8fflQqwbjGbifeHQqtbjGbifd_OPbreK6utgPbFeIUPbGaVKG6Kgad0ss2PbGa2eL6uswPbGaReMacAuswPbGaKKMadiup6Kgacssyaprq_QqyakXjGbiLeLQqyanHjGbqLeLQqyarHjGbe6KgadYsyan-PbGaTeMadZQqyajXjGbr6Kgacosyay-PbzeMagNQqurjGbDLeX-ylgIXWSEcHZLt658pjbKW7SExLQbeuGLctabBkkFuGRYs1khTsdabjjjGOE9fijqKWaGYIN1ik8KWaQsH7uGWasstadgkhVrscWjmafWOP9sdabmjmafaOP9sdabxjliOKFrscWjmaiiOP9sdabmjmai4OP9sdabxjmakWOKFrsdabhjmag4OB1imah4KWaBYIr1imagmKWayIIr1imagmKWaFcIr_mfJry4wpbq5NroLJywrLBMnL1aIkqtbjGaKffBQqyajbjyffBQqyapbjyfcMPbGaWeMacquv-PbGaKeMadautoPbyeMadauv-PbmeLGuv-PbyeLGutpOPbmeMaeGuvUPbGaKeMafquvUPbGa8eMafqukAKgadasyasbrx6Kgacqsyapbrm6KfGsyapbrx6KeWsyavbrx6KfGsyavbrm-IKgadisyay2PbGbeKMagJQqyatHjGbB6Kgae6syasUPbGbiKMadAuvUPbGa8eMadaukAKgac-syaogPbGaZKMaelQqyap5jGbfAKgadWsyapbqP-ylgIXWSEcHZkKremHmG43uciPbyeMafqutEPbyeMagaut-PbmKMagJQqgsyaxwPaSsyasgPbmKMad_QqyajbjGa8fe3QqyambjGbife5QqyapbjGbufe5QqyapPjGbO6KgadcsyaB-PbGaKKMag1QqxXjGbD6Kgacqsyavbq7QqyambjGbGfe36kqvPjjAKdrjsAKcHjGaHAKeWsyambq7QqwbjGa8fe5QqxHjGbd6KgacOsyargPbGaWeMadWut-PbGa8eMadauo6KgaeMsxoPbGaZeK7QqwHjlAKfGswbrp6KfGsyajbrn6KgacesyamEPbGaWeMadautMPbGa8eMacqutMPbGaWeLGutEPbGaKeMacquo6KfwsyamoPbmeMaeGuo6KgacwsyayoPbGa8eMaeGuo_McXOSClhGOCZONsXThsWTZgY6GrfijGKWaKcHVuGSctacOkkluGWasctacOkkVuGWayctacqkkVuGWasctacqkjNuGSctacqkkl0uGWaBctac5kkJuGWaGctacKkkJuGWaJItackkkJuGWaKstabVkkJuGWaJItabukkJuGWaGcs6kkJuGWaBcsLkkJ0uGMctabikg9scWjmaeGOOTsdabijmaeGOMDsdabGjmaeGOQ9sdabijlaOQ9scWjlaOOVrscWjmagaOMDsdabGjmahGOOVrscWjmahGOMDsdabijmag0OQ9sdabGjmagaOOVZby0wofJWuoKTmysbKzxjUAEHYzsbZ6wfUy2xW', 4
    initObject
    push 'name', 'Guerre ou paix ?', '6ehxE', 500, '+m7O', 2, '4g=(', 'IYGSHjoiSjGWaxys51nsyapshnsyarckFuMaeqJabd1jGa1OWaAnsyajcmagFuLYJabi1Lb4cy9LbzbOGeOtypef5qKuqBEmcONzCiAacwihS6useHandCursor3WLciWat4syVQoKakaA56Ju74s3eyamAGnr0GbqdxpuANFcw4Jab7ubQoKaklMUEO1o-eOrgaeEOx9fcDCrGa66HgHgac7QeRrgacTQeWasXgadpQeWavHgad7QoKbkaA56Ju74tabZeyarkGnqMaeGiWaKnqMaeQiWaPnqMaesiWaTnqMadOiWaTTr0GjsrnC9rQD8jGaYcmajXri6HmaeirGbi6JPasGgUEO1o-eMrgafmOduDicua1Z1gP3WLuiWaVfaAJPasI5RNQntVHmaeerGbFkf9r0GjqdxpuANFcyakGJacUub6ke6OGnqKKiNDqLOiSTqMacWiODqMadEiC1cyaryH7ujGbvIl3ujGbsImaf_uDieuxnC9rQD8jGa-Imag9qVQeWavbgadpQeWarXgacFQePHf7QoKckaA56Ju74szexcGnqIOIN1csWH_uDieua1Z1gP3WLuiOLaAJPaII5RNQntVHmaeerqkf9r0GrqdxpuANFcyakGIWubQoKcksjRNQntVHmagqrGaHkjhuDieua1Z1gP3WMadMiWavvaFXeGXAiKKltiuaSUW8qqmwMrHYOLH4GGymOname6rP-5bMW6EIdzHqCmoNWGF6GrfbjOiWaKcGnqsMcmakGOdueVqJac6ka1bmafuiWaWcGnqtabUcmalGOdueWaGGJacLka1bmai0iWaJYGnqtacqcmahGOw1bmagKiWavcIx1bmafyiWayIIx9fbjOiWaysGnqsMcmaeOOdueVaI6ka1bmafuiTcGnqtabSclSOdueWaGaJabkka1bmai0iWaycGnqtabRcmaj8OL9qtabzcmai4OL_rqsycmahGOw1blaiWaEcHBueWasaJab4kfTqtabGcmahGOw1bmahGiWaEcHB8SwmfJry4e_L6HLW48Qb_QbeueTaIDkc1bkqiTIGTqsOcmafaOlueWatWJab7kb9fblqiWaWsGTqsKcmakGOlueQaJacokc1bmae8iWayYGFrqtQbgadNQcoHgadhQcuarGaW6GLCeyapoOjFbgaejQcyamWrGa3La6GMaekeyambqRceb1bmaiuiWaFIHvah0ueWaBaJadB1bmafuiWaYTqtabLcmalmOv1bmahSiWaNcHx0ueWaEaHBueWawWIt1bmaguiQYHxueWaEWJabckfFYXyWwnfJGt-FP2vbM6-CVPbWW81Y5DQF0XO7k3oJs2edg3TRs6DjaYe7cXSBQYTlyxhaMIXGSwlarfkjqiWasasy1kjqiSasW9fkjqiWaQasy1kjqiWaWasW9fkkiiWayasW1kkiiWasatabi1kjaiWayatabG9fkkiiWaKasW1kkiiWaQatabi1kjaiWaKatabG9fkhWJab4bmaeJuOFcmahGeWaEp9t-MTmysbMDxpPzsbKzsbSysbMCMf0zxjUAxtPlJGtryWwlfGiILfseyaiijjALcWrGaGGLvQulbgacYcvwPrlbgacYcyaiwPrlbgacYcyalwPrlbgadIcyaoxOPruHgafccswPqSeyauijvALcWrGbeGLvQusWrGbeGMacfQusWrGbeGMac1QusWrGa4GLv_QbeueLaJacDka1bkqiWaJsHtueSqJab4kgDqs7cmagaOz1bleiWascHNueLaIEka9fblyiOsGnqsLcleOu1bjKiWascHNueKaJabGkgDqszcmahGOz1bliiWaNIGprqtabEcmameOdueWaCaJacQkfnqtab7cmajuOz1bmaiqiWaFYHNueWaFqJabMkgDqtabGcl4Od0ueWaHaI8ka1bmahiiWaucHtueWazqJabLkgDqtabCcmah4Oz1bmaguiWaLsHNueWaGGJac_ka_lfJby0wobp6H0ONDM91CYbHAxmGyxbWB3j06sbKzxmGyM9UyM9UCY4UlTt-LkGGX79U3kGxlLYdHP49Co7OUobnfJbySwaIkuoHgacccsMPq6eyalijkALdOrGa4GKPQuoHgaescsMPq6eyauijwALdOrGbqGMacjQuoHgaescyalMPq6eyaoijGaUEILdOrGaGGMaezQuoHgacYcyarMPq6eyaoijGbgEILdOrGaSGLzQuoHgacYcyaiMPq6eyalijGaUALdOrGaSGMadP_QbeueQWJaco1blWiWaH9qtablcmahxueWatGJabH1bmaeaiWat9qsWcmaeOOKnqsxcmafeOKnqrWiWaBcIq1bjmiWaHYIq1bkCiWaLYIq1bmaeaiWaLYIq1bmafmiWaHcIq1bmagiiWaBIIq1bmahWiWaBsIq1bmamaiWaA9qtacLcmagWOp8SwmfJry4e_PUOB-VlJ136uhtdU6imMvb2079MxDJYOh-P_uwPmRgYUZk9edk3edoWS7kqmJkqnZE6otkqmlA0UJt0LXCxhaMIXGSwlarfkgaJab7bh9sHGiWaJWsA1kgaJacGbkJuOycmalaeM9sHGiWaXasq9fkgaJadbbmagFuOycmakWeWaC9sHGiWaMqtacb1kgaJacibmahluOycmahieWaAprsHGiMGs91kgaIWbmaeNuOycmaeaeWawDsHGiWauatabl1kgaJabPbmaed_u_PcLzEM_DZqBmVnbH5BCVm4e0wmfIXyciPriHgaeictgPqirGa2aLHQutqrEaMacrQutqrEaMadbQutqrGaQaMadb6kusirDGKXQuceyakyjyALe0eyaqyjGaKALe0eyaqyjGaWALe0eyanyjGaWF6GrfbhWJabAkjlueNWJabjkjlueTaJabokjlueWaraJabCkjlueWavWJabSkjlueWaqGJab7kjlueTqJacmkjlueNWJacpkjlueFcmah4OKTqsFcmagSOKVrqtabRcmalOOD1bmaf8iWaPcH3ueWaxWJacjkhDqtabWcmagSOD1bmaf8iWatYH3ueWaxWI0khDqtabRcj4OD_lfJby0wobp5AG7Dpna_1p52OzCopqGtikgxdJYNaMIXGSwlarfkhaIWbjJuOCclaeWasnsHWiWasatabG1kdcmaeGeWaEnsGWJabGbmahJ0uOCcmakGeMnsHWiWaQatabi1khaJacqbmagduOmiWaKatab41kdcmahGeWaEprsIEcmagaeMnsIEcmaeGeSnsIEcmagaeWasprsIEcmahGeMnsIEcmajaeSnsIEcmahGeWasp9qiIGMaeGeyaizrj6GMafeeyalUOjGbibgadMuo6GMad4eyaqEOjGaWbgadMusEOjGaMbgac3QcyamarGaHLdUOjGa8bgac2uwpOOjGaLbgagcuo6GMadgeyavoOjGaLbgaeIusEOjxHgad5QctqrGbiLdUOiqrGbvAGK0eyayjrj6GLKeyavjry-IGJqrGaPLeNQctGrGaYAGL0eyakzq7Qcyai4rEAGL0euzrj6GK8esEOi0euzq7QcCGI31bkiiUYIX_lfJbu0vobp6AQ2NTLqBmVnbMY9FcdiNW8UMNnPX5uchuciOiUeyavUOjpHgafBQcwarGboAGLMeyarPrkAGLseyaowOjzHgacIusNOOjkbgacyupAGNucmafFueLaJabKkhTqtMeyaogOjkbgad4upAGNmiWaITqsucmajqOE9fboyrlAGKQep6GLqeuoOjsbf_QcxyrGaI6GMacEewgOjEHe1QcvWryAGMacueyakoOjGaNHgadCup-IGKSeyaA-OjoHgaf3Qcv4rGbA6GMacgeyaxUOjGaSHgaf9QcyalWrGbnLeXQcyanOrGbefeXQcyaoyrGa3LeXQcyanGrGaRfeXQcyalWrGaHLeX-wlgcXOSCeF0HuEULbH07CQdfPY7LY5DQF0TORCqotE6UJkqoZk5oza2e7c2TlO09jWjOSylfIWersHSiWaBqst1kjGiWavqsR1kdcl0eWaq_rsIycmaiueQ9sGWJacDbmaep0uOAcmag0eQ9sHOiWaBqtabd1kgGJabTbmafVuOAcmag0eWaC_9t-KQfSW7SEJkGX79M_BIYRLY44e0wmfIXyciPqirmaLHQucewajGaKALaHeWcyamhOPq8eyajajmALdWrGaWaLHQupbgadacyamgPq8eyajajGa8EILfGeyavajyALfGeyayajGaKALfGeyavajGaWEILe-eyasajGaKALe-eyapajGaKALe-eyamajGaKALe-eyajajGaKF6GrfbjyiWaSIGnqsRcmaj4OdueWaqaJackka1bmaeeiWaOcGFrqsvckWOdueQaI-ka1bl8iWavcGnqtabacl4Oh0ueWatqJQAGMadAelAGMad0eu5qPQcyam4rEfcMOjGaTHgacQukAGMacWeyaojqPQcyalyrGbhLcMOjGaZHgafqukAGMadUeyaxXqP-wlgcXOUCeFZnhPuQvjaHqODqiIGK0eyasbq_QcwirGbtfd-OjFHgaeHQcyakarGbmAGMadieyawzroEIGK4eyajHq_QcwyrCfd_OOjZcmahdueVGJabYkkl0ueWaDqI8kjxueWazWJabokjxueWaxGJabKkjxueWaxGJab6kjxueWazWJacqkjxueWaDqJacIkjx8SwmfJry4e_PgM4DoJl1xlLYdNU05LY5DQbeueSWJadbkfnqs0cmakOOu1bluiWaKIHtueTWJab7kfnqs5cmagmOu1bmaeWiWaIcHFueWayGJacAkf_rqs_cjKON9qtabtcjWON9qtabwcliON9qtabrcmaeGON9qs9cmaeSON9qs9cleOB_lfJby0wobp6yPMvbJW7oU3l0qzmQdzHqCmoNWUxlTt-M6DV680hBF15On_xTY37UIdzL5OmxldZxhaMIXGSwlarfkjWiWaqWsv1kjSiSWsQ1kjSiTatabc1kgGJabebmafFuOAclGeWaA9sHOiQWtaca9fkgGJab7blduOMWJab7bmaeJuOMWJabJbmaeJuOAcmagmeSprsICcmajSeLDsIBcmakSeQTsIBcmakOeWaqDsHOiWaMGtabx1kgGJacMbmagVuOAcmalmeWaGp9t-KnoBYbW6xbPBIbUBYbJCNKUobnfJbySwaIkupbfOco6LeGeyalOjiALeYeyalGjyALdWrzaLP6kupbgafuco6LeYeyaqijiALeGeyaqqjyALdWrGbwaLP6kusWrGbFGMacNQusirGbdaMadFQusWrGbkGMacTQusirGa4aMacP6kusWrpGMacNQusirGaSaMadFQusWrGaKGMacT_QF0RORC7n7Z0UzaXnlk3oZk0TJyWTZO5NaMIXGSwlarfkjuiSasy1khqIWblduOaiSatabi1kacmaeGeWasnsGaJabGbmaeJuOKWJabGblduOKWJabGbjJuOaiWasasy1kleiWasasW9fkhqJacObmaeJuODcmakGeWaynsGaJacObmahJuOaiWaKatab41kacmahGeWaEnsItcmahGeWaynsItcmahGeWasnsIvcmajaeWasnsIXcmajaeWayp9t-CPcdjLqz-UxLYYRJGtrCWwlfGiILeUeyajajk6LeUeyajajw6LeUeyajajGaI6LeUeyajajGaU-ILe2eyamajk6Le2eyamajw6Le2eyamajGaI6Le2eyamajGaU-ILeUeyapajw6LeUeyapajGaI-ILe2eyasajk6Le2eyasajw6Le2eyasajGaI6Le2eyasajGaU-ILeUeyavajk6LeUeyavajw6LeUeyavajGaI6LeUeyavajGaU_6N87vSU7pLW7SEvaHqOtGtryWxlfGiILeMeyatqjiALeMeyatqjuALeMeyaqqjGaGALcGrGa1aLr6kusyrDaJ-PrjHf0cu-PrjHgacKcx_OPqOeyatqjGaR6LeIeyaqqjGa36LeIeyanqjGbd-ILcGrDaMacVQusirGaPaMadH_QF0LrEEpF1W5owvbH07ColzLxhaMIXGSwlGrfkjOiWatasw1clSeODsIAcmaeWeRTqJabzbl_uOMGJabKbk7uiWaBWsJ1kjOiWazasw9fkjSiWaQasM1cmalOeSDsIBcmakGeVTqJacDbmae7uOMWJacqbl7uiWaEWsV1kjSiWaKasM9fclGeWaFnsIJcmaeGeWaBTqI3bmagduOOWJabibmafBuiWauWtaba1kkmiWayatabw1cmahaeWaxTsIJcmagaeWaBVrqJacZbmafBuOEcmaj8eWayTqJacvbmafhuOEcmaiCeWayTqJab2bmagZuOEcmaiCeWaETqJacvbmai7uOEcmaj8eWaEV9t-MAdT39EsdlU6CSQdzL5OogxRW2zEAbcCcAlgcXySbeuOycmafqeM9sHGiWaqWsT1kgaITblhuOycjWeN_rsHGiWaIGsB1kgaJacBbk3uOycmaleeSDsHGiWaWGsF9fkjmiWaBGtabj1kjqiWawWtabL1kjqiWaqGtabE1kjqiQWtabp9fcmahmeWawnsIucmaimeWazDsIucmajWeWaxTsIucmalmeWat_9t-NkfV3legnpL59egZcGZ9CVlLLqyDM_LZqpZGtryWwlfGiILd4rGaKaKXQGcusOryaLHQGcusOrGaKaLHQGcusOrGaWaLH6kupHgaeGcwgQajroHgadWcyajgQajroHgaeGcyajgQajroHgafqcyajhOPq-eyamajGaWAOaLeUeyajajGa8AOaLeUeyamajGa8AOaLeUeyapajGa8F6N9k1tdU6iogNMG4B-Vjb239EA5CUobnfJbySwaIkuuirBGJ-PrmHgacEcu-PqQeyaj4jF6LcOrBGMacV6kuuirGblGJ-PrmHgad-cu-PqQeyap4jF6LcOrGblGMacV6kuuirGaZGJ-PqUeyam4jGaR6OaLeIeyaj4jGbd6OaLeIeyap4jGbd_6N8_umpnbJ37UMxD05Oeke4e0wmfIXyciPrjbfGcs-PrjbfGcv-Prjbgacqcv-Prjbgacqcs_OPrpbfGcyao-Prpbgacqcyao-Prpbgacqcyal-PrpbfGcyal_OPrtbgadqcyai-Prtbgaeacyai_OPq6eyayajl6LdOrGbuaLFQuoHgafqcyai-Pq6eyavajGaV6LdOrGbGaMadV_QFZEHT7z0otkqejcqKjWjOSylfIWersH4iMasy1khGIWblduOEcmaeGeWasprsH4iMatab41khGIWbmagduiWawatabg1klaiWaBatabi1klaiWaHatabi9fkgGJadabjJuOAcmakGeSnsHOiWaQatabi1kgGJacObmagduOAcmamaeWaEp9t-K6HH5OmMvbX64ExttL5iekfcCcAlgcXySbeuOPqI8bjJuOPqINbkVuOPqIWbl_uOLaJabjbmaeRuOLaJabEbl_uOLaJabmbkNuOPqJabDbjp0uONqJabybmagBuONqJababmah7uONqJacGbmah7uONqJacibmagB0uOPqJacIbjJuOPqJac3bkVuOPqJacUbl_uOLaJacvbmaeRuOLaJacabl_uOLaJacsbkNuOPqJacbbjp_u_PproLMzxjSyw50zsbWDwDUywnLlJGtruWwlfGiILeUeyauWjiALeUeyasijm6Ld4rGa9aKNQeyan4iwPq-eyamGjj6LeUeyajOjm6LeUexajiEIHgagccwoPrrbgafocyaiEPrrbgafecyalMPrrbgaeqcyalwPrrbgad2cyaiVOPrnHeGcyamMPrnHe-cyao3OPrnHgagCcyamMPrnHgaf-cyao3OOroGLJQuuqrBGMachQuuqrEaMac5QuuqrGaRaMac1QuuqrGaXGMacl_QF0XtmkdLV3zmQdjLqBe-hpYY8-ExRYxhaMIXGSwlarfkjuiWayarRuOLqJabfbjFuOLqI_blluOPqJabBbmaeduOPqJacdbmaeduOLqJac5bmafxuOLqJacRbmahtuOLqJacjbmahFuOPqJabWbmafZ0uOKGJab-bgTsIscmajKeL9sIscmaj8eSTsILcmajKeWawDsIscmafueWaD9sIsclmeWaDnsIsckueWavDsILcmaeyeWawFHrqJabTbowProbgadEcuF-P_oAG09doYKdA3TZP0LXWjOSylfIWersIEcmagmeA1kjOiWavqsF1kj4iWaxGs41kj4iWaxqtabF1kgGJabebmafluOMGI6blV0uONGJab8bgTsIAcmaiKeN9sIEcmaiaeUnsIzcmahaeWatnsIEcmaieeWax9sHOiWaMGtabs1kjOiWaPas79fkjOiWaRatabX1kgGJaczbmailuOMaJaccbmaiZ0uOMGIYbmahhuOAcmaeueWaGTsIycmafWeWaJnsHOiWaCatabY_1p6qPMfbM2zEVjbK6OnUhyUocnfJbySwaIkusyrGaRGJgPrjHgacGct-PrjHgac4cxpOPrxHgadEctEPq8eyaoajGaK6LdWrGa4GMadf6kukbgafCcyajUPqOeyatijGaRALcGrGbeGMadxQukbgad0cyap3OPqOewajGaM6LcGrGaIGMacTQukbgacQcyanEPqOeyamGjGa_EILeMeyaq4iXQusyrGbhaK_QusyrGbbaLZ_QF0LrT_lhLqCT_pkT38So7pLxhbgIXGSwlarfkjCiQas51kjCiSatabv1kkqiWaratab51kkqiWavGtacp9fkjCiWaTGs51kjCiWaRGtabv1kkqiWaMGtab51kkqiWaIatacp9fkjCiWaOGsN1kj8iWaJWtabt1kj8iWaHGtabR1kkqiWaBWtab_9fkjCiVasN1kj8iWatWtabt1kj8iWawatabR9fkjiiWaBWr3uOKGJacfbktuONWJab_blZuONWJabFblZuOKGJabzbkt4u_u_NTpDxjHz2fUihb1BhdPlJGJryWwlfGiILfmeyaiGiVQuuWrGaTGKTQuuWrGbfaLX6kuuWrGbnaI-Prtbgaegcs2PrtbgacOcxhOOrGbSGLzQeyazii5QeyawWj1DqJacpboVQeyaoWiTQeyakGjsAHfGcv2OrkaK_QetOiTQew4j2nqJabwbo1Qeyanyi1QuwirGa3GLz6kulHgafScyakUPrtbgafccyai2PrkHgad0cyakUPrkHgacEcyamUPqUeyajOjGa86LeWeyamijGbe-ILc4ruaMacRQuuWrEGMacnQusOrGaYaMacRQusOrGbhGMadlQulHgaeIcyapoPrmbgad6cyarp-P_sDe65DIdjH3C0gXpL58mopkUodngJbySwaIkeyawWjY1kj8iWaZatabK_1p6wPMvbW5DD2NlYqCmVlDPX6CVxWUocnfJbySwaIkuu4rGa2GI-PrtHgacQct-PrtHf6cw-PrtHfkcyaj_OPrtHgaekct-PrtHgae6cw-PrtHgafQcyaj_OPrpHgadAcw-PrpHgacQcyaj-PrpHf6cyam_OPrpHgaekcyaj-PrpHgae6cyam_OPq2eyanOjGaZ6HgadAcyaw2Pq2eyanOjGbl6LdyrGa2GMad__QF0Nt9YdMN8OnUxOG6B-VnaHqOtGJrCWwlfGiILdWrraJ-Pq4exqjt6LfeeuqjF6LdarDaMacVQuu4rraMadF6kumHgafKcp6Lfkeyatqjt6LeOeyawqjF6LfueyatqjGaR6LeIeyawqjGa3-ILcOrGbnaJ-PrjHgaeecp6Le-eyaqqjt6Lc4rGbbaMacVQunbgaeecyan-PrxHgae0cyan_OPrrHf0cp6Ld4rGaPaJ-PrlbgacKcu-PqqrGaPaMacVQutirGaPaMadFQugexqjGa3-ILcGrGa1aJ-PribgaducxUPrkHgaducyan__G', 4
    initObject
    push 'name', 'Canon à pulpe', '6ehxE', 500, '+m7O', 2, '4g=(', '', 4
    initObject
    push 'name', 'Mort aux fruits jaunes !', '6ehxE', 100, '+m7O', 3, '4g=(', 'IYG0aWtNRHYY7DoxLLqBnoFDLMrHYOLH4GGymYfallSpeedfOIsqTesdfPqwqKNeweMnqLYZHmfdkdWeX76MgJMacwGOu31mnhmaeTbCPVQCWat0gaeFQCTugafnQCCqyau-PZMGWaFDtJsdabf1ov6c21mnhmagnbCPV6kyAoyavAcHtFuW0CWaK0fcM-PHO5GbjOlLn9tMaeGGWaLTtMafCGWaQntMagEGWaOTtMagYGWaGntMagsGWasntMafoGTTtdrZab7qxkB-INlrb1ntKSGMDtKKGS9tbNlLbGaQPVQym5GaNOmagnn9tbNmagrbGaUjV6kCWaSehu1oyazAcu1oyazsc21mgCWaPugacSM-PGZMaeEGWaze31mgCWaEKgac6M_OPZabUqCDteICWaBKe0M_-PzeIPUGWaydMadyyx1tDbGaKhmahGWwQBOla5Gbigd1tDbmhmakGXi6PUGMdMaeGyKDu3qtbZab4msoQBOjG5GaWgjhvn0eWCWasdeJQM6cyowbIr1tDbyhmaeGWEQBOmaeG5GaWgc1tDbyhmahGWEQBOla5GaWgd_ildfHcWqqCQtalon1bY4ereXqmqiiHyySqwleuWWCWaEKgacSM-PHG5GaYimafzn9tdbZabVqyaiAB6MfZMae0GWaBu31mlNmaerbGa2PVQyxoyanYcHtF_uhmdaeuXcXeWGIhbIXbySrtdbZabmqt6B6Mju5GaYij9n9tc5ZabKqw6B6NmagrbGa56NmaeXbGbo6Nj1bGbr6Ndqyar2PWegadxQCxqyajwPYDqw-PHC5GaMilDn_rtdbZacvqt6B6Mju5Ga-Oj9n9tc5Zab9qw6B6NmahXbGa6ANmai1bGbp6Nmal1bGbuANmanPbGbiANmanXbGaWANmamTbD6MfZMaeQGT03-ut9qC2avant-gardecciwglefIYffmlNlXbGaLPVQyxoyakcdabFtFuW0CWauegacwM-PHC5GbqimaeTn9tc5Zacmqyal6B6MgJMaeyGWas031mv5ZabTqv6B_eIMgJMadiGWaue31mnhmahHbGaOjVQyxoyapcdabKtFuWUCWazegadiM_-PyIPUGKJMaeEylvn0fgCWaQdbAPUGTdMagaylvbGaMNmanFvbGa7hmanJvbGbkhmamBvbGbnNmaj_vbGbhNmagJvbGa5hmafJvn0gacKCWawddwQBOlO5GaSggVru3qsrZabtmfQM6cJoxrGTu3qwHYEmfQGWasJIMQdabSobQGWaKdJ-Qdacvox2Qdaccoyap2QdabToyaq2QBOmafi5GbeggTu3qxrZacimnEMIOaoyan-Qdadkoyan-QBOmafi5Ga4ggTu3qxrZabWmnAPUGOZMadGyQVYcWXyqSeehmNsdrIXeZJDsXftDbrhlaWXQM6cSoyajbHJvn0fGCWayddgQBOla5Ga8ggnu3qvHZacqmmAPUGOJMafqyy9ftDbDhlaW1QM6dabeoyajbHRvn0gacqCWayddwQBOmaeG5Ga8ggTu3qyaiHZacqmnAPUGUJMafqyA9fqCJLlQGKJMacnQM6cyoyambIQ1tDbmhmahGXvFKfHIWHyiioAbagNg_aGfL6G5CoawMiIieeqSmwilfIkCWavubAMgJMacMGQu31mnhmafnbEPVRcebmnhl9bEPVQOeW0CWau0gacIM-QGtdrZabNqxQB-INoOGWaLntK4GWaUDtLGGWaU9tMacAGWaRntMacQGWaLTtMacuGWaGntKOGWatTtJIcU1osYcs1mv5YSqtkB-INmaobbGbiANmamjbGbB6NmakrbGbzANmajzbGbpANmajDbGbcANmakDbGa8ANmanzbCANmanrbn6NmamXbjAMk85GbzijLn_rtMadKG62PIVoyaokcytF0u5GbiiooPHO5GbhOkLn9tdrZacpqxQB6MgJMad2GVu31mnhmai9bGaOPVQyAoyauAc9tF_uhsfSYOn2_l1YinUhpP49COqrcWXyGSwiPIVowIcGtFuXxNmaeDbAPVQyRZMad2GWaru31mv5ZacqqyalsB6MgJMaeGGWaB031mnhmahPbGbcPVQyAoyamIdacftFuW0CWatKgadEM-PIVoyajYdabAtFuXxNmagnbGaIPVQyRZMaeUGTu31mv5ZacQqucB_6G5ugCmyaeeqSmwilfIkCWa3ugae5QCWaVugafDQCWaIegaf5QCWas0gafZQCN0gafxQCnbGbl6Naqyam2PYuqyaiwPYYqvUPIOoyajccDtFuXuhmaf5biPVQyQdMaeaGKu31mvbZacwqtQB6Mju5Ga2Ok9n_rtNfbGbqANj1bGbz6NmaePbGbE6NmakXbGbrANmamTbGa96NmamPbGaR6NmalbbGaKAMgJMaeIGWase31mnhmahLbGaKjVQyAoyamkdabitFuW0CWasugacqM-PYCqyaloPYDqyanUPYVqyapUPZabCqyaq-PZaciqyaqoPZacPqyapgPZac0qyamUPZacKqyalMPHC5GbiOmagbn9tc5Zab5qyamcB6MfZMadcGWaye31mlNmaeLbGaWjV_QwiQBOmaje5iMc1tDbGbmhkyWwQBOmajm5GaIgc1tDbGbaNmafuWwQBOmagS5GaJgc1tDbGaTNkWWEQBOmaeK5lMd1tDbxNjmWEQBOj05tgd1tDbphl4WEQBOkW5GaQgd1tDbDhlaXkQb1tDbGaLNmaeWXkQb1tDa8CWaxJfoOhvn0gacCCWaBteQOh0vn0gaeICWaZtbAPUGWaMdMafWylvn0gaeMCWaMJbAPUGWaGtMaesylvn0gadwCWaMdbAPUGWawZMafKypvn0gacsCWaXZb6PUGRZMagwypvn0e6CWaUdb6PUGNJMafaypvn0fyCWaIJb6PUGUJMafCyLva6PUGWasZMaeKyLva6PUGEoyaqbINud-qwglcfGGG5SaOUqwqaqIiLQwiQBOjG5GbpMkJvn0fyCWaIZfrQM6dabaoyao5IO1tDbGaXhmajiWXQM6dabIoyavbHJvn0gacECWaNtdgQdabaoyatgQcZoyatUQcHoyav2QbS5Gbz6OboyauEQbG5GbgAPUGRdMadUyQpru3qtbY7mvgQBOkW5GaNMkJvn0gacaCWayZfrQM6dabIoyajHHJvn0gadeCTJdgQBOmae85GaGMgnuf0CWaqDufmCSnueICO9uhe5BAOaoyajoQBOkW5GaXMkJ8GSmwelbbbZa8a8GSS43uSru3qmNliWVQM6cFoyaiXHFvn0fUCWavZc_OQBOgtMafyyx1tDbpNmajGWVQM6c3oyaq5HF0vbZoyan-QdabMoyan-QdackoyaooQdacCoyapEQdacKoyasoQdacFoyav2QdacmoyayoQdab2oyaxUQBOmahC5GbuMkJvn0gadUCWaGtfrQM6dab3oyaljIO1tDbGa7NleXuAOmagO5lAOmafa5lAOmaeu5q6Omaeu5z6OmaeG5GaPAPUGWasZMadEyKFItYcWXyqSeehlcGgqbYnqCZzSppOGX9CwuiiIuglefIYjfmlNmafbbujVQyxoyakcc8tFuWUCWauegacGM-PHC5GaYimafbn9tc5Zab4qyakcB6MfZMaeyGWaue31mlNmaiXbEjVQyxoyarIcOtFuWUCWaEefqM-PHC5GaYikHn9tc5ZabKqxIB6MfZMadWGVe31mlNmafbbkjVQyxoyamIcutFuWUCWaEeeOM-PHC5Gbgijrn_9sXftDbGaHNmafaXuEIPUGVdL4yQnu3qxHZabKmvgQBOmaem5Ga8gkJvn0f4CWaJdfrQM6dabdoyaubIO1tDbEhmalqXuEIPUGLdMafOyQTu3qpNmakaXvAPUGLdMaeyyQTu3qpNmahGXvAPUGLdMadiyQTu3qpNmafaXvAPUGLdL4yQTu3qu5Zab3mu_P5byySiwccdM7zHqBCoprV08SUOoDhGfIFjGefLGbIbbeldfIcXyIMgJMafQGWaqK31mnhmakfbxjVQyAoyawQcAtFuW0CWaYufCM-PIQoyawQcUtF0uWWCWaDugadCM-PHG5GbeOmaijn9tdbZacDqyanYB6MgdMaesGWawK31mvrZacjqyanYB_cIMfZLqGQe31mlNlXbkjVQyxoyakccOtFuWUCVef4M-PIQoxIcOtF0uXxNlbbGbmPVQyRZMaciGWaHu31mv5YWqyaokB6Mk85oimaivn9tfuCSegaekM_-PyIPUGNdMaegyQTu3qv5ZacemvwQBOmaeq5GblMgfa6PUGWawdMaegyy1tDbGa2hmaimWXQM6dabToyauzHFvn0gacWCWaTtc6GDu3qyaojZac7ml6PUGWaGJMagIyx9ftDbohmafSXvAPUGRZMac0yQTu3qyaiHZabhmmkb1tDbGaShmafSWXQM6dabSoyalzHJvn0gadACUZc-QBOmafG5uMf1a6PUGWaCtLgyx1tDbGbbhhtc_OQBOjW5Ga3MkRvn0gacWCWaBZdgQBOmagW5Ga3MgpYcWXyqSeehowBFY6zuhdFPZ7SUOoxegIIiMNbbeldfIcXyMIMkG5GaGOjbn9tfqCWawueGM-PIOoyaokcqtFuXuhmaiLbijVQyQdMad6GQe31mvbZabLqvcB6MkG5GaMOkHn9tfqCWawugacaM-PIOoyamQdabytFuXuhmah1bGaSjVQyQdMadIGWaqe31mvbZacjqyaicB6MkG5GbkOkHn9tfqCWaOueGM_-PyIPSOlineaLcBb4HxYHiOG28yfroY4q0aeSqpz0OKjcaAg4OIKCJVKfooyapqXx6K0SaWRZBNu_un8GUXZab6gk_uMLGgdbTZQFQg-qyaj45Ga9ddgPnlamgJBNu_un8GWayXZab6ggTsAwayng3oP-OB5bGa1JMaeCmnAK0SaWAnUDt9q3Ydab0hmakiyA1imai8CWaWDsdacShmamNuGWaWrZac81imamSCWaODsdac5hmahhuGWaOXZabq1imaiKCRTsdab3hkxuGWaAbYM1jPybGWBC6N6HVKgadaoxWWXQtsWdbG251p1dFimafCCWauHHJuMLGgfEBC6N6HVKgacgoyakqXx6K0SaWRZBNu_un8GRXZabsgk_uMLGgfEBC6N6HVKfWoxWXx6K0SaWRZBNu_un8GWatbY-gk_0uMLGMfEBC6N6HVKfooyamWXx6K0SeWRZBNu_un8GUXZabMgk_uMLGMdbTZQFQg-qyaj45GaZddgPnlbmgJBNu_un8GWayXZabMggTsAwcyng3oP-OB5bGa1JMacKmnAK0SeWAnUDt9q3Ydab0hl4yA1imajeCMTsdacVhh9sdadghjVuGWaZrY-1imalyCWaDTsdacIhmajhuGWaFXZacY1imag8CWaUTsdabMhmalRuMLGMdbTZQFQg-qyama5GbrddgPnlbmgdBNu_un8GWavXZacoggnsAwcyv5TZQFQg-qyaiy5GbhdfFQtsWtcVnUDt9q3YcVhmai4yR9sAwcyv5TZQFQg-qxa5GbrdfFQtsWtcVnUDt9q3YdabmhmakiyR_XbymwcfGqqoAQgxPP6iog_D01fIkqDqCMTsBKeOotyXuAK3igXY1gkGOhuM5buJLCmvbqoPnYdabdhjKyA1jUqyak45mJdwPnYdabShjKyA1jUqyapG5wddgPnYdaclhmaeeyy1jUqyasO5GaTJdgPnYdacfhmag8yy1jUqyalO5Ga_JfFQtCGWaAXZacxgk8OhuM5bGaPJMaeSmlLa6K3imaeCCWaFXIV1jUqxO5GbldfEudQtCGNHZabHgkRuM5aWoyaoaXvAKhiCWaH9scvhmajRuGWaqrZacO1jUqyalO5Gbwdc_OPb1bZade1jUqsG5GbHJfrQtCGBhmakKyQcGDsBKfsoyawaXufa6K3imaemCWaXrHRuM5bGaRJMagkmnAK3imagWCWaXrHRuM5bGa-dMafKmmAK3imaiSCWaNrHJuM5bGbkJMaegmmAK3imaf0CWaxXIV1jUqyany5GaJJfEudQtCGWauXZabigfYGDsBKgacooyal4Xx6K3il0CWasbIVkb1jUqwq5Ga4deJQtCGNHZab9gkRuG5dMac5QqlJMacxQqx45AAK3imaf0CSHHF04K8qwdfGHyeedPEqwCUZzV7Oi3lRP6C0ghzSqC-MhL4', 4
    initObject
    push 'name', 'Fruit d\'artifice', '6ehxE', 50, '+m7O', 5, '4g=(', '', 4
    initObject
    push 8
    initArray
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '4g=('
    getMember
    push '8Jf;N'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label3:
    pop
  end // of initMovieClip 677

  defineMovieClip 678 // total frames: 0
  end // of defineMovieClip 678
  
  exportAssets
    678 as '__Packages.miniwave.sp.bads.Brugnon'
  end // of exportAssets
  
  initMovieClip 678
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '=H02A', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', 'type', '5i(', ' DVkC', '0w*(((', '4k8;L', ')]6(', '{r-z7', 'nextFrame', '()nBD', '+N5T', '1U_vK', '}cj8F(', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '=H02A'
    getMember
    not
    not
    branchIfTrue label6
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '=H02A'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '=H02A'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 360
      setMember
      push r:this, '0Pezx', 1
      setMember
      push r:this, 'type', 48
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
      push r:this, '5i(', 2
      setMember
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ')]6('
    function2 () (r:1='this')
      push r:this, '5i(', r:this, '5i('
      getMember
      decrement
      setMember
      push r:this, '5i('
      getMember
      push 0.0
      equals
      not
      branchIfTrue label4
      push 0.0, r:this, '{r-z7'
      callMethod
      pop
      branch label5
     label4:
      push 0.0, r:this, 'nextFrame'
      callMethod
      pop
     label5:
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='super')
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:2
      pop
      push r:2, '+N5T', 0.6
      setMember
      push r:2, '1U_vK', 6
      setMember
      push r:2, '}cj8F(', 23
      setMember
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '=H02A'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label6:
    pop
  end // of initMovieClip 678

  defineMovieClip 679 // total frames: 0
  end // of defineMovieClip 679
  
  exportAssets
    679 as '__Packages.miniwave.sp.bads.Bulbe'
  end // of exportAssets
  
  initMovieClip 679
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', ' PkxM', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', 'type', ' DVkC', '0w*(((', '4k8;L', '()nBD', ',N5T', '+N5T', '}cj8F(', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ' PkxM'
    getMember
    not
    not
    branchIfTrue label6
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ' PkxM'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ' PkxM'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 180
      setMember
      push r:this, '0Pezx', 6
      setMember
      push r:this, 'type', 45
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='super')
      push 0.0
      setRegister r:3
      pop
     label4:
      push r:3, 2
      lessThan
      not
      branchIfTrue label5
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:2
      pop
      push r:2, ',N5T', r:3, 2
      multiply
      push 1
      subtract
      push 5
      multiply
      setMember
      push r:2, '+N5T', -2
      setMember
      push r:2, '}cj8F(', 20
      setMember
      push r:3
      increment
      setRegister r:3
      pop
      branch label4
     label5:
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ' PkxM'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label6:
    pop
  end // of initMovieClip 679

  defineMovieClip 680 // total frames: 0
  end // of defineMovieClip 680
  
  exportAssets
    680 as '__Packages.miniwave.sp.bads.Nectarine'
  end // of exportAssets
  
  initMovieClip 680
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '}VU9t', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', 'type', ' DVkC', '0w*(((', '4k8;L', '()nBD', '}cj8F(', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '}VU9t'
    getMember
    not
    not
    branchIfTrue label4
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '}VU9t'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '}VU9t'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 400
      setMember
      push r:this, '0Pezx', 2
      setMember
      push r:this, 'type', 32
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push r:this
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='super')
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:2
      pop
      push r:2, '}cj8F(', 13
      setMember
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '}VU9t'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label4:
    pop
  end // of initMovieClip 680

  defineMovieClip 681 // total frames: 0
  end // of defineMovieClip 681
  
  exportAssets
    681 as '__Packages.miniwave.sp.bads.Mirabelle'
  end // of exportAssets
  
  initMovieClip 681
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', ')yfsQ', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', 'type', ' DVkC', '0w*(((', '4k8;L', '()nBD', '9]7O', '_xscale', '},c9U', ';pzah', '}cj8F(', '{2{X2(', 'length', ';9s=p', '+N5T', '1{SDR', '_yscale', '[pJN8(', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ')yfsQ'
    getMember
    not
    not
    branchIfTrue label4
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ')yfsQ'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ')yfsQ'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 220
      setMember
      push r:this, '0Pezx', 4
      setMember
      push r:this, 'type', 23
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:3
      pop
      push r:3, '9]7O'
      getMember
      push '_xscale', r:this, '},c9U'
      getMember
      setMember
      push r:3, '9]7O'
      getMember
      push ';pzah'
      getMember
      push '_xscale', 0.0
      setMember
      push r:3, '}cj8F(', 5
      setMember
      push r:3, '{2{X2(', 'length', r:this, '},c9U'
      getMember
      push ';9s=p', 0.0, 2
      initObject
      setMember
      push r:3, '+N5T', 4
      setMember
      push r:3, '1{SDR'
      getMember
      push '_xscale', 0.0
      setMember
      push r:3, '1{SDR'
      getMember
      push '_yscale', 0.0
      setMember
      push r:3, '[pJN8(', r:this, '},c9U'
      getMember
      setMember
    end // of function 

    setMember
    push r:1, '},c9U', 160
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ')yfsQ'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label4:
    pop
  end // of initMovieClip 681

  defineMovieClip 682 // total frames: 0
  end // of defineMovieClip 682
  
  exportAssets
    682 as '__Packages.miniwave.sp.bads.Pamplemousse'
  end // of exportAssets
  
  initMovieClip 682
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '-*OL=', '=w)l', ']q}_', 'prototype', ']qbf', '-[ YO', 'type', ' DVkC', 'y', '0(}e', '[w;(', '9l;(', '41T)Y', '0w*(((', '4k8;L', '()nBD', '+N5T', '}cj8F(', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '-*OL='
    getMember
    not
    not
    branchIfTrue label5
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '-*OL='
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '-*OL='
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 600
      setMember
      push r:this, '-[ YO', 0.5
      setMember
      push r:this, 'type', 8
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push r:this, 'y'
      getMember
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '9l;('
      getMember
      push r:this, '41T)Y'
      getMember
      subtract
      lessThan
      not
      branchIfTrue label4
      push 0.0, r:this, '0w*((('
      callMethod
      pop
     label4:
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='super')
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:2
      pop
      push r:2, '+N5T', 1
      setMember
      push r:2, '}cj8F(', 0.0
      setMember
    end // of function 

    setMember
    push r:1, '41T)Y', 70
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '-*OL='
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label5:
    pop
  end // of initMovieClip 682

  defineMovieClip 683 // total frames: 0
  end // of defineMovieClip 683
  
  exportAssets
    683 as '__Packages.miniwave.sp.bads.Banane'
  end // of exportAssets
  
  initMovieClip 683
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '(f *l', '=w)l', ']q}_', 'prototype', 'type', '-[ YO', ' DVkC', '0w*(((', '4k8;L', '()nBD', 'x', 'y', ',N5T', '+N5T', ',eX{I(', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '(f *l'
    getMember
    not
    not
    branchIfTrue label4
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '(f *l'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '(f *l'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, 'type', 2
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
      push r:this, '-[ YO', 0.0
      setMember
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:3
      pop
      push r:3, 'x', r:this, 'x'
      getMember
      setMember
      push r:3, 'y', r:this, 'y'
      getMember
      setMember
      push r:3, ',N5T', 200
      random
      push 100
      subtract
      push 100
      divide
      setMember
      push r:3, '+N5T', 2.5
      setMember
      push 0.0, r:3, ',eX{I('
      callMethod
      pop
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '(f *l'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label4:
    pop
  end // of initMovieClip 683

  defineMovieClip 684 // total frames: 0
  end // of defineMovieClip 684
  
  exportAssets
    684 as '__Packages.miniwave.Msg'
  end // of exportAssets
  
  initMovieClip 684
    constants '_global', 'miniwave', 'Object', '7oL', '=w)l', 'MovieClip', 'prototype', '_alpha', '(hNCP', '[5(', '*TQ*(', '_y', '0(}e', '[w;(', '9l;(', '_height', 'type', 'gotoAndStop', 'list', 'length', 'field', 'text', '6}jsa', '3fEyH', '2d[', '7J-V', ';N(', '(3cc', '8p7(', ',CeLG', 'removeMovieClip', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '7oL'
    getMember
    not
    not
    branchIfTrue label8
    push 'miniwave'
    getVariable
    push '7oL'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '7oL'
    getMember
    push 'MovieClip'
    getVariable
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this')
      push r:this, '_alpha', 0.0
      setMember
      push r:this, '(hNCP', 0.0
      setMember
      push r:this, '[5(', 100
      setMember
      push 0.0, r:this, '*TQ*('
      callMethod
      pop
      push r:this, '_y', r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '9l;('
      getMember
      push r:this, '_height'
      getMember
      subtract
      push 2
      divide
      setMember
    end // of function 

    setMember
    push r:1, '*TQ*('
    function2 () (r:1='this')
      push r:this, 'type'
      getMember
      push 1
      add
      push 1, r:this, 'gotoAndStop'
      callMethod
      pop
      push 0.0
      setRegister r:2
      pop
     label2:
      push r:2, r:this, 'list'
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label3
      push r:this, 'field', r:2
      add
      getMember
      push 'text', r:this, 'list'
      getMember
      push r:2
      getMember
      setMember
      push r:2
      increment
      setRegister r:2
      pop
      branch label2
     label3:
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this')
      push r:this, '(hNCP', r:this, '(hNCP'
      getMember
      push 0.8
      multiply
      push r:this, '[5('
      getMember
      push 0.2
      multiply
      add
      setMember
      push r:this, '_alpha', r:this, '(hNCP'
      getMember
      setMember
      push r:this, '3fEyH'
      getMember
      push UNDEF
      equals
      not
      not
      branchIfTrue label5
      push r:this, '3fEyH'
      getMember
      push 0.0
      lessThan
      not
      branchIfTrue label4
      push r:this, '[5(', 0.0
      setMember
      push r:this, '3fEyH'
      delete
      pop
      branch label5
     label4:
      push r:this, '3fEyH', r:this, '3fEyH'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
     label5:
      push r:this, '[5('
      getMember
      push 0.0
      equals
      dup
      not
      branchIfTrue label6
      pop
      push r:this, '(hNCP'
      getMember
      push 1
      lessThan
     label6:
      not
      branchIfTrue label7
      push r:this, ';N('
      getMember
      push '(3cc'
      getMember
      push 1, r:this, ';N('
      getMember
      push '8p7('
      getMember
      push r:this, ';N('
      getMember
      push ',CeLG'
      getMember
      callMethod
      pop
      push 0.0, r:this, 'removeMovieClip'
      callMethod
      pop
     label7:
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '7oL'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label8:
    pop
  end // of initMovieClip 684

  defineMovieClip 685 // total frames: 0
  end // of defineMovieClip 685
  
  exportAssets
    685 as '__Packages.miniwave.sp.bads.PoisChiche'
  end // of exportAssets
  
  initMovieClip 685
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '3vjCf', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', 'type', ' DVkC', '0w*(((', '4k8;L', '()nBD', ',N5T', '+N5T', '1U_vK', '}cj8F(', '{2{X2(', '7=bN', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '3vjCf'
    getMember
    not
    not
    branchIfTrue label4
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '3vjCf'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '3vjCf'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 240
      setMember
      push r:this, '0Pezx', 4
      setMember
      push r:this, 'type', 47
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='super')
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:2
      pop
      push r:2, ',N5T', 6, 2
      random
      push 2
      multiply
      push 1
      subtract
      multiply
      setMember
      push r:2, '+N5T', 6
      setMember
      push r:2, '1U_vK', 16
      setMember
      push r:2, '}cj8F(', 22
      setMember
      push r:2, '{2{X2(', '7=bN', 0.0, 1
      initObject
      setMember
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '3vjCf'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label4:
    pop
  end // of initMovieClip 685

  defineMovieClip 686 // total frames: 0
  end // of defineMovieClip 686
  
  exportAssets
    686 as '__Packages.miniwave.sp.bads.Betterave'
  end // of exportAssets
  
  initMovieClip 686
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '0Bw12(', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', 'type', ' DVkC', '0w*(((', '4k8;L', '()nBD', '];i=-', '-;]AP', ',N5T', 'Math', 'cos', '+N5T', 'sin', '1U_vK', '_rotation', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '0Bw12('
    getMember
    not
    not
    branchIfTrue label6
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '0Bw12('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '0Bw12('
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 240
      setMember
      push r:this, '0Pezx', 10
      setMember
      push r:this, 'type', 35
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='this', r:2='super')
      push 0.0
      setRegister r:4
      pop
     label4:
      push r:4, r:this, '];i=-'
      getMember
      lessThan
      not
      branchIfTrue label5
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:3
      pop
      push 1.570796326794897, r:this, '-;]AP'
      getMember
      push r:4, r:this, '];i=-'
      getMember
      push 1
      subtract
      divide
      push 2
      multiply
      push 1
      subtract
      multiply
      add
      setRegister r:5
      pop
      push r:3, ',N5T', r:5, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push 4.5
      multiply
      setMember
      push r:3, '+N5T', r:5, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push 4.5
      multiply
      setMember
      push r:3, '1U_vK', 16
      setMember
      push r:3, '_rotation', 360
      random
      setMember
      push r:4
      increment
      setRegister r:4
      pop
      branch label4
     label5:
    end // of function 

    setMember
    push r:1, '];i=-', 3
    setMember
    push r:1, '-;]AP', 0.4
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '0Bw12('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label6:
    pop
  end // of initMovieClip 686

  defineMovieClip 687 // total frames: 0
  end // of defineMovieClip 687
  
  exportAssets
    687 as '__Packages.miniwave.sp.bads.Pradiou'
  end // of exportAssets
  
  initMovieClip 687
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '{kb(F', '=w)l', ']q}_', 'prototype', 'type', '5i(', ' DVkC', '0w*(((', '4k8;L', ')]6(', '{r-z7', ']qbf', '0Pezx', 'nextFrame', '()nBD', '+N5T', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '{kb(F'
    getMember
    not
    not
    branchIfTrue label7
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '{kb(F'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '{kb(F'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, 'type', 7
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
      push r:this, '5i(', 2
      setMember
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push r:this, '5i('
      getMember
      push 1
      equals
      not
      branchIfTrue label4
      push 0.0, r:this, '0w*((('
      callMethod
      pop
     label4:
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ')]6('
    function2 () (r:1='this')
      push r:this, '5i(', r:this, '5i('
      getMember
      decrement
      setMember
      push r:this, '5i('
      getMember
      push 0.0
      equals
      not
      branchIfTrue label5
      push 0.0, r:this, '{r-z7'
      callMethod
      pop
      branch label6
     label5:
      push r:this, ']qbf', 10
      setMember
      push r:this, '0Pezx', 5
      setMember
      push 0.0, r:this, 'nextFrame'
      callMethod
      pop
     label6:
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='super')
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:2
      pop
      push r:2, '+N5T', 3
      setMember
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '{kb(F'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label7:
    pop
  end // of initMovieClip 687

  defineMovieClip 688 // total frames: 0
  end // of defineMovieClip 688
  
  exportAssets
    688 as '__Packages.miniwave.box.Special'
  end // of exportAssets
  
  initMovieClip 688
    constants '_global', 'miniwave', 'Object', ';W{', '+af6Q', '=w)l', '6Yx', 'prototype', '{)zoW', '*vz', ';F1j,(', 'attachMovie', '_xscale', '9V(', '_yscale', '(X(', 'onPress', '_parent', '4Pzmp', '(muaU', ',mVfl', '[g(', 'gotoAndStop', '=gzo', 'createEmptyMovieClip', 'x', 'y', '6(', 'h', '+]', ' CLe7(', 'setMask', '8M -D', '_visible', '1OeZs', ',1(R', '=vto', '[w;(', ';*b', 'play', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{'
    getMember
    push '+af6Q'
    getMember
    not
    not
    branchIfTrue label3
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '+af6Q'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '+af6Q'
    getMember
    push 'miniwave'
    getVariable
    push '6Yx'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='super')
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '{)zoW'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '{)zoW'
      callMethod
      pop
      push 10, '*vz', ';F1j,(', 3, r:this, 'attachMovie'
      callMethod
      pop
      push r:this, '*vz'
      getMember
      push '_xscale', r:this, '9V('
      getMember
      setMember
      push r:this, '*vz'
      getMember
      push '_yscale', r:this, '(X('
      getMember
      setMember
      push r:this, '*vz'
      getMember
      push 'onPress'
      function2 () (r:1='this')
        push 0.0, r:this, '_parent'
        getMember
        push '4Pzmp'
        callMethod
        pop
      end // of function 

      setMember
      push 6, '(muaU', ',mVfl', 3, r:this, 'attachMovie'
      callMethod
      pop
      push r:this, '[g('
      getMember
      push 1
      add
      push 1, r:this, '(muaU'
      getMember
      push 'gotoAndStop'
      callMethod
      pop
      push 7, '=gzo', 2, r:this, 'createEmptyMovieClip'
      callMethod
      pop
      push 4
      setRegister r:3
      pop
      push 10, r:3
      subtract
      push 16711680, 'x', r:3, 'y', r:3, '6(', r:this, '9V('
      getMember
      push r:3, 2
      multiply
      subtract
      push 'h', r:this, '(X('
      getMember
      push r:3, 2
      multiply
      subtract
      push 4
      initObject
      push r:this, '=gzo'
      getMember
      push 4, 'miniwave'
      getVariable
      push '+]'
      getMember
      push ' CLe7('
      callMethod
      pop
      push r:this, '=gzo'
      getMember
      push 1, r:this, '(muaU'
      getMember
      push 'setMask'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '8M -D'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '8M -D'
      callMethod
      pop
      push r:this, '*vz'
      getMember
      push '_visible', FALSE
      setMember
      push r:this, '(muaU'
      getMember
      push '_visible', FALSE
      setMember
    end // of function 

    setMember
    push r:1, '4Pzmp'
    function2 () (r:1='this')
      push '1OeZs', 1, r:this, ',1(R'
      getMember
      push '=vto'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push 'play'
      callMethod
      pop
      push r:this, '[g('
      getMember
      push 1, r:this, ',1(R'
      getMember
      push '4Pzmp'
      callMethod
      pop
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '+af6Q'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label3:
    pop
  end // of initMovieClip 688

  defineMovieClip 689 // total frames: 0
  end // of defineMovieClip 689
  
  exportAssets
    689 as '__Packages.miniwave.page.SelectSpecial'
  end // of exportAssets
  
  initMovieClip 689
    constants '_global', 'miniwave', 'Object', ',1(R', '}JW_6', '=w)l', '];)H', 'prototype', ')sY,G(', '=vto', '[w;(', '=Y(', '$mode', 'length', 'height', '1W(', '0W(', '9V(', 'width', '(X(', '+f}KA(', '[g(', '=aUoo', '3h;N6(', '3L9n1', '4Pzmp', '4g=(', '74DTE(', 'level', '=Xj_+(', 'type', 'GameLetter', ';7Sp4', 'name', 'GameSurvival', ';w]5,(', ' c2q', '-,SU4', '2v3VX', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ',1(R'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ',1(R', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ',1(R'
    getMember
    push '}JW_6'
    getMember
    not
    not
    branchIfTrue label9
    push 'miniwave'
    getVariable
    push ',1(R'
    getMember
    push '}JW_6'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push ',1(R'
    getMember
    push '}JW_6'
    getMember
    push 'miniwave'
    getVariable
    push '];)H'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='super')
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ')sY,G('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ')sY,G('
      callMethod
      pop
      push r:this, '=vto'
      getMember
      push '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$mode'
      getMember
      push 2
      getMember
      setRegister r:15
      pop
      push r:15, 'length'
      getMember
      setRegister r:14
      pop
      push 6
      setRegister r:16
      pop
      push r:this, 'height'
      getMember
      push r:16, r:14, 1
      subtract
      multiply
      subtract
      push r:14
      divide
      setRegister r:5
      pop
      push 0.0
      setRegister r:3
      pop
     label3:
      push r:3, r:14
      lessThan
      not
      branchIfTrue label4
      push '1W(', 0.0, '0W(', r:5, r:16
      add
      push r:3
      multiply
      push '9V(', r:this, 'width'
      getMember
      push '(X(', r:5, '+f}KA(', 8, r:3
      multiply
      push '[g(', r:3, '=aUoo', r:15, r:3
      getMember
      not
      push 7
      initObject
      setRegister r:4
      pop
      push r:4, '3h;N6(', 2, r:this, '3L9n1'
      callMethod
      setRegister r:7
      pop
      push r:3
      increment
      setRegister r:3
      pop
      branch label3
     label4:
    end // of function 

    setMember
    push r:1, '4Pzmp'
    function2 (r:4='[g(') (r:1='this')
      push r:'[g('
      setRegister r:0
      push 0.0
      strictEquals
      branchIfTrue label5
      push r:0, 1
      strictEquals
      branchIfTrue label6
      push r:0, 2
      strictEquals
      branchIfTrue label7
      branch label8
     label5:
      push 'miniwave'
      getVariable
      push '4g=('
      getMember
      push '74DTE('
      getMember
      push 'level'
      getMember
      setRegister r:2
      pop
      push r:this, '=vto'
      getMember
      push '=Xj_+('
      getMember
      push 'type', 'GameLetter'
      setMember
      push r:this, '=vto'
      getMember
      push '=Xj_+('
      getMember
      push ';7Sp4', r:2, '4g=('
      getMember
      setMember
      push r:this, '=vto'
      getMember
      push '=Xj_+('
      getMember
      push 'name', r:2, 'name'
      getMember
      setMember
      branch label8
     label6:
      push r:this, '=vto'
      getMember
      push '=Xj_+('
      getMember
      push 'type', 'GameSurvival'
      setMember
      branch label8
     label7:
      push r:this, '=vto'
      getMember
      push '=Xj_+('
      getMember
      push 'type', ';w]5,('
      setMember
      branch label8
     label8:
      push ' c2q', '-,SU4', 1
      initObject
      push 1, r:this, '=vto'
      getMember
      push '2v3VX'
      callMethod
      pop
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push ',1(R'
    getMember
    push '}JW_6'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label9:
    pop
  end // of initMovieClip 689

  defineMovieClip 690 // total frames: 0
  end // of defineMovieClip 690
  
  exportAssets
    690 as '__Packages.miniwave.lvl.Letter'
  end // of exportAssets
  
  initMovieClip 690
    constants '_global', 'miniwave', 'Object', '4g=(', '74DTE(', 'prototype', 'level', 'name', '(7vYl', '', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '4g=('
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '4g=(', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '4g=('
    getMember
    push '74DTE('
    getMember
    not
    not
    branchIfTrue label3
    push 'miniwave'
    getVariable
    push '4g=('
    getMember
    push '74DTE('
    function ()
    end // of function 

    setRegister r:0
    setMember
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:0, 'level', 'name', '(7vYl', '4g=(', '', 2
    initObject
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '4g=('
    getMember
    push '74DTE('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label3:
    pop
  end // of initMovieClip 690

  defineMovieClip 691 // total frames: 0
  end // of defineMovieClip 691
  
  exportAssets
    691 as '__Packages.miniwave.page.Main'
  end // of exportAssets
  
  initMovieClip 691
    constants '_global', 'miniwave', 'Object', ',1(R', '6i)C', '=w)l', '];)H', 'prototype', ')sY,G(', 'name', 'OPTION', 'STAND', ';N(', '8p7(', '=vto', ',CeLG', '2v3VX', '(3cc', ' c2q', '7NIW=(', 'SPECIAL', 'BONUS', '+{A*C(', ',to,G(', ']A4]1(', 'ARCADE', '74[9J(', 'length', '[g(', '1W(', '0W(', '+f}KA(', ';rS)A(', '=aUoo', '[w;(', '=Y(', '$mode', '30dfK', ')A4ho', '3L9n1', 'height', '9V(', '(X(', '6vlNG(', '*QQ-O', '4Pzmp', '=Xj_+(', 'type', 'GameMain', 'GameMission', '-;W2 (', '-Ter*', '1vrgI', '9LaTD', '-NIck', '}9WO', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ',1(R'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ',1(R', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ',1(R'
    getMember
    push '6i)C'
    getMember
    not
    not
    branchIfTrue label14
    push 'miniwave'
    getVariable
    push ',1(R'
    getMember
    push '6i)C'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push ',1(R'
    getMember
    push '6i)C'
    getMember
    push 'miniwave'
    getVariable
    push '];)H'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='super')
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ')sY,G('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ')sY,G('
      callMethod
      pop
      push 'name', 'OPTION', 1
      initObject
      push 'name', 'STAND', ';N(', '8p7(', r:this, '=vto'
      getMember
      push ',CeLG', '2v3VX', '(3cc', ' c2q', '7NIW=(', 1
      initObject
      push 3
      initObject
      push 2
      initObject
      push 'name', 'SPECIAL', 1
      initObject
      push 'name', 'BONUS', ';N(', '8p7(', r:this, '=vto'
      getMember
      push ',CeLG', '2v3VX', '(3cc', ' c2q', '+{A*C(', ',to,G(', ']A4]1(', 3, 1
      initObject
      push 2
      initObject
      push 3
      initObject
      push 2
      initObject
      push 'name', 'ARCADE', ';N(', '8p7(', r:this, '=vto'
      getMember
      push ',CeLG', '74[9J(', 2
      initObject
      push 2
      initObject
      push 5
      initArray
      setRegister r:5
      pop
      push 0.0
      setRegister r:6
      pop
      push 0.0
      setRegister r:3
      pop
     label3:
      push r:3, r:5, 'length'
      getMember
      lessThan
      not
      branchIfTrue label7
      push '[g(', r:3, '1W(', 0.0, '0W(', r:6, '+f}KA(', r:3, 8
      multiply
      push 'name', ';rS)A(', '=aUoo', r:this, '=vto'
      getMember
      push '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$mode'
      getMember
      push r:3
      getMember
      push 1, r:this, '30dfK'
      callMethod
      not
      push 6
      initObject
      setRegister r:12
      pop
      push r:5, r:3
      getMember
      setRegister r:4
      pop
      push r:4
      enumerateValue
     label4:
      setRegister r:0
      push NULL
      equals
      branchIfTrue label5
      push r:0
      setRegister r:10
      pop
      push r:12, r:10, r:4, r:10
      getMember
      setMember
      branch label4
     label5:
      push r:12, ')A4ho', 2, r:this, '3L9n1'
      callMethod
      setRegister r:8
      pop
      push r:6, 30
      add
      setRegister r:6
      pop
      push r:3, 2
      equals
      not
      branchIfTrue label6
      push r:6, r:this, 'height'
      getMember
      push r:5, 'length'
      getMember
      push 30
      multiply
      push 10
      subtract
      subtract
      add
      setRegister r:6
      pop
     label6:
      push r:3
      increment
      setRegister r:3
      pop
      branch label3
     label7:
      push '1W(', 110, '0W(', 0.0, '9V(', 110, '(X(', r:this, 'height'
      getMember
      push '+f}KA(', 0.0, 5
      initObject
      setRegister r:12
      pop
      push r:this, '6vlNG(', r:12, '*QQ-O', 2, r:this, '3L9n1'
      callMethod
      setMember
    end // of function 

    setMember
    push r:1, '4Pzmp'
    function2 (r:3='[g(') (r:1='this')
      push r:'[g('
      setRegister r:0
      push 0.0
      strictEquals
      branchIfTrue label8
      push r:0, 1
      strictEquals
      branchIfTrue label9
      push r:0, 2
      strictEquals
      branchIfTrue label10
      push r:0, 3
      strictEquals
      branchIfTrue label11
      push r:0, 4
      strictEquals
      branchIfTrue label12
      branch label13
     label8:
      push r:this, '=vto'
      getMember
      push '=Xj_+('
      getMember
      push 'type', 'GameMain'
      setMember
      push 0.0, r:this, '=vto'
      getMember
      push '74[9J('
      callMethod
      pop
      branch label13
     label9:
      push r:this, '=vto'
      getMember
      push '=Xj_+('
      getMember
      push 'type', 'GameMission'
      setMember
      push ' c2q', '-;W2 (', 1
      initObject
      push 1, r:this, '=vto'
      getMember
      push '2v3VX'
      callMethod
      pop
      branch label13
     label10:
      push ' c2q', '-Ter*', 1
      initObject
      push 1, r:this, '=vto'
      getMember
      push '2v3VX'
      callMethod
      pop
      branch label13
     label11:
      push ' c2q', '7NIW=(', 1
      initObject
      push 1, r:this, '=vto'
      getMember
      push '2v3VX'
      callMethod
      pop
      branch label13
     label12:
      push ' c2q', '1vrgI', 1
      initObject
      push 1, r:this, '=vto'
      getMember
      push '2v3VX'
      callMethod
      pop
      branch label13
     label13:
    end // of function 

    setMember
    push r:1, '9LaTD'
    function2 (r:2='[g(') (r:1='this')
      push r:'[g(', 1
      add
      push 1, r:this, '6vlNG('
      getMember
      push '-NIck'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '}9WO'
    function2 ('[g(') (r:1='this')
      push 0.0, 1, r:this, '6vlNG('
      getMember
      push '-NIck'
      callMethod
      pop
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push ',1(R'
    getMember
    push '6i)C'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label14:
    pop
  end // of initMovieClip 691

  defineMovieClip 692 // total frames: 0
  end // of defineMovieClip 692
  
  exportAssets
    692 as '__Packages.miniwave.box.InfoMain'
  end // of exportAssets
  
  initMovieClip 692
    constants '_global', 'miniwave', 'Object', ';W{', '{e*ev', '=w)l', '6Yx', 'prototype', '[YDx,', '{CB)*', 'Array', '02nS (', '_visible', '8oo+r', '2)', '-NIck', '{PTIE', 'bienvenue', ',1(R', '=vto', '[w;(', 'Date', 'getHours', 'Bonjour ', 'Bonsoir ', '7wGDb', '2u;W3', '=Y(', '$lvl', ' ', '*0GPC', 'getUser', ', choisissez votre section.', 'action', 'Repoussez les  fruits mutants au confin du Frunivers et gagnez des Crédits.', 'missions', 'Débloquez et validez les 8 missions du mode bonus.', 'secret?', 'Decouvrez les projets les plus secrets de la mini-airforce.', 'achats', 'Dépensez vos crédits et améliorez votre arsenal.', 'options', 'Modifiez les paramètres du jeu.', ']F)88(', 'text', '2=c41', '(muaU', 'attachMovie', 'gotoAndStop', '(hNCP', '_alpha', 'push', '6}jsa', 'length', ')N0PU', '2d[', '7J-V', 'removeMovieClip', 'Math', 'min', 'round', 'slice', '_', '5wc4R', '(X(', '4TE0h', '_y', 'textHeight', '{)zoW', '8M -D', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{'
    getMember
    push '{e*ev'
    getMember
    not
    not
    branchIfTrue label19
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '{e*ev'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '{e*ev'
    getMember
    push 'miniwave'
    getVariable
    push '6Yx'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '=w)l'
      callMethod
      pop
      push r:this, '[YDx,'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label3
      push r:this, '[YDx,', 0.0
      setMember
     label3:
      push r:this, '{CB)*', 0.0, 'Array'
      new
      setMember
      push r:this, '02nS ('
      getMember
      push '_visible', FALSE
      setMember
      push r:this, '02nS ('
      getMember
      push '8oo+r'
      getMember
      push '2)', 0.0
      setMember
    end // of function 

    setMember
    push r:1, '-NIck'
    function2 (r:8='[g(') (r:1='this')
      push r:this, '{PTIE', 0.0
      setMember
      push UNDEF
      setRegister r:3
      pop
      push UNDEF
      setRegister r:9
      pop
      push UNDEF
      setRegister r:2
      pop
      push r:'[g('
      setRegister r:0
      push 0.0
      strictEquals
      branchIfTrue label4
      push r:0, 1
      strictEquals
      branchIfTrue label8
      push r:0, 2
      strictEquals
      branchIfTrue label9
      push r:0, 3
      strictEquals
      branchIfTrue label10
      push r:0, 4
      strictEquals
      branchIfTrue label11
      push r:0, 5
      strictEquals
      branchIfTrue label12
      branch label13
     label4:
      push 'bienvenue'
      setRegister r:3
      pop
      push r:this, ',1(R'
      getMember
      push '=vto'
      getMember
      push '[w;('
      getMember
      setRegister r:4
      pop
      push 0.0, 'Date'
      new
      setRegister r:7
      pop
      push 0.0, r:7, 'getHours'
      callMethod
      setRegister r:6
      pop
      push UNDEF
      setRegister r:5
      pop
      push r:6, 5
      greaterThan
      dup
      not
      branchIfTrue label5
      pop
      push r:6, 16
      lessThan
     label5:
      not
      branchIfTrue label6
      push 'Bonjour '
      setRegister r:5
      pop
      branch label7
     label6:
      push 'Bonsoir '
      setRegister r:5
      pop
     label7:
      push r:this, '7wGDb', r:5, r:4, '2u;W3'
      getMember
      push r:4, '=Y('
      getMember
      push 0.0
      getMember
      push '$lvl'
      getMember
      getMember
      add
      push ' '
      add
      push 0.0, r:4, '*0GPC'
      getMember
      push 'getUser'
      callMethod
      add
      push ', choisissez votre section.'
      add
      setMember
      push 1
      setRegister r:2
      pop
      branch label13
     label8:
      push 'action'
      setRegister r:3
      pop
      push r:this, '7wGDb', 'Repoussez les  fruits mutants au confin du Frunivers et gagnez des Crédits.'
      setMember
      push 2
      setRegister r:2
      pop
      branch label13
     label9:
      push 'missions'
      setRegister r:3
      pop
      push r:this, '7wGDb', 'Débloquez et validez les 8 missions du mode bonus.'
      setMember
      push 3
      setRegister r:2
      pop
      branch label13
     label10:
      push 'secret?'
      setRegister r:3
      pop
      push r:this, '7wGDb', 'Decouvrez les projets les plus secrets de la mini-airforce.'
      setMember
      push 4
      setRegister r:2
      pop
      branch label13
     label11:
      push 'achats'
      setRegister r:3
      pop
      push r:this, '7wGDb', 'Dépensez vos crédits et améliorez votre arsenal.'
      setMember
      push 5
      setRegister r:2
      pop
      branch label13
     label12:
      push 'options'
      setRegister r:3
      pop
      push r:this, '7wGDb', 'Modifiez les paramètres du jeu.'
      setMember
      push 6
      setRegister r:2
      pop
      branch label13
     label13:
      push r:this, '02nS ('
      getMember
      push ']F)88('
      getMember
      push 'text', r:3
      setMember
      push r:2, 1, r:this, '2=c41'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '2=c41'
    function2 (r:4='23V R') (r:1='this')
      push r:this, '02nS ('
      getMember
      push '8oo+r'
      getMember
      push '2)'
      getMember
      push r:this, '02nS ('
      getMember
      push '8oo+r'
      getMember
      push '2)', r:this, '02nS ('
      getMember
      push '8oo+r'
      getMember
      push '2)'
      getMember
      increment
      setMember
      setRegister r:3
      pop
      push r:3, '(muaU', r:3
      add
      push '(muaU', 3, r:this, '02nS ('
      getMember
      push '8oo+r'
      getMember
      push 'attachMovie'
      callMethod
      pop
      push r:this, '02nS ('
      getMember
      push '8oo+r'
      getMember
      push '(muaU', r:3
      add
      getMember
      setRegister r:2
      pop
      push r:'23V R', 1, r:2, 'gotoAndStop'
      callMethod
      pop
      push r:2, '(hNCP', 0.0
      setMember
      push r:2, '_alpha', 0.0
      setMember
      push r:2, 1, r:this, '{CB)*'
      getMember
      push 'push'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push 0.0
      setRegister r:6
      pop
     label14:
      push r:6, r:this, '{CB)*'
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label17
      push r:this, '{CB)*'
      getMember
      push r:6
      getMember
      setRegister r:3
      pop
      push r:6, r:this, '{CB)*'
      getMember
      push 'length'
      getMember
      push 1
      subtract
      lessThan
      not
      branchIfTrue label15
      push r:3, '(hNCP', r:3, '(hNCP'
      getMember
      push r:this, ')N0PU'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      subtract
      setMember
      push 0.0, r:3, 'removeMovieClip'
      callMethod
      pop
      branch label16
     label15:
      push r:3, '(hNCP', r:3, '(hNCP'
      getMember
      push r:this, ')N0PU'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      add
      push 100, 2, 'Math'
      getVariable
      push 'min'
      callMethod
      setMember
     label16:
      push r:3, '_alpha', r:3, '(hNCP'
      getMember
      setMember
      push r:6
      increment
      setRegister r:6
      pop
      branch label14
     label17:
      push r:this, '{PTIE', r:this, '{PTIE'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      add
      setMember
      push r:this, '{PTIE'
      getMember
      push 1, 'Math'
      getVariable
      push 'round'
      callMethod
      setRegister r:6
      pop
      push r:this, '{PTIE'
      getMember
      push 0.0, 2, r:this, '7wGDb'
      getMember
      push 'slice'
      callMethod
      setRegister r:4
      pop
      push r:this, '{PTIE'
      getMember
      push r:this, '7wGDb'
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label18
      push r:4, '_'
      add
      setRegister r:4
      pop
     label18:
      push r:this, '02nS ('
      getMember
      push '5wc4R'
      getMember
      push 'text', r:4
      setMember
      push r:this, '(X('
      getMember
      push r:this, '4TE0h'
      getMember
      subtract
      setRegister r:5
      pop
      push r:this, '02nS ('
      getMember
      push '5wc4R'
      getMember
      push '_y', r:this, '4TE0h'
      getMember
      push r:5, r:this, '02nS ('
      getMember
      push '5wc4R'
      getMember
      push 'textHeight'
      getMember
      subtract
      push 2
      divide
      add
      setMember
    end // of function 

    setMember
    push r:1, '{)zoW'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '{)zoW'
      callMethod
      pop
      push r:this, '02nS ('
      getMember
      push '_visible', TRUE
      setMember
      push r:this, '[YDx,'
      getMember
      push 1, r:this, '-NIck'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '8M -D'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '8M -D'
      callMethod
      pop
      push r:this, '02nS ('
      getMember
      push '_visible', FALSE
      setMember
    end // of function 

    setMember
    push r:1, '4TE0h', 94
    setMember
    push r:1, ')N0PU', 15
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '{e*ev'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label19:
    pop
  end // of initMovieClip 692

  defineMovieClip 693 // total frames: 0
  end // of defineMovieClip 693
  
  exportAssets
    693 as '__Packages.miniwave.game.Time'
  end // of exportAssets
  
  initMovieClip 693
    constants '_global', 'miniwave', 'Object', '0(}e', ' U6L', '5q)A', 'prototype', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '0(}e'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '0(}e', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '0(}e'
    getMember
    push ' U6L'
    getMember
    not
    not
    branchIfTrue label3
    push 'miniwave'
    getVariable
    push '0(}e'
    getMember
    push ' U6L'
    function2 () (r:1='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '0(}e'
    getMember
    push ' U6L'
    getMember
    push 'miniwave'
    getVariable
    push '5q)A'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push 1, NULL, 'miniwave'
    getVariable
    push '0(}e'
    getMember
    push ' U6L'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label3:
    pop
  end // of initMovieClip 693

  defineMovieClip 694 // total frames: 0
  end // of defineMovieClip 694
  
  exportAssets
    694 as '__Packages.miniwave.sp.bads.Pommette'
  end // of exportAssets
  
  initMovieClip 694
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '0]6s*', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', 'type', ' DVkC', '4k8;L', '6}jsa', ',N5T', 'x', '3p,n', '{r-z7', 'y', '+N5T', '}cj8F(', '{2{X2(', ']dc', ']}47;', '(,J R', '3fEyH', '0(}e', ' HkK}', '_xscale', '_yscale', 'gotoAndStop', ';[G=L', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '0]6s*'
    getMember
    not
    not
    branchIfTrue label4
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '0]6s*'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '0]6s*'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 200
      setMember
      push r:this, '0Pezx', 50
      setMember
      push r:this, 'type', 49
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push r:this, ',N5T', r:this, 'x'
      getMember
      push r:this, '3p,n'
      getMember
      subtract
      setMember
      push r:this, '3p,n', r:this, 'x'
      getMember
      setMember
    end // of function 

    setMember
    push r:1, '{r-z7'
    function2 () (r:1='this', r:2='super')
      push 'x', r:this, 'x'
      getMember
      push 'y', r:this, 'y'
      getMember
      push ',N5T', r:this, ',N5T'
      getMember
      push '+N5T', 0.0, '}cj8F(', 7, '{2{X2(', ']dc', 0.0, ']}47;', 16, '(,J R', 0.77, '3fEyH', 16, 4
      initObject
      push 6
      initObject
      setRegister r:4
      pop
      push r:4, 1, r:this, '0(}e'
      getMember
      push ' HkK}'
      callMethod
      setRegister r:3
      pop
      push r:3, '_xscale', 0.0
      setMember
      push r:3, '_yscale', 0.0
      setMember
      push 153, 1, r:3, 'gotoAndStop'
      callMethod
      pop
      push 0.0, r:super, '{r-z7'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ';[G=L', 6
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '0]6s*'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label4:
    pop
  end // of initMovieClip 694

  defineMovieClip 695 // total frames: 0
  end // of defineMovieClip 695
  
  exportAssets
    695 as '__Packages.miniwave.sp.bads.Mandarine'
  end // of exportAssets
  
  initMovieClip 695
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '[A1q*', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', 'type', ' bPMv', ' a(', ' DVkC', '2d[', '7J-V', 'Math', 'pow', 'abs', 'gotoAndStop', '4e-1J', '0(}e', '[w;(', '(l;(', 'x', '=_b8', 'y', '1h6g9(', '0w*(((', '4k8;L', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '[A1q*'
    getMember
    not
    not
    branchIfTrue label10
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '[A1q*'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '[A1q*'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 280
      setMember
      push r:this, '0Pezx', 1
      setMember
      push r:this, 'type', 12
      setMember
      push r:this, ' bPMv', FALSE
      setMember
      push r:this, ' a(', 0.0
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push r:this, ' bPMv'
      getMember
      not
      branchIfTrue label5
      push r:this, ' a(', r:this, ' a('
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      push 0.6, 2, 'Math'
      getVariable
      push 'pow'
      callMethod
      multiply
      setMember
      push r:this, ' a('
      getMember
      push 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      push 1
      lessThan
      not
      branchIfTrue label4
      push r:this, ' a(', 0.0
      setMember
      push r:this, ' bPMv', FALSE
      setMember
      push 1, 1, r:this, 'gotoAndStop'
      callMethod
      pop
     label4:
      branch label9
     label5:
      push 200
      random
      not
      not
      branchIfTrue label9
      push 0.0
      setRegister r:5
      pop
     label6:
      push r:5, 10
      lessThan
      not
      branchIfTrue label9
      push r:this, '4e-1J'
      getMember
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '(l;('
      getMember
      push 2, r:this, '4e-1J'
      getMember
      multiply
      subtract
      random
      add
      setRegister r:3
      pop
      push r:this, 'x'
      getMember
      push r:3
      subtract
      setRegister r:4
      pop
      push r:4, 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      push r:this, '=_b8'
      getMember
      lessThan
      dup
      not
      branchIfTrue label7
      pop
      push r:this, 'y'
      getMember
      push r:3, 2, r:this, '0(}e'
      getMember
      push '1h6g9('
      callMethod
     label7:
      not
      branchIfTrue label8
      push r:this, 'x', r:3
      setMember
      push r:this, ' bPMv', TRUE
      setMember
      push r:this, ' a(', r:4
      setMember
      push 2, 1, r:this, 'gotoAndStop'
      callMethod
      pop
      branch label9
     label8:
      push r:5
      increment
      setRegister r:5
      pop
      branch label6
     label9:
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '4k8;L'
    function2 () (r:1='this', r:2='super')
      push r:this, 'x', r:this, 'x'
      getMember
      push r:this, ' a('
      getMember
      add
      setMember
      push 0.0, r:super, '4k8;L'
      callMethod
      pop
      push r:this, 'x', r:this, 'x'
      getMember
      push r:this, ' a('
      getMember
      subtract
      setMember
    end // of function 

    setMember
    push r:1, '=_b8', 60
    setMember
    push r:1, '4e-1J', 15
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '[A1q*'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label10:
    pop
  end // of initMovieClip 695

  defineMovieClip 696 // total frames: 0
  end // of defineMovieClip 696
  
  exportAssets
    696 as '__Packages.miniwave.sp.bads.Figue'
  end // of exportAssets
  
  initMovieClip 696
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '6*yW6', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', '3fEyH', ')(w+4', 'type', ' DVkC', '4GnfY', ']9]t1(', '9]7O', ']dc', '_xscale', '(Jj0s', '0(}e', '+3ul', 'x', 'Math', 'abs', ')]6(', '0w*(((', '4k8;L', '_x', '_y', 'y', '6}jsa', '2d[', '7J-V', '()nBD', '+NGeY', '1zHbT', '*zpZx', '_yscale', '[w;(', '9l;(', '1T3j', 'removeMovieClip', '{]ckD', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '6*yW6'
    getMember
    not
    not
    branchIfTrue label14
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '6*yW6'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '6*yW6'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 200
      setMember
      push r:this, '0Pezx', 0.5
      setMember
      push r:this, '3fEyH', 0.0
      setMember
      push r:this, ')(w+4', FALSE
      setMember
      push r:this, 'type', 11
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push r:this, ')(w+4'
      getMember
      not
      branchIfTrue label9
      push r:this, '3fEyH'
      getMember
      push 0.0
      greaterThan
      not
      not
      branchIfTrue label4
      push 0.0, r:this, '4GnfY'
      callMethod
      pop
      branch label8
     label4:
      push r:this, '3fEyH'
      getMember
      push r:this, ']9]t1('
      getMember
      greaterThan
      not
      not
      branchIfTrue label5
      push r:this, '9]7O'
      getMember
      push ']dc'
      getMember
      push '_xscale', r:this, '3fEyH'
      getMember
      push 100, r:this, ']9]t1('
      getMember
      divide
      multiply
      setMember
      branch label8
     label5:
      push r:this, '3fEyH'
      getMember
      push r:this, '(Jj0s'
      getMember
      push r:this, ']9]t1('
      getMember
      subtract
      greaterThan
      not
      not
      branchIfTrue label7
      push r:this, '9]7O'
      getMember
      push ']dc'
      getMember
      push '_xscale', 100
      setMember
      push r:this, '0(}e'
      getMember
      push '+3ul'
      getMember
      push 'x'
      getMember
      push r:this, 'x'
      getMember
      subtract
      setRegister r:3
      pop
      push r:3, 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      push r:this, '0(}e'
      getMember
      push '+3ul'
      getMember
      push ']dc'
      getMember
      lessThan
      not
      branchIfTrue label6
      push 0.0, r:this, '0(}e'
      getMember
      push '+3ul'
      getMember
      push ')]6('
      callMethod
      pop
     label6:
      branch label8
     label7:
      push r:this, '9]7O'
      getMember
      push ']dc'
      getMember
      push '_xscale', r:this, '(Jj0s'
      getMember
      push r:this, '3fEyH'
      getMember
      subtract
      push 100, r:this, ']9]t1('
      getMember
      divide
      multiply
      setMember
     label8:
      branch label10
     label9:
      push 0.0, r:this, '0w*((('
      callMethod
      pop
     label10:
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '4k8;L'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '4k8;L'
      callMethod
      pop
      push r:this, ')(w+4'
      getMember
      not
      branchIfTrue label11
      push r:this, '9]7O'
      getMember
      push '_x', r:this, 'x'
      getMember
      setMember
      push r:this, '9]7O'
      getMember
      push '_y', r:this, 'y'
      getMember
      setMember
     label11:
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push r:this, '3fEyH', r:this, '3fEyH'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='this')
      push r:this, '9]7O', r:this, '0(}e'
      getMember
      push '+NGeY'
      getMember
      push 0.0
      initObject
      push '1zHbT', 3, r:this, '0(}e'
      getMember
      push '*zpZx'
      callMethod
      setMember
      push r:this, '9]7O'
      getMember
      push ']dc'
      getMember
      push '_yscale', r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '9l;('
      getMember
      push r:this, 'y'
      getMember
      subtract
      setMember
      push r:this, '9]7O'
      getMember
      push ']dc'
      getMember
      push '_xscale', 0.0
      setMember
      push r:this, '3fEyH', r:this, '(Jj0s'
      getMember
      setMember
      push r:this, ')(w+4', TRUE
      setMember
    end // of function 

    setMember
    push r:1, '1T3j'
    function2 () (r:1='this', r:2='super')
      push r:this, ')(w+4'
      getMember
      not
      branchIfTrue label12
      push 0.0, r:this, '9]7O'
      getMember
      push 'removeMovieClip'
      callMethod
      pop
     label12:
      push 0.0, r:super, '1T3j'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '{]ckD'
    function2 (r:3='t') (r:1='this', r:2='super')
      push r:t, 1, r:super, '{]ckD'
      callMethod
      pop
      push r:this, ')(w+4'
      getMember
      not
      branchIfTrue label13
      push 0.0, r:this, '4GnfY'
      callMethod
      pop
     label13:
    end // of function 

    setMember
    push r:1, '4GnfY'
    function2 () (r:1='this')
      push 0.0, r:this, '9]7O'
      getMember
      push 'removeMovieClip'
      callMethod
      pop
      push r:this, ')(w+4', FALSE
      setMember
    end // of function 

    setMember
    push r:1, '(Jj0s', 48
    setMember
    push r:1, ']9]t1(', 12
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '6*yW6'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label14:
    pop
  end // of initMovieClip 696

  defineMovieClip 697 // total frames: 0
  end // of defineMovieClip 697
  
  exportAssets
    697 as '__Packages.miniwave.sp.bads.Orange'
  end // of exportAssets
  
  initMovieClip 697
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '+p6uo', '=w)l', ']q}_', 'prototype', 'type', ']qbf', '0Pezx', '5i(', ' DVkC', '0w*(((', '4k8;L', ')]6(', '{r-z7', 'nextFrame', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '+p6uo'
    getMember
    not
    not
    branchIfTrue label6
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '+p6uo'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '+p6uo'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, 'type', 1
      setMember
      push r:this, ']qbf', 800
      setMember
      push r:this, '0Pezx', 1
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
      push r:this, '5i(', 2
      setMember
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ')]6('
    function2 () (r:1='this')
      push r:this, '5i(', r:this, '5i('
      getMember
      decrement
      setMember
      push r:this, '5i('
      getMember
      push 0.0
      equals
      not
      branchIfTrue label4
      push 0.0, r:this, '{r-z7'
      callMethod
      pop
      branch label5
     label4:
      push 0.0, r:this, 'nextFrame'
      callMethod
      pop
     label5:
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '+p6uo'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label6:
    pop
  end // of initMovieClip 697

  defineMovieClip 698 // total frames: 0
  end // of defineMovieClip 698
  
  exportAssets
    698 as '__Packages.miniwave.sp.hero.Cherry'
  end // of exportAssets
  
  initMovieClip 698
    constants '_global', 'miniwave', 'Object', '8y', '+3ul', '=sW+4(', 'type', '=w)l', '{ry;', 'prototype', '5i(', '6}jsa', '7TkU6', '+Dd;W', '2d[', '7J-V', '7hKwX', 'x', 'y', '0(}e', '}=*uB(', 'length', 'Math', 'abs', '4n)(', '_width', ')]6(', '7=bN', '7YWJI', 'boss', ']dc', '4N)zC', '1T3j', 'min', '_xscale', '{99sR', '4k8;L', '0G)c', '-UU8M', '[w;(', ';*b', '[bRwJ', ']nBjo', '[E[XH', ';IDPE', '_yscale', '9l;(', '()nBD', '*]4q-', ',N5T', '+N5T', '+};I2', ' HkK}', 'gotoAndStop', ')]4q-', '0Pezx', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push '+3ul'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push '+3ul', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push '+3ul'
    getMember
    push '=sW+4('
    getMember
    not
    not
    branchIfTrue label19
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push '+3ul'
    getMember
    push '=sW+4('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push r:this, 'type', 5
      setMember
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push '+3ul'
    getMember
    push '=sW+4('
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push '{ry;'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, 'type', 5
      setMember
      push r:this, '5i(', 2
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push r:this, '7TkU6'
      getMember
      not
      branchIfTrue label12
      push r:this, '+Dd;W', r:this, '+Dd;W'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
      push r:this, '7hKwX'
      getMember
      push 'x', r:this, 'x'
      getMember
      setMember
      push r:this, '7hKwX'
      getMember
      push 'y', r:this, 'y'
      getMember
      setMember
      push r:this, '0(}e'
      getMember
      push '}=*uB('
      getMember
      setRegister r:5
      pop
      push 0.0
      setRegister r:3
      pop
     label4:
      push r:3, r:5, 'length'
      getMember
      lessThan
      not
      branchIfTrue label6
      push r:5, r:3
      getMember
      setRegister r:4
      pop
      push r:4, 'x'
      getMember
      push r:this, '7hKwX'
      getMember
      push 'x'
      getMember
      subtract
      push 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      push r:this, '7hKwX'
      getMember
      push '4n)('
      getMember
      push '_width'
      getMember
      push 2
      divide
      lessThan
      not
      branchIfTrue label5
      push 0.0, r:4, ')]6('
      callMethod
      pop
     label5:
      push r:3
      increment
      setRegister r:3
      pop
      branch label4
     label6:
      push r:this, '0(}e'
      getMember
      push '7=bN'
      getMember
      push 4
      equals
      not
      branchIfTrue label9
      push r:this, '7YWJI'
      getMember
      push 0.0
      lessThan
      not
      branchIfTrue label8
      push r:this, '0(}e'
      getMember
      push 'boss'
      getMember
      push 'x'
      getMember
      push r:this, '7hKwX'
      getMember
      push 'x'
      getMember
      subtract
      push 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      push r:this, '0(}e'
      getMember
      push 'boss'
      getMember
      push ']dc'
      getMember
      push r:this, '7hKwX'
      getMember
      push '4n)('
      getMember
      push '_width'
      getMember
      push 2
      divide
      add
      lessThan
      not
      branchIfTrue label7
      push 0.0, r:this, '0(}e'
      getMember
      push 'boss'
      getMember
      push ')]6('
      callMethod
      pop
      push r:this, '7YWJI', 2.5
      setMember
     label7:
      branch label9
     label8:
      push r:this, '7YWJI', r:this, '7YWJI'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
     label9:
      push r:this, '+Dd;W'
      getMember
      push 0.0
      lessThan
      not
      branchIfTrue label10
      push r:this, '7TkU6', FALSE
      setMember
      push r:this, '4N)zC', 3
      setMember
      push 0.0, r:this, '7hKwX'
      getMember
      push '1T3j'
      callMethod
      pop
      branch label12
     label10:
      push r:this, '+Dd;W'
      getMember
      push 10
      greaterThan
      not
      branchIfTrue label11
      push 10, 40, r:this, '+Dd;W'
      getMember
      subtract
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      push 10
      multiply
      setRegister r:6
      pop
      push r:this, '7hKwX'
      getMember
      push '4n)('
      getMember
      push '_xscale', r:6
      setMember
      push r:this, '7hKwX'
      getMember
      push '{99sR'
      getMember
      push '_xscale', r:6
      setMember
      branch label12
     label11:
      push r:this, '7hKwX'
      getMember
      push '4n)('
      getMember
      push '_xscale', r:this, '+Dd;W'
      getMember
      push 10
      multiply
      setMember
      push r:this, '7hKwX'
      getMember
      push '{99sR'
      getMember
      push '_xscale', r:this, '+Dd;W'
      getMember
      push 10
      multiply
      setMember
     label12:
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '0G)c'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '0G)c'
      callMethod
      pop
      push 62, '-UU8M', 2, r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push '[bRwJ'
      callMethod
      pop
      push 'x', r:this, 'x'
      getMember
      push 'y', r:this, 'y'
      getMember
      push ']nBjo', FALSE, 3
      initObject
      setRegister r:3
      pop
      push r:this, '7hKwX', TRUE, r:3, '[E[XH', 3, r:this, '0(}e'
      getMember
      push ';IDPE'
      callMethod
      setMember
      push r:this, '7hKwX'
      getMember
      push '4n)('
      getMember
      push '_xscale', 0.0
      setMember
      push r:this, '7hKwX'
      getMember
      push '4n)('
      getMember
      push '_yscale', r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '9l;('
      getMember
      setMember
      push r:this, '7hKwX'
      getMember
      push '{99sR'
      getMember
      push '_xscale', 0.0
      setMember
      push r:this, '4N)zC', 1
      setMember
      push r:this, '+Dd;W', 40
      setMember
      push r:this, '7YWJI', 0.0
      setMember
      push r:this, '7TkU6', TRUE
      setMember
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '()nBD'
      callMethod
      pop
      push r:this, '5i('
      getMember
      push 1
      equals
      not
      branchIfTrue label15
      push 10, '*]4q-', 2, r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push '[bRwJ'
      callMethod
      pop
      push 0.0
      setRegister r:3
      pop
     label13:
      push r:3, 2
      lessThan
      not
      branchIfTrue label14
      push r:3, 2
      multiply
      push 1
      subtract
      setRegister r:4
      pop
      push 'x', r:this, 'x'
      getMember
      push r:4, 5
      multiply
      add
      push 'y', r:this, 'y'
      getMember
      push 6
      subtract
      push ',N5T', r:4, 0.5
      multiply
      push '+N5T', -2.5, '+};I2', TRUE, 5
      initObject
      setRegister r:6
      pop
      push r:6, 1, r:this, '0(}e'
      getMember
      push ' HkK}'
      callMethod
      setRegister r:5
      pop
      push 156, 1, r:5, 'gotoAndStop'
      callMethod
      pop
      push r:3
      increment
      setRegister r:3
      pop
      branch label13
     label14:
      branch label16
     label15:
      push 10, ')]4q-', 2, r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push '[bRwJ'
      callMethod
      pop
     label16:
    end // of function 

    setMember
    push r:1, ')]6('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ')]6('
      callMethod
      pop
      push r:this, '5i('
      getMember
      push 1
      equals
      not
      branchIfTrue label17
      push r:this, '0Pezx', 2
      setMember
      push 2, 1, r:this, 'gotoAndStop'
      callMethod
      pop
     label17:
    end // of function 

    setMember
    push r:1, '1T3j'
    function2 () (r:1='this', r:2='super')
      push r:this, '7TkU6'
      getMember
      not
      branchIfTrue label18
      push 0.0, r:this, '7hKwX'
      getMember
      push '1T3j'
      callMethod
      pop
     label18:
      push 0.0, r:super, '1T3j'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '4N)zC', 3
    setMember
    push r:1, '0Pezx', 3
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push '+3ul'
    getMember
    push '=sW+4('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label19:
    pop
  end // of initMovieClip 698

  defineMovieClip 699 // total frames: 0
  end // of defineMovieClip 699
  
  exportAssets
    699 as '__Packages.miniwave.sp.hero.Curaso'
  end // of exportAssets
  
  initMovieClip 699
    constants '_global', 'miniwave', 'Object', '8y', '+3ul', '8WG)L(', 'type', '=w)l', '{ry;', 'prototype', '6}jsa', '4k8;L', '()nBD', ' ]4q-', '0(}e', '[w;(', ';*b', '[bRwJ', 'x', '}cj8F(', '{2{X2(', '2)', '0ttdQ', '8-FUS', '+N5T', '0G)c', '9i(N', 'y', ',N5T', ' HkK}', 'gotoAndStop', '4N)zC', '0Pezx', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push '+3ul'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push '+3ul', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push '+3ul'
    getMember
    push '8WG)L('
    getMember
    not
    not
    branchIfTrue label6
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push '+3ul'
    getMember
    push '8WG)L('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push r:this, 'type', 4
      setMember
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push '+3ul'
    getMember
    push '8WG)L('
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push '{ry;'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, 'type', 4
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='this', r:2='super')
      push 10, ' ]4q-', 2, r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push '[bRwJ'
      callMethod
      pop
      push 0.0
      setRegister r:4
      pop
     label4:
      push r:4, 2
      lessThan
      not
      branchIfTrue label5
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:3
      pop
      push r:this, 'x'
      getMember
      push r:4, 2
      multiply
      push 1
      subtract
      push 7
      multiply
      add
      setRegister r:5
      pop
      push r:3, '}cj8F(', 9
      setMember
      push r:3, '{2{X2(', 'x', r:this, 'x'
      getMember
      push '2)', 314, 1, r:4
      subtract
      multiply
      push '0ttdQ', 20, '8-FUS', 8, 4
      initObject
      setMember
      push r:3, 'x', r:5
      setMember
      push r:3, '+N5T', -3.5
      setMember
      push r:4
      increment
      setRegister r:4
      pop
      branch label4
     label5:
    end // of function 

    setMember
    push r:1, '0G)c'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '0G)c'
      callMethod
      pop
      push 62, '9i(N', 2, r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push '[bRwJ'
      callMethod
      pop
      push 'x', r:this, 'x'
      getMember
      push 'y', r:this, 'y'
      getMember
      push 6
      subtract
      push ',N5T', 0.0, '+N5T', -5, '}cj8F(', 10, 5
      initObject
      setRegister r:4
      pop
      push r:4, 1, r:this, '0(}e'
      getMember
      push ' HkK}'
      callMethod
      setRegister r:3
      pop
      push 155, 1, r:3, 'gotoAndStop'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '4N)zC', 3
    setMember
    push r:1, '0Pezx', 3
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push '+3ul'
    getMember
    push '8WG)L('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label6:
    pop
  end // of initMovieClip 699

  defineMovieClip 700 // total frames: 0
  end // of defineMovieClip 700
  
  exportAssets
    700 as '__Packages.miniwave.sp.bads.Cassis'
  end // of exportAssets
  
  initMovieClip 700
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', ']8sB;(', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', 'type', ' iy3=', 'Array', '8-FUS', '4Acl;', ' DVkC', '0w*(((', '2d[', '7J-V', '[HIsH', ']AB=r', 'attachMovie', 'push', 'length', '()nBD', '* ODx', '4k8;L', '+)', '_x', 'Math', 'cos', '_y', 'sin', 'x', 'y', ',N5T', '+N5T', ';IwU', 'XXX\nmc.vitx(', ')\nmc.vity(', ')\nmc.x(', ')\nmc.y(', ')\n', '}cj8F(', '{2{X2(', '3fEyH', 'removeMovieClip', 'shift', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ']8sB;('
    getMember
    not
    not
    branchIfTrue label14
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ']8sB;('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ']8sB;('
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 400
      setMember
      push r:this, '0Pezx', 10
      setMember
      push r:this, 'type', 46
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
      push r:this, ' iy3=', 0.0, 'Array'
      new
      setMember
      push r:this, '8-FUS', 0.0
      setMember
      push r:this, '4Acl;', 0.0
      setMember
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 60, '2d['
      getVariable
      push '7J-V'
      getMember
      divide
      random
      not
      not
      branchIfTrue label4
      push r:this, '4Acl;'
      getMember
      push r:this, '4Acl;', r:this, '4Acl;'
      getMember
      increment
      setMember
      setRegister r:3
      pop
      push r:3, '[HIsH', r:3
      add
      push ']AB=r', 3, r:this, 'attachMovie'
      callMethod
      pop
      push r:this, '[HIsH', r:3
      add
      getMember
      setRegister r:4
      pop
      push r:4, 1, r:this, ' iy3='
      getMember
      push 'push'
      callMethod
      pop
     label4:
      push r:this, ' iy3='
      getMember
      push 'length'
      getMember
      push 10
      greaterThan
      not
      branchIfTrue label5
      push 0.0, r:this, '()nBD'
      callMethod
      pop
     label5:
      push 0.0, r:this, '* ODx'
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '* ODx'
    function2 () (r:1='this')
      push r:this, ' iy3='
      getMember
      push 'length'
      getMember
      setRegister r:5
      pop
      push r:this, '8-FUS', r:this, '8-FUS'
      getMember
      push 12
      add
      push 628
      modulo
      setMember
      push 0.0
      setRegister r:3
      pop
     label6:
      push r:3, r:5
      lessThan
      not
      branchIfTrue label7
      push r:this, ' iy3='
      getMember
      push r:3
      getMember
      setRegister r:2
      pop
      push r:this, '8-FUS'
      getMember
      push 628, r:3
      multiply
      push r:5
      divide
      add
      setRegister r:4
      pop
      push r:2, '+)', r:4, 100
      divide
      setMember
      push r:2, '_x', r:2, '+)'
      getMember
      push 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push 12
      multiply
      setMember
      push r:2, '_y', r:2, '+)'
      getMember
      push 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push 12
      multiply
      setMember
      push r:3
      increment
      setRegister r:3
      pop
      branch label6
     label7:
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='this', r:2='super', r:3='_root')
     label8:
      push r:this, ' iy3='
      getMember
      push 'length'
      getMember
      push 0.0
      greaterThan
      not
      branchIfTrue label13
      push r:this, ' iy3='
      getMember
      push 0.0
      getMember
      setRegister r:5
      pop
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:4
      pop
      push r:4, 'x', r:this, 'x'
      getMember
      push r:5, '_x'
      getMember
      add
      setMember
      push r:4, 'y', r:this, 'y'
      getMember
      push r:5, '_y'
      getMember
      add
      setMember
      push r:4, ',N5T', r:5, '+)'
      getMember
      push 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push 4
      multiply
      setMember
      push r:4, '+N5T', r:5, '+)'
      getMember
      push 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push 4
      multiply
      setMember
      push r:4, ',N5T'
      getMember
      push UNDEF
      equals
      dup
      branchIfTrue label9
      pop
      push r:4, '+N5T'
      getMember
      push UNDEF
      equals
     label9:
      dup
      branchIfTrue label10
      pop
      push r:4, 'x'
      getMember
      push UNDEF
      equals
     label10:
      dup
      branchIfTrue label11
      pop
      push r:4, 'y'
      getMember
      push UNDEF
      equals
     label11:
      not
      branchIfTrue label12
      push r:_root, ';IwU', r:_root, ';IwU'
      getMember
      push 'XXX\nmc.vitx(', r:4, ',N5T'
      getMember
      add
      push ')\nmc.vity('
      add
      push r:4, '+N5T'
      getMember
      add
      push ')\nmc.x('
      add
      push r:4, 'x'
      getMember
      add
      push ')\nmc.y('
      add
      push r:4, 'y'
      getMember
      add
      push ')\n'
      add
      add
      setMember
     label12:
      push r:4, '}cj8F(', 21
      setMember
      push r:4, '{2{X2(', '3fEyH', 14, 1
      initObject
      setMember
      push 0.0, r:5, 'removeMovieClip'
      callMethod
      pop
      push 0.0, r:this, ' iy3='
      getMember
      push 'shift'
      callMethod
      pop
      branch label8
     label13:
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ']8sB;('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label14:
    pop
  end // of initMovieClip 700

  defineMovieClip 701 // total frames: 0
  end // of defineMovieClip 701
  
  exportAssets
    701 as '__Packages.miniwave.sp.bads.Strawberry'
  end // of exportAssets
  
  initMovieClip 701
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '{NxI (', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', 'type', '1l ]Y', ' DVkC', '0w*(((', '4k8;L', '()nBD', '}cj8F(', '{2{X2(', '3fEyH', '=-4]K', '[pJN8(', ',N5T', '+N5T', 'gotoAndStop', ',OClF', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '{NxI ('
    getMember
    not
    not
    branchIfTrue label5
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '{NxI ('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '{NxI ('
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 320
      setMember
      push r:this, '0Pezx', 4
      setMember
      push r:this, 'type', 27
      setMember
      push r:this, '1l ]Y', TRUE
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='this', r:2='super')
      push r:this, '1l ]Y'
      getMember
      not
      branchIfTrue label4
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:3
      pop
      push 2
      random
      push 2
      multiply
      push 1
      subtract
      setRegister r:4
      pop
      push r:3, '}cj8F(', 11
      setMember
      push r:3, '{2{X2(', '3fEyH', 44, '=-4]K', r:this, 2
      initObject
      setMember
      push r:3, '[pJN8(', 200
      setMember
      push r:3, ',N5T', r:4, 8
      multiply
      setMember
      push r:3, '+N5T', 0.0
      setMember
      push r:this, '1l ]Y', FALSE
      setMember
      push 2, 1, r:this, 'gotoAndStop'
      callMethod
      pop
     label4:
    end // of function 

    setMember
    push r:1, ',OClF'
    function2 () (r:1='this')
      push r:this, '1l ]Y', TRUE
      setMember
      push 1, 1, r:this, 'gotoAndStop'
      callMethod
      pop
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '{NxI ('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label5:
    pop
  end // of initMovieClip 701

  defineMovieClip 702 // total frames: 0
  end // of defineMovieClip 702
  
  exportAssets
    702 as '__Packages.miniwave.sp.bads.Titi'
  end // of exportAssets
  
  initMovieClip 702
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', ' F6L', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', 'type', '*XI,V', 'Array', '65ajS', ' DVkC', '0w*(((', '4k8;L', '()nBD', '8MauE', '_currentframe', 'gotoAndStop', '+N5T', '{2{X2(', '[g(', '7=bN', '}h R', '}cj8F(', '[pJN8(', 'p', '_visible', ';rdKH', ' RWd=', '1T3j', '=mb_F', '{r-z7', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ' F6L'
    getMember
    not
    not
    branchIfTrue label14
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ' F6L'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ' F6L'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 240
      setMember
      push r:this, '0Pezx', 20
      setMember
      push r:this, 'type', 22
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
      push r:this, '*XI,V', 0.0, 'Array'
      new
      setMember
      push r:this, '65ajS', TRUE, TRUE, 2
      initArray
      setMember
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='this')
      push 0.0
      setRegister r:2
      pop
     label4:
      push r:2, 2
      lessThan
      not
      branchIfTrue label6
      push r:this, '65ajS'
      getMember
      push r:2
      getMember
      not
      branchIfTrue label5
      push r:2, 1, r:this, '8MauE'
      callMethod
      pop
      push UNDEF
      return
     label5:
      push r:2
      increment
      setRegister r:2
      pop
      branch label4
     label6:
    end // of function 

    setMember
    push r:1, '8MauE'
    function2 (r:4='[g(') (r:1='this', r:2='super')
      push r:this, '_currentframe'
      getMember
      push 2
      equals
      not
      not
      branchIfTrue label7
      push 2, 1, r:this, 'gotoAndStop'
      callMethod
      pop
     label7:
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:3
      pop
      push r:3, '+N5T', 10
      setMember
      push r:3, '{2{X2(', '[g(', r:'[g(', '7=bN', 0.0, '}h R', r:this, 3
      initObject
      setMember
      push r:3, '}cj8F(', 4
      setMember
      push r:3, '[pJN8(', 100
      setMember
      push r:this, '*XI,V'
      getMember
      push r:'[g(', r:3
      setMember
      push r:this, 'p', r:'[g(', 1
      add
      add
      getMember
      push '_visible', FALSE
      setMember
      push r:this, '65ajS'
      getMember
      push r:'[g(', FALSE
      setMember
    end // of function 

    setMember
    push r:1, ';rdKH'
    function2 (r:2='[g(') (r:1='this')
      push r:this, 'p', r:'[g(', 1
      add
      add
      getMember
      push '_visible', TRUE
      setMember
      push r:this, '*XI,V'
      getMember
      push r:'[g(', UNDEF
      setMember
      push r:this, '65ajS'
      getMember
      push r:'[g(', TRUE
      setMember
      push 0.0, r:this, ' RWd='
      callMethod
      push 2
      equals
      not
      branchIfTrue label8
      push 1, 1, r:this, 'gotoAndStop'
      callMethod
      pop
     label8:
    end // of function 

    setMember
    push r:1, '1T3j'
    function2 () (r:1='this', r:2='super')
      push 0.0
      setRegister r:3
      pop
     label9:
      push r:3, 2
      lessThan
      not
      branchIfTrue label10
      push 0.0, r:this, '*XI,V'
      getMember
      push r:3
      getMember
      push '=mb_F'
      callMethod
      setRegister r:4
      pop
      push r:3
      increment
      setRegister r:3
      pop
      branch label9
     label10:
      push 0.0, r:super, '1T3j'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '{r-z7'
    function2 () (r:1='this', r:2='super')
      push 3, 0.0, r:this, ' RWd='
      callMethod
      add
      push 1, r:super, '{r-z7'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' RWd='
    function2 () (r:1='this')
      push 0.0
      setRegister r:3
      pop
      push 0.0
      setRegister r:2
      pop
     label11:
      push r:2, 2
      lessThan
      not
      branchIfTrue label13
      push r:this, '65ajS'
      getMember
      push r:2
      getMember
      not
      branchIfTrue label12
      push r:3
      increment
      setRegister r:3
      pop
     label12:
      push r:2
      increment
      setRegister r:2
      pop
      branch label11
     label13:
      push r:3
      return
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ' F6L'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label14:
    pop
  end // of initMovieClip 702

  defineMovieClip 703 // total frames: 0
  end // of defineMovieClip 703
  
  exportAssets
    703 as '__Packages.miniwave.sp.bads.Citrus'
  end // of exportAssets
  
  initMovieClip 703
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', ',=Pw4(', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', '5i(', 'type', ' DVkC', '0w*(((', '4k8;L', ')]6(', '{r-z7', ',jJih', 'nextFrame', '()nBD', '2djsK(', ',N5T', '+N5T', '}cj8F(', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ',=Pw4('
    getMember
    not
    not
    branchIfTrue label10
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ',=Pw4('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ',=Pw4('
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 280
      setMember
      push r:this, '0Pezx', 3
      setMember
      push r:this, '5i(', 3
      setMember
      push r:this, 'type', 17
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push r:this, '5i('
      getMember
      push 1
      equals
      not
      branchIfTrue label4
      push 0.0, r:this, '0w*((('
      callMethod
      pop
     label4:
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ')]6('
    function2 () (r:1='this')
      push r:this, '5i(', r:this, '5i('
      getMember
      decrement
      setMember
      push r:this, '5i('
      getMember
      push 0.0
      equals
      not
      branchIfTrue label5
      push 0.0, r:this, '{r-z7'
      callMethod
      pop
      branch label7
     label5:
      push r:this, '5i('
      getMember
      push 1
      equals
      not
      branchIfTrue label6
      push 5, 1, r:this, ',jJih'
      callMethod
      pop
     label6:
      push 0.0, r:this, 'nextFrame'
      callMethod
      pop
     label7:
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='this', r:2='super')
      push 0.0
      setRegister r:4
      pop
     label8:
      push r:4, r:this, '2djsK('
      getMember
      lessThan
      not
      branchIfTrue label9
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:3
      pop
      push r:3, ',N5T', 8, 200
      random
      push 100
      subtract
      multiply
      push 100
      divide
      setMember
      push r:3, '+N5T', 0.0, 3, 30
      random
      push 10
      divide
      add
      subtract
      setMember
      push r:3, '}cj8F(', 3
      setMember
      push r:4
      increment
      setRegister r:4
      pop
      branch label8
     label9:
    end // of function 

    setMember
    push r:1, '{r-z7'
    function2 () (r:1='super')
      push 4, 1, r:super, '{r-z7'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '2djsK(', 5
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ',=Pw4('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label10:
    pop
  end // of initMovieClip 703

  defineMovieClip 704 // total frames: 0
  end // of defineMovieClip 704
  
  exportAssets
    704 as '__Packages.miniwave.sp.bads.Prune'
  end // of exportAssets
  
  initMovieClip 704
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '6CA=;', '=w)l', ']q}_', 'prototype', 'type', ' DVkC', '4k8;L', ')SDM;(', '0(}e', '[w;(', '9l;(', '41T)Y', 'y', 'x', '1h6g9(', '45(', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '6CA=;'
    getMember
    not
    not
    branchIfTrue label7
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '6CA=;'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '6CA=;'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, 'type', 9
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ')SDM;('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ')SDM;('
      callMethod
      pop
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '9l;('
      getMember
      push r:this, '41T)Y'
      getMember
      subtract
      setRegister r:3
      pop
     label4:
      push r:3, r:this, 'y'
      getMember
      greaterThan
      not
      branchIfTrue label6
      push r:3, r:this, 'x'
      getMember
      push 2, r:this, '0(}e'
      getMember
      push '1h6g9('
      callMethod
      not
      branchIfTrue label5
      push r:this, '45(', r:3
      setMember
      branch label6
     label5:
      push r:3, 24
      subtract
      setRegister r:3
      pop
      branch label4
     label6:
    end // of function 

    setMember
    push r:1, '41T)Y', 60
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '6CA=;'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label7:
    pop
  end // of initMovieClip 704

  defineMovieClip 705 // total frames: 0
  end // of defineMovieClip 705
  
  exportAssets
    705 as '__Packages.miniwave.sp.bads.Courge'
  end // of exportAssets
  
  initMovieClip 705
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '[4 z8(', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', 'type', ' DVkC', '0w*(((', '4k8;L', '()nBD', '}cj8F(', '{2{X2(', '70 (', '2)', 'x', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '[4 z8('
    getMember
    not
    not
    branchIfTrue label4
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '[4 z8('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '[4 z8('
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 240
      setMember
      push r:this, '0Pezx', 10
      setMember
      push r:this, 'type', 44
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:3
      pop
      push r:3, '}cj8F(', 19
      setMember
      push r:3, '{2{X2(', '70 (', 0.0, '2)', 0.0, 'x', r:this, 'x'
      getMember
      push 3
      initObject
      setMember
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '[4 z8('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label4:
    pop
  end // of initMovieClip 705

  defineMovieClip 706 // total frames: 0
  end // of defineMovieClip 706
  
  exportAssets
    706 as '__Packages.miniwave.sp.bads.Clementine'
  end // of exportAssets
  
  initMovieClip 706
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '[6kFO', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', 'type', ' DVkC', '0w*(((', '4k8;L', '()nBD', 'x', ',N5T', '+N5T', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '[6kFO'
    getMember
    not
    not
    branchIfTrue label6
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '[6kFO'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '[6kFO'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 400
      setMember
      push r:this, '0Pezx', 1
      setMember
      push r:this, 'type', 3
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='this', r:2='super')
      push 0.0
      setRegister r:4
      pop
     label4:
      push r:4, 2
      lessThan
      not
      branchIfTrue label5
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:3
      pop
      push r:4, 2
      multiply
      push 1
      subtract
      setRegister r:5
      pop
      push r:3, 'x', r:this, 'x'
      getMember
      push 3, r:5
      multiply
      add
      setMember
      push r:3, ',N5T', 0.5, r:5
      multiply
      setMember
      push r:3, '+N5T', 2
      setMember
      push r:4
      increment
      setRegister r:4
      pop
      branch label4
     label5:
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '[6kFO'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label6:
    pop
  end // of initMovieClip 706

  defineMovieClip 707 // total frames: 0
  end // of defineMovieClip 707
  
  exportAssets
    707 as '__Packages.miniwave.box.Pourcentage'
  end // of exportAssets
  
  initMovieClip 707
    constants '_global', 'miniwave', 'Object', ';W{', '8u lU', '=w)l', '6Yx', 'prototype', '9V(', '(X(', 'field', '_visible', '6S{', '{)zoW', '_xscale', '=(boD', 'text', '%', '8M -D', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ';W{'
    getMember
    push '8u lU'
    getMember
    not
    not
    branchIfTrue label3
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '8u lU'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '8u lU'
    getMember
    push 'miniwave'
    getVariable
    push '6Yx'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, '9V(', 50
      setMember
      push r:this, '(X(', 18
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
      push r:this, 'field'
      getMember
      push '_visible', FALSE
      setMember
      push r:this, '6S{'
      getMember
      push '_visible', FALSE
      setMember
    end // of function 

    setMember
    push r:1, '{)zoW'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '{)zoW'
      callMethod
      pop
      push r:this, 'field'
      getMember
      push '_visible', TRUE
      setMember
      push r:this, '6S{'
      getMember
      push '_visible', TRUE
      setMember
      push r:this, '6S{'
      getMember
      push '_xscale', r:this, '=(boD'
      getMember
      setMember
      push r:this, 'field'
      getMember
      push 'text', r:this, '=(boD'
      getMember
      push '%'
      add
      setMember
    end // of function 

    setMember
    push r:1, '8M -D'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '8M -D'
      callMethod
      pop
      push r:this, '6S{'
      getMember
      push '_visible', FALSE
      setMember
      push r:this, 'field'
      getMember
      push '_visible', FALSE
      setMember
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '8u lU'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label3:
    pop
  end // of initMovieClip 707

  defineMovieClip 708 // total frames: 0
  end // of defineMovieClip 708
  
  exportAssets
    708 as '__Packages.miniwave.page.SelectShip'
  end // of exportAssets
  
  initMovieClip 708
    constants '_global', 'miniwave', 'Object', ',1(R', '-Xgty', '=w)l', '];)H', 'prototype', ')sY,G(', 'width', '=vto', '=Xj_+(', ']A4]1(', '1W(', '0W(', 'height', '(hz](', '9V(', '(X(', '+f}KA(', ' )hwX', '[9={n', '3L9n1', '0)vdG', '1a,go', '[w)t=(', 'Array', '[w;(', '=Y(', '$ship', 'push', 'length', '[g(', ',BWA)', ']DVXd', '4Pzmp', ';*U}+', '-q};c', '3fEyH', '9LaTD', '5F5}m', 'name', '9PO]k', '', ']eS}I(', '}9WO', 'escadron selection', '6}jsa', '7=bN', '8x()n', '=mb_F', ',}AlE', ' c2q', '-,SU4', '2v3VX', 'type', '[AB7p', '4k8(', ')1o+K', 'size', '6(', 'h', '-l2gn', ',to,G(', '2d[', '7J-V', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ',1(R'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ',1(R', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ',1(R'
    getMember
    push '-Xgty'
    getMember
    not
    not
    branchIfTrue label14
    push 'miniwave'
    getVariable
    push ',1(R'
    getMember
    push '-Xgty'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push ',1(R'
    getMember
    push '-Xgty'
    getMember
    push 'miniwave'
    getVariable
    push '];)H'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='super')
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ')sY,G('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ')sY,G('
      callMethod
      pop
      push r:this, 'width'
      getMember
      push 20, r:this, '=vto'
      getMember
      push '=Xj_+('
      getMember
      push ']A4]1('
      getMember
      push 16
      multiply
      add
      subtract
      setRegister r:8
      pop
      push '1W(', 0.0, '0W(', r:this, 'height'
      getMember
      push r:this, '(hz]('
      getMember
      subtract
      push '9V(', r:8, '(X(', r:this, '(hz]('
      getMember
      push '+f}KA(', 16, 5
      initObject
      setRegister r:4
      pop
      push r:this, ' )hwX', r:4, '[9={n', 2, r:this, '3L9n1'
      callMethod
      setMember
      push '1W(', 8, r:8
      add
      push '0W(', r:this, 'height'
      getMember
      push r:this, '(hz]('
      getMember
      subtract
      push '9V(', r:this, 'width'
      getMember
      push 8, r:8
      add
      subtract
      push '(X(', r:this, '(hz]('
      getMember
      push '+f}KA(', 24, 5
      initObject
      setRegister r:4
      pop
      push r:this, '0)vdG', r:4, '1a,go', 2, r:this, '3L9n1'
      callMethod
      setMember
      push r:this, '[w)t=(', 0.0, 'Array'
      new
      setMember
      push 0.0, 'Array'
      new
      setRegister r:6
      pop
      push 0.0
      setRegister r:3
      pop
     label3:
      push r:3, 6
      lessThan
      not
      branchIfTrue label5
      push r:this, '=vto'
      getMember
      push '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$ship'
      getMember
      push r:3
      getMember
      not
      branchIfTrue label4
      push r:3, 1, r:6, 'push'
      callMethod
      pop
     label4:
      push r:3
      increment
      setRegister r:3
      pop
      branch label3
     label5:
      push r:6, 'length'
      getMember
      setRegister r:5
      pop
      push 0.0
      setRegister r:7
      pop
      push r:this, 'width'
      getMember
      push r:5, 1
      subtract
      push 8
      multiply
      subtract
      push r:5
      divide
      setRegister r:8
      pop
      push 0.0
      setRegister r:3
      pop
     label6:
      push r:3, r:5
      lessThan
      not
      branchIfTrue label7
      push '1W(', r:7, '0W(', 0.0, '9V(', r:8, '(X(', r:this, 'height'
      getMember
      push r:this, '(hz]('
      getMember
      push 8
      add
      subtract
      push '+f}KA(', r:3, 8
      multiply
      push '[g(', r:6, r:3
      getMember
      push ',BWA)', r:5, 7
      initObject
      setRegister r:4
      pop
      push r:4, ']DVXd', 2, r:this, '3L9n1'
      callMethod
      setRegister r:10
      pop
      push r:7, 8, r:8
      add
      add
      setRegister r:7
      pop
      push r:3
      increment
      setRegister r:3
      pop
      branch label6
     label7:
    end // of function 

    setMember
    push r:1, '4Pzmp'
    function2 (r:2='[g(') (r:1='this')
      push r:'[g(', 1, r:this, '[w)t=('
      getMember
      push 'push'
      callMethod
      pop
      push r:'[g(', 1, r:this, '0)vdG'
      getMember
      push ';*U}+'
      callMethod
      pop
      push r:this, '[w)t=('
      getMember
      push 'length'
      getMember
      push r:this, '=vto'
      getMember
      push '=Xj_+('
      getMember
      push ']A4]1('
      getMember
      equals
      not
      branchIfTrue label8
      push r:this, '-q};c', FALSE
      setMember
      push r:this, '3fEyH', 20
      setMember
     label8:
    end // of function 

    setMember
    push r:1, '9LaTD'
    function2 (r:2='[g(') (r:1='this')
      push r:this, '=vto'
      getMember
      push '[w;('
      getMember
      push '5F5}m'
      getMember
      push r:'[g('
      getMember
      push 'name'
      getMember
      push 1, r:this, ' )hwX'
      getMember
      push '9PO]k'
      callMethod
      pop
      push '', 1, r:this, ' )hwX'
      getMember
      push ']eS}I('
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '}9WO'
    function2 ('[g(') (r:1='this')
      push '', 1, r:this, ' )hwX'
      getMember
      push '9PO]k'
      callMethod
      pop
      push 'escadron selection', 1, r:this, ' )hwX'
      getMember
      push ']eS}I('
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push r:this, '7=bN'
      getMember
      push 0.0
      equals
      dup
      not
      branchIfTrue label9
      pop
      push r:this, '-q};c'
      getMember
      not
     label9:
      not
      branchIfTrue label13
      push r:this, '3fEyH'
      getMember
      push 0.0
      lessThan
      not
      branchIfTrue label12
      push r:this, '=vto'
      getMember
      push '=Xj_+('
      getMember
      push '8x()n', r:this, '[w)t=('
      getMember
      setMember
      push 0.0, r:this, '=mb_F'
      callMethod
      pop
      push r:this, '=vto'
      getMember
      push '=Xj_+('
      getMember
      push ',}AlE'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label10
      push ' c2q', '-,SU4', 1
      initObject
      push 1, r:this, '=vto'
      getMember
      push '2v3VX'
      callMethod
      pop
      branch label11
     label10:
      push 'type', '[AB7p', '4k8(', r:this, '=vto'
      getMember
      push '=Xj_+('
      getMember
      push ',}AlE'
      getMember
      push ')1o+K', ' c2q', '-,SU4', 1
      initObject
      push 'size', '6(', 210, 'h', 170, 2
      initObject
      push 4
      initObject
      setRegister r:5
      pop
      push ' c2q', '-l2gn', ',to,G(', r:5, 2
      initObject
      push 1, r:this, '=vto'
      getMember
      push '2v3VX'
      callMethod
      pop
     label11:
      branch label13
     label12:
      push r:this, '3fEyH', r:this, '3fEyH'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
     label13:
    end // of function 

    setMember
    push r:1, '(hz](', 20
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push ',1(R'
    getMember
    push '-Xgty'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label14:
    pop
  end // of initMovieClip 708

  defineMovieClip 709 // total frames: 0
  end // of defineMovieClip 709
  
  exportAssets
    709 as '__Packages.miniwave.sp.bads.Raisin'
  end // of exportAssets
  
  initMovieClip 709
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '4HsHN', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', 'type', ' DVkC', '0w*(((', '4k8;L', '()nBD', '0(}e', '*CcbI', 'x', 'y', 'Math', 'atan2', ',N5T', 'cos', ';[G=L', '+N5T', 'sin', ',eX{I(', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '4HsHN'
    getMember
    not
    not
    branchIfTrue label4
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '4HsHN'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '4HsHN'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 300
      setMember
      push r:this, '0Pezx', 20
      setMember
      push r:this, 'type', 20
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:3
      pop
      push 0.0, r:this, '0(}e'
      getMember
      push '*CcbI'
      callMethod
      setRegister r:5
      pop
      push r:5, 'x'
      getMember
      push r:this, 'x'
      getMember
      subtract
      setRegister r:7
      pop
      push r:5, 'y'
      getMember
      push r:this, 'y'
      getMember
      subtract
      setRegister r:6
      pop
      push r:7, r:6, 2, 'Math'
      getVariable
      push 'atan2'
      callMethod
      setRegister r:4
      pop
      push r:3, ',N5T', r:4, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push r:this, ';[G=L'
      getMember
      multiply
      setMember
      push r:3, '+N5T', r:4, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push r:this, ';[G=L'
      getMember
      multiply
      setMember
      push 0.0, r:3, ',eX{I('
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ';[G=L', 3
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '4HsHN'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label4:
    pop
  end // of initMovieClip 709

  defineMovieClip 710 // total frames: 0
  end // of defineMovieClip 710
  
  exportAssets
    710 as '__Packages.miniwave.sp.bads.Cerise'
  end // of exportAssets
  
  initMovieClip 710
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '6,exA(', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', 'type', ' DVkC', '0w*(((', '4k8;L', '()nBD', 'x', ',N5T', '+N5T', 'Math', 'abs', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '6,exA('
    getMember
    not
    not
    branchIfTrue label6
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '6,exA('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '6,exA('
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 400
      setMember
      push r:this, '0Pezx', 0.5
      setMember
      push r:this, 'type', 5
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='this', r:2='super')
      push 0.0
      setRegister r:5
      pop
     label4:
      push r:5, 3
      lessThan
      not
      branchIfTrue label5
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:4
      pop
      push r:5, 1
      subtract
      setRegister r:3
      pop
      push r:4, 'x', r:this, 'x'
      getMember
      push 4, r:3
      multiply
      add
      setMember
      push r:4, ',N5T', 0.8, r:3
      multiply
      setMember
      push r:4, '+N5T', 1.5, 0.3, 1, r:3, 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      subtract
      multiply
      add
      setMember
      push r:5
      increment
      setRegister r:5
      pop
      branch label4
     label5:
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '6,exA('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label6:
    pop
  end // of initMovieClip 710

  defineMovieClip 711 // total frames: 0
  end // of defineMovieClip 711
  
  exportAssets
    711 as '__Packages.miniwave.sp.bads.Citron'
  end // of exportAssets
  
  initMovieClip 711
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '*UPw4(', '=w)l', ']q}_', 'prototype', 'type', '=2(p', ' DVkC', '0(}e', '+3ul', 'x', 'Math', 'abs', '2d[', '7J-V', '+N5T', ']oVzo', '4k8;L', '6}jsa', 'min', 'y', '[w;(', '9l;(', '1T3j', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '*UPw4('
    getMember
    not
    not
    branchIfTrue label11
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '*UPw4('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '*UPw4('
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, 'type', 4
      setMember
      push r:this, '=2(p', 0.0
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push r:this, '0(}e'
      getMember
      push '+3ul'
      getMember
      push 'x'
      getMember
      push r:this, 'x'
      getMember
      subtract
      push 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      setRegister r:3
      pop
      push r:this, '=2(p'
      getMember
      push 0.0
      strictEquals
      branchIfTrue label4
      branch label7
     label4:
      push r:3, 10
      lessThan
      dup
      not
      branchIfTrue label5
      pop
      push 30, '2d['
      getVariable
      push '7J-V'
      getMember
      divide
      random
      not
     label5:
      not
      branchIfTrue label6
      push r:this, '=2(p', 1
      setMember
      push r:this, '+N5T', 0.0
      setMember
      push r:this, ']oVzo', FALSE
      setMember
     label6:
      branch label7
     label7:
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push r:this, '=2(p'
      getMember
      push 1
      strictEquals
      branchIfTrue label8
      branch label10
     label8:
      push r:this, '+N5T', 8, r:this, '+N5T'
      getMember
      push 0.5
      add
      push 2, 'Math'
      getVariable
      push 'min'
      callMethod
      push '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      setMember
      push r:this, 'y', r:this, 'y'
      getMember
      push r:this, '+N5T'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      add
      setMember
      push r:this, 'y'
      getMember
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '9l;('
      getMember
      push 20
      add
      greaterThan
      not
      branchIfTrue label9
      push 0.0, r:this, '1T3j'
      callMethod
      pop
     label9:
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
      branch label10
     label10:
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '*UPw4('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label11:
    pop
  end // of initMovieClip 711

  defineMovieClip 712 // total frames: 0
  end // of defineMovieClip 712
  
  exportAssets
    712 as '__Packages.miniwave.sp.bads.Momo'
  end // of exportAssets
  
  initMovieClip 712
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '[[,C', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', 'type', ' DVkC', '0w*(((', '4k8;L', '()nBD', 'Math', 'random', ',N5T', 'cos', '+N5T', 'sin', '1U_vK', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '[[,C'
    getMember
    not
    not
    branchIfTrue label4
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '[[,C'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '[[,C'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 40
      setMember
      push r:this, '0Pezx', 10
      setMember
      push r:this, 'type', 43
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='super')
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:2
      pop
      push 157, 75
      random
      push 0.0, 'Math'
      getVariable
      push 'random'
      callMethod
      push 2
      multiply
      push 1
      subtract
      multiply
      add
      push 100
      divide
      setRegister r:3
      pop
      push r:2, ',N5T', r:3, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push 5
      multiply
      setMember
      push r:2, '+N5T', r:3, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push 5
      multiply
      setMember
      push r:2, '1U_vK', 16
      setMember
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '[[,C'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label4:
    pop
  end // of initMovieClip 712

  defineMovieClip 713 // total frames: 0
  end // of defineMovieClip 713
  
  exportAssets
    713 as '__Packages.miniwave.sp.bads.Blackamber'
  end // of exportAssets
  
  initMovieClip 713
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '=+I0U', '=w)l', ']q}_', 'prototype', 'type', ']oVzo', ' DVkC', 'x', '0(}e', ')MvQY', '[w;(', '(l;(', ',;0[U', '45(', 'y', 'Math', 'min', '2d[', '7J-V', '7RagN', '4NWxl', '3fEyH', '4k8;L', '6}jsa', '()nBD', '*CcbI', '-UU_I(', ',N5T', 'cos', '+N5T', 'sin', ',eX{I(', ')SDM;(', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '=+I0U'
    getMember
    not
    not
    branchIfTrue label9
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '=+I0U'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '=+I0U'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, 'type', 33
      setMember
      push r:this, ']oVzo', FALSE
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push r:this, 'x', r:this, 'x'
      getMember
      push r:this, '0(}e'
      getMember
      push ')MvQY'
      getMember
      add
      setMember
      push r:this, 'x'
      getMember
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '(l;('
      getMember
      push 10
      add
      greaterThan
      not
      branchIfTrue label4
      push r:this, 'x', -10
      setMember
      push r:this, ',;0[U', TRUE
      setMember
     label4:
      push r:this, '45('
      getMember
      push r:this, 'y'
      getMember
      subtract
      push 0.3
      multiply
      setRegister r:4
      pop
      push r:this, 'y', r:this, 'y'
      getMember
      push 4, r:4, 2, 'Math'
      getVariable
      push 'min'
      callMethod
      push '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      add
      setMember
      push 0.0, r:this, '7RagN'
      callMethod
      setRegister r:3
      pop
      push r:this, ',;0[U'
      getMember
      push r:3
      equals
      not
      dup
      not
      branchIfTrue label5
      pop
      push r:this, ',;0[U'
      getMember
      push UNDEF
      equals
      not
     label5:
      not
      branchIfTrue label6
      push r:this, '4NWxl', 3
      setMember
      push r:this, '3fEyH', -1
      setMember
     label6:
      push r:this, ',;0[U', r:3
      setMember
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push r:this, '4NWxl'
      getMember
      push 0.0
      greaterThan
      not
      branchIfTrue label8
      push r:this, '3fEyH'
      getMember
      push 0.0
      lessThan
      not
      branchIfTrue label7
      push r:this, '4NWxl', r:this, '4NWxl'
      getMember
      decrement
      setMember
      push 0.0, r:this, '()nBD'
      callMethod
      pop
      push r:this, '3fEyH', 4
      setMember
      branch label8
     label7:
      push r:this, '3fEyH', r:this, '3fEyH'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      subtract
      setMember
     label8:
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:3
      pop
      push 0.0, r:this, '0(}e'
      getMember
      push '*CcbI'
      callMethod
      setRegister r:5
      pop
      push r:5, 1, r:this, '-UU_I('
      callMethod
      setRegister r:4
      pop
      push r:3, ',N5T', r:4, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push 4
      multiply
      setMember
      push r:3, '+N5T', r:4, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push 4
      multiply
      setMember
      push 0.0, r:3, ',eX{I('
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ')SDM;('
    function ()
    end // of function 

    setMember
    push r:1, '7RagN'
    function2 () (r:1='this')
      push r:this, 'x'
      getMember
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '(l;('
      getMember
      push 2
      divide
      lessThan
      return
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '=+I0U'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label9:
    pop
  end // of initMovieClip 713

  defineMovieClip 714 // total frames: 0
  end // of defineMovieClip 714
  
  exportAssets
    714 as '__Packages.miniwave.sp.bads.Abricot'
  end // of exportAssets
  
  initMovieClip 714
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '581ds', '=w)l', ']q}_', 'prototype', 'type', ' DVkC', '4k8;L', ')SDM;(', '()nBD', '0(}e', '*CcbI', '-UU_I(', ',N5T', 'Math', 'cos', '+N5T', 'sin', ',eX{I(', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '581ds'
    getMember
    not
    not
    branchIfTrue label4
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '581ds'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '581ds'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, 'type', 31
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ')SDM;('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ')SDM;('
      callMethod
      pop
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:3
      pop
      push 0.0, r:this, '0(}e'
      getMember
      push '*CcbI'
      callMethod
      setRegister r:5
      pop
      push r:5, 1, r:this, '-UU_I('
      callMethod
      setRegister r:4
      pop
      push r:3, ',N5T', r:4, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push 6
      multiply
      setMember
      push r:3, '+N5T', r:4, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push 6
      multiply
      setMember
      push 0.0, r:3, ',eX{I('
      callMethod
      pop
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '581ds'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label4:
    pop
  end // of initMovieClip 714

  defineMovieClip 715 // total frames: 0
  end // of defineMovieClip 715
  
  exportAssets
    715 as '__Packages.miniwave.sp.bads.Quetsch'
  end // of exportAssets
  
  initMovieClip 715
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', ')7hOX', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', 'type', ' DVkC', '0w*(((', '4k8;L', '6}jsa', '0oC=z', '0(}e', '7W4BT', 'length', 'x', 'y', 'Math', 'sqrt', '48*X', 'atan2', 'cos', '-SN7F', 'sin', '()nBD', '+N5T', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ')7hOX'
    getMember
    not
    not
    branchIfTrue label7
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ')7hOX'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ')7hOX'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 320
      setMember
      push r:this, '0Pezx', 2
      setMember
      push r:this, 'type', 24
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push 0.0, r:this, '0oC=z'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '0oC=z'
    function2 () (r:1='this')
      push r:this, '0(}e'
      getMember
      push '7W4BT'
      getMember
      setRegister r:8
      pop
      push 0.0
      setRegister r:5
      pop
     label4:
      push r:5, r:8, 'length'
      getMember
      lessThan
      not
      branchIfTrue label6
      push r:8, r:5
      getMember
      setRegister r:2
      pop
      push r:2, 'x'
      getMember
      push r:this, 'x'
      getMember
      subtract
      setRegister r:4
      pop
      push r:2, 'y'
      getMember
      push r:this, 'y'
      getMember
      subtract
      setRegister r:3
      pop
      push r:4, r:4
      multiply
      push r:3, r:3
      multiply
      add
      push 1, 'Math'
      getVariable
      push 'sqrt'
      callMethod
      setRegister r:7
      pop
      push r:7, r:this, '48*X'
      getMember
      lessThan
      not
      branchIfTrue label5
      push r:4, r:3, 2, 'Math'
      getVariable
      push 'atan2'
      callMethod
      setRegister r:6
      pop
      push r:2, 'x', r:2, 'x'
      getMember
      push r:6, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push r:this, '-SN7F'
      getMember
      multiply
      add
      setMember
      push r:2, 'y', r:2, 'y'
      getMember
      push r:6, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push r:this, '-SN7F'
      getMember
      multiply
      add
      setMember
     label5:
      push r:5
      increment
      setRegister r:5
      pop
      branch label4
     label6:
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='super')
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:2
      pop
      push r:2, '+N5T', 4
      setMember
    end // of function 

    setMember
    push r:1, '-SN7F', 2
    setMember
    push r:1, '48*X', 26
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ')7hOX'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label7:
    pop
  end // of initMovieClip 715

  defineMovieClip 716 // total frames: 0
  end // of defineMovieClip 716
  
  exportAssets
    716 as '__Packages.miniwave.sp.bads.Mure'
  end // of exportAssets
  
  initMovieClip 716
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '6gaB', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', 'type', ' DVkC', '0w*(((', '4k8;L', '()nBD', '}cj8F(', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '6gaB'
    getMember
    not
    not
    branchIfTrue label4
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '6gaB'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '6gaB'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 220
      setMember
      push r:this, '0Pezx', 4
      setMember
      push r:this, 'type', 16
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='super')
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:2
      pop
      push r:2, '}cj8F(', 1
      setMember
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '6gaB'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label4:
    pop
  end // of initMovieClip 716

  defineMovieClip 717 // total frames: 0
  end // of defineMovieClip 717
  
  exportAssets
    717 as '__Packages.miniwave.sp.bads.Pomme'
  end // of exportAssets
  
  initMovieClip 717
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', ';,KS;', '=w)l', ']q}_', 'prototype', 'type', ' DVkC', '4k8;L', '{r-z7', '-Mvvk', '()nBD', ',N5T', '+N5T', ',eX{I(', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ';,KS;'
    getMember
    not
    not
    branchIfTrue label6
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ';,KS;'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ';,KS;'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, 'type', 13
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '{r-z7'
    function2 () (r:1='this', r:2='super')
      push 0.0
      setRegister r:4
      pop
     label4:
      push r:4, r:this, '-Mvvk'
      getMember
      lessThan
      not
      branchIfTrue label5
      push 0.0, r:this, '()nBD'
      callMethod
      setRegister r:3
      pop
      push r:4, 2
      multiply
      push r:this, '-Mvvk'
      getMember
      push 1
      subtract
      subtract
      push r:this, '-Mvvk'
      getMember
      push 1
      subtract
      divide
      setRegister r:5
      pop
      push r:3, ',N5T', r:5, 3
      multiply
      setMember
      push r:3, '+N5T', 2.5
      setMember
      push 0.0, r:3, ',eX{I('
      callMethod
      pop
      push r:4
      increment
      setRegister r:4
      pop
      branch label4
     label5:
      push 0.0, r:super, '{r-z7'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '-Mvvk', 5
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ';,KS;'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label6:
    pop
  end // of initMovieClip 717

  defineMovieClip 718 // total frames: 0
  end // of defineMovieClip 718
  
  exportAssets
    718 as '__Packages.miniwave.sp.hero.Pastaga'
  end // of exportAssets
  
  initMovieClip 718
    constants '_global', 'miniwave', 'Object', '8y', '+3ul', '28y(;(', 'type', '=w)l', '{ry;', 'prototype', '5i(', '6}jsa', '4k8;L', '()nBD', '{[4q-', '0(}e', '[w;(', ';*b', '[bRwJ', 'x', '+N5T', '0G)c', '}HCp', '}cj8F(', 'gotoAndStop', '4N)zC', '0Pezx', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push '+3ul'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push '+3ul', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push '+3ul'
    getMember
    push '28y(;('
    getMember
    not
    not
    branchIfTrue label4
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push '+3ul'
    getMember
    push '28y(;('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push r:this, 'type', 2
      setMember
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push '+3ul'
    getMember
    push '28y(;('
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push '{ry;'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, '5i(', 2
      setMember
      push r:this, 'type', 2
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='this', r:2='super')
      push 10, '{[4q-', 2, r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push '[bRwJ'
      callMethod
      pop
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:3
      pop
      push r:3, 'x', r:3, 'x'
      getMember
      push 6
      add
      setMember
      push r:3, '+N5T', -2.6
      setMember
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:3
      pop
      push r:3, 'x', r:3, 'x'
      getMember
      push 6
      subtract
      setMember
      push r:3, '+N5T', -2.6
      setMember
    end // of function 

    setMember
    push r:1, '0G)c'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '0G)c'
      callMethod
      pop
      push 62, '}HCp', 2, r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push '[bRwJ'
      callMethod
      pop
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:3
      pop
      push r:3, '}cj8F(', 6
      setMember
      push 152, 1, r:3, 'gotoAndStop'
      callMethod
      pop
      push r:3, '+N5T', -2
      setMember
    end // of function 

    setMember
    push r:1, '4N)zC', 2
    setMember
    push r:1, '0Pezx', 2.2
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push '+3ul'
    getMember
    push '28y(;('
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label4:
    pop
  end // of initMovieClip 718

  defineMovieClip 719 // total frames: 0
  end // of defineMovieClip 719
  
  exportAssets
    719 as '__Packages.miniwave.sp.hero.Porto'
  end // of exportAssets
  
  initMovieClip 719
    constants '_global', 'miniwave', 'Object', '8y', '+3ul', '5uCS;', 'type', '=w)l', '{ry;', 'prototype', '6}jsa', '4k8;L', '()nBD', '}[4q-', '0(}e', '[w;(', ';*b', '[bRwJ', ',N5T', 'Math', 'cos', '+N5T', 'sin', '0G)c', ';3(b5(', 'gotoAndStop', 'abs', ',eX{I(', '4N)zC', '0Pezx', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push '+3ul'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push '+3ul', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push '+3ul'
    getMember
    push '5uCS;'
    getMember
    not
    not
    branchIfTrue label6
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push '+3ul'
    getMember
    push '5uCS;'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push r:this, 'type', 1
      setMember
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push '+3ul'
    getMember
    push '5uCS;'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push '{ry;'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, 'type', 1
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='this', r:2='super')
      push 10, '}[4q-', 2, r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push '[bRwJ'
      callMethod
      pop
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:3
      pop
      push 80
      random
      push 40
      subtract
      push 100
      divide
      push 1.570796326794897
      subtract
      setRegister r:4
      pop
      push r:3, ',N5T', r:4, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push 3
      multiply
      setMember
      push r:3, '+N5T', r:4, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push 3
      multiply
      setMember
    end // of function 

    setMember
    push r:1, '0G)c'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '0G)c'
      callMethod
      pop
      push 62, ';3(b5(', 2, r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push '[bRwJ'
      callMethod
      pop
      push 12
      setRegister r:8
      pop
      push 0.0
      setRegister r:4
      pop
     label4:
      push r:4, r:8
      lessThan
      not
      branchIfTrue label5
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:3
      pop
      push 151, 1, r:3, 'gotoAndStop'
      callMethod
      pop
      push r:4, r:8, 1
      subtract
      divide
      push 2
      multiply
      push 1
      subtract
      setRegister r:5
      pop
      push 77, r:5
      multiply
      push 157
      subtract
      push 100
      divide
      setRegister r:7
      pop
      push 5, r:5, 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      push 2
      multiply
      subtract
      setRegister r:6
      pop
      push r:3, ',N5T', r:7, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push r:6
      multiply
      setMember
      push r:3, '+N5T', r:7, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push r:6
      multiply
      setMember
      push 0.0, r:3, ',eX{I('
      callMethod
      pop
      push r:4
      increment
      setRegister r:4
      pop
      branch label4
     label5:
    end // of function 

    setMember
    push r:1, '4N)zC', 3
    setMember
    push r:1, '0Pezx', 5
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push '+3ul'
    getMember
    push '5uCS;'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label6:
    pop
  end // of initMovieClip 719

  defineMovieClip 720 // total frames: 0
  end // of defineMovieClip 720
  
  exportAssets
    720 as '__Packages.miniwave.sp.hero.Tequila'
  end // of exportAssets
  
  initMovieClip 720
    constants '_global', 'miniwave', 'Object', '8y', '+3ul', '9wEMp', 'type', '=w)l', '{ry;', 'prototype', '6}jsa', '4k8;L', '0G)c', '1_WGz', '0(}e', '[w;(', ';*b', '[bRwJ', '1jr84(', ';IDPE', 'x', 'y', ']nBjo', ' q)n', 'gotoAndStop', '_xscale', '_yscale', '-B-AZ', '()nBD', '][4q-', 'setVolume', '4N)zC', '0Pezx', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push '+3ul'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push '+3ul', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push '+3ul'
    getMember
    push '9wEMp'
    getMember
    not
    not
    branchIfTrue label4
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push '+3ul'
    getMember
    push '9wEMp'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push r:this, 'type', 0.0
      setMember
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push '+3ul'
    getMember
    push '9wEMp'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push '{ry;'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, 'type', 0.0
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '0G)c'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '0G)c'
      callMethod
      pop
      push 62, '1_WGz', 2, r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push '[bRwJ'
      callMethod
      pop
      push TRUE, UNDEF, '1jr84(', 3, r:this, '0(}e'
      getMember
      push ';IDPE'
      callMethod
      setRegister r:3
      pop
      push r:3, 'x', r:this, 'x'
      getMember
      setMember
      push r:3, 'y', r:this, 'y'
      getMember
      setMember
      push r:3, ']nBjo', FALSE
      setMember
      push 2, 1, r:3, ' q)n'
      getMember
      push 'gotoAndStop'
      callMethod
      pop
      push r:3, '_xscale', 200
      setMember
      push r:3, '_yscale', 200
      setMember
      push 0.0, r:this, '0(}e'
      getMember
      push '-B-AZ'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='this', r:2='super')
      push 10, '][4q-', 2, r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push '[bRwJ'
      callMethod
      pop
      push 50, 10, 2, r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push 'setVolume'
      callMethod
      pop
      push 0.0, r:super, '()nBD'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '4N)zC', 3
    setMember
    push r:1, '0Pezx', 3.2
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push '+3ul'
    getMember
    push '9wEMp'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label4:
    pop
  end // of initMovieClip 720

  defineMovieClip 721 // total frames: 0
  end // of defineMovieClip 721
  
  exportAssets
    721 as '__Packages.miniwave.sp.bads.Pruneau'
  end // of exportAssets
  
  initMovieClip 721
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '+r;HS', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', 'type', ' DVkC', '0w*(((', '4k8;L', '6}jsa', '0(}e', '7=bN', '+3ul', 'x', 'Math', 'abs', ']dc', '*LLoo', 'y', '-SN7F', '2d[', '7J-V', 'gotoAndStop', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '+r;HS'
    getMember
    not
    not
    branchIfTrue label7
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '+r;HS'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '+r;HS'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 240
      setMember
      push r:this, '0Pezx', 50
      setMember
      push r:this, 'type', 15
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push r:this, '0(}e'
      getMember
      push '7=bN'
      getMember
      push 2
      equals
      not
      branchIfTrue label6
      push r:this, '0(}e'
      getMember
      push '+3ul'
      getMember
      setRegister r:3
      pop
      push r:this, 'x'
      getMember
      push r:3, 'x'
      getMember
      subtract
      setRegister r:4
      pop
      push r:4, 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      push r:this, ']dc'
      getMember
      push 2
      add
      lessThan
      dup
      not
      branchIfTrue label4
      pop
      push r:3, '*LLoo'
      getMember
     label4:
      not
      branchIfTrue label5
      push r:3, 'y', r:3, 'y'
      getMember
      push r:this, '-SN7F'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      subtract
      setMember
      push 2, 1, r:this, 'gotoAndStop'
      callMethod
      pop
      branch label6
     label5:
      push 1, 1, r:this, 'gotoAndStop'
      callMethod
      pop
     label6:
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '-SN7F', 1.5
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '+r;HS'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label7:
    pop
  end // of initMovieClip 721

  defineMovieClip 722 // total frames: 0
  end // of defineMovieClip 722
  
  exportAssets
    722 as '__Packages.miniwave.page.Option'
  end // of exportAssets
  
  initMovieClip 722
    constants '_global', 'miniwave', 'Object', ',1(R', '{45}p', '=w)l', '];)H', 'prototype', ')sY,G(', '1W(', '0W(', '9V(', 'width', '(X(', 'height', '+f}KA(', ';W{', '-nI*3', '3L9n1', '[g(', 'name', 'RETOUR', ')A4ho', '4Pzmp', ' c2q', '+GS_=(', '=vto', '2v3VX', '[w;(', '*0GPC', 'saveSlot', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ',1(R'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ',1(R', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push ',1(R'
    getMember
    push '{45}p'
    getMember
    not
    not
    branchIfTrue label5
    push 'miniwave'
    getVariable
    push ',1(R'
    getMember
    push '{45}p'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push ',1(R'
    getMember
    push '{45}p'
    getMember
    push 'miniwave'
    getVariable
    push '];)H'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='super')
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ')sY,G('
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ')sY,G('
      callMethod
      pop
      push 24
      setRegister r:3
      pop
      push '1W(', 0.0, '0W(', 0.0, '9V(', r:this, 'width'
      getMember
      push '(X(', r:this, 'height'
      getMember
      push r:3
      subtract
      push '+f}KA(', 0.0, 5
      initObject
      setRegister r:4
      pop
      push r:this, ';W{', r:4, '-nI*3', 2, r:this, '3L9n1'
      callMethod
      setMember
      push '[g(', 100, '1W(', r:this, 'width'
      getMember
      push 100
      subtract
      push 2
      divide
      push '0W(', r:this, 'height'
      getMember
      push r:3, 6
      subtract
      subtract
      push '+f}KA(', 18, 'name', 'RETOUR', 5
      initObject
      setRegister r:4
      pop
      push r:4, ')A4ho', 2, r:this, '3L9n1'
      callMethod
      setRegister r:7
      pop
    end // of function 

    setMember
    push r:1, '4Pzmp'
    function2 (r:3='[g(') (r:1='this')
      push r:'[g(', 100
      strictEquals
      branchIfTrue label3
      branch label4
     label3:
      push ' c2q', '+GS_=(', 1
      initObject
      push 1, r:this, '=vto'
      getMember
      push '2v3VX'
      callMethod
      pop
      branch label4
     label4:
      push 1, 1, r:this, '=vto'
      getMember
      push '[w;('
      getMember
      push '*0GPC'
      getMember
      push 'saveSlot'
      callMethod
      pop
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push ',1(R'
    getMember
    push '{45}p'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label5:
    pop
  end // of initMovieClip 722

  defineMovieClip 723 // total frames: 0
  end // of defineMovieClip 723
  
  exportAssets
    723 as '__Packages.miniwave.game.Mission'
  end // of exportAssets
  
  initMovieClip 723
    constants '_global', 'miniwave', 'Object', '0(}e', '0 LqG', ';IwU', '[MISSION] init() 2.0\n', '6i)C', 'prototype', '6U1)*', ',}AlE', '+4FUS', 'gotoAndStop', '_y', '[w;(', '9l;(', ' Qjk]', 'Mission "', 'name', '" réussie!!', '7XfTN', '=Y(', '$cons', '$bonus', 'Votre prime : ', '6ehxE', ' crédits\n', '{Pp6K(', '{4E0}', ']dGK,(', ' nt*K', 'length', 'endGame', '$mis', '*0GPC', 'giveItem', '3I2[((', '3ao2D', 'Math', 'max', ']NLZd', '2,=(', '6}jsa', '2M-sY', '2B{Tq', '$mission', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '0(}e'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '0(}e', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '0(}e'
    getMember
    push '0 LqG'
    getMember
    not
    not
    branchIfTrue label10
    push 'miniwave'
    getVariable
    push '0(}e'
    getMember
    push '0 LqG'
    function2 () (r:1='super', r:2='_root')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push r:_root, ';IwU', r:_root, ';IwU'
      getMember
      push '[MISSION] init() 2.0\n'
      add
      setMember
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '0(}e'
    getMember
    push '0 LqG'
    getMember
    push 'miniwave'
    getVariable
    push '0(}e'
    getMember
    push '6i)C'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '6U1)*'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6U1)*'
      callMethod
      pop
      push 10, r:this, ',}AlE'
      getMember
      add
      push 1, r:this, '+4FUS'
      getMember
      push 'gotoAndStop'
      callMethod
      pop
      push r:this, '+4FUS'
      getMember
      push '_y', r:this, '[w;('
      getMember
      push '9l;('
      getMember
      setMember
    end // of function 

    setMember
    push r:1, ' Qjk]'
    function2 () (r:1='this')
      push 'Mission "', r:this, 'name'
      getMember
      add
      push '" réussie!!'
      add
      setRegister r:2
      pop
      push 0.0, r:this, '7XfTN'
      callMethod
      push 100
      equals
      dup
      not
      branchIfTrue label3
      pop
      push r:this, '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$cons'
      getMember
      push '$bonus'
      getMember
      push r:this, ',}AlE'
      getMember
      getMember
      push 100
      lessThan
     label3:
      not
      branchIfTrue label4
      push r:2, 'Votre prime : ', r:this, '6ehxE'
      getMember
      add
      push ' crédits\n'
      add
      add
      setRegister r:2
      pop
      push r:this, '6ehxE'
      getMember
      push 1, r:this, '{Pp6K('
      callMethod
      pop
     label4:
      push r:2
      return
    end // of function 

    setMember
    push r:1, '{4E0}'
    function2 () (r:1='this')
      push r:this, ']dGK,(', 8, 5, 5, 5, 0.0, 0.0, 0.0, 1, 5, 20, 40, 11
      initArray
      setMember
      push r:this, ' nt*K', 0.0
      setMember
      push 0.0
      setRegister r:2
      pop
     label5:
      push r:2, r:this, ']dGK,('
      getMember
      push 'length'
      getMember
      lessThan
      not
      branchIfTrue label6
      push r:this, ' nt*K', r:this, ' nt*K'
      getMember
      push r:this, ']dGK,('
      getMember
      push r:2
      getMember
      add
      setMember
      push r:2
      increment
      setRegister r:2
      pop
      branch label5
     label6:
    end // of function 

    setMember
    push r:1, 'endGame'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:this, '7XfTN'
      callMethod
      setRegister r:3
      pop
      push r:3, r:this, '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$cons'
      getMember
      push '$bonus'
      getMember
      push r:this, ',}AlE'
      getMember
      getMember
      greaterThan
      not
      branchIfTrue label8
      push r:this, '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$cons'
      getMember
      push '$bonus'
      getMember
      push r:this, ',}AlE'
      getMember
      push r:3
      setMember
      push r:3, 100
      equals
      not
      branchIfTrue label7
      push '$mis', r:this, ',}AlE'
      getMember
      add
      push 1, r:this, '[w;('
      getMember
      push '*0GPC'
      getMember
      push 'giveItem'
      callMethod
      pop
      push r:this, '[w;('
      getMember
      push '3I2[((', r:this, '[w;('
      getMember
      push '3I2[(('
      getMember
      increment
      setMember
     label7:
      push r:this, '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$bonus'
      getMember
      push r:this, ',}AlE'
      getMember
      push r:this, '3ao2D'
      getMember
      push r:this, '[w;('
      getMember
      push '=Y('
      getMember
      push 0.0
      getMember
      push '$bonus'
      getMember
      push r:this, ',}AlE'
      getMember
      getMember
      push 2, 'Math'
      getVariable
      push 'max'
      callMethod
      setMember
     label8:
      push 0.0, r:super, 'endGame'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ']NLZd'
    function2 () (r:1='this')
      push '2,=(', r:this, ',}AlE'
      getMember
      add
      return
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:this, '2M-sY'
      callMethod
      not
      branchIfTrue label9
      push UNDEF
      return
     label9:
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '2B{Tq'
    function2 () (r:1='super')
      push '$mission', 1, r:super, '2B{Tq'
      callMethod
      pop
    end // of function 

    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '0(}e'
    getMember
    push '0 LqG'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label10:
    pop
  end // of initMovieClip 723

  defineMovieClip 724 // total frames: 0
  end // of defineMovieClip 724
  
  exportAssets
    724 as '__Packages.miniwave.sp.bads.Corinthe'
  end // of exportAssets
  
  initMovieClip 724
    constants '_global', 'miniwave', 'Object', '8y', ';_}b', '2nm1B', '=w)l', ']q}_', 'prototype', ']qbf', '0Pezx', 'type', ' DVkC', '0w*(((', '4k8;L', '()nBD', 'x', ',N5T', '+N5T', ';[G=L', '}cj8F(', '{2{X2(', '4N)zC', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    not
    not
    branchIfTrue label3
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b', 0.0, 'Object'
    new
    setMember
   label3:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '2nm1B'
    getMember
    not
    not
    branchIfTrue label6
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '2nm1B'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '2nm1B'
    getMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ']q}_'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push r:this, ']qbf', 200
      setMember
      push r:this, '0Pezx', 1
      setMember
      push r:this, 'type', 34
      setMember
      push 0.0, r:super, '=w)l'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' DVkC'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, ' DVkC'
      callMethod
      pop
      push r:this
      pop
      push 0.0, r:this, '0w*((('
      callMethod
      pop
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '()nBD'
    function2 () (r:1='this', r:2='super')
      push 0.0
      setRegister r:4
      pop
     label4:
      push r:4, 2
      lessThan
      not
      branchIfTrue label5
      push 0.0, r:super, '()nBD'
      callMethod
      setRegister r:3
      pop
      push r:3, 'x', r:this, 'x'
      getMember
      push r:4, 2
      multiply
      push 1
      subtract
      push 6
      multiply
      add
      setMember
      push r:3, ',N5T', 0.0
      setMember
      push r:3, '+N5T', r:this, ';[G=L'
      getMember
      setMember
      push r:3, '}cj8F(', 14
      setMember
      push r:3, '{2{X2('
      getMember
      push '4N)zC', r:this, ';[G=L'
      getMember
      setMember
      push r:4
      increment
      setRegister r:4
      pop
      branch label4
     label5:
    end // of function 

    setMember
    push r:1, ';[G=L', 6
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '2nm1B'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label6:
    pop
  end // of initMovieClip 724

  defineMovieClip 725 // total frames: 0
  end // of defineMovieClip 725
  
  exportAssets
    725 as '__Packages.miniwave.sp.Opt'
  end // of exportAssets
  
  initMovieClip 725
    constants '_global', 'miniwave', 'Object', '8y', ',pU', '=w)l', '5u;}4', 'prototype', 'type', 'gotoAndStop', '+N7(', '4bkBF', '+]', '}bMO(', 'center', '=kRzO', 'duplicateMovieClip', '_rotation', 'gotoAndPlay', '+,z', '[g(', '6}jsa', 'y', '4N)zC', '2d[', '7J-V', '0(}e', '+3ul', '_visible', ';qbSN', ']dc', ' WswX', '1T3j', '[w;(', '9l;(', '1U_vK', '4k8;L', '4C(CL', ';*b', '[bRwJ', '{Pp6K(', '5rGlk', 'x', ',N5T', 'Math', 'cos', '+N5T', 'sin', '1K5V', ' HkK}', '}cj8F(', '9]7O', '[pJN8(', '92*e}', '(l;(', ';*U}+', '-XVH6', '*p,2T', 'ASSetPropFlags'  
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    not
    not
    branchIfTrue label1
    push '_global'
    getVariable
    push 'miniwave', 0.0, 'Object'
    new
    setMember
   label1:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    not
    not
    branchIfTrue label2
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y', 0.0, 'Object'
    new
    setMember
   label2:
    pop
    push '_global'
    getVariable
    push 'miniwave'
    getMember
    push '8y'
    getMember
    push ',pU'
    getMember
    not
    not
    branchIfTrue label26
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ',pU'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, UNDEF
      callMethod
      pop
      push 0.0, r:this, '=w)l'
      callMethod
      pop
    end // of function 

    setRegister r:0
    setMember
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ',pU'
    getMember
    push 'miniwave'
    getVariable
    push '5u;}4'
    getMember
    extends
    push r:0, 'prototype'
    getMember
    setRegister r:1
    pop
    push r:1, '=w)l'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '=w)l'
      callMethod
      pop
      push r:this, 'type'
      getMember
      setRegister r:0
      push 0.0
      strictEquals
      branchIfTrue label3
      push r:0, 1
      strictEquals
      branchIfTrue label3
      push r:0, 2
      strictEquals
      branchIfTrue label3
      push r:0, 3
      strictEquals
      branchIfTrue label3
      push r:0, 4
      strictEquals
      branchIfTrue label4
      push r:0, 5
      strictEquals
      branchIfTrue label4
      push r:0, 6
      strictEquals
      branchIfTrue label4
      push r:0, 7
      strictEquals
      branchIfTrue label7
      push r:0, 8
      strictEquals
      branchIfTrue label7
      push r:0, 9
      strictEquals
      branchIfTrue label7
      push r:0, 10
      strictEquals
      branchIfTrue label8
      branch label9
     label3:
      push 1, 1, r:this, 'gotoAndStop'
      callMethod
      pop
      push 10877086, 16774538, 16777215, 15913386, 4
      initArray
      setRegister r:5
      pop
      push r:5, r:this, 'type'
      getMember
      getMember
      push r:this, '+N7('
      getMember
      push '4bkBF'
      getMember
      push 2, 'miniwave'
      getVariable
      push '+]'
      getMember
      push '}bMO('
      callMethod
      pop
      branch label10
     label4:
      push 2, 1, r:this, 'gotoAndStop'
      callMethod
      pop
      push r:this, 'type'
      getMember
      push 3
      subtract
      push 1, r:this, '+N7('
      getMember
      push 'center'
      getMember
      push 'gotoAndStop'
      callMethod
      pop
      push 0.0
      setRegister r:3
      pop
     label5:
      push r:3, 4
      lessThan
      not
      branchIfTrue label6
      push 10, r:3
      add
      push '=kRzO', r:3
      add
      push 2, r:this, '+N7('
      getMember
      push '=kRzO'
      getMember
      push 'duplicateMovieClip'
      callMethod
      pop
      push r:this, '+N7('
      getMember
      push '=kRzO', r:3
      add
      getMember
      setRegister r:4
      pop
      push r:4, '_rotation', 360
      random
      setMember
      push 40
      random
      push 1
      add
      push 1, r:4, 'gotoAndPlay'
      callMethod
      pop
      push r:3
      increment
      setRegister r:3
      pop
      branch label5
     label6:
      branch label10
     label7:
      push 3, 1, r:this, 'gotoAndStop'
      callMethod
      pop
      push 255, 65280, 16711680, 3
      initArray
      setRegister r:5
      pop
      push r:5, r:this, 'type'
      getMember
      push 7
      subtract
      getMember
      push r:this, '+N7('
      getMember
      push '+,z'
      getMember
      push 2, 'miniwave'
      getVariable
      push '+]'
      getMember
      push '}bMO('
      callMethod
      pop
      branch label10
     label8:
      push 4, 1, r:this, 'gotoAndStop'
      callMethod
      pop
      push r:this, '+N7('
      getMember
      push '[g(', 5
      random
      setMember
      push r:this, '+N7('
      getMember
      push '[g('
      getMember
      push 1
      add
      push 1, r:this, '+N7('
      getMember
      push 'gotoAndStop'
      callMethod
      pop
     label9:
      push r:this, 'type'
      getMember
      push 1, r:this, 'gotoAndStop'
      callMethod
      pop
     label10:
    end // of function 

    setMember
    push r:1, '6}jsa'
    function2 () (r:1='this', r:2='super')
      push 0.0, r:super, '6}jsa'
      callMethod
      pop
      push r:this, 'y', r:this, 'y'
      getMember
      push r:this, '4N)zC'
      getMember
      push '2d['
      getVariable
      push '7J-V'
      getMember
      multiply
      add
      setMember
      push r:this, '0(}e'
      getMember
      push '+3ul'
      getMember
      setRegister r:3
      pop
      push r:3, '_visible'
      getMember
      not
      branchIfTrue label11
      push r:this, '0(}e'
      getMember
      push '+3ul'
      getMember
      push 1, r:this, ';qbSN'
      callMethod
      setRegister r:4
      pop
      push r:4, r:3, ']dc'
      getMember
      push r:this, ']dc'
      getMember
      add
      lessThan
      not
      branchIfTrue label11
      push 0.0, r:this, ' WswX'
      callMethod
      pop
      push 0.0, r:this, '1T3j'
      callMethod
      pop
     label11:
      push r:this, 'y'
      getMember
      push r:this, ']dc'
      getMember
      subtract
      push r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '9l;('
      getMember
      greaterThan
      not
      branchIfTrue label12
      push 0.0, r:this, '1T3j'
      callMethod
      pop
     label12:
      push r:this, '1U_vK'
      getMember
      push UNDEF
      equals
      not
      not
      branchIfTrue label13
      push r:this, '_rotation', r:this, '_rotation'
      getMember
      push r:this, '1U_vK'
      getMember
      add
      setMember
     label13:
      push 0.0, r:this, '4k8;L'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, ' WswX'
    function2 () (r:1='this')
      push 14, '4C(CL', 2, r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push ';*b'
      getMember
      push '[bRwJ'
      callMethod
      pop
      push r:this, 'type'
      getMember
      setRegister r:0
      push 0.0
      strictEquals
      branchIfTrue label14
      push r:0, 1
      strictEquals
      branchIfTrue label15
      push r:0, 2
      strictEquals
      branchIfTrue label16
      push r:0, 3
      strictEquals
      branchIfTrue label17
      push r:0, 4
      strictEquals
      branchIfTrue label18
      push r:0, 5
      strictEquals
      branchIfTrue label18
      push r:0, 6
      strictEquals
      branchIfTrue label18
      push r:0, 7
      strictEquals
      branchIfTrue label19
      push r:0, 8
      strictEquals
      branchIfTrue label22
      push r:0, 9
      strictEquals
      branchIfTrue label23
      push r:0, 10
      strictEquals
      branchIfTrue label24
      branch label25
     label14:
      push 1, 1, r:this, '0(}e'
      getMember
      push '{Pp6K('
      callMethod
      pop
      branch label25
     label15:
      push 5, 1, r:this, '0(}e'
      getMember
      push '{Pp6K('
      callMethod
      pop
      branch label25
     label16:
      push 10, 1, r:this, '0(}e'
      getMember
      push '{Pp6K('
      callMethod
      pop
      branch label25
     label17:
      push 50, 1, r:this, '0(}e'
      getMember
      push '{Pp6K('
      callMethod
      pop
      branch label25
     label18:
      push 20, 10, 5, 3
      initArray
      setRegister r:7
      pop
      push r:7, r:this, 'type'
      getMember
      push 4
      subtract
      getMember
      push 1, r:this, '0(}e'
      getMember
      push '5rGlk'
      callMethod
      pop
      branch label25
     label19:
      push 32
      setRegister r:4
      pop
      push 0.0
      setRegister r:2
      pop
     label20:
      push r:2, r:4
      lessThan
      not
      branchIfTrue label21
      push 6.28, r:2
      multiply
      push r:4
      divide
      setRegister r:3
      pop
      push 'x', r:this, 'x'
      getMember
      push 'y', r:this, 'y'
      getMember
      push ',N5T', r:3, 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push 5
      multiply
      push '+N5T', r:3, 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push 5
      multiply
      push '1U_vK', 10, '1K5V', 60, 60
      random
      add
      push 6
      initObject
      setRegister r:6
      pop
      push r:6, 1, r:this, '0(}e'
      getMember
      push ' HkK}'
      callMethod
      setRegister r:5
      pop
      push 163, 1, r:5, 'gotoAndStop'
      callMethod
      pop
      push r:5, '}cj8F(', 24
      setMember
      push 10
      random
      push 1
      add
      push 1, r:5, '9]7O'
      getMember
      push 'gotoAndPlay'
      callMethod
      pop
      push r:2
      increment
      setRegister r:2
      pop
      branch label20
     label21:
      branch label25
     label22:
      push 'x', r:this, 'x'
      getMember
      push 'y', r:this, 'y'
      getMember
      push ',N5T', 0.0, '+N5T', 0.0, '1U_vK', 10, '[pJN8(', 200, '92*e}', TRUE, '1K5V', 200, 200
      random
      add
      push 8
      initObject
      setRegister r:6
      pop
      push r:6, 1, r:this, '0(}e'
      getMember
      push ' HkK}'
      callMethod
      setRegister r:5
      pop
      push 164, 1, r:5, 'gotoAndStop'
      callMethod
      pop
      push r:5, '}cj8F(', 8
      setMember
      branch label25
     label23:
      push 'x', r:this, '0(}e'
      getMember
      push '[w;('
      getMember
      push '(l;('
      getMember
      push 2
      divide
      push 'y', r:this, 'y'
      getMember
      push ',N5T', 0.0, '+N5T', -10, '92*e}', TRUE, 5
      initObject
      setRegister r:6
      pop
      push r:6, 1, r:this, '0(}e'
      getMember
      push ' HkK}'
      callMethod
      setRegister r:5
      pop
      push 165, 1, r:5, 'gotoAndStop'
      callMethod
      pop
      push r:5, '}cj8F(', 25
      setMember
      branch label25
     label24:
      push r:this, '+N7('
      getMember
      push '[g('
      getMember
      push 1
      add
      push 1, r:this, '0(}e'
      getMember
      push ';*U}+'
      callMethod
      pop
      branch label25
     label25:
    end // of function 

    setMember
    push r:1, '1T3j'
    function2 () (r:1='this', r:2='super')
      push r:this, '0(}e'
      getMember
      push '-XVH6'
      getMember
      push r:this, 2, r:this, '0(}e'
      getMember
      push '*p,2T'
      callMethod
      pop
      push 0.0, r:super, '1T3j'
      callMethod
      pop
    end // of function 

    setMember
    push r:1, '4N)zC', 2
    setMember
    push r:1, ']dc', 10
    setMember
    push 1, NULL, 'miniwave'
    getVariable
    push '8y'
    getMember
    push ',pU'
    getMember
    push 'prototype'
    getMember
    push 3, 'ASSetPropFlags'
    callFunction
   label26:
    pop
  end // of initMovieClip 725
  
  exportAssets
    726 as '9i(N'
  end // of exportAssets
  
  exportAssets
    727 as '}F_AB'
  end // of exportAssets
  
  exportAssets
    728 as '7G_AB'
  end // of exportAssets
  
  exportAssets
    729 as '6G_AB'
  end // of exportAssets
  
  exportAssets
    730 as '5G_AB'
  end // of exportAssets
  
  exportAssets
    731 as '5rbQP'
  end // of exportAssets
  
  exportAssets
    732 as '}bIdG('
  end // of exportAssets
  
  exportAssets
    733 as '786WA('
  end // of exportAssets
  
  exportAssets
    734 as ']EroC'
  end // of exportAssets
  
  exportAssets
    735 as '[EroC'
  end // of exportAssets
  
  exportAssets
    736 as '}EroC'
  end // of exportAssets
  
  exportAssets
    737 as ';;,cC'
  end // of exportAssets
  
  exportAssets
    738 as ',V3iC'
  end // of exportAssets
  
  exportAssets
    739 as '}HCp'
  end // of exportAssets
  
  exportAssets
    740 as '0sSXP'
  end // of exportAssets
  
  exportAssets
    741 as '4C(CL'
  end // of exportAssets
  
  exportAssets
    742 as '3ZaHs'
  end // of exportAssets
  
  exportAssets
    743 as '3x_R9('
  end // of exportAssets
  
  exportAssets
    744 as '3UD50'
  end // of exportAssets
  
  exportAssets
    745 as '1OeZs'
  end // of exportAssets
  
  exportAssets
    746 as '*]4q-'
  end // of exportAssets
  
  exportAssets
    747 as ')]4q-'
  end // of exportAssets
  
  exportAssets
    748 as '(]4q-'
  end // of exportAssets
  
  exportAssets
    749 as ' ]4q-'
  end // of exportAssets
  
  exportAssets
    750 as '}[4q-'
  end // of exportAssets
  
  exportAssets
    751 as '{[4q-'
  end // of exportAssets
  
  exportAssets
    752 as '][4q-'
  end // of exportAssets
  
  exportAssets
    753 as '[[4q-'
  end // of exportAssets
  
  exportAssets
    754 as '7[swn'
  end // of exportAssets
  
  exportAssets
    755 as ';3(b5('
  end // of exportAssets
  
  exportAssets
    756 as '-_WGz'
  end // of exportAssets
  
  exportAssets
    757 as '1_WGz'
  end // of exportAssets
  
  exportAssets
    758 as '9b* S'
  end // of exportAssets
  
  exportAssets
    759 as '-UU8M'
  end // of exportAssets

  defineMovieClip 760 // total frames: 1
  end // of defineMovieClip 760
  
  exportAssets
    760 as '-l2gn'
  end // of exportAssets

  defineMovieClip 761 // total frames: 1
  end // of defineMovieClip 761
  
  exportAssets
    761 as 'miniWave2GameLetter'
  end // of exportAssets

  defineMovieClip 762 // total frames: 1
  end // of defineMovieClip 762
  
  exportAssets
    762 as 'miniWave2GameMain'
  end // of exportAssets

  defineMovieClip 763 // total frames: 1
  end // of defineMovieClip 763
  
  exportAssets
    763 as ',6T4i'
  end // of exportAssets

  defineMovieClip 764 // total frames: 1
  end // of defineMovieClip 764
  
  exportAssets
    764 as '4Dcgs'
  end // of exportAssets

  defineMovieClip 765 // total frames: 1
  end // of defineMovieClip 765
  
  exportAssets
    765 as ')A4ho'
  end // of exportAssets

  defineMovieClip 767 // total frames: 1
  end // of defineMovieClip 767
  
  exportAssets
    767 as '--4)]'
  end // of exportAssets

  defineMovieClip 768 // total frames: 1
  end // of defineMovieClip 768
  
  exportAssets
    768 as '1a,go'
  end // of exportAssets

  defineMovieClip 769 // total frames: 1
  end // of defineMovieClip 769
  
  exportAssets
    769 as ']DVXd'
  end // of exportAssets

  defineMovieClip 770 // total frames: 1
  end // of defineMovieClip 770
  
  exportAssets
    770 as '+GS_=('
  end // of exportAssets

  defineMovieClip 771 // total frames: 1
  end // of defineMovieClip 771
  
  exportAssets
    771 as '-Ter*'
  end // of exportAssets

  defineMovieClip 772 // total frames: 1
  end // of defineMovieClip 772
  
  exportAssets
    772 as '-IB,V'
  end // of exportAssets

  defineMovieClip 773 // total frames: 1
  end // of defineMovieClip 773
  
  exportAssets
    773 as '-;W2 ('
  end // of exportAssets

  defineMovieClip 774 // total frames: 1
  end // of defineMovieClip 774
  
  exportAssets
    774 as '7NIW=('
  end // of exportAssets

  defineMovieClip 777 // total frames: 1
  end // of defineMovieClip 777
  
  exportAssets
    777 as ';Eu}5'
  end // of exportAssets

  defineMovieClip 778 // total frames: 1
  end // of defineMovieClip 778
  
  exportAssets
    778 as '3h;N6('
  end // of exportAssets

  defineMovieClip 780 // total frames: 1
  end // of defineMovieClip 780

  defineMovieClip 782 // total frames: 1
  end // of defineMovieClip 782

  defineMovieClip 783 // total frames: 15

    frame 8
      stop
    end // of frame 8

    frame 14
      push ''
      removeClip
    end // of frame 14
  end // of defineMovieClip 783
  
  exportAssets
    783 as '(4+px'
  end // of exportAssets

  defineMovieClip 784 // total frames: 1
  end // of defineMovieClip 784
  
  exportAssets
    784 as '}+ZR;'
  end // of exportAssets

  defineMovieClip 785 // total frames: 1
  end // of defineMovieClip 785
  
  exportAssets
    785 as ' mMv2('
  end // of exportAssets

  defineMovieClip 804 // total frames: 22

    frame 21
      push 0.0, 'this'
      getVariable
      push '1T3j'
      callMethod
      pop
    end // of frame 21
  end // of defineMovieClip 804
  
  exportAssets
    804 as '[)f;z'
  end // of exportAssets

  defineMovieClip 807 // total frames: 1
  end // of defineMovieClip 807

  defineMovieClip 824 // total frames: 22

    frame 21
      stop
    end // of frame 21
  end // of defineMovieClip 824

  defineMovieClip 837 // total frames: 13
  end // of defineMovieClip 837

  defineMovieClip 838 // total frames: 13
  end // of defineMovieClip 838
  
  exportAssets
    838 as '+olm4('
  end // of exportAssets

  defineMovieClip 839 // total frames: 1
  end // of defineMovieClip 839
  
  exportAssets
    839 as 'miniWave2GameSurvival'
  end // of exportAssets

  defineMovieClip 840 // total frames: 1
  end // of defineMovieClip 840
  
  exportAssets
    840 as '2S7tk'
  end // of exportAssets

  defineMovieClip 841 // total frames: 1
  end // of defineMovieClip 841
  
  exportAssets
    841 as '1vrgI'
  end // of exportAssets

  defineMovieClip 842 // total frames: 1
  end // of defineMovieClip 842
  
  exportAssets
    842 as 'miniWave2GameMission'
  end // of exportAssets

  defineMovieClip 843 // total frames: 1
  end // of defineMovieClip 843
  
  exportAssets
    843 as '-l2gn'
  end // of exportAssets

  defineMovieClip 844 // total frames: 1
  end // of defineMovieClip 844
  
  exportAssets
    844 as '6DM]P'
  end // of exportAssets
  
  exportAssets
    846 as ';F1j,('
  end // of exportAssets

  defineMovieClip 851 // total frames: 22
  end // of defineMovieClip 851

  defineMovieClip 852 // total frames: 1
  end // of defineMovieClip 852
  
  exportAssets
    852 as '-zJvB('
  end // of exportAssets

  defineMovieClip 855 // total frames: 1
  end // of defineMovieClip 855
  
  exportAssets
    855 as '+;hw4'
  end // of exportAssets

  defineMovieClip 858 // total frames: 1
  end // of defineMovieClip 858
  
  exportAssets
    858 as '4cB2;'
  end // of exportAssets

  defineMovieClip 874 // total frames: 16

    frame 15
      push 0.0, 'this'
      getVariable
      push '1T3j'
      callMethod
      pop
    end // of frame 15
  end // of defineMovieClip 874
  
  exportAssets
    874 as ']F)y0('
  end // of exportAssets

  defineMovieClip 889 // total frames: 16
  end // of defineMovieClip 889
  
  exportAssets
    889 as ')qGaQ'
  end // of exportAssets

  defineMovieClip 891 // total frames: 1
  end // of defineMovieClip 891
  
  exportAssets
    891 as '(mlUw'
  end // of exportAssets

  defineMovieClip 894 // total frames: 1
  end // of defineMovieClip 894

  defineMovieClip 897 // total frames: 1
  end // of defineMovieClip 897

  defineMovieClip 901 // total frames: 1
  end // of defineMovieClip 901

  defineMovieClip 903 // total frames: 59

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 903

  defineMovieClip 908 // total frames: 1
  end // of defineMovieClip 908

  defineMovieClip 909 // total frames: 41
  end // of defineMovieClip 909

  defineMovieClip 914 // total frames: 3
  end // of defineMovieClip 914

  defineMovieClip 918 // total frames: 3

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 918

  defineMovieClip 919 // total frames: 1
  end // of defineMovieClip 919

  defineMovieClip 923 // total frames: 3
  end // of defineMovieClip 923

  defineMovieClip 927 // total frames: 1
  end // of defineMovieClip 927

  defineMovieClip 929 // total frames: 1
  end // of defineMovieClip 929

  defineMovieClip 930 // total frames: 2
  end // of defineMovieClip 930
  
  exportAssets
    930 as ')nl,T'
  end // of exportAssets

  defineMovieClip 938 // total frames: 1
  end // of defineMovieClip 938

  defineMovieClip 953 // total frames: 1
  end // of defineMovieClip 953

  defineMovieClip 958 // total frames: 1
  end // of defineMovieClip 958

  defineMovieClip 963 // total frames: 3

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 963

  defineMovieClip 965 // total frames: 1
  end // of defineMovieClip 965

  defineMovieClip 967 // total frames: 1
  end // of defineMovieClip 967

  defineMovieClip 969 // total frames: 1
  end // of defineMovieClip 969

  defineMovieClip 971 // total frames: 1
  end // of defineMovieClip 971

  defineMovieClip 973 // total frames: 1
  end // of defineMovieClip 973

  defineMovieClip 975 // total frames: 1
  end // of defineMovieClip 975

  defineMovieClip 977 // total frames: 1
  end // of defineMovieClip 977

  defineMovieClip 979 // total frames: 1
  end // of defineMovieClip 979

  defineMovieClip 981 // total frames: 1
  end // of defineMovieClip 981

  defineMovieClip 983 // total frames: 1
  end // of defineMovieClip 983

  defineMovieClip 985 // total frames: 1
  end // of defineMovieClip 985

  defineMovieClip 988 // total frames: 1
  end // of defineMovieClip 988

  defineMovieClip 990 // total frames: 1
  end // of defineMovieClip 990

  defineMovieClip 992 // total frames: 1
  end // of defineMovieClip 992

  defineMovieClip 994 // total frames: 1
  end // of defineMovieClip 994

  defineMovieClip 995 // total frames: 46
  end // of defineMovieClip 995

  defineMovieClip 996 // total frames: 1
  end // of defineMovieClip 996

  defineMovieClip 997 // total frames: 1
  end // of defineMovieClip 997
  
  exportAssets
    997 as '4h,c='
  end // of exportAssets

  defineMovieClip 1000 // total frames: 1
  end // of defineMovieClip 1000

  defineMovieClip 1001 // total frames: 1
  end // of defineMovieClip 1001
  
  exportAssets
    1001 as '[9={n'
  end // of exportAssets

  defineMovieClip 1003 // total frames: 1
  end // of defineMovieClip 1003
  
  exportAssets
    846 as ';F1j,('
  end // of exportAssets

  defineMovieClip 1005 // total frames: 1
  end // of defineMovieClip 1005
  
  exportAssets
    1005 as '2]MeT'
  end // of exportAssets

  defineMovieClip 1007 // total frames: 1
  end // of defineMovieClip 1007

  defineMovieClip 1008 // total frames: 1
  end // of defineMovieClip 1008
  
  exportAssets
    1008 as '-nI*3'
  end // of exportAssets

  defineMovieClip 1011 // total frames: 1
  end // of defineMovieClip 1011

  defineMovieClip 1014 // total frames: 1
  end // of defineMovieClip 1014

  defineMovieClip 1015 // total frames: 1
  end // of defineMovieClip 1015
  
  exportAssets
    1015 as '*QQ-O'
  end // of exportAssets

  defineMovieClip 1017 // total frames: 1
  end // of defineMovieClip 1017
  
  exportAssets
    1017 as '0cPfH'
  end // of exportAssets

  defineMovieClip 1020 // total frames: 1
  end // of defineMovieClip 1020

  defineMovieClip 1022 // total frames: 1
  end // of defineMovieClip 1022
  
  exportAssets
    1022 as '(fND)('
  end // of exportAssets

  defineMovieClip 1025 // total frames: 1
  end // of defineMovieClip 1025

  defineMovieClip 1026 // total frames: 1
  end // of defineMovieClip 1026
  
  exportAssets
    1026 as 'miniWave2Menu'
  end // of exportAssets

  defineMovieClip 1029 // total frames: 10
  end // of defineMovieClip 1029

  defineMovieClip 1030 // total frames: 1
  end // of defineMovieClip 1030
  
  exportAssets
    1030 as '80{fB'
  end // of exportAssets

  defineMovieClip 1033 // total frames: 1
  end // of defineMovieClip 1033
  
  exportAssets
    1033 as ';j,t+('
  end // of exportAssets

  defineMovieClip 1053 // total frames: 20

    frame 19
      push 0.0, 'this'
      getVariable
      push '1T3j'
      callMethod
      pop
    end // of frame 19
  end // of defineMovieClip 1053
  
  exportAssets
    1053 as '9uOr0'
  end // of exportAssets

  defineMovieClip 1057 // total frames: 1
  end // of defineMovieClip 1057

  defineMovieClip 1059 // total frames: 3
  end // of defineMovieClip 1059
  
  exportAssets
    1059 as ',mVfl'
  end // of exportAssets

  defineMovieClip 1061 // total frames: 1
  end // of defineMovieClip 1061

  defineMovieClip 1062 // total frames: 21

    frame 6
      stop
    end // of frame 6

    frame 20
      push 0.0, 'this'
      getVariable
      push '1T3j'
      callMethod
      pop
    end // of frame 20
  end // of defineMovieClip 1062
  
  exportAssets
    1062 as ' eDR3'
  end // of exportAssets

  defineMovieClip 1065 // total frames: 15

    frame 14
      push 0.0, 'this'
      getVariable
      push '1T3j'
      callMethod
      pop
    end // of frame 14
  end // of defineMovieClip 1065
  
  exportAssets
    1065 as '=jRD5('
  end // of exportAssets

  defineMovieClip 1078 // total frames: 4
  end // of defineMovieClip 1078
  
  exportAssets
    1078 as '+V;6J('
  end // of exportAssets

  defineMovieClip 1082 // total frames: 2

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 1082

  defineMovieClip 1083 // total frames: 1
  end // of defineMovieClip 1083
  
  exportAssets
    1083 as '8 +xs'
  end // of exportAssets

  defineMovieClip 1108 // total frames: 35
  end // of defineMovieClip 1108

  defineMovieClip 1109 // total frames: 1
  end // of defineMovieClip 1109
  
  exportAssets
    1109 as '6XA2Z'
  end // of exportAssets

  defineMovieClip 1117 // total frames: 7
  end // of defineMovieClip 1117
  
  exportAssets
    1117 as ')i=;X'
  end // of exportAssets

  defineMovieClip 1119 // total frames: 1
  end // of defineMovieClip 1119

  defineMovieClip 1120 // total frames: 13

    frame 12
      push 0.0, 'this'
      getVariable
      push '1T3j'
      callMethod
      pop
    end // of frame 12
  end // of defineMovieClip 1120
  
  exportAssets
    1120 as '(( Uy'
  end // of exportAssets

  defineMovieClip 1123 // total frames: 1
  end // of defineMovieClip 1123

  defineMovieClip 1125 // total frames: 1
  end // of defineMovieClip 1125

  defineMovieClip 1126 // total frames: 2

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 1126
  
  exportAssets
    1126 as '+(-k0'
  end // of exportAssets

  defineMovieClip 1128 // total frames: 1
  end // of defineMovieClip 1128

  defineMovieClip 1133 // total frames: 4
  end // of defineMovieClip 1133

  defineMovieClip 1134 // total frames: 1
  end // of defineMovieClip 1134

  defineMovieClip 1135 // total frames: 1
  end // of defineMovieClip 1135
  
  exportAssets
    1135 as '[E[XH'
  end // of exportAssets

  defineMovieClip 1137 // total frames: 1
  end // of defineMovieClip 1137

  defineMovieClip 1138 // total frames: 8

    frame 7
      push 0.0, 'this'
      getVariable
      push '1T3j'
      callMethod
      pop
    end // of frame 7
  end // of defineMovieClip 1138
  
  exportAssets
    1138 as '0AVi3'
  end // of exportAssets

  defineMovieClip 1139 // total frames: 1
  end // of defineMovieClip 1139

  defineMovieClip 1140 // total frames: 27

    frame 26
      push 0.0, 'this'
      getVariable
      push '1T3j'
      callMethod
      pop
    end // of frame 26
  end // of defineMovieClip 1140
  
  exportAssets
    1140 as '72{sF'
  end // of exportAssets

  defineMovieClip 1143 // total frames: 2
  end // of defineMovieClip 1143

  defineMovieClip 1144 // total frames: 14

    frame 13
      push 0.0, 'this'
      getVariable
      push '1T3j'
      callMethod
      pop
    end // of frame 13
  end // of defineMovieClip 1144
  
  exportAssets
    1144 as '1jr84('
  end // of exportAssets

  defineMovieClip 1147 // total frames: 9

    frame 8
      push 0.0, 'this'
      getVariable
      push '1T3j'
      callMethod
      pop
    end // of frame 8
  end // of defineMovieClip 1147
  
  exportAssets
    1147 as ',,toG('
  end // of exportAssets

  defineMovieClip 1149 // total frames: 1
  end // of defineMovieClip 1149
  
  exportAssets
    1149 as ']AB=r'
  end // of exportAssets

  defineMovieClip 1151 // total frames: 1
  end // of defineMovieClip 1151
  
  exportAssets
    1151 as ';pzah'
  end // of exportAssets

  frame 1
    ifFrameLoaded 11
      gotoLabel '=w)l'
      play
    end // of ifFrameLoaded 11

  end // of frame 1

  frame 2
    push '', 4
    getProperty
    push 1
    subtract
    gotoAndPlay
  end // of frame 2

  defineMovieClip 1158 // total frames: 4
  end // of defineMovieClip 1158

  defineMovieClip 1166 // total frames: 10
  end // of defineMovieClip 1166

  defineMovieClip 1169 // total frames: 1
  end // of defineMovieClip 1169

  defineMovieClip 1170 // total frames: 20
  end // of defineMovieClip 1170

  defineMovieClip 1173 // total frames: 10
  end // of defineMovieClip 1173

  defineMovieClip 1174 // total frames: 16
  end // of defineMovieClip 1174

  defineMovieClip 1177 // total frames: 2
  end // of defineMovieClip 1177

  defineMovieClip 1178 // total frames: 1
  end // of defineMovieClip 1178
  
  exportAssets
    1178 as '1zHbT'
  end // of exportAssets

  defineMovieClip 1181 // total frames: 4
  end // of defineMovieClip 1181

  defineMovieClip 1186 // total frames: 6
  end // of defineMovieClip 1186
  
  exportAssets
    1151 as ';pzah'
  end // of exportAssets
  
  exportAssets
    1151 as ';pzah'
  end // of exportAssets
  
  exportAssets
    1151 as ';pzah'
  end // of exportAssets
  
  exportAssets
    1151 as ';pzah'
  end // of exportAssets
  
  exportAssets
    1151 as ';pzah'
  end // of exportAssets
  
  exportAssets
    1151 as ';pzah'
  end // of exportAssets
  
  exportAssets
    1151 as ';pzah'
  end // of exportAssets
  
  exportAssets
    1151 as ';pzah'
  end // of exportAssets
  
  exportAssets
    1151 as ';pzah'
  end // of exportAssets
  
  exportAssets
    1151 as ';pzah'
  end // of exportAssets
  
  exportAssets
    1151 as ';pzah'
  end // of exportAssets
  
  exportAssets
    1151 as ';pzah'
  end // of exportAssets
  
  exportAssets
    1151 as ';pzah'
  end // of exportAssets
  
  exportAssets
    1151 as ';pzah'
  end // of exportAssets
  
  exportAssets
    1151 as ';pzah'
  end // of exportAssets

  defineMovieClip 1199 // total frames: 14

    frame 13
      gotoFrame 0
      play
    end // of frame 13
  end // of defineMovieClip 1199

  defineMovieClip 1201 // total frames: 1
  end // of defineMovieClip 1201

  defineMovieClip 1207 // total frames: 6
  end // of defineMovieClip 1207

  defineMovieClip 1211 // total frames: 2
  end // of defineMovieClip 1211

  defineMovieClip 1213 // total frames: 1
  end // of defineMovieClip 1213

  defineMovieClip 1214 // total frames: 12

    frame 0
      push 10
      random
      push 1
      add
      gotoAndPlay
    end // of frame 0

    frame 11
      push '', 10, 360
      random
      setProperty
      gotoFrame 1
      play
    end // of frame 11
  end // of defineMovieClip 1214

  defineMovieClip 1216 // total frames: 1
  end // of defineMovieClip 1216

  defineMovieClip 1217 // total frames: 25

    frame 0
      stop
    end // of frame 0

    frame 15
      push 'this'
      getVariable
      push '-EUoo'
      getMember
      not
      branchIfTrue label1
      gotoLabel ';f q'
      play
     label1:
    end // of frame 15

    frame 24
      push 0.0, 'this'
      getVariable
      push '_parent'
      getMember
      push '1T3j'
      callMethod
      pop
    end // of frame 24
  end // of defineMovieClip 1217

  defineMovieClip 1220 // total frames: 2
  end // of defineMovieClip 1220

  defineMovieClip 1226 // total frames: 6
  end // of defineMovieClip 1226

  defineMovieClip 1230 // total frames: 2
  end // of defineMovieClip 1230

  defineMovieClip 1243 // total frames: 12
  end // of defineMovieClip 1243

  defineMovieClip 1244 // total frames: 1

    frame 0
      push 6, 1, '0)'
      getVariable
      push 'gotoAndPlay'
      callMethod
      pop
    end // of frame 0
  end // of defineMovieClip 1244

  defineMovieClip 1251 // total frames: 7

    frame 0
      stop
    end // of frame 0

    frame 6
      push 0.0, '_parent'
      getVariable
      push '1T3j'
      callMethod
      pop
    end // of frame 6
  end // of defineMovieClip 1251

  defineMovieClip 1255 // total frames: 1
  end // of defineMovieClip 1255

  defineMovieClip 1256 // total frames: 20

    frame 0
      stop
    end // of frame 0

    frame 8
      push 0.0, '_parent'
      getVariable
      push '1T3j'
      callMethod
      pop
    end // of frame 8
  end // of defineMovieClip 1256

  defineMovieClip 1262 // total frames: 5

    frame 0
      constants '+)', '2)', 'this', '_x', 'Math', 'cos', '_y', 'sin', '_xscale', '_rotation', 'gotoAndPlay'  
      push '+)', 628
      random
      push 10
      divide
      setVariable
      push '2)', 2, 35
      random
      push 10
      divide
      add
      setVariable
      push 'this'
      getVariable
      push '_x', '+)'
      getVariable
      push 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push '2)'
      getVariable
      multiply
      setMember
      push 'this'
      getVariable
      push '_y', '+)'
      getVariable
      push 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push '2)'
      getVariable
      multiply
      setMember
      push 'this'
      getVariable
      push '_xscale', '2)'
      getVariable
      push 10
      multiply
      setMember
      push 'this'
      getVariable
      push '_rotation', '+)'
      getVariable
      push 0.0174532925199433
      divide
      setMember
      push 2
      random
      push 1
      add
      push 1, 'this'
      getVariable
      push 'gotoAndPlay'
      callMethod
      pop
    end // of frame 0
  end // of defineMovieClip 1262

  defineMovieClip 1268 // total frames: 2
  end // of defineMovieClip 1268
  
  exportAssets
    1149 as ']AB=r'
  end // of exportAssets

  defineMovieClip 1270 // total frames: 1
  end // of defineMovieClip 1270

  defineMovieClip 1273 // total frames: 1
  end // of defineMovieClip 1273

  defineMovieClip 1285 // total frames: 38

    frame 22
      gotoFrame 10
      play
    end // of frame 22

    frame 33
      push 0.0, '_parent'
      getVariable
      push '1T3j'
      callMethod
      pop
      push '=('
      getVariable
      pop
    end // of frame 33
  end // of defineMovieClip 1285

  defineMovieClip 1293 // total frames: 4
  end // of defineMovieClip 1293

  defineMovieClip 1299 // total frames: 15

    frame 14
      stop
    end // of frame 14
  end // of defineMovieClip 1299

  defineMovieClip 1302 // total frames: 1
  end // of defineMovieClip 1302

  defineMovieClip 1323 // total frames: 19

    frame 18
      push 0.0, '_parent'
      getVariable
      push '1T3j'
      callMethod
      pop
    end // of frame 18
  end // of defineMovieClip 1323

  defineMovieClip 1328 // total frames: 3
  end // of defineMovieClip 1328

  defineMovieClip 1344 // total frames: 14
  end // of defineMovieClip 1344

  defineMovieClip 1354 // total frames: 14
  end // of defineMovieClip 1354

  defineMovieClip 1363 // total frames: 11

    frame 0
      push 8
      random
      push 2
      add
      gotoAndPlay
    end // of frame 0

    frame 10
      push '', 10, 360
      random
      setProperty
      gotoFrame 1
      play
    end // of frame 10
  end // of defineMovieClip 1363

  defineMovieClip 1366 // total frames: 21
  end // of defineMovieClip 1366

  defineMovieClip 1368 // total frames: 165
  end // of defineMovieClip 1368
  
  exportAssets
    1368 as '2CiDT'
  end // of exportAssets
  
  exportAssets
    1147 as ',,toG('
  end // of exportAssets
  
  exportAssets
    1144 as '1jr84('
  end // of exportAssets
  
  exportAssets
    1140 as '72{sF'
  end // of exportAssets
  
  exportAssets
    1138 as '0AVi3'
  end // of exportAssets
  
  exportAssets
    1135 as '[E[XH'
  end // of exportAssets
  
  exportAssets
    1126 as '+(-k0'
  end // of exportAssets
  
  exportAssets
    1120 as '(( Uy'
  end // of exportAssets

  defineMovieClip 1369 // total frames: 9

    frame 8
      push 0.0, 'this'
      getVariable
      push '1T3j'
      callMethod
      pop
    end // of frame 8
  end // of defineMovieClip 1369
  
  exportAssets
    1369 as ' nr=c'
  end // of exportAssets
  
  exportAssets
    1117 as ')i=;X'
  end // of exportAssets

  defineMovieClip 1377 // total frames: 21

    frame 20
      gotoFrame 0
      play
    end // of frame 20
  end // of defineMovieClip 1377

  defineMovieClip 1382 // total frames: 21

    frame 20
      gotoFrame 0
      play
    end // of frame 20
  end // of defineMovieClip 1382

  defineMovieClip 1387 // total frames: 3
  end // of defineMovieClip 1387

  defineMovieClip 1390 // total frames: 1
  end // of defineMovieClip 1390

  defineMovieClip 1392 // total frames: 42
  end // of defineMovieClip 1392

  defineMovieClip 1393 // total frames: 1
  end // of defineMovieClip 1393

  defineMovieClip 1396 // total frames: 1
  end // of defineMovieClip 1396

  defineMovieClip 1397 // total frames: 1
  end // of defineMovieClip 1397

  defineMovieClip 1404 // total frames: 5
  end // of defineMovieClip 1404

  defineMovieClip 1405 // total frames: 10
  end // of defineMovieClip 1405
  
  exportAssets
    1405 as ')[vkG'
  end // of exportAssets
  
  exportAssets
    1109 as '6XA2Z'
  end // of exportAssets
  
  exportAssets
    1083 as '8 +xs'
  end // of exportAssets
  
  exportAssets
    1078 as '+V;6J('
  end // of exportAssets
  
  exportAssets
    1065 as '=jRD5('
  end // of exportAssets
  
  exportAssets
    1062 as ' eDR3'
  end // of exportAssets
  
  exportAssets
    1059 as ',mVfl'
  end // of exportAssets
  
  exportAssets
    1053 as '9uOr0'
  end // of exportAssets
  
  exportAssets
    1033 as ';j,t+('
  end // of exportAssets
  
  exportAssets
    1030 as '80{fB'
  end // of exportAssets
  
  exportAssets
    1026 as 'miniWave2Menu'
  end // of exportAssets
  
  exportAssets
    846 as ';F1j,('
  end // of exportAssets

  defineMovieClip 1411 // total frames: 1
  end // of defineMovieClip 1411

  defineMovieClip 1412 // total frames: 7
  end // of defineMovieClip 1412
  
  exportAssets
    1412 as '40e1B'
  end // of exportAssets
  
  exportAssets
    1022 as '(fND)('
  end // of exportAssets
  
  exportAssets
    1017 as '0cPfH'
  end // of exportAssets
  
  exportAssets
    1015 as '*QQ-O'
  end // of exportAssets

  defineMovieClip 1415 // total frames: 1
  end // of defineMovieClip 1415

  defineMovieClip 1419 // total frames: 1
  end // of defineMovieClip 1419

  defineMovieClip 1422 // total frames: 1
  end // of defineMovieClip 1422

  defineMovieClip 1427 // total frames: 1
  end // of defineMovieClip 1427

  defineMovieClip 1431 // total frames: 46
  end // of defineMovieClip 1431
  
  exportAssets
    1431 as '(muaU'
  end // of exportAssets

  defineMovieClip 1435 // total frames: 1
  end // of defineMovieClip 1435
  
  exportAssets
    1008 as '-nI*3'
  end // of exportAssets
  
  exportAssets
    1005 as '2]MeT'
  end // of exportAssets
  
  exportAssets
    1001 as '[9={n'
  end // of exportAssets
  
  exportAssets
    997 as '4h,c='
  end // of exportAssets
  
  exportAssets
    930 as ')nl,T'
  end // of exportAssets
  
  exportAssets
    891 as '(mlUw'
  end // of exportAssets
  
  exportAssets
    889 as ')qGaQ'
  end // of exportAssets
  
  exportAssets
    874 as ']F)y0('
  end // of exportAssets
  
  exportAssets
    858 as '4cB2;'
  end // of exportAssets
  
  exportAssets
    855 as '+;hw4'
  end // of exportAssets
  
  exportAssets
    852 as '-zJvB('
  end // of exportAssets

  frame 9
    constants 'miniwave', ';j*J0(', ',6T4i', 'Object', 'registerClass', 'Menu', 'miniWave2Menu', '7oL', '+V;6J(', '1L*M (', '6DM]P', '5q)A', '+9,_+', '0(}e', '6i)C', 'miniWave2GameMain', '0 LqG', 'miniWave2GameMission', '74DTE(', 'miniWave2GameLetter', ' U6L', '2S7tk', '}-Ky5(', 'miniWave2GameSurvival', ',1(R', '+GS_=(', '-Xgty', '-IB,V', '+{A*C(', '-;W2 (', '}JW_6', '-Ter*', ' q7M', '7NIW=(', '{45}p', '1vrgI', '+v-ZI', '-l2gn', ';W{', ')A4ho', '{e*ev', '*QQ-O', '9dv[', '[9={n', '5MIiJ(', ']DVXd', '(_7D', '1a,go', '8u lU', '(fND)(', '-BCwm', '0cPfH', '2j0pB(', '6XA2Z', ')JxRJ(', '8 +xs', '+af6Q', '3h;N6(', '-nI*3', '4h,c=', '8y', '[p7M', '2CiDT', ',pU', ')[vkG', ')1Y{(', '7nA4u', '=K)a', ')nl,T', '+3ul', '9wEMp', ')sW]P', '5uCS;', '8Xpv_', '28y(;(', '(U;{+', '-(2,0(', '4HQZF(', '8WG)L(', ' rXsS', '=sW+4(', ',m7Bi', ';_}b', '21AKR', '6W7Ij', '+p6uo', '1iHRm', '(f *l', '=_M9E(', '[6kFO', '}1iD9(', '*UPw4(', '0]3{l', '6,exA(', '{-l-u', ' G1SC', '7 8S4', '{kb(F', '[k0Vr', '-*OL=', '[QoYb', '6CA=;', '{{E)6', '3DsXM', '=xWuX', '6*yW6', ']}FNA', '[A1q*', '5X1Mm', ';,KS;', '{csi5', '97irL', '=(*FX', '+r;HS', '9I{Nz', '6gaB', '*k,6]', ',=Pw4(', '1u3{l', ')NO8;', '7,s-6', ';Ym8N', '2mQbY', '4HsHN', '-5L7e', '8,rk,(', '+v)*=(', ' F6L', '+gV,]', ')yfsQ', '3yV78', ')7hOX', '4hD(B', '+h;J0(', '1gDW-(', '}5(HL', '0XKmH', '{NxI (', '=x,d-', '6y[ ((', '1S,PG', '}QBXj', '3,J s', ')lZM;', '6U3t5', '581ds', '30k{=', '}VU9t', ' VkMU', '=+I0U', '4Cw[6', '2nm1B', '[-mop', '0Bw12(', '0y*sL', '3d1+*', '*6K[4(', '{mbI[', '7pZN2', '135 =', '0vE7A', '0(7E', '0hU7]', '5xtyJ(', ']e}dI', '}kX,9', '[ZNu9', ',eeh7', ';SXX8', '[[,C', '95X5]', '[4 z8(', '=}{Dn', ' PkxM', '94KvY', ']8sB;(', '}iTLr', '3vjCf', '32A;x', '=H02A', ']J_Ri', '0]6s*', '6b;Pt', '1grti', ',w(H', '*3um4(', '5})E4(', ',,toG(', '1jr84(', '72{sF', '0AVi3', '[E[XH', '(( Uy', ' nr=c', ';Eu}5', ' mMv2(', '=jRD5(', '(mlUw', ')qGaQ', '+olm4(', ']F)y0(', ' eDR3', '9uOr0', '80{fB', ')1]5F', '4Dcgs', ')3{lB', '+(-k0', '(j5be', '}+ZR;', '_global', '7J-V', '_root', ';IwU', 'log:\n', ',to,G(', '(l;(', '9l;(', '5-+P', 'this', '[w;(', 'attachMovie'  
    push 'miniwave'
    getVariable
    push ';j*J0('
    getMember
    push ',6T4i', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push 'Menu'
    getMember
    push 'miniWave2Menu', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '7oL'
    getMember
    push '+V;6J(', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '1L*M ('
    getMember
    push '6DM]P', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '5q)A'
    getMember
    push '+9,_+', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '0(}e'
    getMember
    push '6i)C'
    getMember
    push 'miniWave2GameMain', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '0(}e'
    getMember
    push '0 LqG'
    getMember
    push 'miniWave2GameMission', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '0(}e'
    getMember
    push '74DTE('
    getMember
    push 'miniWave2GameLetter', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '0(}e'
    getMember
    push ' U6L'
    getMember
    push '2S7tk', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '0(}e'
    getMember
    push '}-Ky5('
    getMember
    push 'miniWave2GameSurvival', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push ',1(R'
    getMember
    push '6i)C'
    getMember
    push '+GS_=(', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push ',1(R'
    getMember
    push '-Xgty'
    getMember
    push '-IB,V', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push ',1(R'
    getMember
    push '+{A*C('
    getMember
    push '-;W2 (', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push ',1(R'
    getMember
    push '}JW_6'
    getMember
    push '-Ter*', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push ',1(R'
    getMember
    push ' q7M'
    getMember
    push '7NIW=(', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push ',1(R'
    getMember
    push '{45}p'
    getMember
    push '1vrgI', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push ',1(R'
    getMember
    push '+v-ZI'
    getMember
    push '-l2gn', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push 'Menu'
    getMember
    push ')A4ho', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '{e*ev'
    getMember
    push '*QQ-O', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '9dv['
    getMember
    push '[9={n', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '5MIiJ('
    getMember
    push ']DVXd', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '(_7D'
    getMember
    push '1a,go', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '8u lU'
    getMember
    push '(fND)(', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '-BCwm'
    getMember
    push '0cPfH', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '2j0pB('
    getMember
    push '6XA2Z', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push ')JxRJ('
    getMember
    push '8 +xs', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '+af6Q'
    getMember
    push '3h;N6(', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '{45}p'
    getMember
    push '-nI*3', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push ';W{'
    getMember
    push '+v-ZI'
    getMember
    push '4h,c=', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push '[p7M'
    getMember
    push '2CiDT', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ',pU'
    getMember
    push ')[vkG', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ')1Y{('
    getMember
    push '7nA4u', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push '=K)a'
    getMember
    push ')nl,T', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push '+3ul'
    getMember
    push '9wEMp'
    getMember
    push ')sW]P', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push '+3ul'
    getMember
    push '5uCS;'
    getMember
    push '8Xpv_', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push '+3ul'
    getMember
    push '28y(;('
    getMember
    push '(U;{+', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push '+3ul'
    getMember
    push '-(2,0('
    getMember
    push '4HQZF(', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push '+3ul'
    getMember
    push '8WG)L('
    getMember
    push ' rXsS', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push '+3ul'
    getMember
    push '=sW+4('
    getMember
    push ',m7Bi', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '21AKR'
    getMember
    push '6W7Ij', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '+p6uo'
    getMember
    push '1iHRm', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '(f *l'
    getMember
    push '=_M9E(', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '[6kFO'
    getMember
    push '}1iD9(', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '*UPw4('
    getMember
    push '0]3{l', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '6,exA('
    getMember
    push '{-l-u', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ' G1SC'
    getMember
    push '7 8S4', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '{kb(F'
    getMember
    push '[k0Vr', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '-*OL='
    getMember
    push '[QoYb', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '6CA=;'
    getMember
    push '{{E)6', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '3DsXM'
    getMember
    push '=xWuX', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '6*yW6'
    getMember
    push ']}FNA', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '[A1q*'
    getMember
    push '5X1Mm', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ';,KS;'
    getMember
    push '{csi5', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '97irL'
    getMember
    push '=(*FX', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '+r;HS'
    getMember
    push '9I{Nz', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '6gaB'
    getMember
    push '*k,6]', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ',=Pw4('
    getMember
    push '1u3{l', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ')NO8;'
    getMember
    push '7,s-6', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ';Ym8N'
    getMember
    push '2mQbY', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '4HsHN'
    getMember
    push '-5L7e', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '8,rk,('
    getMember
    push '+v)*=(', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ' F6L'
    getMember
    push '+gV,]', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ')yfsQ'
    getMember
    push '3yV78', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ')7hOX'
    getMember
    push '4hD(B', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '+h;J0('
    getMember
    push '1gDW-(', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '}5(HL'
    getMember
    push '0XKmH', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '{NxI ('
    getMember
    push '=x,d-', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '6y[ (('
    getMember
    push '1S,PG', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '}QBXj'
    getMember
    push '3,J s', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ')lZM;'
    getMember
    push '6U3t5', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '581ds'
    getMember
    push '30k{=', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '}VU9t'
    getMember
    push ' VkMU', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '=+I0U'
    getMember
    push '4Cw[6', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '2nm1B'
    getMember
    push '[-mop', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '0Bw12('
    getMember
    push '0y*sL', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '3d1+*'
    getMember
    push '*6K[4(', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '{mbI['
    getMember
    push '7pZN2', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '135 ='
    getMember
    push '0vE7A', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '0(7E'
    getMember
    push '0hU7]', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '5xtyJ('
    getMember
    push ']e}dI', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '}kX,9'
    getMember
    push '[ZNu9', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ',eeh7'
    getMember
    push ';SXX8', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '[[,C'
    getMember
    push '95X5]', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '[4 z8('
    getMember
    push '=}{Dn', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ' PkxM'
    getMember
    push '94KvY', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push ']8sB;('
    getMember
    push '}iTLr', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '3vjCf'
    getMember
    push '32A;x', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '=H02A'
    getMember
    push ']J_Ri', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '0]6s*'
    getMember
    push '6b;Pt', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ';_}b'
    getMember
    push '74DTE('
    getMember
    push '1grti', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ',w(H'
    getMember
    push '*3um4(', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ',w(H'
    getMember
    push '5})E4(', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ',w(H'
    getMember
    push ',,toG(', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ',w(H'
    getMember
    push '1jr84(', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ',w(H'
    getMember
    push '72{sF', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ',w(H'
    getMember
    push '0AVi3', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ',w(H'
    getMember
    push '[E[XH', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ',w(H'
    getMember
    push '(( Uy', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ',w(H'
    getMember
    push ' nr=c', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ',w(H'
    getMember
    push ';Eu}5', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ',w(H'
    getMember
    push ' mMv2(', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ',w(H'
    getMember
    push '=jRD5(', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ',w(H'
    getMember
    push '(mlUw', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ',w(H'
    getMember
    push ')qGaQ', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ',w(H'
    getMember
    push '+olm4(', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ',w(H'
    getMember
    push ']F)y0(', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ',w(H'
    getMember
    push ' eDR3', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ',w(H'
    getMember
    push '9uOr0', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push '8y'
    getMember
    push ',w(H'
    getMember
    push '80{fB', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push ')1]5F'
    getMember
    push '(_7D'
    getMember
    push '4Dcgs', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push ')1]5F'
    getMember
    push ')3{lB'
    getMember
    push '+(-k0', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push 'miniwave'
    getVariable
    push ')1]5F'
    getMember
    push '(j5be'
    getMember
    push '}+ZR;', 2, 'Object'
    getVariable
    push 'registerClass'
    callMethod
    pop
    push '_global'
    getVariable
    push '7J-V', 1
    setMember
    push '_root'
    getVariable
    push ';IwU', 'log:\n'
    setMember
    push ',to,G(', '(l;(', 240, '9l;(', 240, '5-+P', 'this'
    getVariable
    push 3
    initObject
    varEquals
    push ',to,G('
    getVariable
    push 10, '[w;(', ',6T4i', 4, 'this'
    getVariable
    push 'attachMovie'
    callMethod
    pop
  end // of frame 9

  frame 10
    push 0.0, '[w;('
    getVariable
    push '6}jsa'
    callMethod
    pop
  end // of frame 10

  frame 11
    push '', 4
    getProperty
    push 1
    subtract
    gotoAndPlay
  end // of frame 11
end
