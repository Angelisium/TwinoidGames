movie '2f363a3dc669589001dde4a996872ef8.swf' compressed // flash 8, total frames: 1, frame rate: 40 fps, 700x480 px


  defineMovieClip 44 // total frames: 49

    frame 48
      push ''
      removeClip
    end // of frame 48
  end // of defineMovieClip 44
  
  exportAssets
    44 as '+I3}y'
  end // of exportAssets

  defineMovieClip 46 // total frames: 1
  end // of defineMovieClip 46

  defineMovieClip 47 // total frames: 12

    frame 11
      push ''
      removeClip
    end // of frame 11
  end // of defineMovieClip 47
  
  exportAssets
    47 as '0{lc4'
  end // of exportAssets

  defineMovieClip 90 // total frames: 52

    frame 51
      push ''
      removeClip
    end // of frame 51
  end // of defineMovieClip 90
  
  exportAssets
    90 as '; Yx5'
  end // of exportAssets

  defineMovieClip 95 // total frames: 3
  end // of defineMovieClip 95

  defineMovieClip 96 // total frames: 5

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 96

  defineMovieClip 98 // total frames: 1
  end // of defineMovieClip 98
  
  exportAssets
    98 as '7)3A'
  end // of exportAssets

  defineMovieClip 101 // total frames: 1

    frame 0
      push '_parent'
      getVariable
      push 'color'
      getMember
      push 'this'
      getVariable
      push 2, '73('
      getVariable
      push '(H5 S'
      callMethod
      pop
    end // of frame 0
  end // of defineMovieClip 101

  defineMovieClip 104 // total frames: 1
  end // of defineMovieClip 104

  defineMovieClip 106 // total frames: 1

    frame 0
      push '_parent'
      getVariable
      push 'color'
      getMember
      push ')'
      getVariable
      push 2, '73('
      getVariable
      push '(H5 S'
      callMethod
      pop
    end // of frame 0
  end // of defineMovieClip 106

  defineMovieClip 108 // total frames: 1
  end // of defineMovieClip 108

  defineMovieClip 112 // total frames: 1
  end // of defineMovieClip 112

  defineMovieClip 114 // total frames: 1
  end // of defineMovieClip 114

  defineMovieClip 117 // total frames: 1

    frame 0
      push '_parent'
      getVariable
      push 'color'
      getMember
      push ')'
      getVariable
      push 2, '73('
      getVariable
      push '(H5 S'
      callMethod
      pop
    end // of frame 0
  end // of defineMovieClip 117

  defineMovieClip 124 // total frames: 4

    frame 0
      push '_parent'
      getVariable
      push 'color'
      getMember
      push 'this'
      getVariable
      push 2, '73('
      getVariable
      push '(H5 S'
      callMethod
      pop
    end // of frame 0

    frame 3
      gotoFrame 0
      play
    end // of frame 3
  end // of defineMovieClip 124

  defineMovieClip 132 // total frames: 61

    frame 11
      gotoLabel '0o()'
      play
    end // of frame 11

    frame 34
      gotoLabel '}SC6'
      play
    end // of frame 34

    frame 46
      gotoLabel '3JVOu'
      play
    end // of frame 46

    frame 60
      gotoLabel '-bB='
      play
    end // of frame 60
  end // of defineMovieClip 132
  
  exportAssets
    132 as ')_()'
  end // of exportAssets

  defineMovieClip 137 // total frames: 4
  end // of defineMovieClip 137
  
  exportAssets
    132 as ')_()'
  end // of exportAssets

  defineMovieClip 150 // total frames: 27
  end // of defineMovieClip 150
  
  exportAssets
    150 as '}F2Zv'
  end // of exportAssets

  defineMovieClip 152 // total frames: 1
  end // of defineMovieClip 152

  defineMovieClip 153 // total frames: 20
  end // of defineMovieClip 153

  defineMovieClip 154 // total frames: 2
  end // of defineMovieClip 154
  
  exportAssets
    154 as '(iUrD'
  end // of exportAssets

  defineMovieClip 164 // total frames: 61
  end // of defineMovieClip 164
  
  exportAssets
    164 as '+(*'
  end // of exportAssets

  defineMovieClip 165 // total frames: 45

    frame 0
      constants '5qt3+', ''  
      push '5qt3+'
      getVariable
      push NULL
      equals
      not
      branchIfTrue label1
      push '', 5
      getProperty
      random
      push 1
      add
      gotoAndPlay
      push '5qt3+', TRUE
      setVariable
     label1:
    end // of frame 0

    frame 44
      constants '6', ''  
      push '6', 20
      setVariable
      push '', 10, 90, 2, '6'
      getVariable
      multiply
      add
      random
      push '6'
      getVariable
      subtract
      setProperty
      push '', 2, 50, 60
      random
      add
      setProperty
      push '', 3, 50, 60
      random
      add
      setProperty
    end // of frame 44
  end // of defineMovieClip 165
  
  exportAssets
    165 as '+BHFu'
  end // of exportAssets
  
  exportAssets
    165 as '+BHFu'
  end // of exportAssets
  
  exportAssets
    165 as '+BHFu'
  end // of exportAssets
  
  exportAssets
    165 as '+BHFu'
  end // of exportAssets
  
  exportAssets
    165 as '+BHFu'
  end // of exportAssets
  
  exportAssets
    165 as '+BHFu'
  end // of exportAssets
  
  exportAssets
    165 as '+BHFu'
  end // of exportAssets
  
  exportAssets
    165 as '+BHFu'
  end // of exportAssets

  defineMovieClip 167 // total frames: 1
  end // of defineMovieClip 167
  
  exportAssets
    167 as '3{FB'
  end // of exportAssets

  defineMovieClip 169 // total frames: 1
  end // of defineMovieClip 169
  
  exportAssets
    169 as '3}dqT'
  end // of exportAssets

  defineMovieClip 172 // total frames: 1
  end // of defineMovieClip 172
  
  exportAssets
    172 as ';+'
  end // of exportAssets
  
  exportAssets
    172 as ';+'
  end // of exportAssets
  
  exportAssets
    169 as '3}dqT'
  end // of exportAssets
  
  exportAssets
    167 as '3{FB'
  end // of exportAssets
  
  exportAssets
    167 as '3{FB'
  end // of exportAssets
  
  exportAssets
    167 as '3{FB'
  end // of exportAssets
  
  exportAssets
    167 as '3{FB'
  end // of exportAssets
  
  exportAssets
    167 as '3{FB'
  end // of exportAssets
  
  exportAssets
    164 as '+(*'
  end // of exportAssets
  
  exportAssets
    154 as '(iUrD'
  end // of exportAssets
  
  exportAssets
    150 as '}F2Zv'
  end // of exportAssets
  
  exportAssets
    132 as ')_()'
  end // of exportAssets
  
  exportAssets
    98 as '7)3A'
  end // of exportAssets
  
  exportAssets
    90 as '; Yx5'
  end // of exportAssets
  
  exportAssets
    47 as '0{lc4'
  end // of exportAssets
  
  exportAssets
    167 as '3{FB'
  end // of exportAssets
  
  exportAssets
    167 as '3{FB'
  end // of exportAssets
  
  exportAssets
    167 as '3{FB'
  end // of exportAssets
  
  exportAssets
    167 as '3{FB'
  end // of exportAssets
  
  exportAssets
    172 as ';+'
  end // of exportAssets
  
  exportAssets
    167 as '3{FB'
  end // of exportAssets
  
  exportAssets
    167 as '3{FB'
  end // of exportAssets
  
  exportAssets
    167 as '3{FB'
  end // of exportAssets
  
  exportAssets
    167 as '3{FB'
  end // of exportAssets
  
  exportAssets
    167 as '3{FB'
  end // of exportAssets
  
  exportAssets
    132 as ')_()'
  end // of exportAssets
  
  exportAssets
    98 as '7)3A'
  end // of exportAssets
  
  exportAssets
    172 as ';+'
  end // of exportAssets
  
  exportAssets
    167 as '3{FB'
  end // of exportAssets
  
  exportAssets
    167 as '3{FB'
  end // of exportAssets
  
  exportAssets
    167 as '3{FB'
  end // of exportAssets
  
  exportAssets
    167 as '3{FB'
  end // of exportAssets
  
  exportAssets
    167 as '3{FB'
  end // of exportAssets
  
  exportAssets
    132 as ')_()'
  end // of exportAssets
  
  exportAssets
    98 as '7)3A'
  end // of exportAssets
  
  exportAssets
    172 as ';+'
  end // of exportAssets
  
  exportAssets
    167 as '3{FB'
  end // of exportAssets
  
  exportAssets
    167 as '3{FB'
  end // of exportAssets
  
  exportAssets
    167 as '3{FB'
  end // of exportAssets
  
  exportAssets
    167 as '3{FB'
  end // of exportAssets
  
  exportAssets
    167 as '3{FB'
  end // of exportAssets
  
  exportAssets
    132 as ')_()'
  end // of exportAssets
  
  exportAssets
    98 as '7)3A'
  end // of exportAssets

  defineMovieClip 173 // total frames: 1

    frame 0
      constants '=(,aA', '{UPpH(', '2nyB)(', '=VFiV', '(S7B*', '}V3Vn', '4eg;S', '5yU=b', ' AhfC(', '=D=]B', '13,y8', '[gqwG', '1B)SZ', '99l8B', ';ndCG', '-Q)9)', '582dG', '*G6KR', '2Cn[H', '1H)l]', '566v]', '8ITeH(', '7clTq', '([Fb0', '{tgmc', '-_KXC', '2NOKW', 'flash', 'Object', 'filters', '{lN=R', ',i0 [', '44{N', ']{i', '(H5 S', 'Color', 'setTransform', '73(', '3Wt', '3Wr3K(', '-_X}5', '$r', '$b', '3e8ST', '-]-I(', 'Array', '(U,A', '(lr1_', '}MFTE(', '*v9F', '6m9G', '[d9F', '-Y9G', '}2D*', '[F8GJ(', ']}lAm', '}J', '+7U K', '* I51', '18wU*', ']S2))', '8z6ta', '}]Sah', '7-OC{', 'start', '8]X}5', '4-ZS3(', 'prototype', ' pPw_', 'random', 'length', '((', ')(', 'Math', 'sqrt', '7T4cF(', '*;X33', '5,4))', '+(*', '*=_p_', '(iUrD', '_x', '_y', 'push', '66NAN', 'gotoAndStop', '1', '2', '[', '=xbU6', 'text', 'x ', '5 wIp', '{DUlo', '}Yax5', 'round', ';+', 'onPress', '}0J7f', '6{VYR', '7vdL6(', '3{FB', '_xscale', '_yscale', '2e{I', '7)3A', '(G6p3', 'removeMovieClip', 'clear', '[o0[C(', '_rotation', 'PI', 'moveTo', 'lineStyle', 'cos', 'sin', '21Ld)(', '=', 'min', 'lineTo', '3}dqT', '_alpha', 'atan2', '{3Fhp', '(D1vC', '0e4vN', '+h)T7', '2VhU6', '; Yx5', '4YE)B', '+8[3+', '_name', ';Rhs3', '}F2Zv', 'attachMC', '-_D)', '-21re', '9GFJA', ')H2I(', '6LF', '8kN', '}3L6', ')', 'stop', '0yflg', '3B(*', '4u57)', '9', '5b)bA(', '0D 6', '{-kxL', ';ILSy', '-V;B', '87vE7(', '8hE;a', '7kC1', 'splice', '*B', ',}2X (', '9O*r', ',))hC', '8p1P5', 'pow', 'Key', 'SPACE', 'isDown', 'abs', '}EpzM', 'play', '0p8I-', '8QH9*', '{2', '}2', '9Z(8', '5cBEm', ' a5vB', ']}PCW', '8uD50', '+P+T1(', 'log', 'isNaN', '*j,B', '+l4wr', '(v+', 'target', '(rS8z', '+Gh8z', '+Y', ',Y', '3Y-bR', 'NO COLLIDE FOUND ! ', ',', 'trace', ',l3O-', '9Z 6', 'OUT-BOUNDS ! ', ' ', '}8,C9', '980Sb', '}-B2', '(kJ+1(', ')2fr3', 'mode', '}Zms3', ']1sj+', '-fC3a', '9oK', '7-,', ']bu40', 'swapDepths', 'createEmptyMC', '(GbB}', '+2NA', 'getDepth', 'floor', '}oQA7', 'unshift', '08M8', '9(K ;', ' frnP', '+-(0', '0P', '1P', ')_()', '99Yd9(', '0o()', 'ra', 'rb', 'ga', 'gb', 'ba', 'bb', 'aa', 'ab', 'color', '5T6+', '7WWHJ(', '8Ugi)', 'gotoAndPlay', '0{lc4', 'max', '=f3 Z', ' IWA+', '8pftA', '}SC6', '-bB=', '(WBt)', ']}Ou;(', '3I0pG', '{;7F4', '8U(wu', '}[cpB', '9xv]A', '{yQ=Q', '+,W', '2y+dV', '(tBee', '3)i[=', ' J3IC', '[6jRc', ')8Fyj', '4plQ5', 'getTimer', '3R,QM', ';y}-6(', '-)Xd+', '[Ad;n', '6GI,F', 'fps'  
      push '=(,aA'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '{UPpH(', 7
      setMember
      push r:0, '2nyB)(', 13
      setMember
      push r:0, '=VFiV', 1
      setMember
      push r:0, '(S7B*', 30
      setMember
      push r:0, '}V3Vn', 0.96
      setMember
      push r:0, '4eg;S', 1
      setMember
      push r:0, '5yU=b', 1
      setMember
      push r:0, ' AhfC(', 0.8
      setMember
      push r:0, '=D=]B', 0.7
      setMember
      push r:0, '13,y8', 45
      setMember
      push r:0, '[gqwG', 65
      setMember
      push r:0, '1B)SZ', 11163101, 4491502, 2271880, 3398946, 14544418, 15641088, 14483456, 7
      initArray
      setMember
      push r:0, '99l8B', 5000, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '582dG', 50, 100, 200, 300, 500, 700, 1000, 7
      initArray
      push 1, ';ndCG'
      getVariable
      push '*G6KR'
      callMethod
      setMember
      push r:0, '2Cn[H', 14
      setMember
      push r:0, '1H)l]', 1
      setMember
      push r:0, '566v]', 2
      setMember
      push r:0, '8ITeH(', 5
      setMember
      push r:0, '7clTq', 30
      setMember
      push r:0, '([Fb0', 14
      setMember
      push r:0, '{tgmc', 7
      setMember
      push r:0, '-_KXC', 500
      setMember
      push r:0, '2NOKW', 10
      setMember
      push 'flash'
      getVariable
      not
      not
      branchIfTrue label1
      push 'flash', 0, 'Object'
      new
      setVariable
     label1:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      not
      not
      branchIfTrue label2
      push 'flash'
      getVariable
      push 'filters', 0, 'Object'
      new
      setMember
     label2:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      push '{lN=R'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setMember
      push ',i0 ['
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push '44{N'
      function2 ('}J') (r:1='this')
        push 16777215, 1, ']{i'
        getVariable
        push '(H5 S'
        callMethod
        pop
        push '(H5 S'
        function2 (r:2='}J', r:3=']') (r:1='this')
          push r:']', 1, r:'}J', 1, 'Color'
          new
          push 'setTransform'
          callMethod
          pop
        end // of function 

        push 1
        initObject
        push '73(', 2, '3Wt'
        getVariable
        push '3Wr3K('
        callMethod
        pop
        push r:this, '-_X}5', '$r', 0
        initArray
        push '$b', 0
        initArray
        push 2
        initObject
        setMember
        push r:this, '3e8ST', 1
        setMember
        push r:this, '-]-I(', 0, 'Array'
        new
        setMember
        push r:this, '(U,A', 0, 'Array'
        new
        setMember
        push r:this, '(lr1_', 0, 'Array'
        new
        setMember
        push r:this, '}MFTE(', '*v9F', 0, '6m9G', '=(,aA'
        getVariable
        push '2Cn[H'
        getMember
        push '[d9F', 300, '-Y9G', 300, '}2D*', '=(,aA'
        getVariable
        push ' AhfC('
        getMember
        push 5
        initObject
        push '=(,aA'
        getVariable
        push '}V3Vn'
        getMember
        push r:this, '-]-I('
        getMember
        push 3, '[F8GJ('
        new
        setMember
        push r:this, ']}lAm', '}J'
        getVariable
        push 1, '+7U K'
        new
        setMember
        push r:this, '* I51', '=(,aA'
        getVariable
        push '1H)l]'
        getMember
        push 1, r:this, ']}lAm'
        getMember
        push '18wU*'
        callMethod
        setMember
        push r:this, ']S2))', '=(,aA'
        getVariable
        push '{tgmc'
        getMember
        push 1
        initArray
        setMember
        push 0, r:this, '8z6ta'
        callMethod
        pop
        push 0, r:this, '}]Sah'
        callMethod
        pop
        push 0, r:this, '7-OC{'
        callMethod
        pop
        push 0, r:this, '}MFTE('
        getMember
        push 'start'
        callMethod
        pop
        push r:this, '8]X}5', '44{N'
        getVariable
        push '4-ZS3('
        getMember
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, ' pPw_'
      function2 (r:2='4AF') (r:1='this')
       label3:
        push TRUE
        not
        branchIfTrue label9
        push 30, 240, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        add
        setRegister r:3
        pop
        push '=(,aA'
        getVariable
        push '2Cn[H'
        getMember
        push 30
        add
        push 240, '=(,aA'
        getVariable
        push '2Cn[H'
        getMember
        subtract
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        add
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        branch label5
       label4:
        push r:5
        increment
        setRegister r:5
        pop
       label5:
        push r:5, r:'4AF', 'length'
        getMember
        lessThan
        not
        branchIfTrue label7
        push r:'4AF', r:5
        getMember
        setRegister r:6
        pop
        push r:6, '(('
        getMember
        push r:3
        subtract
        setRegister r:7
        pop
        push r:6, ')('
        getMember
        push r:4
        subtract
        setRegister r:8
        pop
        push r:7, r:7
        multiply
        push r:8, r:8
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        setRegister r:9
        pop
        push r:9, '=(,aA'
        getVariable
        push '7clTq'
        getMember
        lessThan
        not
        branchIfTrue label6
        branch label7
       label6:
        branch label4
       label7:
        push r:5, r:'4AF', 'length'
        getMember
        equals
        not
        branchIfTrue label8
        push '((', r:3, ')(', r:4, 2
        initObject
        return
       label8:
        branch label3
       label9:
      end // of function 

      setMember
      push r:1, '7T4cF('
      function2 () (r:1='this')
        push r:this, '-_X}5'
        getMember
        push 1, ';ndCG'
        getVariable
        push '7T4cF('
        callMethod
        pop
        push r:this, '8]X}5', '44{N'
        getVariable
        push '*;X33'
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '}]Sah'
      function2 () (r:1='this')
        push r:this, '5,4))', 0, 'Array'
        new
        setMember
        push r:this, '+(*', '=(,aA'
        getVariable
        push '8ITeH('
        getMember
        push '+(*', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push 0
        setRegister r:2
        pop
        branch label11
       label10:
        push r:2
        increment
        setRegister r:2
        pop
       label11:
        push r:2, '=(,aA'
        getVariable
        push '([Fb0'
        getMember
        lessThan
        not
        branchIfTrue label12
        push '=(,aA'
        getVariable
        push '8ITeH('
        getMember
        push '(iUrD', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:3
        pop
        push r:3, '_x', 79, r:2, 10
        multiply
        add
        setMember
        push r:3, '_y', 3
        setMember
        push r:3, 1, r:this, '5,4))'
        getMember
        push 'push'
        callMethod
        pop
        branch label10
       label12:
      end // of function 

      setMember
      push r:1, '7-OC{'
      function2 () (r:1='this')
        push '66NAN', 1, r:this, '+(*'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push 0
        setRegister r:2
        pop
        branch label14
       label13:
        push r:2
        increment
        setRegister r:2
        pop
       label14:
        push r:2, '=(,aA'
        getVariable
        push '([Fb0'
        getMember
        lessThan
        not
        branchIfTrue label17
        push r:this, '5,4))'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:this, ']S2))'
        getMember
        push 0
        getMember
        push 2
        multiply
        push r:2
        greaterThan
        not
        branchIfTrue label15
        push '1', 1, r:3, 'gotoAndStop'
        callMethod
        pop
        branch label16
       label15:
        push '2', 1, r:3, 'gotoAndStop'
        callMethod
        pop
       label16:
        push '1', 1, r:3, '['
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        branch label13
       label17:
        push r:this, '+(*'
        getMember
        push '=xbU6'
        getMember
        push 'text', 'x ', r:this, ']S2))'
        getMember
        push 0
        getMember
        add
        setMember
      end // of function 

      setMember
      push r:1, '5 wIp'
      function2 () (r:1='this')
        push '{DUlo', 1, r:this, '+(*'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '}Yax5'
        getMember
        push '=(,aA'
        getVariable
        push '=VFiV'
        getMember
        subtract
        push '=(,aA'
        getVariable
        push '([Fb0'
        getMember
        multiply
        push '=(,aA'
        getVariable
        push '(S7B*'
        getMember
        push '=(,aA'
        getVariable
        push '=VFiV'
        getMember
        subtract
        divide
        setRegister r:3
        pop
        push 0
        setRegister r:2
        pop
        branch label19
       label18:
        push r:2
        increment
        setRegister r:2
        pop
       label19:
        push r:2, '=(,aA'
        getVariable
        push '([Fb0'
        getMember
        lessThan
        not
        branchIfTrue label22
        push r:this, '5,4))'
        getMember
        push r:2
        getMember
        setRegister r:4
        pop
        push r:2, 22
        multiply
        push '=(,aA'
        getVariable
        push '([Fb0'
        getMember
        divide
        push 1, 'Math'
        getVariable
        push 'round'
        callMethod
        toString
        setRegister r:5
        pop
        push r:3, r:2
        greaterThan
        not
        branchIfTrue label20
        push '1', 1, r:4, 'gotoAndStop'
        callMethod
        pop
        push r:5, 1, r:4, '['
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        branch label21
       label20:
        push '2', 1, r:4, 'gotoAndStop'
        callMethod
        pop
        push r:5, 1, r:4, '['
        getMember
        push 'gotoAndStop'
        callMethod
        pop
       label21:
        branch label18
       label22:
      end // of function 

      setMember
      push r:1, '8z6ta'
      function2 () (r:1='this')
        push 0, ';+', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:2
        pop
        push r:2, 'onPress', '}0J7f', r:this, 2, '3Wt'
        getVariable
        push '6{VYR'
        callMethod
        setMember
        push r:2, 1, ';ndCG'
        getVariable
        push '7vdL6('
        callMethod
        pop
        push 0, '3{FB', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:3
        pop
        push 70
        setRegister r:4
        pop
        push r:3, '_y', '=(,aA'
        getVariable
        push '2Cn[H'
        getMember
        setMember
        push r:3, '_xscale', r:4
        setMember
        push r:3, '_yscale', r:4
        setMember
        push 0, '3{FB', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:3
        pop
        push r:3, '_xscale', 0, r:4
        subtract
        setMember
        push r:3, '_yscale', r:4
        setMember
        push r:3, '_x', 300
        setMember
        push r:3, '_y', '=(,aA'
        getVariable
        push '2Cn[H'
        getMember
        setMember
        push 0, '3{FB', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:3
        pop
        push r:3, '_xscale', r:4
        setMember
        push r:3, '_yscale', 0, r:4
        subtract
        setMember
        push r:3, '_y', 300
        setMember
        push 0, '3{FB', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:3
        pop
        push r:3, '_xscale', 0, r:4
        subtract
        setMember
        push r:3, '_yscale', 0, r:4
        subtract
        setMember
        push r:3, '_x', 300
        setMember
        push r:3, '_y', 300
        setMember
        push 0, 'Array'
        new
        setRegister r:6
        pop
        push 0
        setRegister r:5
        pop
        branch label24
       label23:
        push r:5
        increment
        setRegister r:5
        pop
       label24:
        push r:5, '=(,aA'
        getVariable
        push '{UPpH('
        getMember
        push 1
        add
        lessThan
        not
        branchIfTrue label25
        push r:6, 1, r:this, ' pPw_'
        callMethod
        push 1, r:6, 'push'
        callMethod
        pop
        branch label23
       label25:
        push 0
        setRegister r:5
        pop
        branch label27
       label26:
        push r:5
        increment
        setRegister r:5
        pop
       label27:
        push r:5, '=(,aA'
        getVariable
        push '{UPpH('
        getMember
        push 1
        add
        lessThan
        not
        branchIfTrue label28
        push r:6, r:5
        getMember
        push ')('
        getMember
        push r:6, r:5
        getMember
        push '(('
        getMember
        push r:5, r:this, 4, '2e{I'
        new
        push 1, r:this, '-]-I('
        getMember
        push 'push'
        callMethod
        pop
        branch label26
       label28:
        push r:this, '7)3A', r:this, '-]-I('
        getMember
        push 0
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '(G6p3'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label30
       label29:
        push r:2
        increment
        setRegister r:2
        pop
       label30:
        push r:2, r:this, '(U,A'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label31
        push 0, r:this, '(U,A'
        getMember
        push r:2
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label29
       label31:
        push r:this, '(U,A', 0, 'Array'
        new
        setMember
        push 0, r:this, '* I51'
        getMember
        push 'clear'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '[o0[C('
      function2 () (r:1='this')
        push 0, r:this, '(G6p3'
        callMethod
        pop
        push '=(,aA'
        getVariable
        push '-_KXC'
        getMember
        push '=(,aA'
        getVariable
        push '2NOKW'
        getMember
        push '=(,aA'
        getVariable
        push '([Fb0'
        getMember
        push r:this, ']S2))'
        getMember
        push 0
        getMember
        subtract
        multiply
        add
        setRegister r:2
        pop
        push r:this, '7)3A'
        getMember
        push '}J'
        getMember
        push '_rotation'
        getMember
        push 'Math'
        getVariable
        push 'PI'
        getMember
        multiply
        push 180
        divide
        setRegister r:3
        pop
        push r:this, '7)3A'
        getMember
        push '(('
        getMember
        setRegister r:4
        pop
        push r:this, '7)3A'
        getMember
        push ')('
        getMember
        setRegister r:5
        pop
        push 20
        setRegister r:6
        pop
        push r:5, r:4, 2, r:this, '* I51'
        getMember
        push 'moveTo'
        callMethod
        pop
       label32:
        push r:2, 0
        greaterThan
        not
        branchIfTrue label42
        push r:6, 16777215, '=(,aA'
        getVariable
        push '2nyB)('
        getMember
        push 2
        multiply
        push 3, r:this, '* I51'
        getMember
        push 'lineStyle'
        callMethod
        pop
        push r:3, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:7
        pop
        push r:3, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:8
        pop
        push 1, 0
        divide
        setRegister r:9
        pop
        push 0
        setRegister r:11
        pop
        push 0
        setRegister r:12
        pop
        push r:4, r:this, '}MFTE('
        getMember
        push '21Ld)('
        getMember
        push '*v9F'
        getMember
        subtract
        push r:this, '7)3A'
        getMember
        push '='
        getMember
        subtract
        push 0, r:7
        subtract
        divide
        setRegister r:10
        pop
        push r:10, 0.1
        greaterThan
        dup
        not
        branchIfTrue label33
        pop
        push r:10, r:9
        lessThan
       label33:
        not
        branchIfTrue label34
        push r:10
        setRegister r:9
        pop
        push 1
        setRegister r:11
        pop
        push 0
        setRegister r:12
        pop
       label34:
        push r:5, r:this, '}MFTE('
        getMember
        push '21Ld)('
        getMember
        push '6m9G'
        getMember
        subtract
        push r:this, '7)3A'
        getMember
        push '='
        getMember
        subtract
        push 0, r:8
        subtract
        divide
        setRegister r:10
        pop
        push r:10, 0.1
        greaterThan
        dup
        not
        branchIfTrue label35
        pop
        push r:10, r:9
        lessThan
       label35:
        not
        branchIfTrue label36
        push r:10
        setRegister r:9
        pop
        push 0
        setRegister r:11
        pop
        push 1
        setRegister r:12
        pop
       label36:
        push r:4, r:this, '}MFTE('
        getMember
        push '21Ld)('
        getMember
        push '[d9F'
        getMember
        subtract
        push r:this, '7)3A'
        getMember
        push '='
        getMember
        add
        push 0, r:7
        subtract
        divide
        setRegister r:10
        pop
        push r:10, 0.1
        greaterThan
        dup
        not
        branchIfTrue label37
        pop
        push r:10, r:9
        lessThan
       label37:
        not
        branchIfTrue label38
        push r:10
        setRegister r:9
        pop
        push -1
        setRegister r:11
        pop
        push 0
        setRegister r:12
        pop
       label38:
        push r:5, r:this, '}MFTE('
        getMember
        push '21Ld)('
        getMember
        push '-Y9G'
        getMember
        subtract
        push r:this, '7)3A'
        getMember
        push '='
        getMember
        add
        push 0, r:8
        subtract
        divide
        setRegister r:10
        pop
        push r:10, 0.1
        greaterThan
        dup
        not
        branchIfTrue label39
        pop
        push r:10, r:9
        lessThan
       label39:
        not
        branchIfTrue label40
        push r:10
        setRegister r:9
        pop
        push 0
        setRegister r:11
        pop
        push -1
        setRegister r:12
        pop
       label40:
        push r:2, r:9, 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:10
        pop
        push r:2, r:10
        subtract
        setRegister r:2
        pop
        push r:4, r:10, r:7
        multiply
        add
        setRegister r:4
        pop
        push r:5, r:10, r:8
        multiply
        add
        setRegister r:5
        pop
        push r:5, r:4, 2, r:this, '* I51'
        getMember
        push 'lineTo'
        callMethod
        pop
        push r:2, 0
        greaterThan
        not
        branchIfTrue label41
        push '=(,aA'
        getVariable
        push '1H)l]'
        getMember
        push '3}dqT', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:13
        pop
        push r:13, '_alpha', r:6, 100
        multiply
        push 20
        divide
        setMember
        push r:13, '_x', r:4
        setMember
        push r:13, '_y', r:5
        setMember
        push r:13, 1, r:this, '(U,A'
        getMember
        push 'push'
        callMethod
        pop
       label41:
        push 1, r:this, '}MFTE('
        getMember
        push '21Ld)('
        getMember
        push '}2D*'
        getMember
        add
        push r:11, r:7
        multiply
        push r:12, r:8
        multiply
        add
        multiply
        setRegister r:14
        pop
        push r:7, r:14, r:11
        multiply
        subtract
        setRegister r:7
        pop
        push r:8, r:14, r:12
        multiply
        subtract
        setRegister r:8
        pop
        push r:7, r:8, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        setRegister r:3
        pop
        push r:6, 4
        subtract
        setRegister r:6
        pop
        branch label32
       label42:
      end // of function 

      setMember
      push r:1, '}0J7f'
      function2 () (r:1='this')
        push r:this, '3e8ST'
        getMember
        push 0
        lessThan
        not
        not
        branchIfTrue label43
        push UNDEF
        return
       label43:
        push r:this, '8]X}5'
        getMember
        setRegister r:0
        push '44{N'
        getVariable
        push '4-ZS3('
        getMember
        strictEquals
        branchIfTrue label44
        push r:0, '44{N'
        getVariable
        push '{3Fhp'
        getMember
        strictEquals
        branchIfTrue label45
        push r:0, '44{N'
        getVariable
        push '(D1vC'
        getMember
        strictEquals
        branchIfTrue label46
        branch label47
       label44:
        push 0, r:this, '(G6p3'
        callMethod
        pop
        push r:this, '8]X}5', '44{N'
        getVariable
        push '{3Fhp'
        getMember
        setMember
        push r:this, '0e4vN', 0
        setMember
        branch label47
       label45:
        push r:this, '8]X}5', '44{N'
        getVariable
        push '+h)T7'
        getMember
        setMember
        push r:this, '2VhU6', 6
        setMember
        push '=(,aA'
        getVariable
        push '1H)l]'
        getMember
        push '; Yx5', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:2
        pop
        push r:2, '_x', r:this, '7)3A'
        getMember
        push '(('
        getMember
        setMember
        push r:2, '_y', r:this, '7)3A'
        getMember
        push ')('
        getMember
        setMember
        push r:2, '_rotation', r:this, '7)3A'
        getMember
        push '}J'
        getMember
        push '_rotation'
        getMember
        setMember
        branch label47
       label46:
        push r:this, '0e4vN', -1
        setMember
        branch label47
       label47:
      end // of function 

      setMember
      push r:1, '4YE)B'
      function2 () (r:1='this')
        push 0, r:this, '+8[3+'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, ']S2))', r:this, ']S2))'
        getMember
        push 0
        getMember
        decrement
        push 1
        initArray
        setMember
        push 0, r:this, '7-OC{'
        callMethod
        pop
        push r:this, ']S2))'
        getMember
        push 0
        getMember
        push 0
        equals
        dup
        branchIfTrue label48
        pop
        push r:this, '7)3A'
        getMember
        push '}J'
        getMember
        push '_name'
        getMember
        push NULL
        equals
       label48:
        dup
        branchIfTrue label49
        pop
        push r:this, '-]-I('
        getMember
        push 'length'
        getMember
        push 1
        equals
       label49:
        not
        branchIfTrue label50
        push 0, r:this, '7T4cF('
        callMethod
        pop
        branch label51
       label50:
        push r:this, '8]X}5', '44{N'
        getVariable
        push '4-ZS3('
        getMember
        setMember
       label51:
      end // of function 

      setMember
      push r:1, ';Rhs3'
      function2 (r:2='9', r:3='max') (r:1='this')
        push r:'9', '}F2Zv', r:this, '+8[3+'
        getMember
        push 3, '3Wt'
        getVariable
        push 'attachMC'
        callMethod
        setRegister r:4
        pop
        push r:4, '_y', r:'9', 18
        multiply
        setMember
        push r:max, 1
        equals
        not
        branchIfTrue label52
        push 1
        branch label55
       label52:
        push r:'9', 0
        equals
        not
        branchIfTrue label53
        push 2
        branch label55
       label53:
        push r:'9', r:max, 1
        subtract
        equals
        not
        branchIfTrue label54
        push 3
        branch label55
       label54:
        push 4
       label55:
        push 1, r:4, '-_D)'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:4
        return
      end // of function 

      setMember
      push r:1, '-21re'
      function2 () (r:1='this')
        push r:this, '9GFJA'
        getMember
        push 1, r:this, '-_X}5'
        getMember
        push '$r'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '7)3A'
        getMember
        push ')H2I('
        getMember
        push 1, r:this, '-_X}5'
        getMember
        push '$b'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '9GFJA'
        getMember
        push 'length'
        getMember
        push 0
        equals
        not
        branchIfTrue label56
        push 0, r:this, '4YE)B'
        callMethod
        pop
        push UNDEF
        return
       label56:
        push r:this, '8]X}5', '44{N'
        getVariable
        push '(D1vC'
        getMember
        setMember
        push r:this, '+8[3+', '=(,aA'
        getVariable
        push '8ITeH('
        getMember
        push 1, r:this, ']}lAm'
        getMember
        push '18wU*'
        callMethod
        setMember
        push r:this, '+8[3+'
        getMember
        push '_x', 5
        setMember
        push r:this, '+8[3+'
        getMember
        push '_y', '=(,aA'
        getVariable
        push '2Cn[H'
        getMember
        push 5
        add
        setMember
        push 0
        setRegister r:2
        pop
        push 0, 1, ';ndCG'
        getVariable
        push '-Q)9)'
        callMethod
        setRegister r:4
        pop
        push r:this, ']S2))'
        getMember
        push 0
        getMember
        setRegister r:5
        pop
        push r:this, '9GFJA'
        getMember
        push 'length'
        getMember
        setRegister r:6
        pop
        push r:6, 2
        lessThan
        not
        not
        branchIfTrue label57
        push r:6
        increment
        setRegister r:6
        pop
       label57:
        push r:this, '7)3A'
        getMember
        push ')H2I('
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label58
        push r:6
        increment
        setRegister r:6
        pop
       label58:
        push r:this, '-]-I('
        getMember
        push 'length'
        getMember
        push 1
        equals
        dup
        not
        branchIfTrue label59
        pop
        push r:this, '7)3A'
        getMember
        push '}J'
        getMember
        push '_name'
        getMember
        push NULL
        equals
        not
       label59:
        dup
        branchIfTrue label60
        pop
        push r:this, '-]-I('
        getMember
        push 'length'
        getMember
        push 0
        equals
       label60:
        setRegister r:7
        pop
        push r:7
        not
        branchIfTrue label61
        push r:6
        increment
        setRegister r:6
        pop
       label61:
        push 0
        setRegister r:3
        pop
        branch label63
       label62:
        push r:3
        increment
        setRegister r:3
        pop
       label63:
        push r:3, r:this, '9GFJA'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label64
        push r:this, '9GFJA'
        getMember
        push r:3
        getMember
        setRegister r:8
        pop
        push r:6, r:2, r:2
        increment
        setRegister r:2
        pop
        push 2, r:this, ';Rhs3'
        callMethod
        setRegister r:9
        pop
        push '1', 1, r:9, 'gotoAndStop'
        callMethod
        pop
        push r:9, '6LF'
        getMember
        push 'text', '=(,aA'
        getVariable
        push '582dG'
        getMember
        push r:8
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        setMember
        push r:9, '}3L6'
        getMember
        push 'text', 'x ', r:this, ']S2))'
        getMember
        push 0
        getMember
        add
        setMember
        push 0, r:9, ')'
        getMember
        push 'stop'
        callMethod
        pop
        push r:8, r:9, ')'
        getMember
        push 2, '2e{I'
        getVariable
        push '0yflg'
        callMethod
        pop
        push '=(,aA'
        getVariable
        push '582dG'
        getMember
        push r:8
        getMember
        push r:4, 2, ';ndCG'
        getVariable
        push '3B(*'
        callMethod
        setRegister r:4
        pop
        branch label62
       label64:
        push r:this, '9GFJA'
        getMember
        push 'length'
        getMember
        push 1
        greaterThan
        not
        branchIfTrue label65
        push r:6, r:2, r:2
        increment
        setRegister r:2
        pop
        push 2, r:this, ';Rhs3'
        callMethod
        setRegister r:10
        pop
        push 5, r:this, '9GFJA'
        getMember
        push 'length'
        getMember
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        int
        setRegister r:11
        pop
        push r:5, r:11
        add
        setRegister r:5
        pop
        push r:11
        toString
        push 1, r:10, 'gotoAndStop'
        callMethod
        pop
       label65:
        push r:this, '7)3A'
        getMember
        push ')H2I('
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label66
        push r:6, r:2, r:2
        increment
        setRegister r:2
        pop
        push 2, r:this, ';Rhs3'
        callMethod
        setRegister r:12
        pop
        push 3, r:this, '7)3A'
        getMember
        push ')H2I('
        getMember
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        int
        setRegister r:13
        pop
        push r:5, r:13, 1
        add
        add
        setRegister r:5
        pop
        push 5, r:13
        add
        toString
        push 1, r:12, 'gotoAndStop'
        callMethod
        pop
       label66:
        push r:5, 1, ';ndCG'
        getVariable
        push '-Q)9)'
        callMethod
        push r:4, 2, ';ndCG'
        getVariable
        push '4u57)'
        callMethod
        setRegister r:4
        pop
        push r:7
        not
        branchIfTrue label67
        push r:6, r:2, r:2
        increment
        setRegister r:2
        pop
        push 2, r:this, ';Rhs3'
        callMethod
        setRegister r:14
        pop
        push '=(,aA'
        getVariable
        push '99l8B'
        getMember
        push r:4, 2, ';ndCG'
        getVariable
        push '3B(*'
        callMethod
        setRegister r:4
        pop
        push '9', 1, r:14, 'gotoAndStop'
        callMethod
        pop
       label67:
        push r:4, 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push r:this, '}Yax5', -1
        setMember
        push r:this, '0e4vN', 0
        setMember
        push r:this, '+8[3+'
        getMember
        push '_alpha', 0
        setMember
      end // of function 

      setMember
      push r:1, '0D 6'
      function2 () (r:1='this')
        push r:this, '3e8ST', r:this, '3e8ST'
        getMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        subtract
        setMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 1, r:this, '}MFTE('
        getMember
        push '87vE7('
        callMethod
        pop
        push FALSE
        setRegister r:3
        pop
        push 0
        setRegister r:2
        pop
        branch label69
       label68:
        push r:2
        increment
        setRegister r:2
        pop
       label69:
        push r:2, r:this, '-]-I('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label73
        push r:this, '-]-I('
        getMember
        push r:2
        getMember
        setRegister r:4
        pop
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 1, r:4, '87vE7('
        callMethod
        not
        branchIfTrue label70
        push TRUE
        setRegister r:3
        pop
       label70:
        push r:this, '8]X}5'
        getMember
        push '44{N'
        getVariable
        push '8hE;a'
        getMember
        equals
        dup
        not
        branchIfTrue label71
        pop
        push 0, r:4, '7kC1'
        callMethod
       label71:
        not
        branchIfTrue label72
        push 1, r:2, r:2
        decrement
        setRegister r:2
        pop
        push 2, r:this, '-]-I('
        getMember
        push 'splice'
        callMethod
        pop
        push r:4, 1, r:this, '(lr1_'
        getMember
        push 'push'
        callMethod
        pop
        push 0, r:this, '}MFTE('
        getMember
        push 'stop'
        callMethod
        pop
        push 0, r:this, '}MFTE('
        getMember
        push 'start'
        callMethod
        pop
       label72:
        branch label68
       label73:
        push 0
        setRegister r:2
        pop
        branch label75
       label74:
        push r:2
        increment
        setRegister r:2
        pop
       label75:
        push r:2, r:this, '(lr1_'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label79
        push r:this, '(lr1_'
        getMember
        push r:2
        getMember
        setRegister r:5
        pop
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 1, r:5, '87vE7('
        callMethod
        not
        not
        branchIfTrue label77
        push r:5, r:this, '7)3A'
        getMember
        equals
        not
        not
        branchIfTrue label76
        push r:5, '*B'
        getMember
        push 1, r:this, '9GFJA'
        getMember
        push 'push'
        callMethod
        pop
       label76:
        push 0, r:5, ',}2X ('
        callMethod
        pop
        push 1, r:2, r:2
        decrement
        setRegister r:2
        pop
        push 2, r:this, '(lr1_'
        getMember
        push 'splice'
        callMethod
        pop
        branch label78
       label77:
        push TRUE
        setRegister r:3
        pop
       label78:
        branch label74
       label79:
        push r:this, '8]X}5'
        getMember
        setRegister r:0
        push '44{N'
        getVariable
        push '4-ZS3('
        getMember
        strictEquals
        branchIfTrue label80
        push r:0, '44{N'
        getVariable
        push '{3Fhp'
        getMember
        strictEquals
        branchIfTrue label84
        push r:0, '44{N'
        getVariable
        push '+h)T7'
        getMember
        strictEquals
        branchIfTrue label86
        push r:0, '44{N'
        getVariable
        push '8hE;a'
        getMember
        strictEquals
        branchIfTrue label91
        push r:0, '44{N'
        getVariable
        push '(D1vC'
        getMember
        strictEquals
        branchIfTrue label93
        push r:0, '44{N'
        getVariable
        push '*;X33'
        getMember
        strictEquals
        branchIfTrue label98
        branch label99
       label80:
        push r:this, '9O*r', 0, '3Wt'
        getVariable
        push ',))hC'
        callMethod
        push r:this, '7)3A'
        getMember
        push '(('
        getMember
        subtract
        push 0, '3Wt'
        getVariable
        push '8p1P5'
        callMethod
        push r:this, '7)3A'
        getMember
        push ')('
        getMember
        subtract
        push 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        setMember
        push r:this, '9O*r'
        getMember
        push r:this, '7)3A'
        getMember
        push '}J'
        getMember
        push '_rotation'
        getMember
        push 180
        divide
        push 'Math'
        getVariable
        push 'PI'
        getMember
        multiply
        subtract
        setRegister r:6
        pop
       label81:
        push r:6, 'Math'
        getVariable
        push 'PI'
        getMember
        greaterThan
        not
        branchIfTrue label82
        push r:6, 2, 'Math'
        getVariable
        push 'PI'
        getMember
        multiply
        subtract
        setRegister r:6
        pop
        branch label81
       label82:
        push r:6, 0, 'Math'
        getVariable
        push 'PI'
        getMember
        subtract
        lessThan
        not
        branchIfTrue label83
        push r:6, 2, 'Math'
        getVariable
        push 'PI'
        getMember
        multiply
        add
        setRegister r:6
        pop
        branch label82
       label83:
        push r:this, '7)3A'
        getMember
        push '}J'
        getMember
        push '_rotation', r:this, '7)3A'
        getMember
        push '}J'
        getMember
        push '_rotation'
        getMember
        push r:6, 180
        multiply
        push 'Math'
        getVariable
        push 'PI'
        getMember
        divide
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.4, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        add
        setMember
        push 0, r:this, '[o0[C('
        callMethod
        pop
        branch label99
       label84:
        push 'Key'
        getVariable
        push 'SPACE'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label85
        push 0, r:this, '7-OC{'
        callMethod
        pop
        push r:this, '8]X}5', '44{N'
        getVariable
        push '4-ZS3('
        getMember
        setMember
        branch label99
       label85:
        push r:this, '0e4vN', r:this, '0e4vN'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 10
        divide
        add
        setMember
        push r:this, '}Yax5', 1, r:this, '0e4vN'
        getMember
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        subtract
        push '=(,aA'
        getVariable
        push '(S7B*'
        getMember
        push '=(,aA'
        getVariable
        push '=VFiV'
        getMember
        subtract
        multiply
        push '=(,aA'
        getVariable
        push '=VFiV'
        getMember
        add
        setMember
        push 0, r:this, '5 wIp'
        callMethod
        pop
        branch label99
       label86:
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '2VhU6'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label90
        push r:this, '8]X}5', '44{N'
        getVariable
        push '8hE;a'
        getMember
        setMember
        push 0, r:this, '7)3A'
        getMember
        push '}J'
        getMember
        push '}EpzM'
        getMember
        push 'play'
        callMethod
        pop
        push 0
        setRegister r:2
        pop
        branch label88
       label87:
        push r:2
        increment
        setRegister r:2
        pop
       label88:
        push r:2, r:this, '-]-I('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label89
        push r:this, '-]-I('
        getMember
        push r:2
        getMember
        push '0p8I-', FALSE
        setMember
        branch label87
       label89:
        push r:this, '7)3A'
        getMember
        push ')H2I(', 0
        setMember
        push r:this, '7)3A'
        getMember
        push '8QH9*', FALSE
        setMember
        push r:this, '9GFJA', 0, 'Array'
        new
        setMember
        push 0, r:this, '}MFTE('
        getMember
        push 'stop'
        callMethod
        pop
        push r:this, '7)3A'
        getMember
        push '{2', r:this, '9O*r'
        getMember
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:this, '}Yax5'
        getMember
        multiply
        setMember
        push r:this, '7)3A'
        getMember
        push '}2', r:this, '9O*r'
        getMember
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:this, '}Yax5'
        getMember
        multiply
        setMember
        push 0, r:this, '}MFTE('
        getMember
        push 'start'
        callMethod
        pop
       label90:
        branch label99
       label91:
        push r:this, '}Yax5', r:this, '7)3A'
        getMember
        push 1, r:this, '}MFTE('
        getMember
        push '}Yax5'
        callMethod
        setMember
        push 0, r:this, '5 wIp'
        callMethod
        pop
        push r:this, '7)3A'
        getMember
        push '0p8I-', TRUE
        setMember
        push r:3
        not
        not
        branchIfTrue label92
        push 0, r:this, '-21re'
        callMethod
        pop
       label92:
        branch label99
       label93:
        push r:this, '0e4vN'
        getMember
        push 0
        equals
        not
        branchIfTrue label95
        push r:this, '}Yax5', r:this, '}Yax5'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 10
        divide
        add
        setMember
        push r:this, '}Yax5'
        getMember
        push 0
        lessThan
        not
        not
        branchIfTrue label94
        push r:this, '}Yax5', 0
        setMember
        push r:this, '0e4vN', 1.5
        setMember
       label94:
        branch label96
       label95:
        push r:this, '0e4vN'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label96
        push r:this, '0e4vN', r:this, '0e4vN'
        getMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        subtract
        setMember
        push r:this, '0e4vN'
        getMember
        push 0
        equals
        not
        branchIfTrue label96
        push r:this, '0e4vN', -1
        setMember
       label96:
        push r:this, '0e4vN'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label97
        push r:this, '}Yax5', r:this, '}Yax5'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 10
        divide
        add
        setMember
        push r:this, '}Yax5'
        getMember
        push 1
        lessThan
        not
        not
        branchIfTrue label97
        push 0, r:this, '4YE)B'
        callMethod
        pop
       label97:
        push r:this, '+8[3+'
        getMember
        push '_alpha', 1, r:this, '}Yax5'
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        subtract
        push 100
        multiply
        setMember
        branch label99
       label98:
        branch label99
       label99:
      end // of function 

      setMember
      push r:1, ',}2X ('
      function2 () (r:1='this')
      end // of function 

      setMember
      push r:0, '4-ZS3(', 0
      setMember
      push r:0, '{3Fhp', 1
      setMember
      push r:0, '+h)T7', 2
      setMember
      push r:0, '8hE;a', 3
      setMember
      push r:0, '*;X33', 5
      setMember
      push r:0, '(D1vC', 6
      setMember
      push '[F8GJ('
      function2 (r:2='8', r:3='-', r:4=')') (r:1='this')
        push r:this, '9Z(8', r:'8'
        setMember
        push r:this, '5cBEm', r:'-'
        setMember
        push r:this, '21Ld)(', r:')'
        setMember
        push r:this, ' a5vB', 0
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, 'stop'
      function2 () (r:1='this')
        push r:this, ' a5vB'
        getMember
        push 1, r:this, ']}PCW'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, 'start'
      function2 () (r:1='this')
        push 0, r:this, '8uD50'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}Yax5'
      function2 (r:2='8') (r:1='this')
        push r:this, ' a5vB'
        getMember
        push r:this, '5cBEm'
        getMember
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:3
        pop
        push r:'8', '{2'
        getMember
        push r:3
        multiply
        setRegister r:4
        pop
        push r:'8', '}2'
        getMember
        push r:3
        multiply
        setRegister r:5
        pop
        push r:4, r:4
        multiply
        push r:5, r:5
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        return
      end // of function 

      setMember
      push r:1, ']}PCW'
      function2 (r:2=']') (r:1='this')
        push r:']', r:this, '5cBEm'
        getMember
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:4
        pop
        push 0
        setRegister r:3
        pop
        branch label101
       label100:
        push r:3
        increment
        setRegister r:3
        pop
       label101:
        push r:3, r:this, '9Z(8'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label102
        push r:this, '9Z(8'
        getMember
        push r:3
        getMember
        setRegister r:5
        pop
        push r:5, '{2', r:5, '{2'
        getMember
        push r:4
        multiply
        setMember
        push r:5, '}2', r:5, '}2'
        getMember
        push r:4
        multiply
        setMember
        branch label100
       label102:
      end // of function 

      setMember
      push r:1, '+P+T1('
      function2 (r:2='+') (r:1='this')
        push r:'+', r:this, '5cBEm'
        getMember
        push 1
        subtract
        multiply
        push 1
        add
        push 1, 'Math'
        getVariable
        push 'log'
        callMethod
        push r:this, '5cBEm'
        getMember
        push 1, 'Math'
        getVariable
        push 'log'
        callMethod
        divide
        setRegister r:3
        pop
        push r:3, 0
        lessThan
        dup
        branchIfTrue label103
        pop
        push r:3, 1, '3Wt'
        getVariable
        push 'isNaN'
        callMethod
       label103:
        not
        branchIfTrue label104
        push NULL
        return
       label104:
        push r:3
        return
      end // of function 

      setMember
      push r:1, '*j,B'
      function2 (r:2='7Q', r:3='8Q') (r:1='this')
        push r:'8Q', '(('
        getMember
        push r:'7Q', '(('
        getMember
        subtract
        setRegister r:4
        pop
        push r:'8Q', ')('
        getMember
        push r:'7Q', ')('
        getMember
        subtract
        setRegister r:5
        pop
        push r:4, r:4
        multiply
        push r:5, r:5
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        setRegister r:6
        pop
        push r:'7Q', '='
        getMember
        push r:'8Q', '='
        getMember
        add
        setRegister r:7
        pop
        push r:'7Q', '{2'
        getMember
        push r:'8Q', '{2'
        getMember
        subtract
        setRegister r:8
        pop
        push r:'7Q', '}2'
        getMember
        push r:'8Q', '}2'
        getMember
        subtract
        setRegister r:9
        pop
        push r:8, r:8
        multiply
        push r:9, r:9
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        setRegister r:10
        pop
        push r:8, r:10
        divide
        setRegister r:8
        pop
        push r:9, r:10
        divide
        setRegister r:9
        pop
        push r:8, r:4
        multiply
        push r:9, r:5
        multiply
        add
        setRegister r:11
        pop
        push r:11, 0
        greaterThan
        not
        not
        branchIfTrue label105
        push NULL
        return
       label105:
        push r:6, r:6
        multiply
        push r:11, r:11
        multiply
        subtract
        setRegister r:12
        pop
        push r:7, r:7
        multiply
        setRegister r:13
        pop
        push r:12, r:13
        lessThan
        not
        not
        branchIfTrue label106
        push NULL
        return
       label106:
        push r:11, r:13, r:12
        subtract
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        subtract
        setRegister r:14
        pop
        push r:14, r:10
        divide
        push 1, r:this, '+P+T1('
        callMethod
        return
      end // of function 

      setMember
      push r:1, '+l4wr'
      function2 (r:2='8') (r:1='this')
        push r:'8', '{2'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label108
        push r:this, '21Ld)('
        getMember
        push '*v9F'
        getMember
        push r:'8', '(('
        getMember
        subtract
        push r:'8', '='
        getMember
        add
        push r:'8', '{2'
        getMember
        divide
        push 1, r:this, '+P+T1('
        callMethod
        setRegister r:3
        pop
        push r:3, r:'8', '(v+'
        getMember
        lessThan
        not
        branchIfTrue label107
        push r:'8', '(v+', r:3
        setMember
        push r:'8', 'target', NULL
        setMember
       label107:
        branch label109
       label108:
        push r:'8', '{2'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label109
        push r:this, '21Ld)('
        getMember
        push '[d9F'
        getMember
        push r:'8', '(('
        getMember
        subtract
        push r:'8', '='
        getMember
        subtract
        push r:'8', '{2'
        getMember
        divide
        push 1, r:this, '+P+T1('
        callMethod
        setRegister r:4
        pop
        push r:4, r:'8', '(v+'
        getMember
        lessThan
        not
        branchIfTrue label109
        push r:'8', '(v+', r:4
        setMember
        push r:'8', 'target', NULL
        setMember
       label109:
        push r:'8', '}2'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label111
        push r:this, '21Ld)('
        getMember
        push '6m9G'
        getMember
        push r:'8', ')('
        getMember
        subtract
        push r:'8', '='
        getMember
        add
        push r:'8', '}2'
        getMember
        divide
        push 1, r:this, '+P+T1('
        callMethod
        setRegister r:5
        pop
        push r:5, r:'8', '(v+'
        getMember
        lessThan
        not
        branchIfTrue label110
        push r:'8', '(v+', r:5
        setMember
        push r:'8', 'target', NULL
        setMember
       label110:
        branch label112
       label111:
        push r:'8', '}2'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label112
        push r:this, '21Ld)('
        getMember
        push '-Y9G'
        getMember
        push r:'8', ')('
        getMember
        subtract
        push r:'8', '='
        getMember
        subtract
        push r:'8', '}2'
        getMember
        divide
        push 1, r:this, '+P+T1('
        callMethod
        setRegister r:6
        pop
        push r:6, r:'8', '(v+'
        getMember
        lessThan
        not
        branchIfTrue label112
        push r:'8', '(v+', r:6
        setMember
        push r:'8', 'target', NULL
        setMember
       label112:
      end // of function 

      setMember
      push r:1, '8uD50'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label114
       label113:
        push r:2
        increment
        setRegister r:2
        pop
       label114:
        push r:2, r:this, '9Z(8'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label115
        push r:this, '9Z(8'
        getMember
        push r:2
        getMember
        push '(v+', 1, 0
        divide
        setMember
        branch label113
       label115:
        push 0
        setRegister r:2
        pop
        branch label117
       label116:
        push r:2
        increment
        setRegister r:2
        pop
       label117:
        push r:2, r:this, '9Z(8'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label124
        push r:this, '9Z(8'
        getMember
        push r:2
        getMember
        setRegister r:4
        pop
        push r:2, 1
        add
        setRegister r:3
        pop
        branch label119
       label118:
        push r:3
        increment
        setRegister r:3
        pop
       label119:
        push r:3, r:this, '9Z(8'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label122
        push r:this, '9Z(8'
        getMember
        push r:3
        getMember
        setRegister r:5
        pop
        push r:5, r:4, 2, r:this, '*j,B'
        callMethod
        setRegister r:6
        pop
        push r:6, NULL
        equals
        not
        not
        branchIfTrue label121
        push r:6, r:4, '(v+'
        getMember
        lessThan
        not
        branchIfTrue label120
        push r:4, '(v+', r:6
        setMember
        push r:4, 'target', r:5
        setMember
       label120:
        push r:5, '(v+', r:6
        setMember
        push r:5, 'target', r:4
        setMember
       label121:
        branch label118
       label122:
        push r:this, '21Ld)('
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label123
        push r:4, 1, r:this, '+l4wr'
        callMethod
        pop
       label123:
        branch label116
       label124:
        push r:this, ' a5vB', 0
        setMember
        push r:this, '(rS8z', 1, 0
        divide
        setMember
        push r:this, '+Gh8z', NULL
        setMember
        push 0
        setRegister r:2
        pop
        branch label126
       label125:
        push r:2
        increment
        setRegister r:2
        pop
       label126:
        push r:2, r:this, '9Z(8'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label128
        push r:this, '9Z(8'
        getMember
        push r:2
        getMember
        setRegister r:7
        pop
        push r:7, '(v+'
        getMember
        push r:this, '(rS8z'
        getMember
        lessThan
        not
        branchIfTrue label127
        push r:this, '(rS8z', r:7, '(v+'
        getMember
        setMember
        push r:this, '+Gh8z', r:7
        setMember
       label127:
        push r:7, '+Y', r:7, '(('
        getMember
        setMember
        push r:7, ',Y', r:7, ')('
        getMember
        setMember
        branch label125
       label128:
      end // of function 

      setMember
      push r:1, '3Y-bR'
      function2 (r:2='8') (r:1='this')
        push 1, 100000
        divide
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        push r:'8', '(('
        getMember
        push r:this, '21Ld)('
        getMember
        push '*v9F'
        getMember
        subtract
        push r:'8', '='
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:3
        lessThan
        not
        branchIfTrue label129
        push 1
        setRegister r:4
        pop
        branch label133
       label129:
        push r:'8', '(('
        getMember
        push r:this, '21Ld)('
        getMember
        push '[d9F'
        getMember
        subtract
        push r:'8', '='
        getMember
        add
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:3
        lessThan
        not
        branchIfTrue label130
        push -1
        setRegister r:4
        pop
        branch label133
       label130:
        push r:'8', ')('
        getMember
        push r:this, '21Ld)('
        getMember
        push '6m9G'
        getMember
        subtract
        push r:'8', '='
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:3
        lessThan
        not
        branchIfTrue label131
        push 1
        setRegister r:5
        pop
        branch label133
       label131:
        push r:'8', ')('
        getMember
        push r:this, '21Ld)('
        getMember
        push '-Y9G'
        getMember
        subtract
        push r:'8', '='
        getMember
        add
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:3
        lessThan
        not
        branchIfTrue label132
        push -1
        setRegister r:5
        pop
        branch label133
       label132:
        push 'NO COLLIDE FOUND ! ', r:'8', '(('
        getMember
        add
        push ','
        add
        push r:'8', ')('
        getMember
        add
        push 1, ']{i'
        getVariable
        push 'trace'
        callMethod
        pop
        push UNDEF
        return
       label133:
        push 1, r:this, '21Ld)('
        getMember
        push '}2D*'
        getMember
        add
        push r:4, r:'8', '{2'
        getMember
        multiply
        push r:5, r:'8', '}2'
        getMember
        multiply
        add
        multiply
        setRegister r:6
        pop
        push r:'8', '{2', r:'8', '{2'
        getMember
        push r:6, r:4
        multiply
        subtract
        setMember
        push r:'8', '}2', r:'8', '}2'
        getMember
        push r:6, r:5
        multiply
        subtract
        setMember
      end // of function 

      setMember
      push r:1, ',l3O-'
      function2 (r:2='7Q', r:3='8Q') (r:1='this')
        push r:'7Q', '(('
        getMember
        push r:'8Q', '(('
        getMember
        subtract
        setRegister r:4
        pop
        push r:'7Q', ')('
        getMember
        push r:'8Q', ')('
        getMember
        subtract
        setRegister r:5
        pop
        push r:4, r:4
        multiply
        push r:5, r:5
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        setRegister r:6
        pop
        push r:4, r:6
        divide
        setRegister r:4
        pop
        push r:5, r:6
        divide
        setRegister r:5
        pop
        push r:'7Q', '{2'
        getMember
        push r:4
        multiply
        push r:'7Q', '}2'
        getMember
        push r:5
        multiply
        add
        setRegister r:7
        pop
        push r:'8Q', '{2'
        getMember
        push r:4
        multiply
        push r:'8Q', '}2'
        getMember
        push r:5
        multiply
        add
        setRegister r:8
        pop
        push 2, r:7, r:8
        subtract
        multiply
        push r:'7Q', '9Z 6'
        getMember
        push r:'8Q', '9Z 6'
        getMember
        add
        divide
        setRegister r:9
        pop
        push r:'7Q', '{2', r:'7Q', '{2'
        getMember
        push r:9, r:'8Q', '9Z 6'
        getMember
        multiply
        push r:4
        multiply
        subtract
        setMember
        push r:'7Q', '}2', r:'7Q', '}2'
        getMember
        push r:9, r:'8Q', '9Z 6'
        getMember
        multiply
        push r:5
        multiply
        subtract
        setMember
        push r:'8Q', '{2', r:'8Q', '{2'
        getMember
        push r:9, r:'7Q', '9Z 6'
        getMember
        multiply
        push r:4
        multiply
        add
        setMember
        push r:'8Q', '}2', r:'8Q', '}2'
        getMember
        push r:9, r:'7Q', '9Z 6'
        getMember
        multiply
        push r:5
        multiply
        add
        setMember
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 (r:2=']') (r:1='this')
        push r:this, '(rS8z'
        getMember
        push r:']', 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:4
        pop
        push r:this, '(rS8z'
        getMember
        push r:']'
        greaterThan
        not
        setRegister r:5
        pop
        push r:this, ' a5vB', r:this, ' a5vB'
        getMember
        push r:4
        add
        setMember
        push r:this, '(rS8z', r:this, '(rS8z'
        getMember
        push r:4
        subtract
        setMember
        push r:this, ' a5vB'
        getMember
        push r:this, '5cBEm'
        getMember
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        push 1
        subtract
        push r:this, '5cBEm'
        getMember
        push 1
        subtract
        divide
        setRegister r:6
        pop
        push 0
        setRegister r:3
        pop
        branch label135
       label134:
        push r:3
        increment
        setRegister r:3
        pop
       label135:
        push r:3, r:this, '9Z(8'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label138
        push r:this, '9Z(8'
        getMember
        push r:3
        getMember
        setRegister r:7
        pop
        push r:7, '((', r:7, '+Y'
        getMember
        push r:7, '{2'
        getMember
        push r:6
        multiply
        add
        setMember
        push r:7, ')(', r:7, ',Y'
        getMember
        push r:7, '}2'
        getMember
        push r:6
        multiply
        add
        setMember
        push r:5
        not
        dup
        not
        branchIfTrue label136
        pop
        push r:7, '(('
        getMember
        push r:this, '21Ld)('
        getMember
        push '*v9F'
        getMember
        push r:7, '='
        getMember
        add
        lessThan
        dup
        branchIfTrue label136
        pop
        push r:7, ')('
        getMember
        push r:this, '21Ld)('
        getMember
        push '6m9G'
        getMember
        push r:7, '='
        getMember
        add
        lessThan
       label136:
        not
        branchIfTrue label137
        push 'OUT-BOUNDS ! ', r:this, '(rS8z'
        getMember
        add
        push ' '
        add
        push r:7, '(v+'
        getMember
        add
        push 1, ']{i'
        getVariable
        push 'trace'
        callMethod
        pop
       label137:
        branch label134
       label138:
        push r:5
        not
        branchIfTrue label141
        push r:']', r:4
        subtract
        setRegister r:']'
        pop
        push 0, r:this, 'stop'
        callMethod
        pop
        push r:this, '+Gh8z'
        getMember
        push 'target'
        getMember
        push NULL
        equals
        not
        branchIfTrue label139
        push r:this, '+Gh8z'
        getMember
        push 1, r:this, '3Y-bR'
        callMethod
        pop
        branch label140
       label139:
        push r:this, '+Gh8z'
        getMember
        push 'target'
        getMember
        push r:this, '+Gh8z'
        getMember
        push 2, r:this, ',l3O-'
        callMethod
        pop
       label140:
        push r:this, '+Gh8z'
        getMember
        push 'target'
        getMember
        push 1, r:this, '+Gh8z'
        getMember
        push '}8,C9'
        callMethod
        pop
        push r:this, '+Gh8z'
        getMember
        push 1, r:this, '+Gh8z'
        getMember
        push 'target'
        getMember
        push '}8,C9'
        callMethod
        pop
        push 0, r:this, 'start'
        callMethod
        pop
        push r:']', 1, r:this, '87vE7('
        callMethod
        pop
       label141:
      end // of function 

      setMember
      push '980Sb'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '}-B2'
      function2 (r:2='}J') (r:1='this')
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        not
        branchIfTrue label142
        push UNDEF
        return
       label142:
        push '980Sb'
        getVariable
        push ')2fr3', r:'}J'
        setMember
        push '980Sb'
        getVariable
        push 'mode', '980Sb'
        getVariable
        push ')2fr3'
        getMember
        push 1, '44{N'
        new
        setMember
      end // of function 

      setMember
      push r:0, '0D 6'
      function2 () (r:1='this')
        push 0, '{-kxL'
        getVariable
        push '87vE7('
        callMethod
        pop
        push 0, '980Sb'
        getVariable
        push 'mode'
        getMember
        push '0D 6'
        callMethod
        pop
      end // of function 

      setMember
      push '+7U K'
      function2 (r:2='}J') (r:1='this')
        push r:this, ')2fr3', r:'}J'
        setMember
        push r:this, '}Zms3', 0, 'Array'
        new
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, ']1sj+'
      function2 () (r:1='this')
        push r:this, ')2fr3'
        getMember
        return
      end // of function 

      setMember
      push r:1, '-fC3a'
      function2 (r:2='59F') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'59F'
        getMember
        setRegister r:3
        pop
        push r:3, NULL
        equals
        not
        branchIfTrue label143
        push '9oK', 0, 'Array'
        new
        push '7-,', 0, 2
        initObject
        setRegister r:3
        pop
        push r:this, '}Zms3'
        getMember
        push r:'59F', r:3
        setMember
       label143:
        push r:3
        return
      end // of function 

      setMember
      push r:1, ']bu40'
      function2 (r:2='[-99') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'[-99'
        getMember
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:7
        pop
        push r:'[-99', 1000
        multiply
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label145
       label144:
        push r:6
        increment
        setRegister r:6
        pop
       label145:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label147
        push r:4, r:6
        getMember
        push '_name'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label146
        push r:8, r:7
        add
        push 1, r:4, r:6
        getMember
        push 'swapDepths'
        callMethod
        pop
        push r:4, r:7, r:4, r:6
        getMember
        setMember
        push r:7
        increment
        setRegister r:7
        pop
       label146:
        branch label144
       label147:
        push r:3, '7-,', r:7
        setMember
      end // of function 

      setMember
      push r:1, '*=_p_'
      function2 (r:2='*KB2', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label148
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'*KB2', 2, r:this, '*=_p_'
        callMethod
        return
       label148:
        push r:6, r:'[-99', 1000
        multiply
        add
        push r:'*KB2', r:this, ')2fr3'
        getMember
        push 3, '3Wt'
        getVariable
        push 'attachMC'
        callMethod
        setRegister r:7
        pop
        push r:5, r:6, r:7
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:7
        return
      end // of function 

      setMember
      push r:1, '18wU*'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push r:5, 1000
        equals
        not
        branchIfTrue label149
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', 1, r:this, '18wU*'
        callMethod
        return
       label149:
        push r:5, r:'[-99', 1000
        multiply
        add
        push r:this, ')2fr3'
        getMember
        push 2, '3Wt'
        getVariable
        push 'createEmptyMC'
        callMethod
        setRegister r:6
        pop
        push r:4, r:5, r:6
        setMember
        push r:3, '7-,', r:3, '7-,'
        getMember
        increment
        setMember
        push r:6
        return
      end // of function 

      setMember
      push r:1, '(GbB}'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label150
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        return
       label150:
        push r:5, r:6, r:'}J'
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:6, r:'[-99', 1000
        multiply
        add
        return
      end // of function 

      setMember
      push r:1, '+2NA'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        push 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, r:'[-99'
        equals
        not
        branchIfTrue label151
        push UNDEF
        return
       label151:
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:5, '7-,'
        getMember
        setRegister r:7
        pop
        push 0
        setRegister r:8
        pop
        branch label153
       label152:
        push r:8
        increment
        setRegister r:8
        pop
       label153:
        push r:8, r:7
        lessThan
        not
        branchIfTrue label155
        push r:6, r:8
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label154
        push r:6, r:8, NULL
        setMember
        branch label155
       label154:
        branch label152
       label155:
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}oQA7'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label156
        push r:6, r:7, NULL
        setMember
        push r:'}J', 1, r:6, 'unshift'
        callMethod
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label156:
      end // of function 

      setMember
      push r:1, '08M8'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label158
        push r:6, r:7, NULL
        setMember
        push r:5, '7-,'
        getMember
        push 1000
        equals
        not
        branchIfTrue label157
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label157:
        push r:5, '7-,'
        getMember
        setRegister r:3
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:3, r:4, 1000
        multiply
        add
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
        push r:6, r:3, r:'}J'
        setMember
       label158:
      end // of function 

      setMember
      push r:1, 'clear'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:4
        pop
        branch label160
       label159:
        push r:4
        increment
        setRegister r:4
        pop
       label160:
        push r:4, r:3, '7-,'
        getMember
        lessThan
        not
        branchIfTrue label161
        push 0, r:5, r:4
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label159
       label161:
        push r:3, '7-,', 0
        setMember
      end // of function 

      setMember
      push r:1, '9(K ;'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push -99999999
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label163
       label162:
        push r:6
        increment
        setRegister r:6
        pop
       label163:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label171
        push r:4, r:6
        getMember
        setRegister r:9
        pop
        push r:9, '_y'
        getMember
        setRegister r:10
        pop
        push r:10, r:8
        lessThan
        not
        not
        branchIfTrue label164
        push r:10
        setRegister r:8
        pop
        branch label170
       label164:
        push r:6
        setRegister r:7
        pop
        branch label166
       label165:
        push r:7
        decrement
        setRegister r:7
        pop
       label166:
        push r:7, 0
        greaterThan
        not
        branchIfTrue label169
        push r:4, r:7, 1
        subtract
        getMember
        setRegister r:11
        pop
        push r:11, '_y'
        getMember
        push r:10
        greaterThan
        not
        branchIfTrue label167
        push r:4, r:7, r:11
        setMember
        push r:11, 1, r:9, 'swapDepths'
        callMethod
        pop
        branch label168
       label167:
        push r:4, r:7, r:9
        setMember
        branch label169
       label168:
        branch label165
       label169:
        push r:7, 0
        equals
        not
        branchIfTrue label170
        push r:4, 0, r:9
        setMember
       label170:
        branch label162
       label171:
      end // of function 

      setMember
      push r:1, ',}2X ('
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label173
       label172:
        push r:2
        increment
        setRegister r:2
        pop
       label173:
        push r:2, r:this, '}Zms3'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label174
        push r:2, 1, r:this, 'clear'
        callMethod
        pop
        branch label172
       label174:
      end // of function 

      setMember
      push ' frnP'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push '2e{I'
      function2 (r:2='0', r:3='2', r:4='5R', r:5='6R') (r:1='this')
        push r:this, '{2', 0
        setMember
        push r:this, '}2', 0
        setMember
        push r:this, '+-(0', r:'0'
        setMember
        push r:this, '7)3A', r:'2', 0
        equals
        setMember
        push r:this, '*B', r:'2', 1
        subtract
        setMember
        push r:this, '((', r:'5R'
        setMember
        push r:this, ')(', r:'6R'
        setMember
        push r:this, '0P', r:this, '(('
        getMember
        setMember
        push r:this, '1P', r:this, ')('
        getMember
        setMember
        push r:this, '=', '=(,aA'
        getVariable
        push '2nyB)('
        getMember
        setMember
        push r:this, '9Z 6', r:this, '7)3A'
        getMember
        not
        branchIfTrue label175
        push '=(,aA'
        getVariable
        push '4eg;S'
        getMember
        branch label176
       label175:
        push '=(,aA'
        getVariable
        push '5yU=b'
        getMember
       label176:
        setMember
        push r:this, '}J', '=(,aA'
        getVariable
        push '566v]'
        getMember
        push r:this, '7)3A'
        getMember
        not
        branchIfTrue label177
        push '7)3A'
        branch label178
       label177:
        push ')_()'
       label178:
        push 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '7)3A'
        getMember
        not
        not
        branchIfTrue label179
        push r:this, '*B'
        getMember
        push r:this, '}J'
        getMember
        push 2, '2e{I'
        getVariable
        push '0yflg'
        callMethod
        pop
       label179:
        push r:this, '}J'
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '}J'
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
        push r:this, '8]X}5', 0
        setMember
        push r:this, '99Yd9(', 0
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ' frnP'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:0, '0yflg'
      function2 (r:2='}J', r:3='*B') (r:1='this')
        push '=(,aA'
        getVariable
        push '1B)SZ'
        getMember
        push r:'*B'
        getMember
        setRegister r:4
        pop
        push r:'}J', '0o()'
        getMember
        push 1, 'Color'
        new
        setRegister r:5
        pop
        push 'ra', 100, 'rb', r:4, 16
        shiftRight
        push 255
        subtract
        push 'ga', 100, 'gb', r:4, 8
        shiftRight
        push 255
        bitwiseAnd
        push 255
        subtract
        push 'ba', 100, 'bb', r:4, 255
        bitwiseAnd
        push 255
        subtract
        push 'aa', 100, 'ab', 0, 8
        initObject
        setRegister r:6
        pop
        push r:6, 1, r:5, 'setTransform'
        callMethod
        pop
        push r:'}J', 'color', r:6
        setMember
      end // of function 

      setMember
      push r:1, '5T6+'
      function2 (r:2='2[', r:3='3[') (r:1='this')
        push r:'2[', r:this, '(('
        getMember
        subtract
        setRegister r:4
        pop
        push r:'3[', r:this, ')('
        getMember
        subtract
        setRegister r:5
        pop
        push r:4, r:4
        multiply
        push r:5, r:5
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        return
      end // of function 

      setMember
      push r:1, '7kC1'
      function2 () (r:1='this')
        push r:this, '0p8I-'
        getMember
        not
        not
        branchIfTrue label180
        push FALSE
        return
       label180:
        push r:this, '7)3A'
        getMember
        not
        branchIfTrue label181
        push '=(,aA'
        getVariable
        push '13,y8'
        getMember
        branch label182
       label181:
        push '=(,aA'
        getVariable
        push '[gqwG'
        getMember
       label182:
        setRegister r:2
        pop
        push '=(,aA'
        getVariable
        push '2Cn[H'
        getMember
        push 0, 2, r:this, '5T6+'
        callMethod
        push r:2
        greaterThan
        not
        not
        branchIfTrue label183
        push r:this, '7WWHJ(', TRUE
        setMember
        push r:this, '0P', 0
        setMember
        push r:this, '1P', '=(,aA'
        getVariable
        push '2Cn[H'
        getMember
        setMember
        branch label186
       label183:
        push 300, 0, 2, r:this, '5T6+'
        callMethod
        push r:2
        greaterThan
        not
        not
        branchIfTrue label184
        push r:this, '7WWHJ(', TRUE
        setMember
        push r:this, '0P', 0
        setMember
        push r:this, '1P', 300
        setMember
        branch label186
       label184:
        push '=(,aA'
        getVariable
        push '2Cn[H'
        getMember
        push 300, 2, r:this, '5T6+'
        callMethod
        push r:2
        greaterThan
        not
        not
        branchIfTrue label185
        push r:this, '7WWHJ(', TRUE
        setMember
        push r:this, '0P', 300
        setMember
        push r:this, '1P', '=(,aA'
        getVariable
        push '2Cn[H'
        getMember
        setMember
        branch label186
       label185:
        push 300, 300, 2, r:this, '5T6+'
        callMethod
        push r:2
        greaterThan
        not
        not
        branchIfTrue label186
        push r:this, '7WWHJ(', TRUE
        setMember
        push r:this, '0P', 300
        setMember
        push r:this, '1P', 300
        setMember
       label186:
        push r:this, '7WWHJ('
        getMember
        return
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 (r:2=']') (r:1='this')
        push r:this, '7WWHJ('
        getMember
        not
        branchIfTrue label190
        push r:this, '1P'
        getMember
        push r:this, '0P'
        getMember
        push 2, r:this, '5T6+'
        callMethod
        push 10
        greaterThan
        not
        branchIfTrue label187
        push r:this, '}J'
        getMember
        push '_xscale'
        getMember
        push r:']', 0.97, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        setRegister r:3
        pop
        push r:this, '((', r:this, '(('
        getMember
        push 0.95
        multiply
        push 0.05, r:this, '0P'
        getMember
        multiply
        add
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push 0.95
        multiply
        push 0.05, r:this, '1P'
        getMember
        multiply
        add
        setMember
        branch label188
       label187:
        push r:this, '}J'
        getMember
        push '_xscale'
        getMember
        push r:']', 0.95, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        setRegister r:3
        pop
        push r:this, '((', r:this, '(('
        getMember
        push 3, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        subtract
        add
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push 3, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        subtract
        add
        setMember
        push r:3, 5
        lessThan
        not
        branchIfTrue label188
        push FALSE
        return
       label188:
        push r:this, '}J'
        getMember
        push '_rotation', r:this, '}J'
        getMember
        push '_rotation'
        getMember
        push r:']', 100, r:3
        subtract
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        multiply
        add
        setMember
        push r:this, '}J'
        getMember
        push '_xscale', r:3
        setMember
        push r:this, '}J'
        getMember
        push '_yscale', r:3
        setMember
        push r:this, '}J'
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '}J'
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
        push r:this, '8]X}5'
        getMember
        push 3
        equals
        not
        not
        branchIfTrue label189
        push r:this, '8]X}5', 3
        setMember
        push '8Ugi)', 1, r:this, '}J'
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
       label189:
        push TRUE
        return
        branch label200
       label190:
        push r:this, '(('
        getMember
        push r:this, '0P'
        getMember
        subtract
        setRegister r:4
        pop
        push r:this, ')('
        getMember
        push r:this, '1P'
        getMember
        subtract
        setRegister r:5
        pop
        push r:this, '0P', r:this, '(('
        getMember
        setMember
        push r:this, '1P', r:this, ')('
        getMember
        setMember
        push r:this, '}J'
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '}J'
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
        push r:4, r:4
        multiply
        push r:5, r:5
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        setRegister r:6
        pop
        push r:this, '7)3A'
        getMember
        not
        branchIfTrue label193
        push r:this, '+-(0'
        getMember
        push '8]X}5'
        getMember
        push '44{N'
        getVariable
        push '4-ZS3('
        getMember
        equals
        not
        not
        branchIfTrue label191
        push r:this, '99Yd9(', r:this, '99Yd9('
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.95, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        setMember
        push r:this, '}J'
        getMember
        push '_rotation', r:this, '}J'
        getMember
        push '_rotation'
        getMember
        push r:this, '99Yd9('
        getMember
        add
        setMember
        branch label192
       label191:
        push r:this, '99Yd9(', 0
        setMember
       label192:
        push '=(,aA'
        getVariable
        push '1H)l]'
        getMember
        push '0{lc4', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:7
        pop
        push r:7, '_x', r:this, '(('
        getMember
        setMember
        push r:7, '_y', r:this, ')('
        getMember
        setMember
        push r:7, '_rotation', r:this, '}J'
        getMember
        push '_rotation'
        getMember
        setMember
        push 1, 10, r:6
        subtract
        push 0, 2, 'Math'
        getVariable
        push 'max'
        callMethod
        int
        add
        setRegister r:8
        pop
        push r:8
        toString
        push 1, r:7, 'gotoAndPlay'
        callMethod
        pop
        branch label199
       label193:
        push r:6, 1
        greaterThan
        setRegister r:9
        pop
        push r:6, 1
        lessThan
        not
        branchIfTrue label194
        push 0, 1, r:this, '=f3 Z'
        callMethod
        pop
        branch label196
       label194:
        push r:6, 3
        lessThan
        not
        branchIfTrue label195
        push 1, 1, r:this, '=f3 Z'
        callMethod
        pop
        branch label196
       label195:
        push 2, 1, r:this, '=f3 Z'
        callMethod
        pop
       label196:
        push r:this, '8]X}5'
        getMember
        setRegister r:0
        push 1
        strictEquals
        branchIfTrue label197
        push r:0, 2
        strictEquals
        branchIfTrue label198
        branch label199
       label197:
        push r:this, '}J'
        getMember
        push '_rotation', r:this, '}J'
        getMember
        push '_rotation'
        getMember
        push 0.9
        multiply
        setMember
        branch label199
       label198:
        push r:this, '}J'
        getMember
        push '_rotation', r:4, r:5, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        push 0.0174
        divide
        setMember
        push r:this, ' IWA+', r:this, ' IWA+'
        getMember
        push r:6, 0.2
        multiply
        add
        push 10
        modulo
        setMember
        push 50, r:this, ' IWA+'
        getMember
        add
        toString
        push 1, r:this, '}J'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        branch label199
       label199:
        push r:6, r:']'
        divide
        push '=(,aA'
        getVariable
        push '=D=]B'
        getMember
        lessThan
        not
        return
       label200:
      end // of function 

      setMember
      push r:1, '}8,C9'
      function2 (r:2='}CL') (r:1='this')
        push r:this, '0p8I-', TRUE
        setMember
        push r:this, '7)3A'
        getMember
        not
        branchIfTrue label203
        push r:this, '99Yd9(', r:this, '99Yd9('
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 20
        multiply
        add
        setMember
        push r:'}CL', NULL
        equals
        not
        branchIfTrue label202
        push r:this, '8QH9*'
        getMember
        not
        not
        branchIfTrue label201
        push r:this, ')H2I(', r:this, ')H2I('
        getMember
        increment
        setMember
       label201:
        branch label203
       label202:
        push r:this, '8QH9*', TRUE
        setMember
       label203:
      end // of function 

      setMember
      push r:1, '=f3 Z'
      function2 (r:2='7') (r:1='this')
        push r:'7', r:this, '8]X}5'
        getMember
        equals
        not
        branchIfTrue label204
        push UNDEF
        return
       label204:
        push r:this, '8]X}5'
        getMember
        setRegister r:0
        push 2
        strictEquals
        branchIfTrue label205
        branch label206
       label205:
        push r:this, '}J'
        getMember
        push '_rotation', r:this, '}J'
        getMember
        push '_rotation'
        getMember
        push 90
        subtract
        setMember
        branch label206
       label206:
        push r:this, '8]X}5'
        getMember
        setRegister r:3
        pop
        push r:this, '8]X}5', r:'7'
        setMember
        push r:this, '8]X}5'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label207
        push r:0, 1
        strictEquals
        branchIfTrue label208
        push r:0, 2
        strictEquals
        branchIfTrue label211
        branch label212
       label207:
        push '0o()', 1, r:this, '}J'
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        branch label212
       label208:
        push r:3, 2
        equals
        not
        branchIfTrue label209
        push '8pftA', 1, r:this, '}J'
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        branch label210
       label209:
        push '}SC6', 1, r:this, '}J'
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
       label210:
        branch label212
       label211:
        push '-bB=', 1, r:this, '}J'
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push r:this, '}J'
        getMember
        push '_rotation', r:this, '{2'
        getMember
        push r:this, '}2'
        getMember
        push 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        push 0.0174
        divide
        setMember
        branch label212
       label212:
      end // of function 

      setMember
      push r:1, ',}2X ('
      function2 () (r:1='this')
        push 0, r:this, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
      end // of function 

      setMember
      push '(WBt)'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ']}Ou;(', 1
      setMember
      push r:0, '3I0pG', 2
      setMember
      push r:0, '{;7F4', 3
      setMember
      push r:0, '8U(wu', 4
      setMember
      push r:0, '}[cpB', 5
      setMember
      push r:0, '9xv]A', 6
      setMember
      push r:0, '{yQ=Q', 7
      setMember
      push r:0, '+,W', 8
      setMember
      push r:0, '2y+dV', 9
      setMember
      push r:0, '(tBee', 10
      setMember
      push r:0, '3)i[=', 11
      setMember
      push r:0, ' J3IC', 12
      setMember
      push r:0, '[6jRc', 13
      setMember
      push r:0, ')8Fyj', 14
      setMember
      push '{-kxL'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '87vE7('
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '4plQ5', '{-kxL'
        getVariable
        push '4plQ5'
        getMember
        increment
        setMember
        push 0, '3Wt'
        getVariable
        push 'getTimer'
        callMethod
        setRegister r:2
        pop
        push '{-kxL'
        getVariable
        push ';ILSy', r:2, '{-kxL'
        getVariable
        push '3R,QM'
        getMember
        subtract
        push 1000.0
        divide
        setMember
        push '{-kxL'
        getVariable
        push '3R,QM', r:2
        setMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        push '{-kxL'
        getVariable
        push ';y}-6('
        getMember
        lessThan
        not
        branchIfTrue label213
        push '{-kxL'
        getVariable
        push '-)Xd+', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        push '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        multiply
        push 1, '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        subtract
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        multiply
        add
        setMember
        branch label214
       label213:
        push '{-kxL'
        getVariable
        push ';ILSy', 1, '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        divide
        setMember
       label214:
        push '{-kxL'
        getVariable
        push '-V;B', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        setMember
      end // of function 

      setMember
      push r:0, 'fps'
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        return
      end // of function 

      setMember
      push r:0, '6GI,F', 32
      setMember
      push r:0, ';y}-6(', 0.5
      setMember
      push r:0, '3R,QM', 0, '3Wt'
      getVariable
      push 'getTimer'
      callMethod
      setMember
      push r:0, '[Ad;n', 0.95
      setMember
      push r:0, '-)Xd+', 1
      setMember
      push r:0, '-V;B', 1
      setMember
      push r:0, ';ILSy', 1
      setMember
      push r:0, '4plQ5', 0
      setMember
    end // of frame 0
  end // of defineMovieClip 173
  
  exportAssets
    173 as '90D*'
  end // of exportAssets
end
