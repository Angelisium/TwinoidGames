movie 'a70c5ac8230962930b5790fd34185b8b.swf' compressed // flash 8, total frames: 1, frame rate: 40 fps, 700x480 px


  defineMovieClip 2 // total frames: 10

    frame 8
      gotoFrame 0
      play
    end // of frame 8
  end // of defineMovieClip 2

  defineMovieClip 3 // total frames: 60

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 3
  
  exportAssets
    3 as '-mR,'
  end // of exportAssets

  defineMovieClip 9 // total frames: 5
  end // of defineMovieClip 9

  defineMovieClip 10 // total frames: 1
  end // of defineMovieClip 10
  
  exportAssets
    10 as '4,01'
  end // of exportAssets

  defineMovieClip 12 // total frames: 1
  end // of defineMovieClip 12

  defineMovieClip 13 // total frames: 10

    frame 9
      stop
    end // of frame 9
  end // of defineMovieClip 13

  defineMovieClip 17 // total frames: 10

    frame 9
      stop
    end // of frame 9
  end // of defineMovieClip 17

  defineMovieClip 18 // total frames: 60
  end // of defineMovieClip 18
  
  exportAssets
    18 as '+-=)'
  end // of exportAssets

  defineMovieClip 20 // total frames: 1
  end // of defineMovieClip 20
  
  exportAssets
    20 as '1H+_('
  end // of exportAssets

  defineMovieClip 23 // total frames: 1
  end // of defineMovieClip 23

  defineMovieClip 25 // total frames: 1
  end // of defineMovieClip 25

  defineMovieClip 28 // total frames: 1
  end // of defineMovieClip 28

  defineMovieClip 33 // total frames: 2
  end // of defineMovieClip 33

  defineMovieClip 34 // total frames: 2

    frame 0
      push '-A=)'
      getVariable
      push '_rotation', 360
      random
      push 180
      subtract
      setMember
    end // of frame 0

    frame 1
      push '', 4
      getProperty
      push 1
      subtract
      gotoAndPlay
    end // of frame 1
  end // of defineMovieClip 34

  defineMovieClip 35 // total frames: 2

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 35

  defineMovieClip 39 // total frames: 1
  end // of defineMovieClip 39

  defineMovieClip 46 // total frames: 20
  end // of defineMovieClip 46

  defineMovieClip 51 // total frames: 40
  end // of defineMovieClip 51

  defineMovieClip 53 // total frames: 40
  end // of defineMovieClip 53

  defineMovieClip 60 // total frames: 20
  end // of defineMovieClip 60

  defineMovieClip 65 // total frames: 40
  end // of defineMovieClip 65

  defineMovieClip 67 // total frames: 40
  end // of defineMovieClip 67

  defineMovieClip 73 // total frames: 40
  end // of defineMovieClip 73

  defineMovieClip 74 // total frames: 40
  end // of defineMovieClip 74

  defineMovieClip 75 // total frames: 6
  end // of defineMovieClip 75
  
  exportAssets
    75 as '4,F'
  end // of exportAssets

  defineMovieClip 77 // total frames: 1
  end // of defineMovieClip 77

  defineMovieClip 78 // total frames: 1
  end // of defineMovieClip 78

  defineMovieClip 80 // total frames: 1
  end // of defineMovieClip 80

  defineMovieClip 81 // total frames: 2
  end // of defineMovieClip 81

  defineMovieClip 82 // total frames: 1
  end // of defineMovieClip 82

  defineMovieClip 83 // total frames: 1
  end // of defineMovieClip 83

  defineMovieClip 84 // total frames: 1
  end // of defineMovieClip 84

  defineMovieClip 85 // total frames: 1
  end // of defineMovieClip 85

  defineMovieClip 89 // total frames: 15

    frame 14
      push 'this'
      getVariable
      removeClip
    end // of frame 14
  end // of defineMovieClip 89
  
  exportAssets
    89 as '*J)0E'
  end // of exportAssets

  defineMovieClip 95 // total frames: 9

    frame 8
      push 0.0, 'this'
      getVariable
      push 'removeMovieClip'
      callMethod
      pop
    end // of frame 8
  end // of defineMovieClip 95
  
  exportAssets
    95 as 'pop'
  end // of exportAssets

  defineMovieClip 100 // total frames: 4
  end // of defineMovieClip 100
  
  exportAssets
    100 as '[9 9'
  end // of exportAssets

  defineMovieClip 104 // total frames: 1
  end // of defineMovieClip 104
  
  exportAssets
    104 as '(9*'
  end // of exportAssets

  defineMovieClip 107 // total frames: 1
  end // of defineMovieClip 107
  
  exportAssets
    107 as ' 9*'
  end // of exportAssets

  defineMovieClip 110 // total frames: 1
  end // of defineMovieClip 110
  
  exportAssets
    110 as ')9*'
  end // of exportAssets

  defineMovieClip 112 // total frames: 1
  end // of defineMovieClip 112
  
  exportAssets
    112 as ';+'
  end // of exportAssets
  
  exportAssets
    112 as ';+'
  end // of exportAssets
  
  exportAssets
    110 as ')9*'
  end // of exportAssets
  
  exportAssets
    107 as ' 9*'
  end // of exportAssets
  
  exportAssets
    104 as '(9*'
  end // of exportAssets
  
  exportAssets
    100 as '[9 9'
  end // of exportAssets
  
  exportAssets
    95 as 'pop'
  end // of exportAssets
  
  exportAssets
    89 as '*J)0E'
  end // of exportAssets
  
  exportAssets
    75 as '4,F'
  end // of exportAssets
  
  exportAssets
    20 as '1H+_('
  end // of exportAssets
  
  exportAssets
    18 as '+-=)'
  end // of exportAssets

  defineMovieClip 113 // total frames: 1

    frame 0
      constants '{sRCQ', '9w+x0(', '5Gr1)', 'Array', 'prototype', 'insert', 'splice', 'call', 'length', 'pop', ']]*Q1(', 'push', '7EyYf', 'shift', '=dbLP', '0y)Lk', 'unshift', '(Ip9A', '36}9L(', ']u-*A', '+-(0', '}J', '=(,aA', '97;Se', '1H+_(', ']}lAm', '*=_p_', '0 -}=(', '+[', '5R', '6R', ']', '[b', ']b', 'size', '_xscale', '_yscale', '9T54', '=Y7h]', '_x', '_y', 'removeMovieClip', '[mPC=(', '-_X}5', '$k', 'Math', 'sqrt', '6evY-(', 'remove', 'atan2', 'cos', 'sin', '87vE7(', '{-kxL', '-V;B', 'pow', '2M_}f', 'abs', '2BSU', '=M_Rb', '$f', 'min', '3d0fx', '*h0p]', '8zzlV', '98Ctu', ';ndCG', '*G6KR', '2o', ';+', ')9*', '(9*', ' 9*', 'onMouseMove', ',}K0C(', '3Wt', 'callback', 'onPress', ' (sy3', 'onRelease', 'onReleaseOutside', 'useHandCursor', '7vdL6(', '9Q5w3', ';Q5w3', '4,01', '_alpha', '_width', ',i0 [', '+7U K', ')2fr3', '}Zms3', ']1sj+', '-fC3a', '9oK', '7-,', ']bu40', '_name', 'swapDepths', 'attachMC', '18wU*', 'createEmptyMC', '(GbB}', '+2NA', 'getDepth', 'floor', '}oQA7', '08M8', 'clear', '9(K ;', ',}2X (', ';jo', '*B', '(', 'random', 'PI', '+Se)3', '4,F', 'gotoAndStop', '=E;uK(', '*J)0E', '$bo', '5b)bA(', '5QPXw', '0tJ', '0{KS0', '2', '1', '_rotation', '=[q8n', 'flash', 'Object', '3[4k{', '{lN=R', '4plQ5', 'getTimer', ';ILSy', '3R,QM', ';y}-6(', '-)Xd+', '[Ad;n', '6GI,F', 'fps', '=3+P', ';8,PR', ' IWA+', '}Yax5', '3u(', ';myEu', '}D4i3', '-mR,', '2[', '_xmouse', '3[', '_ymouse', '}fC=K', '5CMYr', 'Key', 'SPACE', 'isDown', '[9 9', '_totalframes', '((', ')(', '[', '-J0h', 'LEFT', 'RIGHT', 'UP', 'DOWN', '+-=)', '-g0L5', 'max', '*;D)', '(WBt)', ']}Ou;(', '3I0pG', '{;7F4', '8U(wu', '}[cpB', '9xv]A', '{yQ=Q', '+,W', '2y+dV', '(tBee', '3)i[=', ' J3IC', '[6jRc', ')8Fyj', '44{N', '),P16(', '5T6+', '5U4B', ',e49', '$p', '$b', '$d', '5yP+L', '-[m(M', '7g,ln', '6nd+E(', '0D 6', '6DoB7', '-Q)9)', '7T4cF(', '0ze*c', '980Sb', '}-B2', '(kJ+1(', '({B6', ',Hwi)', 'clearInterval', 'getGlobal', '-', 'setInterval', '}wUHz', 'split', 'join', '', 'indexOf', 'slice', 'substring', '* I51', 'charCodeAt', ',JBe0', 'duplicate', '4UQ(1', '_parent', '{2', '}2', ' Ly7b', '0', '4*fgv', 'getBounds', 'xMin', 'xMax', 'yMin', 'yMax', '16KA', '_typeof', 'movieclip', '9ss9+', 'localToGlobal', '19{O', ',[A(', 'set', '-[A(', 'get', 'globalToLocal', '{Gq]-', '$r', '$h', '$w', '$y', '$x', '$box', '$matrixType', '$radial', '$linear', ']cY[2', 'beginGradientFill', ' (', '1', '='  
      push '{sRCQ'
      function2 () (r:1='this', r:2='super')
        push 0, r:super, UNDEF
        callMethod
        pop
        push r:this, '9w+x0(', 0, 1
        initArray
        setMember
        push r:this, '5Gr1)', FALSE
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'Array'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, 'insert'
      function2 (r:2='4AF', r:3='((') (r:1='this')
        push r:'((', 0, r:'4AF', r:this, 4, 'Array'
        getVariable
        push 'prototype'
        getMember
        push 'splice'
        getMember
        push 'call'
        callMethod
        pop
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label1
        push r:this, '5Gr1)', TRUE
        setMember
       label1:
      end // of function 

      setMember
      push r:1, 'pop'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, ']]*Q1('
        getVariable
        push 'call'
        callMethod
        setRegister r:3
        pop
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label2
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        decrement
        push 1
        initArray
        setMember
       label2:
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label3
        push r:this, '5Gr1)', TRUE
        setMember
       label3:
        push r:3
        return
      end // of function 

      setMember
      push r:1, 'push'
      function2 (r:3='((') (r:1='this', r:2='super')
        push r:'((', r:this, 2, '7EyYf'
        getVariable
        push 'call'
        callMethod
        setRegister r:4
        pop
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label4
        push r:this, '5Gr1)', TRUE
        setMember
       label4:
        push r:4
        return
      end // of function 

      setMember
      push r:1, 'shift'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '=dbLP'
        getVariable
        push 'call'
        callMethod
        setRegister r:3
        pop
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label5
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        decrement
        push 1
        initArray
        setMember
       label5:
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label6
        push r:this, '5Gr1)', TRUE
        setMember
       label6:
        push r:3
        return
      end // of function 

      setMember
      push r:1, 'splice'
      function2 (r:3='4AF', r:4='; =') (r:1='this', r:2='super')
        push r:'; =', r:'4AF', r:this, 3, '0y)Lk'
        getVariable
        push 'call'
        callMethod
        setRegister r:5
        pop
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:5, 'length'
        getMember
        subtract
        push 1
        initArray
        setMember
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label7
        push r:this, '5Gr1)', TRUE
        setMember
       label7:
        push r:5
        return
      end // of function 

      setMember
      push r:1, 'unshift'
      function2 (r:3='((') (r:1='this', r:2='super')
        push r:'((', r:this, 2, '(Ip9A'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label8
        push r:this, '5Gr1)', TRUE
        setMember
       label8:
      end // of function 

      setMember
      push r:1, '36}9L('
      function2 () (r:1='this')
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label9
        push r:this, '5Gr1)', TRUE
        setMember
       label9:
        push r:this, '5Gr1)'
        getMember
        return
      end // of function 

      setMember
      push '0y)Lk', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 'splice'
      getMember
      setVariable
      push ']]*Q1(', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 'pop'
      getMember
      setVariable
      push '=dbLP', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 'shift'
      getMember
      setVariable
      push '(Ip9A', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 'unshift'
      getMember
      setVariable
      push '7EyYf', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 'push'
      getMember
      setVariable
      push ']u-*A'
      function2 (r:2='0', r:3='((', r:4=')(') (r:1='this')
        push r:this, '+-(0', r:'0'
        setMember
        push r:this, '}J', '=(,aA'
        getVariable
        push '97;Se'
        getMember
        push '1H+_(', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push 17, 1, r:this, '0 -}=('
        callMethod
        pop
        push r:this, '+[', 0
        setMember
        push r:this, '5R', r:'(('
        setMember
        push r:this, '6R', r:')('
        setMember
        push r:this, ']', 0
        setMember
        push r:this, '[b', 0
        setMember
        push r:this, ']b', 0
        setMember
        push r:this, '+[', 0
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '0 -}=('
      function2 (r:2='[') (r:1='this')
        push r:this, 'size', r:'[', 1
        initArray
        setMember
        push r:this, '}J'
        getMember
        push '_xscale', r:'['
        setMember
        push r:this, '}J'
        getMember
        push '_yscale', r:'['
        setMember
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this')
        push '=(,aA'
        getVariable
        push '=Y7h]'
        getMember
        push 'pop', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:2
        pop
        push r:2, '_x', r:this, '5R'
        getMember
        setMember
        push r:2, '_y', r:this, '6R'
        getMember
        setMember
        push r:2, '_xscale', r:this, 'size'
        getMember
        push 0
        getMember
        setMember
        push r:2, '_yscale', r:this, 'size'
        getMember
        push 0
        getMember
        setMember
        push 0, r:this, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '[mPC=('
      function2 () (r:1='this')
        push '=(,aA'
        getVariable
        push '=Y7h]'
        getMember
        push 'pop', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:2
        pop
        push r:2, '_x', r:this, '5R'
        getMember
        setMember
        push r:2, '_y', r:this, '6R'
        getMember
        setMember
        push r:2, '_xscale', r:this, 'size'
        getMember
        push 0
        getMember
        setMember
        push r:2, '_yscale', r:this, 'size'
        getMember
        push 0
        getMember
        setMember
        push r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$k', r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$k'
        getMember
        increment
        setMember
        push r:this, 'size'
        getMember
        push 0
        getMember
        push r:this, 'size'
        getMember
        push 0
        getMember
        multiply
        push 3
        divide
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        setRegister r:3
        pop
        push r:3, 17
        lessThan
        not
        branchIfTrue label10
        push 0, r:this, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, 1, r:this, '+-(0'
        getMember
        push '6evY-('
        getMember
        push 'remove'
        callMethod
        pop
        push UNDEF
        return
       label10:
        push r:this, '[b'
        getMember
        push r:this, '[b'
        getMember
        multiply
        push r:this, ']b'
        getMember
        push r:this, ']b'
        getMember
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        setRegister r:4
        pop
        push r:this, '[b'
        getMember
        setRegister r:5
        pop
        push r:this, '[b', 0, r:this, ']b'
        getMember
        subtract
        push r:4, 2
        add
        multiply
        push r:4
        divide
        setMember
        push r:this, ']b', r:5, r:4, 2
        add
        multiply
        push r:4
        divide
        setMember
        push r:this, '[b'
        getMember
        push r:this, ']b'
        getMember
        push 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        setRegister r:6
        pop
        push r:6, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:3
        multiply
        push 2
        divide
        setRegister r:7
        pop
        push r:6, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:3
        multiply
        push 2
        divide
        setRegister r:8
        pop
        push r:this, '6R'
        getMember
        push r:8
        subtract
        push r:this, '5R'
        getMember
        push r:7
        subtract
        push r:this, '+-(0'
        getMember
        push 3, ']u-*A'
        new
        setRegister r:9
        pop
        push r:this, '5R', r:this, '5R'
        getMember
        push r:7
        add
        setMember
        push r:this, '6R', r:this, '6R'
        getMember
        push r:8
        add
        setMember
        push r:3, 1, r:9, '0 -}=('
        callMethod
        pop
        push r:9, '[b', 0, r:this, '[b'
        getMember
        subtract
        setMember
        push r:9, ']b', 0, r:this, ']b'
        getMember
        subtract
        setMember
        push r:3, 1, r:this, '0 -}=('
        callMethod
        pop
        push r:9, 1, r:this, '+-(0'
        getMember
        push '6evY-('
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '}J'
        getMember
        push '_x', r:this, '5R'
        getMember
        setMember
        push r:this, '}J'
        getMember
        push '_y', r:this, '6R'
        getMember
        setMember
        push r:9, '}J'
        getMember
        push '_x', r:9, '5R'
        getMember
        setMember
        push r:9, '}J'
        getMember
        push '_y', r:9, '6R'
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 (r:2='{2') (r:1='this')
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.98, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:3
        pop
        push r:this, '[b', r:this, '[b'
        getMember
        push r:3
        multiply
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:3
        multiply
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push ']u-*A'
        getVariable
        push '2M_}f'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '5R', r:this, '5R'
        getMember
        push r:'{2', r:this, '[b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        add
        setMember
        push r:this, '6R', r:this, '6R'
        getMember
        push r:this, ']b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '6R'
        getMember
        push r:this, 'size'
        getMember
        push 0
        getMember
        push 2
        divide
        lessThan
        not
        branchIfTrue label11
        push r:this, '6R', r:this, 'size'
        getMember
        push 0
        getMember
        push 2
        divide
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        setMember
       label11:
        push r:this, '6R'
        getMember
        push '=(,aA'
        getVariable
        push '2BSU'
        getMember
        push r:this, 'size'
        getMember
        push 0
        getMember
        push 2
        divide
        subtract
        greaterThan
        not
        branchIfTrue label12
        push r:this, '6R', '=(,aA'
        getVariable
        push '2BSU'
        getMember
        push r:this, 'size'
        getMember
        push 0
        getMember
        push 2
        divide
        subtract
        setMember
        push r:this, ']b', 0, r:this, ']b'
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        subtract
        setMember
       label12:
        push r:this, '5R'
        getMember
        push r:this, 'size'
        getMember
        push 0
        getMember
        push 2
        divide
        lessThan
        not
        branchIfTrue label13
        push r:this, '5R', r:this, 'size'
        getMember
        push 0
        getMember
        push 2
        divide
        setMember
        push r:this, '[b', r:this, '[b'
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        setMember
       label13:
        push r:this, '5R'
        getMember
        push r:this, 'size'
        getMember
        push 0
        getMember
        push r:this, 'size'
        getMember
        push 0
        getMember
        push 2
        divide
        add
        lessThan
        not
        branchIfTrue label14
        push r:this, '[b', r:this, '[b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push ']u-*A'
        getVariable
        push '=M_Rb'
        getMember
        multiply
        add
        setMember
       label14:
        push r:this, '6R'
        getMember
        push '=(,aA'
        getVariable
        push '2BSU'
        getMember
        push r:this, 'size'
        getMember
        push 0
        getMember
        subtract
        greaterThan
        not
        branchIfTrue label15
        push r:this, ']b', r:this, ']b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push ']u-*A'
        getVariable
        push '=M_Rb'
        getMember
        multiply
        subtract
        setMember
        branch label16
       label15:
        push r:this, '6R'
        getMember
        push r:this, 'size'
        getMember
        push 0
        getMember
        lessThan
        not
        branchIfTrue label16
        push r:this, ']b', r:this, ']b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push ']u-*A'
        getVariable
        push '=M_Rb'
        getMember
        multiply
        add
        setMember
       label16:
        push 0
        setRegister r:4
        pop
        branch label18
       label17:
        push r:4
        increment
        setRegister r:4
        pop
       label18:
        push r:4, r:this, '+-(0'
        getMember
        push '6evY-('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label21
        push r:this, '+-(0'
        getMember
        push '6evY-('
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push r:5, r:this
        equals
        not
        not
        branchIfTrue label20
        push r:5, '5R'
        getMember
        push r:this, '5R'
        getMember
        subtract
        setRegister r:6
        pop
        push r:5, '6R'
        getMember
        push r:this, '6R'
        getMember
        subtract
        setRegister r:7
        pop
        push r:6, r:6
        multiply
        push r:7, r:7
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        setRegister r:8
        pop
        push r:5, 'size'
        getMember
        push 0
        getMember
        push r:this, 'size'
        getMember
        push 0
        getMember
        add
        setRegister r:9
        pop
        push r:8, r:9, 2
        divide
        lessThan
        not
        branchIfTrue label20
        push r:5, 'size'
        getMember
        push 0
        getMember
        push r:this, 'size'
        getMember
        push 0
        getMember
        greaterThan
        not
        branchIfTrue label19
        push r:this, '[b', r:5, '[b'
        getMember
        setMember
        push r:this, ']b', r:5, ']b'
        getMember
        setMember
        push r:this, '5R', r:5, '5R'
        getMember
        setMember
        push r:this, '6R', r:5, '6R'
        getMember
        setMember
       label19:
        push r:this, '+[', 5
        setMember
        push r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$f', r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$f'
        getMember
        increment
        setMember
        push r:this, 'size'
        getMember
        push 0
        getMember
        push r:this, 'size'
        getMember
        push 0
        getMember
        multiply
        push r:5, 'size'
        getMember
        push 0
        getMember
        push r:5, 'size'
        getMember
        push 0
        getMember
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        push 1, r:this, '0 -}=('
        callMethod
        pop
        push r:5, 'size', r:this, 'size'
        getMember
        push 0
        getMember
        push 1
        initArray
        setMember
        push r:5, '5R', r:this, '5R'
        getMember
        setMember
        push r:5, '6R', r:this, '6R'
        getMember
        setMember
        push 0, r:5, '9T54'
        callMethod
        pop
        push 1, r:4, r:4
        decrement
        setRegister r:4
        pop
        push 2, r:this, '+-(0'
        getMember
        push '6evY-('
        getMember
        push 'splice'
        callMethod
        pop
       label20:
        branch label17
       label21:
        push r:this, '[b'
        getMember
        push r:this, ']b'
        getMember
        push 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        setRegister r:10
        pop
        push 2, r:this, '[b'
        getMember
        push r:this, '[b'
        getMember
        multiply
        push r:this, ']b'
        getMember
        push r:this, ']b'
        getMember
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:11
        pop
        push r:this, ']', r:this, ']'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push r:this, '+['
        getMember
        multiply
        push 10
        divide
        add
        setMember
        push r:this, '+[', r:this, '+['
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.95, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        setMember
        push r:this, '+['
        getMember
        push 1
        lessThan
        not
        branchIfTrue label22
        push r:this, '+[', 1
        setMember
       label22:
        push r:this, 'size'
        getMember
        push 0
        getMember
        push r:this, '+['
        getMember
        multiply
        push 20
        divide
        setRegister r:12
        pop
        push r:this, '}J'
        getMember
        push '_xscale', r:this, 'size'
        getMember
        push 0
        getMember
        push r:10, r:this, ']'
        getMember
        add
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:12
        multiply
        add
        setMember
        push r:this, '}J'
        getMember
        push '_yscale', r:this, 'size'
        getMember
        push 0
        getMember
        push r:10, r:this, ']'
        getMember
        add
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:12
        multiply
        add
        setMember
        push r:this, '}J'
        getMember
        push '_x', r:this, '5R'
        getMember
        setMember
        push r:this, '}J'
        getMember
        push '_y', r:this, '6R'
        getMember
        setMember
      end // of function 

      setMember
      push r:0, '2M_}f', 0.01
      setMember
      push r:0, '=M_Rb', 0.3
      setMember
      push '=(,aA'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '3d0fx', 0
      setMember
      push r:0, '97;Se', 2
      setMember
      push r:0, '*h0p]', 2
      setMember
      push r:0, '8zzlV', 1
      setMember
      push r:0, '=Y7h]', 3
      setMember
      push r:0, '2BSU', 320
      setMember
      push r:0, '98Ctu', 1000, 500, 200, 3
      initArray
      push 1, ';ndCG'
      getVariable
      push '*G6KR'
      callMethod
      setMember
      push '2o'
      function2 (r:2='0') (r:1='this')
        push r:this, '+-(0', r:'0'
        setMember
        push r:this, ';+', '=(,aA'
        getVariable
        push '3d0fx'
        getMember
        push ')9*', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '(9*', '=(,aA'
        getVariable
        push '3d0fx'
        getMember
        push '(9*', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, ')9*', '=(,aA'
        getVariable
        push '3d0fx'
        getMember
        push ' 9*', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, ';+'
        getMember
        push 'onMouseMove', ',}K0C(', r:this, '+-(0'
        getMember
        push 2, '3Wt'
        getVariable
        push 'callback'
        callMethod
        setMember
        push r:this, ';+'
        getMember
        push 'onPress', TRUE, ' (sy3', r:this, '+-(0'
        getMember
        push 3, '3Wt'
        getVariable
        push 'callback'
        callMethod
        setMember
        push r:this, ';+'
        getMember
        push 'onRelease', FALSE, ' (sy3', r:this, '+-(0'
        getMember
        push 3, '3Wt'
        getVariable
        push 'callback'
        callMethod
        setMember
        push r:this, ';+'
        getMember
        push 'onReleaseOutside', FALSE, ' (sy3', r:this, '+-(0'
        getMember
        push 3, '3Wt'
        getVariable
        push 'callback'
        callMethod
        setMember
        push r:this, ';+'
        getMember
        push 'useHandCursor', FALSE
        setMember
        push r:this, ';+'
        getMember
        push 1, ';ndCG'
        getVariable
        push '7vdL6('
        callMethod
        pop
        push r:this, '9Q5w3', 0
        setMember
        push r:this, ';Q5w3', 0
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 (r:2='{2') (r:1='this')
        push '=(,aA'
        getVariable
        push '2BSU'
        getMember
        push 300
        subtract
        setRegister r:3
        pop
        push r:this, '+-(0'
        getMember
        push '4,01'
        getMember
        push '6R'
        getMember
        push 110
        lessThan
        not
        branchIfTrue label23
        push 0
        setRegister r:4
        pop
        branch label25
       label23:
        push r:this, '+-(0'
        getMember
        push '4,01'
        getMember
        push '6R'
        getMember
        push 210
        greaterThan
        not
        branchIfTrue label24
        push r:3
        setRegister r:4
        pop
        branch label25
       label24:
        push r:3, 210, r:this, '+-(0'
        getMember
        push '4,01'
        getMember
        push '6R'
        getMember
        subtract
        push r:3
        multiply
        push 100
        divide
        subtract
        setRegister r:4
        pop
       label25:
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.95, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:5
        pop
        push r:this, ';Q5w3', r:this, ';Q5w3'
        getMember
        push r:5
        multiply
        push r:4, 1, r:5
        subtract
        multiply
        add
        setMember
        push r:this, '9Q5w3', r:this, '9Q5w3'
        getMember
        push r:'{2', 2
        multiply
        subtract
        setMember
        push r:this, ')9*'
        getMember
        push '_alpha'
        getMember
        push 100
        equals
        not
        dup
        branchIfTrue label26
        pop
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 1.3
        greaterThan
       label26:
        not
        branchIfTrue label27
        push r:this, ')9*'
        getMember
        push '_alpha', r:this, ')9*'
        getMember
        push '_alpha'
        getMember
        push 10, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        setMember
        push r:this, ')9*'
        getMember
        push '_alpha'
        getMember
        push 0
        greaterThan
        not
        not
        branchIfTrue label27
        push 0, r:this, ')9*'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
       label27:
        push r:this, ';+'
        getMember
        push '_x', 0, r:this, '9Q5w3'
        getMember
        subtract
        push r:this, ';+'
        getMember
        push '_width'
        getMember
        push 2
        divide
        modulo
        setMember
        push r:this, '(9*'
        getMember
        push '_x', 0, r:this, '9Q5w3'
        getMember
        push 1.5
        multiply
        subtract
        push r:this, '(9*'
        getMember
        push '_width'
        getMember
        push 2
        divide
        modulo
        setMember
        push r:this, ')9*'
        getMember
        push '_x', 0, r:this, '9Q5w3'
        getMember
        push 1.5
        multiply
        push 1.5
        multiply
        subtract
        push r:this, ')9*'
        getMember
        push '_width'
        getMember
        push 2
        divide
        modulo
        setMember
        push r:this, '+-(0'
        getMember
        push '}J'
        getMember
        push '_y', 0, r:this, ';Q5w3'
        getMember
        subtract
        setMember
        push r:this, '+-(0'
        getMember
        push '}J'
        getMember
        push '_y', 0, r:this, ';Q5w3'
        getMember
        subtract
        setMember
      end // of function 

      setMember
      push ',i0 ['
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push '+7U K'
      function2 (r:2='}J') (r:1='this')
        push r:this, ')2fr3', r:'}J'
        setMember
        push r:this, '}Zms3', 0, 'Array'
        new
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, ']1sj+'
      function2 () (r:1='this')
        push r:this, ')2fr3'
        getMember
        return
      end // of function 

      setMember
      push r:1, '-fC3a'
      function2 (r:2='59F') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'59F'
        getMember
        setRegister r:3
        pop
        push r:3, NULL
        equals
        not
        branchIfTrue label28
        push '9oK', 0, 'Array'
        new
        push '7-,', 0, 2
        initObject
        setRegister r:3
        pop
        push r:this, '}Zms3'
        getMember
        push r:'59F', r:3
        setMember
       label28:
        push r:3
        return
      end // of function 

      setMember
      push r:1, ']bu40'
      function2 (r:2='[-99') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'[-99'
        getMember
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:7
        pop
        push r:'[-99', 1000
        multiply
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label30
       label29:
        push r:6
        increment
        setRegister r:6
        pop
       label30:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label32
        push r:4, r:6
        getMember
        push '_name'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label31
        push r:8, r:7
        add
        push 1, r:4, r:6
        getMember
        push 'swapDepths'
        callMethod
        pop
        push r:4, r:7, r:4, r:6
        getMember
        setMember
        push r:7
        increment
        setRegister r:7
        pop
       label31:
        branch label29
       label32:
        push r:3, '7-,', r:7
        setMember
      end // of function 

      setMember
      push r:1, '*=_p_'
      function2 (r:2='*KB2', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label33
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'*KB2', 2, r:this, '*=_p_'
        callMethod
        return
       label33:
        push r:6, r:'[-99', 1000
        multiply
        add
        push r:'*KB2', r:this, ')2fr3'
        getMember
        push 3, '3Wt'
        getVariable
        push 'attachMC'
        callMethod
        setRegister r:7
        pop
        push r:5, r:6, r:7
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:7
        return
      end // of function 

      setMember
      push r:1, '18wU*'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push r:5, 1000
        equals
        not
        branchIfTrue label34
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', 1, r:this, '18wU*'
        callMethod
        return
       label34:
        push r:5, r:'[-99', 1000
        multiply
        add
        push r:this, ')2fr3'
        getMember
        push 2, '3Wt'
        getVariable
        push 'createEmptyMC'
        callMethod
        setRegister r:6
        pop
        push r:4, r:5, r:6
        setMember
        push r:3, '7-,', r:3, '7-,'
        getMember
        increment
        setMember
        push r:6
        return
      end // of function 

      setMember
      push r:1, '(GbB}'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label35
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        return
       label35:
        push r:5, r:6, r:'}J'
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:6, r:'[-99', 1000
        multiply
        add
        return
      end // of function 

      setMember
      push r:1, '+2NA'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        push 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, r:'[-99'
        equals
        not
        branchIfTrue label36
        push UNDEF
        return
       label36:
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:5, '7-,'
        getMember
        setRegister r:7
        pop
        push 0
        setRegister r:8
        pop
        branch label38
       label37:
        push r:8
        increment
        setRegister r:8
        pop
       label38:
        push r:8, r:7
        lessThan
        not
        branchIfTrue label40
        push r:6, r:8
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label39
        push r:6, r:8, NULL
        setMember
        branch label40
       label39:
        branch label37
       label40:
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}oQA7'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label41
        push r:6, r:7, NULL
        setMember
        push r:'}J', 1, r:6, 'unshift'
        callMethod
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label41:
      end // of function 

      setMember
      push r:1, '08M8'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label43
        push r:6, r:7, NULL
        setMember
        push r:5, '7-,'
        getMember
        push 1000
        equals
        not
        branchIfTrue label42
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label42:
        push r:5, '7-,'
        getMember
        setRegister r:3
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:3, r:4, 1000
        multiply
        add
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
        push r:6, r:3, r:'}J'
        setMember
       label43:
      end // of function 

      setMember
      push r:1, 'clear'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:4
        pop
        branch label45
       label44:
        push r:4
        increment
        setRegister r:4
        pop
       label45:
        push r:4, r:3, '7-,'
        getMember
        lessThan
        not
        branchIfTrue label46
        push 0, r:5, r:4
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label44
       label46:
        push r:3, '7-,', 0
        setMember
      end // of function 

      setMember
      push r:1, '9(K ;'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push -99999999
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label48
       label47:
        push r:6
        increment
        setRegister r:6
        pop
       label48:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label56
        push r:4, r:6
        getMember
        setRegister r:9
        pop
        push r:9, '_y'
        getMember
        setRegister r:10
        pop
        push r:10, r:8
        lessThan
        not
        not
        branchIfTrue label49
        push r:10
        setRegister r:8
        pop
        branch label55
       label49:
        push r:6
        setRegister r:7
        pop
        branch label51
       label50:
        push r:7
        decrement
        setRegister r:7
        pop
       label51:
        push r:7, 0
        greaterThan
        not
        branchIfTrue label54
        push r:4, r:7, 1
        subtract
        getMember
        setRegister r:11
        pop
        push r:11, '_y'
        getMember
        push r:10
        greaterThan
        not
        branchIfTrue label52
        push r:4, r:7, r:11
        setMember
        push r:11, 1, r:9, 'swapDepths'
        callMethod
        pop
        branch label53
       label52:
        push r:4, r:7, r:9
        setMember
        branch label54
       label53:
        branch label50
       label54:
        push r:7, 0
        equals
        not
        branchIfTrue label55
        push r:4, 0, r:9
        setMember
       label55:
        branch label47
       label56:
      end // of function 

      setMember
      push r:1, ',}2X ('
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label58
       label57:
        push r:2
        increment
        setRegister r:2
        pop
       label58:
        push r:2, r:this, '}Zms3'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label59
        push r:2, 1, r:this, 'clear'
        callMethod
        pop
        branch label57
       label59:
      end // of function 

      setMember
      push ';jo'
      function2 (r:2='0', r:3='2', r:4='((', r:5=')(') (r:1='this')
        push r:this, '*B', r:'2'
        setMember
        push r:this, '(', 360, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 'Math'
        getVariable
        push 'PI'
        getMember
        divide
        setMember
        push r:this, '+-(0', r:'0'
        setMember
        push r:this, '+Se)3', 0
        setMember
        push r:this, '}J', '=(,aA'
        getVariable
        push '8zzlV'
        getMember
        push '4,F', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '*B'
        getMember
        push 1
        add
        toString
        push 1, r:this, '}J'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '5R', r:'(('
        setMember
        push r:this, '6R', r:')('
        setMember
        push r:this, '}J'
        getMember
        push '_x', r:'(('
        setMember
        push r:this, '}J'
        getMember
        push '_y', r:')('
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '=E;uK('
      function2 (r:2='4') (r:1='this')
        push '=(,aA'
        getVariable
        push '=Y7h]'
        getMember
        push '*J)0E', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:3
        pop
        push r:3, '_x', r:this, '5R'
        getMember
        setMember
        push r:3, '_y', r:this, '6R'
        getMember
        setMember
        push 0, r:this, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$bo'
        getMember
        push r:'4', r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$bo'
        getMember
        push r:'4'
        getMember
        increment
        setMember
        push '=(,aA'
        getVariable
        push '98Ctu'
        getMember
        push r:'4'
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push r:this, '+-(0'
        getMember
        push '5QPXw', r:this, '+-(0'
        getMember
        push '5QPXw'
        getMember
        push 0
        getMember
        decrement
        push 1
        initArray
        setMember
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 (r:2='9JLSy') (r:1='this')
        push r:this, '5R', r:this, '5R'
        getMember
        push r:'9JLSy'
        add
        setMember
        push r:this, '}J'
        getMember
        push '_x', r:this, '5R'
        getMember
        setMember
        push 10
        setRegister r:3
        pop
        push r:this, '*B'
        getMember
        push 2
        equals
        not
        branchIfTrue label60
        push r:3, 50
        add
        setRegister r:3
        pop
        branch label61
       label60:
        push r:this, '*B'
        getMember
        push 1
        equals
        not
        branchIfTrue label61
        push r:3, 10
        add
        setRegister r:3
        pop
       label61:
        push r:this, '5R'
        getMember
        push 0, r:3
        subtract
        lessThan
        not
        branchIfTrue label62
        push 0, r:this, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push FALSE
        return
       label62:
        push r:this, '+-(0'
        getMember
        push '6evY-('
        getMember
        setRegister r:5
        pop
        push r:5, 'length'
        getMember
        setRegister r:6
        pop
        push r:this, '*B'
        getMember
        push 1
        equals
        not
        branchIfTrue label63
        push 50
        branch label65
       label63:
        push r:this, '*B'
        getMember
        push 3
        lessThan
        not
        not
        branchIfTrue label64
        push 34
        branch label65
       label64:
        push 30
       label65:
        setRegister r:7
        pop
        push r:this, '*B'
        getMember
        push 2
        lessThan
        not
        not
        branchIfTrue label66
        push 13
        branch label67
       label66:
        push 7
       label67:
        setRegister r:8
        pop
        push 0
        setRegister r:9
        pop
        push 0
        setRegister r:10
        pop
        push r:this, '*B'
        getMember
        push 2
        equals
        not
        branchIfTrue label68
        push r:this, '(', r:this, '('
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 50
        divide
        add
        setMember
        push r:this, '('
        getMember
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push 50
        multiply
        setRegister r:9
        pop
        push r:this, '('
        getMember
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push 50
        multiply
        setRegister r:10
        pop
        push r:this, '5R', r:this, '5R'
        getMember
        push r:9
        add
        setMember
        push r:this, '6R', r:this, '6R'
        getMember
        push r:10
        add
        setMember
        push r:this, '}J'
        getMember
        push '0tJ'
        getMember
        push '_x', r:9
        setMember
        push r:this, '}J'
        getMember
        push '0tJ'
        getMember
        push '_y', r:10
        setMember
       label68:
        push 0
        setRegister r:4
        pop
        branch label70
       label69:
        push r:4
        increment
        setRegister r:4
        pop
       label70:
        push r:4, r:6
        lessThan
        not
        branchIfTrue label78
        push r:5, r:4
        getMember
        setRegister r:11
        pop
        push r:11, '5R'
        getMember
        push r:this, '5R'
        getMember
        subtract
        setRegister r:12
        pop
        push r:11, 'size'
        getMember
        push 0
        getMember
        push 2
        divide
        setRegister r:13
        pop
        push r:12, r:7, r:13
        add
        lessThan
        dup
        not
        branchIfTrue label71
        pop
        push r:12, 0, r:7
        subtract
        push r:13
        subtract
        greaterThan
       label71:
        not
        branchIfTrue label77
        push r:11, '6R'
        getMember
        push r:this, '6R'
        getMember
        subtract
        setRegister r:14
        pop
        push r:12, r:12
        multiply
        push r:14, r:14
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        setRegister r:15
        pop
        push r:15, r:13, r:8
        add
        lessThan
        not
        branchIfTrue label75
        push r:this, '*B'
        getMember
        setRegister r:0
        push 3
        strictEquals
        branchIfTrue label72
        push r:0, 4
        strictEquals
        branchIfTrue label72
        push r:0, 5
        strictEquals
        branchIfTrue label72
        branch label73
       label72:
        push r:this, '*B'
        getMember
        push 3
        subtract
        push 1, r:this, '=E;uK('
        callMethod
        pop
        branch label74
       label73:
        push 0, r:11, '[mPC=('
        callMethod
        pop
        push r:this, 1, r:this, '+-(0'
        getMember
        push '0{KS0'
        getMember
        push 'push'
        callMethod
        pop
        branch label74
       label74:
        push FALSE
        return
        branch label77
       label75:
        push r:15, r:13, r:7
        add
        lessThan
        not
        branchIfTrue label77
        push r:this, '*B'
        getMember
        push 1
        equals
        not
        branchIfTrue label76
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 10
        multiply
        push r:15, r:15
        multiply
        divide
        setRegister r:16
        pop
        push r:11, '[b', r:11, '[b'
        getMember
        push r:12, r:16
        multiply
        add
        setMember
        push r:11, ']b', r:11, ']b'
        getMember
        push r:14, r:16
        multiply
        add
        setMember
       label76:
        push r:this, '+Se)3', r:this, '+Se)3'
        getMember
        push 2, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '+Se)3'
        getMember
        push 25
        greaterThan
        not
        branchIfTrue label77
        push r:this, '+Se)3', 25
        setMember
       label77:
        branch label69
       label78:
        push r:this, '5R', r:this, '5R'
        getMember
        push r:9
        subtract
        setMember
        push r:this, '6R', r:this, '6R'
        getMember
        push r:10
        subtract
        setMember
        push r:this, '+Se)3'
        getMember
        push 1
        greaterThan
        dup
        not
        branchIfTrue label79
        pop
        push r:this, '*B'
        getMember
        push 1
        equals
       label79:
        not
        branchIfTrue label83
        push r:this, '+Se)3'
        getMember
        push 25
        equals
        not
        branchIfTrue label80
        push '2'
        branch label81
       label80:
        push '1'
       label81:
        push 1, r:this, '}J'
        getMember
        push '0tJ'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '+Se)3'
        getMember
        push 25
        equals
        not
        not
        branchIfTrue label82
        push r:this, '}J'
        getMember
        push '0tJ'
        getMember
        push '_rotation', r:this, '}J'
        getMember
        push '0tJ'
        getMember
        push '_rotation'
        getMember
        push r:this, '+Se)3'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label82:
        push r:this, '+Se)3', r:this, '+Se)3'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.95, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        setMember
       label83:
        push TRUE
        return
      end // of function 

      setMember
      push r:1, '=[q8n'
      function2 (r:2='9JLSy') (r:1='this')
        push r:this, '5R', r:this, '5R'
        getMember
        push r:'9JLSy'
        add
        setMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.7, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:3
        pop
        push r:this, '}J'
        getMember
        push '_xscale', r:this, '}J'
        getMember
        push '_xscale'
        getMember
        push r:3
        multiply
        setMember
        push r:this, '}J'
        getMember
        push '_yscale', r:this, '}J'
        getMember
        push '_yscale'
        getMember
        push r:3
        multiply
        setMember
        push r:this, '}J'
        getMember
        push '_xscale'
        getMember
        push 10
        greaterThan
        not
        not
        branchIfTrue label84
        push 0, r:this, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push FALSE
        return
       label84:
        push r:this, '}J'
        getMember
        push '_x', r:this, '5R'
        getMember
        setMember
        push TRUE
        return
      end // of function 

      setMember
      push 'flash'
      getVariable
      not
      not
      branchIfTrue label85
      push 'flash', 0, 'Object'
      new
      setVariable
     label85:
      push 'flash'
      getVariable
      push '3[4k{'
      getMember
      not
      not
      branchIfTrue label86
      push 'flash'
      getVariable
      push '3[4k{', 0, 'Object'
      new
      setMember
     label86:
      push 'flash'
      getVariable
      push '3[4k{'
      getMember
      push '{lN=R'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setMember
      push '{-kxL'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '87vE7('
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '4plQ5', '{-kxL'
        getVariable
        push '4plQ5'
        getMember
        increment
        setMember
        push 0, '3Wt'
        getVariable
        push 'getTimer'
        callMethod
        setRegister r:2
        pop
        push '{-kxL'
        getVariable
        push ';ILSy', r:2, '{-kxL'
        getVariable
        push '3R,QM'
        getMember
        subtract
        push 1000.0
        divide
        setMember
        push '{-kxL'
        getVariable
        push '3R,QM', r:2
        setMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        push '{-kxL'
        getVariable
        push ';y}-6('
        getMember
        lessThan
        not
        branchIfTrue label87
        push '{-kxL'
        getVariable
        push '-)Xd+', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        push '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        multiply
        push 1, '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        subtract
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        multiply
        add
        setMember
        branch label88
       label87:
        push '{-kxL'
        getVariable
        push ';ILSy', 1, '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        divide
        setMember
       label88:
        push '{-kxL'
        getVariable
        push '-V;B', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        setMember
      end // of function 

      setMember
      push r:0, 'fps'
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        return
      end // of function 

      setMember
      push r:0, '6GI,F', 32
      setMember
      push r:0, ';y}-6(', 0.5
      setMember
      push r:0, '3R,QM', 0, '3Wt'
      getVariable
      push 'getTimer'
      callMethod
      setMember
      push r:0, '[Ad;n', 0.95
      setMember
      push r:0, '-)Xd+', 1
      setMember
      push r:0, '-V;B', 1
      setMember
      push r:0, ';ILSy', 1
      setMember
      push r:0, '4plQ5', 0
      setMember
      push '=3+P'
      function2 (r:2='0') (r:1='this')
        push r:this, ';8,PR', FALSE
        setMember
        push r:this, '+-(0', r:'0'
        setMember
        push r:this, ' IWA+', 0
        setMember
        push r:this, '}Yax5', 0, 1
        initArray
        setMember
        push r:this, '3u(', 0
        setMember
        push r:this, ';myEu', 0
        setMember
        push r:this, '}D4i3', 0, 'Array'
        new
        setMember
        push r:this, '}J', '=(,aA'
        getVariable
        push '*h0p]'
        getMember
        push '4,01', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '-mR,', '=(,aA'
        getVariable
        push '*h0p]'
        getMember
        push '-mR,', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '2[', r:this, '+-(0'
        getMember
        push '}J'
        getMember
        push '_xmouse'
        getMember
        setMember
        push r:this, '3[', r:this, '+-(0'
        getMember
        push '}J'
        getMember
        push '_ymouse'
        getMember
        setMember
        push r:this, '5R', r:this, '2['
        getMember
        push 1
        add
        setMember
        push r:this, '6R', r:this, '3['
        getMember
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '}fC=K'
      function2 (r:2='(', r:3=')') (r:1='this')
        push r:'(', r:')'
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push 'Math'
        getVariable
        push 'PI'
        getMember
        greaterThan
        not
        branchIfTrue label90
        push r:')', r:'('
        lessThan
        not
        branchIfTrue label89
        push r:')', 'Math'
        getVariable
        push 'PI'
        getMember
        push 2
        multiply
        add
        setRegister r:')'
        pop
        branch label90
       label89:
        push r:')', 'Math'
        getVariable
        push 'PI'
        getMember
        push 2
        multiply
        subtract
        setRegister r:')'
        pop
       label90:
        push r:'(', r:')'
        add
        push 2
        divide
        setRegister r:'('
        pop
       label91:
        push r:'(', 'Math'
        getVariable
        push 'PI'
        getMember
        greaterThan
        not
        not
        branchIfTrue label92
        push r:'(', 'Math'
        getVariable
        push 'PI'
        getMember
        push 2
        multiply
        add
        setRegister r:'('
        pop
        branch label91
       label92:
        push r:'(', 'Math'
        getVariable
        push 'PI'
        getMember
        greaterThan
        not
        branchIfTrue label93
        push r:'(', 'Math'
        getVariable
        push 'PI'
        getMember
        push 2
        multiply
        subtract
        setRegister r:'('
        pop
        branch label92
       label93:
        push r:'('
        return
      end // of function 

      setMember
      push r:1, '5CMYr'
      function2 () (r:1='this')
        push r:this, ';8,PR'
        getMember
        dup
        branchIfTrue label94
        pop
        push 'Key'
        getVariable
        push 'SPACE'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
       label94:
        setRegister r:2
        pop
        push r:this, ';myEu', r:this, ';myEu'
        getMember
        push r:2
        not
        branchIfTrue label95
        push '=3+P'
        getVariable
        push 'pow'
        getMember
        push 30
        multiply
        branch label96
       label95:
        push 0
       label96:
        add
        push 2
        divide
        setMember
        push r:2
        dup
        not
        branchIfTrue label97
        pop
        push 2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
       label97:
        not
        branchIfTrue label98
        push '=(,aA'
        getVariable
        push '=Y7h]'
        getMember
        push '[9 9', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:3
        pop
        push r:this, '3u('
        getMember
        push 100, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 50
        subtract
        push 200
        divide
        add
        setRegister r:4
        pop
        push 1, r:3, '_totalframes'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        add
        toString
        push 1, r:3, 'gotoAndStop'
        callMethod
        pop
        push r:3, '((', r:this, '5R'
        getMember
        push r:4, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push 20
        multiply
        add
        setMember
        push r:3, ')(', r:this, '6R'
        getMember
        push r:4, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push 20
        multiply
        add
        setMember
        push r:3, '[b', r:4, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:this, ';myEu'
        getMember
        multiply
        setMember
        push r:3, ']b', r:4, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:this, ';myEu'
        getMember
        multiply
        setMember
        push r:3, '[', 200
        setMember
        push r:3, 1, r:this, '}D4i3'
        getMember
        push 'push'
        callMethod
        pop
       label98:
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.97, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:6
        pop
        push 0
        setRegister r:5
        pop
        branch label100
       label99:
        push r:5
        increment
        setRegister r:5
        pop
       label100:
        push r:5, r:this, '}D4i3'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label103
        push r:this, '}D4i3'
        getMember
        push r:5
        getMember
        setRegister r:7
        pop
        push r:7, '[', r:7, '['
        getMember
        push 20, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:7, '_rotation', r:7, '_rotation'
        getMember
        push 20, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:7, '_alpha', r:7, '_alpha'
        getMember
        push 5, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        setMember
        push r:7, '_alpha'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label101
        push 0, r:7, 'removeMovieClip'
        callMethod
        pop
        push 1, r:5, r:5
        decrement
        setRegister r:5
        pop
        push 2, r:this, '}D4i3'
        getMember
        push 'splice'
        callMethod
        pop
        branch label102
       label101:
        push r:7, '((', r:7, '(('
        getMember
        push r:7, '[b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:7, ')(', r:7, ')('
        getMember
        push r:7, ']b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:7, '[b', r:7, '[b'
        getMember
        push r:6
        multiply
        setMember
        push r:7, ']b', r:7, ']b'
        getMember
        push r:6
        multiply
        setMember
        push r:7, '_x', r:7, '(('
        getMember
        setMember
        push r:7, '_y', r:7, ')('
        getMember
        setMember
        push r:7, '_xscale', r:7, '['
        getMember
        setMember
        push r:7, '_yscale', r:7, '['
        getMember
        setMember
       label102:
        branch label99
       label103:
      end // of function 

      setMember
      push r:1, '-J0h'
      function2 (r:2='6+', r:3='7+') (r:1='this')
       label104:
        push r:'6+', 0
        lessThan
        not
        branchIfTrue label105
        push r:'6+', 'Math'
        getVariable
        push 'PI'
        getMember
        push 2
        multiply
        add
        setRegister r:'6+'
        pop
        branch label104
       label105:
        push r:'7+', 0
        lessThan
        not
        branchIfTrue label106
        push r:'7+', 'Math'
        getVariable
        push 'PI'
        getMember
        push 2
        multiply
        add
        setRegister r:'7+'
        pop
        branch label105
       label106:
        push r:'6+', 2, 'Math'
        getVariable
        push 'PI'
        getMember
        multiply
        lessThan
        not
        not
        branchIfTrue label107
        push r:'6+', 'Math'
        getVariable
        push 'PI'
        getMember
        push 2
        multiply
        subtract
        setRegister r:'6+'
        pop
        branch label106
       label107:
        push r:'7+', 2, 'Math'
        getVariable
        push 'PI'
        getMember
        multiply
        lessThan
        not
        not
        branchIfTrue label108
        push r:'7+', 'Math'
        getVariable
        push 'PI'
        getMember
        push 2
        multiply
        subtract
        setRegister r:'7+'
        pop
        branch label107
       label108:
        push r:'6+', r:'7+'
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        setRegister r:4
        pop
        push r:4, 'Math'
        getVariable
        push 'PI'
        getMember
        lessThan
        not
        branchIfTrue label109
        push r:4
        return
       label109:
        push 'Math'
        getVariable
        push 'PI'
        getMember
        push 2
        multiply
        push r:4
        subtract
        return
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this')
        push 10
        setRegister r:2
        pop
        push 5
        setRegister r:3
        pop
        push 'Key'
        getVariable
        push 'LEFT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        dup
        not
        branchIfTrue label110
        pop
        push r:this, '2['
        getMember
        push 0
        greaterThan
       label110:
        not
        branchIfTrue label111
        push r:this, '2[', r:this, '2['
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push r:3
        multiply
        subtract
        setMember
       label111:
        push 'Key'
        getVariable
        push 'RIGHT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        dup
        not
        branchIfTrue label112
        pop
        push r:this, '2['
        getMember
        push 300
        lessThan
       label112:
        not
        branchIfTrue label113
        push r:this, '2[', r:this, '2['
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push r:3
        multiply
        add
        setMember
       label113:
        push 'Key'
        getVariable
        push 'UP'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        dup
        not
        branchIfTrue label114
        pop
        push r:this, '3['
        getMember
        push 0
        greaterThan
       label114:
        not
        branchIfTrue label115
        push r:this, '3[', r:this, '3['
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push r:3
        multiply
        subtract
        setMember
       label115:
        push 'Key'
        getVariable
        push 'DOWN'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        dup
        not
        branchIfTrue label116
        pop
        push r:this, '3['
        getMember
        push 300
        lessThan
       label116:
        not
        branchIfTrue label117
        push r:this, '3[', r:this, '3['
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push r:3
        multiply
        add
        setMember
       label117:
        push r:this, '2['
        getMember
        setRegister r:4
        pop
        push r:this, '3['
        getMember
        setRegister r:5
        pop
        push r:this, ';8,PR'
        getMember
        dup
        branchIfTrue label118
        pop
        push 'Key'
        getVariable
        push 'SPACE'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
       label118:
        setRegister r:6
        pop
        push r:this, '+-=)'
        getMember
        push NULL
        equals
        not
        push r:6
        equals
        not
        not
        branchIfTrue label120
        push r:6
        not
        branchIfTrue label119
        push r:this, '+-=)', '=(,aA'
        getVariable
        push '*h0p]'
        getMember
        push '+-=)', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '-mR,'
        getMember
        push 1, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '08M8'
        callMethod
        pop
        branch label120
       label119:
        push 0, r:this, '+-=)'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, '+-=)', NULL
        setMember
       label120:
        push 50
        setRegister r:8
        pop
        push NULL
        setRegister r:9
        pop
        push '=3+P'
        getVariable
        push 'pow'
        getMember
        push 3, r:this, '+-(0'
        getMember
        push '}Yax5'
        getMember
        push 0
        getMember
        push r:this, '+-(0'
        getMember
        push '-g0L5'
        getMember
        push 0
        getMember
        subtract
        push r:this, '+-(0'
        getMember
        push '}Yax5'
        getMember
        push 0
        getMember
        divide
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        setRegister r:10
        pop
        push 0
        setRegister r:7
        pop
        branch label122
       label121:
        push r:7
        increment
        setRegister r:7
        pop
       label122:
        push r:7, r:this, '+-(0'
        getMember
        push '6evY-('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label126
        push r:this, '+-(0'
        getMember
        push '6evY-('
        getMember
        push r:7
        getMember
        setRegister r:11
        pop
        push r:11, '5R'
        getMember
        push r:this, '5R'
        getMember
        subtract
        setRegister r:12
        pop
        push r:11, '6R'
        getMember
        push r:this, '6R'
        getMember
        subtract
        setRegister r:13
        pop
        push r:12, r:12
        multiply
        push r:13, r:13
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        setRegister r:14
        pop
        push r:6
        dup
        not
        branchIfTrue label123
        pop
        push r:14, 50, r:11, 'size'
        getMember
        push 0
        getMember
        push 2
        divide
        add
        lessThan
       label123:
        not
        branchIfTrue label124
        push r:12, r:13, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        setRegister r:15
        pop
        push r:this, '3u('
        getMember
        push r:15, 2, r:this, '-J0h'
        callMethod
        push 'Math'
        getVariable
        push 'PI'
        getMember
        push 4
        divide
        lessThan
        not
        branchIfTrue label124
        push r:11, '[b', r:11, '[b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push r:15, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        multiply
        push r:10
        multiply
        add
        setMember
        push r:11, ']b', r:11, ']b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push r:15, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        multiply
        push r:10
        multiply
        add
        setMember
       label124:
        push r:14, r:11, 'size'
        getMember
        push 0
        getMember
        subtract
        setRegister r:14
        pop
        push r:14, r:8
        lessThan
        not
        branchIfTrue label125
        push r:14
        setRegister r:8
        pop
        push r:11
        setRegister r:9
        pop
       label125:
        branch label121
       label126:
        push r:4, r:this, '5R'
        getMember
        subtract
        push r:5, r:this, '6R'
        getMember
        subtract
        push 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        setRegister r:16
        pop
        push r:9, NULL
        equals
        not
        not
        branchIfTrue label127
        push r:9, '5R'
        getMember
        push r:this, '5R'
        getMember
        subtract
        push r:9, '6R'
        getMember
        push r:this, '6R'
        getMember
        subtract
        push 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        setRegister r:16
        pop
       label127:
        push r:4, r:this, '3u('
        getMember
        push 'Math'
        getVariable
        push 'PI'
        getMember
        add
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:2
        multiply
        add
        setRegister r:17
        pop
        push r:5, r:this, '3u('
        getMember
        push 'Math'
        getVariable
        push 'PI'
        getMember
        add
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:2
        multiply
        add
        setRegister r:18
        pop
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.9, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:19
        pop
        push r:this, '5R'
        getMember
        setRegister r:20
        pop
        push r:this, '6R'
        getMember
        setRegister r:21
        pop
        push r:this, '5R', r:this, '5R'
        getMember
        push r:19
        multiply
        push r:17, 1, r:19
        subtract
        multiply
        add
        setMember
        push r:this, '6R', r:this, '6R'
        getMember
        push r:19
        multiply
        push r:18, 1, r:19
        subtract
        multiply
        add
        setMember
        push r:this, '3u(', r:16, r:this, '3u('
        getMember
        push 2, r:this, '}fC=K'
        callMethod
        setMember
        push r:20, r:this, '5R'
        getMember
        subtract
        setRegister r:20
        pop
        push r:21, r:this, '6R'
        getMember
        subtract
        setRegister r:21
        pop
        push r:this, '}Yax5', r:20, r:20
        multiply
        push r:21, r:21
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        push 1
        initArray
        setMember
        push r:this, ' IWA+', r:this, ' IWA+'
        getMember
        push 1, r:this, '}Yax5'
        getMember
        push 0
        getMember
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        push 0.3, 2, 'Math'
        getVariable
        push 'max'
        callMethod
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        add
        setMember
        push r:this, '}J'
        getMember
        push '*;D)'
        getMember
        setRegister r:22
        pop
        push 1, r:this, ' IWA+'
        getMember
        int
        push r:22, '_totalframes'
        getMember
        modulo
        add
        toString
        push 1, r:22, 'gotoAndStop'
        callMethod
        pop
        push r:22, '_rotation', r:this, '3u('
        getMember
        push 180
        multiply
        push 'Math'
        getVariable
        push 'PI'
        getMember
        divide
        setMember
        push r:this, '3u('
        getMember
        push 0
        lessThan
        not
        branchIfTrue label128
        push 61, r:this, '3u('
        getMember
        push 30
        multiply
        push 'Math'
        getVariable
        push 'PI'
        getMember
        divide
        int
        add
        setRegister r:23
        pop
        branch label129
       label128:
        push 1, r:this, '3u('
        getMember
        push 30
        multiply
        push 'Math'
        getVariable
        push 'PI'
        getMember
        divide
        int
        add
        setRegister r:23
        pop
       label129:
        push 0, r:this, '5CMYr'
        callMethod
        pop
        push r:23
        toString
        push 1, r:this, '-mR,'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:23
        toString
        push 1, r:this, '+-=)'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '-mR,'
        getMember
        push '_x', r:this, '5R'
        getMember
        setMember
        push r:this, '-mR,'
        getMember
        push '_y', r:this, '6R'
        getMember
        setMember
        push r:this, '+-=)'
        getMember
        push '_x', r:this, '5R'
        getMember
        setMember
        push r:this, '+-=)'
        getMember
        push '_y', r:this, '6R'
        getMember
        setMember
        push r:this, '}J'
        getMember
        push '_x', r:this, '5R'
        getMember
        setMember
        push r:this, '}J'
        getMember
        push '_y', r:this, '6R'
        getMember
        setMember
      end // of function 

      setMember
      push r:0, 'pow', 0.15
      setMember
      push '(WBt)'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ']}Ou;(', 1
      setMember
      push r:0, '3I0pG', 2
      setMember
      push r:0, '{;7F4', 3
      setMember
      push r:0, '8U(wu', 4
      setMember
      push r:0, '}[cpB', 5
      setMember
      push r:0, '9xv]A', 6
      setMember
      push r:0, '{yQ=Q', 7
      setMember
      push r:0, '+,W', 8
      setMember
      push r:0, '2y+dV', 9
      setMember
      push r:0, '(tBee', 10
      setMember
      push r:0, '3)i[=', 11
      setMember
      push r:0, ' J3IC', 12
      setMember
      push r:0, '[6jRc', 13
      setMember
      push r:0, ')8Fyj', 14
      setMember
      push '44{N'
      function2 (r:2='}J') (r:1='this')
        push r:this, '}J', r:'}J'
        setMember
        push r:this, '5QPXw', 0, 1
        initArray
        setMember
        push r:this, '),P16(', 0, 1
        initArray
        setMember
        push r:this, '5T6+', 0, 1
        initArray
        setMember
        push r:this, '}Yax5', 0, 1
        initArray
        setMember
        push r:this, '-g0L5', 0, 1
        initArray
        setMember
        push r:this, '5U4B', 0, 1
        initArray
        setMember
        push r:this, '0{KS0', 0, '{sRCQ'
        new
        setMember
        push r:this, ']}lAm', r:'}J', 1, '+7U K'
        new
        setMember
        push r:this, ';+', r:this, 1, '2o'
        new
        setMember
        push r:this, '4,01', r:this, 1, '=3+P'
        new
        setMember
        push r:this, '6evY-(', 0, '{sRCQ'
        new
        setMember
        push r:this, ',e49', 0, '{sRCQ'
        new
        setMember
        push 150, 150, r:this, 3, ']u-*A'
        new
        push 1, r:this, '6evY-('
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '-_X}5', '$p', 0, '$bo', 0, 0, 0, 3
        initArray
        push '$f', 0, '$b', 0, '$k', 0, '$d', 0, 6
        initObject
        setMember
        push 0
        setRegister r:3
        pop
        branch label131
       label130:
        push r:3
        increment
        setRegister r:3
        pop
       label131:
        push r:3, 8
        lessThan
        not
        branchIfTrue label132
        push 300, 1, r:this, '5yP+L'
        callMethod
        pop
        branch label130
       label132:
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, ' (sy3'
      function2 (r:2='3C2') (r:1='this')
        push r:this, '4,01'
        getMember
        push ';8,PR', r:'3C2'
        setMember
      end // of function 

      setMember
      push r:1, ',}K0C('
      function2 () (r:1='this')
        push r:this, '4,01'
        getMember
        push '2[', r:this, '}J'
        getMember
        push '_xmouse'
        getMember
        setMember
        push r:this, '4,01'
        getMember
        push '3[', r:this, '}J'
        getMember
        push '_ymouse'
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '5yP+L'
      function2 (r:2='{2') (r:1='this')
        push r:this, '),P16(', r:this, '),P16('
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push r:this, '-_X}5'
        getMember
        push '$p', r:this, '-_X}5'
        getMember
        push '$p'
        getMember
        increment
        setMember
        push 10, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label133
        push r:'{2', 1, r:this, '5yP+L'
        callMethod
        pop
       label133:
        push TRUE
        not
        branchIfTrue label145
        push 250, r:'{2'
        add
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 320
        add
        setRegister r:3
        pop
        push 300, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 10
        add
        setRegister r:4
        pop
        push TRUE
        setRegister r:6
        pop
        push 0
        setRegister r:5
        pop
        branch label135
       label134:
        push r:5
        increment
        setRegister r:5
        pop
       label135:
        push r:5, r:this, ',e49'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label137
        push r:this, ',e49'
        getMember
        push r:5
        getMember
        setRegister r:7
        pop
        push r:7, '5R'
        getMember
        push r:3
        subtract
        setRegister r:8
        pop
        push r:7, '6R'
        getMember
        push r:4
        subtract
        setRegister r:9
        pop
        push r:8, r:8
        multiply
        push r:9, r:9
        multiply
        add
        push 400
        lessThan
        not
        branchIfTrue label136
        push FALSE
        setRegister r:6
        pop
        branch label137
       label136:
        branch label134
       label137:
        push r:6
        not
        branchIfTrue label144
        push 0
        setRegister r:10
        pop
        push r:this, '),P16('
        getMember
        push 0
        getMember
        push 20
        greaterThan
        dup
        not
        branchIfTrue label138
        pop
        push 5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
       label138:
        not
        branchIfTrue label142
        push 1
        setRegister r:10
        pop
        push r:3, 360
        greaterThan
        dup
        not
        branchIfTrue label139
        pop
        push r:this, '),P16('
        getMember
        push 0
        getMember
        push 50
        greaterThan
       label139:
        dup
        not
        branchIfTrue label140
        pop
        push 3, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
       label140:
        not
        branchIfTrue label141
        push 2
        setRegister r:10
        pop
       label141:
        branch label143
       label142:
        push 10, r:this, '5QPXw'
        getMember
        push 0
        getMember
        push 1
        subtract
        multiply
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label143
        push r:this, '5QPXw', r:this, '5QPXw'
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push 3, 1, 4, 20, 3
        initArray
        push 1, '-[m(M'
        getVariable
        push '7g,ln'
        callMethod
        add
        setRegister r:10
        pop
       label143:
        push r:4, r:3, r:10, r:this, 4, ';jo'
        new
        push 1, r:this, ',e49'
        getMember
        push 'push'
        callMethod
        pop
        branch label145
       label144:
        branch label133
       label145:
      end // of function 

      setMember
      push r:1, '6nd+E('
      function2 () (r:1='this')
        push 10
        setRegister r:2
        pop
       label146:
        push r:2, r:2
        decrement
        setRegister r:2
        pop
        push 0
        greaterThan
        not
        branchIfTrue label154
        push 200, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 50
        add
        setRegister r:3
        pop
        push TRUE
        setRegister r:5
        pop
        push 0
        setRegister r:4
        pop
        branch label148
       label147:
        push r:4
        increment
        setRegister r:4
        pop
       label148:
        push r:4, r:this, ',e49'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label152
        push r:this, ',e49'
        getMember
        push r:4
        getMember
        setRegister r:6
        pop
        push r:6, '6R'
        getMember
        push 100
        lessThan
        dup
        not
        branchIfTrue label149
        pop
        push r:6, '5R'
        getMember
        push r:3, 30
        subtract
        greaterThan
       label149:
        dup
        not
        branchIfTrue label150
        pop
        push r:6, '5R'
        getMember
        push r:3, 30
        add
        lessThan
       label150:
        not
        branchIfTrue label151
        push FALSE
        setRegister r:5
        pop
        branch label152
       label151:
        branch label147
       label152:
        push r:5
        not
        branchIfTrue label153
        push r:this, '-_X}5'
        getMember
        push '$b', r:this, '-_X}5'
        getMember
        push '$b'
        getMember
        increment
        setMember
        push -20, r:3, r:this, 3, ']u-*A'
        new
        push 1, r:this, '6evY-('
        getMember
        push 'push'
        callMethod
        pop
        push UNDEF
        return
       label153:
        branch label146
       label154:
      end // of function 

      setMember
      push r:1, '0D 6'
      function2 () (r:1='this')
        push 0, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push r:this, '4,01'
        getMember
        push '5R'
        getMember
        push 150
        lessThan
        not
        branchIfTrue label155
        push 0.5
        branch label156
       label155:
        push r:this, '4,01'
        getMember
        push '5R'
        getMember
        push 300
        divide
       label156:
        multiply
        subtract
        setRegister r:3
        pop
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.8, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:4
        pop
        push r:this, '-g0L5', r:this, '-g0L5'
        getMember
        push 0
        getMember
        push 2.5e-005, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 1
        initArray
        setMember
        push r:this, '}Yax5', r:this, '}Yax5'
        getMember
        push 0
        getMember
        push r:4
        multiply
        push r:3, 1, r:4
        subtract
        multiply
        add
        push r:this, '-g0L5'
        getMember
        push 0
        getMember
        subtract
        push 1
        initArray
        setMember
        push r:this, '5T6+', r:this, '5T6+'
        getMember
        push 0
        getMember
        push r:this, '}Yax5'
        getMember
        push 0
        getMember
        add
        push 1
        initArray
        setMember
        push r:this, '5U4B', r:this, '5U4B'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        add
        push 1
        initArray
        setMember
        push r:this, '6DoB7'
        getMember
        not
        dup
        not
        branchIfTrue label157
        pop
        push r:this, '5U4B'
        getMember
        push 0
        getMember
        push 1
        greaterThan
       label157:
        not
        branchIfTrue label162
        push 0
        setRegister r:5
        pop
        push 0
        setRegister r:2
        pop
        branch label159
       label158:
        push r:2
        increment
        setRegister r:2
        pop
       label159:
        push r:2, r:this, '6evY-('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label160
        push r:5, r:this, '6evY-('
        getMember
        push r:2
        getMember
        push 'size'
        getMember
        push 0
        getMember
        push 9
        divide
        add
        setRegister r:5
        pop
        branch label158
       label160:
        push r:this, '5U4B'
        getMember
        push 0
        getMember
        push 1
        greaterThan
        not
        branchIfTrue label162
        push r:5
        int
        push 5
        multiply
        push 1, ';ndCG'
        getVariable
        push '-Q)9)'
        callMethod
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push r:this, '5U4B', r:this, '5U4B'
        getMember
        push 0
        getMember
        push 1
        subtract
        push 1
        initArray
        setMember
        push 10, r:this, '6evY-('
        getMember
        push 'length'
        getMember
        multiply
        push r:this, '),P16('
        getMember
        push 0
        getMember
        push 3
        divide
        int
        add
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label161
        push 0, r:this, '6nd+E('
        callMethod
        pop
       label161:
        branch label160
       label162:
        push 0
        setRegister r:2
        pop
        branch label164
       label163:
        push r:2
        increment
        setRegister r:2
        pop
       label164:
        push r:2, r:this, '6evY-('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label165
        push r:this, '}Yax5'
        getMember
        push 0
        getMember
        push 1, r:this, '6evY-('
        getMember
        push r:2
        getMember
        push '87vE7('
        callMethod
        pop
        branch label163
       label165:
        push 0
        setRegister r:2
        pop
        branch label167
       label166:
        push r:2
        increment
        setRegister r:2
        pop
       label167:
        push r:2, r:this, ',e49'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label169
        push r:this, '}Yax5'
        getMember
        push 0
        getMember
        push 1, r:this, ',e49'
        getMember
        push r:2
        getMember
        push '87vE7('
        callMethod
        not
        not
        branchIfTrue label168
        push 0, 1, r:this, '5yP+L'
        callMethod
        pop
        push 1, r:2, r:2
        decrement
        setRegister r:2
        pop
        push 2, r:this, ',e49'
        getMember
        push 'splice'
        callMethod
        pop
       label168:
        branch label166
       label169:
        push 0
        setRegister r:2
        pop
        branch label171
       label170:
        push r:2
        increment
        setRegister r:2
        pop
       label171:
        push r:2, r:this, '0{KS0'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label173
        push r:this, '}Yax5'
        getMember
        push 0
        getMember
        push 1, r:this, '0{KS0'
        getMember
        push r:2
        getMember
        push '=[q8n'
        callMethod
        not
        not
        branchIfTrue label172
        push 1, r:2, r:2
        decrement
        setRegister r:2
        pop
        push 2, r:this, '0{KS0'
        getMember
        push 'splice'
        callMethod
        pop
       label172:
        branch label170
       label173:
        push r:this, '6evY-('
        getMember
        push 'length'
        getMember
        push 0
        equals
        not
        branchIfTrue label174
        push r:this, '6DoB7', TRUE
        setMember
        push r:this, '-_X}5'
        getMember
        push '$d', 0, r:this, '5T6+'
        getMember
        push 0
        getMember
        subtract
        int
        setMember
        push r:this, '-_X}5'
        getMember
        push 1, ';ndCG'
        getVariable
        push '7T4cF('
        callMethod
        pop
       label174:
        push 0, r:this, '4,01'
        getMember
        push '87vE7('
        callMethod
        pop
        push r:this, '}Yax5'
        getMember
        push 0
        getMember
        push 1, r:this, ';+'
        getMember
        push '87vE7('
        callMethod
        pop
        push 0, r:this, '6evY-('
        getMember
        push '36}9L('
        callMethod
        not
        branchIfTrue label175
        push 0, ';ndCG'
        getVariable
        push '0ze*c'
        callMethod
        pop
       label175:
        push 0, r:this, ',e49'
        getMember
        push '36}9L('
        callMethod
        not
        branchIfTrue label176
        push 0, ';ndCG'
        getVariable
        push '0ze*c'
        callMethod
        pop
       label176:
        push 0, r:this, '0{KS0'
        getMember
        push '36}9L('
        callMethod
        not
        branchIfTrue label177
        push 0, ';ndCG'
        getVariable
        push '0ze*c'
        callMethod
        pop
       label177:
      end // of function 

      setMember
      push r:1, ',}2X ('
      function2 () (r:1='this')
      end // of function 

      setMember
      push '980Sb'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '}-B2'
      function2 (r:2='}J') (r:1='this')
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        not
        branchIfTrue label178
        push UNDEF
        return
       label178:
        push '980Sb'
        getVariable
        push ')2fr3', r:'}J'
        setMember
        push '980Sb'
        getVariable
        push '({B6', '980Sb'
        getVariable
        push ')2fr3'
        getMember
        push 1, '44{N'
        new
        setMember
      end // of function 

      setMember
      push r:0, '0D 6'
      function2 () (r:1='this')
        push 0, '{-kxL'
        getVariable
        push '87vE7('
        callMethod
        pop
        push 0, '980Sb'
        getVariable
        push '({B6'
        getMember
        push '0D 6'
        callMethod
        pop
      end // of function 

      setMember
      push '-[m(M'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',Hwi)'
      function2 ('-', r:2='5U4B') (r:1='this')
        push '*B'
        var
        push '*B', r:'5U4B'
        function2 () (r:1='this')
          push '*B'
          getVariable
          push 1, 'clearInterval', 1, '3Wt'
          getVariable
          push 'getGlobal'
          callMethod
          push UNDEF
          callMethod
          pop
          push 0, '-'
          callFunction
          pop
        end // of function 

        push 2, 'setInterval', 1, '3Wt'
        getVariable
        push 'getGlobal'
        callMethod
        push UNDEF
        callMethod
        setVariable
      end // of function 

      setMember
      push r:0, '}wUHz'
      function2 (r:2='=rJ', r:3='7olX7', r:4='}wUHz') (r:1='this')
        push r:'=rJ', NULL
        equals
        not
        branchIfTrue label179
        push NULL
        return
       label179:
        push r:'7olX7', 'length'
        getMember
        setRegister r:5
        pop
        push r:5, 1
        equals
        not
        branchIfTrue label180
        push r:'}wUHz', 1, r:'7olX7', 1, r:'=rJ', 'split'
        callMethod
        push 'join'
        callMethod
        return
       label180:
        push 0
        setRegister r:7
        pop
        push ''
        setRegister r:8
        pop
       label181:
        push TRUE
        not
        branchIfTrue label183
        push r:7, r:'7olX7', 2, r:'=rJ', 'indexOf'
        callMethod
        setRegister r:6
        pop
        push r:6, -1
        equals
        not
        branchIfTrue label182
        branch label183
       label182:
        push r:8, r:6, r:7, 2, r:'=rJ', 'slice'
        callMethod
        push r:'}wUHz'
        add
        add
        setRegister r:8
        pop
        push r:6, r:5
        add
        setRegister r:7
        pop
        branch label181
       label183:
        push r:8, r:7, 1, r:'=rJ', 'substring'
        callMethod
        add
        return
      end // of function 

      setMember
      push r:0, '* I51'
      function2 (r:2='=rJ') (r:1='this')
        push 0, 'Array'
        new
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        push r:'=rJ', 'length'
        getMember
        setRegister r:6
        pop
        push 0
        setRegister r:3
        pop
        branch label185
       label184:
        push r:3
        increment
        setRegister r:3
        pop
       label185:
        push r:3, r:6
        lessThan
        not
        branchIfTrue label190
        push r:3, 1, r:'=rJ', 'charCodeAt'
        callMethod
        setRegister r:7
        pop
        push r:7, 10
        equals
        dup
        branchIfTrue label186
        pop
        push r:7, 13
        equals
       label186:
        not
        branchIfTrue label189
        push r:3, r:5, 2, r:'=rJ', 'slice'
        callMethod
        push 1, r:4, 'push'
        callMethod
        pop
        push r:7, 13
        equals
        dup
        not
        branchIfTrue label187
        pop
        push r:3, 1
        add
        push 1, r:'=rJ', 'charCodeAt'
        callMethod
        push 10
        equals
       label187:
        not
        branchIfTrue label188
        push r:3
        increment
        setRegister r:3
        pop
       label188:
        push r:3, 1
        add
        setRegister r:5
        pop
       label189:
        branch label184
       label190:
        push r:3, r:5, 2, r:'=rJ', 'slice'
        callMethod
        push 1, r:4, 'push'
        callMethod
        pop
        push r:4
        return
      end // of function 

      setMember
      push r:0, ',JBe0'
      function2 (r:2=';p(') (r:1='this')
        push 0, r:';p(', 'duplicate'
        callMethod
        setRegister r:4
        pop
        push r:4, 'length'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:3
        pop
        branch label192
       label191:
        push r:3
        increment
        setRegister r:3
        pop
       label192:
        push r:3, r:5
        lessThan
        not
        branchIfTrue label193
        push r:5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:6
        pop
        push r:5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:7
        pop
        push r:4, r:6
        getMember
        setRegister r:8
        pop
        push r:4, r:6, r:4, r:7
        getMember
        setMember
        push r:4, r:7, r:8
        setMember
        branch label191
       label193:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '4UQ(1'
      function2 (r:2='}J') (r:1='this')
        push 0
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
       label194:
        push r:'}J', '_parent'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label195
        push r:3, r:'}J', '_x'
        getMember
        add
        setRegister r:3
        pop
        push r:4, r:'}J', '_y'
        getMember
        add
        setRegister r:4
        pop
        push r:'}J', '_parent'
        getMember
        setRegister r:'}J'
        pop
        branch label194
       label195:
        push '{2', r:3, '}2', r:4, 2
        initObject
        return
      end // of function 

      setMember
      push r:0, ' Ly7b'
      function2 (r:2='((', r:3='{nq3-(') (r:1='this')
        push r:'(('
        toString
        setRegister r:4
        pop
       label196:
        push r:4, 'length'
        getMember
        push r:'{nq3-('
        lessThan
        not
        branchIfTrue label197
        push '0', r:4
        add
        setRegister r:4
        pop
        branch label196
       label197:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '7g,ln'
      function2 (r:2='(') (r:1='this')
        push 0
        setRegister r:3
        pop
        push r:'(', 'length'
        getMember
        push 1
        subtract
        setRegister r:4
        pop
        branch label199
       label198:
        push r:4
        decrement
        setRegister r:4
        pop
       label199:
        push r:4, 0
        lessThan
        not
        not
        branchIfTrue label200
        push r:3, r:'(', r:4
        getMember
        add
        setRegister r:3
        pop
        branch label198
       label200:
        push r:3, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
       label201:
        push r:3, r:'(', r:4
        getMember
        lessThan
        not
        not
        branchIfTrue label202
        push r:3, r:'(', r:4
        getMember
        subtract
        setRegister r:3
        pop
        push r:4
        increment
        setRegister r:4
        pop
        branch label201
       label202:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '4*fgv'
      function2 (r:2='*QA', r:3='+QA') (r:1='this')
        push r:'*QA', 1, r:'*QA', 'getBounds'
        callMethod
        setRegister r:4
        pop
        push r:'*QA', 1, r:'+QA', 'getBounds'
        callMethod
        setRegister r:5
        pop
        push r:4, 'xMin'
        getMember
        push r:4, 'xMax'
        getMember
        add
        push 2
        divide
        push r:5, 'xMin'
        getMember
        push r:5, 'xMax'
        getMember
        add
        push 2
        divide
        subtract
        setRegister r:6
        pop
        push r:4, 'yMin'
        getMember
        push r:4, 'yMax'
        getMember
        add
        push 2
        divide
        push r:5, 'yMin'
        getMember
        push r:5, 'yMax'
        getMember
        add
        push 2
        divide
        subtract
        setRegister r:7
        pop
        push r:6, r:6
        multiply
        push r:7, r:7
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        return
      end // of function 

      setMember
      push r:0, '16KA'
      function2 ('}J') (r:1='this')
        push '(', 0, 'Array'
        new
        varEquals
        function2 (r:2='4') (r:1='this')
          push '}J'
          getVariable
          push r:'4'
          getMember
          setRegister r:3
          pop
          push r:3, 1, '3Wt'
          getVariable
          push '_typeof'
          callMethod
          push 'movieclip'
          equals
          dup
          not
          branchIfTrue label203
          pop
          push r:3, '_parent'
          getMember
          push '}J'
          getVariable
          equals
         label203:
          not
          branchIfTrue label204
          push r:3, 1, '('
          getVariable
          push 'push'
          callMethod
          pop
         label204:
        end // of function 

        push '}J'
        getVariable
        push 2, '3Wt'
        getVariable
        push '9ss9+'
        callMethod
        pop
        push '('
        getVariable
        return
      end // of function 

      setMember
      push r:0, 'localToGlobal'
      function2 (r:2='}J', r:3='((', r:4=')(') (r:1='this')
        push 0, '19{O'
        new
        setRegister r:5
        pop
        push r:'((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:5, 1, r:'}J', 'localToGlobal'
        callMethod
        pop
        push '((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push ')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push 2
        initObject
        return
      end // of function 

      setMember
      push r:0, 'globalToLocal'
      function2 (r:2='}J', r:3='((', r:4=')(') (r:1='this')
        push 0, '19{O'
        new
        setRegister r:5
        pop
        push r:'((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:5, 1, r:'}J', 'globalToLocal'
        callMethod
        pop
        push '((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push ')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push 2
        initObject
        return
      end // of function 

      setMember
      push r:0, '{Gq]-'
      function2 () (r:1='this')
        push '$r', '$h', '$w', '$y', '$x', '$box', '$matrixType', '$radial', '$linear', 9
        initArray
        setRegister r:2
        pop
        push '-[m(M'
        getVariable
        push ']cY[2', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:3
        pop
        branch label206
       label205:
        push r:3
        increment
        setRegister r:3
        pop
       label206:
        push r:3, r:2, 'length'
        getMember
        lessThan
        not
        branchIfTrue label207
        push r:2, r:3
        getMember
        setRegister r:4
        pop
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push r:3, 1, 1, r:4, 'substring'
        callMethod
        setMember
        branch label205
       label207:
      end // of function 

      setMember
      push r:0, 'beginGradientFill'
      function2 (r:2='}J', r:3=' Wo02', r:4='=cKzE(', r:5='8)JNX', r:6='7eq8)', r:7=',96mA') (r:1='this')
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push NULL
        equals
        not
        branchIfTrue label208
        push 0, '-[m(M'
        getVariable
        push '{Gq]-'
        callMethod
        pop
       label208:
        push 0, '19{O'
        new
        setRegister r:8
        pop
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 3
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 2
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:',96mA', '(('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 4
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:',96mA', ')('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 5
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:',96mA', ' ('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 6
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:',96mA', '1'
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 7
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:',96mA', '='
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 8
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:8, r:'7eq8)', r:'8)JNX', r:'=cKzE(', r:' Wo02'
        not
        branchIfTrue label209
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 0
        getMember
        branch label210
       label209:
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 1
        getMember
       label210:
        push 5, r:'}J', 'beginGradientFill'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, ',[A(', 1, 1, '$x', 'substring'
      callMethod
      setMember
      push r:0, '-[A(', 1, 1, '$y', 'substring'
      callMethod
      setMember
      push r:0, ']cY[2', NULL
      setMember
    end // of frame 0
  end // of defineMovieClip 113
  
  exportAssets
    113 as '90D*'
  end // of exportAssets
end
