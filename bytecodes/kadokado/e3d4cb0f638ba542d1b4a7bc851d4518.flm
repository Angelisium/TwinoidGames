movie 'e3d4cb0f638ba542d1b4a7bc851d4518.swf' compressed // flash 8, total frames: 1, frame rate: 40 fps, 700x480 px


  defineMovieClip 2 // total frames: 1
  end // of defineMovieClip 2
  
  exportAssets
    2 as ')9*'
  end // of exportAssets

  defineMovieClip 6 // total frames: 1
  end // of defineMovieClip 6
  
  exportAssets
    6 as ';kq4m'
  end // of exportAssets

  defineMovieClip 19 // total frames: 19

    frame 18
      push ''
      removeClip
    end // of frame 18
  end // of defineMovieClip 19
  
  exportAssets
    19 as '[E26]'
  end // of exportAssets

  defineMovieClip 22 // total frames: 1
  end // of defineMovieClip 22

  defineMovieClip 24 // total frames: 1
  end // of defineMovieClip 24

  defineMovieClip 25 // total frames: 21
  end // of defineMovieClip 25
  
  exportAssets
    25 as '8wc)D'
  end // of exportAssets

  defineMovieClip 52 // total frames: 30

    frame 0
      push '', 10, 360
      random
      setProperty
    end // of frame 0

    frame 29
      push 0.0, 'this'
      getVariable
      push 'removeMovieClip'
      callMethod
      pop
    end // of frame 29
  end // of defineMovieClip 52
  
  exportAssets
    52 as '}S99'
  end // of exportAssets

  defineMovieClip 62 // total frames: 8
  end // of defineMovieClip 62
  
  exportAssets
    62 as '(xN6v'
  end // of exportAssets

  defineMovieClip 64 // total frames: 1
  end // of defineMovieClip 64

  defineMovieClip 66 // total frames: 1
  end // of defineMovieClip 66

  defineMovieClip 70 // total frames: 3
  end // of defineMovieClip 70

  defineMovieClip 72 // total frames: 1
  end // of defineMovieClip 72

  defineMovieClip 76 // total frames: 1
  end // of defineMovieClip 76

  defineMovieClip 77 // total frames: 71

    frame 25
      gotoFrame 0
      play
    end // of frame 25

    frame 32
      stop
    end // of frame 32

    frame 45
      gotoFrame 0
      play
    end // of frame 45
  end // of defineMovieClip 77
  
  exportAssets
    77 as '4,01'
  end // of exportAssets

  defineMovieClip 79 // total frames: 1
  end // of defineMovieClip 79

  defineMovieClip 80 // total frames: 2

    frame 0
      constants '*', '_rotation'  
      push '*'
      getVariable
      push '_rotation', '*'
      getVariable
      push '_rotation'
      getMember
      push 5
      add
      setMember
    end // of frame 0

    frame 1
      gotoFrame 1
      play
    end // of frame 1
  end // of defineMovieClip 80

  defineMovieClip 86 // total frames: 5

    frame 0
      push '_parent'
      getVariable
      push '(Erk5'
      getMember
      push 1
      add
      gotoAndStop
    end // of frame 0
  end // of defineMovieClip 86

  defineMovieClip 87 // total frames: 48

    frame 8
      push '5t 9)', 10
      setVariable
    end // of frame 8

    frame 10
      constants '5t 9)', ''  
      push '5t 9)', '5t 9)'
      getVariable
      push 1
      subtract
      setVariable
      push '5t 9)'
      getVariable
      push 0.0
      greaterThan
      not
      branchIfTrue label1
      push '', 4
      getProperty
      push 1
      subtract
      gotoAndPlay
     label1:
    end // of frame 10

    frame 21
      push ''
      removeClip
    end // of frame 21
  end // of defineMovieClip 87
  
  exportAssets
    87 as '{e{=K('
  end // of exportAssets

  defineMovieClip 91 // total frames: 3
  end // of defineMovieClip 91

  defineMovieClip 92 // total frames: 40

    frame 39
      push 'this'
      getVariable
      removeClip
    end // of frame 39
  end // of defineMovieClip 92
  
  exportAssets
    92 as '-R 9)'
  end // of exportAssets

  defineMovieClip 95 // total frames: 1
  end // of defineMovieClip 95
  
  exportAssets
    95 as ';+'
  end // of exportAssets
  
  exportAssets
    95 as ';+'
  end // of exportAssets
  
  exportAssets
    92 as '-R 9)'
  end // of exportAssets
  
  exportAssets
    87 as '{e{=K('
  end // of exportAssets
  
  exportAssets
    77 as '4,01'
  end // of exportAssets
  
  exportAssets
    62 as '(xN6v'
  end // of exportAssets
  
  exportAssets
    52 as '}S99'
  end // of exportAssets
  
  exportAssets
    25 as '8wc)D'
  end // of exportAssets
  
  exportAssets
    19 as '[E26]'
  end // of exportAssets
  
  exportAssets
    6 as ';kq4m'
  end // of exportAssets

  defineMovieClip 96 // total frames: 1

    frame 0
      constants '{sRCQ', '9w+x0(', '5Gr1)', 'Array', 'prototype', 'insert', 'splice', 'call', 'length', 'pop', ']]*Q1(', 'push', '7EyYf', 'shift', '=dbLP', '0y)Lk', 'unshift', '(Ip9A', '36}9L(', '=(,aA', '3d0fx', '1aXd{', '*h0p]', '=Y7h]', '8ITeH(', '582dG', ';ndCG', '*G6KR', '8O)tG', '7', '6', ',i0 [', '+7U K', ')2fr3', '}Zms3', ']1sj+', '-fC3a', '9oK', 'cur', ']bu40', '_name', 'swapDepths', '*=_p_', '3Wt', 'attachMC', '18wU*', 'createEmptyMC', '(GbB}', '+2NA', 'getDepth', 'Math', 'floor', '}oQA7', '08M8', 'clear', 'removeMovieClip', '9(K ;', '_y', 'destroy', 'flash', 'Object', '3[4k{', '{lN=R', '{-kxL', '87vE7(', '4plQ5', 'getTimer', ';ILSy', '3R,QM', ';y}-6(', '-)Xd+', '[Ad;n', '6GI,F', '-V;B', 'fps', '=3+P', '+-(0', '}J', '4,01', ']}lAm', '(', '((', ')(', '_x', '=', 'random', ';8,PR', '8+C5', ')Bx7K', '{X(+', 'gotoAndPlay', '0f 5', '3[usI(', '7T4cF(', '8Ugi)', 'gotoAndStop', '_xscale', 'abs', '_rotation', 'Key', 'UP', 'isDown', 'DOWN', '}45Fp', 'SPACE', 'RIGHT', 'LEFT', '3[', 'pow', 'cos', 'sin', '8EenK(', ']oH', '*jkx((', '2_()', '(AEyz', ']', '(xN6v', '{2', '}2', '9tqzy', '=;mx-', '_yscale', '2[', '8G56', '}S99', 'Color', 'setRGB', '{e{=K(', '(Erk5', '}Yax5', 'sqrt', '2VhU6', 'atan2', '(WBt)', ']}Ou;(', '3I0pG', '{;7F4', '8U(wu', '}[cpB', '9xv]A', '{yQ=Q', '+,W', '2y+dV', '(tBee', '3)i[=', ' J3IC', '[6jRc', ')8Fyj', '44{N', 'onMouseMove', '}KMv1', 'callback', 'onMouseDown', ' (sy3', ';+', '2;dS5', ';kq4m', '5U4B', '7F;h8', '}V--k', '-_X}5', '$m', '$c', '=HU11', '[4zL2', '+Da3+', 'text', '{szoF(', '_ymouse', '*8]ya', '-[m(M', '7g,ln', ',*bWP', '[E26]', 'min', '5b)bA(', 'remove', '0D 6', 'PI', '0ze*c', '980Sb', 'init', '(kJ+1(', '({B6', ',Hwi)', '*B', 'clearInterval', 'getGlobal', '-', 'setInterval', '}wUHz', 'split', 'join', '', 'indexOf', 'slice', 'substring', '* I51', 'charCodeAt', ',JBe0', 'duplicate', '4UQ(1', '_parent', ' Ly7b', '0', '4*fgv', 'getBounds', 'xMin', 'xMax', 'yMin', 'yMax', '16KA', '_typeof', 'movieclip', 'forin', 'localToGlobal', 'Hash', ',[A(', 'set', '-[A(', 'get', 'globalToLocal', '{Gq]-', '$r', '$h', '$w', '$y', '$x', '$box', '$matrixType', '$radial', '$linear', ']cY[2', 'beginGradientFill', ' (', '1'  
      push '{sRCQ'
      function2 () (r:1='this', r:2='super')
        push 0, r:super, UNDEF
        callMethod
        pop
        push r:this, '9w+x0(', 0, 1
        initArray
        setMember
        push r:this, '5Gr1)', FALSE
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'Array'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, 'insert'
      function2 (r:2='4AF', r:3='((') (r:1='this')
        push r:'((', 0, r:'4AF', r:this, 4, 'Array'
        getVariable
        push 'prototype'
        getMember
        push 'splice'
        getMember
        push 'call'
        callMethod
        pop
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label1
        push r:this, '5Gr1)', TRUE
        setMember
       label1:
      end // of function 

      setMember
      push r:1, 'pop'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, ']]*Q1('
        getVariable
        push 'call'
        callMethod
        setRegister r:3
        pop
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label2
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        decrement
        push 1
        initArray
        setMember
       label2:
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label3
        push r:this, '5Gr1)', TRUE
        setMember
       label3:
        push r:3
        return
      end // of function 

      setMember
      push r:1, 'push'
      function2 (r:3='((') (r:1='this', r:2='super')
        push r:'((', r:this, 2, '7EyYf'
        getVariable
        push 'call'
        callMethod
        setRegister r:4
        pop
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label4
        push r:this, '5Gr1)', TRUE
        setMember
       label4:
        push r:4
        return
      end // of function 

      setMember
      push r:1, 'shift'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '=dbLP'
        getVariable
        push 'call'
        callMethod
        setRegister r:3
        pop
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label5
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        decrement
        push 1
        initArray
        setMember
       label5:
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label6
        push r:this, '5Gr1)', TRUE
        setMember
       label6:
        push r:3
        return
      end // of function 

      setMember
      push r:1, 'splice'
      function2 (r:3='4AF', r:4='; =') (r:1='this', r:2='super')
        push r:'; =', r:'4AF', r:this, 3, '0y)Lk'
        getVariable
        push 'call'
        callMethod
        setRegister r:5
        pop
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:5, 'length'
        getMember
        subtract
        push 1
        initArray
        setMember
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label7
        push r:this, '5Gr1)', TRUE
        setMember
       label7:
        push r:5
        return
      end // of function 

      setMember
      push r:1, 'unshift'
      function2 (r:3='((') (r:1='this', r:2='super')
        push r:'((', r:this, 2, '(Ip9A'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label8
        push r:this, '5Gr1)', TRUE
        setMember
       label8:
      end // of function 

      setMember
      push r:1, '36}9L('
      function2 () (r:1='this')
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label9
        push r:this, '5Gr1)', TRUE
        setMember
       label9:
        push r:this, '5Gr1)'
        getMember
        return
      end // of function 

      setMember
      push '0y)Lk', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 'splice'
      getMember
      setVariable
      push ']]*Q1(', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 'pop'
      getMember
      setVariable
      push '=dbLP', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 'shift'
      getMember
      setVariable
      push '(Ip9A', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 'unshift'
      getMember
      setVariable
      push '7EyYf', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 'push'
      getMember
      setVariable
      push '=(,aA'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '3d0fx', 0
      setMember
      push r:0, '1aXd{', 1
      setMember
      push r:0, '*h0p]', 2
      setMember
      push r:0, '=Y7h]', 3
      setMember
      push r:0, '8ITeH(', 4
      setMember
      push r:0, '582dG', 5000, 1000, 500, 250, 100, 5
      initArray
      push 1, ';ndCG'
      getVariable
      push '*G6KR'
      callMethod
      setMember
      push r:0, '8O)tG', '7', 15, '6', 0, 2
      initObject
      push '7', 5, '6', 1, 2
      initObject
      push '7', 10, '6', 4, 2
      initObject
      push '7', 9, '6', 4, 2
      initObject
      push '7', 9, '6', 4, 2
      initObject
      push '7', 8, '6', 4, 2
      initObject
      push '7', 7, '6', 4, 2
      initObject
      push '7', 7, '6', 3, 2
      initObject
      push '7', 6, '6', 3, 2
      initObject
      push '7', 5, '6', 3, 2
      initObject
      push '7', 5, '6', 2, 2
      initObject
      push '7', 4, '6', 2, 2
      initObject
      push '7', 4, '6', 1, 2
      initObject
      push '7', 3, '6', 1, 2
      initObject
      push '7', 3, '6', 0, 2
      initObject
      push 15
      initArray
      setMember
      push ',i0 ['
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push '+7U K'
      function2 (r:2='}J') (r:1='this')
        push r:this, ')2fr3', r:'}J'
        setMember
        push r:this, '}Zms3', 0, 'Array'
        new
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, ']1sj+'
      function2 () (r:1='this')
        push r:this, ')2fr3'
        getMember
        return
      end // of function 

      setMember
      push r:1, '-fC3a'
      function2 (r:2='59F') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'59F'
        getMember
        setRegister r:3
        pop
        push r:3, NULL
        equals
        not
        branchIfTrue label10
        push '9oK', 0, 'Array'
        new
        push 'cur', 0, 2
        initObject
        setRegister r:3
        pop
        push r:this, '}Zms3'
        getMember
        push r:'59F', r:3
        setMember
       label10:
        push r:3
        return
      end // of function 

      setMember
      push r:1, ']bu40'
      function2 (r:2='[-99') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'[-99'
        getMember
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, 'cur'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:7
        pop
        push r:'[-99', 1000
        multiply
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label12
       label11:
        push r:6
        increment
        setRegister r:6
        pop
       label12:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label14
        push r:4, r:6
        getMember
        push '_name'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label13
        push r:8, r:7
        add
        push 1, r:4, r:6
        getMember
        push 'swapDepths'
        callMethod
        pop
        push r:4, r:7, r:4, r:6
        getMember
        setMember
        push r:7
        increment
        setRegister r:7
        pop
       label13:
        branch label11
       label14:
        push r:3, 'cur', r:7
        setMember
      end // of function 

      setMember
      push r:1, '*=_p_'
      function2 (r:2='*KB2', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, 'cur'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label15
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'*KB2', 2, r:this, '*=_p_'
        callMethod
        return
       label15:
        push r:6, r:'[-99', 1000
        multiply
        add
        push r:'*KB2', r:this, ')2fr3'
        getMember
        push 3, '3Wt'
        getVariable
        push 'attachMC'
        callMethod
        setRegister r:7
        pop
        push r:5, r:6, r:7
        setMember
        push r:4, 'cur', r:4, 'cur'
        getMember
        increment
        setMember
        push r:7
        return
      end // of function 

      setMember
      push r:1, '18wU*'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, 'cur'
        getMember
        setRegister r:5
        pop
        push r:5, 1000
        equals
        not
        branchIfTrue label16
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', 1, r:this, '18wU*'
        callMethod
        return
       label16:
        push r:5, r:'[-99', 1000
        multiply
        add
        push r:this, ')2fr3'
        getMember
        push 2, '3Wt'
        getVariable
        push 'createEmptyMC'
        callMethod
        setRegister r:6
        pop
        push r:4, r:5, r:6
        setMember
        push r:3, 'cur', r:3, 'cur'
        getMember
        increment
        setMember
        push r:6
        return
      end // of function 

      setMember
      push r:1, '(GbB}'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, 'cur'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label17
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        return
       label17:
        push r:5, r:6, r:'}J'
        setMember
        push r:4, 'cur', r:4, 'cur'
        getMember
        increment
        setMember
        push r:6, r:'[-99', 1000
        multiply
        add
        return
      end // of function 

      setMember
      push r:1, '+2NA'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        push 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, r:'[-99'
        equals
        not
        branchIfTrue label18
        push UNDEF
        return
       label18:
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:5, 'cur'
        getMember
        setRegister r:7
        pop
        push 0
        setRegister r:8
        pop
        branch label20
       label19:
        push r:8
        increment
        setRegister r:8
        pop
       label20:
        push r:8, r:7
        lessThan
        not
        branchIfTrue label22
        push r:6, r:8
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label21
        push r:6, r:8, NULL
        setMember
        branch label22
       label21:
        branch label19
       label22:
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}oQA7'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label23
        push r:6, r:7, NULL
        setMember
        push r:'}J', 1, r:6, 'unshift'
        callMethod
        pop
        push r:5, 'cur', r:5, 'cur'
        getMember
        increment
        setMember
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label23:
      end // of function 

      setMember
      push r:1, '08M8'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label25
        push r:6, r:7, NULL
        setMember
        push r:5, 'cur'
        getMember
        push 1000
        equals
        not
        branchIfTrue label24
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label24:
        push r:5, 'cur'
        getMember
        setRegister r:3
        pop
        push r:5, 'cur', r:5, 'cur'
        getMember
        increment
        setMember
        push r:3, r:4, 1000
        multiply
        add
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
        push r:6, r:3, r:'}J'
        setMember
       label25:
      end // of function 

      setMember
      push r:1, 'clear'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:4
        pop
        branch label27
       label26:
        push r:4
        increment
        setRegister r:4
        pop
       label27:
        push r:4, r:3, 'cur'
        getMember
        lessThan
        not
        branchIfTrue label28
        push 0, r:5, r:4
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label26
       label28:
        push r:3, 'cur', 0
        setMember
      end // of function 

      setMember
      push r:1, '9(K ;'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, 'cur'
        getMember
        setRegister r:5
        pop
        push -99999999
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label30
       label29:
        push r:6
        increment
        setRegister r:6
        pop
       label30:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label38
        push r:4, r:6
        getMember
        setRegister r:9
        pop
        push r:9, '_y'
        getMember
        setRegister r:10
        pop
        push r:10, r:8
        lessThan
        not
        not
        branchIfTrue label31
        push r:10
        setRegister r:8
        pop
        branch label37
       label31:
        push r:6
        setRegister r:7
        pop
        branch label33
       label32:
        push r:7
        decrement
        setRegister r:7
        pop
       label33:
        push r:7, 0
        greaterThan
        not
        branchIfTrue label36
        push r:4, r:7, 1
        subtract
        getMember
        setRegister r:11
        pop
        push r:11, '_y'
        getMember
        push r:10
        greaterThan
        not
        branchIfTrue label34
        push r:4, r:7, r:11
        setMember
        push r:11, 1, r:9, 'swapDepths'
        callMethod
        pop
        branch label35
       label34:
        push r:4, r:7, r:9
        setMember
        branch label36
       label35:
        branch label32
       label36:
        push r:7, 0
        equals
        not
        branchIfTrue label37
        push r:4, 0, r:9
        setMember
       label37:
        branch label29
       label38:
      end // of function 

      setMember
      push r:1, 'destroy'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label40
       label39:
        push r:2
        increment
        setRegister r:2
        pop
       label40:
        push r:2, r:this, '}Zms3'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label41
        push r:2, 1, r:this, 'clear'
        callMethod
        pop
        branch label39
       label41:
      end // of function 

      setMember
      push 'flash'
      getVariable
      not
      not
      branchIfTrue label42
      push 'flash', 0, 'Object'
      new
      setVariable
     label42:
      push 'flash'
      getVariable
      push '3[4k{'
      getMember
      not
      not
      branchIfTrue label43
      push 'flash'
      getVariable
      push '3[4k{', 0, 'Object'
      new
      setMember
     label43:
      push 'flash'
      getVariable
      push '3[4k{'
      getMember
      push '{lN=R'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setMember
      push '{-kxL'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '87vE7('
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '4plQ5', '{-kxL'
        getVariable
        push '4plQ5'
        getMember
        increment
        setMember
        push 0, '3Wt'
        getVariable
        push 'getTimer'
        callMethod
        setRegister r:2
        pop
        push '{-kxL'
        getVariable
        push ';ILSy', r:2, '{-kxL'
        getVariable
        push '3R,QM'
        getMember
        subtract
        push 1000.0
        divide
        setMember
        push '{-kxL'
        getVariable
        push '3R,QM', r:2
        setMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        push '{-kxL'
        getVariable
        push ';y}-6('
        getMember
        lessThan
        not
        branchIfTrue label44
        push '{-kxL'
        getVariable
        push '-)Xd+', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        push '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        multiply
        push 1, '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        subtract
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        multiply
        add
        setMember
        branch label45
       label44:
        push '{-kxL'
        getVariable
        push ';ILSy', 1, '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        divide
        setMember
       label45:
        push '{-kxL'
        getVariable
        push '-V;B', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        setMember
      end // of function 

      setMember
      push r:0, 'fps'
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        return
      end // of function 

      setMember
      push r:0, '6GI,F', 32
      setMember
      push r:0, ';y}-6(', 0.5
      setMember
      push r:0, '3R,QM', 0, '3Wt'
      getVariable
      push 'getTimer'
      callMethod
      setMember
      push r:0, '[Ad;n', 0.95
      setMember
      push r:0, '-)Xd+', 1
      setMember
      push r:0, '-V;B', 1
      setMember
      push r:0, ';ILSy', 1
      setMember
      push r:0, '4plQ5', 0
      setMember
      push '=3+P'
      function2 (r:2='0') (r:1='this')
        push r:this, '+-(0', r:'0'
        setMember
        push r:this, '}J', '=(,aA'
        getVariable
        push '*h0p]'
        getMember
        push '4,01', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '(', 0
        setMember
        push r:this, '((', 25
        setMember
        push r:this, ')(', 150
        setMember
        push r:this, '}J'
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '}J'
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
        push r:this, '=', 4, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 3
        add
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, ';8,PR'
      function2 () (r:1='this')
        push r:this, '8+C5'
        getMember
        not
        not
        branchIfTrue label48
        push r:this, '8+C5', TRUE
        setMember
        push r:this, ')Bx7K', r:this, '(('
        getMember
        push 150
        lessThan
        not
        branchIfTrue label46
        push 1
        branch label47
       label46:
        push -1
       label47:
        setMember
        push '{X(+', 1, r:this, '}J'
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push r:this, '+-(0'
        getMember
        push '0f 5', NULL, 1
        initArray
        setMember
       label48:
      end // of function 

      setMember
      push r:1, '3[usI('
      function2 () (r:1='this')
        push r:this, '7T4cF(', TRUE
        setMember
        push r:this, '(', -1
        setMember
        push '8Ugi)', 1, r:this, '}J'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 (r:2=';Pa}5') (r:1='this')
        push 20, r:';Pa}5'
        divide
        setRegister r:3
        pop
        push r:this, ')Bx7K'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label49
        push 5
        branch label50
       label49:
        push 10
       label50:
        push r:';Pa}5'
        divide
        setRegister r:4
        pop
        push r:this, '7T4cF('
        getMember
        not
        branchIfTrue label54
        push r:this, '(', r:this, '('
        getMember
        push 0.03, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '((', r:this, '(('
        getMember
        push r:this, '}J'
        getMember
        push '_xscale'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label51
        push -1
        branch label52
       label51:
        push 1
       label52:
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        push 2
        divide
        add
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push r:this, '('
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, ')('
        getMember
        push 280
        greaterThan
        not
        branchIfTrue label53
        push r:this, ')(', 280, r:this, ')('
        getMember
        push 280
        subtract
        subtract
        setMember
        push r:this, '(', 0, r:this, '('
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        subtract
        push 0.8
        multiply
        setMember
        push r:this, '=', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        push 4
        subtract
        setMember
       label53:
        push r:this, '}J'
        getMember
        push '_rotation', r:this, '}J'
        getMember
        push '_rotation'
        getMember
        push r:this, '='
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '}J'
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '}J'
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
        push UNDEF
        return
       label54:
        push 'Key'
        getVariable
        push 'UP'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label56
        push r:this, ')(', r:this, ')('
        getMember
        push r:4, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        setMember
        push r:this, ')('
        getMember
        push 20
        lessThan
        not
        branchIfTrue label55
        push r:this, ')(', 20
        setMember
       label55:
        branch label57
       label56:
        push 'Key'
        getVariable
        push 'DOWN'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label57
        push r:this, ')(', r:this, ')('
        getMember
        push r:4, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, ')('
        getMember
        push 285
        greaterThan
        not
        branchIfTrue label57
        push r:this, ')(', 285
        setMember
       label57:
        push r:this, ')Bx7K'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label64
        push r:this, '((', r:this, '(('
        getMember
        push r:this, ')Bx7K'
        getMember
        push r:3
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '(('
        getMember
        push 275
        greaterThan
        dup
        branchIfTrue label58
        pop
        push r:this, '(('
        getMember
        push 25
        lessThan
       label58:
        not
        branchIfTrue label63
        push r:this, '(('
        getMember
        push 275
        greaterThan
        not
        branchIfTrue label59
        push r:this, '((', 275
        setMember
        branch label60
       label59:
        push r:this, '((', 25
        setMember
       label60:
        push r:this, '}J'
        getMember
        push '_xscale', r:this, '(('
        getMember
        push 150
        greaterThan
        not
        branchIfTrue label61
        push -100
        branch label62
       label61:
        push 100
       label62:
        setMember
        push '}45Fp', 1, r:this, '}J'
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push r:this, ')Bx7K', NULL
        setMember
       label63:
        branch label68
       label64:
        push 'Key'
        getVariable
        push 'SPACE'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        dup
        branchIfTrue label65
        pop
        push 'Key'
        getVariable
        push 'RIGHT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        dup
        not
        branchIfTrue label65
        pop
        push r:this, '(('
        getMember
        push 150
        lessThan
       label65:
        dup
        branchIfTrue label66
        pop
        push 'Key'
        getVariable
        push 'LEFT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        dup
        not
        branchIfTrue label66
        pop
        push r:this, '(('
        getMember
        push 150
        greaterThan
       label66:
        not
        branchIfTrue label67
        push 0, r:this, ';8,PR'
        callMethod
        pop
        branch label68
       label67:
        push r:this, '8+C5', FALSE
        setMember
       label68:
        push r:this, '3['
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label73
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push r:this, ')Bx7K'
        getMember
        push NULL
        equals
        not
        branchIfTrue label69
        push 0.7
        branch label70
       label69:
        push 0.99
       label70:
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:5
        pop
        push r:this, ')(', r:this, ')('
        getMember
        push r:5
        multiply
        push r:this, '3['
        getMember
        push 1, r:5
        subtract
        multiply
        add
        setMember
        push r:this, '3['
        getMember
        push r:this, ')('
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push 5
        lessThan
        not
        branchIfTrue label71
        push r:this, ')(', r:this, '3['
        getMember
        setMember
        push r:this, '3[', NULL
        setMember
       label71:
        push r:this, ')('
        getMember
        push 20
        lessThan
        not
        branchIfTrue label72
        push r:this, ')(', 20
        setMember
        branch label73
       label72:
        push r:this, ')('
        getMember
        push 285
        greaterThan
        not
        branchIfTrue label73
        push r:this, ')(', 285
        setMember
       label73:
        push r:this, '(', r:this, '('
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 10, r:';Pa}5'
        multiply
        divide
        add
        setMember
        push r:this, '(('
        getMember
        push r:this, '('
        getMember
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push 5
        multiply
        add
        setRegister r:6
        pop
        push r:this, ')('
        getMember
        push r:this, '('
        getMember
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push 5
        multiply
        add
        setRegister r:7
        pop
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.7, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:8
        pop
        push r:this, '}J'
        getMember
        push '_x'
        getMember
        push r:8
        multiply
        push r:6, 1, r:8
        subtract
        multiply
        add
        setRegister r:9
        pop
        push r:this, '}J'
        getMember
        push '_y'
        getMember
        push r:8
        multiply
        push r:7, 1, r:8
        subtract
        multiply
        add
        setRegister r:10
        pop
        push r:this, '}J'
        getMember
        push '_x', r:9
        setMember
        push r:this, '}J'
        getMember
        push '_y', r:10
        setMember
        push r:this, ')Bx7K'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label77
        push '8EenK('
        getVariable
        push ']oH'
        getMember
        push 5
        add
        setRegister r:12
        pop
        push r:12, r:12
        multiply
        setRegister r:12
        pop
        push 0
        setRegister r:11
        pop
        branch label75
       label74:
        push r:11
        increment
        setRegister r:11
        pop
       label75:
        push r:11, 0, r:this, '+-(0'
        getMember
        push '*jkx(('
        callMethod
        lessThan
        not
        branchIfTrue label77
        push r:this, '+-(0'
        getMember
        push '2_()'
        getMember
        push r:11
        getMember
        setRegister r:13
        pop
        push r:9, r:13, '(('
        getMember
        subtract
        push 12
        add
        setRegister r:3
        pop
        push r:10, r:13, ')('
        getMember
        subtract
        push 10
        add
        setRegister r:4
        pop
        push r:3, r:3
        multiply
        push r:4, r:4
        multiply
        add
        push r:12
        lessThan
        not
        branchIfTrue label76
        push r:13, 1, r:this, '+-(0'
        getMember
        push '(AEyz'
        callMethod
        pop
       label76:
        branch label74
       label77:
      end // of function 

      setMember
      push '8EenK('
      function2 (r:2='0', r:3=']') (r:1='this')
        push r:this, '+-(0', r:'0'
        setMember
        push r:this, ']', r:']'
        setMember
        push r:this, '}J', '=(,aA'
        getVariable
        push '1aXd{'
        getMember
        push '(xN6v', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:']', 1
        add
        toString
        push 1, r:this, '}J'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '((', 300, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setMember
        push r:this, ')(', 0, 20, 300, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        add
        subtract
        setMember
        push r:this, '{2', 0
        setMember
        push r:this, '}2', 0
        setMember
        push 0, r:this, '9tqzy'
        callMethod
        pop
        push r:this, '(', 100, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 20
        divide
        setMember
        push r:this, '}J'
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '}J'
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
        push r:this, '}J'
        getMember
        push '_xscale', 100, '8EenK('
        getVariable
        push '=;mx-'
        getMember
        multiply
        setMember
        push r:this, '}J'
        getMember
        push '_yscale', 100, '8EenK('
        getVariable
        push '=;mx-'
        getMember
        multiply
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '9tqzy'
      function2 () (r:1='this')
        push r:this, '2[', 200, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 50
        add
        setMember
        push r:this, '3[', 200, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 50
        add
        setMember
        push r:this, '8G56', '8EenK('
        getVariable
        push ']oH'
        getMember
        push 2
        multiply
        setMember
      end // of function 

      setMember
      push r:1, '}S99'
      function2 (r:2='-X') (r:1='this')
        push '=(,aA'
        getVariable
        push '=Y7h]'
        getMember
        push '}S99', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:3
        pop
        push r:3, '_x', r:this, '}J'
        getMember
        push '_x'
        getMember
        setMember
        push r:3, '_y', r:this, '}J'
        getMember
        push '_y'
        getMember
        setMember
        push r:3, 1, 'Color'
        new
        setRegister r:4
        pop
        push 5785734, 16500502, 5957126, 14752516, 4
        initArray
        setRegister r:5
        pop
        push r:5, r:this, ']'
        getMember
        getMember
        push 1, r:4, 'setRGB'
        callMethod
        pop
        push '=(,aA'
        getVariable
        push '=Y7h]'
        getMember
        push '{e{=K(', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:6
        pop
        push r:6, '_x', r:this, '}J'
        getMember
        push '_x'
        getMember
        setMember
        push r:6, '_y', r:this, '}J'
        getMember
        push '_y'
        getMember
        setMember
        push r:6, '(Erk5', r:'-X'
        setMember
      end // of function 

      setMember
      push r:1, 'destroy'
      function2 () (r:1='this')
        push 0, r:this, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 (r:2='*M') (r:1='this')
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push '8EenK('
        getVariable
        push '}Yax5'
        getMember
        multiply
        setRegister r:3
        pop
        push r:this, '2['
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:4
        pop
        push r:this, '3['
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:5
        pop
        push r:4, r:4
        multiply
        push r:5, r:5
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        setRegister r:6
        pop
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.96, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:7
        pop
        push r:this, '2VhU6'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label78
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        subtract
        setMember
        push r:this, '2VhU6'
        getMember
        push 0
        greaterThan
        not
        not
        branchIfTrue label78
        push 0, r:this, '9tqzy'
        callMethod
        pop
       label78:
        push r:this, '{2', r:this, '{2'
        getMember
        push r:7
        multiply
        push r:4, 1, r:7
        subtract
        multiply
        add
        setMember
        push r:this, '}2', r:this, '}2'
        getMember
        push r:7
        multiply
        push r:5, 1, r:7
        subtract
        multiply
        add
        setMember
        push 1
        setRegister r:8
        pop
        push r:this, '(('
        getMember
        push 40
        lessThan
        not
        branchIfTrue label79
        push r:this, '{2', r:this, '{2'
        getMember
        push r:8
        add
        setMember
       label79:
        push r:this, ')('
        getMember
        push 40
        lessThan
        not
        branchIfTrue label80
        push r:this, '}2', r:this, '}2'
        getMember
        push r:8
        add
        setMember
       label80:
        push r:this, '(('
        getMember
        push 260
        greaterThan
        not
        branchIfTrue label81
        push r:this, '{2', r:this, '{2'
        getMember
        push r:8
        subtract
        setMember
       label81:
        push r:this, ')('
        getMember
        push 260
        greaterThan
        not
        branchIfTrue label82
        push r:this, '}2', r:this, '}2'
        getMember
        push r:8
        subtract
        setMember
       label82:
        push r:6, r:this, '8G56'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        lessThan
        not
        branchIfTrue label83
        push 0, r:this, '9tqzy'
        callMethod
        pop
       label83:
        push r:this, '((', r:this, '(('
        getMember
        push r:this, '{2'
        getMember
        push r:3
        multiply
        add
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push r:this, '}2'
        getMember
        push r:3
        multiply
        add
        setMember
        push r:this, ')('
        getMember
        push 280
        greaterThan
        not
        branchIfTrue label84
        push r:this, ')(', 280, r:this, ')('
        getMember
        push 280
        subtract
        subtract
        setMember
        push r:this, '}2', 0, r:this, '}2'
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        subtract
        setMember
        push r:this, '{2', r:this, '{2'
        getMember
        push -1
        multiply
        setMember
       label84:
        push r:this, '+-(0'
        getMember
        push '2_()'
        getMember
        setRegister r:10
        pop
        push r:10, 'length'
        getMember
        setRegister r:11
        pop
        push r:'*M', 1
        add
        setRegister r:9
        pop
        branch label86
       label85:
        push r:9
        increment
        setRegister r:9
        pop
       label86:
        push r:9, r:11
        lessThan
        not
        branchIfTrue label88
        push r:10, r:9
        getMember
        setRegister r:12
        pop
        push r:12, '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:13
        pop
        push r:12, ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:14
        pop
        push r:13, r:13
        multiply
        push r:14, r:14
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        setRegister r:8
        pop
        push r:8, '8EenK('
        getVariable
        push ']oH'
        getMember
        push 2
        multiply
        lessThan
        not
        branchIfTrue label87
        push r:13, r:14, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        setRegister r:15
        pop
        push '8EenK('
        getVariable
        push ']oH'
        getMember
        push 2
        multiply
        push r:8
        subtract
        push 2
        divide
        setRegister r:8
        pop
        push r:8, r:15, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        multiply
        setRegister r:16
        pop
        push r:8, r:15, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        multiply
        setRegister r:17
        pop
        push r:this, '((', r:this, '(('
        getMember
        push r:16
        subtract
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push r:17
        subtract
        setMember
        push r:12, '((', r:12, '(('
        getMember
        push r:16
        add
        setMember
        push r:12, ')(', r:12, ')('
        getMember
        push r:17
        add
        setMember
       label87:
        branch label85
       label88:
        push r:this, '}J'
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '}J'
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
        push TRUE
        return
      end // of function 

      setMember
      push r:0, '}Yax5', 0.05
      setMember
      push r:0, '=;mx-', 1.3
      setMember
      push r:0, ']oH', 15, '8EenK('
      getVariable
      push '=;mx-'
      getMember
      multiply
      setMember
      push '(WBt)'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ']}Ou;(', 1
      setMember
      push r:0, '3I0pG', 2
      setMember
      push r:0, '{;7F4', 3
      setMember
      push r:0, '8U(wu', 4
      setMember
      push r:0, '}[cpB', 5
      setMember
      push r:0, '9xv]A', 6
      setMember
      push r:0, '{yQ=Q', 7
      setMember
      push r:0, '+,W', 8
      setMember
      push r:0, '2y+dV', 9
      setMember
      push r:0, '(tBee', 10
      setMember
      push r:0, '3)i[=', 11
      setMember
      push r:0, ' J3IC', 12
      setMember
      push r:0, '[6jRc', 13
      setMember
      push r:0, ')8Fyj', 14
      setMember
      push '44{N'
      function2 (r:2='-iB=') (r:1='this')
        push r:this, ']}lAm', r:'-iB=', 1, '+7U K'
        new
        setMember
        push r:'-iB=', 'onMouseMove', '}KMv1', r:this, 2, '3Wt'
        getVariable
        push 'callback'
        callMethod
        setMember
        push r:'-iB=', 'onMouseDown', ' (sy3', r:this, 2, '3Wt'
        getVariable
        push 'callback'
        callMethod
        setMember
        push r:this, ';+', '=(,aA'
        getVariable
        push '3d0fx'
        getMember
        push ';+', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '2;dS5', '=(,aA'
        getVariable
        push '8ITeH('
        getMember
        push ';kq4m', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '2;dS5'
        getMember
        push '_x', 300
        setMember
        push r:this, '2_()', 0, '{sRCQ'
        new
        setMember
        push r:this, '5U4B', 0, 1
        initArray
        setMember
        push r:this, '7F;h8', 0, 1
        initArray
        setMember
        push r:this, '}V--k', 0, 1
        initArray
        setMember
        push r:this, '-_X}5', '$m', 0, '$c', 0, 0, 0, 0, 0, 0, 6
        initArray
        push 2
        initObject
        setMember
        push r:this, '4,01', r:this, 1, '=3+P'
        new
        setMember
        push r:this, '=HU11', -1, 1
        initArray
        setMember
        push r:this, '[4zL2', 0, 1
        initArray
        setMember
        push 0
        setRegister r:3
        pop
        branch label90
       label89:
        push r:3
        increment
        setRegister r:3
        pop
       label90:
        push r:3, '=(,aA'
        getVariable
        push '8O)tG'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label91
        push r:this, '[4zL2', r:this, '[4zL2'
        getMember
        push 0
        getMember
        push '=(,aA'
        getVariable
        push '8O)tG'
        getMember
        push r:3
        getMember
        push '7'
        getMember
        add
        push 1
        initArray
        setMember
        branch label89
       label91:
        push r:this, '2;dS5'
        getMember
        push '+Da3+'
        getMember
        push 'text', r:this, '[4zL2'
        getMember
        push 0
        getMember
        toString
        setMember
        push 0, r:this, '{szoF('
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '}KMv1'
      function2 () (r:1='this')
        push r:this, '4,01'
        getMember
        push '3[', r:this, ';+'
        getMember
        push '_ymouse'
        getMember
        setMember
      end // of function 

      setMember
      push r:1, ' (sy3'
      function2 () (r:1='this')
        push r:this, '4,01'
        getMember
        push ')Bx7K'
        getMember
        push NULL
        equals
        not
        branchIfTrue label92
        push r:this, '}V--k', 0, 1
        initArray
        setMember
        push r:this, '-_X}5'
        getMember
        push '$m', r:this, '-_X}5'
        getMember
        push '$m'
        getMember
        increment
        setMember
        push 0, r:this, '4,01'
        getMember
        push ';8,PR'
        callMethod
        pop
       label92:
      end // of function 

      setMember
      push r:1, '{szoF('
      function2 () (r:1='this')
        push r:this, '=HU11', r:this, '=HU11'
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push '=(,aA'
        getVariable
        push '8O)tG'
        getMember
        push r:this, '=HU11'
        getMember
        push 0
        getMember
        getMember
        push NULL
        equals
        not
        branchIfTrue label93
        push r:this, '-_X}5'
        getMember
        push 1, ';ndCG'
        getVariable
        push '7T4cF('
        callMethod
        pop
        branch label94
       label93:
        push '=(,aA'
        getVariable
        push '8O)tG'
        getMember
        push r:this, '=HU11'
        getMember
        push 0
        getMember
        getMember
        push '7'
        getMember
        push 1, r:this, '*8]ya'
        callMethod
        pop
       label94:
      end // of function 

      setMember
      push r:1, '*8]ya'
      function2 (r:2='7') (r:1='this')
        push 1, 3, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        add
        push 1, 3, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        add
        push 1, 3, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        add
        push 3
        initArray
        setRegister r:4
        pop
        push 0
        setRegister r:3
        pop
        branch label96
       label95:
        push r:3
        increment
        setRegister r:3
        pop
       label96:
        push r:3, r:'7'
        lessThan
        not
        branchIfTrue label97
        push r:4, 1, '-[m(M'
        getVariable
        push '7g,ln'
        callMethod
        push r:this, 2, '8EenK('
        new
        setRegister r:5
        pop
        push r:5, 1, r:this, '2_()'
        getMember
        push 'push'
        callMethod
        pop
        branch label95
       label97:
      end // of function 

      setMember
      push r:1, '(AEyz'
      function2 (r:2=')') (r:1='this')
        push r:')', ']'
        getMember
        push r:this, '0f 5'
        getMember
        push 0
        getMember
        equals
        not
        branchIfTrue label98
        push r:this, ',*bWP', r:this, ',*bWP'
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        branch label99
       label98:
        push r:this, ',*bWP', 1, 1
        initArray
        setMember
        push r:this, '0f 5', r:')', ']'
        getMember
        push 1
        initArray
        setMember
       label99:
        push r:')', ']'
        getMember
        push 3
        equals
        not
        branchIfTrue label100
        push '=(,aA'
        getVariable
        push '=Y7h]'
        getMember
        push '[E26]', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:3
        pop
        push r:3, '_x', r:')', '(('
        getMember
        setMember
        push r:3, '_y', r:')', ')('
        getMember
        setMember
        push r:this, '-_X}5'
        getMember
        push 1, ';ndCG'
        getVariable
        push '7T4cF('
        callMethod
        pop
        push 0, r:this, '4,01'
        getMember
        push '3[usI('
        callMethod
        pop
        branch label101
       label100:
        push '=(,aA'
        getVariable
        push '582dG'
        getMember
        push 'length'
        getMember
        push 1
        subtract
        push r:this, ',*bWP'
        getMember
        push 0
        getMember
        push 1
        subtract
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        int
        setRegister r:4
        pop
        push '=(,aA'
        getVariable
        push '582dG'
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push r:this, '-_X}5'
        getMember
        push '$c'
        getMember
        push r:4, r:this, '-_X}5'
        getMember
        push '$c'
        getMember
        push r:4
        getMember
        increment
        setMember
        push r:5, 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push r:4, 1, r:')', '}S99'
        callMethod
        pop
        push r:this, '[4zL2', r:this, '[4zL2'
        getMember
        push 0
        getMember
        decrement
        push 1
        initArray
        setMember
        push r:this, '2;dS5'
        getMember
        push '+Da3+'
        getMember
        push 'text', r:this, '[4zL2'
        getMember
        push 0
        getMember
        toString
        setMember
       label101:
        push 0, r:')', 'destroy'
        callMethod
        pop
        push r:')', 1, r:this, '2_()'
        getMember
        push 'remove'
        callMethod
        pop
        push r:this, '5U4B', 0, 1
        initArray
        setMember
      end // of function 

      setMember
      push r:1, '0D 6'
      function2 () (r:1='this')
        push 7
        setRegister r:2
        pop
        push r:this, '5U4B', r:this, '5U4B'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        add
        push 1
        initArray
        setMember
        push r:this, '}V--k', r:this, '}V--k'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        add
        push 1
        initArray
        setMember
        push r:this, '7F;h8'
        getMember
        push 0
        getMember
        push 10
        lessThan
        dup
        not
        branchIfTrue label102
        pop
        push r:this, '5U4B'
        getMember
        push 0
        getMember
        push 10
        greaterThan
       label102:
        not
        branchIfTrue label103
        push r:this, '5U4B', 0, 1
        initArray
        setMember
        push r:this, '7F;h8', r:this, '7F;h8'
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push 3, r:this, 2, '8EenK('
        new
        push 1, r:this, '2_()'
        getMember
        push 'push'
        callMethod
        pop
       label103:
        push 0, r:this, '*jkx(('
        callMethod
        push 6
        greaterThan
        dup
        not
        branchIfTrue label104
        pop
        push 10000, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        int
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
       label104:
        not
        branchIfTrue label115
        push 5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        dup
        branchIfTrue label105
        pop
        push r:this, '}V--k'
        getMember
        push 0
        getMember
        push 5
        greaterThan
       label105:
        not
        branchIfTrue label109
        push 0, r:this, '*jkx(('
        callMethod
        setRegister r:4
        pop
        push 0
        setRegister r:3
        pop
        branch label107
       label106:
        push r:3
        increment
        setRegister r:3
        pop
       label107:
        push r:3, r:4
        lessThan
        not
        branchIfTrue label108
        push r:this, '2_()'
        getMember
        push r:3
        getMember
        setRegister r:5
        pop
        push r:5, '2[', 150, r:3, r:4
        divide
        push 'Math'
        getVariable
        push 'PI'
        getMember
        multiply
        push 2
        multiply
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push 100
        multiply
        add
        setMember
        push r:5, '3[', 150, r:3, r:4
        divide
        push 'Math'
        getVariable
        push 'PI'
        getMember
        multiply
        push 2
        multiply
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push 100
        multiply
        add
        setMember
        push r:5, '8G56', 0
        setMember
        push r:5, '2VhU6', 5
        setMember
        branch label106
       label108:
        branch label115
       label109:
        push 250, 150, 50, 3
        initArray
        setRegister r:6
        pop
        push 0, 0, 0, 3
        initArray
        setRegister r:7
        pop
        push 0
        setRegister r:3
        pop
        branch label111
       label110:
        push r:3
        increment
        setRegister r:3
        pop
       label111:
        push r:3, 0, r:this, '*jkx(('
        callMethod
        lessThan
        not
        branchIfTrue label115
        push r:this, '2_()'
        getMember
        push r:3
        getMember
        setRegister r:8
        pop
        push r:8, ']'
        getMember
        push 3
        equals
        not
        not
        branchIfTrue label114
        push r:7, r:8, ']'
        getMember
        getMember
        push r:7, r:8, ']'
        getMember
        push r:7, r:8, ']'
        getMember
        getMember
        increment
        setMember
        setRegister r:9
        pop
        push r:9, 2
        modulo
        push 0
        greaterThan
        not
        branchIfTrue label112
        push 1
        branch label113
       label112:
        push -1
       label113:
        push 15
        multiply
        push r:9
        multiply
        setRegister r:9
        pop
        push r:8, '2[', 150, r:9
        add
        setMember
        push r:8, '3[', r:6, r:8, ']'
        getMember
        getMember
        setMember
        push r:8, '8G56', 0
        setMember
        push r:8, '2VhU6', 5
        setMember
       label114:
        branch label110
       label115:
        push 0
        setRegister r:3
        pop
        branch label117
       label116:
        push r:3
        increment
        setRegister r:3
        pop
       label117:
        push r:3, r:2
        lessThan
        not
        branchIfTrue label118
        push r:2, 1, r:this, '4,01'
        getMember
        push '87vE7('
        callMethod
        pop
        branch label116
       label118:
        push 0
        setRegister r:3
        pop
        branch label120
       label119:
        push r:3
        increment
        setRegister r:3
        pop
       label120:
        push r:3, 0, r:this, '*jkx(('
        callMethod
        lessThan
        not
        branchIfTrue label122
        push r:3, 1, r:this, '2_()'
        getMember
        push r:3
        getMember
        push '87vE7('
        callMethod
        not
        not
        branchIfTrue label121
        push 1, r:3, r:3
        decrement
        setRegister r:3
        pop
        push 2, r:this, '2_()'
        getMember
        push 'splice'
        callMethod
        pop
       label121:
        branch label119
       label122:
        push 0, r:this, '*jkx(('
        callMethod
        push r:this, '7F;h8'
        getMember
        push 0
        getMember
        subtract
        push '=(,aA'
        getVariable
        push '8O)tG'
        getMember
        push r:this, '=HU11'
        getMember
        push 0
        getMember
        getMember
        push '6'
        getMember
        greaterThan
        not
        not
        branchIfTrue label123
        push 0, r:this, '{szoF('
        callMethod
        pop
       label123:
        push 0, r:this, '2_()'
        getMember
        push '36}9L('
        callMethod
        not
        branchIfTrue label124
        push 0, ';ndCG'
        getVariable
        push '0ze*c'
        callMethod
        pop
       label124:
      end // of function 

      setMember
      push r:1, 'destroy'
      function2 () (r:1='this')
      end // of function 

      setMember
      push r:1, '*jkx(('
      function2 () (r:1='this')
        push r:this, '2_()'
        getMember
        push 'length'
        getMember
        return
      end // of function 

      setMember
      push '980Sb'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'init'
      function2 (r:2='}J') (r:1='this')
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        not
        branchIfTrue label125
        push UNDEF
        return
       label125:
        push '980Sb'
        getVariable
        push ')2fr3', r:'}J'
        setMember
        push '980Sb'
        getVariable
        push '({B6', '980Sb'
        getVariable
        push ')2fr3'
        getMember
        push 1, '44{N'
        new
        setMember
      end // of function 

      setMember
      push r:0, '0D 6'
      function2 () (r:1='this')
        push 0, '{-kxL'
        getVariable
        push '87vE7('
        callMethod
        pop
        push 0, '980Sb'
        getVariable
        push '({B6'
        getMember
        push '0D 6'
        callMethod
        pop
      end // of function 

      setMember
      push '-[m(M'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',Hwi)'
      function2 ('-', r:2='5U4B') (r:1='this')
        push '*B'
        var
        push '*B', r:'5U4B'
        function2 () (r:1='this')
          push '*B'
          getVariable
          push 1, 'clearInterval', 1, '3Wt'
          getVariable
          push 'getGlobal'
          callMethod
          push UNDEF
          callMethod
          pop
          push 0, '-'
          callFunction
          pop
        end // of function 

        push 2, 'setInterval', 1, '3Wt'
        getVariable
        push 'getGlobal'
        callMethod
        push UNDEF
        callMethod
        setVariable
      end // of function 

      setMember
      push r:0, '}wUHz'
      function2 (r:2='=rJ', r:3='7olX7', r:4='}wUHz') (r:1='this')
        push r:'=rJ', NULL
        equals
        not
        branchIfTrue label126
        push NULL
        return
       label126:
        push r:'7olX7', 'length'
        getMember
        setRegister r:5
        pop
        push r:5, 1
        equals
        not
        branchIfTrue label127
        push r:'}wUHz', 1, r:'7olX7', 1, r:'=rJ', 'split'
        callMethod
        push 'join'
        callMethod
        return
       label127:
        push 0
        setRegister r:7
        pop
        push ''
        setRegister r:8
        pop
       label128:
        push TRUE
        not
        branchIfTrue label130
        push r:7, r:'7olX7', 2, r:'=rJ', 'indexOf'
        callMethod
        setRegister r:6
        pop
        push r:6, -1
        equals
        not
        branchIfTrue label129
        branch label130
       label129:
        push r:8, r:6, r:7, 2, r:'=rJ', 'slice'
        callMethod
        push r:'}wUHz'
        add
        add
        setRegister r:8
        pop
        push r:6, r:5
        add
        setRegister r:7
        pop
        branch label128
       label130:
        push r:8, r:7, 1, r:'=rJ', 'substring'
        callMethod
        add
        return
      end // of function 

      setMember
      push r:0, '* I51'
      function2 (r:2='=rJ') (r:1='this')
        push 0, 'Array'
        new
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        push r:'=rJ', 'length'
        getMember
        setRegister r:6
        pop
        push 0
        setRegister r:3
        pop
        branch label132
       label131:
        push r:3
        increment
        setRegister r:3
        pop
       label132:
        push r:3, r:6
        lessThan
        not
        branchIfTrue label137
        push r:3, 1, r:'=rJ', 'charCodeAt'
        callMethod
        setRegister r:7
        pop
        push r:7, 10
        equals
        dup
        branchIfTrue label133
        pop
        push r:7, 13
        equals
       label133:
        not
        branchIfTrue label136
        push r:3, r:5, 2, r:'=rJ', 'slice'
        callMethod
        push 1, r:4, 'push'
        callMethod
        pop
        push r:7, 13
        equals
        dup
        not
        branchIfTrue label134
        pop
        push r:3, 1
        add
        push 1, r:'=rJ', 'charCodeAt'
        callMethod
        push 10
        equals
       label134:
        not
        branchIfTrue label135
        push r:3
        increment
        setRegister r:3
        pop
       label135:
        push r:3, 1
        add
        setRegister r:5
        pop
       label136:
        branch label131
       label137:
        push r:3, r:5, 2, r:'=rJ', 'slice'
        callMethod
        push 1, r:4, 'push'
        callMethod
        pop
        push r:4
        return
      end // of function 

      setMember
      push r:0, ',JBe0'
      function2 (r:2=';p(') (r:1='this')
        push 0, r:';p(', 'duplicate'
        callMethod
        setRegister r:4
        pop
        push r:4, 'length'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:3
        pop
        branch label139
       label138:
        push r:3
        increment
        setRegister r:3
        pop
       label139:
        push r:3, r:5
        lessThan
        not
        branchIfTrue label140
        push r:5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:6
        pop
        push r:5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:7
        pop
        push r:4, r:6
        getMember
        setRegister r:8
        pop
        push r:4, r:6, r:4, r:7
        getMember
        setMember
        push r:4, r:7, r:8
        setMember
        branch label138
       label140:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '4UQ(1'
      function2 (r:2='}J') (r:1='this')
        push 0
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
       label141:
        push r:'}J', '_parent'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label142
        push r:3, r:'}J', '_x'
        getMember
        add
        setRegister r:3
        pop
        push r:4, r:'}J', '_y'
        getMember
        add
        setRegister r:4
        pop
        push r:'}J', '_parent'
        getMember
        setRegister r:'}J'
        pop
        branch label141
       label142:
        push '{2', r:3, '}2', r:4, 2
        initObject
        return
      end // of function 

      setMember
      push r:0, ' Ly7b'
      function2 (r:2='((', r:3='{nq3-(') (r:1='this')
        push r:'(('
        toString
        setRegister r:4
        pop
       label143:
        push r:4, 'length'
        getMember
        push r:'{nq3-('
        lessThan
        not
        branchIfTrue label144
        push '0', r:4
        add
        setRegister r:4
        pop
        branch label143
       label144:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '7g,ln'
      function2 (r:2='(') (r:1='this')
        push 0
        setRegister r:3
        pop
        push r:'(', 'length'
        getMember
        push 1
        subtract
        setRegister r:4
        pop
        branch label146
       label145:
        push r:4
        decrement
        setRegister r:4
        pop
       label146:
        push r:4, 0
        lessThan
        not
        not
        branchIfTrue label147
        push r:3, r:'(', r:4
        getMember
        add
        setRegister r:3
        pop
        branch label145
       label147:
        push r:3, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
       label148:
        push r:3, r:'(', r:4
        getMember
        lessThan
        not
        not
        branchIfTrue label149
        push r:3, r:'(', r:4
        getMember
        subtract
        setRegister r:3
        pop
        push r:4
        increment
        setRegister r:4
        pop
        branch label148
       label149:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '4*fgv'
      function2 (r:2='*QA', r:3='+QA') (r:1='this')
        push r:'*QA', 1, r:'*QA', 'getBounds'
        callMethod
        setRegister r:4
        pop
        push r:'*QA', 1, r:'+QA', 'getBounds'
        callMethod
        setRegister r:5
        pop
        push r:4, 'xMin'
        getMember
        push r:4, 'xMax'
        getMember
        add
        push 2
        divide
        push r:5, 'xMin'
        getMember
        push r:5, 'xMax'
        getMember
        add
        push 2
        divide
        subtract
        setRegister r:6
        pop
        push r:4, 'yMin'
        getMember
        push r:4, 'yMax'
        getMember
        add
        push 2
        divide
        push r:5, 'yMin'
        getMember
        push r:5, 'yMax'
        getMember
        add
        push 2
        divide
        subtract
        setRegister r:7
        pop
        push r:6, r:6
        multiply
        push r:7, r:7
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        return
      end // of function 

      setMember
      push r:0, '16KA'
      function2 ('}J') (r:1='this')
        push '(', 0, 'Array'
        new
        varEquals
        function2 (r:2='4') (r:1='this')
          push '}J'
          getVariable
          push r:'4'
          getMember
          setRegister r:3
          pop
          push r:3, 1, '3Wt'
          getVariable
          push '_typeof'
          callMethod
          push 'movieclip'
          equals
          dup
          not
          branchIfTrue label150
          pop
          push r:3, '_parent'
          getMember
          push '}J'
          getVariable
          equals
         label150:
          not
          branchIfTrue label151
          push r:3, 1, '('
          getVariable
          push 'push'
          callMethod
          pop
         label151:
        end // of function 

        push '}J'
        getVariable
        push 2, '3Wt'
        getVariable
        push 'forin'
        callMethod
        pop
        push '('
        getVariable
        return
      end // of function 

      setMember
      push r:0, 'localToGlobal'
      function2 (r:2='}J', r:3='((', r:4=')(') (r:1='this')
        push 0, 'Hash'
        new
        setRegister r:5
        pop
        push r:'((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:5, 1, r:'}J', 'localToGlobal'
        callMethod
        pop
        push '((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push ')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push 2
        initObject
        return
      end // of function 

      setMember
      push r:0, 'globalToLocal'
      function2 (r:2='}J', r:3='((', r:4=')(') (r:1='this')
        push 0, 'Hash'
        new
        setRegister r:5
        pop
        push r:'((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:5, 1, r:'}J', 'globalToLocal'
        callMethod
        pop
        push '((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push ')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push 2
        initObject
        return
      end // of function 

      setMember
      push r:0, '{Gq]-'
      function2 () (r:1='this')
        push '$r', '$h', '$w', '$y', '$x', '$box', '$matrixType', '$radial', '$linear', 9
        initArray
        setRegister r:2
        pop
        push '-[m(M'
        getVariable
        push ']cY[2', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:3
        pop
        branch label153
       label152:
        push r:3
        increment
        setRegister r:3
        pop
       label153:
        push r:3, r:2, 'length'
        getMember
        lessThan
        not
        branchIfTrue label154
        push r:2, r:3
        getMember
        setRegister r:4
        pop
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push r:3, 1, 1, r:4, 'substring'
        callMethod
        setMember
        branch label152
       label154:
      end // of function 

      setMember
      push r:0, 'beginGradientFill'
      function2 (r:2='}J', r:3=' Wo02', r:4='=cKzE(', r:5='8)JNX', r:6='7eq8)', r:7=',96mA') (r:1='this')
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push NULL
        equals
        not
        branchIfTrue label155
        push 0, '-[m(M'
        getVariable
        push '{Gq]-'
        callMethod
        pop
       label155:
        push 0, 'Hash'
        new
        setRegister r:8
        pop
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 3
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 2
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:',96mA', '(('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 4
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:',96mA', ')('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 5
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:',96mA', ' ('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 6
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:',96mA', '1'
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 7
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:',96mA', '='
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 8
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:8, r:'7eq8)', r:'8)JNX', r:'=cKzE(', r:' Wo02'
        not
        branchIfTrue label156
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 0
        getMember
        branch label157
       label156:
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 1
        getMember
       label157:
        push 5, r:'}J', 'beginGradientFill'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, ',[A(', 1, 1, '$x', 'substring'
      callMethod
      setMember
      push r:0, '-[A(', 1, 1, '$y', 'substring'
      callMethod
      setMember
      push r:0, ']cY[2', NULL
      setMember
    end // of frame 0
  end // of defineMovieClip 96
  
  exportAssets
    96 as '90D*'
  end // of exportAssets
end
