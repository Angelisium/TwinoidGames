movie '40b15b9ff1719fab85e20f06ef6b3ae7.swf' compressed // flash 8, total frames: 1, frame rate: 40 fps, 700x480 px


  defineMovieClip 2 // total frames: 1
  end // of defineMovieClip 2
  
  exportAssets
    2 as '4mGh1'
  end // of exportAssets

  defineMovieClip 5 // total frames: 1
  end // of defineMovieClip 5
  
  exportAssets
    5 as '1whLz'
  end // of exportAssets

  defineMovieClip 8 // total frames: 1
  end // of defineMovieClip 8
  
  exportAssets
    8 as '0j{ -('
  end // of exportAssets

  defineMovieClip 22 // total frames: 4
  end // of defineMovieClip 22

  defineMovieClip 23 // total frames: 105

    frame 104
      stop
    end // of frame 104
  end // of defineMovieClip 23

  defineMovieClip 33 // total frames: 1
  end // of defineMovieClip 33

  defineMovieClip 36 // total frames: 10

    frame 2
      constants '4Nagn', '0AYB0(', ''  
      function '}-B2' ()
        push 8
        random
        push 0.0
        equals
        dup
        not
        branchIfTrue label1
        pop
        push '4Nagn'
        getVariable
        not
       label1:
        dup
        not
        branchIfTrue label2
        pop
        push '0AYB0('
        getVariable
       label2:
        not
        branchIfTrue label3
        push '', 7, TRUE
        setProperty
        push '4Nagn', TRUE
        setVariable
        branch label4
       label3:
        push '', 7, FALSE
        setProperty
       label4:
        push '0AYB0(', TRUE
        setVariable
      end // of function }-B2

    end // of frame 2

    frame 3
      constants ''  
      function '}-B2' ()
        push 8
        random
        push 0.0
        equals
        not
        branchIfTrue label1
        push '', 7, TRUE
        setProperty
        branch label2
       label1:
        push '', 7, FALSE
        setProperty
       label2:
      end // of function }-B2

    end // of frame 3

    frame 4
      constants '4Nagn', '5P41x', '*mOK0', '_visible', 'gotoAndPlay', 'stop'  
      function2 '}-B2' () (r:1='_global')
        push '4Nagn'
        getVariable
        not
        dup
        not
        branchIfTrue label1
        pop
        push r:_global, '5P41x'
        getMember
       label1:
        not
        branchIfTrue label2
        push '*mOK0'
        getVariable
        push '_visible', TRUE
        setMember
        push 1, 1, '*mOK0'
        getVariable
        push 'gotoAndPlay'
        callMethod
        pop
        push '4Nagn', TRUE
        setVariable
        branch label3
       label2:
        push '*mOK0'
        getVariable
        push '_visible', FALSE
        setMember
        push 0.0, '*mOK0'
        getVariable
        push 'stop'
        callMethod
        pop
       label3:
      end // of function }-B2

    end // of frame 4

    frame 7
      constants ''  
      function '}-B2' ()
        push 10
        random
        push 0.0
        equals
        not
        branchIfTrue label1
        push '', 7, TRUE
        setProperty
        branch label2
       label1:
        push '', 7, FALSE
        setProperty
       label2:
      end // of function }-B2

    end // of frame 7

    frame 8
      constants '', '5P41x', '*mOK0', '_visible'  
      function2 '}-B2' () (r:1='_global')
        push 10
        random
        push 0.0
        equals
        not
        branchIfTrue label4
        push '', 7, TRUE
        setProperty
        push r:_global, '5P41x'
        getMember
        not
        dup
        not
        branchIfTrue label1
        pop
        push 30
        random
        push 0.0
        equals
       label1:
        not
        branchIfTrue label2
        push '*mOK0'
        getVariable
        push '_visible', TRUE
        setMember
        push r:_global, '5P41x', TRUE
        setMember
        branch label3
       label2:
        push '*mOK0'
        getVariable
        push '_visible', FALSE
        setMember
       label3:
        branch label5
       label4:
        push '', 7, FALSE
        setProperty
       label5:
      end // of function }-B2

    end // of frame 8

    frame 9
      constants ''  
      function '}-B2' ()
        push 25
        random
        push 0.0
        equals
        not
        branchIfTrue label1
        push '', 7, TRUE
        setProperty
        branch label2
       label1:
        push '', 7, FALSE
        setProperty
       label2:
      end // of function }-B2

    end // of frame 9
  end // of defineMovieClip 36
  
  exportAssets
    36 as '3,sMC'
  end // of exportAssets
  
  exportAssets
    36 as '3,sMC'
  end // of exportAssets
  
  exportAssets
    8 as '0j{ -('
  end // of exportAssets
  
  exportAssets
    5 as '1whLz'
  end // of exportAssets
  
  exportAssets
    36 as '3,sMC'
  end // of exportAssets
  
  exportAssets
    8 as '0j{ -('
  end // of exportAssets
  
  exportAssets
    5 as '1whLz'
  end // of exportAssets

  defineMovieClip 41 // total frames: 1
  end // of defineMovieClip 41

  defineMovieClip 52 // total frames: 22
  end // of defineMovieClip 52
  
  exportAssets
    52 as ')z[G9('
  end // of exportAssets

  defineMovieClip 55 // total frames: 1
  end // of defineMovieClip 55

  defineMovieClip 56 // total frames: 12
  end // of defineMovieClip 56

  defineMovieClip 57 // total frames: 9
  end // of defineMovieClip 57
  
  exportAssets
    57 as '**5s3'
  end // of exportAssets

  defineMovieClip 73 // total frames: 18

    frame 0
      push '_parent'
      getVariable
      push '2lgqh'
      getMember
      gotoAndPlay
    end // of frame 0

    frame 17
      gotoFrame 1
      play
    end // of frame 17
  end // of defineMovieClip 73

  defineMovieClip 74 // total frames: 1
  end // of defineMovieClip 74

  defineMovieClip 80 // total frames: 8
  end // of defineMovieClip 80

  defineMovieClip 81 // total frames: 1
  end // of defineMovieClip 81

  defineMovieClip 82 // total frames: 17

    frame 0
      push '2lgqh', 18
      random
      setVariable
    end // of frame 0

    frame 16
      gotoFrame 1
      play
    end // of frame 16
  end // of defineMovieClip 82

  defineMovieClip 83 // total frames: 2
  end // of defineMovieClip 83
  
  exportAssets
    83 as ')bXj1'
  end // of exportAssets

  defineMovieClip 85 // total frames: 1
  end // of defineMovieClip 85

  defineMovieClip 86 // total frames: 5

    frame 4
      push ''
      removeClip
    end // of frame 4
  end // of defineMovieClip 86
  
  exportAssets
    86 as '2 EA,('
  end // of exportAssets

  defineMovieClip 92 // total frames: 7
  end // of defineMovieClip 92

  defineMovieClip 97 // total frames: 5
  end // of defineMovieClip 97

  defineMovieClip 102 // total frames: 12
  end // of defineMovieClip 102

  defineMovieClip 110 // total frames: 18
  end // of defineMovieClip 110

  defineMovieClip 117 // total frames: 10
  end // of defineMovieClip 117

  defineMovieClip 119 // total frames: 1
  end // of defineMovieClip 119

  defineMovieClip 120 // total frames: 20
  end // of defineMovieClip 120

  defineMovieClip 124 // total frames: 9
  end // of defineMovieClip 124

  defineMovieClip 127 // total frames: 1
  end // of defineMovieClip 127

  defineMovieClip 129 // total frames: 6
  end // of defineMovieClip 129

  defineMovieClip 134 // total frames: 11
  end // of defineMovieClip 134

  defineMovieClip 135 // total frames: 22
  end // of defineMovieClip 135
  
  exportAssets
    135 as ')7MgQ'
  end // of exportAssets

  defineMovieClip 141 // total frames: 16
  end // of defineMovieClip 141

  defineMovieClip 148 // total frames: 4
  end // of defineMovieClip 148

  defineMovieClip 152 // total frames: 40

    frame 11
      stop
    end // of frame 11

    frame 39
      gotoFrame 0
    end // of frame 39
  end // of defineMovieClip 152
  
  exportAssets
    152 as '1V DC'
  end // of exportAssets

  defineMovieClip 154 // total frames: 1
  end // of defineMovieClip 154

  defineMovieClip 156 // total frames: 1
  end // of defineMovieClip 156

  defineMovieClip 161 // total frames: 11
  end // of defineMovieClip 161

  defineMovieClip 162 // total frames: 1
  end // of defineMovieClip 162

  defineMovieClip 163 // total frames: 17
  end // of defineMovieClip 163

  defineMovieClip 164 // total frames: 1
  end // of defineMovieClip 164
  
  exportAssets
    164 as '1 ;al'
  end // of exportAssets

  defineMovieClip 166 // total frames: 1
  end // of defineMovieClip 166

  defineMovieClip 167 // total frames: 4

    frame 3
      stop
    end // of frame 3
  end // of defineMovieClip 167
  
  exportAssets
    167 as ';IzJK('
  end // of exportAssets

  defineMovieClip 171 // total frames: 4
  end // of defineMovieClip 171

  defineMovieClip 173 // total frames: 1
  end // of defineMovieClip 173

  defineMovieClip 174 // total frames: 20
  end // of defineMovieClip 174

  defineMovieClip 176 // total frames: 1
  end // of defineMovieClip 176

  defineMovieClip 178 // total frames: 1
  end // of defineMovieClip 178

  defineMovieClip 181 // total frames: 8
  end // of defineMovieClip 181

  defineMovieClip 183 // total frames: 1
  end // of defineMovieClip 183

  defineMovieClip 187 // total frames: 1
  end // of defineMovieClip 187

  defineMovieClip 193 // total frames: 41

    frame 0
      stop
    end // of frame 0

    frame 7
      stop
    end // of frame 7

    frame 21
      gotoFrame 0
    end // of frame 21

    frame 31
      gotoFrame 0
    end // of frame 31
  end // of defineMovieClip 193
  
  exportAssets
    193 as '(r9WW'
  end // of exportAssets

  defineMovieClip 195 // total frames: 1
  end // of defineMovieClip 195

  defineMovieClip 196 // total frames: 9

    frame 8
      push ''
      removeClip
    end // of frame 8
  end // of defineMovieClip 196
  
  exportAssets
    196 as '+Jv3J('
  end // of exportAssets

  defineMovieClip 213 // total frames: 17

    frame 16
      push ''
      removeClip
      push 0.0, 'list'
      getVariable
      push 'pop'
      callMethod
      pop
    end // of frame 16
  end // of defineMovieClip 213
  
  exportAssets
    213 as '{B20=('
  end // of exportAssets

  defineMovieClip 214 // total frames: 1
  end // of defineMovieClip 214

  defineMovieClip 215 // total frames: 16

    frame 15
      stop
    end // of frame 15
  end // of defineMovieClip 215
  
  exportAssets
    215 as '=DQ-,('
  end // of exportAssets

  defineMovieClip 219 // total frames: 1
  end // of defineMovieClip 219

  defineMovieClip 221 // total frames: 1
  end // of defineMovieClip 221

  defineMovieClip 224 // total frames: 1
  end // of defineMovieClip 224

  defineMovieClip 225 // total frames: 30
  end // of defineMovieClip 225

  defineMovieClip 227 // total frames: 1
  end // of defineMovieClip 227

  defineMovieClip 229 // total frames: 1
  end // of defineMovieClip 229

  defineMovieClip 230 // total frames: 80
  end // of defineMovieClip 230

  defineMovieClip 231 // total frames: 2
  end // of defineMovieClip 231
  
  exportAssets
    231 as '{XBN+'
  end // of exportAssets

  defineMovieClip 243 // total frames: 10
  end // of defineMovieClip 243

  defineMovieClip 266 // total frames: 27

    frame 26
      push 0.0, '+KD'
      getVariable
      push '9T54'
      callMethod
      pop
    end // of frame 26
  end // of defineMovieClip 266
  
  exportAssets
    266 as '22pr)('
  end // of exportAssets

  defineMovieClip 283 // total frames: 17

    frame 16
      push 0.0, '+KD'
      getVariable
      push '9T54'
      callMethod
      pop
    end // of frame 16
  end // of defineMovieClip 283
  
  exportAssets
    283 as '2KhC(('
  end // of exportAssets

  defineMovieClip 285 // total frames: 1
  end // of defineMovieClip 285

  defineMovieClip 287 // total frames: 1
  end // of defineMovieClip 287

  defineMovieClip 289 // total frames: 1
  end // of defineMovieClip 289

  defineMovieClip 291 // total frames: 1
  end // of defineMovieClip 291

  defineMovieClip 293 // total frames: 17
  end // of defineMovieClip 293

  defineMovieClip 294 // total frames: 1
  end // of defineMovieClip 294
  
  exportAssets
    294 as '3J[ms'
  end // of exportAssets

  defineMovieClip 297 // total frames: 2
  end // of defineMovieClip 297
  
  exportAssets
    297 as '),HaF('
  end // of exportAssets

  defineMovieClip 300 // total frames: 10
  end // of defineMovieClip 300

  defineMovieClip 311 // total frames: 36
  end // of defineMovieClip 311

  defineMovieClip 312 // total frames: 20
  end // of defineMovieClip 312
  
  exportAssets
    312 as ')DGLV'
  end // of exportAssets

  defineMovieClip 318 // total frames: 12

    frame 0
      push 10
      random
      gotoAndPlay
    end // of frame 0

    frame 11
      gotoFrame 1
      play
    end // of frame 11
  end // of defineMovieClip 318

  defineMovieClip 320 // total frames: 1
  end // of defineMovieClip 320

  defineMovieClip 322 // total frames: 1
  end // of defineMovieClip 322

  defineMovieClip 324 // total frames: 1
  end // of defineMovieClip 324

  defineMovieClip 326 // total frames: 1
  end // of defineMovieClip 326

  defineMovieClip 327 // total frames: 22
  end // of defineMovieClip 327

  defineMovieClip 328 // total frames: 20
  end // of defineMovieClip 328
  
  exportAssets
    328 as '(3q]7('
  end // of exportAssets

  defineMovieClip 330 // total frames: 1
  end // of defineMovieClip 330

  defineMovieClip 341 // total frames: 1
  end // of defineMovieClip 341

  defineMovieClip 347 // total frames: 12

    frame 0
      push 10
      random
      gotoAndPlay
    end // of frame 0

    frame 11
      gotoFrame 1
      play
    end // of frame 11
  end // of defineMovieClip 347

  defineMovieClip 348 // total frames: 25
  end // of defineMovieClip 348

  defineMovieClip 353 // total frames: 1
  end // of defineMovieClip 353

  defineMovieClip 354 // total frames: 1
  end // of defineMovieClip 354

  defineMovieClip 357 // total frames: 74
  end // of defineMovieClip 357
  
  exportAssets
    357 as ')cd=C'
  end // of exportAssets

  defineMovieClip 358 // total frames: 1

    frame 0
      push '_parent'
      getVariable
      push ' IWA+'
      getMember
      push 1, '*'
      getVariable
      push 'gotoAndStop'
      callMethod
      pop
    end // of frame 0
  end // of defineMovieClip 358

  defineMovieClip 359 // total frames: 21

    frame 20
      gotoFrame 0
      play
    end // of frame 20
  end // of defineMovieClip 359
  
  exportAssets
    359 as ',XnXA'
  end // of exportAssets
  
  exportAssets
    357 as ')cd=C'
  end // of exportAssets

  defineMovieClip 364 // total frames: 6
  end // of defineMovieClip 364

  defineMovieClip 376 // total frames: 10
  end // of defineMovieClip 376

  defineMovieClip 381 // total frames: 6
  end // of defineMovieClip 381

  defineMovieClip 382 // total frames: 2

    frame 0
      constants ')7', '_parent', '0=*'  
      push ')7', '_parent'
      getVariable
      push '0=*'
      getMember
      varEquals
      push ')7'
      getVariable
      push NULL
      equals
      not
      branchIfTrue label1
      push ')7', '_parent'
      getVariable
      push '_parent'
      getMember
      push '_parent'
      getMember
      push '0=*'
      getMember
      setVariable
     label1:
      push ')7'
      getVariable
      gotoAndStop
    end // of frame 0
  end // of defineMovieClip 382
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets

  defineMovieClip 392 // total frames: 8
  end // of defineMovieClip 392

  defineMovieClip 400 // total frames: 6
  end // of defineMovieClip 400

  defineMovieClip 401 // total frames: 1
  end // of defineMovieClip 401

  defineMovieClip 404 // total frames: 1
  end // of defineMovieClip 404

  defineMovieClip 406 // total frames: 1
  end // of defineMovieClip 406

  defineMovieClip 408 // total frames: 1
  end // of defineMovieClip 408

  defineMovieClip 410 // total frames: 1
  end // of defineMovieClip 410

  defineMovieClip 412 // total frames: 1
  end // of defineMovieClip 412
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets

  defineMovieClip 415 // total frames: 1
  end // of defineMovieClip 415

  defineMovieClip 416 // total frames: 1
  end // of defineMovieClip 416

  defineMovieClip 418 // total frames: 1
  end // of defineMovieClip 418

  defineMovieClip 427 // total frames: 8
  end // of defineMovieClip 427
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets

  defineMovieClip 428 // total frames: 57
  end // of defineMovieClip 428

  defineMovieClip 429 // total frames: 21
  end // of defineMovieClip 429
  
  exportAssets
    382 as '3C-I('
  end // of exportAssets

  defineMovieClip 431 // total frames: 1
  end // of defineMovieClip 431

  defineMovieClip 432 // total frames: 3

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 432
  
  exportAssets
    432 as ')+jEC'
  end // of exportAssets

  defineMovieClip 435 // total frames: 2
  end // of defineMovieClip 435
  
  exportAssets
    435 as '[a,;C'
  end // of exportAssets
  
  exportAssets
    435 as '[a,;C'
  end // of exportAssets
  
  exportAssets
    432 as ')+jEC'
  end // of exportAssets
  
  exportAssets
    357 as ')cd=C'
  end // of exportAssets
  
  exportAssets
    359 as ',XnXA'
  end // of exportAssets
  
  exportAssets
    328 as '(3q]7('
  end // of exportAssets
  
  exportAssets
    312 as ')DGLV'
  end // of exportAssets
  
  exportAssets
    297 as '),HaF('
  end // of exportAssets
  
  exportAssets
    294 as '3J[ms'
  end // of exportAssets
  
  exportAssets
    283 as '2KhC(('
  end // of exportAssets
  
  exportAssets
    266 as '22pr)('
  end // of exportAssets
  
  exportAssets
    231 as '{XBN+'
  end // of exportAssets
  
  exportAssets
    215 as '=DQ-,('
  end // of exportAssets
  
  exportAssets
    213 as '{B20=('
  end // of exportAssets
  
  exportAssets
    196 as '+Jv3J('
  end // of exportAssets
  
  exportAssets
    193 as '(r9WW'
  end // of exportAssets
  
  exportAssets
    167 as ';IzJK('
  end // of exportAssets
  
  exportAssets
    164 as '1 ;al'
  end // of exportAssets
  
  exportAssets
    152 as '1V DC'
  end // of exportAssets
  
  exportAssets
    135 as ')7MgQ'
  end // of exportAssets
  
  exportAssets
    86 as '2 EA,('
  end // of exportAssets
  
  exportAssets
    83 as ')bXj1'
  end // of exportAssets
  
  exportAssets
    57 as '**5s3'
  end // of exportAssets

  defineMovieClip 437 // total frames: 1
  end // of defineMovieClip 437
  
  exportAssets
    437 as ';7wz3('
  end // of exportAssets

  defineMovieClip 440 // total frames: 2
  end // of defineMovieClip 440

  defineMovieClip 481 // total frames: 40
  end // of defineMovieClip 481
  
  exportAssets
    481 as '{y6)2('
  end // of exportAssets

  defineMovieClip 484 // total frames: 1
  end // of defineMovieClip 484

  defineMovieClip 501 // total frames: 26

    frame 25
      stop
    end // of frame 25
  end // of defineMovieClip 501

  defineMovieClip 502 // total frames: 19

    frame 8
      push '5t 9)', 10
      setVariable
    end // of frame 8

    frame 11
      constants '5t 9)', ''  
      push '5t 9)'
      getVariable
      push '5t 9)', '5t 9)'
      getVariable
      decrement
      setVariable
      push 0.0
      greaterThan
      not
      branchIfTrue label1
      push '', 4
      getProperty
      push 1
      subtract
      gotoAndPlay
     label1:
    end // of frame 11

    frame 18
      push ''
      removeClip
    end // of frame 18
  end // of defineMovieClip 502
  
  exportAssets
    502 as '=ZXmL'
  end // of exportAssets

  defineMovieClip 506 // total frames: 3
  end // of defineMovieClip 506
  
  exportAssets
    506 as ',+TFu'
  end // of exportAssets

  defineMovieClip 511 // total frames: 1
  end // of defineMovieClip 511

  defineMovieClip 522 // total frames: 22
  end // of defineMovieClip 522
  
  exportAssets
    522 as ')z[G9('
  end // of exportAssets

  defineMovieClip 528 // total frames: 3
  end // of defineMovieClip 528
  
  exportAssets
    522 as ')z[G9('
  end // of exportAssets
  
  exportAssets
    522 as ')z[G9('
  end // of exportAssets
  
  exportAssets
    522 as ')z[G9('
  end // of exportAssets
  
  exportAssets
    522 as ')z[G9('
  end // of exportAssets
  
  exportAssets
    522 as ')z[G9('
  end // of exportAssets

  defineMovieClip 529 // total frames: 5
  end // of defineMovieClip 529

  defineMovieClip 533 // total frames: 3
  end // of defineMovieClip 533

  defineMovieClip 541 // total frames: 7
  end // of defineMovieClip 541

  defineMovieClip 545 // total frames: 5

    frame 4
      stop
    end // of frame 4
  end // of defineMovieClip 545

  defineMovieClip 548 // total frames: 2
  end // of defineMovieClip 548

  defineMovieClip 555 // total frames: 6
  end // of defineMovieClip 555

  defineMovieClip 571 // total frames: 14
  end // of defineMovieClip 571

  defineMovieClip 573 // total frames: 1
  end // of defineMovieClip 573

  defineMovieClip 574 // total frames: 9

    frame 8
      gotoFrame 1
      play
    end // of frame 8
  end // of defineMovieClip 574

  defineMovieClip 575 // total frames: 10
  end // of defineMovieClip 575
  
  exportAssets
    575 as '97mPC'
  end // of exportAssets
  
  exportAssets
    575 as '97mPC'
  end // of exportAssets
  
  exportAssets
    506 as ',+TFu'
  end // of exportAssets
  
  exportAssets
    502 as '=ZXmL'
  end // of exportAssets
  
  exportAssets
    481 as '{y6)2('
  end // of exportAssets
  
  exportAssets
    437 as ';7wz3('
  end // of exportAssets

  defineMovieClip 576 // total frames: 1

    frame 0
      constants '{sRCQ', '9w+x0(', '5Gr1)', 'Array', 'prototype', 'insert', 'splice', 'call', 'length', 'pop', ']]*Q1(', 'push', '7EyYf', 'shift', '=dbLP', '0y)Lk', 'unshift', '(Ip9A', '36}9L(', '-0]rl', '-iB=', '+KD', '*r', '+-(0', '7Qe;6', '((', ')(', '_x', '_y', '87vE7(', '9T54', 'removeMovieClip', 'remove', '4u=dZ', '}1A{_', 'Math', 'sqrt', ')153L', 'atan2', '[j0D-', '=OA', '[{', ',v0X', '+{eA+', '[b', ']b', '1Jr-,(', '(KpGn', '{-kxL', '-V;B', 'pow', ';zS4((', '2K', '7=q8G(', '44{N', '5;OW;', ';IzJK(', '6QA', '*=_p_', '*DzW', 'random', ']oH', '0X xI(', '2VhU6', '_rotation', '}P{I', '(Erk5', ';ndCG', '-Q)9)', '86{p(', '53RYu', '62GLS', '=HU11', '2Gr]U', ';d3', '4eyD,', '4RW6x', '9Lq;O', '8J2Jt', ';B(7y', ',cqp5', 'flash', 'min', ';CYOh', '4,01', '8Ugi)', ')W}D', '}Yax5', '0BP', ' R', '83489', ';B 9', 'cos', 'sin', 'abs', '8D5}=(', '[a', '(', '{c}4W', ']xii)', '}CL', '6GhvX', '58I]G(', '8A1T3(', '2C0[', '*g;o', ';MBeK', '{BxJE(', '565', '*]Q5}', '3=', ';-[;H', '-4Nbg', '2 EA,(', '_xscale', '_yscale', '2KhC((', ')7MgQ', 'gotoAndStop', '0tJ', '_totalframes', '6b', '849kV', '8kN', ')jQVv', '5b)bA(', '-_X}5', '$k', '2u=W=', '0b]ff', '6}*SN', ';)bt5', '5Hy6b', '*8orO', ';sH08(', ']Gu6y', '}SC6', '=kIA', '+8WOA', 'gotoAndPlay', '3U*}=(', '3Wt', ')oAPu', ';s9Fs', ')96=r', '7B HB', 'stop', '*ewEF', '2donz', '{eOqm', ',){p[', '2', '[zKH0', '1', '+[3N=', '}-B2', '*OA', '95(', '}MNA=(', '=', '0', ')', 'Color', 'ra', 'ga', 'ba', 'aa', 'rb', 'gb', 'bb', 'ab', 'setTransform', 'max', '4I()', '+KiY*', '6+vtH(', ' pyvJ(', '}RXB3', ',PRRg', '-)sr;(', '8s', '}cl4B', '[Ol6B', ',XmYQ', '4]1L', '83GJ[', '9sRER', '=EQy6(', ';XQu=', '6{zdT', '3e-tb', ',i0 [', ')gv94', ',DBRf', 'scale', '_alpha', ' p3z=', '*B', '0Ev2M', '=e3ST', '3)6yL', '2{49;', '*', ' IWA+', '[c4gL', '85(', '2X}A', '$b', '[2(j8', '-6YgZ', '}gGHb', '68I_m', ';{+a4(', '-)OC{', '*g,kL', ']O+)D', '+7U K', ')2fr3', '}Zms3', ']1sj+', '-fC3a', '9oK', '7-,', ']bu40', '_name', 'swapDepths', '7bSH*', '18wU*', '-4*l((', '(GbB}', '+2NA', 'getDepth', 'floor', '}oQA7', '08M8', 'clear', '9(K ;', ',}2X (', 'Object', 'filters', '{lN=R', '+Sk9H', '-zpt4', '}O', '{)55C', '2QF=}', '6PUy4', '[2ezd', '3Iy5z', '4plQ5', 'getTimer', ';ILSy', '3R,QM', ';y}-6(', '-)Xd+', '[Ad;n', '6GI,F', 'fps', '},nzl', '2[j9h', '=3+P', '32', '*;D)', '7Y-tb', ')+jEC', '=g]u6', '39kX5', '=M)xq', '{(MD=(', '*4XJ6', '(t}](', '[4u2,', '0=*', '505t0', '0Re25', '0b3_F(', '8c};', ';jdDn', '2XGnD(', '-43zH(', '88J*9(', 'Key', 'SPACE', 'isDown', 'CONTROL', '16', '{eo[6', '$d', '69-', '7T4cF(', '3=rZ]', 'draw', 'lineStyle', 'moveTo', 'lineTo', ' P+RR', '-[Dd9', '_visible', '*_d*B(', '{P) W', '{0bR,', 'UP', 'DOWN', 'LEFT', 'RIGHT', ',BJRZ', '5jj+C', ',+TFu', '-i', ']', '{B20=(', ',cM(', 'list', '(nox(', '57_8L(', '{jXZ;(', '8J1xN', '9-', ';)4', '5KYs)', '96no3', '(G7+8(', '04wZn', '{y6)2(', ' L96v', '0q3(Q', '[V{(6', ')cd=C', '9qvf3', '2]ya', ')nRX', 'duplicate', '+ikVP', '(yaK*', ']r5gM', '(]hH{', '(WBt)', ']}Ou;(', '3I0pG', '{;7F4', '8U(wu', '}[cpB', '9xv]A', '{yQ=Q', '+,W', '2y+dV', '(tBee', '3)i[=', ' J3IC', '[6jRc', ')8Fyj', '8Z=cb', '97mPC', '4,U=3', '=DQ-,(', '+Jv3J(', '08i_Z', ',43dZ', '22pr)(', '-y6}J', ';cXei', '2[', '6BLr8', '5Xx_O', '(VKB', 'run', '(8LH1', ',XnXA', '4hu1]', '-hCnb', ',N)rb', ',b]2N', '9t1r1', 'onKeyDown', ']668C(', '6{VYR', 'onKeyUp', '=(D=5', 'addListener', '=11Rh', 'getCode', '4aU8Z', '2]g+c', '{f5fb', '3,sMC', '_height', '(KA', '}J', '*J[OB', '0D 6', '+aDob', '8w=P3(', '0ze*c', '+M=v3', '9xuZZ', ')bXj1', '3J[ms', '1 ;al', '{XBN+', '1V DC', '(_EN', '(r9WW', ')DGLV', '**5s3', ';tNu1(', '(3q]7(', '=ZXmL', '+Da3+', 'text', ';7wz3(', '*03T(', '-Cg1Q', '+bovF', '0cM,', '3FA[*', '-5yrF(', ')izmI(', '5W 5', '980Sb', ']{i', '(H5 S', '(kJ+1(', 'mode'  
      push '{sRCQ'
      function2 () (r:1='this', r:2='super')
        push 0, r:super, UNDEF
        callMethod
        pop
        push r:this, '9w+x0(', 0, 1
        initArray
        setMember
        push r:this, '5Gr1)', FALSE
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'Array'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, 'insert'
      function2 (r:2='4AF', r:3='((') (r:1='this')
        push r:'((', 0, r:'4AF', r:this, 4, 'Array'
        getVariable
        push 'prototype'
        getMember
        push 'splice'
        getMember
        push 'call'
        callMethod
        pop
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label1
        push r:this, '5Gr1)', TRUE
        setMember
       label1:
      end // of function 

      setMember
      push r:1, 'pop'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, ']]*Q1('
        getVariable
        push 'call'
        callMethod
        setRegister r:3
        pop
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label2
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        decrement
        push 1
        initArray
        setMember
       label2:
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label3
        push r:this, '5Gr1)', TRUE
        setMember
       label3:
        push r:3
        return
      end // of function 

      setMember
      push r:1, 'push'
      function2 (r:3='((') (r:1='this', r:2='super')
        push r:'((', r:this, 2, '7EyYf'
        getVariable
        push 'call'
        callMethod
        setRegister r:4
        pop
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label4
        push r:this, '5Gr1)', TRUE
        setMember
       label4:
        push r:4
        return
      end // of function 

      setMember
      push r:1, 'shift'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '=dbLP'
        getVariable
        push 'call'
        callMethod
        setRegister r:3
        pop
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label5
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        decrement
        push 1
        initArray
        setMember
       label5:
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label6
        push r:this, '5Gr1)', TRUE
        setMember
       label6:
        push r:3
        return
      end // of function 

      setMember
      push r:1, 'splice'
      function2 (r:3='4AF', r:4='; =') (r:1='this', r:2='super')
        push r:'; =', r:'4AF', r:this, 3, '0y)Lk'
        getVariable
        push 'call'
        callMethod
        setRegister r:5
        pop
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:5, 'length'
        getMember
        subtract
        push 1
        initArray
        setMember
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label7
        push r:this, '5Gr1)', TRUE
        setMember
       label7:
        push r:5
        return
      end // of function 

      setMember
      push r:1, 'unshift'
      function2 (r:3='((') (r:1='this', r:2='super')
        push r:'((', r:this, 2, '(Ip9A'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label8
        push r:this, '5Gr1)', TRUE
        setMember
       label8:
      end // of function 

      setMember
      push r:1, '36}9L('
      function2 () (r:1='this')
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label9
        push r:this, '5Gr1)', TRUE
        setMember
       label9:
        push r:this, '5Gr1)'
        getMember
        return
      end // of function 

      setMember
      push '0y)Lk', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 'splice'
      getMember
      setVariable
      push ']]*Q1(', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 'pop'
      getMember
      setVariable
      push '=dbLP', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 'shift'
      getMember
      setVariable
      push '(Ip9A', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 'unshift'
      getMember
      setVariable
      push '7EyYf', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 'push'
      getMember
      setVariable
      push '-0]rl'
      function2 (r:2='}J') (r:1='this')
        push r:this, '-iB=', r:'}J'
        setMember
        push r:this, '-iB='
        getMember
        push '+KD', r:this
        setMember
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '7Qe;6'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '((', 0
        setMember
        push r:this, ')(', 0
        setMember
        push r:this, '-iB='
        getMember
        push '_x', -100
        setMember
        push r:this, '-iB='
        getMember
        push '_y', -100
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this')
        push r:this, '-iB='
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '-iB='
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this')
        push 0, r:this, '-iB='
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '7Qe;6'
        getMember
        push 'remove'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '4u=dZ'
      function2 () (r:1='this')
        push r:this, '-iB='
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '-iB='
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '}1A{_'
      function2 (r:2='8') (r:1='this')
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:3
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:4
        pop
        push r:3, r:3
        multiply
        push r:4, r:4
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        return
      end // of function 

      setMember
      push r:1, ')153L'
      function2 (r:2='8') (r:1='this')
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:3
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:4
        pop
        push r:3, r:4, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        return
      end // of function 

      setMember
      push r:1, '[j0D-'
      function2 (r:2='6') (r:1='this')
        push r:this, '(('
        getMember
        push 0, r:'6'
        subtract
        lessThan
        dup
        branchIfTrue label10
        pop
        push r:this, '(('
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        push r:'6'
        add
        greaterThan
       label10:
        dup
        branchIfTrue label11
        pop
        push r:this, ')('
        getMember
        push 0, r:'6'
        subtract
        lessThan
       label11:
        dup
        branchIfTrue label12
        pop
        push r:this, ')('
        getMember
        push '*r'
        getVariable
        push '[{'
        getMember
        push r:'6'
        add
        greaterThan
       label12:
        return
      end // of function 

      setMember
      push ',v0X'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '+{eA+', 0.95
        setMember
        push r:this, '[b', 0
        setMember
        push r:this, ']b', 0
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '-0]rl'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '1Jr-,('
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '(KpGn'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label13
        push r:this, ']b', r:this, ']b'
        getMember
        push r:this, '(KpGn'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label13:
        push r:this, '+{eA+'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label14
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push r:this, '+{eA+'
        getMember
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:3
        pop
        push r:this, '[b', r:this, '[b'
        getMember
        push r:3
        multiply
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:3
        multiply
        setMember
       label14:
        push r:this, '((', r:this, '(('
        getMember
        push r:this, '[b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push r:this, ']b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
      end // of function 

      setMember
      push r:1, ';zS4(('
      function2 (r:2='8', r:3='*', r:4='62=') (r:1='this')
        push r:'8', 1, r:this, ')153L'
        callMethod
        setRegister r:5
        pop
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:6
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:7
        pop
        push r:this, '[b', r:this, '[b'
        getMember
        push r:'62=', r:6, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:'62=', r:7, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
      end // of function 

      setMember
      push r:1, '7=q8G('
      function2 () (r:1='this')
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push ';IzJK(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:2
        pop
        push r:2, '((', r:this, '(('
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 8
        multiply
        add
        setMember
        push r:2, ')(', r:this, ')('
        getMember
        push r:this, ']oH'
        getMember
        add
        setMember
        push r:2, '[b', 0, '*r'
        getVariable
        push '0X xI('
        getMember
        subtract
        push 3
        multiply
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 4
        multiply
        add
        setMember
        push r:2, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:2, '-iB='
        getMember
        push '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
      end // of function 

      setMember
      push '1Jr-,(', '-0]rl'
      getVariable
      push 'prototype'
      getMember
      push '87vE7('
      getMember
      setVariable
      push '}P{I'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '(Erk5', 0, 1, ';ndCG'
        getVariable
        push '-Q)9)'
        callMethod
        setMember
        push r:this, '86{p(', 0, 'Array'
        new
        setMember
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        push 'push'
        callMethod
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '62GLS', '*r'
        getVariable
        push '+-(0'
        getMember
        push '62GLS'
        getMember
        push 0
        getMember
        push r:this, '=HU11'
        getMember
        add
        push 1
        initArray
        setMember
        push r:this, '2Gr]U', FALSE
        setMember
        push r:this, ';d3', 1
        setMember
        push r:this, '4eyD,', 100
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
        push 0, r:this, '9Lq;O'
        callMethod
        pop
        push 0, r:this, '8J2Jt'
        callMethod
        pop
        push r:this, '4eyD,'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label15
        push r:this, '4eyD,', r:this, '4eyD,'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        branch label16
       label15:
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push r:this, ';B(7y'
        getMember
        multiply
        push 1
        lessThan
        not
        branchIfTrue label16
        push 0, r:this, ',cqp5'
        callMethod
        pop
       label16:
        push r:this, 'flash'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label18
        push 100, r:this, 'flash'
        getMember
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:3
        pop
        push r:this, 'flash', r:this, 'flash'
        getMember
        push 0.6
        multiply
        setMember
        push r:this, 'flash'
        getMember
        push 2
        lessThan
        not
        branchIfTrue label17
        push r:this, 'flash', NULL
        setMember
        push 0
        setRegister r:3
        pop
       label17:
        push 16777215, r:3, r:this, '-iB='
        getMember
        push 3, '*r'
        getVariable
        push ';CYOh'
        callMethod
        pop
       label18:
      end // of function 

      setMember
      push r:1, '8J2Jt'
      function2 () (r:1='this')
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push 1, r:this, '}1A{_'
        callMethod
        push r:this, ']oH'
        getMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push ']oH'
        getMember
        add
        lessThan
        not
        branchIfTrue label19
        push 0, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '8Ugi)'
        callMethod
        pop
       label19:
      end // of function 

      setMember
      push r:1, '9Lq;O'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label21
       label20:
        push r:2
        increment
        setRegister r:2
        pop
       label21:
        push r:2, r:this, '86{p('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label35
        push r:this, '86{p('
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label22
        push r:0, 1
        strictEquals
        branchIfTrue label25
        push r:0, 2
        strictEquals
        branchIfTrue label27
        push r:0, 3
        strictEquals
        branchIfTrue label29
        branch label34
       label22:
        push r:this, ')W}D'
        getMember
        push '}Yax5'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        setRegister r:4
        pop
        push r:this, '0BP', r:this, '0BP'
        getMember
        push r:4
        add
        setMember
        push r:this, '0BP'
        getMember
        push r:this, ')W}D'
        getMember
        push ' R'
        getMember
        push r:this, '83489'
        getMember
        getMember
        greaterThan
        not
        branchIfTrue label24
        push r:this, '83489', r:this, '83489'
        getMember
        increment
        setMember
        push r:this, '83489'
        getMember
        push r:this, ')W}D'
        getMember
        push ' R'
        getMember
        push 'length'
        getMember
        equals
        not
        branchIfTrue label23
        push 0, r:this, '9T54'
        callMethod
        pop
        branch label34
       label23:
        push r:this, ')W}D'
        getMember
        push ';B 9'
        getMember
        push r:this, '83489'
        getMember
        push 1
        subtract
        getMember
        setRegister r:5
        pop
        push r:this, ')W}D'
        getMember
        push ';B 9'
        getMember
        push r:this, '83489'
        getMember
        getMember
        setRegister r:6
        pop
        push r:6, 0
        getMember
        push r:5, 0
        getMember
        subtract
        setRegister r:7
        pop
        push r:6, 1
        getMember
        push r:5, 1
        getMember
        subtract
        setRegister r:8
        pop
        push r:7, r:8, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        setRegister r:9
        pop
        push r:7, r:7
        multiply
        push r:8, r:8
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        setRegister r:10
        pop
        push r:this, ')W}D'
        getMember
        push ' R'
        getMember
        push r:this, '83489'
        getMember
        push 1
        subtract
        getMember
        setRegister r:11
        pop
        push r:this, '0BP'
        getMember
        push r:11
        subtract
        push r:this, ')W}D'
        getMember
        push ' R'
        getMember
        push r:this, '83489'
        getMember
        getMember
        push r:11
        subtract
        divide
        setRegister r:12
        pop
        push r:9, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:13
        pop
        push r:9, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:14
        pop
        push r:this, '((', r:5, 0
        getMember
        push r:13, r:12
        multiply
        push r:4
        multiply
        add
        setMember
        push r:this, ')(', r:5, 1
        getMember
        push r:14, r:12
        multiply
        push r:4
        multiply
        add
        setMember
        push r:this, '[b', r:13, r:this, ')W}D'
        getMember
        push '}Yax5'
        getMember
        push 0
        getMember
        multiply
        setMember
        push r:this, ']b', r:14, r:this, ')W}D'
        getMember
        push '}Yax5'
        getMember
        push 0
        getMember
        multiply
        setMember
        push r:this, '[b'
        getMember
        push r:this, '[b'
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        divide
        push 1, r:this, '8D5}=('
        callMethod
        pop
       label24:
        branch label34
       label25:
        push r:this, '[a', r:this, '[a'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 0.06
        multiply
        add
        setMember
        push r:this, '[a', r:this, '[a'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.8, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        setMember
        push r:this, '(', r:this, '('
        getMember
        push r:this, '[a'
        getMember
        add
        setMember
        push r:this, '[b', r:this, '('
        getMember
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:this, ')W}D'
        getMember
        push '}Yax5'
        getMember
        push 0
        getMember
        multiply
        setMember
        push r:this, ']b', r:this, '('
        getMember
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:this, ')W}D'
        getMember
        push '}Yax5'
        getMember
        push 0
        getMember
        multiply
        setMember
        push 0, r:this, '{c}4W'
        callMethod
        pop
        push r:this, ']oH'
        getMember
        push 20
        add
        push 1, r:this, '[j0D-'
        callMethod
        not
        branchIfTrue label26
        push 0, r:this, '9T54'
        callMethod
        pop
       label26:
        branch label34
       label27:
        push r:this, ']xii)', r:this, ']xii)'
        getMember
        push 16, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 628
        modulo
        setMember
        push r:this, ')(', r:this, '}CL'
        getMember
        push ')('
        getMember
        push r:this, ']xii)'
        getMember
        push 100
        divide
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push 20
        multiply
        add
        setMember
        setRegister r:15
        pop
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, ']xii)'
        getMember
        push 100
        divide
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push 40
        multiply
        setMember
        push r:this, '(('
        getMember
        push -40
        lessThan
        not
        branchIfTrue label28
        push 0, r:this, '9T54'
        callMethod
        pop
       label28:
        branch label34
       label29:
        push r:this, '}CL'
        getMember
        push 1, r:this, ')153L'
        callMethod
        push r:this, '('
        getMember
        subtract
        setRegister r:16
        pop
       label30:
        push r:16, 3.14
        greaterThan
        not
        branchIfTrue label31
        push r:16, 6.28
        subtract
        setRegister r:16
        pop
        branch label30
       label31:
        push r:16, -3.14
        lessThan
        not
        branchIfTrue label32
        push r:16, 6.28
        add
        setRegister r:16
        pop
        branch label31
       label32:
        push r:this, '(', r:this, '('
        getMember
        push r:this, '[a'
        getMember
        push r:16, r:this, '6GhvX'
        getMember
        multiply
        push 0, r:this, '[a'
        getMember
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '[b', r:this, '('
        getMember
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:this, '}Yax5'
        getMember
        multiply
        setMember
        push r:this, ']b', r:this, '('
        getMember
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:this, '}Yax5'
        getMember
        multiply
        setMember
        push r:this, '}CL'
        getMember
        push 1, r:this, '}1A{_'
        callMethod
        push 50
        lessThan
        not
        branchIfTrue label33
        push 0, r:this, '58I]G('
        callMethod
        pop
       label33:
        branch label34
       label34:
        branch label20
       label35:
      end // of function 

      setMember
      push r:1, ',cqp5'
      function2 () (r:1='this')
      end // of function 

      setMember
      push r:1, '8A1T3('
      function2 () (r:1='this')
        push NULL, 1, '2C0['
        new
        setRegister r:2
        pop
        push r:2, '((', r:this, '(('
        getMember
        setMember
        push r:2, ')(', r:this, ')('
        getMember
        setMember
        push r:2, '+{eA+', NULL
        setMember
        push r:2, '*g;o', FALSE
        setMember
        push r:2
        return
      end // of function 

      setMember
      push r:1, ';MBeK'
      function2 (r:2='}Yax5', r:3='4vYp5') (r:1='this')
        push r:'4vYp5', NULL
        equals
        not
        branchIfTrue label36
        push 0
        setRegister r:'4vYp5'
        pop
       label36:
        push 0, r:this, '8A1T3('
        callMethod
        setRegister r:4
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push 1, r:this, ')153L'
        callMethod
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push r:'4vYp5'
        multiply
        add
        setRegister r:5
        pop
        push r:5, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:6
        pop
        push r:5, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:7
        pop
        push r:4, '((', r:this, '(('
        getMember
        push r:6, r:this, ']oH'
        getMember
        multiply
        add
        setMember
        push r:4, ')(', r:this, ')('
        getMember
        push r:7, r:this, ']oH'
        getMember
        multiply
        add
        setMember
        push r:4, '[b', r:6, r:'}Yax5'
        multiply
        setMember
        push r:4, ']b', r:7, r:'}Yax5'
        multiply
        setMember
        push 0, r:4, '{BxJE('
        callMethod
        pop
        push r:4
        return
      end // of function 

      setMember
      push r:1, '565'
      function2 (r:2=')93A') (r:1='this')
        push r:')93A', '*]Q5}'
        getMember
        push 1, r:this, '*]Q5}'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '*]Q5}'
      function2 (r:2='7') (r:1='this')
        push r:this, 'flash', 100
        setMember
        push r:this, '3=', r:this, '3='
        getMember
        push r:'7'
        subtract
        setMember
        push r:this, '3='
        getMember
        push 0
        greaterThan
        not
        not
        branchIfTrue label37
        push r:this, '2Gr]U'
        getMember
        not
        not
        branchIfTrue label37
        push 0, r:this, ';-[;H'
        callMethod
        pop
       label37:
      end // of function 

      setMember
      push r:1, ';-[;H'
      function2 () (r:1='this')
        push '44{N'
        getVariable
        push '-4Nbg'
        getMember
        push '2 EA,(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6QA'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:2
        pop
        push r:2, '_x', r:this, '(('
        getMember
        setMember
        push r:2, '_y', r:this, ')('
        getMember
        setMember
        push r:this, ']oH'
        getMember
        push 2
        multiply
        push 30
        add
        setRegister r:3
        pop
        push r:2, '_xscale', r:3
        setMember
        push r:2, '_yscale', r:3
        setMember
        push '44{N'
        getVariable
        push '-4Nbg'
        getMember
        push '2KhC((', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:4
        pop
        push r:4, '((', r:this, '(('
        getMember
        setMember
        push r:4, ')(', r:this, ')('
        getMember
        setMember
        push 0, r:4, '4u=dZ'
        callMethod
        pop
        push r:4, '-iB='
        getMember
        push '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        push 20, r:this, ']oH'
        getMember
        push 6
        multiply
        add
        setRegister r:5
        pop
        push r:4, '-iB='
        getMember
        push '_xscale', r:5
        setMember
        push r:4, '-iB='
        getMember
        push '_yscale', r:5
        setMember
        push 0
        setRegister r:6
        pop
       label38:
        push TRUE
        not
        branchIfTrue label40
        push r:6
        increment
        setRegister r:6
        pop
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push ')7MgQ', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:7
        pop
        push r:this, ';d3'
        getMember
        toString
        push 1, r:7, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:7, '-iB='
        getMember
        push '0tJ'
        getMember
        setRegister r:8
        pop
        push r:6
        toString
        push 1, r:8, 'gotoAndStop'
        callMethod
        pop
        push r:6, 1
        add
        push r:8, '_totalframes'
        getMember
        greaterThan
        setRegister r:9
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:10
        pop
        push r:10, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:11
        pop
        push r:10, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:12
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        setRegister r:13
        pop
        push 3
        setRegister r:14
        pop
        push r:7, '((', r:this, '(('
        getMember
        push r:11, r:13
        multiply
        push r:this, ']oH'
        getMember
        multiply
        add
        setMember
        push r:7, ')(', r:this, ')('
        getMember
        push r:12, r:13
        multiply
        push r:this, ']oH'
        getMember
        multiply
        add
        setMember
        push r:7, '[b', r:this, '[b'
        getMember
        push r:11, r:13
        multiply
        push r:14
        multiply
        add
        setMember
        push r:7, ']b', r:this, ']b'
        getMember
        push r:12, r:13
        multiply
        push r:14
        multiply
        add
        setMember
        push r:7, '6b', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 15
        multiply
        setMember
        push r:7, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:7, '849kV', 0
        setMember
        push r:7, '-iB='
        getMember
        push '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        push r:9
        not
        branchIfTrue label39
        branch label40
       label39:
        branch label38
       label40:
        push r:this, ')W}D'
        getMember
        push '86{p('
        getMember
        push 'length'
        getMember
        push 1
        equals
        not
        branchIfTrue label41
        push 20
        setRegister r:15
        pop
        push r:this, ')W}D'
        getMember
        push '(Erk5'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        push r:this, ')('
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        push r:15
        subtract
        push r:this, '(('
        getMember
        push r:15, 3, '*r'
        getVariable
        push '2K'
        callMethod
        push 3, '*r'
        getVariable
        push '+-(0'
        getMember
        push ')jQVv'
        callMethod
        pop
        push r:this, ')W}D'
        getMember
        push '(Erk5'
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
       label41:
        push r:this, '(Erk5'
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$k'
        getMember
        push r:this, ';d3'
        getMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$k'
        getMember
        push r:this, ';d3'
        getMember
        getMember
        increment
        setMember
        push 0, r:this, '9T54'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '8D5}=('
      function2 (r:2='7') (r:1='this')
        push r:this, '-iB='
        getMember
        push '_xscale', r:'7', 100
        multiply
        setMember
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push r:this, '2Gr]U', TRUE
        setMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '62GLS', '*r'
        getVariable
        push '+-(0'
        getMember
        push '62GLS'
        getMember
        push 0
        getMember
        push r:this, '=HU11'
        getMember
        subtract
        push 1
        initArray
        setMember
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        push 'remove'
        callMethod
        pop
        push r:this, ')W}D'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label42
        push r:this, 1, r:this, ')W}D'
        getMember
        push '86{p('
        getMember
        push 'remove'
        callMethod
        pop
       label42:
        push r:this, 1, '2u=W='
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '0b]ff'
      function2 () (r:1='this')
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label44
       label43:
        push r:3
        increment
        setRegister r:3
        pop
       label44:
        push r:3, r:2, 'length'
        getMember
        lessThan
        not
        branchIfTrue label47
        push r:2, r:3
        getMember
        setRegister r:4
        pop
        push r:4, '=HU11'
        getMember
        push r:this, '=HU11'
        getMember
        equals
        dup
        not
        branchIfTrue label45
        pop
        push r:4, r:this
        equals
        not
       label45:
        not
        branchIfTrue label46
        push r:4, 1, r:this, '}1A{_'
        callMethod
        setRegister r:5
        pop
        push r:5, r:this, ']oH'
        getMember
        push 2
        multiply
        lessThan
        not
        branchIfTrue label46
        push r:4, 1, r:this, ')153L'
        callMethod
        setRegister r:6
        pop
        push r:6, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:7
        pop
        push r:6, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:8
        pop
        push r:this, ']oH'
        getMember
        push 2
        multiply
        push r:5
        subtract
        push 0.5
        multiply
        setRegister r:9
        pop
        push r:this, '((', r:this, '(('
        getMember
        push r:7, r:9
        multiply
        subtract
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push r:8, r:9
        multiply
        subtract
        setMember
        push r:4, '((', r:4, '(('
        getMember
        push r:7, r:9
        multiply
        add
        setMember
        push r:4, ')(', r:4, ')('
        getMember
        push r:8, r:9
        multiply
        add
        setMember
       label46:
        branch label43
       label47:
      end // of function 

      setMember
      push r:1, '{c}4W'
      function2 () (r:1='this')
        push r:this, ')('
        getMember
        push r:this, ']oH'
        getMember
        add
        push '*r'
        getVariable
        push '[{'
        getMember
        greaterThan
        not
        branchIfTrue label48
        push r:this, ')(', '*r'
        getVariable
        push '[{'
        getMember
        push r:this, ']oH'
        getMember
        subtract
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push -0.8
        multiply
        setMember
        push 0, r:this, '7=q8G('
        callMethod
        pop
        push r:this, '('
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label48
        push r:this, '(', r:this, '[b'
        getMember
        push r:this, ']b'
        getMember
        push 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        setMember
       label48:
      end // of function 

      setMember
      push r:1, '58I]G('
      function2 () (r:1='this')
      end // of function 

      setMember
      push r:1, '[j0D-'
      function2 (r:2='6') (r:1='this')
        push r:this, '(('
        getMember
        push 0, r:'6'
        subtract
        lessThan
        dup
        branchIfTrue label49
        pop
        push r:this, '(('
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        push r:'6'
        add
        greaterThan
       label49:
        dup
        branchIfTrue label50
        pop
        push r:this, ')('
        getMember
        push 0, r:'6'
        subtract
        lessThan
       label50:
        dup
        branchIfTrue label51
        pop
        push r:this, ')('
        getMember
        push '*r'
        getVariable
        push '[{'
        getMember
        push r:'6'
        add
        greaterThan
       label51:
        return
      end // of function 

      setMember
      push '2u=W=', '-0]rl'
      getVariable
      push 'prototype'
      getMember
      push '9T54'
      getMember
      setVariable
      push '4RW6x', ',v0X'
      getVariable
      push 'prototype'
      getMember
      push '87vE7('
      getMember
      setVariable
      push '6}*SN'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:this, '=HU11', 28
        setMember
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, ']oH', 40
        setMember
        push r:this, '3=', 50
        setMember
        push r:this, '+{eA+', 0.98
        setMember
        push r:this, '((', '*r'
        getVariable
        push '=OA'
        getMember
        push r:this, ']oH'
        getMember
        add
        push 30
        add
        setMember
        push r:this, ')(', '*r'
        getVariable
        push '[{'
        getMember
        push 0.5
        multiply
        setMember
        push r:this, ']xii)', 0
        setMember
        push r:this, ';)bt5', 0
        setMember
        push 2, 1, r:this, '5Hy6b'
        callMethod
        pop
        push r:this, '*8orO', 140
        setMember
        push r:this, ';d3', 4
        setMember
        push r:this, '(Erk5', '*r'
        getVariable
        push ';sH08('
        getMember
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '}P{I'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, ']Gu6y'
        getVariable
        push 'call'
        callMethod
        pop
        push 0, r:this, '}SC6'
        callMethod
        pop
        push r:this, '*8orO', r:this, '*8orO'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label52
        push r:0, 1
        strictEquals
        branchIfTrue label54
        push r:0, 2
        strictEquals
        branchIfTrue label56
        branch label57
       label52:
        push r:this, '*8orO'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label53
        push 2, 1, r:this, '5Hy6b'
        callMethod
        pop
       label53:
        branch label57
       label54:
        push r:this, '*8orO'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label55
        push '+8WOA', 1, r:this, '-iB='
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push 0, 14, 2, r:this, ';MBeK'
        callMethod
        setRegister r:3
        pop
        push 10, 1, r:3, '3U*}=('
        callMethod
        pop
        push r:3, ']oH', 20
        setMember
        push r:this, '[b', r:this, '[b'
        getMember
        push r:3, '[b'
        getMember
        push 0.5
        multiply
        subtract
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:3, ']b'
        getMember
        push 0.5
        multiply
        subtract
        setMember
        push 2, 1, r:this, '5Hy6b'
        callMethod
        pop
       label55:
        branch label57
       label56:
        push r:this, '*8orO'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label57
        push 2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1, r:this, '5Hy6b'
        callMethod
        pop
       label57:
      end // of function 

      setMember
      push r:1, '5Hy6b'
      function2 (r:2='7') (r:1='this')
        push r:this, '=kIA', r:'7'
        setMember
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label58
        push r:0, 1
        strictEquals
        branchIfTrue label59
        push r:0, 2
        strictEquals
        branchIfTrue label60
        branch label61
       label58:
        push r:this, ';B(7y', 1
        setMember
        push r:this, '*8orO', 150
        setMember
        branch label61
       label59:
        push r:this, ';B(7y', NULL
        setMember
        push r:this, '*8orO', 30, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 100
        multiply
        add
        setMember
        push ')oAPu', 1, r:this, '-iB='
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        branch label61
       label60:
        push r:this, ';B(7y', NULL
        setMember
        push r:this, '*8orO', 40, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 40
        multiply
        add
        setMember
        branch label61
       label61:
      end // of function 

      setMember
      push r:1, ',cqp5'
      function2 () (r:1='this')
        push ';s9Fs', 1, r:this, '-iB='
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label63
       label62:
        push r:3
        increment
        setRegister r:3
        pop
       label63:
        push r:3, 2
        lessThan
        not
        branchIfTrue label64
        push '6}*SN'
        getVariable
        push ')96=r'
        getMember
        push r:3
        getMember
        setRegister r:4
        pop
        push 0, r:this, '8A1T3('
        callMethod
        setRegister r:5
        pop
        push r:5, '((', r:this, '(('
        getMember
        push r:4, 0
        getMember
        push r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        multiply
        push 100
        divide
        add
        setMember
        push r:5, ')(', r:this, ')('
        getMember
        push r:4, 1
        getMember
        add
        setMember
        push r:2, '(('
        getMember
        push r:4, 0
        getMember
        add
        push 17
        add
        push r:5, '(('
        getMember
        subtract
        setRegister r:6
        pop
        push r:2, ')('
        getMember
        push r:5, ')('
        getMember
        subtract
        setRegister r:7
        pop
        push r:5, '(', r:6, r:7, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        setMember
        push 6
        setRegister r:8
        pop
        push r:5, '[b', r:5, '('
        getMember
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:8
        multiply
        setMember
        push r:5, ']b', r:5, '('
        getMember
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:8
        multiply
        setMember
        push 0, r:5, '{BxJE('
        callMethod
        pop
        push 9, 1, r:5, '3U*}=('
        callMethod
        pop
        push r:5, '-iB='
        getMember
        push '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        push r:this, '4eyD,', 16
        setMember
        branch label62
       label64:
      end // of function 

      setMember
      push r:1, '}SC6'
      function2 () (r:1='this')
        push r:this, ';)bt5', 1, r:this, ';)bt5'
        getMember
        push 0.01, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setMember
        push r:this, ']xii)', r:this, ']xii)'
        getMember
        push 17, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 628
        modulo
        setMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        setRegister r:2
        pop
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 0.5
        multiply
        setRegister r:3
        pop
        push '*r'
        getVariable
        push '[{'
        getMember
        push 0.5
        multiply
        setRegister r:4
        pop
        push 25
        setRegister r:5
        pop
        push 0.7
        setRegister r:6
        pop
        push '((', r:3, r:2, '(('
        getMember
        push r:3
        subtract
        push r:6
        multiply
        subtract
        push r:this, ']xii)'
        getMember
        push 100
        divide
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:5
        multiply
        add
        push ')(', r:4, r:2, ')('
        getMember
        push r:4
        subtract
        push r:6
        multiply
        subtract
        push r:this, ']xii)'
        getMember
        push 100
        divide
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:5
        multiply
        add
        push 2
        initObject
        setRegister r:7
        pop
        push 0.5, r:this, ';)bt5'
        getMember
        multiply
        setRegister r:8
        pop
        push r:8, 0.2, r:7, 3, r:this, ';zS4(('
        callMethod
        pop
        push 0, r:this, '0b]ff'
        callMethod
        pop
        push r:this, ')('
        getMember
        push r:this, ']oH'
        getMember
        add
        push '*r'
        getVariable
        push '[{'
        getMember
        greaterThan
        not
        branchIfTrue label67
        push r:this, ')(', '*r'
        getVariable
        push '[{'
        getMember
        push r:this, ']oH'
        getMember
        subtract
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push -0.8
        multiply
        setMember
        push 0
        setRegister r:9
        pop
        branch label66
       label65:
        push r:9
        increment
        setRegister r:9
        pop
       label66:
        push r:9, 4
        lessThan
        not
        branchIfTrue label67
        push 0, r:this, '7=q8G('
        callMethod
        pop
        branch label65
       label67:
        push r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        push 100
        divide
        setRegister r:10
        pop
        push r:2, '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        push r:10
        multiply
        push 0
        greaterThan
        not
        branchIfTrue label68
        push 0, r:10
        subtract
        push 1, r:this, '8D5}=('
        callMethod
        pop
       label68:
        push r:this, '-iB='
        getMember
        push '_rotation', 0, r:2, ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        push 0.1
        multiply
        subtract
        push r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        multiply
        push 100
        divide
        setMember
      end // of function 

      setMember
      push ']Gu6y', '}P{I'
      getVariable
      push 'prototype'
      getMember
      push '87vE7('
      getMember
      setVariable
      push r:0, ')96=r', 3, -17, 2
      initArray
      push -2, -31, 2
      initArray
      push 2
      initArray
      setMember
      push '7B HB'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:this, '=HU11', 1.5
        setMember
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, ']oH', 10
        setMember
        push r:this, '3=', 1
        setMember
        push 0, r:this, '-iB='
        getMember
        push 'stop'
        callMethod
        pop
        push r:this, '+{eA+', 1
        setMember
        push r:this, '(Erk5', '*r'
        getVariable
        push '*ewEF'
        getMember
        setMember
        push r:this, ';B(7y', 400
        setMember
        push r:this, ';d3', 1
        setMember
        push r:this, '4eyD,', 100
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '}P{I'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, ']Gu6y'
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ',cqp5'
      function2 () (r:1='this')
        push r:this, '2donz'
        getMember
        not
        branchIfTrue label69
        push 0.2, 4, 2, r:this, ';MBeK'
        callMethod
        setRegister r:2
        pop
        push 8, 1, r:2, '3U*}=('
        callMethod
        pop
        push r:this, '4eyD,', 20
        setMember
        branch label70
       label69:
        push 0.5, 2.5, 2, r:this, ';MBeK'
        callMethod
        setRegister r:3
        pop
        push 2, 1, r:3, '3U*}=('
        callMethod
        pop
        push r:this, '4eyD,', 30
        setMember
       label70:
      end // of function 

      setMember
      push r:1, '{eOqm'
      function2 () (r:1='this')
        push r:this, ',){p[', TRUE
        setMember
        push '2', 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '3=', 4
        setMember
        push r:this, ';B(7y', 30
        setMember
        push r:this, ';d3', 21
        setMember
      end // of function 

      setMember
      push r:1, '[zKH0'
      function2 () (r:1='this')
        push '1', 1, r:this, '-iB='
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push r:this, ';B(7y', 50
        setMember
        push r:this, '2donz', TRUE
        setMember
        push r:this, '3=', 2
        setMember
        push r:this, ';d3', 22
        setMember
      end // of function 

      setMember
      push r:1, ';-[;H'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '+[3N='
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, ',){p['
        getMember
        not
        branchIfTrue label74
        push 0
        setRegister r:3
        pop
        branch label72
       label71:
        push r:3
        increment
        setRegister r:3
        pop
       label72:
        push r:3, r:this, ')W}D'
        getMember
        push '86{p('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label74
        push r:this, ')W}D'
        getMember
        push '86{p('
        getMember
        push r:3
        getMember
        setRegister r:4
        pop
        push r:4, NULL
        equals
        not
        not
        branchIfTrue label73
        push r:4, '(', r:4, '[b'
        getMember
        push r:4, ']b'
        getMember
        push 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        setMember
        push r:4, '[a', 0
        setMember
        push 1, 1, r:4, '86{p('
        getMember
        push 'push'
        callMethod
        pop
        push 0, 1, r:4, '86{p('
        getMember
        push 'remove'
        callMethod
        pop
       label73:
        branch label71
       label74:
      end // of function 

      setMember
      push '+[3N=', '}P{I'
      getVariable
      push 'prototype'
      getMember
      push ';-[;H'
      getMember
      setVariable
      push '*r'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '}-B2'
      function2 () (r:1='this')
        push '*r'
        getVariable
        push '[{', '*r'
        getVariable
        push '*OA'
        getMember
        push '*r'
        getVariable
        push '95('
        getMember
        add
        push '*r'
        getVariable
        push '}MNA=('
        getMember
        subtract
        setMember
      end // of function 

      setMember
      push r:0, ';CYOh'
      function2 (r:2='}J', r:3='3GF', r:4='(v+') (r:1='this')
        push '=', r:'(v+', 16
        shiftRight
        push '0', r:'(v+', 8
        shiftRight
        push 255
        bitwiseAnd
        push ')', r:'(v+', 255
        bitwiseAnd
        push 3
        initObject
        setRegister r:5
        pop
        push r:'}J', 1, 'Color'
        new
        setRegister r:6
        pop
        push r:'3GF', 100
        divide
        setRegister r:7
        pop
        push 'ra', 100, r:'3GF'
        subtract
        int
        push 'ga', 100, r:'3GF'
        subtract
        int
        push 'ba', 100, r:'3GF'
        subtract
        int
        push 'aa', 100, 'rb', r:7, r:5, '='
        getMember
        multiply
        int
        push 'gb', r:7, r:5, '0'
        getMember
        multiply
        int
        push 'bb', r:7, r:5, ')'
        getMember
        multiply
        int
        push 'ab', 0, 8
        initObject
        setRegister r:8
        pop
        push r:8, 1, r:6, 'setTransform'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '2K'
      function2 (r:2='(', r:3=')', r:4='*') (r:1='this')
        push r:'*', r:')', r:'(', 2, 'Math'
        getVariable
        push 'max'
        callMethod
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        return
      end // of function 

      setMember
      push r:0, '=OA', 300
      setMember
      push r:0, '*OA', 300
      setMember
      push r:0, '4I()', 0
      setMember
      push r:0, '+KiY*', 1
      setMember
      push r:0, '6+vtH(', 1
      setMember
      push r:0, ' pyvJ(', 0.25
      setMember
      push r:0, '}RXB3', 4
      setMember
      push r:0, ',PRRg', 0.25
      setMember
      push r:0, '-)sr;(', 2.5
      setMember
      push r:0, '8s', 1, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '}cl4B', 1000, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '[Ol6B', 3000, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, ',XmYQ', 10000, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '4]1L', 500, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, ';sH08(', 5000, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '83GJ[', 1500, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '9sRER', 100, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '*ewEF', 15, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '=EQy6(', 100, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, ';XQu=', 300, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '6{zdT', 400, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '3e-tb', 7500, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '}MNA=(', 14
      setMember
      push r:0, '95(', 40
      setMember
      push r:0, '[{', NULL
      setMember
      push r:0, '0X xI(', 5
      setMember
      push ',i0 ['
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push '*DzW'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push ')gv94'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, ',DBRf', 10
        setMember
        push r:this, 'scale', 100
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '6b'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label75
        push r:this, '6b', r:this, '6b'
        getMember
        push r:this, '+{eA+'
        getMember
        multiply
        setMember
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '-iB='
        getMember
        push '_rotation'
        getMember
        push r:this, '6b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label75:
        push r:this, '2VhU6'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label79
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '2VhU6'
        getMember
        push r:this, ',DBRf'
        getMember
        lessThan
        not
        branchIfTrue label79
        push r:this, '2VhU6'
        getMember
        push r:this, ',DBRf'
        getMember
        divide
        setRegister r:3
        pop
        push r:this, '849kV'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label76
        branch label77
       label76:
        push r:this, '-iB='
        getMember
        push '_xscale', r:this, 'scale'
        getMember
        push r:3
        multiply
        setMember
        push r:this, '-iB='
        getMember
        push '_yscale', r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        setMember
        branch label78
       label77:
        push r:this, '-iB='
        getMember
        push '_alpha', r:3, 100
        multiply
        setMember
        branch label78
       label78:
        push r:this, '2VhU6'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label79
        push 0, r:this, '9T54'
        callMethod
        pop
       label79:
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push ')gv94'
        getMember
        push 'remove'
        callMethod
        pop
        push r:this, 1, '2u=W='
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push ' p3z='
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '*B', 0, r:this, '0Ev2M'
        callMethod
        setMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        setRegister r:4
        pop
        push r:this, '*B'
        getMember
        push 30
        equals
        dup
        not
        branchIfTrue label80
        pop
        push r:4, '=e3ST'
        getMember
        push 0
        getMember
       label80:
        not
        branchIfTrue label81
        push r:this, '*B', 21
        setMember
       label81:
        push r:this, '*B'
        getMember
        push 31
        equals
        dup
        not
        branchIfTrue label82
        pop
        push r:4, '3)6yL'
        getMember
        push 0
        getMember
       label82:
        not
        branchIfTrue label83
        push r:this, '*B', 21
        setMember
       label83:
        push r:this, '*B'
        getMember
        push 32
        equals
        dup
        not
        branchIfTrue label84
        pop
        push r:4, '2{49;'
        getMember
        push 0
        getMember
       label84:
        not
        branchIfTrue label85
        push r:this, '*B', 21
        setMember
       label85:
        push r:this, '*B'
        getMember
        push 20
        lessThan
        not
        dup
        not
        branchIfTrue label86
        pop
        push r:this, '*B'
        getMember
        push 23
        lessThan
       label86:
        not
        branchIfTrue label87
        push 0, r:this, '-iB='
        getMember
        push 'stop'
        callMethod
        pop
       label87:
        push r:this, '*B'
        getMember
        push 1
        add
        setRegister r:5
        pop
        push r:5
        toString
        push 1, r:this, '-iB='
        getMember
        push '*'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '-iB='
        getMember
        push ' IWA+', r:5
        setMember
        push r:this, '[b', 0, ' p3z='
        getVariable
        push '[c4gL'
        getMember
        subtract
        setMember
        push r:this, ']b', 2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push ' p3z='
        getVariable
        push '[c4gL'
        getMember
        multiply
        push 1.5
        multiply
        setMember
        push r:this, '+{eA+', 1
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, ')('
        getMember
        push ' p3z='
        getVariable
        push '95('
        getMember
        lessThan
        dup
        branchIfTrue label88
        pop
        push r:this, ')('
        getMember
        push '*r'
        getVariable
        push '[{'
        getMember
        push ' p3z='
        getVariable
        push '95('
        getMember
        subtract
        greaterThan
       label88:
        not
        branchIfTrue label89
        push r:this, ']b', r:this, ']b'
        getMember
        push -1
        multiply
        setMember
        push r:this, ')(', '*r'
        getVariable
        push '[{'
        getMember
        push ' p3z='
        getVariable
        push '95('
        getMember
        subtract
        push r:this, ')('
        getMember
        push ' p3z='
        getVariable
        push '95('
        getMember
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
       label89:
        push r:this, '(('
        getMember
        push ' p3z='
        getVariable
        push '85('
        getMember
        lessThan
        not
        branchIfTrue label90
        push r:this, '[b', r:this, '[b'
        getMember
        push -1
        multiply
        setMember
        push r:this, '((', ' p3z='
        getVariable
        push '85('
        getMember
        setMember
       label90:
        push r:this, ')('
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        push ' p3z='
        getVariable
        push '85('
        getMember
        add
        greaterThan
        not
        branchIfTrue label91
        push 0, r:this, '9T54'
        callMethod
        pop
       label91:
        push 10
        setRegister r:3
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push ' p3z='
        getVariable
        push '85('
        getMember
        push r:3
        add
        lessThan
        dup
        not
        branchIfTrue label92
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push ' p3z='
        getVariable
        push '95('
        getMember
        push r:3
        add
        lessThan
       label92:
        not
        branchIfTrue label93
        push 0, r:this, '2X}A'
        callMethod
        pop
       label93:
      end // of function 

      setMember
      push r:1, '2X}A'
      function2 () (r:1='this')
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        setRegister r:2
        pop
        push r:this, '*B'
        getMember
        push 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$b'
        getMember
        push 'push'
        callMethod
        pop
        push NULL
        setRegister r:3
        pop
        push r:this, '*B'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label94
        push r:0, 1
        strictEquals
        branchIfTrue label94
        push r:0, 2
        strictEquals
        branchIfTrue label94
        push r:0, 10
        strictEquals
        branchIfTrue label97
        push r:0, 11
        strictEquals
        branchIfTrue label97
        push r:0, 12
        strictEquals
        branchIfTrue label97
        push r:0, 20
        strictEquals
        branchIfTrue label98
        push r:0, 21
        strictEquals
        branchIfTrue label99
        push r:0, 22
        strictEquals
        branchIfTrue label100
        push r:0, 30
        strictEquals
        branchIfTrue label101
        push r:0, 31
        strictEquals
        branchIfTrue label102
        push r:0, 32
        strictEquals
        branchIfTrue label103
        branch label104
       label94:
        push r:2, '[2(j8'
        getMember
        push 0
        getMember
        push r:this, '*B'
        getMember
        equals
        not
        branchIfTrue label95
        push r:2, '-6YgZ', 2, r:2, '-6YgZ'
        getMember
        push 0
        getMember
        push 1
        add
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        int
        push 1
        initArray
        setMember
        branch label96
       label95:
        push r:2, '[2(j8', r:this, '*B'
        getMember
        push 1
        initArray
        setMember
       label96:
        branch label104
       label97:
        push r:this, '*B'
        getMember
        push 10
        subtract
        push 1, r:2, '}gGHb'
        callMethod
        pop
        branch label104
       label98:
        push '*r'
        getVariable
        push '}cl4B'
        getMember
        setRegister r:3
        pop
        branch label104
       label99:
        push '*r'
        getVariable
        push '[Ol6B'
        getMember
        setRegister r:3
        pop
        branch label104
       label100:
        push '*r'
        getVariable
        push ',XmYQ'
        getMember
        setRegister r:3
        pop
        branch label104
       label101:
        push r:2, '=e3ST', TRUE, 1
        initArray
        setMember
        branch label104
       label102:
        push 0, r:2, '68I_m'
        callMethod
        pop
        branch label104
       label103:
        push 0, r:2, ';{+a4('
        callMethod
        pop
        branch label104
       label104:
        push r:3, NULL
        equals
        not
        not
        branchIfTrue label105
        push r:3, 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        push r:this, ')('
        getMember
        push r:this, '(('
        getMember
        push 3, '*r'
        getVariable
        push '+-(0'
        getMember
        push ')jQVv'
        callMethod
        pop
        push r:3, 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
       label105:
        push 0, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '-)OC{'
        callMethod
        pop
        push 0, r:this, '9T54'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '0Ev2M'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label107
       label106:
        push r:3
        increment
        setRegister r:3
        pop
       label107:
        push r:3, ' p3z='
        getVariable
        push '*g,kL'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label108
        push r:2, ' p3z='
        getVariable
        push '*g,kL'
        getMember
        push r:3
        getMember
        add
        setRegister r:2
        pop
        branch label106
       label108:
        push r:2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:4
        pop
        push 0
        setRegister r:2
        pop
        push 0
        setRegister r:5
        pop
        branch label110
       label109:
        push r:5
        increment
        setRegister r:5
        pop
       label110:
        push r:5, ' p3z='
        getVariable
        push '*g,kL'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label112
        push r:2, ' p3z='
        getVariable
        push '*g,kL'
        getMember
        push r:5
        getMember
        add
        setRegister r:2
        pop
        push r:2, r:4
        greaterThan
        not
        branchIfTrue label111
        push r:5
        return
       label111:
        branch label109
       label112:
        push NULL
        return
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '2u=W='
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '[c4gL', 1.5
      setMember
      push r:0, '85(', 11
      setMember
      push r:0, '95(', 15
      setMember
      push r:0, '*g,kL', 50, 300, 100, 0, 0, 0, 0, 0, 0, 0, 20, 200, 400, 0, 0, 0, 0, 0, 0, 0, 100, 100, 100, 0, 0, 0, 0, 0, 0, 0, 200, 200, 200, 33
      initArray
      setMember
      push r:0, ']O+)D', 23, 22, 21, 13, 12, 11, 3, 2, 1, 9
      initArray
      setMember
      push '+7U K'
      function2 (r:2='}J') (r:1='this')
        push r:this, ')2fr3', r:'}J'
        setMember
        push r:this, '}Zms3', 0, 'Array'
        new
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, ']1sj+'
      function2 () (r:1='this')
        push r:this, ')2fr3'
        getMember
        return
      end // of function 

      setMember
      push r:1, '-fC3a'
      function2 (r:2='59F') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'59F'
        getMember
        setRegister r:3
        pop
        push r:3, NULL
        equals
        not
        branchIfTrue label113
        push '9oK', 0, 'Array'
        new
        push '7-,', 0, 2
        initObject
        setRegister r:3
        pop
        push r:this, '}Zms3'
        getMember
        push r:'59F', r:3
        setMember
       label113:
        push r:3
        return
      end // of function 

      setMember
      push r:1, ']bu40'
      function2 (r:2='[-99') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'[-99'
        getMember
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:7
        pop
        push r:'[-99', 1000
        multiply
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label115
       label114:
        push r:6
        increment
        setRegister r:6
        pop
       label115:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label117
        push r:4, r:6
        getMember
        push '_name'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label116
        push r:8, r:7
        add
        push 1, r:4, r:6
        getMember
        push 'swapDepths'
        callMethod
        pop
        push r:4, r:7, r:4, r:6
        getMember
        setMember
        push r:7
        increment
        setRegister r:7
        pop
       label116:
        branch label114
       label117:
        push r:3, '7-,', r:7
        setMember
      end // of function 

      setMember
      push r:1, '*=_p_'
      function2 (r:2='*KB2', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label118
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'*KB2', 2, r:this, '*=_p_'
        callMethod
        return
       label118:
        push r:6, r:'[-99', 1000
        multiply
        add
        push r:'*KB2', r:this, ')2fr3'
        getMember
        push 3, '3Wt'
        getVariable
        push '7bSH*'
        callMethod
        setRegister r:7
        pop
        push r:5, r:6, r:7
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:7
        return
      end // of function 

      setMember
      push r:1, '18wU*'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push r:5, 1000
        equals
        not
        branchIfTrue label119
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', 1, r:this, '18wU*'
        callMethod
        return
       label119:
        push r:5, r:'[-99', 1000
        multiply
        add
        push r:this, ')2fr3'
        getMember
        push 2, '3Wt'
        getVariable
        push '-4*l(('
        callMethod
        setRegister r:6
        pop
        push r:4, r:5, r:6
        setMember
        push r:3, '7-,', r:3, '7-,'
        getMember
        increment
        setMember
        push r:6
        return
      end // of function 

      setMember
      push r:1, '(GbB}'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label120
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        return
       label120:
        push r:5, r:6, r:'}J'
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:6, r:'[-99', 1000
        multiply
        add
        return
      end // of function 

      setMember
      push r:1, '+2NA'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        push 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, r:'[-99'
        equals
        not
        branchIfTrue label121
        push UNDEF
        return
       label121:
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:5, '7-,'
        getMember
        setRegister r:7
        pop
        push 0
        setRegister r:8
        pop
        branch label123
       label122:
        push r:8
        increment
        setRegister r:8
        pop
       label123:
        push r:8, r:7
        lessThan
        not
        branchIfTrue label125
        push r:6, r:8
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label124
        push r:6, r:8, NULL
        setMember
        branch label125
       label124:
        branch label122
       label125:
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}oQA7'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label126
        push r:6, r:7, NULL
        setMember
        push r:'}J', 1, r:6, 'unshift'
        callMethod
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label126:
      end // of function 

      setMember
      push r:1, '08M8'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label128
        push r:6, r:7, NULL
        setMember
        push r:5, '7-,'
        getMember
        push 1000
        equals
        not
        branchIfTrue label127
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label127:
        push r:5, '7-,'
        getMember
        setRegister r:3
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:3, r:4, 1000
        multiply
        add
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
        push r:6, r:3, r:'}J'
        setMember
       label128:
      end // of function 

      setMember
      push r:1, 'clear'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:4
        pop
        branch label130
       label129:
        push r:4
        increment
        setRegister r:4
        pop
       label130:
        push r:4, r:3, '7-,'
        getMember
        lessThan
        not
        branchIfTrue label131
        push 0, r:5, r:4
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label129
       label131:
        push r:3, '7-,', 0
        setMember
      end // of function 

      setMember
      push r:1, '9(K ;'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push -99999999
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label133
       label132:
        push r:6
        increment
        setRegister r:6
        pop
       label133:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label141
        push r:4, r:6
        getMember
        setRegister r:9
        pop
        push r:9, '_y'
        getMember
        setRegister r:10
        pop
        push r:10, r:8
        lessThan
        not
        not
        branchIfTrue label134
        push r:10
        setRegister r:8
        pop
        branch label140
       label134:
        push r:6
        setRegister r:7
        pop
        branch label136
       label135:
        push r:7
        decrement
        setRegister r:7
        pop
       label136:
        push r:7, 0
        greaterThan
        not
        branchIfTrue label139
        push r:4, r:7, 1
        subtract
        getMember
        setRegister r:11
        pop
        push r:11, '_y'
        getMember
        push r:10
        greaterThan
        not
        branchIfTrue label137
        push r:4, r:7, r:11
        setMember
        push r:11, 1, r:9, 'swapDepths'
        callMethod
        pop
        branch label138
       label137:
        push r:4, r:7, r:9
        setMember
        branch label139
       label138:
        branch label135
       label139:
        push r:7, 0
        equals
        not
        branchIfTrue label140
        push r:4, 0, r:9
        setMember
       label140:
        branch label132
       label141:
      end // of function 

      setMember
      push r:1, ',}2X ('
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label143
       label142:
        push r:2
        increment
        setRegister r:2
        pop
       label143:
        push r:2, r:this, '}Zms3'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label144
        push r:2, 1, r:this, 'clear'
        callMethod
        pop
        branch label142
       label144:
      end // of function 

      setMember
      push 'flash'
      getVariable
      not
      not
      branchIfTrue label145
      push 'flash', 0, 'Object'
      new
      setVariable
     label145:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      not
      not
      branchIfTrue label146
      push 'flash'
      getVariable
      push 'filters', 0, 'Object'
      new
      setMember
     label146:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      push '{lN=R'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setMember
      push '+Sk9H'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:this, '=HU11', 4
        setMember
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, ']oH', 18
        setMember
        push r:this, '3=', 2
        setMember
        push 0, r:this, '-iB='
        getMember
        push 'stop'
        callMethod
        pop
        push r:this, '+{eA+', 0.98
        setMember
        push r:this, '(Erk5', '*r'
        getVariable
        push '9sRER'
        getMember
        setMember
        push r:this, ';d3', 2
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '}P{I'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, ']Gu6y'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, ',){p['
        getMember
        not
        branchIfTrue label154
        push r:this
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        branch label148
       label147:
        push r:4
        increment
        setRegister r:4
        pop
       label148:
        push r:4, r:this, '-zpt4'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label149
        push r:this, '-zpt4'
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push r:this, '}O'
        getMember
        push r:4, 1
        add
        push '+Sk9H'
        getVariable
        push '{)55C'
        getMember
        multiply
        getMember
        setRegister r:6
        pop
        push r:5, '((', r:6, 0
        getMember
        setMember
        push r:5, ')(', r:6, 1
        getMember
        setMember
        push r:5, '-iB='
        getMember
        push '_rotation', r:3, 1, r:5, ')153L'
        callMethod
        push 0.0174
        divide
        setMember
        push r:5
        setRegister r:3
        pop
        branch label147
       label149:
        push r:this, ')('
        getMember
        push r:this, '(('
        getMember
        push 2
        initArray
        push 1, r:this, '}O'
        getMember
        push 'unshift'
        callMethod
        pop
       label150:
        push r:this, '}O'
        getMember
        push 'length'
        getMember
        push 300
        greaterThan
        not
        branchIfTrue label151
        push 0, r:this, '}O'
        getMember
        push 'pop'
        callMethod
        pop
        branch label150
       label151:
        push r:this, '('
        getMember
        setRegister r:7
        pop
       label152:
        push r:7, 0
        lessThan
        not
        branchIfTrue label153
        push r:7, 6.28
        add
        setRegister r:7
        pop
        branch label152
       label153:
        push 1, 80, r:7, 6.28
        divide
        multiply
        add
        int
        toString
        push 1, r:this, '-iB='
        getMember
        push '0tJ'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
       label154:
      end // of function 

      setMember
      push r:1, ',cqp5'
      function2 () (r:1='this')
        push r:this, '4eyD,', 50
        setMember
        push 3
        setRegister r:2
        pop
        push 0.3
        setRegister r:3
        pop
        push 5
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        branch label156
       label155:
        push r:5
        increment
        setRegister r:5
        pop
       label156:
        push r:5, r:2
        lessThan
        not
        branchIfTrue label157
        push r:5, r:2, 1
        subtract
        divide
        push 2
        multiply
        push 1
        subtract
        setRegister r:6
        pop
        push 0, r:this, '8A1T3('
        callMethod
        setRegister r:7
        pop
        push r:7, '[b', r:this, '('
        getMember
        push r:6, r:3
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:4
        multiply
        setMember
        push r:7, ']b', r:this, '('
        getMember
        push r:6, r:3
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:4
        multiply
        setMember
        push r:7, '((', r:7, '(('
        getMember
        push r:7, '[b'
        getMember
        push 4
        multiply
        add
        setMember
        push r:7, ')(', r:7, ')('
        getMember
        push r:7, ']b'
        getMember
        push 4
        multiply
        add
        setMember
        push 0, r:7, '{BxJE('
        callMethod
        pop
        push 4, 1, r:7, '3U*}=('
        callMethod
        pop
        branch label155
       label157:
      end // of function 

      setMember
      push r:1, '{eOqm'
      function2 () (r:1='this')
        push r:this, ',){p[', TRUE
        setMember
        push '2', 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '3=', 5
        setMember
        push r:this, ';B(7y', 80
        setMember
        push r:this, '}O', 0, 'Array'
        new
        setMember
        push r:this, '-zpt4', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:2
        pop
        branch label159
       label158:
        push r:2
        increment
        setRegister r:2
        pop
       label159:
        push r:2, 300
        lessThan
        not
        branchIfTrue label160
        push r:this, ')('
        getMember
        push r:this, '(('
        getMember
        push 2
        initArray
        push 1, r:this, '}O'
        getMember
        push 'push'
        callMethod
        pop
        branch label158
       label160:
        push 3, 1, r:this, '86{p('
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '(', -1.57
        setMember
        push r:this, '6GhvX', 0.1
        setMember
        push r:this, '[a', 0.05
        setMember
        push r:this, '}Yax5', 2.5
        setMember
        push r:this, '}CL', '((', '*r'
        getVariable
        push '=OA'
        getMember
        push 0.5
        multiply
        push ')(', '+Sk9H'
        getVariable
        push '2QF=}'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '*r'
        getVariable
        push '[{'
        getMember
        push 2, '+Sk9H'
        getVariable
        push '2QF=}'
        getMember
        multiply
        subtract
        multiply
        add
        push 2
        initObject
        setMember
        push r:this, '-iB='
        getMember
        push 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6QA'
        getMember
        push '08M8'
        callMethod
        pop
        push r:this, '-iB='
        getMember
        push '_rotation', 0
        setMember
      end // of function 

      setMember
      push r:1, ';-[;H'
      function2 () (r:1='this', r:2='super')
        push r:this, ',){p['
        getMember
        not
        branchIfTrue label164
        push 0
        setRegister r:3
        pop
        branch label162
       label161:
        push r:3
        increment
        setRegister r:3
        pop
       label162:
        push r:3, r:this, '-zpt4'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label163
        push r:this, '-zpt4'
        getMember
        push r:3
        getMember
        setRegister r:4
        pop
        push 0, r:4, ';-[;H'
        callMethod
        pop
        branch label161
       label163:
        branch label165
       label164:
        push r:this, '6PUy4'
        getMember
        push '3='
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label165
        push r:this, 1, r:this, '6PUy4'
        getMember
        push '[2ezd'
        callMethod
        pop
       label165:
        push r:this, 1, '+[3N='
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '[2ezd'
      function2 (r:2='+4') (r:1='this')
        push 0
        setRegister r:3
        pop
        branch label167
       label166:
        push r:3
        increment
        setRegister r:3
        pop
       label167:
        push r:3, r:this, '-zpt4'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label173
        push r:'+4', r:this, '-zpt4'
        getMember
        push r:3
        getMember
        equals
        dup
        not
        branchIfTrue label168
        pop
        push r:3, r:this, '-zpt4'
        getMember
        push 'length'
        getMember
        push 1
        subtract
        lessThan
       label168:
        not
        branchIfTrue label172
        push r:3
        increment
        setRegister r:3
        pop
        push r:this, '-zpt4'
        getMember
        push r:3
        getMember
        setRegister r:4
        pop
        push 1, r:3, 2, r:this, '-zpt4'
        getMember
        push 'splice'
        callMethod
        pop
        push 0, r:4, '{eOqm'
        callMethod
        pop
        push r:4, '}O', 0, 'Array'
        new
        setMember
        push r:3, 1
        add
        push '+Sk9H'
        getVariable
        push '{)55C'
        getMember
        multiply
        setRegister r:5
        pop
        branch label170
       label169:
        push r:5
        increment
        setRegister r:5
        pop
       label170:
        push r:5, r:this, '}O'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label171
        push r:this, '}O'
        getMember
        push r:5
        getMember
        setRegister r:6
        pop
        push r:6, 1
        getMember
        push r:6, 0
        getMember
        push 2
        initArray
        push 1, r:4, '}O'
        getMember
        push 'push'
        callMethod
        pop
        branch label169
       label171:
        push r:3, r:this, '-zpt4'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label172
        push r:this, '-zpt4'
        getMember
        push r:3
        getMember
        setRegister r:7
        pop
        push 1, r:3, 2, r:this, '-zpt4'
        getMember
        push 'splice'
        callMethod
        pop
        push r:7, 1, r:4, '-zpt4'
        getMember
        push 'push'
        callMethod
        pop
        push r:7, '6PUy4', r:4
        setMember
        branch label171
       label172:
        branch label166
       label173:
      end // of function 

      setMember
      push r:1, '58I]G('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '3Iy5z'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '}CL', '((', '+Sk9H'
        getVariable
        push '2QF=}'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 2, '+Sk9H'
        getVariable
        push '2QF=}'
        getMember
        multiply
        subtract
        multiply
        add
        push ')(', '+Sk9H'
        getVariable
        push '2QF=}'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '*r'
        getVariable
        push '[{'
        getMember
        push 2, '+Sk9H'
        getVariable
        push '2QF=}'
        getMember
        multiply
        subtract
        multiply
        add
        push 2
        initObject
        setMember
      end // of function 

      setMember
      push '3Iy5z', '}P{I'
      getVariable
      push 'prototype'
      getMember
      push '58I]G('
      getMember
      setVariable
      push r:0, '2QF=}', 30
      setMember
      push r:0, '{)55C', 9
      setMember
      push '{-kxL'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '87vE7('
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '4plQ5', '{-kxL'
        getVariable
        push '4plQ5'
        getMember
        increment
        setMember
        push 0, '3Wt'
        getVariable
        push 'getTimer'
        callMethod
        setRegister r:2
        pop
        push '{-kxL'
        getVariable
        push ';ILSy', r:2, '{-kxL'
        getVariable
        push '3R,QM'
        getMember
        subtract
        push 1000.0
        divide
        setMember
        push '{-kxL'
        getVariable
        push '3R,QM', r:2
        setMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        push '{-kxL'
        getVariable
        push ';y}-6('
        getMember
        lessThan
        not
        branchIfTrue label174
        push '{-kxL'
        getVariable
        push '-)Xd+', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        push '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        multiply
        push 1, '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        subtract
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        multiply
        add
        setMember
        branch label175
       label174:
        push '{-kxL'
        getVariable
        push ';ILSy', 1, '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        divide
        setMember
       label175:
        push '{-kxL'
        getVariable
        push '-V;B', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        setMember
      end // of function 

      setMember
      push r:0, 'fps'
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        return
      end // of function 

      setMember
      push r:0, '6GI,F', 32
      setMember
      push r:0, ';y}-6(', 0.5
      setMember
      push r:0, '3R,QM', 0, '3Wt'
      getVariable
      push 'getTimer'
      callMethod
      setMember
      push r:0, '[Ad;n', 0.95
      setMember
      push r:0, '-)Xd+', 1
      setMember
      push r:0, '-V;B', 1
      setMember
      push r:0, ';ILSy', 1
      setMember
      push r:0, '4plQ5', 0
      setMember
      push '},nzl'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:this, '=HU11', 10
        setMember
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, ']oH', 10
        setMember
        push r:this, '3=', 60
        setMember
        push 0, r:this, '-iB='
        getMember
        push 'stop'
        callMethod
        pop
        push r:this, '+{eA+', 0.98
        setMember
        push r:this, '(Erk5', '*r'
        getVariable
        push '3e-tb'
        getMember
        setMember
        push r:this, ';d3', 8
        setMember
        push r:this, '2[j9h', 0
        setMember
        push r:this, '}Yax5', 1.5
        setMember
        push r:this, '((', '*r'
        getVariable
        push '=OA'
        getMember
        push r:this, ']oH'
        getMember
        add
        push 5
        add
        setMember
        push r:this, ')(', r:this, ']oH'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '*r'
        getVariable
        push '[{'
        getMember
        push r:this, ']oH'
        getMember
        push 2
        multiply
        add
        multiply
        add
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '}P{I'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, ']Gu6y'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '}Yax5', r:this, '}Yax5'
        getMember
        push 1.002
        multiply
        setMember
        push r:this, '2[j9h', r:this, '2[j9h'
        getMember
        push r:this, '}Yax5'
        getMember
        push 13.5
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 628
        modulo
        setMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        setRegister r:3
        pop
        push r:this, '}Yax5'
        getMember
        push r:this, '2[j9h'
        getMember
        push 100
        divide
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push 6
        multiply
        add
        setRegister r:4
        pop
        push r:3, 1, r:this, ')153L'
        callMethod
        setRegister r:5
        pop
        push r:5, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:4
        multiply
        push r:this, '[b'
        getMember
        subtract
        setRegister r:6
        pop
        push r:5, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:4
        multiply
        push r:this, ']b'
        getMember
        subtract
        setRegister r:7
        pop
        push 0.3
        setRegister r:8
        pop
        push 1, 0
        divide
        setRegister r:9
        pop
        push r:this, '[b', r:this, '[b'
        getMember
        push r:9, r:6, r:8
        multiply
        push 0, r:9
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:9, r:7, r:8
        multiply
        push 0, r:9
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push 0, r:this, '{c}4W'
        callMethod
        pop
        push 0, r:this, '0b]ff'
        callMethod
        pop
      end // of function 

      setMember
      push '=3+P'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '32', r:this, '-iB='
        getMember
        push 1, '+7U K'
        new
        setMember
        push r:this, '*;D)', '=3+P'
        getVariable
        push '7Y-tb'
        getMember
        push ')+jEC', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '7Qe;6', 0, 'Array'
        new
        setMember
        push r:this, '=g]u6', 0, '{sRCQ'
        new
        setMember
        push r:this, '39kX5', 0, 'Array'
        new
        setMember
        push r:this, '=e3ST', FALSE, 1
        initArray
        setMember
        push r:this, '3)6yL', FALSE, 1
        initArray
        setMember
        push r:this, '2{49;', FALSE, 1
        initArray
        setMember
        push r:this, '}Yax5', 6
        setMember
        push r:this, ']oH', 11
        setMember
        push r:this, '[2(j8', 0, 1
        initArray
        setMember
        push r:this, '-6YgZ', 0, 1
        initArray
        setMember
        push r:this, '=M)xq', NULL, 1
        initArray
        setMember
        push r:this, '{(MD=(', 0, 1
        initArray
        setMember
        push r:this, '*4XJ6', 0, 1
        initArray
        setMember
        push r:this, '+{eA+', 0.6
        setMember
        push r:this, '4eyD,', 0, 1
        initArray
        setMember
        push r:this, '(t}](', 0, 1
        initArray
        setMember
        push r:this, '((', 0
        setMember
        push r:this, ')(', 0
        setMember
        push 0, r:this, '[4u2,'
        callMethod
        pop
        push 0, r:this, '-)OC{'
        callMethod
        pop
        push r:this, '*;D)'
        getMember
        push '0=*', 1
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '4eyD,', r:this, '4eyD,'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        push 1
        initArray
        setMember
        push r:this, '*4XJ6', r:this, '*4XJ6'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        push 1
        initArray
        setMember
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label176
        push r:0, 1
        strictEquals
        branchIfTrue label180
        push r:0, 9
        strictEquals
        branchIfTrue label184
        branch label189
       label176:
        push 0, r:this, '505t0'
        callMethod
        pop
        push 0, r:this, '0Re25'
        callMethod
        pop
        push r:this, '=g]u6'
        getMember
        push 'length'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label177
        push 0, r:this, '0b3_F('
        callMethod
        pop
       label177:
        push r:this, '8c};'
        getMember
        push 0
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label178
        push 0, r:this, ';jdDn'
        callMethod
        pop
       label178:
        push r:this, ']b'
        getMember
        push 2
        multiply
        push r:this, '*;D)'
        getMember
        push '_rotation'
        getMember
        subtract
        setRegister r:3
        pop
        push r:this, '*;D)'
        getMember
        push '_rotation', r:this, '*;D)'
        getMember
        push '_rotation'
        getMember
        push r:3, 0.1
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, ')('
        getMember
        push '*r'
        getVariable
        push '[{'
        getMember
        push r:this, ']oH'
        getMember
        push '=3+P'
        getVariable
        push '2XGnD('
        getMember
        add
        subtract
        equals
        not
        branchIfTrue label179
        push 0, r:this, '-43zH('
        callMethod
        pop
       label179:
        branch label189
       label180:
        push 0, r:this, '505t0'
        callMethod
        pop
        push r:this, '88J*9(', r:this, '88J*9('
        getMember
        push 1, r:this, '[b'
        getMember
        push 0.1
        multiply
        add
        push '*r'
        getVariable
        push '0X xI('
        getMember
        push 5
        divide
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 20
        modulo
        setMember
        push r:this, '*;D)'
        getMember
        push '0tJ'
        getMember
        setRegister r:4
        pop
        push r:this, '88J*9('
        getMember
        int
        push 1
        add
        setRegister r:5
        pop
        push r:5
        toString
        push 1, r:4, 'gotoAndStop'
        callMethod
        pop
        push 'Key'
        getVariable
        push 'SPACE'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        dup
        branchIfTrue label181
        pop
        push 'Key'
        getVariable
        push 'CONTROL'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
       label181:
        not
        branchIfTrue label182
        push 30, r:this, '16'
        getMember
        push 0
        getMember
        push 3.14
        divide
        push 20
        multiply
        subtract
        int
        push 1
        add
        toString
        push 1, r:4, '{eo[6'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        branch label183
       label182:
        push r:5
        toString
        push 1, r:4, '{eo[6'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
       label183:
        push r:this, '((', '*r'
        getVariable
        push '=OA'
        getMember
        push r:this, ']oH'
        getMember
        subtract
        push r:this, '(('
        getMember
        push r:this, ']oH'
        getMember
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
        branch label189
       label184:
        push r:this, '(('
        getMember
        push -100
        lessThan
        not
        branchIfTrue label185
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$d', '*r'
        getVariable
        push '+-(0'
        getMember
        push '69-'
        getMember
        push 0
        getMember
        setMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push 1, ';ndCG'
        getVariable
        push '7T4cF('
        callMethod
        pop
        push r:this, '=kIA', 10
        setMember
       label185:
        push r:this, ')('
        getMember
        push r:this, ']oH'
        getMember
        add
        push '*r'
        getVariable
        push '[{'
        getMember
        greaterThan
        not
        branchIfTrue label188
        push r:this, ')(', '*r'
        getVariable
        push '[{'
        getMember
        push r:this, ']oH'
        getMember
        subtract
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push -0.7
        multiply
        setMember
        push r:this, '[b', r:this, '[b'
        getMember
        push '*r'
        getVariable
        push '0X xI('
        getMember
        subtract
        setMember
        push r:this, '6b', r:this, '6b'
        getMember
        push 1.5
        multiply
        setMember
        push 0
        setRegister r:6
        pop
        branch label187
       label186:
        push r:6
        increment
        setRegister r:6
        pop
       label187:
        push r:6, 3
        lessThan
        not
        branchIfTrue label188
        push 0, r:this, '7=q8G('
        callMethod
        pop
        branch label186
       label188:
        push r:this, '*;D)'
        getMember
        push '_rotation', r:this, '*;D)'
        getMember
        push '_rotation'
        getMember
        push r:this, '6b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        branch label189
       label189:
        push r:this, '2{49;'
        getMember
        push 0
        getMember
        not
        branchIfTrue label190
        push 0, r:this, '3=rZ]'
        callMethod
        pop
       label190:
      end // of function 

      setMember
      push r:1, ';jdDn'
      function2 () (r:1='this')
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        setRegister r:2
        pop
        push 8
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        branch label192
       label191:
        push r:4
        increment
        setRegister r:4
        pop
       label192:
        push r:4, 3
        lessThan
        not
        branchIfTrue label202
        push r:2, r:2, 'length'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        getMember
        setRegister r:5
        pop
        push r:5, '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:6
        pop
        push r:5, ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:7
        pop
        push r:6, r:6
        multiply
        push r:7, r:7
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        setRegister r:8
        pop
        push 2, r:8, 10
        divide
        int
        add
        setRegister r:9
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push 'draw'
        getMember
        setRegister r:10
        pop
        push 0, 'Array'
        new
        setRegister r:11
        pop
        push 0
        setRegister r:12
        pop
        branch label194
       label193:
        push r:12
        increment
        setRegister r:12
        pop
       label194:
        push r:12, r:9
        lessThan
        not
        branchIfTrue label195
        push r:12, r:9, 1
        subtract
        divide
        setRegister r:13
        pop
        push r:this, ')('
        getMember
        push r:7, r:13
        multiply
        add
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push r:3
        multiply
        add
        push r:this, '(('
        getMember
        push r:6, r:13
        multiply
        add
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push r:3
        multiply
        add
        push 2
        initArray
        setRegister r:14
        pop
        push r:14, 1, r:11, 'push'
        callMethod
        pop
        branch label193
       label195:
        push 20, 65535, 8, 3, r:10, 'lineStyle'
        callMethod
        pop
        push r:this, ')('
        getMember
        push r:this, '(('
        getMember
        push 2, r:10, 'moveTo'
        callMethod
        pop
        push 0
        setRegister r:15
        pop
        branch label197
       label196:
        push r:15
        increment
        setRegister r:15
        pop
       label197:
        push r:15, r:11, 'length'
        getMember
        lessThan
        not
        branchIfTrue label198
        push r:11, r:15
        getMember
        setRegister r:16
        pop
        push r:16, 1
        getMember
        push r:16, 0
        getMember
        push 2, r:10, 'lineTo'
        callMethod
        pop
        branch label196
       label198:
        push 100, 16777215, 1, 3, r:10, 'lineStyle'
        callMethod
        pop
        push r:this, ')('
        getMember
        push r:this, '(('
        getMember
        push 2, r:10, 'moveTo'
        callMethod
        pop
        push 0
        setRegister r:17
        pop
        branch label200
       label199:
        push r:17
        increment
        setRegister r:17
        pop
       label200:
        push r:17, r:11, 'length'
        getMember
        lessThan
        not
        branchIfTrue label201
        push r:11, r:17
        getMember
        setRegister r:18
        pop
        push r:18, 1
        getMember
        push r:18, 0
        getMember
        push 2, r:10, 'lineTo'
        callMethod
        pop
        branch label199
       label201:
        push 0.2, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        push 1, r:5, '*]Q5}'
        callMethod
        pop
        branch label191
       label202:
        push r:this, '8c};', r:this, '8c};'
        getMember
        push 0
        getMember
        push 2, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        push 1
        initArray
        setMember
        push r:this, '8c};'
        getMember
        push 0
        getMember
        push 0
        lessThan
        not
        branchIfTrue label203
        push r:this, '8c};', NULL, 1
        initArray
        setMember
       label203:
      end // of function 

      setMember
      push r:1, '3=rZ]'
      function2 () (r:1='this')
        push r:this, ' P+RR', r:this, ' P+RR'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        push 1
        initArray
        setMember
        push r:this, ' P+RR'
        getMember
        push 0
        getMember
        push 75
        lessThan
        not
        branchIfTrue label204
        push r:this, '-[Dd9'
        getMember
        push '_visible', r:this, '-[Dd9'
        getMember
        push '_visible'
        getMember
        not
        setMember
        push r:this, ' P+RR'
        getMember
        push 0
        getMember
        push 0
        lessThan
        not
        branchIfTrue label204
        push r:this, '2{49;', FALSE, 1
        initArray
        setMember
        push 0, r:this, '-[Dd9'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
       label204:
        push r:this, '-[Dd9'
        getMember
        push '-[Dd9'
        getMember
        setRegister r:2
        pop
        push r:2, '_xscale', 100, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 3
        multiply
        add
        setMember
        push r:2, '_yscale', r:2, '_xscale'
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '[4u2,'
      function2 () (r:1='this')
        push '1', 1, r:this, '*;D)'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '16', '=3+P'
        getVariable
        push '*_d*B('
        getMember
        push 1
        initArray
        setMember
        push r:this, '=kIA', 0
        setMember
      end // of function 

      setMember
      push r:1, '-43zH('
      function2 () (r:1='this')
        push r:this, '*;D)'
        getMember
        push '_rotation', 0
        setMember
        push '2', 1, r:this, '*;D)'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '=kIA', 1
        setMember
        push r:this, '88J*9(', 0
        setMember
        push r:this, '{P) W', 0
        setMember
        push 0, r:this, '{0bR,'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '505t0'
      function2 () (r:1='this')
        push r:this, '}Yax5'
        getMember
        setRegister r:2
        pop
        push r:this, '3)6yL'
        getMember
        push 0
        getMember
        not
        branchIfTrue label205
        push r:2, 1.5
        multiply
        setRegister r:2
        pop
       label205:
        push 'Key'
        getVariable
        push 'UP'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label207
        push r:this, '=kIA'
        getMember
        push 1
        equals
        not
        branchIfTrue label206
        push 0, r:this, '[4u2,'
        callMethod
        pop
       label206:
        push r:this, ']b', 0, r:2
        subtract
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        setMember
       label207:
        push 'Key'
        getVariable
        push 'DOWN'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        dup
        not
        branchIfTrue label208
        pop
        push r:this, '=kIA'
        getMember
        push 0
        equals
       label208:
        not
        branchIfTrue label209
        push r:this, ']b', r:2, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        setMember
       label209:
        push 'Key'
        getVariable
        push 'LEFT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label210
        push r:this, '[b', 0, r:2
        subtract
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        setMember
       label210:
        push 'Key'
        getVariable
        push 'RIGHT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label211
        push r:this, '[b', r:2, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        setMember
       label211:
        push 'Key'
        getVariable
        push 'SPACE'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        dup
        branchIfTrue label212
        pop
        push 'Key'
        getVariable
        push 'CONTROL'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
       label212:
        not
        branchIfTrue label213
        push 0, r:this, ',cqp5'
        callMethod
        pop
        branch label215
       label213:
        push r:this, '=kIA'
        getMember
        push 0
        equals
        dup
        not
        branchIfTrue label214
        pop
        push r:this, '=e3ST'
        getMember
        push 0
        getMember
       label214:
        not
        branchIfTrue label215
        push 0, r:this, ',BJRZ'
        callMethod
        pop
       label215:
      end // of function 

      setMember
      push r:1, ',BJRZ'
      function2 () (r:1='this')
        push r:this, '(t}](', 100, r:this, '(t}]('
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        add
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        push 1
        initArray
        setMember
        push r:this, '(t}]('
        getMember
        push 0
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label221
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 100
        multiply
        push r:this, '(t}]('
        getMember
        push 0
        getMember
        lessThan
        not
        branchIfTrue label216
        push '=3+P'
        getVariable
        push '5jj+C'
        getMember
        push ',+TFu', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:2
        pop
        push r:2, '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        push r:2, '6b', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 3
        multiply
        setMember
        push r:2, '-i', 50, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 100
        multiply
        add
        setMember
        push r:2, '_xscale', 60, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 40
        multiply
        add
        push r:this, '(t}]('
        getMember
        push 0
        getMember
        push 100
        divide
        multiply
        setMember
        push r:2, '_yscale', r:2, '-i'
        getMember
        setMember
        push r:2, ']', 12, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 20
        multiply
        add
        setMember
        push r:this, '[2(j8'
        getMember
        push 0
        getMember
        push 1
        add
        toString
        push 1, r:2, 'gotoAndStop'
        callMethod
        pop
        push r:2, 1, r:this, '39kX5'
        getMember
        push 'push'
        callMethod
        pop
       label216:
        push 0
        setRegister r:3
        pop
        branch label218
       label217:
        push r:3
        increment
        setRegister r:3
        pop
       label218:
        push r:3, r:this, '39kX5'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label220
        push r:this, '39kX5'
        getMember
        push r:3
        getMember
        setRegister r:4
        pop
        push r:4, '_rotation', r:4, '_rotation'
        getMember
        push r:4, '6b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:4, ']', r:4, ']'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:4, ']'
        getMember
        push 10
        lessThan
        not
        branchIfTrue label219
        push r:4, '_yscale', r:4, '-i'
        getMember
        push r:4, ']'
        getMember
        multiply
        push 10
        divide
        setMember
        push r:4, ']'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label219
        push 0, r:4, 'removeMovieClip'
        callMethod
        pop
        push 1, r:3, r:3
        decrement
        setRegister r:3
        pop
        push 2, r:this, '39kX5'
        getMember
        push 'splice'
        callMethod
        pop
       label219:
        branch label217
       label220:
        push 2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label221
        push '=3+P'
        getVariable
        push '5jj+C'
        getMember
        push '{B20=(', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:5
        pop
        push r:5, '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        push r:5, '_xscale', r:this, ',cM('
        getMember
        push '_xscale'
        getMember
        push 1.3
        multiply
        setMember
        push r:5, '_yscale', r:5, '_xscale'
        getMember
        setMember
        push r:5, 'list', r:this, '7Qe;6'
        getMember
        setMember
        push r:5, 1, r:this, '7Qe;6'
        getMember
        push 'push'
        callMethod
        pop
        push '=3+P'
        getVariable
        push '(nox('
        getMember
        push r:this, '[2(j8'
        getMember
        push 0
        getMember
        getMember
        push 100, r:5, 3, '*r'
        getVariable
        push ';CYOh'
        callMethod
        pop
       label221:
      end // of function 

      setMember
      push r:1, '0Re25'
      function2 () (r:1='this')
        push r:this, '(('
        getMember
        push r:this, ']oH'
        getMember
        lessThan
        dup
        branchIfTrue label222
        pop
        push r:this, '(('
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        push r:this, ']oH'
        getMember
        subtract
        greaterThan
       label222:
        not
        branchIfTrue label223
        push r:this, '((', '*r'
        getVariable
        push '=OA'
        getMember
        push r:this, ']oH'
        getMember
        subtract
        push r:this, '(('
        getMember
        push r:this, ']oH'
        getMember
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
        push r:this, '[b', 0
        setMember
       label223:
        push r:this, ')('
        getMember
        push r:this, ']oH'
        getMember
        lessThan
        dup
        branchIfTrue label224
        pop
        push r:this, ')('
        getMember
        push '*r'
        getVariable
        push '[{'
        getMember
        push r:this, ']oH'
        getMember
        push '=3+P'
        getVariable
        push '2XGnD('
        getMember
        add
        subtract
        greaterThan
       label224:
        not
        branchIfTrue label225
        push r:this, ')(', '*r'
        getVariable
        push '[{'
        getMember
        push r:this, ']oH'
        getMember
        push '=3+P'
        getVariable
        push '2XGnD('
        getMember
        add
        subtract
        push r:this, ')('
        getMember
        push r:this, ']oH'
        getMember
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
        push r:this, ']b', 0
        setMember
       label225:
      end // of function 

      setMember
      push r:1, ',cqp5'
      function2 () (r:1='this')
        push r:this, '4eyD,'
        getMember
        push 0
        getMember
        push 0
        lessThan
        not
        branchIfTrue label243
        push r:this, '=kIA'
        getMember
        push 1
        equals
        not
        branchIfTrue label230
        push 0, 0, 2, r:this, '57_8L('
        callMethod
        setRegister r:2
        pop
        push r:2, NULL
        equals
        not
        not
        branchIfTrue label229
        push r:2, 1, r:this, '}1A{_'
        callMethod
        setRegister r:3
        pop
        push r:3, 16
        divide
        setRegister r:4
        pop
        push r:2, '(('
        getMember
        push r:2, '[b'
        getMember
        push r:4
        multiply
        add
        push r:this, '(('
        getMember
        subtract
        setRegister r:5
        pop
        push r:2, ')('
        getMember
        push r:2, ']b'
        getMember
        push r:4
        multiply
        add
        push r:this, ')('
        getMember
        subtract
        setRegister r:6
        pop
        push r:this, '16', r:5, r:6, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        push 1
        initArray
        setMember
        push r:this, '16'
        getMember
        push 0
        getMember
        push 0
        greaterThan
        dup
        not
        branchIfTrue label226
        pop
        push r:this, '16'
        getMember
        push 0
        getMember
        push 1.57
        lessThan
       label226:
        not
        branchIfTrue label227
        push r:this, '16', 0, 1
        initArray
        setMember
       label227:
        push r:this, '16'
        getMember
        push 0
        getMember
        push 1.57
        greaterThan
        not
        branchIfTrue label228
        push r:this, '16', -3.14, 1
        initArray
        setMember
       label228:
        branch label230
       label229:
        push r:this, '16', 0, 1
        initArray
        setMember
       label230:
        push r:this, '[2(j8'
        getMember
        push 0
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label231
        push r:0, 1
        strictEquals
        branchIfTrue label237
        push r:0, 2
        strictEquals
        branchIfTrue label241
        branch label243
       label231:
        push r:this, '(t}]('
        getMember
        push 0
        getMember
        push 10
        lessThan
        not
        branchIfTrue label235
        push 0, 16, 2, r:this, '8A1T3('
        callMethod
        setRegister r:7
        pop
        push r:7, '*]Q5}', '*r'
        getVariable
        push '+KiY*'
        getMember
        setMember
        push r:this, '-6YgZ'
        getMember
        push 0
        getMember
        push 3
        multiply
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:8
        pop
        push 0
        setRegister r:9
        pop
        branch label233
       label232:
        push r:9
        increment
        setRegister r:9
        pop
       label233:
        push r:9, r:8
        lessThan
        not
        branchIfTrue label234
        push 6, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 8
        multiply
        add
        setRegister r:10
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 0.25
        multiply
        push r:10, 2, r:this, '8A1T3('
        callMethod
        setRegister r:11
        pop
        push 60
        setRegister r:12
        pop
        push r:11, '-iB='
        getMember
        push '_xscale', r:12
        setMember
        push r:11, '-iB='
        getMember
        push '_yscale', r:12
        setMember
        push r:11, '*]Q5}', '*r'
        getVariable
        push '+KiY*'
        getMember
        push 0.5
        multiply
        setMember
        branch label232
       label234:
        branch label236
       label235:
        push r:this, '(t}]('
        getMember
        push 0
        getMember
        push 0.5
        multiply
        setRegister r:13
        pop
        push 0, 16, 2, r:this, '8A1T3('
        callMethod
        setRegister r:14
        pop
        push r:14, '*]Q5}', 1, r:13, 0.5
        multiply
        add
        setMember
        push 150, r:13, 5
        multiply
        add
        setRegister r:15
        pop
        push r:14, '-iB='
        getMember
        push '_xscale', r:15
        setMember
        push r:14, '-iB='
        getMember
        push '_yscale', r:15
        setMember
        push r:14, '{jXZ;(', TRUE
        setMember
        push r:14, ']oH', 6, r:15, 100
        divide
        multiply
        setMember
        push 1, 1, r:14, '86{p('
        getMember
        push 'push'
        callMethod
        pop
       label236:
        push r:this, '4eyD,', 4, 1
        initArray
        setMember
        branch label243
       label237:
        push 25, r:this, '(t}]('
        getMember
        push 0
        getMember
        push 4
        divide
        int
        push 2, 3, '*r'
        getVariable
        push '2K'
        callMethod
        push r:this, '-6YgZ'
        getMember
        push 0
        getMember
        push 2
        multiply
        add
        setRegister r:16
        pop
        push r:16, 0.07000000000000001
        multiply
        setRegister r:17
        pop
        push 0
        setRegister r:18
        pop
        branch label239
       label238:
        push r:18
        increment
        setRegister r:18
        pop
       label239:
        push r:18, r:16
        lessThan
        not
        branchIfTrue label240
        push r:18, r:16, 1
        subtract
        divide
        push 2
        multiply
        push 1
        subtract
        setRegister r:19
        pop
        push r:19, r:17
        multiply
        push 16, 2, r:this, '8A1T3('
        callMethod
        setRegister r:20
        pop
        push 5, 1, r:20, '3U*}=('
        callMethod
        pop
        push r:20, '*]Q5}', '*r'
        getVariable
        push '6+vtH('
        getMember
        setMember
        branch label238
       label240:
        push r:this, '4eyD,', 6, 1
        initArray
        setMember
        branch label243
       label241:
        push 0, 16, 2, r:this, '8A1T3('
        callMethod
        setRegister r:21
        pop
        push 6, 1, r:21, '3U*}=('
        callMethod
        pop
        push r:21, '*]Q5}', '*r'
        getVariable
        push ' pyvJ('
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        push r:this, '-6YgZ'
        getMember
        push 0
        getMember
        push 1
        add
        multiply
        setMember
        push r:21, '-iB='
        getMember
        push '_yscale', 60, r:this, '-6YgZ'
        getMember
        push 0
        getMember
        push 50
        multiply
        add
        setMember
        push r:21, '-iB='
        getMember
        push '_xscale', 100, r:this, '-6YgZ'
        getMember
        push 0
        getMember
        push 20
        multiply
        add
        setMember
        push r:21, '8J1xN', TRUE
        setMember
        push r:this, '4eyD,', 3, 1
        initArray
        setMember
        push r:this, '(t}]('
        getMember
        push 0
        getMember
        push 30
        greaterThan
        not
        branchIfTrue label242
        push r:this, '8c};', r:this, '(t}]('
        getMember
        push 0
        getMember
        push 30
        subtract
        push 1
        initArray
        setMember
       label242:
        branch label243
       label243:
        push 0, r:this, '{0bR,'
        callMethod
        pop
        push r:this, '*4XJ6'
        getMember
        push 0
        getMember
        push 0
        lessThan
        dup
        not
        branchIfTrue label244
        pop
        push r:this, '=kIA'
        getMember
        push 0
        equals
       label244:
        not
        branchIfTrue label252
        push r:this, '=M)xq'
        getMember
        push 0
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label245
        push r:0, 1
        strictEquals
        branchIfTrue label246
        push r:0, 2
        strictEquals
        branchIfTrue label247
        branch label252
       label245:
        push r:this, '*4XJ6', 30, r:this, '{(MD=('
        getMember
        push 0
        getMember
        push 1
        add
        divide
        push 1
        initArray
        setMember
        push 0, 0, 2, r:this, '8A1T3('
        callMethod
        setRegister r:22
        pop
        push 3, 1, r:22, '3U*}=('
        callMethod
        pop
        push r:22, '(KpGn', 0.4, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.2
        multiply
        add
        setMember
        push r:22, '((', r:22, '(('
        getMember
        push 10
        subtract
        setMember
        push r:22, ']b', -3
        setMember
        push r:22, '[b', 2, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        add
        setMember
        push r:22, '+{eA+', 0.98
        setMember
        push r:22, '6b', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 20
        multiply
        setMember
        push 0, 1, r:22, '86{p('
        getMember
        push 'push'
        callMethod
        pop
        push r:22, '*]Q5}', '*r'
        getVariable
        push '}RXB3'
        getMember
        setMember
        branch label252
       label246:
        branch label252
       label247:
        push r:this, '{(MD=('
        getMember
        push 0
        getMember
        push 1
        add
        setRegister r:23
        pop
        push 0
        setRegister r:24
        pop
        branch label249
       label248:
        push r:24
        increment
        setRegister r:24
        pop
       label249:
        push r:24, r:23
        lessThan
        not
        branchIfTrue label251
        push r:24, r:23, 1
        subtract
        divide
        push 2
        multiply
        push 1
        subtract
        setRegister r:25
        pop
        push r:23, 1
        equals
        not
        branchIfTrue label250
        push 0
        setRegister r:25
        pop
       label250:
        push r:25, r:23
        multiply
        push 0.4
        multiply
        push 5, 2, r:this, '8A1T3('
        callMethod
        setRegister r:26
        pop
        push r:26, '}CL', r:26, '('
        getMember
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push 20
        multiply
        push r:26, '('
        getMember
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push 20
        multiply
        push 2, r:this, '57_8L('
        callMethod
        setMember
        push r:26, '[a', 0.5
        setMember
        push r:26, '9-', 0.1
        setMember
        push r:26, '86{p(', 3, 2, 2
        initArray
        setMember
        push r:26, '}Yax5', 8
        setMember
        push r:26, '*]Q5}', '*r'
        getVariable
        push '-)sr;('
        getMember
        setMember
        push 7, 1, r:26, '3U*}=('
        callMethod
        pop
        push r:26, '2VhU6', 120
        setMember
        branch label248
       label251:
        push r:this, '*4XJ6', 30, 1
        initArray
        setMember
        branch label252
       label252:
      end // of function 

      setMember
      push r:1, '{0bR,'
      function2 () (r:1='this')
       label253:
        push r:this, '7Qe;6'
        getMember
        push 'length'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label254
        push 0, 0, r:this, '7Qe;6'
        getMember
        push 'pop'
        callMethod
        push 'removeMovieClip'
        callMethod
        pop
        branch label253
       label254:
        push r:this, '39kX5'
        getMember
        push 'length'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label255
        push 0, 0, r:this, '39kX5'
        getMember
        push 'pop'
        callMethod
        push 'removeMovieClip'
        callMethod
        pop
        branch label254
       label255:
        push r:this, '(t}](', 0, 1
        initArray
        setMember
        push r:this, ',cM('
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label256
        push 0, r:this, ',cM('
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, ',cM(', NULL
        setMember
       label256:
      end // of function 

      setMember
      push r:1, '565'
      function2 (r:2=')93A') (r:1='this')
        push r:')93A', ']oH'
        getMember
        push 15
        greaterThan
        not
        branchIfTrue label257
        push ';)4', 1, r:this, '*;D)'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
       label257:
        push 0, r:this, '8Ugi)'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '8Ugi)'
      function2 () (r:1='this')
        push r:this, '=kIA', 9
        setMember
        push r:this, '(KpGn', 1
        setMember
        push r:this, '+{eA+', 0.98
        setMember
        push r:this, '6b', 18
        setMember
        push 0, r:this, '{0bR,'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '5KYs)'
      function2 () (r:1='this')
        push r:this, '=g]u6'
        getMember
        push 'length'
        getMember
        push 4
        greaterThan
        not
        branchIfTrue label258
        push UNDEF
        return
       label258:
        push '96no3', 0, '2VhU6', 100, '}CL', '((', r:this, '(('
        getMember
        push ')(', r:this, ')('
        getMember
        push 2
        initObject
        push 3
        initObject
        push 1, r:this, '=g]u6'
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '0b3_F('
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label260
       label259:
        push r:2
        increment
        setRegister r:2
        pop
       label260:
        push r:2, r:this, '=g]u6'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label276
        push r:this, '=g]u6'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3, '96no3', r:3, '96no3'
        getMember
        push 37
        add
        push 628
        modulo
        setMember
        push r:2, r:this, '=g]u6'
        getMember
        push 'length'
        getMember
        push 1
        subtract
        divide
        push 2
        multiply
        push 1
        subtract
        setRegister r:4
        pop
        push r:this, '=g]u6'
        getMember
        push 'length'
        getMember
        push 1
        equals
        not
        branchIfTrue label261
        push 0
        setRegister r:4
        pop
       label261:
        push 0, 'Array'
        new
        setRegister r:5
        pop
        push -3.14, r:4, 1.3
        multiply
        add
        setRegister r:6
        pop
        push r:this, '(('
        getMember
        setRegister r:7
        pop
        push r:this, ')('
        getMember
        setRegister r:8
        pop
        push 0.6
        setRegister r:9
        pop
        push 1
        setRegister r:10
        pop
        push 10
        setRegister r:11
        pop
        push 0
        setRegister r:12
        pop
        push r:3, '96no3'
        getMember
        setRegister r:13
        pop
        push 0, r:6, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        subtract
        push 100
        multiply
        setRegister r:14
        pop
        push 0, r:6, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        subtract
        push 100
        multiply
        setRegister r:15
        pop
        push r:15, r:14, 2, r:this, '57_8L('
        callMethod
        setRegister r:16
        pop
        push r:16, NULL
        equals
        not
        not
        branchIfTrue label262
        push r:16, '(('
        getMember
        push r:3, '}CL'
        getMember
        push '(('
        getMember
        subtract
        setRegister r:17
        pop
        push r:16, ')('
        getMember
        push r:3, '}CL'
        getMember
        push ')('
        getMember
        subtract
        setRegister r:18
        pop
        push 0.15
        setRegister r:19
        pop
        push r:3, '}CL'
        getMember
        push '((', r:3, '}CL'
        getMember
        push '(('
        getMember
        push r:17, r:19
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:3, '}CL'
        getMember
        push ')(', r:3, '}CL'
        getMember
        push ')('
        getMember
        push r:18, r:19
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label262:
        push 0
        setRegister r:20
        pop
        branch label264
       label263:
        push r:20
        increment
        setRegister r:20
        pop
       label264:
        push r:20, 18
        lessThan
        not
        branchIfTrue label269
        push 1, r:12, 0.1
        add
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:12
        pop
        push r:13, 66
        add
        push 628
        modulo
        setRegister r:13
        pop
        push r:3, '}CL'
        getMember
        push '(('
        getMember
        push r:7
        subtract
        setRegister r:21
        pop
        push r:3, '}CL'
        getMember
        push ')('
        getMember
        push r:8
        subtract
        setRegister r:22
        pop
        push r:21, r:22, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        push r:6
        subtract
        setRegister r:23
        pop
       label265:
        push r:23, 3.14
        greaterThan
        not
        branchIfTrue label266
        push r:23, 6.28
        subtract
        setRegister r:23
        pop
        branch label265
       label266:
        push r:23, -3.14
        lessThan
        not
        branchIfTrue label267
        push r:23, 6.28
        add
        setRegister r:23
        pop
        branch label266
       label267:
        push r:13, 100
        divide
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push 0.5
        multiply
        setRegister r:24
        pop
        push r:6, r:9, r:23, r:10
        multiply
        push 0, r:9
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        push r:12
        multiply
        add
        setRegister r:6
        pop
        push r:7, r:6, r:24
        add
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:11
        multiply
        add
        setRegister r:7
        pop
        push r:8, r:6, r:24
        add
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:11
        multiply
        add
        setRegister r:8
        pop
        push '*r'
        getVariable
        push '[{'
        getMember
        push 5
        subtract
        push r:8, 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:8
        pop
        push '((', r:7, ')(', r:8, 2
        initObject
        push 1, r:16, '}1A{_'
        callMethod
        push r:16, ']oH'
        getMember
        lessThan
        not
        branchIfTrue label268
        push '*r'
        getVariable
        push ',PRRg'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        push 1, r:16, '*]Q5}'
        callMethod
        pop
        push '*r'
        getVariable
        push '8s'
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push r:3, '96no3', r:3, '96no3'
        getMember
        push 57
        add
        push 628
        modulo
        setMember
        branch label269
       label268:
        push r:8, r:7, 2
        initArray
        push 1, r:5, 'push'
        callMethod
        pop
        branch label263
       label269:
        push 6
        setRegister r:25
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push 'draw'
        getMember
        setRegister r:26
        pop
        push 30, 16711935, 6, 3, r:26, 'lineStyle'
        callMethod
        pop
        push r:this, ')('
        getMember
        push r:this, '(('
        getMember
        push 2, r:26, 'moveTo'
        callMethod
        pop
        push 0
        setRegister r:27
        pop
        branch label271
       label270:
        push r:27
        increment
        setRegister r:27
        pop
       label271:
        push r:27, r:5, 'length'
        getMember
        lessThan
        not
        branchIfTrue label272
        push 1, r:27, r:5, 'length'
        getMember
        divide
        subtract
        setRegister r:28
        pop
        push 100, 16711935, 5, r:28, r:25
        multiply
        add
        push 3, r:26, 'lineStyle'
        callMethod
        pop
        push r:5, r:27
        getMember
        setRegister r:29
        pop
        push r:29, 1
        getMember
        push r:29, 0
        getMember
        push 2, r:26, 'lineTo'
        callMethod
        pop
        branch label270
       label272:
        push 100, 16777215, 1.5, 3, r:26, 'lineStyle'
        callMethod
        pop
        push r:this, ')('
        getMember
        push r:this, '(('
        getMember
        push 2, r:26, 'moveTo'
        callMethod
        pop
        push 0
        setRegister r:30
        pop
        branch label274
       label273:
        push r:30
        increment
        setRegister r:30
        pop
       label274:
        push r:30, r:5, 'length'
        getMember
        lessThan
        not
        branchIfTrue label275
        push 1, r:30, r:5, 'length'
        getMember
        divide
        subtract
        setRegister r:31
        pop
        push 100, 16777215, 1.5, r:31, r:25
        multiply
        add
        push 3, r:26, 'lineStyle'
        callMethod
        pop
        push r:5, r:30
        getMember
        setRegister r:32
        pop
        push r:32, 1
        getMember
        push r:32, 0
        getMember
        push 2, r:26, 'lineTo'
        callMethod
        pop
        branch label273
       label275:
        branch label259
       label276:
      end // of function 

      setMember
      push r:1, '(G7+8('
      function2 () (r:1='this')
        push r:this, '=g]u6', 0, '{sRCQ'
        new
        setMember
      end // of function 

      setMember
      push r:1, '}gGHb'
      function2 (r:2='*B') (r:1='this')
        push r:this, '=M)xq'
        getMember
        push 0
        getMember
        push r:'*B'
        equals
        not
        branchIfTrue label279
        push r:this, '=M)xq'
        getMember
        push 0
        getMember
        push 1
        equals
        dup
        not
        branchIfTrue label277
        pop
        push r:this, '{(MD=('
        getMember
        push 0
        getMember
        push 2
        lessThan
       label277:
        not
        branchIfTrue label278
        push 0, r:this, '5KYs)'
        callMethod
        pop
       label278:
        push r:this, '{(MD=(', 2, r:this, '{(MD=('
        getMember
        push 0
        getMember
        push 1
        add
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        int
        push 1
        initArray
        setMember
        branch label284
       label279:
        push r:this, '=M)xq'
        getMember
        push 0
        getMember
        push 1
        equals
        not
        branchIfTrue label280
        push 0, r:this, '(G7+8('
        callMethod
        pop
       label280:
        push r:'*B', 1
        equals
        not
        branchIfTrue label283
        push 0
        setRegister r:3
        pop
        branch label282
       label281:
        push r:3
        increment
        setRegister r:3
        pop
       label282:
        push r:3, r:this, '{(MD=('
        getMember
        push 0
        getMember
        push 1
        add
        lessThan
        not
        branchIfTrue label283
        push 0, r:this, '5KYs)'
        callMethod
        pop
        branch label281
       label283:
        push r:this, '=M)xq', r:'*B', 1
        initArray
        setMember
       label284:
      end // of function 

      setMember
      push r:1, ';{+a4('
      function2 () (r:1='this')
        push r:this, '-[Dd9'
        getMember
        push NULL
        equals
        not
        branchIfTrue label285
        push r:this, '2{49;', TRUE, 1
        initArray
        setMember
        push r:this, '-[Dd9', '=3+P'
        getVariable
        push '04wZn'
        getMember
        push '{y6)2(', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, ' P+RR', 1000, 1
        initArray
        setMember
       label285:
      end // of function 

      setMember
      push r:1, '68I_m'
      function2 () (r:1='this')
        push r:this, '3)6yL', TRUE, 1
        initArray
        setMember
        push r:this, '*;D)'
        getMember
        push '0=*', 2
        setMember
        push '2', 1, r:this, '*;D)'
        getMember
        push ' L96v'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '-)OC{'
      function2 () (r:1='this')
        push UNDEF
        return
       label286:
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '0q3(Q'
        getMember
        push 'length'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label287
        push 0, 0, '*r'
        getVariable
        push '+-(0'
        getMember
        push '0q3(Q'
        getMember
        push 'pop'
        callMethod
        push 'removeMovieClip'
        callMethod
        pop
        branch label286
       label287:
        push 0, 'Array'
        new
        setRegister r:2
        pop
        push r:this, '[2(j8'
        getMember
        push 0
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label288
        push r:this, '[2(j8'
        getMember
        push 0
        getMember
        push 1
        add
        push 1, r:2, 'push'
        callMethod
        pop
       label288:
        push r:this, '=M)xq'
        getMember
        push 0
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label289
        push r:this, '=M)xq'
        getMember
        push 0
        getMember
        push 11
        add
        push 1, r:2, 'push'
        callMethod
        pop
       label289:
        push r:this, '=e3ST'
        getMember
        push 0
        getMember
        not
        branchIfTrue label290
        push 31, 1, r:2, 'push'
        callMethod
        pop
       label290:
        push r:this, '3)6yL'
        getMember
        push 0
        getMember
        not
        branchIfTrue label291
        push 32, 1, r:2, 'push'
        callMethod
        pop
       label291:
        push r:this, '2{49;'
        getMember
        push 0
        getMember
        not
        branchIfTrue label292
        push 33, 1, r:2, 'push'
        callMethod
        pop
       label292:
        push 0
        setRegister r:3
        pop
        branch label294
       label293:
        push r:3
        increment
        setRegister r:3
        pop
       label294:
        push r:3, r:2, 'length'
        getMember
        lessThan
        not
        branchIfTrue label295
        push '44{N'
        getVariable
        push '[V{(6'
        getMember
        push ')cd=C', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:4
        pop
        push r:2, r:3
        getMember
        toString
        push 1, r:4, 'gotoAndStop'
        callMethod
        pop
        push r:4, '_x', 16, 27, r:3
        multiply
        add
        setMember
        push r:4, '_y', '*r'
        getVariable
        push '*OA'
        getMember
        push 20
        subtract
        setMember
        push r:4, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '0q3(Q'
        getMember
        push 'push'
        callMethod
        pop
        branch label293
       label295:
      end // of function 

      setMember
      push r:1, '8A1T3('
      function2 (r:2='[X', r:3=']J') (r:1='this')
        push NULL, 1, '2C0['
        new
        setRegister r:4
        pop
        push r:4, '(', r:this, '16'
        getMember
        push 0
        getMember
        push r:this, '*;D)'
        getMember
        push '_rotation'
        getMember
        push 0.0174
        multiply
        add
        push r:']J'
        add
        setMember
        push r:4, '('
        getMember
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:5
        pop
        push r:4, '('
        getMember
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:6
        pop
        push r:4, '((', r:this, '(('
        getMember
        push r:5, 26
        multiply
        add
        setMember
        push r:4, ')(', r:this, ')('
        getMember
        push r:6, 26
        multiply
        add
        setMember
        push r:4, '[b', r:5, r:'[X'
        multiply
        setMember
        push r:4, ']b', r:6, r:'[X'
        multiply
        setMember
        push r:4, '+{eA+', NULL
        setMember
        push 0, r:4, '{BxJE('
        callMethod
        pop
        push r:4, '*g;o', TRUE
        setMember
        push r:4
        return
      end // of function 

      setMember
      push r:1, '57_8L('
      function2 (r:2='{2', r:3='}2') (r:1='this')
        push 1, 0
        divide
        setRegister r:4
        pop
        push NULL
        setRegister r:5
        pop
        push 0
        setRegister r:6
        pop
        branch label297
       label296:
        push r:6
        increment
        setRegister r:6
        pop
       label297:
        push r:6, '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label299
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        push r:6
        getMember
        setRegister r:7
        pop
        push '((', r:7, '(('
        getMember
        push r:'{2'
        add
        push ')(', r:7, ')('
        getMember
        push r:'}2'
        add
        push 2
        initObject
        push 1, r:this, '}1A{_'
        callMethod
        setRegister r:8
        pop
        push r:8, r:4
        lessThan
        not
        branchIfTrue label298
        push r:8
        setRegister r:4
        pop
        push r:7
        setRegister r:5
        pop
       label298:
        branch label296
       label299:
        push r:5
        return
      end // of function 

      setMember
      push r:0, '5jj+C', 3
      setMember
      push r:0, '9qvf3', 4
      setMember
      push r:0, '7Y-tb', 5
      setMember
      push r:0, '04wZn', 2
      setMember
      push r:0, '*_d*B(', -0.1
      setMember
      push r:0, '(nox(', 4513279, 14501119, 16768358, 3
      initArray
      setMember
      push r:0, '2XGnD(', 7
      setMember
      push '2]ya'
      function2 (r:2='*B') (r:1='this')
        push 0.3, 0.7, '*r'
        getVariable
        push '+-(0'
        getMember
        push '69-'
        getMember
        push 0
        getMember
        multiply
        push 10000
        divide
        add
        setRegister r:3
        pop
        push r:'*B', NULL
        equals
        not
        branchIfTrue label300
        push '2]ya'
        getVariable
        push ')nRX'
        getMember
        push 'length'
        getMember
        push r:3
        multiply
        int
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:'*B'
        pop
       label300:
        push '2]ya'
        getVariable
        push ')nRX'
        getMember
        push r:'*B'
        getMember
        setRegister r:4
        pop
        push r:this, ';B 9', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:5
        pop
        branch label302
       label301:
        push r:5
        increment
        setRegister r:5
        pop
       label302:
        push r:5, r:4, 'length'
        getMember
        lessThan
        not
        branchIfTrue label303
        push r:this, ';B 9'
        getMember
        push r:5, 0, r:4, r:5
        getMember
        push 'duplicate'
        callMethod
        setMember
        branch label301
       label303:
        push 2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label304
        push 0, r:this, '+ikVP'
        callMethod
        pop
       label304:
        push r:this, ' R', 0, 1
        initArray
        setMember
        push 0
        setRegister r:6
        pop
        push r:this, ';B 9'
        getMember
        push 0
        getMember
        push 0
        getMember
        setRegister r:7
        pop
        push r:this, ';B 9'
        getMember
        push 0
        getMember
        push 1
        getMember
        setRegister r:8
        pop
        push 1
        setRegister r:9
        pop
        branch label306
       label305:
        push r:9
        increment
        setRegister r:9
        pop
       label306:
        push r:9, r:this, ';B 9'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label307
        push r:this, ';B 9'
        getMember
        push r:9
        getMember
        setRegister r:10
        pop
        push r:10, 0
        getMember
        push r:7
        subtract
        setRegister r:11
        pop
        push r:10, 1
        getMember
        push r:8
        subtract
        setRegister r:12
        pop
        push r:6, r:11, r:11
        multiply
        push r:12, r:12
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        add
        setRegister r:6
        pop
        push r:6, 1, r:this, ' R'
        getMember
        push 'push'
        callMethod
        pop
        push r:10, 0
        getMember
        setRegister r:7
        pop
        push r:10, 1
        getMember
        setRegister r:8
        pop
        branch label305
       label307:
        push r:this, '86{p(', 0, 'Array'
        new
        setMember
        push r:this, '}Yax5', 2, 1
        initArray
        setMember
        push r:this, '(yaK*', 30, 1
        initArray
        setMember
        push r:this, '(Erk5', '*r'
        getVariable
        push '4]1L'
        getMember
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '+ikVP'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label309
       label308:
        push r:2
        increment
        setRegister r:2
        pop
       label309:
        push r:2, r:this, ';B 9'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label310
        push r:this, ';B 9'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push '*r'
        getVariable
        push '*OA'
        getMember
        push '*r'
        getVariable
        push '95('
        getMember
        add
        push 0.5
        multiply
        setRegister r:4
        pop
        push r:3, 1, r:4, r:3, 1
        getMember
        push r:4
        subtract
        subtract
        setMember
        branch label308
       label310:
      end // of function 

      setMember
      push r:1, ']r5gM'
      function2 (r:2=')') (r:1='this')
        push r:')', '0BP', 0, r:this, '86{p('
        getMember
        push 'length'
        getMember
        subtract
        push r:this, '(yaK*'
        getMember
        push 0
        getMember
        multiply
        setMember
        push r:')', '(]hH{', r:this, '86{p('
        getMember
        push 'length'
        getMember
        setMember
        push r:')', '83489', 0
        setMember
        push r:')', 1, r:this, '86{p('
        getMember
        push 'push'
        callMethod
        pop
        push r:')', ')W}D', r:this
        setMember
        push 0, 1, r:')', '86{p('
        getMember
        push 'push'
        callMethod
        pop
        push r:')', '+{eA+', 1
        setMember
        push r:')', '((', r:this, ';B 9'
        getMember
        push 0
        getMember
        push 0
        getMember
        setMember
        push r:')', ')(', r:this, ';B 9'
        getMember
        push 0
        getMember
        push 1
        getMember
        setMember
      end // of function 

      setMember
      push r:0, ')nRX', 185, -16, 2
      initArray
      push 184, 243, 2
      initArray
      push 168, 275, 2
      initArray
      push 143, 284, 2
      initArray
      push 121, 277, 2
      initArray
      push 108, 243, 2
      initArray
      push 109, 194, 2
      initArray
      push 109, 152, 2
      initArray
      push 88, 119, 2
      initArray
      push 50, 97, 2
      initArray
      push 25, 62, 2
      initArray
      push 17, 21, 2
      initArray
      push 17, -23, 2
      initArray
      push 13
      initArray
      push 274, 355, 2
      initArray
      push 273, 208, 2
      initArray
      push 261, 143, 2
      initArray
      push 231, 94, 2
      initArray
      push 183, 64, 2
      initArray
      push 132, 54, 2
      initArray
      push 74, 72, 2
      initArray
      push 39, 114, 2
      initArray
      push 26, 172, 2
      initArray
      push 33, 227, 2
      initArray
      push 52, 258, 2
      initArray
      push 84, 268, 2
      initArray
      push 119, 260, 2
      initArray
      push 133, 227, 2
      initArray
      push 112, 196, 2
      initArray
      push 79, 175, 2
      initArray
      push 71, 142, 2
      initArray
      push 90, 114, 2
      initArray
      push 134, 113, 2
      initArray
      push 171, 142, 2
      initArray
      push 187, 215, 2
      initArray
      push 188, 351, 2
      initArray
      push 22
      initArray
      push 163, 322, 2
      initArray
      push 202, 277, 2
      initArray
      push 277, 221, 2
      initArray
      push 291, 178, 2
      initArray
      push 277, 145, 2
      initArray
      push 245, 120, 2
      initArray
      push 202, 117, 2
      initArray
      push 154, 120, 2
      initArray
      push 118, 121, 2
      initArray
      push 95, 95, 2
      initArray
      push 95, 60, 2
      initArray
      push 122, 36, 2
      initArray
      push 157, 42, 2
      initArray
      push 181, 79, 2
      initArray
      push 173, 149, 2
      initArray
      push 140, 187, 2
      initArray
      push 102, 202, 2
      initArray
      push 55, 202, 2
      initArray
      push 20, 191, 2
      initArray
      push 7, 151, 2
      initArray
      push 22, 118, 2
      initArray
      push 51, 107, 2
      initArray
      push 84, 132, 2
      initArray
      push 91, 171, 2
      initArray
      push 73, 229, 2
      initArray
      push 9, 306, 2
      initArray
      push 26
      initArray
      push 330, 156, 2
      initArray
      push 41, 157, 2
      initArray
      push 22, 141, 2
      initArray
      push 21, 116, 2
      initArray
      push 41, 96, 2
      initArray
      push 70, 95, 2
      initArray
      push 148, 197, 2
      initArray
      push 149, 333, 2
      initArray
      push 8
      initArray
      push 292, 326, 2
      initArray
      push 172, 289, 2
      initArray
      push 95, 248, 2
      initArray
      push 49, 206, 2
      initArray
      push 26, 142, 2
      initArray
      push 43, 68, 2
      initArray
      push 109, 22, 2
      initArray
      push 187, 23, 2
      initArray
      push 249, 64, 2
      initArray
      push 275, 135, 2
      initArray
      push 251, 204, 2
      initArray
      push 205, 249, 2
      initArray
      push 134, 291, 2
      initArray
      push 17, 330, 2
      initArray
      push 14
      initArray
      push 172, -24, 2
      initArray
      push 172, 276, 2
      initArray
      push 161, 287, 2
      initArray
      push 145, 288, 2
      initArray
      push 131, 268, 2
      initArray
      push 60, 23, 2
      initArray
      push 46, 11, 2
      initArray
      push 32, 19, 2
      initArray
      push 25, 35, 2
      initArray
      push 27, 330, 2
      initArray
      push 10
      initArray
      push 115, -20, 2
      initArray
      push 114, 280, 2
      initArray
      push 192, 281, 2
      initArray
      push 193, 205, 2
      initArray
      push 270, 205, 2
      initArray
      push 270, 330, 2
      initArray
      push 6
      initArray
      push 7
      initArray
      setMember
      push '(WBt)'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ']}Ou;(', 1
      setMember
      push r:0, '3I0pG', 2
      setMember
      push r:0, '{;7F4', 3
      setMember
      push r:0, '8U(wu', 4
      setMember
      push r:0, '}[cpB', 5
      setMember
      push r:0, '9xv]A', 6
      setMember
      push r:0, '{yQ=Q', 7
      setMember
      push r:0, '+,W', 8
      setMember
      push r:0, '2y+dV', 9
      setMember
      push r:0, '(tBee', 10
      setMember
      push r:0, '3)i[=', 11
      setMember
      push r:0, ' J3IC', 12
      setMember
      push r:0, '[6jRc', 13
      setMember
      push r:0, ')8Fyj', 14
      setMember
      push '2C0['
      function2 (r:3='}J') (r:1='this', r:2='super')
        push '44{N'
        getVariable
        push '8Z=cb'
        getMember
        push '97mPC', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, r:super, UNDEF
        callMethod
        pop
        push 0, r:this, '-iB='
        getMember
        push 'stop'
        callMethod
        pop
        push r:this, '{jXZ;(', FALSE
        setMember
        push r:this, '8J1xN', FALSE
        setMember
        push r:this, ']oH', 4
        setMember
        push r:this, '*]Q5}', 0
        setMember
        push r:this, '86{p(', 0, 'Array'
        new
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
        push 0, r:this, '9Lq;O'
        callMethod
        pop
        push 0, r:this, '8J2Jt'
        callMethod
        pop
        push r:this, '2VhU6'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label311
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '2VhU6'
        getMember
        push 10
        lessThan
        not
        branchIfTrue label311
        push r:this, '-iB='
        getMember
        push '_alpha', 10, r:this, '2VhU6'
        getMember
        multiply
        setMember
        push r:this, '2VhU6'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label311
        push 0, r:this, '9T54'
        callMethod
        pop
       label311:
        push r:this, ']oH'
        getMember
        push 15
        greaterThan
        dup
        not
        branchIfTrue label312
        pop
        push r:this, ')('
        getMember
        push '*r'
        getVariable
        push '[{'
        getMember
        push r:this, ']oH'
        getMember
        subtract
        greaterThan
       label312:
        not
        branchIfTrue label313
        push r:this, ']b', r:this, ']b'
        getMember
        push -1
        multiply
        setMember
        push r:this, ')(', '*r'
        getVariable
        push '[{'
        getMember
        push r:this, ']oH'
        getMember
        subtract
        setMember
       label313:
      end // of function 

      setMember
      push r:1, '9Lq;O'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label315
       label314:
        push r:2
        increment
        setRegister r:2
        pop
       label315:
        push r:2, r:this, '86{p('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label334
        push r:this, '86{p('
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label316
        push r:0, 1
        strictEquals
        branchIfTrue label318
        push r:0, 2
        strictEquals
        branchIfTrue label322
        push r:0, 3
        strictEquals
        branchIfTrue label324
        push r:0, 4
        strictEquals
        branchIfTrue label332
        branch label333
       label316:
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '-iB='
        getMember
        push '_rotation'
        getMember
        push r:this, '6b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, ')('
        getMember
        push '*r'
        getVariable
        push '[{'
        getMember
        greaterThan
        not
        branchIfTrue label317
        push NULL, 1, r:this, '4,U=3'
        callMethod
        pop
        push 0, r:this, '9T54'
        callMethod
        pop
       label317:
        branch label333
       label318:
        push 0
        setRegister r:4
        pop
        branch label320
       label319:
        push r:4
        increment
        setRegister r:4
        pop
       label320:
        push r:4, 2
        lessThan
        not
        branchIfTrue label321
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push '=DQ-,(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:5
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:6
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push r:this, ']oH'
        getMember
        multiply
        setRegister r:7
        pop
        push r:5, '((', r:this, '(('
        getMember
        push r:6, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:7
        multiply
        add
        setMember
        push r:5, ')(', r:this, ')('
        getMember
        push r:6, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:7
        multiply
        add
        setMember
        push r:5, '+{eA+', 0.92
        setMember
        push r:5, '[b', r:this, '[b'
        getMember
        push 0.5, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        multiply
        push 0.3
        multiply
        multiply
        setMember
        push r:5, ']b', r:this, ']b'
        getMember
        push 0.5, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        multiply
        push 0.3
        multiply
        multiply
        setMember
        push r:5, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:5, 'scale', 50, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 100
        multiply
        add
        setMember
        push r:5, '-iB='
        getMember
        push '_xscale', r:5, 'scale'
        getMember
        setMember
        push r:5, '-iB='
        getMember
        push '_yscale', r:5, 'scale'
        getMember
        setMember
        branch label319
       label321:
        branch label333
       label322:
        push r:this, '}O'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label323
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push '+Jv3J(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6QA'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:8
        pop
        push r:8, '_rotation', r:this, '}O'
        getMember
        push 1, r:this, ')153L'
        callMethod
        push 0.0174
        divide
        setMember
        push r:8, '_xscale', r:this, '}O'
        getMember
        push 1, r:this, '}1A{_'
        callMethod
        setMember
        push r:8, '_x', r:this, '(('
        getMember
        setMember
        push r:8, '_y', r:this, ')('
        getMember
        setMember
       label323:
        push r:this, '}O', '((', r:this, '(('
        getMember
        push ')(', r:this, ')('
        getMember
        push 2
        initObject
        setMember
        branch label333
       label324:
        push r:this, '}CL'
        getMember
        push '2Gr]U'
        getMember
        dup
        branchIfTrue label325
        pop
        push r:this, '}CL'
        getMember
        push NULL
        equals
       label325:
        not
        branchIfTrue label326
        push 0, r:this, '08i_Z'
        callMethod
        pop
       label326:
        push r:this, '}CL'
        getMember
        push NULL
        equals
        not
        branchIfTrue label327
        branch label333
       label327:
        push r:this, '}CL'
        getMember
        push 1, r:this, ')153L'
        callMethod
        push r:this, '('
        getMember
        subtract
        setRegister r:9
        pop
       label328:
        push r:9, 3.14
        greaterThan
        not
        branchIfTrue label329
        push r:9, 6.28
        subtract
        setRegister r:9
        pop
        branch label328
       label329:
        push r:9, -3.14
        lessThan
        not
        branchIfTrue label330
        push r:9, 6.28
        add
        setRegister r:9
        pop
        branch label329
       label330:
        push r:this, '(', r:this, '('
        getMember
        push r:this, '[a'
        getMember
        push r:9, r:this, '9-'
        getMember
        multiply
        push 0, r:this, '[a'
        getMember
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push 0, r:this, ',43dZ'
        callMethod
        pop
        push r:this, '(('
        getMember
        push '*r'
        getVariable
        push '[{'
        getMember
        push r:this, ']oH'
        getMember
        subtract
        greaterThan
        not
        branchIfTrue label331
        push r:this, '((', '*r'
        getVariable
        push '[{'
        getMember
        push r:this, ']oH'
        getMember
        subtract
        setMember
        push r:this, '[b', r:this, '[b'
        getMember
        push -1
        multiply
        setMember
       label331:
        branch label333
       label332:
        push r:this, ']xii)', r:this, ']xii)'
        getMember
        push 43, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 628
        modulo
        setMember
        push r:this, '(', r:this, '('
        getMember
        push r:this, ']xii)'
        getMember
        push 100
        divide
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push 0.2
        multiply
        add
        setMember
        push 0, r:this, ',43dZ'
        callMethod
        pop
        branch label333
       label333:
        branch label314
       label334:
      end // of function 

      setMember
      push r:1, ',43dZ'
      function2 () (r:1='this')
        push r:this, '[b', r:this, '('
        getMember
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:this, '}Yax5'
        getMember
        multiply
        setMember
        push r:this, ']b', r:this, '('
        getMember
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:this, '}Yax5'
        getMember
        multiply
        setMember
        push 0, r:this, '{BxJE('
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '08i_Z'
      function2 () (r:1='this')
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        setRegister r:2
        pop
        push r:2, 'length'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label335
        push r:this, '}CL', r:2, r:2, 'length'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        getMember
        setMember
        branch label336
       label335:
        push r:this, '}CL', NULL
        setMember
       label336:
      end // of function 

      setMember
      push r:1, '8J2Jt'
      function2 () (r:1='this')
        push r:this, '*g;o'
        getMember
        not
        branchIfTrue label343
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label338
       label337:
        push r:3
        increment
        setRegister r:3
        pop
       label338:
        push r:3, r:2, 'length'
        getMember
        lessThan
        not
        branchIfTrue label342
        push r:2, r:3
        getMember
        setRegister r:4
        pop
        push r:4, 1, r:this, '}1A{_'
        callMethod
        push r:this, ']oH'
        getMember
        push r:4, ']oH'
        getMember
        add
        lessThan
        not
        branchIfTrue label341
        push r:4, 1, r:this, '4,U=3'
        callMethod
        pop
        push r:4, '3='
        getMember
        setRegister r:5
        pop
        push r:this, 1, r:4, '565'
        callMethod
        pop
        push r:this, '8J1xN'
        getMember
        not
        not
        branchIfTrue label341
        push r:this, '{jXZ;('
        getMember
        dup
        not
        branchIfTrue label339
        pop
        push r:5, r:this, '*]Q5}'
        getMember
        lessThan
       label339:
        not
        branchIfTrue label340
        push r:this, '*]Q5}', r:this, '*]Q5}'
        getMember
        push r:5
        subtract
        setMember
        branch label341
       label340:
        push 0, r:this, '9T54'
        callMethod
        pop
        push UNDEF
        return
       label341:
        branch label337
       label342:
        branch label346
       label343:
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        setRegister r:6
        pop
        push r:6, 1, r:this, '}1A{_'
        callMethod
        setRegister r:7
        pop
        push r:6, '2{49;'
        getMember
        push 0
        getMember
        not
        branchIfTrue label345
        push r:this, ']oH'
        getMember
        push 30
        add
        setRegister r:8
        pop
        push r:7, r:8
        lessThan
        not
        branchIfTrue label344
        push r:8, r:7
        subtract
        setRegister r:9
        pop
        push r:6, 1, r:this, ')153L'
        callMethod
        setRegister r:10
        pop
        push r:this, '((', r:this, '(('
        getMember
        push r:10, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:9
        multiply
        subtract
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push r:10, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:9
        multiply
        subtract
        setMember
       label344:
        branch label346
       label345:
        push r:7, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push ']oH'
        getMember
        push r:this, ']oH'
        getMember
        add
        lessThan
        not
        branchIfTrue label346
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '565'
        callMethod
        pop
        push 0, r:this, '9T54'
        callMethod
        pop
       label346:
        push 30, r:this, ']oH'
        getMember
        add
        setRegister r:11
        pop
        push r:this, '(('
        getMember
        push 0, r:11
        subtract
        lessThan
        dup
        branchIfTrue label347
        pop
        push r:this, '(('
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        push r:11
        add
        greaterThan
       label347:
        dup
        branchIfTrue label348
        pop
        push r:this, ')('
        getMember
        push 0, r:11
        subtract
        lessThan
       label348:
        dup
        branchIfTrue label349
        pop
        push r:this, ')('
        getMember
        push '*r'
        getVariable
        push '[{'
        getMember
        push r:11
        add
        greaterThan
       label349:
        not
        branchIfTrue label350
        push 0, r:this, '9T54'
        callMethod
        pop
       label350:
      end // of function 

      setMember
      push r:1, '4,U=3'
      function2 (r:2='6 *') (r:1='this')
        push 0
        setRegister r:3
        pop
        branch label352
       label351:
        push r:3
        increment
        setRegister r:3
        pop
       label352:
        push r:3, r:this, '86{p('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label359
        push r:this, '86{p('
        getMember
        push r:3
        getMember
        setRegister r:4
        pop
        push r:4
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label353
        branch label358
       label353:
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:6
        pop
        branch label355
       label354:
        push r:6
        increment
        setRegister r:6
        pop
       label355:
        push r:6, r:5, 'length'
        getMember
        lessThan
        not
        branchIfTrue label357
        push r:5, r:6
        getMember
        setRegister r:7
        pop
        push r:7, r:'6 *'
        equals
        not
        not
        branchIfTrue label356
        push r:7, 1, r:this, '}1A{_'
        callMethod
        push r:7, ']oH'
        getMember
        push r:this, ']oH'
        getMember
        add
        push 36
        add
        lessThan
        not
        branchIfTrue label356
        push r:this, 1, r:7, '565'
        callMethod
        pop
       label356:
        branch label354
       label357:
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push '22pr)(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:8
        pop
        push r:8, '((', r:this, '(('
        getMember
        setMember
        push r:8, ')(', r:this, ')('
        getMember
        setMember
        push r:8, '[b', 0, '*r'
        getVariable
        push '0X xI('
        getMember
        subtract
        setMember
        push r:8, '+{eA+', NULL
        setMember
        push 0, r:8, '4u=dZ'
        callMethod
        pop
        branch label358
       label358:
        branch label351
       label359:
      end // of function 

      setMember
      push r:1, '3U*}=('
      function2 (r:2='7') (r:1='this')
        push r:'7'
        toString
        push 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '{BxJE('
      function2 () (r:1='this')
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '[b'
        getMember
        push r:this, ']b'
        getMember
        push 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        push 0.0174
        divide
        setMember
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '2u=W='
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push '-y6}J'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:this, '=HU11', 6
        setMember
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, ']oH', 11
        setMember
        push r:this, '3=', 4
        setMember
        push r:this, '+{eA+', 0.98
        setMember
        push r:this, '(Erk5', '*r'
        getVariable
        push ';XQu='
        getMember
        setMember
        push r:this, '-iB='
        getMember
        push '_xscale', r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        push -1
        multiply
        setMember
        push 0, r:this, ';cXei'
        callMethod
        pop
        push r:this, '2[', r:this, '2['
        getMember
        push '-y6}J'
        getVariable
        push '2QF=}'
        getMember
        add
        setMember
        push r:this, '((', '*r'
        getVariable
        push '=OA'
        getMember
        push r:this, ']oH'
        getMember
        add
        push 5
        add
        setMember
        push r:this, ')(', '*r'
        getVariable
        push '[{'
        getMember
        push r:this, ']oH'
        getMember
        subtract
        setMember
        push r:this, '88J*9(', 0
        setMember
        push r:this, ';B(7y', 1
        setMember
        push r:this, '4eyD,', 100
        setMember
        push r:this, '6BLr8', 3
        setMember
        push r:this, ';d3', 5
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '}P{I'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, ']Gu6y'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '2['
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:3
        pop
        push 2.5
        setRegister r:4
        pop
        push r:4, r:3, 0.1
        multiply
        push 0, r:4
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        setRegister r:5
        pop
        push r:this, '((', r:this, '(('
        getMember
        push r:5, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push 2.5, r:5, 0.3
        multiply
        add
        push 0, 2, 'Math'
        getVariable
        push 'max'
        callMethod
        setRegister r:6
        pop
        push r:this, '88J*9(', r:this, '88J*9('
        getMember
        push r:6, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 40
        modulo
        setMember
        push r:this, '88J*9('
        getMember
        int
        toString
        push 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '*8orO', r:this, '*8orO'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '*8orO'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label360
        push 0, r:this, ';cXei'
        callMethod
        pop
       label360:
      end // of function 

      setMember
      push r:1, ',cqp5'
      function2 () (r:1='this')
        push r:this, '6BLr8', r:this, '6BLr8'
        getMember
        decrement
        setMember
        push r:this, '6BLr8'
        getMember
        push 0
        equals
        not
        branchIfTrue label361
        push r:this, '4eyD,', 60
        setMember
        push r:this, '6BLr8', 3
        setMember
        branch label362
       label361:
        push r:this, '4eyD,', 4
        setMember
       label362:
        push 0, 2.5, 2, r:this, ';MBeK'
        callMethod
        setRegister r:2
        pop
        push 2, 1, r:2, '3U*}=('
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ';cXei'
      function2 () (r:1='this')
        push r:this, '*8orO', 20, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 80
        multiply
        add
        setMember
        push r:this, '2[', '-y6}J'
        getVariable
        push '2QF=}'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 2, '-y6}J'
        getVariable
        push '2QF=}'
        getMember
        multiply
        subtract
        multiply
        add
        setMember
      end // of function 

      setMember
      push r:0, '2QF=}', 30
      setMember
      push '5Xx_O'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:this, '=HU11', 2
        setMember
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, ']oH', 10
        setMember
        push r:this, '3=', 1
        setMember
        push r:this, '+{eA+', 0.98
        setMember
        push r:this, '}CL', '((', '*r'
        getVariable
        push '=OA'
        getMember
        push 40
        subtract
        push ')(', '5Xx_O'
        getVariable
        push '2QF=}'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '*r'
        getVariable
        push '[{'
        getMember
        push 2, '5Xx_O'
        getVariable
        push '2QF=}'
        getMember
        multiply
        subtract
        multiply
        add
        push 2
        initObject
        setMember
        push r:this, '(VKB', 0
        setMember
        push r:this, '*8orO', 250
        setMember
        push r:this, '((', '*r'
        getVariable
        push '=OA'
        getMember
        push 20
        add
        setMember
        push r:this, ')(', '5Xx_O'
        getVariable
        push '2QF=}'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '*r'
        getVariable
        push '[{'
        getMember
        push 2, '5Xx_O'
        getVariable
        push '2QF=}'
        getMember
        multiply
        subtract
        multiply
        add
        setMember
        push r:this, '(Erk5', '*r'
        getVariable
        push '=EQy6('
        getMember
        setMember
        push r:this, ';d3', 3
        setMember
        push r:this, 'run', 3
        setMember
        push r:this, '*8orO', 150
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '}P{I'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, ']Gu6y'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '(VKB', r:this, '(VKB'
        getMember
        push 13, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 628
        modulo
        setMember
        push '((', r:this, '}CL'
        getMember
        push '(('
        getMember
        push r:this, '(VKB'
        getMember
        push 100
        divide
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push '5Xx_O'
        getVariable
        push '2QF=}'
        getMember
        multiply
        add
        push ')(', r:this, '}CL'
        getMember
        push ')('
        getMember
        push r:this, '(VKB'
        getMember
        push 100
        divide
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push '5Xx_O'
        getVariable
        push '2QF=}'
        getMember
        multiply
        add
        push 2
        initObject
        setRegister r:3
        pop
        push 0.2, 0.2, r:3, 3, r:this, ';zS4(('
        callMethod
        pop
        push r:this, '*8orO', r:this, '*8orO'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '*8orO'
        getMember
        push 0
        greaterThan
        not
        not
        branchIfTrue label364
        push r:this, 'run'
        getMember
        push r:this, 'run', r:this, 'run'
        getMember
        decrement
        setMember
        push 0
        greaterThan
        not
        branchIfTrue label363
        push r:this, '*8orO', 50, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 150
        multiply
        add
        setMember
        push r:this, '}CL', '((', '5Xx_O'
        getVariable
        push '2QF=}'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 2, '5Xx_O'
        getVariable
        push '2QF=}'
        getMember
        multiply
        subtract
        multiply
        add
        push ')(', '5Xx_O'
        getVariable
        push '2QF=}'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '*r'
        getVariable
        push '[{'
        getMember
        push 2, '5Xx_O'
        getVariable
        push '2QF=}'
        getMember
        multiply
        subtract
        multiply
        add
        push 2
        initObject
        setMember
        branch label364
       label363:
        push r:this, '*8orO', 1000
        setMember
        push r:this, '}CL', '((', '*r'
        getVariable
        push '=OA'
        getMember
        push 20
        add
        push ')(', r:this, ')('
        getMember
        push 2
        initObject
        setMember
       label364:
        push r:this, 'run'
        getMember
        push 0
        equals
        dup
        not
        branchIfTrue label365
        pop
        push r:this, '(('
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 20
        add
        greaterThan
       label365:
        not
        branchIfTrue label366
        push 0, r:this, '9T54'
        callMethod
        pop
       label366:
        push 0, r:this, '{c}4W'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ';-[;H'
      function2 () (r:1='this', r:2='super')
        push '44{N'
        getVariable
        push '(8LH1'
        getMember
        push ',XnXA', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, ' p3z='
        new
        setRegister r:3
        pop
        push r:3, '((', r:this, '(('
        getMember
        setMember
        push r:3, ')(', r:this, ')('
        getMember
        setMember
        push r:this, 1, '+[3N='
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '2QF=}', 20
      setMember
      push '44{N'
      function2 (r:2='}J') (r:1='this')
        push '*r'
        getVariable
        push '+-(0', r:this
        setMember
        push r:this, '32', r:'}J', 1, '+7U K'
        new
        setMember
        push r:this, '-iB=', r:'}J'
        setMember
        push r:this, '7Qe;6', 0, 'Array'
        new
        setMember
        push r:this, '53RYu', 0, 'Array'
        new
        setMember
        push r:this, '0q3(Q', 0, 'Array'
        new
        setMember
        push 0, r:this, '4hu1]'
        callMethod
        pop
        push r:this, '4,01', '44{N'
        getVariable
        push '-hCnb'
        getMember
        push 1, r:this, '6QA'
        getMember
        push '18wU*'
        callMethod
        push 1, '=3+P'
        new
        setMember
        push r:this, '4,01'
        getMember
        push '((', 150
        setMember
        push r:this, '4,01'
        getMember
        push ')(', 150
        setMember
        push r:this, 'draw', '44{N'
        getVariable
        push ',N)rb'
        getMember
        push 1, r:this, '6QA'
        getMember
        push '18wU*'
        callMethod
        setMember
        push r:this, '69-', 0, 1
        initArray
        setMember
        push r:this, ',b]2N', 0, 1
        initArray
        setMember
        push r:this, '62GLS', 0, 1
        initArray
        setMember
        push r:this, '-_X}5', '$k', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12
        initArray
        push '$b', 0
        initArray
        push '$d', NULL, 3
        initObject
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '9t1r1'
      function2 () (r:1='this')
        push 'onKeyDown', ']668C(', r:this, 2, '3Wt'
        getVariable
        push '6{VYR'
        callMethod
        push 'onKeyUp', '=(D=5', r:this, 2, '3Wt'
        getVariable
        push '6{VYR'
        callMethod
        push 2
        initObject
        setRegister r:2
        pop
        push r:2, 1, 'Key'
        getVariable
        push 'addListener'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ']668C('
      function2 () (r:1='this')
        push r:this, '=11Rh'
        getMember
        not
        branchIfTrue label372
        push 0, 'Key'
        getVariable
        push 'getCode'
        callMethod
        setRegister r:2
        pop
        push r:2, 96
        lessThan
        not
        dup
        not
        branchIfTrue label367
        pop
        push r:2, 107
        lessThan
       label367:
        not
        branchIfTrue label368
        push r:2, 96
        subtract
        push 1, r:this, '4aU8Z'
        callMethod
        pop
       label368:
        push r:2, 49
        lessThan
        not
        dup
        not
        branchIfTrue label369
        pop
        push r:2, 52
        lessThan
       label369:
        not
        branchIfTrue label370
        push r:this, '4,01'
        getMember
        push '[2(j8', r:2, 49
        subtract
        push 1
        initArray
        setMember
       label370:
        push r:2, 52
        lessThan
        not
        dup
        not
        branchIfTrue label371
        pop
        push r:2, 55
        lessThan
       label371:
        not
        branchIfTrue label372
        push r:2, 52
        subtract
        push 1, r:this, '4,01'
        getMember
        push '}gGHb'
        callMethod
        pop
       label372:
        push r:this, '=11Rh', FALSE
        setMember
      end // of function 

      setMember
      push r:1, '=(D=5'
      function2 () (r:1='this')
        push r:this, '=11Rh', TRUE
        setMember
      end // of function 

      setMember
      push r:1, '4hu1]'
      function2 () (r:1='this')
        push r:this, '2]g+c', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:2
        pop
        branch label374
       label373:
        push r:2
        increment
        setRegister r:2
        pop
       label374:
        push r:2, 12
        lessThan
        not
        branchIfTrue label379
        push '44{N'
        getVariable
        push '{f5fb'
        getMember
        push '3,sMC', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:3
        pop
        push r:2, 1
        add
        toString
        push 1, r:3, 'gotoAndStop'
        callMethod
        pop
        push r:3, '_height'
        getMember
        push '*r'
        getVariable
        push '*OA'
        getMember
        subtract
        push '*r'
        getVariable
        push '95('
        getMember
        divide
        setRegister r:4
        pop
        push r:4, 1
        greaterThan
        dup
        not
        branchIfTrue label375
        pop
        push r:this, '(KA'
        getMember
        push NULL
        equals
       label375:
        not
        branchIfTrue label376
        push r:this, '(KA', '44{N'
        getVariable
        push '{f5fb'
        getMember
        push 1, r:this, '32'
        getMember
        push '18wU*'
        callMethod
        setMember
        push r:this, '6QA', r:this, '(KA'
        getMember
        push 1, '+7U K'
        new
        setMember
        push '}J', r:this, '(KA'
        getMember
        push '*', 1, '*J[OB', FALSE, 3
        initObject
        push 1, r:this, '2]g+c'
        getMember
        push 'push'
        callMethod
        pop
        push r:3, 1, r:this, '32'
        getMember
        push '08M8'
        callMethod
        pop
       label376:
        push r:2, 0
        greaterThan
        not
        branchIfTrue label377
        push r:3, '_x', -1500
        setMember
       label377:
        push '}J', r:3, '*', r:4, '*J[OB', TRUE, 3
        initObject
        push 1, r:this, '2]g+c'
        getMember
        push 'push'
        callMethod
        pop
        push r:3, '_totalframes'
        getMember
        push 1
        subtract
        push r:2
        equals
        not
        branchIfTrue label378
        branch label379
       label378:
        branch label373
       label379:
      end // of function 

      setMember
      push r:1, '0D 6'
      function2 () (r:1='this')
        push 0, r:this, 'draw'
        getMember
        push 'clear'
        callMethod
        pop
        push 0, r:this, '+aDob'
        callMethod
        pop
        push 0, r:this, '7Qe;6'
        getMember
        push 'duplicate'
        callMethod
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label381
       label380:
        push r:3
        increment
        setRegister r:3
        pop
       label381:
        push r:3, r:2, 'length'
        getMember
        lessThan
        not
        branchIfTrue label382
        push 0, r:2, r:3
        getMember
        push '87vE7('
        callMethod
        pop
        branch label380
       label382:
        push r:this, '69-', r:this, '69-'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 6
        multiply
        add
        push 1
        initArray
        setMember
        push 0.65, r:this, '69-'
        getMember
        push 0
        getMember
        push 0.005
        multiply
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:4
        pop
       label383:
        push r:this, '62GLS'
        getMember
        push 0
        getMember
        push r:4
        lessThan
        not
        branchIfTrue label384
        push 0, r:this, '8w=P3('
        callMethod
        pop
        branch label383
       label384:
        push 0, r:this, '4,01'
        getMember
        push '=g]u6'
        getMember
        push '36}9L('
        callMethod
        not
        branchIfTrue label385
        push 0, ';ndCG'
        getVariable
        push '0ze*c'
        callMethod
        pop
       label385:
      end // of function 

      setMember
      push r:1, '+aDob'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label387
       label386:
        push r:2
        increment
        setRegister r:2
        pop
       label387:
        push r:2, r:this, '2]g+c'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label389
        push r:this, '2]g+c'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push 30
        setRegister r:4
        pop
        push 0, r:this, '4,01'
        getMember
        push ']oH'
        getMember
        push r:this, '4,01'
        getMember
        push ')('
        getMember
        add
        push '*r'
        getVariable
        push '[{'
        getMember
        push 2, r:this, '4,01'
        getMember
        push ']oH'
        getMember
        multiply
        subtract
        divide
        subtract
        push '*r'
        getVariable
        push '95('
        getMember
        push r:3, '*'
        getMember
        multiply
        multiply
        setRegister r:5
        pop
        push 0, r:5, 0, '*r'
        getVariable
        push '95('
        getMember
        subtract
        push r:3, '*'
        getMember
        multiply
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:6
        pop
        push r:3, '*J[OB'
        getMember
        not
        branchIfTrue label388
        push r:3, '}J'
        getMember
        push '_x', r:3, '}J'
        getMember
        push '_x'
        getMember
        push r:3, '*'
        getMember
        push '*r'
        getVariable
        push '0X xI('
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        setMember
        push r:3, '}J'
        getMember
        push '_x'
        getMember
        push 0, '*r'
        getVariable
        push '=OA'
        getMember
        subtract
        push 2
        multiply
        lessThan
        not
        branchIfTrue label388
        push r:3, '}J'
        getMember
        push '_x', r:3, '}J'
        getMember
        push '_x'
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 2
        multiply
        add
        setMember
        push 0, r:3, '}J'
        getMember
        push '}-B2'
        callMethod
        pop
       label388:
        push r:3, '}J'
        getMember
        push '_y', r:6
        setMember
        branch label386
       label389:
      end // of function 

      setMember
      push r:1, '8w=P3('
      function2 () (r:1='this')
        push 16, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        dup
        branchIfTrue label390
        pop
        push r:this, '69-'
        getMember
        push 0
        getMember
        push '44{N'
        getVariable
        push '+M=v3'
        getMember
        push 0
        getMember
        greaterThan
       label390:
        not
        branchIfTrue label391
        push 7, 1, r:this, '4aU8Z'
        callMethod
        pop
        push UNDEF
        return
       label391:
        push r:this, '69-'
        getMember
        push 0
        getMember
        push 24000
        greaterThan
        dup
        not
        branchIfTrue label392
        pop
        push 3, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
       label392:
        not
        branchIfTrue label393
        push 9, 1, r:this, '4aU8Z'
        callMethod
        pop
        push UNDEF
        return
       label393:
        push r:this, '69-'
        getMember
        push 0
        getMember
        push 16000
        greaterThan
        dup
        not
        branchIfTrue label394
        pop
        push 5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
       label394:
        not
        branchIfTrue label395
        push 6, 1, r:this, '4aU8Z'
        callMethod
        pop
        push UNDEF
        return
       label395:
        push r:this, '69-'
        getMember
        push 0
        getMember
        push 12000
        greaterThan
        dup
        not
        branchIfTrue label396
        pop
        push 7, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
       label396:
        not
        branchIfTrue label397
        push 5, 1, r:this, '4aU8Z'
        callMethod
        pop
        push UNDEF
        return
       label397:
        push r:this, '69-'
        getMember
        push 0
        getMember
        push 10000
        greaterThan
        dup
        not
        branchIfTrue label398
        pop
        push 10, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
       label398:
        not
        branchIfTrue label399
        push 4, 1, r:this, '4aU8Z'
        callMethod
        pop
        push UNDEF
        return
       label399:
        push r:this, '69-'
        getMember
        push 0
        getMember
        push 10000
        greaterThan
        dup
        not
        branchIfTrue label400
        pop
        push 5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
       label400:
        not
        branchIfTrue label401
        push 8, 1, r:this, '4aU8Z'
        callMethod
        pop
        push UNDEF
        return
       label401:
        push r:this, '69-'
        getMember
        push 0
        getMember
        push 8000
        greaterThan
        dup
        not
        branchIfTrue label402
        pop
        push 4, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
       label402:
        not
        branchIfTrue label403
        push 3, 1, r:this, '4aU8Z'
        callMethod
        pop
        push UNDEF
        return
       label403:
        push r:this, '69-'
        getMember
        push 0
        getMember
        push 6000
        greaterThan
        dup
        not
        branchIfTrue label404
        pop
        push 4, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
       label404:
        not
        branchIfTrue label405
        push 2, 1, r:this, '4aU8Z'
        callMethod
        pop
        push UNDEF
        return
       label405:
        push r:this, '69-'
        getMember
        push 0
        getMember
        push 4000
        greaterThan
        dup
        not
        branchIfTrue label406
        pop
        push 4, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
       label406:
        not
        branchIfTrue label407
        push 1, 1, r:this, '4aU8Z'
        callMethod
        pop
        push UNDEF
        return
       label407:
        push 0, 1, r:this, '4aU8Z'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '4aU8Z'
      function2 (r:2='*B') (r:1='this')
        push NULL
        setRegister r:3
        pop
        push r:'*B'
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label408
        push r:0, 1
        strictEquals
        branchIfTrue label412
        push r:0, 2
        strictEquals
        branchIfTrue label417
        push r:0, 3
        strictEquals
        branchIfTrue label421
        push r:0, 4
        strictEquals
        branchIfTrue label422
        push r:0, 5
        strictEquals
        branchIfTrue label428
        push r:0, 6
        strictEquals
        branchIfTrue label429
        push r:0, 7
        strictEquals
        branchIfTrue label430
        push r:0, 8
        strictEquals
        branchIfTrue label432
        push r:0, 9
        strictEquals
        branchIfTrue label433
        branch label434
       label408:
        push NULL, 1, '2]ya'
        new
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        branch label410
       label409:
        push r:4
        increment
        setRegister r:4
        pop
       label410:
        push r:4, 8
        lessThan
        not
        branchIfTrue label411
        push '44{N'
        getVariable
        push '9xuZZ'
        getMember
        push ')bXj1', 2, r:this, '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, '7B HB'
        new
        setRegister r:5
        pop
        push r:5, 1, r:3, ']r5gM'
        callMethod
        pop
        push r:4, 1
        add
        toString
        push 1, r:5, '-iB='
        getMember
        push '0tJ'
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        branch label409
       label411:
        branch label434
       label412:
        push NULL, 1, '2]ya'
        new
        setRegister r:3
        pop
        push 0
        setRegister r:6
        pop
        branch label414
       label413:
        push r:6
        increment
        setRegister r:6
        pop
       label414:
        push r:6, 8
        lessThan
        not
        branchIfTrue label416
        push '44{N'
        getVariable
        push '9xuZZ'
        getMember
        push ')bXj1', 2, r:this, '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, '7B HB'
        new
        setRegister r:7
        pop
        push r:6, 0
        equals
        not
        branchIfTrue label415
        push 0, r:7, '{eOqm'
        callMethod
        pop
       label415:
        push r:7, 1, r:3, ']r5gM'
        callMethod
        pop
        branch label413
       label416:
        branch label434
       label417:
        push 30
        setRegister r:8
        pop
        push '((', 0, ')(', r:8, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '*r'
        getVariable
        push '*OA'
        getMember
        push 2, r:8
        multiply
        subtract
        multiply
        add
        push 2
        initObject
        setRegister r:9
        pop
        push 0
        setRegister r:10
        pop
        branch label419
       label418:
        push r:10
        increment
        setRegister r:10
        pop
       label419:
        push r:10, 8
        lessThan
        not
        branchIfTrue label420
        push '44{N'
        getVariable
        push '9xuZZ'
        getMember
        push '3J[ms', 2, r:this, '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, '7B HB'
        new
        setRegister r:11
        pop
        push r:11, '}CL', r:9
        setMember
        push r:11, ']xii)', r:10, 50
        multiply
        setMember
        push r:11, '((', '*r'
        getVariable
        push '=OA'
        getMember
        push 40
        add
        push r:10, r:11, ']oH'
        getMember
        push 20
        add
        multiply
        add
        setMember
        push r:11, '[b', -1.5
        setMember
        push -1, 1, r:11, '8D5}=('
        callMethod
        pop
        push 2, 1, r:11, '86{p('
        getMember
        push 'push'
        callMethod
        pop
        push 0, r:11, '[zKH0'
        callMethod
        pop
        branch label418
       label420:
        branch label434
       label421:
        push '44{N'
        getVariable
        push '9xuZZ'
        getMember
        push '1 ;al', 2, r:this, '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, '-y6}J'
        new
        setRegister r:12
        pop
        branch label434
       label422:
        push NULL
        setRegister r:13
        pop
        push 0
        setRegister r:14
        pop
        branch label424
       label423:
        push r:14
        increment
        setRegister r:14
        pop
       label424:
        push r:14, 12
        lessThan
        not
        branchIfTrue label427
        push '44{N'
        getVariable
        push '9xuZZ'
        getMember
        push '{XBN+', 2, r:this, '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, '+Sk9H'
        new
        setRegister r:15
        pop
        push r:14, 0
        equals
        not
        branchIfTrue label425
        push r:15, '((', '*r'
        getVariable
        push '=OA'
        getMember
        push 20
        add
        setMember
        push r:15, ')(', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '*r'
        getVariable
        push '[{'
        getMember
        multiply
        setMember
        push 0, r:15, '{eOqm'
        callMethod
        pop
        push r:15
        setRegister r:13
        pop
        branch label426
       label425:
        push r:15, '6PUy4', r:13
        setMember
        push r:15, '((', r:13, '(('
        getMember
        setMember
        push r:15, ')(', r:13, ')('
        getMember
        setMember
        push r:15, 1, r:13, '-zpt4'
        getMember
        push 'push'
        callMethod
        pop
       label426:
        branch label423
       label427:
        push r:13, '-iB='
        getMember
        push 1, r:this, '6QA'
        getMember
        push '08M8'
        callMethod
        pop
        branch label434
       label428:
        push '44{N'
        getVariable
        push '9xuZZ'
        getMember
        push '1V DC', 2, r:this, '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, '(_EN'
        new
        setRegister r:16
        pop
        branch label434
       label429:
        push '44{N'
        getVariable
        push '9xuZZ'
        getMember
        push '(r9WW', 2, r:this, '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, '6}*SN'
        new
        setRegister r:17
        pop
        branch label434
       label430:
        push r:this, '69-'
        getMember
        push 0
        getMember
        push '44{N'
        getVariable
        push '+M=v3'
        getMember
        push 0
        getMember
        greaterThan
        not
        branchIfTrue label431
        push 0, '44{N'
        getVariable
        push '+M=v3'
        getMember
        push 'shift'
        callMethod
        pop
       label431:
        push '44{N'
        getVariable
        push '9xuZZ'
        getMember
        push ')DGLV', 2, r:this, '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, '5Xx_O'
        new
        setRegister r:18
        pop
        branch label434
       label432:
        push '44{N'
        getVariable
        push '9xuZZ'
        getMember
        push '**5s3', 2, r:this, '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, ';tNu1('
        new
        setRegister r:19
        pop
        branch label434
       label433:
        push '44{N'
        getVariable
        push '9xuZZ'
        getMember
        push '(3q]7(', 2, r:this, '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, '},nzl'
        new
        setRegister r:20
        pop
        branch label434
       label434:
      end // of function 

      setMember
      push r:1, ')jQVv'
      function2 (r:2='((', r:3=')(', r:4='(Erk5') (r:1='this')
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push '=ZXmL', 2, r:this, '6QA'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:5
        pop
        push r:5, '_x', r:'(('
        setMember
        push r:5, '_y', r:')('
        setMember
        push r:5, '+Da3+'
        getMember
        push '+Da3+'
        getMember
        push 'text', r:'(Erk5'
        setMember
      end // of function 

      setMember
      push r:0, '[V{(6', 3
      setMember
      push r:0, '{f5fb', 1
      setMember
      push r:0, '5;OW;', 10
      setMember
      push r:0, '8Z=cb', 7
      setMember
      push r:0, '-hCnb', 6
      setMember
      push r:0, ',N)rb', 5
      setMember
      push r:0, '9xuZZ', 4
      setMember
      push r:0, '(8LH1', 3
      setMember
      push r:0, '-4Nbg', 2
      setMember
      push r:0, '+M=v3', 12000, 6000, 1000, 3
      initArray
      setMember
      push ';tNu1('
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:this, '=HU11', 5
        setMember
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, ']oH', 14
        setMember
        push r:this, '3=', 10
        setMember
        push r:this, '+{eA+', 0.97
        setMember
        push r:this, '(Erk5', '*r'
        getVariable
        push '6{zdT'
        getMember
        setMember
        push r:this, ';d3', 7
        setMember
        push r:this, ']xii)', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 628
        multiply
        setMember
        push r:this, '*8orO', 400
        setMember
        push r:this, '69-', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 50
        multiply
        setMember
        push r:this, ';)bt5', 0
        setMember
        push r:this, '((', '*r'
        getVariable
        push '=OA'
        getMember
        push r:this, ']oH'
        getMember
        add
        push 5
        add
        setMember
        push r:this, ')(', ';tNu1('
        getVariable
        push '2QF=}'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '*r'
        getVariable
        push '[{'
        getMember
        push ';tNu1('
        getVariable
        push '2QF=}'
        getMember
        push 2
        multiply
        add
        multiply
        add
        setMember
        push 0, r:this, ';cXei'
        callMethod
        pop
        push '*r'
        getVariable
        push '4I()', '*r'
        getVariable
        push '4I()'
        getMember
        increment
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '}P{I'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, ']Gu6y'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '69-', r:this, '69-'
        getMember
        push 3, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '*8orO', r:this, '*8orO'
        getMember
        push 1, r:this, '69-'
        getMember
        push 0.005
        multiply
        add
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        setMember
        push r:this, '*8orO'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label439
        push r:this, '*8orO', 500
        setMember
        push 0, r:this, ';cXei'
        callMethod
        pop
        push 4, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        dup
        not
        branchIfTrue label435
        pop
        push '*r'
        getVariable
        push '4I()'
        getMember
        push 16
        lessThan
       label435:
        not
        branchIfTrue label439
        push '44{N'
        getVariable
        push '9xuZZ'
        getMember
        push '**5s3', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, ';tNu1('
        new
        setRegister r:3
        pop
        push r:3, '((', r:this, '(('
        getMember
        setMember
        push r:3, ')(', r:this, ')('
        getMember
        setMember
        push r:3, '69-', r:this, '69-'
        getMember
        setMember
        push r:3, ';)bt5', 1
        setMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '62GLS', '*r'
        getVariable
        push '+-(0'
        getMember
        push '62GLS'
        getMember
        push 0
        getMember
        push r:3, '=HU11'
        getMember
        subtract
        push 1
        initArray
        setMember
        push r:3, '=HU11', 0
        setMember
        push 0
        setRegister r:4
        pop
        branch label437
       label436:
        push r:4
        increment
        setRegister r:4
        pop
       label437:
        push r:4, 8
        lessThan
        not
        branchIfTrue label438
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push ';7wz3(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:5
        pop
        push 6.28, r:4
        multiply
        push 8
        divide
        setRegister r:6
        pop
        push r:6, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:7
        pop
        push r:6, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:8
        pop
        push 0.3, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2.5
        multiply
        add
        setRegister r:9
        pop
        push r:5, '((', r:this, '(('
        getMember
        push r:7, r:this, ']oH'
        getMember
        multiply
        add
        setMember
        push r:5, ')(', r:this, ')('
        getMember
        push r:8, r:this, ']oH'
        getMember
        multiply
        add
        setMember
        push r:5, '[b', r:7, r:9
        multiply
        setMember
        push r:5, ']b', r:8, r:9
        multiply
        setMember
        push r:5, 'scale', 100, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 100
        multiply
        add
        setMember
        push r:5, '-iB='
        getMember
        push '_xscale', r:5, 'scale'
        getMember
        setMember
        push r:5, '-iB='
        getMember
        push '_yscale', r:5, 'scale'
        getMember
        setMember
        push r:5, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:5, '849kV', 0
        setMember
        branch label436
       label438:
        push 0, r:3, '*03T('
        callMethod
        pop
        push 0, r:this, '*03T('
        callMethod
        pop
       label439:
        push r:this, '-Cg1Q'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label440
        push r:this, '-Cg1Q', r:this, '-Cg1Q'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.96, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        setMember
        push r:this, '+bovF', r:this, '+bovF'
        getMember
        push r:this, '-Cg1Q'
        getMember
        push 2
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 628
        modulo
        setMember
        push r:this, '-Cg1Q'
        getMember
        push 0.5
        multiply
        setRegister r:10
        pop
        push r:this, '-iB='
        getMember
        push '_xscale', 100, r:this, '+bovF'
        getMember
        push 100
        divide
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:10
        multiply
        add
        setMember
        push r:this, '-iB='
        getMember
        push '_yscale', 100, r:this, '+bovF'
        getMember
        push 100
        divide
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:10
        multiply
        add
        setMember
        push r:this, '-Cg1Q'
        getMember
        push 1
        lessThan
        not
        branchIfTrue label440
        push r:this, '-Cg1Q', NULL
        setMember
       label440:
        push 0, r:this, '{c}4W'
        callMethod
        pop
        push 0, r:this, '}SC6'
        callMethod
        pop
        push 0, r:this, '0b]ff'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '*03T('
      function2 () (r:1='this')
        push r:this, '-Cg1Q', 66
        setMember
        push r:this, '+bovF', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 628
        multiply
        setMember
      end // of function 

      setMember
      push r:1, '}SC6'
      function2 () (r:1='this')
        push r:this, ']xii)', r:this, ']xii)'
        getMember
        push 17, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 628
        modulo
        setMember
        push 150, r:this, '69-'
        getMember
        push 0.3
        multiply
        subtract
        push 10, 2, 'Math'
        getVariable
        push 'max'
        callMethod
        setRegister r:2
        pop
        push '((', r:this, '}CL'
        getMember
        push '(('
        getMember
        push r:this, ']xii)'
        getMember
        push 100
        divide
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:2
        multiply
        add
        push ')(', r:this, '}CL'
        getMember
        push ')('
        getMember
        push r:this, ']xii)'
        getMember
        push 100
        divide
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:2
        multiply
        add
        push 2
        initObject
        setRegister r:3
        pop
        push r:this, ';)bt5', 1, r:this, ';)bt5'
        getMember
        push 0.01, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setMember
        push 0.5, 0.1, r:this, '69-'
        getMember
        push 0.0001
        multiply
        add
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        push r:this, ';)bt5'
        getMember
        multiply
        setRegister r:4
        pop
        push r:4, 0.2, r:3, 3, r:this, ';zS4(('
        callMethod
        pop
        push 0.3
        setRegister r:5
        pop
        push r:this, '(('
        getMember
        push r:this, ']oH'
        getMember
        push ';tNu1('
        getVariable
        push '2QF=}'
        getMember
        add
        lessThan
        not
        branchIfTrue label441
        push r:this, '[b', r:this, '[b'
        getMember
        push r:5, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label441:
        push r:this, '(('
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        push r:this, ']oH'
        getMember
        push ';tNu1('
        getVariable
        push '2QF=}'
        getMember
        add
        subtract
        greaterThan
        dup
        not
        branchIfTrue label442
        pop
        push r:this, ';)bt5'
        getMember
        push 1
        lessThan
        not
       label442:
        not
        branchIfTrue label443
        push r:this, '[b', r:this, '[b'
        getMember
        push r:5, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        setMember
       label443:
        push r:this, ')('
        getMember
        push r:this, ']oH'
        getMember
        push ';tNu1('
        getVariable
        push '2QF=}'
        getMember
        add
        lessThan
        not
        branchIfTrue label444
        push r:this, ']b', r:this, ']b'
        getMember
        push r:5, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label444:
        push r:this, ')('
        getMember
        push '*r'
        getVariable
        push '[{'
        getMember
        push r:this, ']oH'
        getMember
        push ';tNu1('
        getVariable
        push '2QF=}'
        getMember
        add
        subtract
        greaterThan
        not
        branchIfTrue label445
        push r:this, ']b', r:this, ']b'
        getMember
        push r:5, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        setMember
       label445:
      end // of function 

      setMember
      push r:1, '565'
      function2 (r:3=')93A') (r:1='this', r:2='super')
        push r:')93A', r:this, 2, '0cM,'
        getVariable
        push 'call'
        callMethod
        pop
        push r:')93A', '[b'
        getMember
        push r:')93A', ']b'
        getMember
        push 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        setRegister r:4
        pop
        push r:this, '[b', r:this, '[b'
        getMember
        push r:4, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:')93A', '*]Q5}'
        getMember
        multiply
        push 4
        multiply
        add
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:4, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:')93A', '*]Q5}'
        getMember
        multiply
        push 4
        multiply
        add
        setMember
      end // of function 

      setMember
      push r:1, ';cXei'
      function2 () (r:1='this')
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 200, r:this, '69-'
        getMember
        push 0.3
        multiply
        subtract
        push 0, 2, 'Math'
        getVariable
        push 'max'
        callMethod
        multiply
        setRegister r:2
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:3
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        setRegister r:4
        pop
        push r:this, '}CL', '((', '*r'
        getVariable
        push '=OA'
        getMember
        push ';tNu1('
        getVariable
        push '2QF=}'
        getMember
        subtract
        push r:4, '(('
        getMember
        push r:3, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:2
        multiply
        add
        push 50, ';tNu1('
        getVariable
        push '2QF=}'
        getMember
        add
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        push ')(', '*r'
        getVariable
        push '[{'
        getMember
        push ';tNu1('
        getVariable
        push '2QF=}'
        getMember
        subtract
        push r:4, ')('
        getMember
        push r:3, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:2
        multiply
        add
        push ';tNu1('
        getVariable
        push '2QF=}'
        getMember
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        push 2
        initObject
        setMember
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push '*r'
        getVariable
        push '4I()', '*r'
        getVariable
        push '4I()'
        getMember
        decrement
        setMember
        push r:this, 1, '3FA[*'
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push '3FA[*', '}P{I'
      getVariable
      push 'prototype'
      getMember
      push '9T54'
      getMember
      setVariable
      push '0cM,', '}P{I'
      getVariable
      push 'prototype'
      getMember
      push '565'
      getMember
      setVariable
      push r:0, '2QF=}', 10
      setMember
      push '(_EN'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:this, '=HU11', 16
        setMember
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, ']oH', 18
        setMember
        push r:this, '3=', 30
        setMember
        push r:this, '(Erk5', '*r'
        getVariable
        push '83GJ['
        getMember
        setMember
        push r:this, '((', '*r'
        getVariable
        push '=OA'
        getMember
        push r:this, ']oH'
        getMember
        add
        push 5
        add
        setMember
        push 0, r:this, '-43zH('
        callMethod
        pop
        push r:this, ';d3', 6
        setMember
        push r:this, '-5yrF(', 120
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '}P{I'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, ']Gu6y'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label446
        push r:0, 1
        strictEquals
        branchIfTrue label449
        branch label451
       label446:
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 0.5
        multiply
        setRegister r:3
        pop
        push 0, r:this, '(('
        getMember
        subtract
        setRegister r:4
        pop
        push r:this, '(('
        getMember
        push r:3
        lessThan
        dup
        not
        branchIfTrue label447
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push r:this, '(('
        getMember
        push r:3
        divide
        multiply
        push 0.1
        lessThan
       label447:
        not
        branchIfTrue label448
        push r:this, '=kIA', 1
        setMember
        push ')izmI(', 1, r:this, '-iB='
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push 0.3
        setRegister r:5
        pop
        push 0, r:5, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 1.57, 2, r:5
        multiply
        subtract
        multiply
        add
        subtract
        setRegister r:6
        pop
        push 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 8
        multiply
        add
        setRegister r:7
        pop
        push r:this, '[b', r:6, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:7
        multiply
        setMember
        push r:this, ']b', r:6, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:7
        multiply
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 5
        multiply
        subtract
        setMember
        push r:this, '+{eA+', 0.98
        setMember
        push r:this, '(KpGn', 0.7
        setMember
       label448:
        branch label451
       label449:
        push r:this, ')('
        getMember
        push '*r'
        getVariable
        push '[{'
        getMember
        greaterThan
        not
        branchIfTrue label450
        push 0, r:this, '-43zH('
        callMethod
        pop
       label450:
        branch label451
       label451:
        push r:this, '-5yrF(', r:this, '-5yrF('
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '-5yrF('
        getMember
        push 0
        lessThan
        dup
        not
        branchIfTrue label452
        pop
        push r:this, ')('
        getMember
        push 230
        lessThan
       label452:
        not
        branchIfTrue label456
        push 64
        setRegister r:8
        pop
        push 8
        setRegister r:9
        pop
        push 0
        setRegister r:10
        pop
        branch label454
       label453:
        push r:10
        increment
        setRegister r:10
        pop
       label454:
        push r:10, r:8
        lessThan
        not
        branchIfTrue label455
        push 0, r:this, '8A1T3('
        callMethod
        setRegister r:11
        pop
        push r:10, r:8
        divide
        push 6.28
        multiply
        setRegister r:12
        pop
        push r:12, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:13
        pop
        push r:12, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:14
        pop
        push 3, r:10, 3
        modulo
        push 1.5
        multiply
        add
        setRegister r:15
        pop
        push r:11, '((', r:11, '(('
        getMember
        push r:13, r:9
        multiply
        push r:15
        multiply
        add
        setMember
        push r:11, ')(', r:11, ')('
        getMember
        push r:14, r:9
        multiply
        push r:15
        multiply
        add
        setMember
        push r:11, '[b', r:13, r:15
        multiply
        setMember
        push r:11, ']b', r:14, r:15
        multiply
        setMember
        push 8, 1, r:11, '3U*}=('
        callMethod
        pop
        branch label453
       label455:
        push 0, r:this, '9T54'
        callMethod
        pop
       label456:
      end // of function 

      setMember
      push r:1, '565'
      function2 (r:3=')93A') (r:1='this', r:2='super')
        push r:this, '-5yrF(', r:this, '-5yrF('
        getMember
        push r:')93A', '*]Q5}'
        getMember
        push 20
        multiply
        add
        setMember
        push r:')93A', r:this, 2, '0cM,'
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '-43zH('
      function2 () (r:1='this')
        push r:this, '=kIA', 0
        setMember
        push r:this, '(KpGn', NULL
        setMember
        push r:this, '+{eA+', 1
        setMember
        push r:this, '[b', 0, '*r'
        getVariable
        push '0X xI('
        getMember
        subtract
        setMember
        push r:this, ']b', 0
        setMember
        push r:this, ')(', '*r'
        getVariable
        push '[{'
        getMember
        push r:this, ']oH'
        getMember
        push 0.5
        multiply
        subtract
        setMember
        push '5W 5', 1, r:this, '-iB='
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push r:this, '-iB='
        getMember
        push '_rotation', 0
        setMember
      end // of function 

      setMember
      push '980Sb'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '}-B2'
      function2 (r:2='}J') (r:1='this')
        push 0, 1, ']{i'
        getVariable
        push '(H5 S'
        callMethod
        pop
        push 0, '*r'
        getVariable
        push '}-B2'
        callMethod
        pop
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        not
        branchIfTrue label457
        push UNDEF
        return
       label457:
        push '980Sb'
        getVariable
        push ')2fr3', r:'}J'
        setMember
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        branchIfTrue label458
        push '980Sb'
        getVariable
        push 'mode', '980Sb'
        getVariable
        push ')2fr3'
        getMember
        push 1, '44{N'
        new
        setMember
       label458:
      end // of function 

      setMember
      push r:0, '0D 6'
      function2 () (r:1='this')
        push 0, '{-kxL'
        getVariable
        push '87vE7('
        callMethod
        pop
        push 0, '980Sb'
        getVariable
        push 'mode'
        getMember
        push '0D 6'
        callMethod
        pop
      end // of function 

      setMember
    end // of frame 0
  end // of defineMovieClip 576
  
  exportAssets
    576 as '90D*'
  end // of exportAssets
end
