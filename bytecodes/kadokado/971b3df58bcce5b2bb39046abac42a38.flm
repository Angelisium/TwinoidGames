movie '971b3df58bcce5b2bb39046abac42a38.swf' compressed // flash 8, total frames: 1, frame rate: 40 fps, 700x480 px


  defineMovieClip 21 // total frames: 21
  end // of defineMovieClip 21
  
  exportAssets
    21 as '1oRh(('
  end // of exportAssets

  defineMovieClip 32 // total frames: 11

    frame 10
      stop
      push 0.0, '_parent'
      getVariable
      push 'removeMovieClip'
      callMethod
      pop
    end // of frame 10
  end // of defineMovieClip 32

  defineMovieClip 33 // total frames: 4
  end // of defineMovieClip 33
  
  exportAssets
    33 as ' Yan_'
  end // of exportAssets

  defineMovieClip 38 // total frames: 4
  end // of defineMovieClip 38
  
  exportAssets
    38 as '[9 9'
  end // of exportAssets

  defineMovieClip 41 // total frames: 1
  end // of defineMovieClip 41

  defineMovieClip 42 // total frames: 1
  end // of defineMovieClip 42

  defineMovieClip 44 // total frames: 1
  end // of defineMovieClip 44

  defineMovieClip 46 // total frames: 1
  end // of defineMovieClip 46

  defineMovieClip 48 // total frames: 2
  end // of defineMovieClip 48

  defineMovieClip 51 // total frames: 1
  end // of defineMovieClip 51

  defineMovieClip 52 // total frames: 8
  end // of defineMovieClip 52
  
  exportAssets
    52 as '*f,Q('
  end // of exportAssets

  defineMovieClip 55 // total frames: 1
  end // of defineMovieClip 55
  
  exportAssets
    55 as ';+'
  end // of exportAssets
  
  exportAssets
    55 as ';+'
  end // of exportAssets
  
  exportAssets
    52 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    38 as '[9 9'
  end // of exportAssets
  
  exportAssets
    33 as ' Yan_'
  end // of exportAssets
  
  exportAssets
    21 as '1oRh(('
  end // of exportAssets

  defineMovieClip 56 // total frames: 1

    frame 0
      constants '=(,aA', '0SFrC(', '[MqDO', '*sd+;(', ' S2q[', '=f1t*', '5=DRJ(', '3d0fx', '{p8be', '=Y7h]', '0[lh]', '-82v9', ',82v9', '*c)L', ';ndCG', '-Q)9)', ' HJ{G(', 'flash', 'Object', 'filters', '{lN=R', ',i0 [', '8A1t=', '}J', '*f,Q(', ']}lAm', '*=_p_', ' cIA', '{=iHy', '*B', 'random', 'gotoAndStop', '_xscale', '_yscale', '(j;o7', '2ufmm', 'prototype', '5R', '6R', '}SC6', '_x', '2JZ', '- u', '_y', '0tJ', '=K+gp', '69', '79', '}1qnp', '0J3fp', '{-kxL', '-V;B', 'Math', 'PI', 'cos', 'sin', '87;L)(', '5oVL)(', '44{N', '+7U K', ',4QHB(', '[YOfY', '-_X}5', '$r', '3Wt', '$l', '$t', '$g', '$c', '$n', '8kN', '}O,A', '4On_3(', '-Y5}=(', '=HU11', '0vWVG', '5U4B', '[n;=h', '8+C5', ';+', '1oRh((', 'onMouseMove', '6{VYR', 'onMouseDown', '}0J7f', 'onRelease', 'useHandCursor', 'xmouse', '8p1P5', 'sqrt', '7-,', '((', ')(', '4coV{', '4arqh', '7diw+', 'length', '8gslb', '+{4B)(', 'Mouse', 'hide', 'show', 'push', '5b)bA(', '_currentframe', '2p7V2(', ' Yan_', '_rotation', '', 'gotoAndPlay', '_alpha', 'removeMovieClip', '2M_}f', '}as{y', '7T4cF(', '0D 6', 'pow', ']1sj+', 'Color', 'ra', 'rb', 'ga', 'gb', 'ba', 'bb', 'aa', 'ab', 'setTransform', ';ILSy', ',}2X (', '980Sb', '}-B2', '(kJ+1(', ')2fr3', 'mode', '_quality', 'medium', '87vE7(', '}Zms3', 'Array', '-fC3a', '9oK', ']bu40', '_name', 'swapDepths', 'attachMC', '18wU*', 'createEmptyMC', '(GbB}', '+2NA', 'getDepth', 'floor', '}oQA7', 'unshift', '08M8', 'clear', '9(K ;', '=-+tU', '[9 9', '(', '[b', ']b', '[a', '-*', '0*', '-', 'splice', '{3ESr', '7Y-7', '41,Ne', '1Y4W8(', '2Y4W8(', '3Y4W8(', '+-(0', '8z6ta', '8h]TL', '7+{fp', ' sM(i', '7-,lT', ']SD', ']O', '=bxQF(', 'remove', '(WBt)', ']}Ou;(', '3I0pG', '{;7F4', '8U(wu', '}[cpB', '9xv]A', '{yQ=Q', '+,W', '2y+dV', '(tBee', '3)i[=', ' J3IC', '[6jRc', ')8Fyj', '4plQ5', 'getTimer', '3R,QM', ';y}-6(', '-)Xd+', '[Ad;n', '6GI,F', 'fps'  
      push '=(,aA'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '0SFrC(', 6
      setMember
      push r:0, '[MqDO', 300
      setMember
      push r:0, '*sd+;(', 300
      setMember
      push r:0, ' S2q[', 26.5
      setMember
      push r:0, '=f1t*', 8
      setMember
      push r:0, '5=DRJ(', 8
      setMember
      push r:0, '3d0fx', 0
      setMember
      push r:0, '{p8be', 1
      setMember
      push r:0, '=Y7h]', 2
      setMember
      push r:0, '0[lh]', 3
      setMember
      push r:0, '-82v9', '=(,aA'
      getVariable
      push '[MqDO'
      getMember
      push 2
      divide
      setMember
      push r:0, ',82v9', '=(,aA'
      getVariable
      push '*sd+;('
      getMember
      push 2
      divide
      push 18.5
      add
      setMember
      push r:0, '*c)L', 100, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, ' HJ{G(', 20, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push 'flash'
      getVariable
      not
      not
      branchIfTrue label1
      push 'flash', 0, 'Object'
      new
      setVariable
     label1:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      not
      not
      branchIfTrue label2
      push 'flash'
      getVariable
      push 'filters', 0, 'Object'
      new
      setMember
     label2:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      push '{lN=R'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setMember
      push ',i0 ['
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push '8A1t='
      function2 (r:2='+-(0', r:3='5R', r:4='6R') (r:1='this')
        push r:this, '}J', '=(,aA'
        getVariable
        push '{p8be'
        getMember
        push '*f,Q(', 2, r:'+-(0', ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, ' cIA', r:this, '}J'
        getMember
        push ' cIA'
        getMember
        setMember
        push r:'+-(0', '{=iHy'
        getMember
        push '=(,aA'
        getVariable
        push '0SFrC('
        getMember
        equals
        not
        branchIfTrue label3
        push r:this, '*B', '=(,aA'
        getVariable
        push '0SFrC('
        getMember
        push 1
        subtract
        setMember
        branch label4
       label3:
        push r:this, '*B', r:'+-(0', '{=iHy'
        getMember
        push 1, r:'+-(0', 'random'
        callMethod
        setMember
       label4:
        push r:this, '*B'
        getMember
        push 1
        add
        toString
        push 1, r:this, '}J'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '}J'
        getMember
        push '_xscale', 0
        setMember
        push r:this, '}J'
        getMember
        push '_yscale', 0
        setMember
        push r:'6R', r:'5R', 2, r:this, '(j;o7'
        callMethod
        pop
        push FALSE, 1, r:this, '2ufmm'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '(j;o7'
      function2 (r:2='((', r:3=')(') (r:1='this')
        push r:this, '5R', r:'((', '=(,aA'
        getVariable
        push ' S2q['
        getMember
        multiply
        push '=(,aA'
        getVariable
        push '=f1t*'
        getMember
        push '=(,aA'
        getVariable
        push ' S2q['
        getMember
        multiply
        push 2
        divide
        subtract
        setMember
        push r:this, '6R', r:')(', '=(,aA'
        getVariable
        push ' S2q['
        getMember
        multiply
        push '=(,aA'
        getVariable
        push '5=DRJ('
        getMember
        push '=(,aA'
        getVariable
        push ' S2q['
        getMember
        multiply
        push 2
        divide
        subtract
        setMember
        push 0, r:this, '}SC6'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}SC6'
      function2 () (r:1='this')
        push r:this, '}J'
        getMember
        push '_x', r:this, '5R'
        getMember
        push '8A1t='
        getVariable
        push '2JZ'
        getMember
        multiply
        push r:this, '6R'
        getMember
        push '8A1t='
        getVariable
        push '- u'
        getMember
        multiply
        subtract
        push '=(,aA'
        getVariable
        push '-82v9'
        getMember
        add
        setMember
        push r:this, '}J'
        getMember
        push '_y', r:this, '5R'
        getMember
        push '8A1t='
        getVariable
        push '- u'
        getMember
        multiply
        push r:this, '6R'
        getMember
        push '8A1t='
        getVariable
        push '2JZ'
        getMember
        multiply
        add
        push '=(,aA'
        getVariable
        push ',82v9'
        getMember
        add
        setMember
      end // of function 

      setMember
      push r:1, '2ufmm'
      function2 (r:2=')') (r:1='this')
        push r:')'
        not
        branchIfTrue label5
        push 2
        branch label6
       label5:
        push 1
       label6:
        push 1, r:this, '}J'
        getMember
        push '0tJ'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '=K+gp'
      function2 () (r:1='this')
        push r:this, '69', '=(,aA'
        getVariable
        push ' S2q['
        getMember
        setMember
        push r:this, '79', 0
        setMember
      end // of function 

      setMember
      push r:1, '}1qnp'
      function2 () (r:1='this')
        push r:this, '69', 0
        setMember
        push r:this, '79', '=(,aA'
        getVariable
        push ' S2q['
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '0J3fp'
      function2 () (r:1='this')
        push 10, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        setRegister r:2
        pop
        push r:this, '69'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label9
        push r:this, '69'
        getMember
        push r:2
        lessThan
        not
        not
        branchIfTrue label7
        push r:this, '69', r:this, '69'
        getMember
        push r:2
        subtract
        setMember
        branch label8
       label7:
        push r:this, '69'
        getMember
        setRegister r:2
        pop
        push r:this, '69', 0
        setMember
       label8:
        push r:this, '5R', r:this, '5R'
        getMember
        push r:2
        add
        setMember
       label9:
        push r:this, '79'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label12
        push r:this, '79'
        getMember
        push r:2
        lessThan
        not
        not
        branchIfTrue label10
        push r:this, '79', r:this, '79'
        getMember
        push r:2
        subtract
        setMember
        branch label11
       label10:
        push r:this, '79'
        getMember
        setRegister r:2
        pop
        push r:this, '79', 0
        setMember
       label11:
        push r:this, '6R', r:this, '6R'
        getMember
        push r:2
        add
        setMember
       label12:
        push 0, r:this, '}SC6'
        callMethod
        pop
        push r:this, '69'
        getMember
        push 0
        equals
        not
        dup
        branchIfTrue label13
        pop
        push r:this, '79'
        getMember
        push 0
        equals
        not
       label13:
        return
      end // of function 

      setMember
      push r:0, '2JZ', 'Math'
      getVariable
      push 'PI'
      getMember
      push 4
      divide
      push 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      setMember
      push r:0, '- u', 'Math'
      getVariable
      push 'PI'
      getMember
      push 4
      divide
      push 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      setMember
      push r:0, '87;L)(', 0, 'Math'
      getVariable
      push 'PI'
      getMember
      subtract
      push 4
      divide
      push 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      setMember
      push r:0, '5oVL)(', 0, 'Math'
      getVariable
      push 'PI'
      getMember
      subtract
      push 4
      divide
      push 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      setMember
      push '44{N'
      function2 (r:2='}J') (r:1='this')
        push r:this, ']}lAm', r:'}J', 1, '+7U K'
        new
        setMember
        push r:this, ',4QHB(', r:this, ']}lAm'
        getMember
        push 1, '[YOfY'
        new
        setMember
        push r:this, '-_X}5', '$r', 999999, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push '$l', 0, '$t', 0
        initArray
        push '$g', 0
        initArray
        push '$c', 0
        initArray
        push '$n', '=(,aA'
        getVariable
        push ' HJ{G('
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        push 6
        initObject
        setMember
        push r:this, '}O,A', 0, '4On_3('
        new
        setMember
        push r:this, '-_X}5'
        getMember
        push '$r'
        getMember
        push 1, r:this, '}O,A'
        getMember
        push '-Y5}=('
        callMethod
        pop
        push r:this, '{=iHy', 3
        setMember
        push r:this, '=HU11', r:this, 1, '0vWVG'
        new
        setMember
        push r:this, '5U4B', 0
        setMember
        push r:this, '[n;=h', '=(,aA'
        getVariable
        push ' HJ{G('
        getMember
        setMember
        push r:this, '8+C5', FALSE
        setMember
        push r:this, ';+', '=(,aA'
        getVariable
        push '3d0fx'
        getMember
        push ';+', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '1oRh((', '=(,aA'
        getVariable
        push '0[lh]'
        getMember
        push '1oRh((', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, ';+'
        getMember
        push 'onMouseMove', 'onMouseMove', r:this, 2, '3Wt'
        getVariable
        push '6{VYR'
        callMethod
        setMember
        push r:this, ';+'
        getMember
        push 'onMouseDown', '}0J7f', r:this, 2, '3Wt'
        getVariable
        push '6{VYR'
        callMethod
        setMember
        push r:this, ';+'
        getMember
        push 'onRelease'
        function2 () (r:1='this')
        end // of function 

        setMember
        push r:this, ';+'
        getMember
        push 'useHandCursor', FALSE
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, 'random'
      function2 (r:2='max') (r:1='this')
        push r:max, 1, r:this, '}O,A'
        getMember
        push 'random'
        callMethod
        return
      end // of function 

      setMember
      push r:1, 'onMouseMove'
      function2 () (r:1='this')
        push r:this, '8+C5'
        getMember
        not
        branchIfTrue label14
        push UNDEF
        return
       label14:
        push 0, '3Wt'
        getVariable
        push 'xmouse'
        callMethod
        push '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        push 2
        divide
        subtract
        setRegister r:2
        pop
        push 0, '3Wt'
        getVariable
        push '8p1P5'
        callMethod
        push '=(,aA'
        getVariable
        push '*sd+;('
        getMember
        push 2
        divide
        subtract
        setRegister r:3
        pop
        push '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        push '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        multiply
        push '=(,aA'
        getVariable
        push '*sd+;('
        getMember
        push '=(,aA'
        getVariable
        push '*sd+;('
        getMember
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        push 2
        divide
        setRegister r:4
        pop
        push r:2, '8A1t='
        getVariable
        push '87;L)('
        getMember
        multiply
        push r:3, '8A1t='
        getVariable
        push '5oVL)('
        getMember
        multiply
        subtract
        push r:4, 2
        divide
        add
        setRegister r:5
        pop
        push r:2, '8A1t='
        getVariable
        push '5oVL)('
        getMember
        multiply
        push r:3, '8A1t='
        getVariable
        push '87;L)('
        getMember
        multiply
        add
        push r:4, 2
        divide
        add
        setRegister r:6
        pop
        push r:5, '=(,aA'
        getVariable
        push ' S2q['
        getMember
        divide
        setRegister r:5
        pop
        push r:6, '=(,aA'
        getVariable
        push ' S2q['
        getMember
        divide
        setRegister r:6
        pop
        push r:this, '7-,', '((', r:5
        int
        push ')(', r:6
        int
        push 2
        initObject
        setMember
        push r:this, '=HU11'
        getMember
        push '4coV{'
        getMember
        push r:5
        int
        getMember
        push r:6
        int
        getMember
        setRegister r:7
        pop
        push r:this, '4arqh'
        getMember
        push r:7, '7diw+'
        getMember
        equals
        not
        branchIfTrue label15
        push UNDEF
        return
       label15:
        push 0
        setRegister r:8
        pop
        branch label17
       label16:
        push r:8
        increment
        setRegister r:8
        pop
       label17:
        push r:8, r:this, '4arqh'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label18
        push FALSE, 1, r:this, '4arqh'
        getMember
        push r:8
        getMember
        push '2ufmm'
        callMethod
        pop
        branch label16
       label18:
        push r:this, '4arqh', r:7, '7diw+'
        getMember
        setMember
        push r:7, '7diw+'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label22
        push 0
        setRegister r:8
        pop
        branch label20
       label19:
        push r:8
        increment
        setRegister r:8
        pop
       label20:
        push r:8, r:this, '4arqh'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label21
        push TRUE, 1, r:this, '4arqh'
        getMember
        push r:8
        getMember
        push '2ufmm'
        callMethod
        pop
        branch label19
       label21:
        push 0, r:this, '8gslb'
        callMethod
        pop
        branch label23
       label22:
        push 0, r:this, '+{4B)('
        callMethod
        pop
       label23:
      end // of function 

      setMember
      push r:1, '8gslb'
      function2 () (r:1='this')
        push r:this, ';+'
        getMember
        push 'useHandCursor', TRUE
        setMember
        push 0, 'Mouse'
        getVariable
        push 'hide'
        callMethod
        pop
        push 0, 'Mouse'
        getVariable
        push 'show'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '+{4B)('
      function2 () (r:1='this')
        push r:this, ';+'
        getMember
        push 'useHandCursor', FALSE
        setMember
        push 0, 'Mouse'
        getVariable
        push 'hide'
        callMethod
        pop
        push 0, 'Mouse'
        getVariable
        push 'show'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}0J7f'
      function2 () (r:1='this')
        push r:this, '8+C5'
        getMember
        dup
        branchIfTrue label24
        pop
        push r:this, '4arqh'
        getMember
        push NULL
        equals
       label24:
        not
        branchIfTrue label25
        push UNDEF
        return
       label25:
        push 0
        setRegister r:2
        pop
        branch label27
       label26:
        push r:2
        increment
        setRegister r:2
        pop
       label27:
        push r:2, '=(,aA'
        getVariable
        push '=f1t*'
        getMember
        lessThan
        not
        branchIfTrue label32
        push 0
        setRegister r:3
        pop
        branch label29
       label28:
        push r:3
        increment
        setRegister r:3
        pop
       label29:
        push r:3, '=(,aA'
        getVariable
        push '5=DRJ('
        getMember
        lessThan
        not
        branchIfTrue label31
        push r:this, '=HU11'
        getMember
        push '4coV{'
        getMember
        push r:2
        getMember
        push r:3
        getMember
        setRegister r:4
        pop
        push r:4, '7diw+'
        getMember
        push r:this, '4arqh'
        getMember
        equals
        not
        branchIfTrue label30
        push r:this, '=HU11'
        getMember
        push '4coV{'
        getMember
        push r:2
        getMember
        push r:3, NULL
        setMember
       label30:
        branch label28
       label31:
        branch label26
       label32:
        push r:this, '4arqh'
        getMember
        push 'length'
        getMember
        setRegister r:5
        pop
        push r:this, '[n;=h', r:this, '[n;=h'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        push 1
        subtract
        push 1, ';ndCG'
        getVariable
        push '-Q)9)'
        callMethod
        setMember
        push r:5, r:5, 1
        subtract
        multiply
        push 2
        divide
        push '=(,aA'
        getVariable
        push '*c)L'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        multiply
        int
        setRegister r:6
        pop
        push r:this, '5U4B'
        getMember
        int
        push 1, r:this, '-_X}5'
        getMember
        push '$t'
        getMember
        push 'push'
        callMethod
        pop
        push r:5, 1, r:this, '-_X}5'
        getMember
        push '$g'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '7-,'
        getMember
        push ')('
        getMember
        push r:this, '7-,'
        getMember
        push '(('
        getMember
        push 2
        initArray
        push 1, r:this, '-_X}5'
        getMember
        push '$c'
        getMember
        push 'push'
        callMethod
        pop
        push r:6, 1, ';ndCG'
        getVariable
        push '-Q)9)'
        callMethod
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push 0
        setRegister r:7
        pop
        branch label34
       label33:
        push r:7
        increment
        setRegister r:7
        pop
       label34:
        push r:7, r:this, '4arqh'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label38
        push r:this, '4arqh'
        getMember
        push r:7
        getMember
        setRegister r:9
        pop
        push 0
        setRegister r:8
        pop
        branch label36
       label35:
        push r:8
        increment
        setRegister r:8
        pop
       label36:
        push r:8, 3
        lessThan
        not
        branchIfTrue label37
        push r:9, '}J'
        getMember
        push '_currentframe'
        getMember
        push r:9, '}J'
        getMember
        push '_y'
        getMember
        push r:9, '}J'
        getMember
        push '_x'
        getMember
        push 3, r:this, ',4QHB('
        getMember
        push '2p7V2('
        callMethod
        pop
        branch label35
       label37:
        push '=(,aA'
        getVariable
        push '=Y7h]'
        getMember
        push ' Yan_', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:10
        pop
        push r:10, '_x', r:9, '}J'
        getMember
        push '_x'
        getMember
        setMember
        push r:10, '_y', r:9, '}J'
        getMember
        push '_y'
        getMember
        setMember
        push r:10, '_rotation', 360, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setMember
        push 3, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        add
        push ''
        add
        push 1, r:10, '0tJ'
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push r:10, '_alpha', 30, 70, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        add
        setMember
        push r:9, '}J'
        getMember
        push '_currentframe'
        getMember
        push ''
        add
        push 1, r:10, 'gotoAndStop'
        callMethod
        pop
        push 0, r:9, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label33
       label38:
        push r:this, '8+C5', TRUE
        setMember
        push 0, r:this, '=HU11'
        getMember
        push '2M_}f'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}as{y'
      function2 () (r:1='this')
        push r:this, '[n;=h'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        push 0
        equals
        not
        branchIfTrue label39
        push 0, r:this, '7T4cF('
        callMethod
        pop
        push UNDEF
        return
       label39:
        push r:this, '4arqh', NULL
        setMember
        push r:this, '8+C5', FALSE
        setMember
        push 0, r:this, 'onMouseMove'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '0D 6'
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.6, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:2
        pop
        push r:this, 'flash'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label41
        push r:this, 'flash', r:this, 'flash'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 3
        multiply
        subtract
        setMember
        push r:this, 'flash'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label40
        push r:this, 'flash', 0
        setMember
       label40:
        push 0, r:this, ']}lAm'
        getMember
        push ']1sj+'
        callMethod
        push 1, 'Color'
        new
        setRegister r:3
        pop
        push r:this, 'flash'
        getMember
        push 2.55
        multiply
        int
        setRegister r:4
        pop
        push r:this, 'flash'
        getMember
        push 2
        divide
        int
        setRegister r:5
        pop
        push 'ra', 100, r:5
        subtract
        push 'rb', r:4, 'ga', 100, r:5
        subtract
        push 'gb', 0, 'ba', 100, r:5
        subtract
        push 'bb', 0, 'aa', 100, 'ab', 0, 8
        initObject
        push 1, r:3, 'setTransform'
        callMethod
        pop
        push r:this, 'flash'
        getMember
        push 0
        equals
        not
        branchIfTrue label41
        push r:this, 'flash', NULL
        setMember
       label41:
        push r:this, '5U4B', r:this, '5U4B'
        getMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        add
        setMember
        push r:this, '[n;=h'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        push 1
        add
        toString
        push 1, r:this, '1oRh(('
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push 0, r:this, ',4QHB('
        getMember
        push '0D 6'
        callMethod
        pop
        push 0, r:this, '=HU11'
        getMember
        push '0D 6'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '7T4cF('
      function2 () (r:1='this')
        push r:this, '-_X}5'
        getMember
        push 1, ';ndCG'
        getVariable
        push '7T4cF('
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ',}2X ('
      function2 () (r:1='this')
      end // of function 

      setMember
      push '980Sb'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '}-B2'
      function2 (r:2='}J') (r:1='this')
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        not
        branchIfTrue label42
        push UNDEF
        return
       label42:
        push '980Sb'
        getVariable
        push ')2fr3', r:'}J'
        setMember
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        branchIfTrue label43
        push '980Sb'
        getVariable
        push 'mode', '980Sb'
        getVariable
        push ')2fr3'
        getMember
        push 1, '44{N'
        new
        setMember
       label43:
        push '980Sb'
        getVariable
        push ')2fr3'
        getMember
        push '_quality', 'medium'
        setMember
      end // of function 

      setMember
      push r:0, '0D 6'
      function2 () (r:1='this')
        push 0, '{-kxL'
        getVariable
        push '87vE7('
        callMethod
        pop
        push 0, '980Sb'
        getVariable
        push 'mode'
        getMember
        push '0D 6'
        callMethod
        pop
      end // of function 

      setMember
      push '+7U K'
      function2 (r:2='}J') (r:1='this')
        push r:this, ')2fr3', r:'}J'
        setMember
        push r:this, '}Zms3', 0, 'Array'
        new
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, ']1sj+'
      function2 () (r:1='this')
        push r:this, ')2fr3'
        getMember
        return
      end // of function 

      setMember
      push r:1, '-fC3a'
      function2 (r:2='59F') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'59F'
        getMember
        setRegister r:3
        pop
        push r:3, NULL
        equals
        not
        branchIfTrue label44
        push '9oK', 0, 'Array'
        new
        push '7-,', 0, 2
        initObject
        setRegister r:3
        pop
        push r:this, '}Zms3'
        getMember
        push r:'59F', r:3
        setMember
       label44:
        push r:3
        return
      end // of function 

      setMember
      push r:1, ']bu40'
      function2 (r:2='[-99') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'[-99'
        getMember
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:7
        pop
        push r:'[-99', 1000
        multiply
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label46
       label45:
        push r:6
        increment
        setRegister r:6
        pop
       label46:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label48
        push r:4, r:6
        getMember
        push '_name'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label47
        push r:8, r:7
        add
        push 1, r:4, r:6
        getMember
        push 'swapDepths'
        callMethod
        pop
        push r:4, r:7, r:4, r:6
        getMember
        setMember
        push r:7
        increment
        setRegister r:7
        pop
       label47:
        branch label45
       label48:
        push r:3, '7-,', r:7
        setMember
      end // of function 

      setMember
      push r:1, '*=_p_'
      function2 (r:2='*KB2', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label49
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'*KB2', 2, r:this, '*=_p_'
        callMethod
        return
       label49:
        push r:6, r:'[-99', 1000
        multiply
        add
        push r:'*KB2', r:this, ')2fr3'
        getMember
        push 3, '3Wt'
        getVariable
        push 'attachMC'
        callMethod
        setRegister r:7
        pop
        push r:5, r:6, r:7
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:7
        return
      end // of function 

      setMember
      push r:1, '18wU*'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push r:5, 1000
        equals
        not
        branchIfTrue label50
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', 1, r:this, '18wU*'
        callMethod
        return
       label50:
        push r:5, r:'[-99', 1000
        multiply
        add
        push r:this, ')2fr3'
        getMember
        push 2, '3Wt'
        getVariable
        push 'createEmptyMC'
        callMethod
        setRegister r:6
        pop
        push r:4, r:5, r:6
        setMember
        push r:3, '7-,', r:3, '7-,'
        getMember
        increment
        setMember
        push r:6
        return
      end // of function 

      setMember
      push r:1, '(GbB}'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label51
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        return
       label51:
        push r:5, r:6, r:'}J'
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:6, r:'[-99', 1000
        multiply
        add
        return
      end // of function 

      setMember
      push r:1, '+2NA'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        push 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, r:'[-99'
        equals
        not
        branchIfTrue label52
        push UNDEF
        return
       label52:
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:5, '7-,'
        getMember
        setRegister r:7
        pop
        push 0
        setRegister r:8
        pop
        branch label54
       label53:
        push r:8
        increment
        setRegister r:8
        pop
       label54:
        push r:8, r:7
        lessThan
        not
        branchIfTrue label56
        push r:6, r:8
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label55
        push r:6, r:8, NULL
        setMember
        branch label56
       label55:
        branch label53
       label56:
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}oQA7'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label57
        push r:6, r:7, NULL
        setMember
        push r:'}J', 1, r:6, 'unshift'
        callMethod
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label57:
      end // of function 

      setMember
      push r:1, '08M8'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label59
        push r:6, r:7, NULL
        setMember
        push r:5, '7-,'
        getMember
        push 1000
        equals
        not
        branchIfTrue label58
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label58:
        push r:5, '7-,'
        getMember
        setRegister r:3
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:3, r:4, 1000
        multiply
        add
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
        push r:6, r:3, r:'}J'
        setMember
       label59:
      end // of function 

      setMember
      push r:1, 'clear'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:4
        pop
        branch label61
       label60:
        push r:4
        increment
        setRegister r:4
        pop
       label61:
        push r:4, r:3, '7-,'
        getMember
        lessThan
        not
        branchIfTrue label62
        push 0, r:5, r:4
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label60
       label62:
        push r:3, '7-,', 0
        setMember
      end // of function 

      setMember
      push r:1, '9(K ;'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push -99999999
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label64
       label63:
        push r:6
        increment
        setRegister r:6
        pop
       label64:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label72
        push r:4, r:6
        getMember
        setRegister r:9
        pop
        push r:9, '_y'
        getMember
        setRegister r:10
        pop
        push r:10, r:8
        lessThan
        not
        not
        branchIfTrue label65
        push r:10
        setRegister r:8
        pop
        branch label71
       label65:
        push r:6
        setRegister r:7
        pop
        branch label67
       label66:
        push r:7
        decrement
        setRegister r:7
        pop
       label67:
        push r:7, 0
        greaterThan
        not
        branchIfTrue label70
        push r:4, r:7, 1
        subtract
        getMember
        setRegister r:11
        pop
        push r:11, '_y'
        getMember
        push r:10
        greaterThan
        not
        branchIfTrue label68
        push r:4, r:7, r:11
        setMember
        push r:11, 1, r:9, 'swapDepths'
        callMethod
        pop
        branch label69
       label68:
        push r:4, r:7, r:9
        setMember
        branch label70
       label69:
        branch label66
       label70:
        push r:7, 0
        equals
        not
        branchIfTrue label71
        push r:4, 0, r:9
        setMember
       label71:
        branch label63
       label72:
      end // of function 

      setMember
      push r:1, ',}2X ('
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label74
       label73:
        push r:2
        increment
        setRegister r:2
        pop
       label74:
        push r:2, r:this, '}Zms3'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label75
        push r:2, 1, r:this, 'clear'
        callMethod
        pop
        branch label73
       label75:
      end // of function 

      setMember
      push '[YOfY'
      function2 (r:2='9w=+') (r:1='this')
        push r:this, ']}lAm', r:'9w=+'
        setMember
        push r:this, '9oK', 0, 'Array'
        new
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '=-+tU'
      function2 () (r:1='this')
        push 3600, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 10
        divide
        push 'Math'
        getVariable
        push 'PI'
        getMember
        push 2
        multiply
        divide
        return
      end // of function 

      setMember
      push r:1, '2p7V2('
      function2 (r:2='((', r:3=')(', r:4='-') (r:1='this')
        push '=(,aA'
        getVariable
        push '=Y7h]'
        getMember
        push '[9 9', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:5
        pop
        push 100, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 10
        divide
        push 2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        multiply
        setRegister r:6
        pop
        push 4, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        add
        toString
        push 1, r:5, 'gotoAndStop'
        callMethod
        pop
        push r:5, '_x', r:'(('
        setMember
        push r:5, '_y', r:')('
        setMember
        push '}J', r:5, '((', r:'((', ')(', r:')(', '(', 0, r:this, '=-+tU'
        callMethod
        push '[b', r:6, ']b', 0, 200, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 10
        divide
        subtract
        push '[a', r:6, '-*', 0, '0*', 1.5, '-', 0.98, 10
        initObject
        setRegister r:7
        pop
        push r:7, 1, r:this, '9oK'
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '0D 6'
      function2 () (r:1='this')
        push r:this, '9oK'
        getMember
        push 'length'
        getMember
        setRegister r:3
        pop
        push 0
        setRegister r:2
        pop
        branch label77
       label76:
        push r:2
        increment
        setRegister r:2
        pop
       label77:
        push r:2, r:3
        lessThan
        not
        branchIfTrue label82
        push r:this, '9oK'
        getMember
        push r:2
        getMember
        setRegister r:4
        pop
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push r:4, '-'
        getMember
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:5
        pop
        push r:4, '[b', r:4, '[b'
        getMember
        push r:5
        multiply
        setMember
        push r:4, ']b', r:4, ']b'
        getMember
        push r:5
        multiply
        setMember
        push r:4, '[b', r:4, '[b'
        getMember
        push r:4, '-*'
        getMember
        add
        setMember
        push r:4, ']b', r:4, ']b'
        getMember
        push r:4, '0*'
        getMember
        add
        setMember
        push r:4, '((', r:4, '(('
        getMember
        push r:4, '[b'
        getMember
        add
        setMember
        push r:4, ')(', r:4, ')('
        getMember
        push r:4, ']b'
        getMember
        add
        setMember
        push r:4, '(', r:4, '('
        getMember
        push r:4, '[a'
        getMember
        add
        setMember
        push r:4, '}J'
        getMember
        push '_x', r:4, '(('
        getMember
        setMember
        push r:4, '}J'
        getMember
        push '_y', r:4, ')('
        getMember
        setMember
        push r:4, '}J'
        getMember
        push '_rotation', r:4, '('
        getMember
        push 180
        multiply
        push 'Math'
        getVariable
        push 'PI'
        getMember
        divide
        setMember
        push r:4, '(('
        getMember
        push -100
        lessThan
        dup
        branchIfTrue label78
        pop
        push r:4, '(('
        getMember
        push 400
        greaterThan
       label78:
        dup
        branchIfTrue label79
        pop
        push r:4, ')('
        getMember
        push -100
        lessThan
       label79:
        dup
        branchIfTrue label80
        pop
        push r:4, ')('
        getMember
        push 400
        greaterThan
       label80:
        not
        branchIfTrue label81
        push 0, r:4, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push 1, r:2, 2, r:this, '9oK'
        getMember
        push 'splice'
        callMethod
        pop
        push r:2
        decrement
        setRegister r:2
        pop
       label81:
        branch label76
       label82:
      end // of function 

      setMember
      push '4On_3('
      function2 () (r:1='this')
        push r:this, '}-B2', FALSE
        setMember
        push r:this, '}O,A', 1
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '-Y5}=('
      function2 (r:2='7') (r:1='this')
        push r:this, '}O,A', r:'7'
        setMember
        push r:this, '}-B2', FALSE
        setMember
      end // of function 

      setMember
      push r:1, '{3ESr'
      function2 () (r:1='this')
        push r:this, '(', 0, 'Array'
        new
        setMember
        push r:this, '7Y-7', 0, 'Array'
        new
        setMember
        push r:this, '('
        getMember
        push 0, r:this, '}O,A'
        getMember
        setMember
        push r:this, '7Y-7'
        getMember
        push 0, 1
        setMember
        push 1
        setRegister r:2
        pop
        branch label84
       label83:
        push r:2
        increment
        setRegister r:2
        pop
       label84:
        push r:2, 9689
        lessThan
        not
        branchIfTrue label85
        push r:this, '('
        getMember
        push r:2, 69069, r:this, '('
        getMember
        push r:2, 1
        subtract
        getMember
        multiply
        push 1
        add
        int
        setMember
        push r:this, '7Y-7'
        getMember
        push r:2, r:2, 1
        add
        setMember
        branch label83
       label85:
        push r:this, '7Y-7'
        getMember
        push 9688, 0
        setMember
        push r:this, '41,Ne', 9688
        setMember
        push r:this, '1Y4W8(', 9688, 157
        subtract
        setMember
        push r:this, '2Y4W8(', 9688, 314
        subtract
        setMember
        push r:this, '3Y4W8(', 9688, 471
        subtract
        setMember
        push r:this, '}-B2', TRUE
        setMember
      end // of function 

      setMember
      push r:1, 'random'
      function2 (r:2='max') (r:1='this')
        push r:this, '}-B2'
        getMember
        not
        not
        branchIfTrue label86
        push 0, r:this, '{3ESr'
        callMethod
        pop
       label86:
        push r:this, '41,Ne', r:this, '7Y-7'
        getMember
        push r:this, '41,Ne'
        getMember
        getMember
        setMember
        push r:this, '1Y4W8(', r:this, '7Y-7'
        getMember
        push r:this, '1Y4W8('
        getMember
        getMember
        setMember
        push r:this, '2Y4W8(', r:this, '7Y-7'
        getMember
        push r:this, '2Y4W8('
        getMember
        getMember
        setMember
        push r:this, '3Y4W8(', r:this, '7Y-7'
        getMember
        push r:this, '3Y4W8('
        getMember
        getMember
        setMember
        push r:this, '('
        getMember
        push r:this, '41,Ne'
        getMember
        push r:this, '('
        getMember
        push r:this, '41,Ne'
        getMember
        getMember
        push r:this, '('
        getMember
        push r:this, '1Y4W8('
        getMember
        getMember
        push r:this, '('
        getMember
        push r:this, '2Y4W8('
        getMember
        getMember
        bitwiseXor
        push r:this, '('
        getMember
        push r:this, '3Y4W8('
        getMember
        getMember
        bitwiseXor
        bitwiseXor
        setMember
        push r:this, '('
        getMember
        push r:this, '41,Ne'
        getMember
        getMember
        push 2147483647
        bitwiseAnd
        push r:max
        modulo
        return
      end // of function 

      setMember
      push '0vWVG'
      function2 (r:2='0') (r:1='this')
        push r:this, '+-(0', r:'0'
        setMember
        push 0, r:this, '8z6ta'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '8z6ta'
      function2 () (r:1='this')
        push r:this, '4coV{', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:2
        pop
        branch label88
       label87:
        push r:2
        increment
        setRegister r:2
        pop
       label88:
        push r:2, '=(,aA'
        getVariable
        push '=f1t*'
        getMember
        lessThan
        not
        branchIfTrue label92
        push r:this, '4coV{'
        getMember
        push r:2, 0, 'Array'
        new
        setMember
        push 0
        setRegister r:3
        pop
        branch label90
       label89:
        push r:3
        increment
        setRegister r:3
        pop
       label90:
        push r:3, '=(,aA'
        getVariable
        push '5=DRJ('
        getMember
        lessThan
        not
        branchIfTrue label91
        push r:this, '4coV{'
        getMember
        push r:2
        getMember
        push r:3, r:3, r:2, r:this, '+-(0'
        getMember
        push 3, '8A1t='
        new
        setMember
        branch label89
       label91:
        branch label87
       label92:
        push 0, r:this, '8h]TL'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '2M_}f'
      function2 () (r:1='this')
        push r:this, '7+{fp', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:3
        pop
        branch label94
       label93:
        push r:3
        increment
        setRegister r:3
        pop
       label94:
        push r:3, '=(,aA'
        getVariable
        push '5=DRJ('
        getMember
        lessThan
        not
        branchIfTrue label100
        push FALSE
        setRegister r:4
        pop
        push '=(,aA'
        getVariable
        push '=f1t*'
        getMember
        push 1
        subtract
        setRegister r:2
        pop
        branch label96
       label95:
        push r:2
        decrement
        setRegister r:2
        pop
       label96:
        push r:2, 0
        lessThan
        not
        not
        branchIfTrue label99
        push r:this, '4coV{'
        getMember
        push r:2
        getMember
        push r:3
        getMember
        setRegister r:5
        pop
        push r:5, NULL
        equals
        not
        branchIfTrue label97
        push TRUE
        setRegister r:4
        pop
        branch label98
       label97:
        push r:4
        not
        branchIfTrue label98
        push r:this, '4coV{'
        getMember
        push r:2, 1
        add
        getMember
        push r:3, r:5
        setMember
        push r:this, '4coV{'
        getMember
        push r:2
        getMember
        push r:3, NULL
        setMember
        push 0, r:5, '=K+gp'
        callMethod
        pop
        push r:5, 1, r:this, '7+{fp'
        getMember
        push 'push'
        callMethod
        pop
       label98:
        branch label95
       label99:
        branch label93
       label100:
        push r:this, '7+{fp'
        getMember
        push 'length'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label101
        push UNDEF
        return
       label101:
        push 0
        setRegister r:2
        pop
        branch label103
       label102:
        push r:2
        increment
        setRegister r:2
        pop
       label103:
        push r:2, '=(,aA'
        getVariable
        push '=f1t*'
        getMember
        lessThan
        not
        branchIfTrue label109
        push FALSE
        setRegister r:6
        pop
        push '=(,aA'
        getVariable
        push '5=DRJ('
        getMember
        push 1
        subtract
        setRegister r:3
        pop
        branch label105
       label104:
        push r:3
        decrement
        setRegister r:3
        pop
       label105:
        push r:3, 0
        lessThan
        not
        not
        branchIfTrue label108
        push r:this, '4coV{'
        getMember
        push r:2
        getMember
        push r:3
        getMember
        setRegister r:7
        pop
        push r:7, NULL
        equals
        not
        branchIfTrue label106
        push TRUE
        setRegister r:6
        pop
        branch label107
       label106:
        push r:6
        not
        branchIfTrue label107
        push r:this, '4coV{'
        getMember
        push r:2
        getMember
        push r:3, 1
        add
        push r:7
        setMember
        push r:this, '4coV{'
        getMember
        push r:2
        getMember
        push r:3, NULL
        setMember
        push 0, r:7, '}1qnp'
        callMethod
        pop
        push r:7, 1, r:this, '7+{fp'
        getMember
        push 'push'
        callMethod
        pop
       label107:
        branch label104
       label108:
        branch label102
       label109:
        push r:this, '7+{fp'
        getMember
        push 'length'
        getMember
        push 0
        equals
        not
        branchIfTrue label117
        push 0
        setRegister r:2
        pop
        branch label111
       label110:
        push r:2
        increment
        setRegister r:2
        pop
       label111:
        push r:2, '=(,aA'
        getVariable
        push '=f1t*'
        getMember
        lessThan
        not
        branchIfTrue label116
        push 0
        setRegister r:3
        pop
        branch label113
       label112:
        push r:3
        increment
        setRegister r:3
        pop
       label113:
        push r:3, '=(,aA'
        getVariable
        push '5=DRJ('
        getMember
        lessThan
        not
        branchIfTrue label115
        push r:this, '4coV{'
        getMember
        push r:2
        getMember
        push r:3
        getMember
        push NULL
        equals
        not
        branchIfTrue label114
        push r:this, '4coV{'
        getMember
        push r:2
        getMember
        push r:3, r:3, r:2, r:this, '+-(0'
        getMember
        push 3, '8A1t='
        new
        setMember
       label114:
        branch label112
       label115:
        branch label110
       label116:
        push r:this, '7+{fp', NULL
        setMember
        push 0, r:this, '8h]TL'
        callMethod
        pop
        push 0, r:this, '+-(0'
        getMember
        push '}as{y'
        callMethod
        pop
       label117:
      end // of function 

      setMember
      push r:1, ' sM(i'
      function2 (r:2=')', r:3='((', r:4=')(', r:5='0') (r:1='this')
        push r:')', '*B'
        getMember
        setRegister r:6
        pop
        push r:')', '7diw+', r:'0'
        setMember
        push r:')', 1, r:'0', 'push'
        callMethod
        pop
        push r:this, '4coV{'
        getMember
        push r:'((', 1
        subtract
        getMember
        push r:')('
        getMember
        setRegister r:')'
        pop
        push r:')', '*B'
        getMember
        push r:6
        equals
        dup
        not
        branchIfTrue label118
        pop
        push r:')', '7diw+'
        getMember
        push NULL
        equals
       label118:
        not
        branchIfTrue label119
        push r:'0', r:')(', r:'((', 1
        subtract
        push r:')', 4, r:this, ' sM(i'
        callMethod
        pop
       label119:
        push r:this, '4coV{'
        getMember
        push r:'((', 1
        add
        getMember
        push r:')('
        getMember
        setRegister r:')'
        pop
        push r:')', '*B'
        getMember
        push r:6
        equals
        dup
        not
        branchIfTrue label120
        pop
        push r:')', '7diw+'
        getMember
        push NULL
        equals
       label120:
        not
        branchIfTrue label121
        push r:'0', r:')(', r:'((', 1
        add
        push r:')', 4, r:this, ' sM(i'
        callMethod
        pop
       label121:
        push r:this, '4coV{'
        getMember
        push r:'(('
        getMember
        push r:')(', 1
        subtract
        getMember
        setRegister r:')'
        pop
        push r:')', '*B'
        getMember
        push r:6
        equals
        dup
        not
        branchIfTrue label122
        pop
        push r:')', '7diw+'
        getMember
        push NULL
        equals
       label122:
        not
        branchIfTrue label123
        push r:'0', r:')(', 1
        subtract
        push r:'((', r:')', 4, r:this, ' sM(i'
        callMethod
        pop
       label123:
        push r:this, '4coV{'
        getMember
        push r:'(('
        getMember
        push r:')(', 1
        add
        getMember
        setRegister r:')'
        pop
        push r:')', '*B'
        getMember
        push r:6
        equals
        dup
        not
        branchIfTrue label124
        pop
        push r:')', '7diw+'
        getMember
        push NULL
        equals
       label124:
        not
        branchIfTrue label125
        push r:'0', r:')(', 1
        add
        push r:'((', r:')', 4, r:this, ' sM(i'
        callMethod
        pop
       label125:
      end // of function 

      setMember
      push r:1, '8h]TL'
      function2 () (r:1='this')
        push 0
        setRegister r:3
        pop
        branch label127
       label126:
        push r:3
        increment
        setRegister r:3
        pop
       label127:
        push r:3, '=(,aA'
        getVariable
        push '=f1t*'
        getMember
        lessThan
        not
        branchIfTrue label131
        push 0
        setRegister r:4
        pop
        branch label129
       label128:
        push r:4
        increment
        setRegister r:4
        pop
       label129:
        push r:4, '=(,aA'
        getVariable
        push '5=DRJ('
        getMember
        lessThan
        not
        branchIfTrue label130
        push r:this, '4coV{'
        getMember
        push r:3
        getMember
        push r:4
        getMember
        push '7diw+', NULL
        setMember
        branch label128
       label130:
        branch label126
       label131:
        push r:this, '7-,lT', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:3
        pop
        branch label133
       label132:
        push r:3
        increment
        setRegister r:3
        pop
       label133:
        push r:3, '=(,aA'
        getVariable
        push '=f1t*'
        getMember
        lessThan
        not
        branchIfTrue label146
        push 0
        setRegister r:4
        pop
        branch label135
       label134:
        push r:4
        increment
        setRegister r:4
        pop
       label135:
        push r:4, '=(,aA'
        getVariable
        push '5=DRJ('
        getMember
        lessThan
        not
        branchIfTrue label145
        push r:this, '4coV{'
        getMember
        push r:3
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push r:5, NULL
        equals
        not
        dup
        not
        branchIfTrue label136
        pop
        push r:5, '7diw+'
        getMember
        push NULL
        equals
       label136:
        not
        branchIfTrue label144
        push 0, 'Array'
        new
        setRegister r:6
        pop
        push r:6, r:4, r:3, r:5, 4, r:this, ' sM(i'
        callMethod
        pop
        push r:6, 'length'
        getMember
        push 2
        lessThan
        dup
        branchIfTrue label137
        pop
        push r:6, 0
        getMember
        push '*B'
        getMember
        push '=(,aA'
        getVariable
        push '0SFrC('
        getMember
        push 1
        subtract
        equals
       label137:
        not
        branchIfTrue label141
        push 0
        setRegister r:2
        pop
        branch label139
       label138:
        push r:2
        increment
        setRegister r:2
        pop
       label139:
        push r:2, r:6, 'length'
        getMember
        lessThan
        not
        branchIfTrue label140
        push r:6, r:2
        getMember
        setRegister r:5
        pop
        push r:5, '7diw+', NULL
        setMember
        push ']SD', 1, r:5, ' cIA'
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        branch label138
       label140:
        branch label144
       label141:
        push r:6, 1, r:this, '7-,lT'
        getMember
        push 'push'
        callMethod
        pop
        push 0
        setRegister r:2
        pop
        branch label143
       label142:
        push r:2
        increment
        setRegister r:2
        pop
       label143:
        push r:2, r:6, 'length'
        getMember
        lessThan
        not
        branchIfTrue label144
        push r:6, r:2
        getMember
        setRegister r:5
        pop
        push ']O', 1, r:5, ' cIA'
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        branch label142
       label144:
        branch label134
       label145:
        branch label132
       label146:
        push r:this, '7-,lT'
        getMember
        push 'length'
        getMember
        push 0
        equals
        not
        branchIfTrue label147
        push 0, r:this, '+-(0'
        getMember
        push '7T4cF('
        callMethod
        pop
       label147:
      end // of function 

      setMember
      push r:1, '=bxQF('
      function2 () (r:1='this')
        push 10, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        setRegister r:2
        pop
        push '=(,aA'
        getVariable
        push '=f1t*'
        getMember
        push 1
        subtract
        setRegister r:3
        pop
        branch label149
       label148:
        push r:3
        decrement
        setRegister r:3
        pop
       label149:
        push r:3, 0
        lessThan
        not
        not
        branchIfTrue label155
        push '=(,aA'
        getVariable
        push '5=DRJ('
        getMember
        push 1
        subtract
        setRegister r:4
        pop
        branch label151
       label150:
        push r:4
        decrement
        setRegister r:4
        pop
       label151:
        push r:4, 0
        lessThan
        not
        not
        branchIfTrue label154
        push r:this, '4coV{'
        getMember
        push r:3
        getMember
        push r:4
        getMember
        push '}J'
        getMember
        setRegister r:5
        pop
        push r:5, '_xscale'
        getMember
        push 100
        lessThan
        not
        branchIfTrue label153
        push r:5, '_xscale'
        getMember
        push r:2, r:4, 1
        add
        multiply
        push 3
        divide
        add
        setRegister r:6
        pop
        push r:6, 100
        greaterThan
        not
        branchIfTrue label152
        push 100
        setRegister r:6
        pop
       label152:
        push r:5, '_xscale', r:6
        setMember
        push r:5, '_yscale', r:6
        setMember
        push r:2, 0.95
        multiply
        setRegister r:2
        pop
       label153:
        branch label150
       label154:
        push r:2, 1.2
        multiply
        setRegister r:2
        pop
        branch label148
       label155:
      end // of function 

      setMember
      push r:1, '0D 6'
      function2 () (r:1='this')
        push 0, r:this, '=bxQF('
        callMethod
        pop
        push 0
        setRegister r:2
        pop
        branch label157
       label156:
        push r:2
        increment
        setRegister r:2
        pop
       label157:
        push r:2, r:this, '7+{fp'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label159
        push r:this, '7+{fp'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push 0, r:3, '0J3fp'
        callMethod
        not
        not
        branchIfTrue label158
        push r:3, 1, r:this, '7+{fp'
        getMember
        push 'remove'
        callMethod
        pop
        push r:2
        decrement
        setRegister r:2
        pop
        push r:this, '7+{fp'
        getMember
        push 'length'
        getMember
        push 0
        equals
        not
        branchIfTrue label158
        push r:this, '+-(0'
        getMember
        push ';+'
        getMember
        push 'useHandCursor', FALSE
        setMember
        push 0, r:this, '2M_}f'
        callMethod
        pop
        branch label159
       label158:
        branch label156
       label159:
      end // of function 

      setMember
      push '(WBt)'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ']}Ou;(', 1
      setMember
      push r:0, '3I0pG', 2
      setMember
      push r:0, '{;7F4', 3
      setMember
      push r:0, '8U(wu', 4
      setMember
      push r:0, '}[cpB', 5
      setMember
      push r:0, '9xv]A', 6
      setMember
      push r:0, '{yQ=Q', 7
      setMember
      push r:0, '+,W', 8
      setMember
      push r:0, '2y+dV', 9
      setMember
      push r:0, '(tBee', 10
      setMember
      push r:0, '3)i[=', 11
      setMember
      push r:0, ' J3IC', 12
      setMember
      push r:0, '[6jRc', 13
      setMember
      push r:0, ')8Fyj', 14
      setMember
      push '{-kxL'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '87vE7('
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '4plQ5', '{-kxL'
        getVariable
        push '4plQ5'
        getMember
        increment
        setMember
        push 0, '3Wt'
        getVariable
        push 'getTimer'
        callMethod
        setRegister r:2
        pop
        push '{-kxL'
        getVariable
        push ';ILSy', r:2, '{-kxL'
        getVariable
        push '3R,QM'
        getMember
        subtract
        push 1000.0
        divide
        setMember
        push '{-kxL'
        getVariable
        push '3R,QM', r:2
        setMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        push '{-kxL'
        getVariable
        push ';y}-6('
        getMember
        lessThan
        not
        branchIfTrue label160
        push '{-kxL'
        getVariable
        push '-)Xd+', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        push '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        multiply
        push 1, '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        subtract
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        multiply
        add
        setMember
        branch label161
       label160:
        push '{-kxL'
        getVariable
        push ';ILSy', 1, '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        divide
        setMember
       label161:
        push '{-kxL'
        getVariable
        push '-V;B', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        setMember
      end // of function 

      setMember
      push r:0, 'fps'
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        return
      end // of function 

      setMember
      push r:0, '6GI,F', 32
      setMember
      push r:0, ';y}-6(', 0.5
      setMember
      push r:0, '3R,QM', 0, '3Wt'
      getVariable
      push 'getTimer'
      callMethod
      setMember
      push r:0, '[Ad;n', 0.95
      setMember
      push r:0, '-)Xd+', 1
      setMember
      push r:0, '-V;B', 1
      setMember
      push r:0, ';ILSy', 1
      setMember
      push r:0, '4plQ5', 0
      setMember
    end // of frame 0
  end // of defineMovieClip 56
  
  exportAssets
    56 as '90D*'
  end // of exportAssets
end
