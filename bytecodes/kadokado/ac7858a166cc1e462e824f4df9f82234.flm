movie 'ac7858a166cc1e462e824f4df9f82234.swf' compressed // flash 8, total frames: 1, frame rate: 40 fps, 700x480 px


  defineMovieClip 3 // total frames: 2

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 3
  
  exportAssets
    3 as '4b6DE'
  end // of exportAssets

  defineMovieClip 6 // total frames: 2
  end // of defineMovieClip 6

  defineMovieClip 9 // total frames: 1
  end // of defineMovieClip 9
  
  exportAssets
    9 as '*xjm_'
  end // of exportAssets

  defineMovieClip 14 // total frames: 21
  end // of defineMovieClip 14
  
  exportAssets
    14 as ' gFFu'
  end // of exportAssets
  
  exportAssets
    14 as ' gFFu'
  end // of exportAssets
  
  exportAssets
    9 as '*xjm_'
  end // of exportAssets
  
  exportAssets
    3 as '4b6DE'
  end // of exportAssets

  defineMovieClip 18 // total frames: 1
  end // of defineMovieClip 18
  
  exportAssets
    18 as '{_V*B'
  end // of exportAssets

  defineMovieClip 23 // total frames: 1
  end // of defineMovieClip 23

  defineMovieClip 24 // total frames: 1
  end // of defineMovieClip 24
  
  exportAssets
    24 as '0o*6'
  end // of exportAssets
  
  exportAssets
    24 as '0o*6'
  end // of exportAssets
  
  exportAssets
    18 as '{_V*B'
  end // of exportAssets

  defineMovieClip 44 // total frames: 20

    frame 19
      stop
    end // of frame 19
  end // of defineMovieClip 44
  
  exportAssets
    44 as '2KhC(('
  end // of exportAssets

  defineMovieClip 63 // total frames: 19

    frame 18
      push ']', 0.0
      setVariable
    end // of frame 18
  end // of defineMovieClip 63
  
  exportAssets
    63 as ';IzJK('
  end // of exportAssets

  defineMovieClip 69 // total frames: 60

    frame 0
      push 50
      random
      push 1
      add
      gotoAndPlay
    end // of frame 0

    frame 59
      gotoFrame 1
      play
    end // of frame 59
  end // of defineMovieClip 69

  defineMovieClip 71 // total frames: 1
  end // of defineMovieClip 71

  defineMovieClip 80 // total frames: 1
  end // of defineMovieClip 80

  defineMovieClip 83 // total frames: 40

    frame 0
      push '_parent'
      getVariable
      push '{)59'
      getMember
      push UNDEF
      equals
      not
      branchIfTrue label1
      push 40
      random
      push 1
      add
      gotoAndStop
      branch label2
     label1:
      push 39
      random
      push 1
      add
      gotoAndStop
     label2:
    end // of frame 0

    frame 39
      push '_parent'
      getVariable
      push '{)59', TRUE
      setMember
    end // of frame 39
  end // of defineMovieClip 83

  defineMovieClip 85 // total frames: 16

    frame 0
      push '_parent'
      getVariable
      push ')'
      getMember
      push '_currentframe'
      getMember
      push 40
      equals
      not
      branchIfTrue label1
      gotoFrame 14
      branch label2
     label1:
      push 10
      random
      push 1
      add
      gotoAndStop
     label2:
    end // of frame 0
  end // of defineMovieClip 85

  defineMovieClip 89 // total frames: 15

    frame 0
      push '_parent'
      getVariable
      push ')'
      getMember
      push '_currentframe'
      getMember
      push 40
      equals
      not
      branchIfTrue label1
      gotoFrame 14
      branch label2
     label1:
      push 10
      random
      push 1
      add
      gotoAndStop
     label2:
    end // of frame 0
  end // of defineMovieClip 89

  defineMovieClip 92 // total frames: 1
  end // of defineMovieClip 92

  defineMovieClip 93 // total frames: 1
  end // of defineMovieClip 93

  defineMovieClip 106 // total frames: 1
  end // of defineMovieClip 106

  defineMovieClip 107 // total frames: 130

    frame 0
      stop
    end // of frame 0

    frame 7
      stop
    end // of frame 7

    frame 23
      stop
    end // of frame 23

    frame 42
      stop
    end // of frame 42

    frame 55
      stop
    end // of frame 55

    frame 66
      stop
    end // of frame 66

    frame 104
      stop
    end // of frame 104

    frame 123
      gotoLabel '4MC5'
      play
    end // of frame 123
  end // of defineMovieClip 107
  
  exportAssets
    107 as '1 fb*'
  end // of exportAssets

  defineMovieClip 109 // total frames: 1
  end // of defineMovieClip 109
  
  exportAssets
    109 as '*hLLU'
  end // of exportAssets

  defineMovieClip 123 // total frames: 22

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 123

  defineMovieClip 124 // total frames: 14

    frame 6
      stop
    end // of frame 6

    frame 13
      push ''
      removeClip
    end // of frame 13
  end // of defineMovieClip 124
  
  exportAssets
    124 as '0v2NC'
  end // of exportAssets

  defineMovieClip 127 // total frames: 1
  end // of defineMovieClip 127

  defineMovieClip 139 // total frames: 22
  end // of defineMovieClip 139
  
  exportAssets
    139 as '-NdbB('
  end // of exportAssets

  defineMovieClip 144 // total frames: 1
  end // of defineMovieClip 144

  defineMovieClip 146 // total frames: 1
  end // of defineMovieClip 146

  defineMovieClip 148 // total frames: 1
  end // of defineMovieClip 148

  defineMovieClip 160 // total frames: 46

    frame 45
      push ''
      removeClip
    end // of frame 45
  end // of defineMovieClip 160
  
  exportAssets
    160 as '3z}u{'
  end // of exportAssets

  defineMovieClip 163 // total frames: 1
  end // of defineMovieClip 163

  defineMovieClip 166 // total frames: 2

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 166

  defineMovieClip 167 // total frames: 19
  end // of defineMovieClip 167
  
  exportAssets
    167 as '*oNWM'
  end // of exportAssets

  defineMovieClip 169 // total frames: 1
  end // of defineMovieClip 169

  defineMovieClip 170 // total frames: 7

    frame 6
      push ''
      removeClip
    end // of frame 6
  end // of defineMovieClip 170
  
  exportAssets
    170 as '3=vLC'
  end // of exportAssets

  defineMovieClip 174 // total frames: 9
  end // of defineMovieClip 174
  
  exportAssets
    174 as '-CJFI('
  end // of exportAssets

  defineMovieClip 177 // total frames: 1
  end // of defineMovieClip 177

  defineMovieClip 203 // total frames: 26

    frame 18
      push ''
      removeClip
    end // of frame 18
  end // of defineMovieClip 203
  
  exportAssets
    203 as '1Y2ci'
  end // of exportAssets

  defineMovieClip 205 // total frames: 1
  end // of defineMovieClip 205
  
  exportAssets
    205 as '7y,=z'
  end // of exportAssets

  defineMovieClip 207 // total frames: 1
  end // of defineMovieClip 207
  
  exportAssets
    207 as '9Py;C'
  end // of exportAssets

  defineMovieClip 209 // total frames: 1
  end // of defineMovieClip 209

  defineMovieClip 210 // total frames: 1
  end // of defineMovieClip 210
  
  exportAssets
    207 as '9Py;C'
  end // of exportAssets
  
  exportAssets
    205 as '7y,=z'
  end // of exportAssets
  
  exportAssets
    205 as '7y,=z'
  end // of exportAssets
  
  exportAssets
    205 as '7y,=z'
  end // of exportAssets

  defineMovieClip 221 // total frames: 32
  end // of defineMovieClip 221

  defineMovieClip 224 // total frames: 1
  end // of defineMovieClip 224

  defineMovieClip 225 // total frames: 10

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 225
  
  exportAssets
    225 as '9[d;C'
  end // of exportAssets

  defineMovieClip 228 // total frames: 1
  end // of defineMovieClip 228

  defineMovieClip 229 // total frames: 1
  end // of defineMovieClip 229
  
  exportAssets
    229 as ')6(YK('
  end // of exportAssets
  
  exportAssets
    229 as ')6(YK('
  end // of exportAssets
  
  exportAssets
    225 as '9[d;C'
  end // of exportAssets
  
  exportAssets
    203 as '1Y2ci'
  end // of exportAssets
  
  exportAssets
    174 as '-CJFI('
  end // of exportAssets
  
  exportAssets
    170 as '3=vLC'
  end // of exportAssets
  
  exportAssets
    203 as '1Y2ci'
  end // of exportAssets
  
  exportAssets
    167 as '*oNWM'
  end // of exportAssets
  
  exportAssets
    160 as '3z}u{'
  end // of exportAssets
  
  exportAssets
    139 as '-NdbB('
  end // of exportAssets
  
  exportAssets
    124 as '0v2NC'
  end // of exportAssets
  
  exportAssets
    109 as '*hLLU'
  end // of exportAssets

  defineMovieClip 230 // total frames: 1

    frame 0
      constants '2e{I', '+G97+', '}2', '-iB=', '44{N', '86Itb', '9[d;C', '*r', '+-(0', '32', '*=_p_', '86{p(', 'push', '_alpha', 'Math', 'random', 'prototype', '4u=dZ', '_x', '*5(', '((', '8G(', '_y', '=4(', ')(', '(j;o7', ';AH0', '8[xNO', '0VXJ', 'length', '8t,B7', '7(eTD(', '+0', '3U*}=(', ',Fz{V', 'removeMovieClip', '{YJfb', '*hLLU', '*DzW', 'cos', 'sin', '[b', ']b', '2VhU6', '_totalframes', '3Wt', 'gotoAndStop', '_rotation', '849kV', ';-[;H', '9T54', 'remove', '4 5Rs', ',2D4x', 'call', '=VJ', ')', ')GvR (', '{2', '=F(V)', '6g,A', '1zjf0', '*OA', '3[', ')gv94', 'Array', '+9fc', '(h4SU', '1 fb*', '=OA', '8Yr-b', '5,6-', '2X}A', '5]ks7(', '=kIA', '{*yxJ(', ')3 =h', '}SC6', 'abs', '{-kxL', '-V;B', '{ cf;', '5Hy6b', '[c4gL', '2K', 'min', ']Zgm5(', '505t0', 'Key', 'UP', 'isDown', 'SPACE', '2J2xZ', '(xu,m', '[d6gJ', ' A 9', '8qIVs', '9S5))', ')GiA', '70fd', '[H)5n', ' B00', '-NdbB(', '+{eA+', 'scale', '_xscale', '_yscale', ']CsBB', 'play', '{*nl3', ')RD)', '5}K7', '4Au4=', 'pow', 'gotoAndPlay', ' 8g]j', '}T;;8', ',XM)', '6u*J7', '9Py;C', ',v0X', '(KpGn', '5O[7,', '7y,=z', '6b', ';B2p1', '0v2NC', '{)59', '0tJ', 'LEFT', 'RIGHT', '7yR,6(', '5Ab', 'pop', '7-yV;(', ']', '6*WrD(', '*[D1', '3=vLC', '-CJFI(', 'splice', '5R', '6R', '88rS(', '1Y2ci', 'sqrt', ' gFFu', 'atan2', '}-B2', ';CYOh', '=', '0', 'Color', 'ra', 'ga', 'ba', 'aa', 'rb', 'gb', 'bb', 'ab', 'setTransform', 'max', '0Yj1', ')L1h4(', '7)dq;', '0pOD5', '}clB5(', '=rKQ,(', '7s', ';ndCG', '-Q)9)', ',i0 [', '-0]rl', '+KD', '7Qe;6', '87vE7(', '}1A{_', ')153L', '[j0D-', '1Jr-,(', ';zS4((', ',DBRf', '4RW6x', '2u=W=', '+7U K', ')2fr3', '}Zms3', ']1sj+', '-fC3a', '9oK', '7-,', ']bu40', '_name', 'swapDepths', '7bSH*', '18wU*', '-4*l((', '(GbB}', '+2NA', 'getDepth', 'floor', '}oQA7', 'unshift', '08M8', 'clear', '9(K ;', ',}2X (', 'flash', 'Object', 'filters', '{lN=R', '5P0d3(', '2{l)6', '+Da3+', '-3iO-(', '90', '-X', '60-', '{L=FN', ',4', '[,Ypd', '}B)Y_', 'textColor', '=TZ6s', 'text', 'textWidth', '_width', '+l Yy', '4plQ5', 'getTimer', ';ILSy', '3R,QM', ';y}-6(', '-)Xd+', '[Ad;n', '6GI,F', 'fps', 'type', '(v+', '1', '5epK)', '(WBt)', ']}Ou;(', '3I0pG', '{;7F4', '8U(wu', '}[cpB', '9xv]A', '{yQ=Q', '+,W', '2y+dV', '(tBee', '3)i[=', ' J3IC', '[6jRc', ')8Fyj', ';+', '4MvcB', '0o*6', '+Hp()', '{_V*B', '4b6DE', '-wYLG', ';rk;*(', '+cO{A(', '+I;}1', '4pw(b', '7LxWY', '-43zH(', '+P9;a', '0o()', '_height', '5(,lT', '0 hf4(', '*oNWM', 'stop', ' eo6*', '3Sv_g', '+pESK(', '*v9F', '[d9F', '6m9G', '-Y9G', '3B(*', ',qE', '1[111', ',uX(0', '3k)0e', '17dU+', '77ldJ(', '0D 6', '+nab', '5b)bA(', '(hJ)a', '7T4cF(', ']2dH]', 'insert', '*xjm_', ';d3', ';MXK', ')+plo', '3z}u{', '(Erk5', '$x', 'substring', '980Sb', '(kJ+1(', 'mode'  
      push '2e{I'
      function2 () (r:1='this')
        push r:this, '+G97+', FALSE
        setMember
        push r:this, '}2', 0
        setMember
        push r:this, '-iB=', '44{N'
        getVariable
        push '86Itb'
        getMember
        push '9[d;C', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '86{p('
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '-iB='
        getMember
        push '_alpha', 45, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 45
        multiply
        add
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '4u=dZ'
      function2 () (r:1='this')
        push r:this, '-iB='
        getMember
        push '_x', '*r'
        getVariable
        push '*5('
        getMember
        push r:this, '(('
        getMember
        push 0.5
        add
        push '*r'
        getVariable
        push '8G('
        getMember
        multiply
        add
        setMember
        push r:this, '-iB='
        getMember
        push '_y', '*r'
        getVariable
        push '=4('
        getMember
        push r:this, ')('
        getMember
        push 0.5
        add
        push '*r'
        getVariable
        push '8G('
        getMember
        multiply
        subtract
        push r:this, '}2'
        getMember
        add
        setMember
      end // of function 

      setMember
      push r:1, '(j;o7'
      function2 (r:2=')N', r:3='*N') (r:1='this')
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push ';AH0'
        getMember
        push r:this, '(('
        getMember
        getMember
        push r:this, ')('
        getMember
        push NULL
        setMember
        push r:this, '((', r:')N'
        setMember
        push r:this, ')(', r:'*N'
        setMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push ';AH0'
        getMember
        push r:this, '(('
        getMember
        getMember
        push r:this, ')('
        getMember
        push r:this
        setMember
      end // of function 

      setMember
      push r:1, '8[xNO'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label2
       label1:
        push r:2
        increment
        setRegister r:2
        pop
       label2:
        push r:2, '2e{I'
        getVariable
        push '0VXJ'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label5
        push r:this, '(('
        getMember
        push '2e{I'
        getVariable
        push '0VXJ'
        getMember
        push r:2
        getMember
        push 0
        getMember
        add
        setRegister r:3
        pop
        push r:this, ')('
        getMember
        push '2e{I'
        getVariable
        push '0VXJ'
        getMember
        push r:2
        getMember
        push 1
        getMember
        add
        setRegister r:4
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push ';AH0'
        getMember
        push r:3
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push r:5, NULL
        equals
        not
        dup
        not
        branchIfTrue label3
        pop
        push r:5, '+G97+'
        getMember
       label3:
        not
        branchIfTrue label4
        push 0, r:5, '8t,B7'
        callMethod
        pop
       label4:
        branch label1
       label5:
      end // of function 

      setMember
      push r:1, '7(eTD('
      function2 () (r:1='this')
        push r:this, '+0', '44{N'
        getVariable
        push '86Itb'
        getMember
        push '9[d;C', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '+0'
        getMember
        push '_x', r:this, '-iB='
        getMember
        push '_x'
        getMember
        setMember
        push r:this, '+0'
        getMember
        push '_y', r:this, '-iB='
        getMember
        push '_y'
        getMember
        setMember
        push r:this, '+0'
        getMember
        push 1, r:this, '3U*}=('
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ',Fz{V'
      function2 () (r:1='this')
        push 0, r:this, '+0'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, '+0', NULL
        setMember
      end // of function 

      setMember
      push r:1, '8t,B7'
      function2 () (r:1='this')
        push r:this, '+G97+', FALSE
        setMember
        push r:this, '-iB='
        getMember
        push 1, r:this, '3U*}=('
        callMethod
        pop
        push 6
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label7
       label6:
        push r:3
        increment
        setRegister r:3
        pop
       label7:
        push r:3, r:2
        lessThan
        not
        branchIfTrue label8
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push '*hLLU', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:4
        pop
        push r:3, r:2
        divide
        push 6.28
        multiply
        setRegister r:5
        pop
        push r:5, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:6
        pop
        push r:5, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:7
        pop
        push 2
        setRegister r:8
        pop
        push 6
        setRegister r:9
        pop
        push r:4, '((', '*r'
        getVariable
        push '*5('
        getMember
        push r:this, '(('
        getMember
        push 0.5
        add
        push '*r'
        getVariable
        push '8G('
        getMember
        multiply
        add
        push r:6, r:9
        multiply
        add
        setMember
        push r:4, ')(', '*r'
        getVariable
        push '=4('
        getMember
        push r:this, ')('
        getMember
        push 0.5
        add
        push '*r'
        getVariable
        push '8G('
        getMember
        multiply
        subtract
        push r:7, r:9
        multiply
        add
        setMember
        push r:4, '[b', r:6, r:8
        multiply
        setMember
        push r:4, ']b', r:7, r:8
        multiply
        setMember
        push r:4, '2VhU6', 20, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 5
        multiply
        add
        setMember
        push r:4, '-iB='
        getMember
        push '_totalframes'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        add
        toString
        push 1, r:4, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:4, '-iB='
        getMember
        push '_rotation', r:5, 0.0157
        divide
        setMember
        push r:4, '849kV', 0
        setMember
        branch label6
       label8:
      end // of function 

      setMember
      push r:1, '3U*}=('
      function2 (r:2='}J') (r:1='this')
      end // of function 

      setMember
      push r:1, ';-[;H'
      function2 () (r:1='this')
        push 0, r:this, '9T54'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this')
        push 0, r:this, ',Fz{V'
        callMethod
        pop
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '86{p('
        getMember
        push 'remove'
        callMethod
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push ';AH0'
        getMember
        push r:this, '(('
        getMember
        getMember
        push r:this, ')('
        getMember
        push NULL
        setMember
        push 0, r:this, '-iB='
        getMember
        push 'removeMovieClip'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '0VXJ', -1, 0, 2
      initArray
      push 0, -1, 2
      initArray
      push 0, -1, 2
      initArray
      push 1, -1, 2
      initArray
      push 1, 0, 2
      initArray
      push 1, 1, 2
      initArray
      push 0, 1, 2
      initArray
      push -1, 1, 2
      initArray
      push 8
      initArray
      setMember
      push '4 5Rs'
      function2 () (r:1='this', r:2='super')
        push 0, r:super, UNDEF
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '2e{I'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '3U*}=('
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', r:this, 2, ',2D4x'
        getVariable
        push 'call'
        callMethod
        pop
        push 30, r:this, '=VJ'
        getMember
        add
        toString
        push 1, r:'}J', ')'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
      end // of function 

      setMember
      push ',2D4x', '2e{I'
      getVariable
      push 'prototype'
      getMember
      push '3U*}=('
      getMember
      setVariable
      push ')GvR ('
      function2 () (r:1='this')
        push r:this, ')(', '*r'
        getVariable
        push '=4('
        getMember
        setMember
        push r:this, '{2', 0
        setMember
        push r:this, '=F(V)', 0
        setMember
        push r:this, '6g,A', 0
        setMember
        push 0, r:this, '1zjf0'
        callMethod
        pop
        push r:this, ')(', '*r'
        getVariable
        push '*OA'
        getMember
        setMember
        push r:this, '3[', r:this, ')('
        getMember
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '1zjf0'
      function2 () (r:1='this')
        push r:this, ')gv94', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:2
        pop
        branch label10
       label9:
        push r:2
        increment
        setRegister r:2
        pop
       label10:
        push r:2, '*r'
        getVariable
        push '+9fc'
        getMember
        lessThan
        not
        branchIfTrue label11
        push '44{N'
        getVariable
        push '(h4SU'
        getMember
        push '1 fb*', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:3
        pop
        push r:3, '_x', '*r'
        getVariable
        push '*5('
        getMember
        push r:2, 0.5
        add
        push '*r'
        getVariable
        push '8G('
        getMember
        multiply
        add
        setMember
        push r:3, '_y', '*r'
        getVariable
        push '=OA'
        getMember
        setMember
        push r:3, 1, r:this, ')gv94'
        getMember
        push 'push'
        callMethod
        pop
        branch label9
       label11:
      end // of function 

      setMember
      push r:1, '8Yr-b'
      function2 () (r:1='this')
        push 0, r:this, '5,6-'
        callMethod
        pop
        push '2X}A', 1, r:this, '5]ks7('
        callMethod
        pop
        push r:this, '=kIA', 1
        setMember
        push r:this, '2VhU6', 4
        setMember
        push r:this, '3[', '*r'
        getVariable
        push '{*yxJ('
        getMember
        setMember
        push r:this, ')(', '*r'
        getVariable
        push '{*yxJ('
        getMember
        setMember
      end // of function 

      setMember
      push r:1, ')3 =h'
      function2 () (r:1='this')
        push 0, r:this, '}SC6'
        callMethod
        pop
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label12
        push r:0, 1
        strictEquals
        branchIfTrue label14
        push r:0, 2
        strictEquals
        branchIfTrue label16
        branch label18
       label12:
        push r:this, '3['
        getMember
        push r:this, ')('
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push 0.5
        lessThan
        not
        branchIfTrue label13
        push 0, r:this, '5,6-'
        callMethod
        pop
        push '2X}A', 1, r:this, '5]ks7('
        callMethod
        pop
        push r:this, '=kIA', r:this, '=kIA'
        getMember
        increment
        setMember
        push r:this, '2VhU6', 4
        setMember
       label13:
        branch label18
       label14:
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '2VhU6'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label15
        push r:this, '3[', '*r'
        getVariable
        push '{ cf;'
        getMember
        setMember
        push r:this, '=kIA', r:this, '=kIA'
        getMember
        increment
        setMember
       label15:
        branch label18
       label16:
        push r:this, '3['
        getMember
        push r:this, ')('
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push 0.5
        lessThan
        not
        branchIfTrue label17
        push 3, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '5Hy6b'
        callMethod
        pop
       label17:
        branch label18
       label18:
      end // of function 

      setMember
      push r:1, '}SC6'
      function2 () (r:1='this')
        push r:this, '3['
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:2
        pop
        push ')GvR ('
        getVariable
        push '[c4gL'
        getMember
        push r:2, 0, ')GvR ('
        getVariable
        push '[c4gL'
        getMember
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        setRegister r:2
        pop
        push r:this, ')(', r:this, ')('
        getMember
        push r:2, 0.9
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        push r:2, 2, 'Math'
        getVariable
        push 'min'
        callMethod
        add
        setMember
        push 0, r:this, ']Zgm5('
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '505t0'
      function2 () (r:1='this')
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label19
        push r:0, 1
        strictEquals
        branchIfTrue label24
        push r:0, 2
        strictEquals
        branchIfTrue label31
        push r:0, 3
        strictEquals
        branchIfTrue label39
        push r:0, 4
        strictEquals
        branchIfTrue label48
        push r:0, 5
        strictEquals
        branchIfTrue label51
        branch label52
       label19:
        push 'Key'
        getVariable
        push 'UP'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        dup
        branchIfTrue label20
        pop
        push 'Key'
        getVariable
        push 'SPACE'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
       label20:
        dup
        branchIfTrue label21
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '2J2xZ'
        getMember
        push 0
        getMember
        push 0
        lessThan
       label21:
        not
        branchIfTrue label22
        push 0, r:this, '(xu,m'
        callMethod
        pop
        push UNDEF
        return
       label22:
        push r:this, '6g,A', 0, r:this, '[d6gJ'
        callMethod
        setMember
        push r:this, '6g,A'
        getMember
        push 0
        equals
        not
        not
        branchIfTrue label23
        push r:this, '=F(V)', 0
        setMember
        push r:this, '=kIA', 1
        setMember
        push ' A 9', 1, r:this, '5]ks7('
        callMethod
        pop
       label23:
        branch label52
       label24:
        push r:this, '=F(V)', r:this, '=F(V)'
        getMember
        push '*r'
        getVariable
        push '8qIVs'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '=F(V)'
        getMember
        push 1
        greaterThan
        not
        branchIfTrue label30
        push r:this, '{2', r:this, '{2'
        getMember
        push r:this, '6g,A'
        getMember
        add
        setMember
        push r:this, '=F(V)', r:this, '=F(V)'
        getMember
        decrement
        setMember
       label25:
        push r:this, '{2'
        getMember
        push '*r'
        getVariable
        push '+9fc'
        getMember
        greaterThan
        not
        branchIfTrue label26
        push r:this, '{2', r:this, '{2'
        getMember
        push '*r'
        getVariable
        push '+9fc'
        getMember
        subtract
        setMember
        branch label25
       label26:
        push r:this, '{2'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label27
        push r:this, '{2', r:this, '{2'
        getMember
        push '*r'
        getVariable
        push '+9fc'
        getMember
        add
        setMember
        branch label26
       label27:
        push r:this, '6g,A', 0, r:this, '[d6gJ'
        callMethod
        setMember
        push r:this, '6g,A'
        getMember
        push 0
        equals
        dup
        branchIfTrue label28
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '2J2xZ'
        getMember
        push 0
        getMember
        push 0
        lessThan
       label28:
        not
        branchIfTrue label29
        push r:this, '=kIA', 0
        setMember
        push r:this, '=F(V)', 0
        setMember
        push '9S5))', 1, r:this, '5]ks7('
        callMethod
        pop
        branch label30
       label29:
        push ' A 9', 1, r:this, '5]ks7('
        callMethod
        pop
       label30:
        push 0, r:this, ']Zgm5('
        callMethod
        pop
        branch label52
       label31:
        push 0, r:this, '}SC6'
        callMethod
        pop
        push r:this, '3['
        getMember
        push r:this, ')('
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        setRegister r:2
        pop
        push r:2, '*r'
        getVariable
        push '8G('
        getMember
        lessThan
        not
        branchIfTrue label37
        push 0
        setRegister r:3
        pop
        branch label33
       label32:
        push r:3
        increment
        setRegister r:3
        pop
       label33:
        push r:3, r:this, '86{p('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label37
        push r:this, '86{p('
        getMember
        push r:3
        getMember
        setRegister r:4
        pop
        push '*r'
        getVariable
        push '+9fc'
        getMember
        push r:4, '(('
        getMember
        push r:this, '{2'
        getMember
        add
        push 2, '*r'
        getVariable
        push ')GiA'
        callMethod
        setRegister r:5
        pop
        push 0
        setRegister r:6
        pop
        branch label35
       label34:
        push r:6
        increment
        setRegister r:6
        pop
       label35:
        push r:6, '*r'
        getVariable
        push '70fd'
        getMember
        lessThan
        not
        branchIfTrue label36
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push ';AH0'
        getMember
        push r:5
        getMember
        push r:6
        getMember
        setRegister r:7
        pop
        push r:7, '}2', 0, '*r'
        getVariable
        push '8G('
        getMember
        push r:2
        subtract
        subtract
        setMember
        push 0, r:7, '4u=dZ'
        callMethod
        pop
        branch label34
       label36:
        branch label32
       label37:
        push r:2, 0.5
        lessThan
        not
        branchIfTrue label38
        push 0, r:this, '[H)5n'
        callMethod
        pop
        push 0, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '5Hy6b'
        callMethod
        pop
       label38:
        branch label52
       label39:
        push r:this, '86{p('
        getMember
        push 0
        getMember
        push '(('
        getMember
        push 1, r:this, ' B00'
        callMethod
        setRegister r:8
        pop
        push 0
        setRegister r:9
        pop
        branch label41
       label40:
        push r:9
        increment
        setRegister r:9
        pop
       label41:
        push r:9, 4
        lessThan
        not
        branchIfTrue label42
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push '-NdbB(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:10
        pop
        push r:10, '((', '*r'
        getVariable
        push '*5('
        getMember
        push r:8, 0.7
        add
        push '*r'
        getVariable
        push '8G('
        getMember
        multiply
        add
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 2
        multiply
        add
        setMember
        push r:10, ')(', '*r'
        getVariable
        push '{ cf;'
        getMember
        push 24, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        subtract
        setMember
        push r:10, '[b', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        setMember
        push r:10, ']b', 0, 8, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 16
        multiply
        add
        subtract
        setMember
        push r:10, '+{eA+', NULL
        setMember
        push r:10, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 20
        multiply
        add
        setMember
        push r:10, 'scale', 100, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 50
        multiply
        add
        setMember
        push r:10, '-iB='
        getMember
        push '_xscale', r:10, 'scale'
        getMember
        setMember
        push r:10, '-iB='
        getMember
        push '_yscale', r:10, 'scale'
        getMember
        setMember
        branch label40
       label42:
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push 20
        setRegister r:11
        pop
        push r:this, '2VhU6'
        getMember
        push r:11
        lessThan
        not
        branchIfTrue label47
        push r:this, '2VhU6'
        getMember
        push r:11
        divide
        setRegister r:12
        pop
        push 0
        setRegister r:13
        pop
        branch label44
       label43:
        push r:13
        increment
        setRegister r:13
        pop
       label44:
        push r:13, '*r'
        getVariable
        push '70fd'
        getMember
        lessThan
        not
        branchIfTrue label46
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push ';AH0'
        getMember
        push r:8
        getMember
        push r:13
        getMember
        setRegister r:14
        pop
        push r:14, NULL
        equals
        not
        not
        branchIfTrue label45
        push r:14, '-iB='
        getMember
        push '_xscale', r:12, 100
        multiply
        setMember
        push r:14, '-iB='
        getMember
        push '_yscale', r:14, '-iB='
        getMember
        push '_xscale'
        getMember
        setMember
        push r:this, '2VhU6'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label45
        push 0, r:14, '9T54'
        callMethod
        pop
       label45:
        branch label43
       label46:
        push r:this, '2VhU6'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label47
        push 0, r:this, ']CsBB'
        getMember
        push 'play'
        callMethod
        pop
        push '{*nl3', 1, r:this, '5]ks7('
        callMethod
        pop
        push 0, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '5Hy6b'
        callMethod
        pop
       label47:
        branch label52
       label48:
        push r:this, ')RD)'
        getMember
        push ']b'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label50
        push r:this, '86{p('
        getMember
        push 0
        getMember
        push '(('
        getMember
        push 1, r:this, ' B00'
        callMethod
        setRegister r:15
        pop
        push '*r'
        getVariable
        push '=4('
        getMember
        push r:this, ')RD)'
        getMember
        push ')('
        getMember
        subtract
        push '*r'
        getVariable
        push '8G('
        getMember
        divide
        int
        setRegister r:16
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push ';AH0'
        getMember
        push r:15
        getMember
        push r:16
        getMember
        setRegister r:17
        pop
        push r:17, NULL
        equals
        not
        dup
        branchIfTrue label49
        pop
        push r:16, 1
        lessThan
       label49:
        not
        branchIfTrue label50
        push r:16, r:15, 2, r:this, '5}K7'
        callMethod
        pop
        push 0, r:this, ')RD)'
        getMember
        push '9T54'
        callMethod
        pop
        push 0, r:this, ']CsBB'
        getMember
        push 'play'
        callMethod
        pop
        push 1, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '5Hy6b'
        callMethod
        pop
       label50:
        branch label52
       label51:
        push 0, r:this, '4Au4='
        callMethod
        pop
        branch label52
       label52:
        push 0
        setRegister r:18
        pop
        branch label54
       label53:
        push r:18
        increment
        setRegister r:18
        pop
       label54:
        push r:18, r:this, ')gv94'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label55
        push r:this, ')gv94'
        getMember
        push r:18
        getMember
        setRegister r:19
        pop
        push r:19, '_rotation', r:19, '_rotation'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.8, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        setMember
        branch label53
       label55:
      end // of function 

      setMember
      push r:1, '5]ks7('
      function2 (r:2='0*3+1') (r:1='this')
        push 0
        setRegister r:3
        pop
        branch label57
       label56:
        push r:3
        increment
        setRegister r:3
        pop
       label57:
        push r:3, r:this, '86{p('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label60
        push r:this, '86{p('
        getMember
        push r:3
        getMember
        setRegister r:4
        pop
        push r:4, '(('
        getMember
        push 1, r:this, ' B00'
        callMethod
        setRegister r:5
        pop
        push r:this, ')gv94'
        getMember
        push r:5
        getMember
        setRegister r:6
        pop
        push r:'0*3+1', 1, r:6, 'gotoAndPlay'
        callMethod
        pop
        push r:'0*3+1', ' A 9'
        equals
        not
        branchIfTrue label58
        push r:6, '_rotation', r:this, '6g,A'
        getMember
        push 30
        multiply
        setMember
       label58:
        push r:'0*3+1', '9S5))'
        equals
        not
        branchIfTrue label59
        push r:6, '_rotation', 0, r:this, '6g,A'
        getMember
        subtract
        push 30
        multiply
        setMember
       label59:
        branch label56
       label60:
      end // of function 

      setMember
      push r:1, '(xu,m'
      function2 () (r:1='this')
        push r:this, ' 8g]j'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label61
        push r:this, ' 8g]j'
        getMember
        push 1, r:this, '}T;;8'
        callMethod
        pop
        push r:this, '=kIA', 3, r:this, ' 8g]j'
        getMember
        add
        setMember
       label61:
        push r:this, '86{p('
        getMember
        push 0
        getMember
        push ')'
        getMember
        setRegister r:2
        pop
        push r:this, ' 8g]j'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label62
        push r:0, 1
        strictEquals
        branchIfTrue label63
        push r:0, 2
        strictEquals
        branchIfTrue label64
        branch label68
       label62:
        push ',XM)', 1, r:this, '5]ks7('
        callMethod
        pop
        push 0, r:2, '9T54'
        callMethod
        pop
        push r:this, '2VhU6', 40
        setMember
        branch label69
       label63:
        push '6u*J7', 1, r:this, '5]ks7('
        callMethod
        pop
        push r:this, ')RD)', '44{N'
        getVariable
        push '{YJfb'
        getMember
        push '9Py;C', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, ',v0X'
        new
        setMember
        push r:this, ')RD)'
        getMember
        push '(KpGn', 0.5
        setMember
        push r:this, ')RD)'
        getMember
        push '((', r:2, '-iB='
        getMember
        push '_x'
        getMember
        setMember
        push r:this, ')RD)'
        getMember
        push ')(', r:2, '-iB='
        getMember
        push '_y'
        getMember
        setMember
        push r:this, ')RD)'
        getMember
        push ']b', -28
        setMember
        push 0, r:2, '9T54'
        callMethod
        pop
        branch label69
       label64:
        push '6u*J7', 1, r:this, '5]ks7('
        callMethod
        pop
        push r:this, '5O[7,', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:3
        pop
        branch label66
       label65:
        push r:3
        increment
        setRegister r:3
        pop
       label66:
        push r:3, 3
        lessThan
        not
        branchIfTrue label67
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push '7y,=z', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:4
        pop
        push r:4, '(KpGn', 0.5, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.2
        multiply
        add
        setMember
        push r:4, '((', r:2, '-iB='
        getMember
        push '_x'
        getMember
        setMember
        push r:4, ')(', r:2, '-iB='
        getMember
        push '_y'
        getMember
        setMember
        push r:4, '[b', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 8
        multiply
        setMember
        push r:4, ']b', 0, 14, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6
        multiply
        add
        subtract
        setMember
        push r:4, '6b', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 12
        multiply
        setMember
        push r:4, '+{eA+', 1
        setMember
        push r:4, 1, r:this, '5O[7,'
        getMember
        push 'push'
        callMethod
        pop
        branch label65
       label67:
        push 0, r:2, '9T54'
        callMethod
        pop
        branch label69
       label68:
        push '6u*J7', 1, r:this, '5]ks7('
        callMethod
        pop
        push r:this, '=kIA', 2
        setMember
        push r:this, '3[', '*r'
        getVariable
        push '=4('
        getMember
        setMember
        branch label69
       label69:
      end // of function 

      setMember
      push r:1, '}T;;8'
      function2 (r:2='7') (r:1='this')
        push r:'7', 10
        multiply
        push 1
        add
        setRegister r:3
        pop
        push '44{N'
        getVariable
        push ';B2p1'
        getMember
        push '0v2NC', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:4
        pop
        push r:this, '86{p('
        getMember
        push 0
        getMember
        push '(('
        getMember
        push 1, r:this, ' B00'
        callMethod
        setRegister r:5
        pop
        push r:5, '*r'
        getVariable
        push '+9fc'
        getMember
        push 0.5
        multiply
        lessThan
        not
        branchIfTrue label70
        push 1
        branch label71
       label70:
        push 0
       label71:
        setRegister r:6
        pop
        push r:4, '_x', r:6, '*r'
        getVariable
        push '*OA'
        getMember
        multiply
        setMember
        push r:4, '_y', '*r'
        getVariable
        push '*OA'
        getMember
        setMember
        push r:4, '_xscale', r:6, 2
        multiply
        push 1
        subtract
        push 100
        multiply
        setMember
        push r:this, ']CsBB', r:4
        setMember
        push r:this, ')gv94'
        getMember
        push r:5
        getMember
        push '{)59'
        getMember
        not
        branchIfTrue label72
        push r:3
        increment
        setRegister r:3
        pop
       label72:
        push r:3
        toString
        push 1, r:4, '0tJ'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ']Zgm5('
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label74
       label73:
        push r:2
        increment
        setRegister r:2
        pop
       label74:
        push r:2, r:this, '86{p('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label79
        push r:this, '86{p('
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3, ')'
        getMember
        setRegister r:4
        pop
        push '*r'
        getVariable
        push '+9fc'
        getMember
        push r:this, '{2'
        getMember
        push r:3, '(('
        getMember
        add
        push r:this, '=F(V)'
        getMember
        push r:this, '6g,A'
        getMember
        multiply
        add
        push 2, '*r'
        getVariable
        push ')GiA'
        callMethod
        push 0.5
        add
        setRegister r:5
        pop
        push r:4, '-iB='
        getMember
        push '_x', '*r'
        getVariable
        push '*5('
        getMember
        push r:5, '*r'
        getVariable
        push '8G('
        getMember
        multiply
        add
        setMember
        push r:4, '-iB='
        getMember
        push '_y', r:this, ')('
        getMember
        push '*r'
        getVariable
        push '8G('
        getMember
        push 0.5
        multiply
        push 1, r:this, '=F(V)'
        getMember
        subtract
        push 3.14
        multiply
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push 4
        multiply
        add
        subtract
        setMember
        push r:this, ')gv94'
        getMember
        push r:3, '(('
        getMember
        push 1, r:this, ' B00'
        callMethod
        getMember
        push '{)59'
        getMember
        not
        branchIfTrue label75
        push r:4, '-iB='
        getMember
        push '_y', r:4, '-iB='
        getMember
        push '_y'
        getMember
        push 7
        add
        setMember
       label75:
        push r:5, '*r'
        getVariable
        push '+9fc'
        getMember
        push 0.5
        subtract
        lessThan
        not
        not
        branchIfTrue label77
        push r:4, '+0'
        getMember
        push NULL
        equals
        not
        branchIfTrue label76
        push 0, r:4, '7(eTD('
        callMethod
        pop
       label76:
        push r:4, '+0'
        getMember
        push '_x', r:4, '-iB='
        getMember
        push '_x'
        getMember
        push '*r'
        getVariable
        push '+9fc'
        getMember
        push '*r'
        getVariable
        push '8G('
        getMember
        multiply
        subtract
        setMember
        push r:4, '+0'
        getMember
        push '_y', r:4, '-iB='
        getMember
        push '_y'
        getMember
        setMember
        branch label78
       label77:
        push r:4, '+0'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label78
        push 0, r:4, ',Fz{V'
        callMethod
        pop
       label78:
        branch label73
       label79:
      end // of function 

      setMember
      push r:1, '[d6gJ'
      function2 () (r:1='this')
        push 'Key'
        getVariable
        push 'LEFT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label80
        push -1
        return
       label80:
        push 'Key'
        getVariable
        push 'RIGHT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label81
        push 1
        return
       label81:
        push 0
        return
      end // of function 

      setMember
      push r:1, '5,6-'
      function2 () (r:1='this')
        push r:this, ' 8g]j', NULL
        setMember
        push r:this, '86{p(', 0, 'Array'
        new
        setMember
        push 25, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label82
        push r:this, ' 8g]j', ')GvR ('
        getVariable
        push '7yR,6('
        getMember
        push ')GvR ('
        getVariable
        push '7yR,6('
        getMember
        push 'length'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        getMember
        setMember
        push 0, '4 5Rs'
        new
        setRegister r:2
        pop
        push r:2, '=VJ', r:this, ' 8g]j'
        getMember
        setMember
        push r:2, '-iB='
        getMember
        push 1, r:2, '3U*}=('
        callMethod
        pop
        push '((', '*r'
        getVariable
        push '+9fc'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push ')', r:2, 2
        initObject
        push 1, r:this, '86{p('
        getMember
        push 'push'
        callMethod
        pop
        push UNDEF
        return
       label82:
        push 3
        setRegister r:3
        pop
        push 20, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label83
        push 1
        setRegister r:3
        pop
       label83:
        push 1000, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label84
        push '*r'
        getVariable
        push '+9fc'
        getMember
        setRegister r:3
        pop
       label84:
        push 0
        setRegister r:4
        pop
        branch label86
       label85:
        push r:4
        increment
        setRegister r:4
        pop
       label86:
        push r:4, r:3
        lessThan
        not
        branchIfTrue label94
        push 0, '5Ab'
        new
        setRegister r:5
        pop
        push NULL
        setRegister r:6
        pop
       label87:
        push TRUE
        not
        branchIfTrue label93
        push TRUE
        setRegister r:7
        pop
        push '*r'
        getVariable
        push '+9fc'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:6
        pop
        push 0
        setRegister r:8
        pop
        branch label89
       label88:
        push r:8
        increment
        setRegister r:8
        pop
       label89:
        push r:8, r:this, '86{p('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label91
        push r:this, '86{p('
        getMember
        push r:8
        getMember
        push '(('
        getMember
        push r:6
        equals
        not
        branchIfTrue label90
        push FALSE
        setRegister r:7
        pop
        branch label91
       label90:
        branch label88
       label91:
        push r:7
        not
        branchIfTrue label92
        branch label93
       label92:
        branch label87
       label93:
        push '((', r:6, ')', r:5, 2
        initObject
        push 1, r:this, '86{p('
        getMember
        push 'push'
        callMethod
        pop
        branch label85
       label94:
      end // of function 

      setMember
      push r:1, '[H)5n'
      function2 () (r:1='this')
       label95:
        push r:this, '86{p('
        getMember
        push 'length'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label100
        push 0, r:this, '86{p('
        getMember
        push 'pop'
        callMethod
        setRegister r:2
        pop
        push '*r'
        getVariable
        push '+9fc'
        getMember
        push r:2, '(('
        getMember
        push r:this, '{2'
        getMember
        add
        push 2, '*r'
        getVariable
        push ')GiA'
        callMethod
        setRegister r:3
        pop
        push '*r'
        getVariable
        push '70fd'
        getMember
        push 1
        subtract
        setRegister r:4
        pop
        branch label97
       label96:
        push r:4
        decrement
        setRegister r:4
        pop
       label97:
        push r:4, 0
        lessThan
        not
        not
        branchIfTrue label99
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push ';AH0'
        getMember
        push r:3
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push r:5, NULL
        equals
        not
        not
        branchIfTrue label98
        push r:5, ')('
        getMember
        push 1
        add
        push r:5, '(('
        getMember
        push 2, r:5, '(j;o7'
        callMethod
        pop
        push r:5, '}2', 0
        setMember
        push 0, r:5, '4u=dZ'
        callMethod
        pop
       label98:
        branch label96
       label99:
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push ';AH0'
        getMember
        push r:3
        getMember
        push 0, r:2, ')'
        getMember
        setMember
        push 0, r:3, 2, r:2, ')'
        getMember
        push '(j;o7'
        callMethod
        pop
        push 0, r:2, ')'
        getMember
        push '4u=dZ'
        callMethod
        pop
        branch label95
       label100:
      end // of function 

      setMember
      push r:1, ' B00'
      function2 (r:2='((') (r:1='this')
        push '*r'
        getVariable
        push '+9fc'
        getMember
        push r:'((', r:this, '{2'
        getMember
        add
        push 2, '*r'
        getVariable
        push ')GiA'
        callMethod
        return
      end // of function 

      setMember
      push r:1, '7-yV;('
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label102
       label101:
        push r:2
        increment
        setRegister r:2
        pop
       label102:
        push r:2, r:this, ')gv94'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label103
        push r:this, ')gv94'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3, ']', 10, r:2, 7
        multiply
        add
        setMember
        push r:3, '=kIA', 0
        setMember
        branch label101
       label103:
      end // of function 

      setMember
      push r:1, '6*WrD('
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label105
       label104:
        push r:2
        increment
        setRegister r:2
        pop
       label105:
        push r:2, r:this, ')gv94'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label113
        push r:this, ')gv94'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3, ']', r:3, ']'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:3, ']'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label112
        push r:3, '=kIA'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label106
        push r:0, 1
        strictEquals
        branchIfTrue label107
        branch label112
       label106:
        push '*[D1', 1, r:3, 'gotoAndPlay'
        callMethod
        pop
        push r:3, ']', 30
        setMember
        push r:3, '=kIA', r:3, '=kIA'
        getMember
        increment
        setMember
        branch label112
       label107:
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push '3=vLC', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:4
        pop
        push r:4, '_x', r:3, '_x'
        getMember
        setMember
        push r:4, '_y', r:3, '_y'
        getMember
        setMember
        push 0
        setRegister r:5
        pop
        branch label109
       label108:
        push r:5
        increment
        setRegister r:5
        pop
       label109:
        push r:5, 32
        lessThan
        not
        branchIfTrue label110
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push '-CJFI(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:6
        pop
        push 0, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        subtract
        push 3.14
        multiply
        setRegister r:7
        pop
        push r:7, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:8
        pop
        push r:7, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:9
        pop
        push 0.5, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 5
        multiply
        add
        setRegister r:10
        pop
        push 8
        setRegister r:11
        pop
        push r:6, '((', r:3, '_x'
        getMember
        push r:8, r:11
        multiply
        add
        setMember
        push r:6, ')(', r:3, '_y'
        getMember
        push r:9, r:11
        multiply
        add
        setMember
        push r:6, '[b', r:8, r:10
        multiply
        setMember
        push r:6, ']b', r:9, r:10
        multiply
        push 2
        multiply
        setMember
        push r:6, '(KpGn', 0.1, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.2
        multiply
        add
        setMember
        push r:6, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 30
        multiply
        add
        setMember
        push r:6, '-iB='
        getMember
        push '_totalframes'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        add
        toString
        push 1, r:6, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:6, '849kV', 0
        setMember
        branch label108
       label110:
        push 0, r:3, 'removeMovieClip'
        callMethod
        pop
        push 1, r:2, r:2
        decrement
        setRegister r:2
        pop
        push 2, r:this, ')gv94'
        getMember
        push 'splice'
        callMethod
        pop
        push r:this, ')gv94'
        getMember
        push 'length'
        getMember
        push 0
        equals
        not
        branchIfTrue label111
        push 11, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '5Hy6b'
        callMethod
        pop
       label111:
        branch label112
       label112:
        branch label104
       label113:
      end // of function 

      setMember
      push r:1, '4Au4='
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label115
       label114:
        push r:2
        increment
        setRegister r:2
        pop
       label115:
        push r:2, r:this, '5O[7,'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label124
        push r:this, '5O[7,'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push 5
        setRegister r:4
        pop
        push r:3, '(('
        getMember
        push '*r'
        getVariable
        push '*5('
        getMember
        subtract
        push '*r'
        getVariable
        push '8G('
        getMember
        divide
        int
        setRegister r:5
        pop
        push '*r'
        getVariable
        push '=4('
        getMember
        push r:3, ')('
        getMember
        subtract
        push '*r'
        getVariable
        push '8G('
        getMember
        divide
        int
        setRegister r:6
        pop
        push r:3, '(('
        getMember
        push '*r'
        getVariable
        push '*5('
        getMember
        push r:4
        add
        lessThan
        dup
        branchIfTrue label116
        pop
        push r:3, '(('
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        push r:4, '*r'
        getVariable
        push '*5('
        getMember
        add
        subtract
        greaterThan
       label116:
        not
        branchIfTrue label117
        push r:3, '((', '*r'
        getVariable
        push '=OA'
        getMember
        push r:4, '*r'
        getVariable
        push '*5('
        getMember
        add
        subtract
        push r:3, '(('
        getMember
        push '*r'
        getVariable
        push '*5('
        getMember
        push r:4
        add
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
        push r:3, '[b', r:3, '[b'
        getMember
        push -1
        multiply
        setMember
        push r:3, '6b', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 12
        multiply
        setMember
       label117:
        push r:3, ']b'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label122
        push r:3, '5R'
        getMember
        push r:5
        equals
        not
        dup
        not
        branchIfTrue label118
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push ';AH0'
        getMember
        push r:5
        getMember
        push r:6
        getMember
        push NULL
        equals
        not
       label118:
        not
        branchIfTrue label119
        push r:3, '[b', r:3, '[b'
        getMember
        push -1
        multiply
        setMember
        push r:3, '6b', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 12
        multiply
        setMember
       label119:
        push r:3, '6R'
        getMember
        push r:6
        equals
        not
        dup
        not
        branchIfTrue label120
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push ';AH0'
        getMember
        push r:5
        getMember
        push r:6
        getMember
        push NULL
        equals
        not
       label120:
        not
        branchIfTrue label122
        push 1, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label121
        push r:3, '6R'
        getMember
        push r:3, '5R'
        getMember
        push 2, r:this, '88rS('
        callMethod
        pop
        push 0, r:3, '9T54'
        callMethod
        pop
        push 1, r:2, r:2
        decrement
        setRegister r:2
        pop
        push 2, r:this, '5O[7,'
        getMember
        push 'splice'
        callMethod
        pop
        branch label122
       label121:
        push r:3, ']b', r:3, ']b'
        getMember
        push -0.8
        multiply
        setMember
        push r:3, '6b', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 12
        multiply
        setMember
       label122:
        push r:3, '5R', r:5
        setMember
        push r:3, '6R', r:6
        setMember
        push r:3, ')('
        getMember
        push '*r'
        getVariable
        push '*OA'
        getMember
        push r:4
        add
        greaterThan
        not
        branchIfTrue label123
        push 0, r:3, '9T54'
        callMethod
        pop
        push 1, r:2, r:2
        decrement
        setRegister r:2
        pop
        push 2, r:this, '5O[7,'
        getMember
        push 'splice'
        callMethod
        pop
       label123:
        branch label114
       label124:
        push r:this, '5O[7,'
        getMember
        push 'length'
        getMember
        push 0
        equals
        not
        branchIfTrue label125
        push 0, r:this, ']CsBB'
        getMember
        push 'play'
        callMethod
        pop
        push 1, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '5Hy6b'
        callMethod
        pop
       label125:
      end // of function 

      setMember
      push r:1, '88rS('
      function2 (r:2='((', r:3=')(') (r:1='this')
        push -1
        setRegister r:4
        pop
        branch label127
       label126:
        push r:4
        increment
        setRegister r:4
        pop
       label127:
        push r:4, 1
        greaterThan
        not
        not
        branchIfTrue label132
        push -1
        setRegister r:5
        pop
        branch label129
       label128:
        push r:5
        increment
        setRegister r:5
        pop
       label129:
        push r:5, 1
        greaterThan
        not
        not
        branchIfTrue label131
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push ';AH0'
        getMember
        push r:'((', r:4
        add
        getMember
        push r:')(', r:5
        add
        getMember
        setRegister r:6
        pop
        push r:6, NULL
        equals
        not
        not
        branchIfTrue label130
        push 0, r:6, '9T54'
        callMethod
        pop
       label130:
        branch label128
       label131:
        branch label126
       label132:
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push '1Y2ci', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:7
        pop
        push r:7, '_x', '*r'
        getVariable
        push '*5('
        getMember
        push r:'((', '*r'
        getVariable
        push '8G('
        getMember
        multiply
        add
        setMember
        push r:7, '_y', '*r'
        getVariable
        push '=4('
        getMember
        push r:')(', '*r'
        getVariable
        push '8G('
        getMember
        multiply
        subtract
        setMember
        push r:7, '_xscale', 50
        setMember
        push r:7, '_yscale', 50
        setMember
      end // of function 

      setMember
      push r:1, '5}K7'
      function2 (r:2='((', r:3=')(') (r:1='this')
        push 0
        setRegister r:4
        pop
        branch label134
       label133:
        push r:4
        increment
        setRegister r:4
        pop
       label134:
        push r:4, '*r'
        getVariable
        push '+-(0'
        getMember
        push '86{p('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label139
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '86{p('
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push r:5, '(('
        getMember
        push r:'(('
        subtract
        setRegister r:6
        pop
        push r:5, ')('
        getMember
        push r:')('
        subtract
        setRegister r:7
        pop
        push r:6, r:6
        multiply
        push r:7, r:7
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        setRegister r:8
        pop
        push r:8, 2.8
        lessThan
        not
        branchIfTrue label138
        push 0
        setRegister r:9
        pop
        branch label136
       label135:
        push r:9
        increment
        setRegister r:9
        pop
       label136:
        push r:9, 3
        lessThan
        not
        branchIfTrue label137
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push ' gFFu', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:10
        pop
        push 2
        setRegister r:11
        pop
        push r:10, '((', r:5, '-iB='
        getMember
        push '_x'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 10
        multiply
        add
        setMember
        push r:10, ')(', r:5, '-iB='
        getMember
        push '_y'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 10
        multiply
        add
        setMember
        push r:10, '(('
        getMember
        push '*r'
        getVariable
        push '*5('
        getMember
        push r:'((', '*r'
        getVariable
        push '8G('
        getMember
        multiply
        add
        subtract
        setRegister r:12
        pop
        push r:10, ')('
        getMember
        push '*r'
        getVariable
        push '=4('
        getMember
        push r:')(', '*r'
        getVariable
        push '8G('
        getMember
        multiply
        subtract
        subtract
        setRegister r:13
        pop
        push r:12, r:13, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        setRegister r:14
        pop
        push r:14, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:15
        pop
        push r:14, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:16
        pop
        push r:10, '[b', r:15, r:8
        multiply
        push r:11
        multiply
        setMember
        push r:10, ']b', r:16, r:8
        multiply
        push r:11
        multiply
        setMember
        push 19, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        add
        toString
        push 1, r:10, '-iB='
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push r:10, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 50
        multiply
        add
        setMember
        push r:10, '-iB='
        getMember
        push '_xscale', r:8, 40
        multiply
        setMember
        push r:10, '-iB='
        getMember
        push '_rotation', 90, r:14, 0.0157
        divide
        add
        setMember
        branch label135
       label137:
        push 0, r:5, '9T54'
        callMethod
        pop
        push r:4
        decrement
        setRegister r:4
        pop
       label138:
        branch label133
       label139:
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push '1Y2ci', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:17
        pop
        push r:17, '_x', '*r'
        getVariable
        push '*5('
        getMember
        push r:'((', '*r'
        getVariable
        push '8G('
        getMember
        multiply
        add
        setMember
        push r:17, '_y', '*r'
        getVariable
        push '=4('
        getMember
        push r:')(', '*r'
        getVariable
        push '8G('
        getMember
        multiply
        subtract
        setMember
      end // of function 

      setMember
      push r:0, '[c4gL', 8
      setMember
      push r:0, '7yR,6(', 2, 2, 1, 0, 0, 0, 0, 0, 8
      initArray
      setMember
      push '*r'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '}-B2'
      function2 () (r:1='this')
        push '*r'
        getVariable
        push '*5(', '*r'
        getVariable
        push '=OA'
        getMember
        push '*r'
        getVariable
        push '8G('
        getMember
        push '*r'
        getVariable
        push '+9fc'
        getMember
        multiply
        subtract
        push 0.5
        multiply
        setMember
      end // of function 

      setMember
      push r:0, ';CYOh'
      function2 (r:2='}J', r:3='3GF', r:4='(v+') (r:1='this')
        push '=', r:'(v+', 16
        shiftRight
        push '0', r:'(v+', 8
        shiftRight
        push 255
        bitwiseAnd
        push ')', r:'(v+', 255
        bitwiseAnd
        push 3
        initObject
        setRegister r:5
        pop
        push r:'}J', 1, 'Color'
        new
        setRegister r:6
        pop
        push r:'3GF', 100
        divide
        setRegister r:7
        pop
        push 'ra', 100, r:'3GF'
        subtract
        int
        push 'ga', 100, r:'3GF'
        subtract
        int
        push 'ba', 100, r:'3GF'
        subtract
        int
        push 'aa', 100, 'rb', r:7, r:5, '='
        getMember
        multiply
        int
        push 'gb', r:7, r:5, '0'
        getMember
        multiply
        int
        push 'bb', r:7, r:5, ')'
        getMember
        multiply
        int
        push 'ab', 0, 8
        initObject
        setRegister r:8
        pop
        push r:8, 1, r:6, 'setTransform'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '2K'
      function2 (r:2='(', r:3=')', r:4='*') (r:1='this')
        push r:'*', r:')', r:'(', 2, 'Math'
        getVariable
        push 'max'
        callMethod
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        return
      end // of function 

      setMember
      push r:0, ')GiA'
      function2 (r:2='}', r:3='6lA') (r:1='this')
       label140:
        push r:'}', r:'6lA'
        lessThan
        not
        not
        branchIfTrue label141
        push r:'}', r:'6lA'
        subtract
        setRegister r:'}'
        pop
        branch label140
       label141:
        push r:'}', 0
        lessThan
        not
        branchIfTrue label142
        push r:'}', r:'6lA'
        add
        setRegister r:'}'
        pop
        branch label141
       label142:
        push r:'}'
        return
      end // of function 

      setMember
      push r:0, '0Yj1'
      function2 (r:2='}', r:3='6lA') (r:1='this')
       label143:
        push r:'}', r:'6lA'
        greaterThan
        not
        branchIfTrue label144
        push r:'}', r:'6lA', 2
        multiply
        subtract
        setRegister r:'}'
        pop
        branch label143
       label144:
        push r:'}', 0, r:'6lA'
        subtract
        lessThan
        not
        branchIfTrue label145
        push r:'}', r:'6lA', 2
        multiply
        add
        setRegister r:'}'
        pop
        branch label144
       label145:
        push r:'}'
        return
      end // of function 

      setMember
      push r:0, '=OA', 300
      setMember
      push r:0, '*OA', 300
      setMember
      push r:0, '+9fc', 10
      setMember
      push r:0, '70fd', 10
      setMember
      push r:0, ')L1h4(', 9
      setMember
      push r:0, '8G(', 24
      setMember
      push r:0, '=4(', 230
      setMember
      push r:0, '*5(', 0
      setMember
      push r:0, '{ cf;', 282
      setMember
      push r:0, '{*yxJ(', 320
      setMember
      push r:0, '7)dq;', 4
      setMember
      push r:0, '0pOD5', 180
      setMember
      push r:0, '}clB5(', 12
      setMember
      push r:0, '8qIVs', 0.22
      setMember
      push r:0, '=rKQ,(', FALSE
      setMember
      push r:0, '7s', 0, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push ',i0 ['
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push '-0]rl'
      function2 (r:2='}J') (r:1='this')
        push r:this, '-iB=', r:'}J'
        setMember
        push r:this, '-iB='
        getMember
        push '+KD', r:this
        setMember
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '7Qe;6'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '((', 0
        setMember
        push r:this, ')(', 0
        setMember
        push r:this, '-iB='
        getMember
        push '_x', -100
        setMember
        push r:this, '-iB='
        getMember
        push '_y', -100
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this')
        push r:this, '-iB='
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '-iB='
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this')
        push 0, r:this, '-iB='
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '7Qe;6'
        getMember
        push 'remove'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '4u=dZ'
      function2 () (r:1='this')
        push r:this, '-iB='
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '-iB='
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '}1A{_'
      function2 (r:2='8') (r:1='this')
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:3
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:4
        pop
        push r:3, r:3
        multiply
        push r:4, r:4
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        return
      end // of function 

      setMember
      push r:1, ')153L'
      function2 (r:2='8') (r:1='this')
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:3
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:4
        pop
        push r:3, r:4, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        return
      end // of function 

      setMember
      push r:1, '[j0D-'
      function2 (r:2='6') (r:1='this')
        push r:this, '(('
        getMember
        push 0, r:'6'
        subtract
        lessThan
        dup
        branchIfTrue label146
        pop
        push r:this, '(('
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        push r:'6'
        add
        greaterThan
       label146:
        dup
        branchIfTrue label147
        pop
        push r:this, ')('
        getMember
        push 0, r:'6'
        subtract
        lessThan
       label147:
        dup
        branchIfTrue label148
        pop
        push r:this, ')('
        getMember
        push '*r'
        getVariable
        push '*OA'
        getMember
        push r:'6'
        add
        greaterThan
       label148:
        return
      end // of function 

      setMember
      push ',v0X'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '+{eA+', 0.95
        setMember
        push r:this, '[b', 0
        setMember
        push r:this, ']b', 0
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '-0]rl'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '1Jr-,('
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '(KpGn'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label149
        push r:this, ']b', r:this, ']b'
        getMember
        push r:this, '(KpGn'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label149:
        push r:this, '+{eA+'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label150
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push r:this, '+{eA+'
        getMember
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:3
        pop
        push r:this, '[b', r:this, '[b'
        getMember
        push r:3
        multiply
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:3
        multiply
        setMember
       label150:
        push r:this, '((', r:this, '(('
        getMember
        push r:this, '[b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push r:this, ']b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
      end // of function 

      setMember
      push r:1, ';zS4(('
      function2 (r:2='8', r:3='*', r:4='62=') (r:1='this')
        push r:'8', 1, r:this, ')153L'
        callMethod
        setRegister r:5
        pop
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:6
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:7
        pop
        push r:this, '[b', r:this, '[b'
        getMember
        push r:'62=', r:6, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:'62=', r:7, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
      end // of function 

      setMember
      push '1Jr-,(', '-0]rl'
      getVariable
      push 'prototype'
      getMember
      push '87vE7('
      getMember
      setVariable
      push '*DzW'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, ',DBRf', 10
        setMember
        push r:this, 'scale', 100
        setMember
        push r:this, '-iB='
        getMember
        push '+KD', r:this
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '6b'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label151
        push r:this, '6b', r:this, '6b'
        getMember
        push r:this, '+{eA+'
        getMember
        multiply
        setMember
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '-iB='
        getMember
        push '_rotation'
        getMember
        push r:this, '6b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label151:
        push r:this, '2VhU6'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label155
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '2VhU6'
        getMember
        push r:this, ',DBRf'
        getMember
        lessThan
        not
        branchIfTrue label155
        push r:this, '2VhU6'
        getMember
        push r:this, ',DBRf'
        getMember
        divide
        setRegister r:3
        pop
        push r:this, '849kV'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label152
        branch label153
       label152:
        push r:this, '-iB='
        getMember
        push '_xscale', r:this, 'scale'
        getMember
        push r:3
        multiply
        setMember
        push r:this, '-iB='
        getMember
        push '_yscale', r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        setMember
        branch label154
       label153:
        push r:this, '-iB='
        getMember
        push '_alpha', r:3, 100
        multiply
        setMember
        branch label154
       label154:
        push r:this, '2VhU6'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label155
        push 0, r:this, '9T54'
        callMethod
        pop
       label155:
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '2u=W='
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push '2u=W=', '-0]rl'
      getVariable
      push 'prototype'
      getMember
      push '9T54'
      getMember
      setVariable
      push '4RW6x', ',v0X'
      getVariable
      push 'prototype'
      getMember
      push '87vE7('
      getMember
      setVariable
      push '+7U K'
      function2 (r:2='}J') (r:1='this')
        push r:this, ')2fr3', r:'}J'
        setMember
        push r:this, '}Zms3', 0, 'Array'
        new
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, ']1sj+'
      function2 () (r:1='this')
        push r:this, ')2fr3'
        getMember
        return
      end // of function 

      setMember
      push r:1, '-fC3a'
      function2 (r:2='59F') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'59F'
        getMember
        setRegister r:3
        pop
        push r:3, NULL
        equals
        not
        branchIfTrue label156
        push '9oK', 0, 'Array'
        new
        push '7-,', 0, 2
        initObject
        setRegister r:3
        pop
        push r:this, '}Zms3'
        getMember
        push r:'59F', r:3
        setMember
       label156:
        push r:3
        return
      end // of function 

      setMember
      push r:1, ']bu40'
      function2 (r:2='[-99') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'[-99'
        getMember
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:7
        pop
        push r:'[-99', 1000
        multiply
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label158
       label157:
        push r:6
        increment
        setRegister r:6
        pop
       label158:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label160
        push r:4, r:6
        getMember
        push '_name'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label159
        push r:8, r:7
        add
        push 1, r:4, r:6
        getMember
        push 'swapDepths'
        callMethod
        pop
        push r:4, r:7, r:4, r:6
        getMember
        setMember
        push r:7
        increment
        setRegister r:7
        pop
       label159:
        branch label157
       label160:
        push r:3, '7-,', r:7
        setMember
      end // of function 

      setMember
      push r:1, '*=_p_'
      function2 (r:2='*KB2', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label161
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'*KB2', 2, r:this, '*=_p_'
        callMethod
        return
       label161:
        push r:6, r:'[-99', 1000
        multiply
        add
        push r:'*KB2', r:this, ')2fr3'
        getMember
        push 3, '3Wt'
        getVariable
        push '7bSH*'
        callMethod
        setRegister r:7
        pop
        push r:5, r:6, r:7
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:7
        return
      end // of function 

      setMember
      push r:1, '18wU*'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push r:5, 1000
        equals
        not
        branchIfTrue label162
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', 1, r:this, '18wU*'
        callMethod
        return
       label162:
        push r:5, r:'[-99', 1000
        multiply
        add
        push r:this, ')2fr3'
        getMember
        push 2, '3Wt'
        getVariable
        push '-4*l(('
        callMethod
        setRegister r:6
        pop
        push r:4, r:5, r:6
        setMember
        push r:3, '7-,', r:3, '7-,'
        getMember
        increment
        setMember
        push r:6
        return
      end // of function 

      setMember
      push r:1, '(GbB}'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label163
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        return
       label163:
        push r:5, r:6, r:'}J'
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:6, r:'[-99', 1000
        multiply
        add
        return
      end // of function 

      setMember
      push r:1, '+2NA'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        push 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, r:'[-99'
        equals
        not
        branchIfTrue label164
        push UNDEF
        return
       label164:
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:5, '7-,'
        getMember
        setRegister r:7
        pop
        push 0
        setRegister r:8
        pop
        branch label166
       label165:
        push r:8
        increment
        setRegister r:8
        pop
       label166:
        push r:8, r:7
        lessThan
        not
        branchIfTrue label168
        push r:6, r:8
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label167
        push r:6, r:8, NULL
        setMember
        branch label168
       label167:
        branch label165
       label168:
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}oQA7'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label169
        push r:6, r:7, NULL
        setMember
        push r:'}J', 1, r:6, 'unshift'
        callMethod
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label169:
      end // of function 

      setMember
      push r:1, '08M8'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label171
        push r:6, r:7, NULL
        setMember
        push r:5, '7-,'
        getMember
        push 1000
        equals
        not
        branchIfTrue label170
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label170:
        push r:5, '7-,'
        getMember
        setRegister r:3
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:3, r:4, 1000
        multiply
        add
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
        push r:6, r:3, r:'}J'
        setMember
       label171:
      end // of function 

      setMember
      push r:1, 'clear'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:4
        pop
        branch label173
       label172:
        push r:4
        increment
        setRegister r:4
        pop
       label173:
        push r:4, r:3, '7-,'
        getMember
        lessThan
        not
        branchIfTrue label174
        push 0, r:5, r:4
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label172
       label174:
        push r:3, '7-,', 0
        setMember
      end // of function 

      setMember
      push r:1, '9(K ;'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push -99999999
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label176
       label175:
        push r:6
        increment
        setRegister r:6
        pop
       label176:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label184
        push r:4, r:6
        getMember
        setRegister r:9
        pop
        push r:9, '_y'
        getMember
        setRegister r:10
        pop
        push r:10, r:8
        lessThan
        not
        not
        branchIfTrue label177
        push r:10
        setRegister r:8
        pop
        branch label183
       label177:
        push r:6
        setRegister r:7
        pop
        branch label179
       label178:
        push r:7
        decrement
        setRegister r:7
        pop
       label179:
        push r:7, 0
        greaterThan
        not
        branchIfTrue label182
        push r:4, r:7, 1
        subtract
        getMember
        setRegister r:11
        pop
        push r:11, '_y'
        getMember
        push r:10
        greaterThan
        not
        branchIfTrue label180
        push r:4, r:7, r:11
        setMember
        push r:11, 1, r:9, 'swapDepths'
        callMethod
        pop
        branch label181
       label180:
        push r:4, r:7, r:9
        setMember
        branch label182
       label181:
        branch label178
       label182:
        push r:7, 0
        equals
        not
        branchIfTrue label183
        push r:4, 0, r:9
        setMember
       label183:
        branch label175
       label184:
      end // of function 

      setMember
      push r:1, ',}2X ('
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label186
       label185:
        push r:2
        increment
        setRegister r:2
        pop
       label186:
        push r:2, r:this, '}Zms3'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label187
        push r:2, 1, r:this, 'clear'
        callMethod
        pop
        branch label185
       label187:
      end // of function 

      setMember
      push 'flash'
      getVariable
      not
      not
      branchIfTrue label188
      push 'flash', 0, 'Object'
      new
      setVariable
     label188:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      not
      not
      branchIfTrue label189
      push 'flash'
      getVariable
      push 'filters', 0, 'Object'
      new
      setMember
     label189:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      push '{lN=R'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setMember
      push '5P0d3('
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '2{l)6'
        getMember
        push 'push'
        callMethod
        pop
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '+Da3+', r:this, '-iB='
        getMember
        push '+Da3+'
        getMember
        setMember
        push r:this, '-3iO-(', r:this, '-iB='
        getMember
        push '-3iO-('
        getMember
        setMember
        push r:this, '90', 1
        setMember
        push r:this, '-X', 10
        setMember
        push r:this, '60-', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 628
        multiply
        setMember
        push r:this, '{L=FN', 81
        setMember
        push r:this, ',4', 30
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '*DzW'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '[,Ypd'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '-X', 100, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push r:this, '-X'
        getMember
        push 2
        multiply
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setMember
        push r:this, '60-', r:this, '60-'
        getMember
        push r:this, '{L=FN'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 628
        modulo
        setMember
        push r:this, '{L=FN', r:this, '{L=FN'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.9, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        setMember
        push r:this, ',4', r:this, ',4'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.95, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        setMember
        push r:this, '-3iO-('
        getMember
        push '_xscale', 100, r:this, '60-'
        getMember
        push 0.01
        multiply
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:this, ',4'
        getMember
        multiply
        add
        push r:this, '90'
        getMember
        multiply
        setMember
        push r:this, '-3iO-('
        getMember
        push '_yscale', 100, r:this, '60-'
        getMember
        push 0.01
        multiply
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:this, ',4'
        getMember
        multiply
        add
        setMember
      end // of function 

      setMember
      push r:1, '}B)Y_'
      function2 (r:2='-X', r:3='(v+') (r:1='this')
        push r:this, '+Da3+'
        getMember
        push 'textColor', '5P0d3('
        getVariable
        push '=TZ6s'
        getMember
        push r:'(v+'
        getMember
        setMember
        push r:this, '+Da3+'
        getMember
        push 'text', r:'-X'
        toString
        setMember
        push r:this, '+Da3+'
        getMember
        push 'textWidth'
        getMember
        push 24
        add
        setRegister r:4
        pop
        push r:this, '90', r:4, 32
        divide
        setMember
        push r:this, '-3iO-('
        getMember
        push '_width', r:4
        setMember
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '2{l)6'
        getMember
        push 'remove'
        callMethod
        pop
        push r:this, 1, '+l Yy'
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push '+l Yy', '*DzW'
      getVariable
      push 'prototype'
      getMember
      push '9T54'
      getMember
      setVariable
      push '[,Ypd', '*DzW'
      getVariable
      push 'prototype'
      getMember
      push '87vE7('
      getMember
      setVariable
      push r:0, '=TZ6s', 15855745, 9881331, 16235153, 12233456, 8513602, 5
      initArray
      setMember
      push '{-kxL'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '87vE7('
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '4plQ5', '{-kxL'
        getVariable
        push '4plQ5'
        getMember
        increment
        setMember
        push 0, '3Wt'
        getVariable
        push 'getTimer'
        callMethod
        setRegister r:2
        pop
        push '{-kxL'
        getVariable
        push ';ILSy', r:2, '{-kxL'
        getVariable
        push '3R,QM'
        getMember
        subtract
        push 1000.0
        divide
        setMember
        push '{-kxL'
        getVariable
        push '3R,QM', r:2
        setMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        push '{-kxL'
        getVariable
        push ';y}-6('
        getMember
        lessThan
        not
        branchIfTrue label190
        push '{-kxL'
        getVariable
        push '-)Xd+', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        push '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        multiply
        push 1, '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        subtract
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        multiply
        add
        setMember
        branch label191
       label190:
        push '{-kxL'
        getVariable
        push ';ILSy', 1, '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        divide
        setMember
       label191:
        push '{-kxL'
        getVariable
        push '-V;B', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        setMember
      end // of function 

      setMember
      push r:0, 'fps'
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        return
      end // of function 

      setMember
      push r:0, '6GI,F', 32
      setMember
      push r:0, ';y}-6(', 0.5
      setMember
      push r:0, '3R,QM', 0, '3Wt'
      getVariable
      push 'getTimer'
      callMethod
      setMember
      push r:0, '[Ad;n', 0.95
      setMember
      push r:0, '-)Xd+', 1
      setMember
      push r:0, '-V;B', 1
      setMember
      push r:0, ';ILSy', 1
      setMember
      push r:0, '4plQ5', 0
      setMember
      push '5Ab'
      function2 () (r:1='this', r:2='super')
        push r:this, 'type', 0
        setMember
        push 0, r:super, UNDEF
        callMethod
        pop
        push 3
        setRegister r:3
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push 'play'
        getMember
        push 0
        getMember
        setRegister r:4
        pop
        push r:4, 20
        greaterThan
        not
        branchIfTrue label192
        push r:3
        increment
        setRegister r:3
        pop
       label192:
        push r:4, 60
        greaterThan
        not
        branchIfTrue label193
        push r:3
        increment
        setRegister r:3
        pop
       label193:
        push r:this, '(v+', r:3, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setMember
        push r:this, '-iB='
        getMember
        push 1, r:this, '3U*}=('
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '2e{I'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '3U*}=('
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', r:this, 2, ',2D4x'
        getVariable
        push 'call'
        callMethod
        pop
        push '1', 1, r:'}J', 'gotoAndStop'
        callMethod
        pop
        push r:this, '(v+'
        getMember
        push 1
        add
        setRegister r:4
        pop
        push r:this, '+G97+'
        getMember
        not
        branchIfTrue label194
        push r:4, 10
        add
        setRegister r:4
        pop
       label194:
        push r:4
        toString
        push 1, r:'}J', ')'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ';-[;H'
      function2 () (r:1='this', r:2='super')
        push 0
        setRegister r:3
        pop
        branch label196
       label195:
        push r:3
        increment
        setRegister r:3
        pop
       label196:
        push r:3, 3
        lessThan
        not
        branchIfTrue label197
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push ' gFFu', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:4
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:5
        pop
        push r:5, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:6
        pop
        push r:5, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:7
        pop
        push 0.5, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 3
        multiply
        add
        setRegister r:8
        pop
        push 5
        setRegister r:9
        pop
        push r:4, '((', r:this, '-iB='
        getMember
        push '_x'
        getMember
        push r:6, r:9
        multiply
        add
        setMember
        push r:4, ')(', r:this, '-iB='
        getMember
        push '_y'
        getMember
        push r:7, r:9
        multiply
        add
        setMember
        push r:4, '[b', r:6, r:8
        multiply
        setMember
        push r:4, ']b', r:7, r:8
        multiply
        setMember
        push r:4, '6b', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 16
        multiply
        setMember
        push r:4, '(KpGn', 0.1, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.2
        multiply
        add
        setMember
        push r:4, '-iB='
        getMember
        push '_rotation', r:5, 0.0157
        divide
        push 90
        add
        setMember
        push 20, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        add
        toString
        push 1, r:4, '-iB='
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push r:4, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 50
        multiply
        add
        setMember
        push r:4, 'scale', 50, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 100
        multiply
        add
        setMember
        push r:4, '849kV', 1
        setMember
        push r:4, '-iB='
        getMember
        push '_xscale', r:4, 'scale'
        getMember
        setMember
        push r:4, '-iB='
        getMember
        push '_yscale', r:4, 'scale'
        getMember
        setMember
        branch label195
       label197:
        push r:this, 1, '5epK)'
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push '5epK)', '2e{I'
      getVariable
      push 'prototype'
      getMember
      push ';-[;H'
      getMember
      setVariable
      push '(WBt)'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ']}Ou;(', 1
      setMember
      push r:0, '3I0pG', 2
      setMember
      push r:0, '{;7F4', 3
      setMember
      push r:0, '8U(wu', 4
      setMember
      push r:0, '}[cpB', 5
      setMember
      push r:0, '9xv]A', 6
      setMember
      push r:0, '{yQ=Q', 7
      setMember
      push r:0, '+,W', 8
      setMember
      push r:0, '2y+dV', 9
      setMember
      push r:0, '(tBee', 10
      setMember
      push r:0, '3)i[=', 11
      setMember
      push r:0, ' J3IC', 12
      setMember
      push r:0, '[6jRc', 13
      setMember
      push r:0, ')8Fyj', 14
      setMember
      push '44{N'
      function2 (r:2='}J') (r:1='this')
        push 0, '*r'
        getVariable
        push '}-B2'
        callMethod
        pop
        push '*r'
        getVariable
        push '+-(0', r:this
        setMember
        push r:this, '32', r:'}J', 1, '+7U K'
        new
        setMember
        push r:this, '86{p(', 0, 'Array'
        new
        setMember
        push r:this, '7Qe;6', 0, 'Array'
        new
        setMember
        push r:this, '2{l)6', 0, 'Array'
        new
        setMember
        push r:this, ';+', '44{N'
        getVariable
        push '4MvcB'
        getMember
        push '0o*6', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '+Hp()', '44{N'
        getVariable
        push ';B2p1'
        getMember
        push '{_V*B', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push '44{N'
        getVariable
        push '4MvcB'
        getMember
        push '4b6DE', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:3
        pop
        push r:3, '_y', '*r'
        getVariable
        push '=4('
        getMember
        setMember
        push r:this, '-wYLG', FALSE
        setMember
        push r:this, ';rk;*(', 1, 1
        initArray
        setMember
        push r:this, '+cO{A(', 1, 1
        initArray
        setMember
        push r:this, '+I;}1', 1, 1
        initArray
        setMember
        push r:this, 'play', 0, 1
        initArray
        setMember
       label198:
        push TRUE
        not
        branchIfTrue label206
        push TRUE
        setRegister r:4
        pop
        push 0, r:this, '4pw(b'
        callMethod
        pop
        push 0, r:this, '7LxWY'
        callMethod
        setRegister r:5
        pop
        push 0
        setRegister r:6
        pop
        branch label200
       label199:
        push r:6
        increment
        setRegister r:6
        pop
       label200:
        push r:6, r:5, 'length'
        getMember
        lessThan
        not
        branchIfTrue label204
        push r:5, r:6
        getMember
        setRegister r:7
        pop
       label201:
        push r:7, NULL
        equals
        not
        dup
        not
        branchIfTrue label202
        pop
        push r:7, 'length'
        getMember
        push '*r'
        getVariable
        push '7)dq;'
        getMember
        lessThan
        not
       label202:
        not
        branchIfTrue label203
        push r:7, 'length'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:8
        pop
        push r:7, r:8
        getMember
        setRegister r:9
        pop
        push r:9, '+G97+', TRUE
        setMember
        push r:9, '-iB='
        getMember
        push 1, r:9, '3U*}=('
        callMethod
        pop
        push 1, r:8, 2, r:7, 'splice'
        callMethod
        pop
        branch label201
       label203:
        branch label199
       label204:
        push r:4
        not
        branchIfTrue label205
        branch label206
       label205:
        branch label198
       label206:
        push 0, r:this, '-43zH('
        callMethod
        pop
        push 1, 1, r:this, '5Hy6b'
        callMethod
        pop
        push '*r'
        getVariable
        push '=rKQ,('
        getMember
        not
        branchIfTrue label207
        push 0, r:this, '+P9;a'
        callMethod
        pop
       label207:
        push r:this, ';+'
        getMember
        push '0o()'
        getMember
        push '_height', '*r'
        getVariable
        push '*OA'
        getMember
        push '*r'
        getVariable
        push '=4('
        getMember
        subtract
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '-43zH('
      function2 () (r:1='this')
        push r:this, '5(,lT', 0, ')GvR ('
        new
        setMember
      end // of function 

      setMember
      push r:1, '+P9;a'
      function2 () (r:1='this')
        push r:this, '0 hf4(', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:2
        pop
        branch label209
       label208:
        push r:2
        increment
        setRegister r:2
        pop
       label209:
        push r:2, 2
        lessThan
        not
        branchIfTrue label210
        push '44{N'
        getVariable
        push ';B2p1'
        getMember
        push '*oNWM', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:3
        pop
        push r:3, '_x', r:2, '*r'
        getVariable
        push '=OA'
        getMember
        push 30
        subtract
        multiply
        setMember
        push 0, r:3, 'stop'
        callMethod
        pop
        push r:3, 1, r:this, '0 hf4('
        getMember
        push 'push'
        callMethod
        pop
        branch label208
       label210:
      end // of function 

      setMember
      push r:1, '5Hy6b'
      function2 (r:2='[') (r:1='this')
        push r:this, '=kIA', r:'['
        setMember
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label211
        push r:0, 1
        strictEquals
        branchIfTrue label225
        push r:0, 2
        strictEquals
        branchIfTrue label234
        push r:0, 3
        strictEquals
        branchIfTrue label235
        push r:0, 10
        strictEquals
        branchIfTrue label236
        push r:0, 11
        strictEquals
        branchIfTrue label237
        branch label238
       label211:
        push 0, r:this, '7LxWY'
        callMethod
        setRegister r:3
        pop
        push r:this, ' eo6*', 0, 'Array'
        new
        setMember
        push r:this, '3Sv_g', 0, 'Array'
        new
        setMember
        push r:this, '+pESK(', '*r'
        getVariable
        push '7s'
        getMember
        setMember
        push 0
        setRegister r:4
        pop
        branch label213
       label212:
        push r:4
        increment
        setRegister r:4
        pop
       label213:
        push r:4, r:3, 'length'
        getMember
        lessThan
        not
        branchIfTrue label219
        push r:3, r:4
        getMember
        setRegister r:5
        pop
        push r:5, 'length'
        getMember
        push '*r'
        getVariable
        push '7)dq;'
        getMember
        lessThan
        not
        dup
        not
        branchIfTrue label214
        pop
        push r:5, NULL
        equals
        not
       label214:
        not
        branchIfTrue label218
        push 2, r:5, 'length'
        getMember
        push 3
        multiply
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        push 0.1
        multiply
        int
        push 25
        multiply
        push r:this, '+I;}1'
        getMember
        push 0
        getMember
        multiply
        setRegister r:6
        pop
        push '*v9F', 99999, '[d9F', 0, '6m9G', 99999, '-Y9G', 0, 4
        initObject
        setRegister r:7
        pop
        push 0
        setRegister r:8
        pop
        branch label216
       label215:
        push r:8
        increment
        setRegister r:8
        pop
       label216:
        push r:8, r:5, 'length'
        getMember
        lessThan
        not
        branchIfTrue label217
        push r:5, r:8
        getMember
        setRegister r:9
        pop
        push r:7, '*v9F', r:9, '-iB='
        getMember
        push '_x'
        getMember
        push r:7, '*v9F'
        getMember
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setMember
        push r:7, '6m9G', r:9, '-iB='
        getMember
        push '_y'
        getMember
        push r:7, '6m9G'
        getMember
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setMember
        push r:7, '[d9F', r:9, '-iB='
        getMember
        push '_x'
        getMember
        push r:7, '[d9F'
        getMember
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        setMember
        push r:7, '-Y9G', r:9, '-iB='
        getMember
        push '_y'
        getMember
        push r:7, '-Y9G'
        getMember
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        setMember
        push r:9, 1, r:this, ' eo6*'
        getMember
        push 'push'
        callMethod
        pop
        branch label215
       label217:
        push '((', r:7, '*v9F'
        getMember
        push r:7, '[d9F'
        getMember
        add
        push 0.5
        multiply
        push ')(', r:7, '6m9G'
        getMember
        push r:7, '-Y9G'
        getMember
        add
        push 0.5
        multiply
        push '-X', r:6, '(v+', r:5, 0
        getMember
        push '(v+'
        getMember
        push 4
        initObject
        push 1, r:this, '3Sv_g'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '+pESK(', r:6, 1, ';ndCG'
        getVariable
        push '-Q)9)'
        callMethod
        push r:this, '+pESK('
        getMember
        push 2, ';ndCG'
        getVariable
        push '3B(*'
        callMethod
        setMember
       label218:
        branch label212
       label219:
        push r:this, ' eo6*'
        getMember
        push 'length'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label221
        push r:this, '2VhU6', '*r'
        getVariable
        push '}clB5('
        getMember
        push 1
        initArray
        setMember
        push r:this, '+I;}1', r:this, '+I;}1'
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push r:this, ',qE'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label220
        push '1[111', 1, r:this, ',qE'
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
       label220:
        branch label224
       label221:
        push r:this, '+I;}1', 1, 1
        initArray
        setMember
        push 0, r:this, ',uX(0'
        callMethod
        not
        branchIfTrue label222
        push 10, 1, r:this, '5Hy6b'
        callMethod
        pop
        branch label224
       label222:
        push r:this, '-wYLG'
        getMember
        not
        branchIfTrue label223
        push 0, r:this, '3k)0e'
        callMethod
        pop
        push 1, 1, r:this, '5Hy6b'
        callMethod
        pop
        branch label224
       label223:
        push 2, 1, r:this, '5Hy6b'
        callMethod
        pop
       label224:
        branch label238
        branch label238
       label225:
        push r:this, '17dU+', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:10
        pop
        branch label227
       label226:
        push r:10
        increment
        setRegister r:10
        pop
       label227:
        push r:10, '*r'
        getVariable
        push '+9fc'
        getMember
        lessThan
        not
        branchIfTrue label233
        push 0
        setRegister r:11
        pop
        branch label229
       label228:
        push r:11
        increment
        setRegister r:11
        pop
       label229:
        push r:11, '*r'
        getVariable
        push '70fd'
        getMember
        lessThan
        not
        branchIfTrue label232
        push r:this, ';AH0'
        getMember
        push r:10
        getMember
        push r:11
        getMember
        setRegister r:12
        pop
        push r:12, NULL
        equals
        not
        dup
        not
        branchIfTrue label230
        pop
        push r:11, 1
        subtract
        push r:10, 2, r:this, '77ldJ('
        callMethod
       label230:
        not
        branchIfTrue label231
        push r:11, 1
        subtract
        push r:10, 2, r:12, '(j;o7'
        callMethod
        pop
        push r:12, '}2', r:12, '}2'
        getMember
        push '*r'
        getVariable
        push '8G('
        getMember
        subtract
        setMember
        push r:12, 1, r:this, '17dU+'
        getMember
        push 'push'
        callMethod
        pop
       label231:
        branch label228
       label232:
        branch label226
       label233:
        branch label238
       label234:
        push 0, r:this, '5(,lT'
        getMember
        push '8Yr-b'
        callMethod
        pop
        branch label238
       label235:
        push r:this, 'play', r:this, 'play'
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push r:this, '5(,lT'
        getMember
        push '=kIA', 0
        setMember
        push r:this, '2J2xZ', '*r'
        getVariable
        push '0pOD5'
        getMember
        push 1
        initArray
        setMember
        branch label238
       label236:
        push 0, r:this, '5(,lT'
        getMember
        push '7-yV;('
        callMethod
        pop
        branch label238
       label237:
        push r:this, '2VhU6', 30, 1
        initArray
        setMember
        branch label238
       label238:
      end // of function 

      setMember
      push r:1, ',uX(0'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label240
       label239:
        push r:2
        increment
        setRegister r:2
        pop
       label240:
        push r:2, '*r'
        getVariable
        push '+9fc'
        getMember
        lessThan
        not
        branchIfTrue label242
        push r:this, ';AH0'
        getMember
        push r:2
        getMember
        push '*r'
        getVariable
        push ')L1h4('
        getMember
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label241
        push TRUE
        return
       label241:
        branch label239
       label242:
        push FALSE
        return
      end // of function 

      setMember
      push r:1, '4pw(b'
      function2 () (r:1='this')
        push r:this, ';AH0', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:2
        pop
        branch label244
       label243:
        push r:2
        increment
        setRegister r:2
        pop
       label244:
        push r:2, '*r'
        getVariable
        push '+9fc'
        getMember
        lessThan
        not
        branchIfTrue label249
        push r:this, ';AH0'
        getMember
        push r:2, 0, 'Array'
        new
        setMember
        push 0
        setRegister r:3
        pop
        branch label246
       label245:
        push r:3
        increment
        setRegister r:3
        pop
       label246:
        push r:3, '*r'
        getVariable
        push '70fd'
        getMember
        lessThan
        not
        branchIfTrue label248
        push r:this, ';AH0'
        getMember
        push r:2
        getMember
        push r:3, NULL
        setMember
        push r:3, 4
        lessThan
        not
        branchIfTrue label247
        push 0, '5Ab'
        new
        setRegister r:4
        pop
        push r:3, r:2, 2, r:4, '(j;o7'
        callMethod
        pop
        push 0, r:4, '4u=dZ'
        callMethod
        pop
       label247:
        branch label245
       label248:
        branch label243
       label249:
      end // of function 

      setMember
      push r:1, '0D 6'
      function2 () (r:1='this')
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label250
        push r:0, 1
        strictEquals
        branchIfTrue label258
        push r:0, 2
        strictEquals
        branchIfTrue label268
        push r:0, 3
        strictEquals
        branchIfTrue label269
        push r:0, 10
        strictEquals
        branchIfTrue label270
        push r:0, 11
        strictEquals
        branchIfTrue label271
        branch label273
       label250:
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        push 1
        initArray
        setMember
        push 100, 100, 1, r:this, '2VhU6'
        getMember
        push 0
        getMember
        push '*r'
        getVariable
        push '}clB5('
        getMember
        divide
        subtract
        multiply
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:2
        pop
        push r:this, '2VhU6'
        getMember
        push 0
        getMember
        push 0
        lessThan
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        branch label252
       label251:
        push r:4
        increment
        setRegister r:4
        pop
       label252:
        push r:4, r:this, ' eo6*'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label255
        push r:this, ' eo6*'
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push r:3
        not
        branchIfTrue label253
        push 0, r:5, ';-[;H'
        callMethod
        pop
        push 0, r:5, '8[xNO'
        callMethod
        pop
        branch label254
       label253:
        push 16777215, r:2, r:5, '-iB='
        getMember
        push 3, '*r'
        getVariable
        push ';CYOh'
        callMethod
        pop
       label254:
        branch label251
       label255:
        push r:3
        not
        branchIfTrue label257
        push 0, r:this, '+nab'
        callMethod
        pop
        push r:this, '+pESK('
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push r:this, '+I;}1'
        getMember
        push 0
        getMember
        push 3
        lessThan
        not
        not
        branchIfTrue label256
        push 0, r:this, '(hJ)a'
        callMethod
        pop
       label256:
        push 1, 1, r:this, '5Hy6b'
        callMethod
        pop
       label257:
        branch label273
       label258:
        push 0
        setRegister r:6
        pop
        branch label260
       label259:
        push r:6
        increment
        setRegister r:6
        pop
       label260:
        push r:6, r:this, '17dU+'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label265
        push r:this, '17dU+'
        getMember
        push r:6
        getMember
        setRegister r:7
        pop
        push r:7, '}2', r:7, '}2'
        getMember
        push 10, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label261:
        push r:7, '}2'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label264
        push r:7, ')('
        getMember
        push 1
        subtract
        push r:7, '(('
        getMember
        push 2, r:this, '77ldJ('
        callMethod
        not
        branchIfTrue label262
        push r:7, ')('
        getMember
        push 1
        subtract
        push r:7, '(('
        getMember
        push 2, r:7, '(j;o7'
        callMethod
        pop
        push r:7, '}2', r:7, '}2'
        getMember
        push '*r'
        getVariable
        push '8G('
        getMember
        subtract
        setMember
        branch label263
       label262:
        push r:7, '}2', 0
        setMember
        push 1, r:6, r:6
        decrement
        setRegister r:6
        pop
        push 2, r:this, '17dU+'
        getMember
        push 'splice'
        callMethod
        pop
       label263:
        branch label261
       label264:
        push 0, r:7, '4u=dZ'
        callMethod
        pop
        branch label259
       label265:
        push r:this, '17dU+'
        getMember
        push 'length'
        getMember
        push 0
        equals
        not
        branchIfTrue label267
        push r:this, '-wYLG'
        getMember
        not
        branchIfTrue label266
        push 0, 1, r:this, '5Hy6b'
        callMethod
        pop
        branch label267
       label266:
        push 2, 1, r:this, '5Hy6b'
        callMethod
        pop
       label267:
        branch label273
       label268:
        push r:this, '-wYLG', TRUE
        setMember
        push 0, r:this, '5(,lT'
        getMember
        push ')3 =h'
        callMethod
        pop
        branch label273
       label269:
        push 0, r:this, '5(,lT'
        getMember
        push '505t0'
        callMethod
        pop
        push r:this, '2J2xZ', r:this, '2J2xZ'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        push 1
        initArray
        setMember
        push r:this, '+cO{A(', r:this, '2J2xZ'
        getMember
        push 0
        getMember
        push '*r'
        getVariable
        push '0pOD5'
        getMember
        divide
        push 1
        initArray
        setMember
        branch label273
       label270:
        push 0, r:this, '5(,lT'
        getMember
        push '6*WrD('
        callMethod
        pop
        branch label273
       label271:
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        push 1
        initArray
        setMember
        push r:this, '2VhU6'
        getMember
        push 0
        getMember
        push 0
        lessThan
        not
        branchIfTrue label272
        push 0
        initObject
        push 1, ';ndCG'
        getVariable
        push '7T4cF('
        callMethod
        pop
       label272:
        branch label273
       label273:
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        push 0.02
        lessThan
        not
        branchIfTrue label274
        push r:this, '86{p('
        getMember
        push r:this, '86{p('
        getMember
        push 'length'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        getMember
        setRegister r:8
        pop
        push r:8, '(v+'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label274
        push 0, r:8, '-iB='
        getMember
        push 'play'
        callMethod
        pop
       label274:
        push 0, r:this, ']2dH]'
        callMethod
        pop
        push 0
        setRegister r:9
        pop
        branch label276
       label275:
        push r:9
        increment
        setRegister r:9
        pop
       label276:
        push r:9, r:this, '7Qe;6'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label277
        push 0, r:this, '7Qe;6'
        getMember
        push r:9
        getMember
        push '87vE7('
        callMethod
        pop
        branch label275
       label277:
        push '*r'
        getVariable
        push '=rKQ,('
        getMember
        not
        branchIfTrue label280
        push r:this, '+cO{A('
        getMember
        push 0
        getMember
        push r:this, ';rk;*('
        getMember
        push 0
        getMember
        subtract
        setRegister r:10
        pop
        push r:this, ';rk;*(', r:this, ';rk;*('
        getMember
        push 0
        getMember
        push r:10, 0.1
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 1
        initArray
        setMember
        push 0
        setRegister r:11
        pop
        branch label279
       label278:
        push r:11
        increment
        setRegister r:11
        pop
       label279:
        push r:11, r:this, '0 hf4('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label280
        push r:this, '0 hf4('
        getMember
        push r:11
        getMember
        setRegister r:12
        pop
        push 1, r:this, ';rk;*('
        getMember
        push 0
        getMember
        push 19
        multiply
        int
        add
        toString
        push 1, r:12, 'gotoAndStop'
        callMethod
        pop
        branch label278
       label280:
      end // of function 

      setMember
      push r:1, '3k)0e'
      function2 () (r:1='this')
        push 0, 'Array'
        new
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label282
       label281:
        push r:3
        increment
        setRegister r:3
        pop
       label282:
        push r:3, '*r'
        getVariable
        push '+9fc'
        getMember
        lessThan
        not
        branchIfTrue label292
        push 0
        setRegister r:4
        pop
        branch label284
       label283:
        push r:4
        increment
        setRegister r:4
        pop
       label284:
        push r:4, '*r'
        getVariable
        push '+9fc'
        getMember
        lessThan
        not
        branchIfTrue label291
        push r:this, ';AH0'
        getMember
        push r:3
        getMember
        push r:4
        getMember
        push NULL
        equals
        not
        branchIfTrue label290
        push 0
        setRegister r:5
        pop
        branch label286
       label285:
        push r:5
        increment
        setRegister r:5
        pop
       label286:
        push r:5, r:2, 'length'
        getMember
        greaterThan
        not
        not
        branchIfTrue label289
        push r:2, r:5
        getMember
        setRegister r:6
        pop
        push r:6, ')('
        getMember
        push r:4
        greaterThan
        dup
        branchIfTrue label287
        pop
        push r:5, r:2, 'length'
        getMember
        equals
       label287:
        not
        branchIfTrue label288
        push '((', r:3, ')(', r:4, 2
        initObject
        push r:5, 2, r:2, 'insert'
        callMethod
        pop
        branch label289
       label288:
        branch label285
       label289:
        branch label291
       label290:
        branch label283
       label291:
        branch label281
       label292:
        push 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push 'play'
        getMember
        push 0
        getMember
        push 0.1
        multiply
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        int
        add
        setRegister r:7
        pop
        push 0
        setRegister r:8
        pop
        branch label294
       label293:
        push r:8
        increment
        setRegister r:8
        pop
       label294:
        push r:8, r:7
        lessThan
        not
        branchIfTrue label296
        push r:2, r:8
        getMember
        setRegister r:9
        pop
        push r:9, ')('
        getMember
        push '*r'
        getVariable
        push ')L1h4('
        getMember
        push 1
        subtract
        lessThan
        not
        branchIfTrue label295
        push 0, '5Ab'
        new
        setRegister r:10
        pop
        push '*r'
        getVariable
        push ')L1h4('
        getMember
        push r:9, '(('
        getMember
        push 2, r:10, '(j;o7'
        callMethod
        pop
        push r:10, '+G97+', TRUE
        setMember
        push r:10, '-iB='
        getMember
        push 1, r:10, '3U*}=('
        callMethod
        pop
        push 0, r:10, '4u=dZ'
        callMethod
        pop
       label295:
        branch label293
       label296:
        push r:this, '-wYLG', FALSE
        setMember
      end // of function 

      setMember
      push r:1, '+nab'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label298
       label297:
        push r:2
        increment
        setRegister r:2
        pop
       label298:
        push r:2, r:this, '3Sv_g'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label299
        push r:this, '3Sv_g'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push '*xjm_', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '5P0d3('
        new
        setRegister r:4
        pop
        push r:4, '((', r:3, '(('
        getMember
        setMember
        push r:4, ')(', r:3, ')('
        getMember
        setMember
        push r:4, '2VhU6', 28
        setMember
        push r:4, '849kV', 0
        setMember
        push r:4, ',DBRf', 6
        setMember
        push r:4, ']b', -0.2
        setMember
        push r:3, '(v+'
        getMember
        push r:3, '-X'
        getMember
        push 2, r:4, '}B)Y_'
        callMethod
        pop
        branch label297
       label299:
      end // of function 

      setMember
      push r:1, '7LxWY'
      function2 () (r:1='this')
        push 0, 'Array'
        new
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label301
       label300:
        push r:3
        increment
        setRegister r:3
        pop
       label301:
        push r:3, r:this, '86{p('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label302
        push r:this, '86{p('
        getMember
        push r:3
        getMember
        push ';d3', NULL
        setMember
        branch label300
       label302:
        push 0
        setRegister r:4
        pop
        branch label304
       label303:
        push r:4
        increment
        setRegister r:4
        pop
       label304:
        push r:4, r:this, '86{p('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label317
        push r:this, '86{p('
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push r:5, '+G97+'
        getMember
        not
        not
        branchIfTrue label316
        push r:5, ';d3'
        getMember
        push NULL
        equals
        not
        branchIfTrue label305
        push r:5, ';d3', r:2, 'length'
        getMember
        setMember
        push r:5, 1
        initArray
        push 1, r:2, 'push'
        callMethod
        pop
       label305:
        push 0
        setRegister r:6
        pop
        branch label307
       label306:
        push r:6
        increment
        setRegister r:6
        pop
       label307:
        push r:6, '44{N'
        getVariable
        push ';MXK'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label316
        push r:5, '(('
        getMember
        push '44{N'
        getVariable
        push ';MXK'
        getMember
        push r:6
        getMember
        push 0
        getMember
        add
        setRegister r:7
        pop
        push r:5, ')('
        getMember
        push '44{N'
        getVariable
        push ';MXK'
        getMember
        push r:6
        getMember
        push 1
        getMember
        add
        setRegister r:8
        pop
        push r:this, ';AH0'
        getMember
        push r:7
        getMember
        push r:8
        getMember
        setRegister r:9
        pop
        push r:5, '(v+'
        getMember
        push r:9, '(v+'
        getMember
        equals
        dup
        not
        branchIfTrue label308
        pop
        push r:5, '(v+'
        getMember
        push NULL
        equals
        not
       label308:
        dup
        not
        branchIfTrue label309
        pop
        push r:9, '+G97+'
        getMember
        not
       label309:
        not
        branchIfTrue label315
        push r:9, ';d3'
        getMember
        push NULL
        equals
        not
        branchIfTrue label310
        push r:9, ';d3', r:5, ';d3'
        getMember
        setMember
        push r:9, 1, r:2, r:5, ';d3'
        getMember
        getMember
        push 'push'
        callMethod
        pop
        branch label315
       label310:
        push r:9, ';d3'
        getMember
        push r:5, ';d3'
        getMember
        equals
        not
        branchIfTrue label311
        branch label315
       label311:
        push r:9, ';d3'
        getMember
        setRegister r:10
        pop
        push r:2, r:10
        getMember
        setRegister r:11
        pop
        push 0
        setRegister r:12
        pop
        branch label313
       label312:
        push r:12
        increment
        setRegister r:12
        pop
       label313:
        push r:12, r:11, 'length'
        getMember
        lessThan
        not
        branchIfTrue label314
        push r:11, r:12
        getMember
        setRegister r:13
        pop
        push r:13, ';d3', r:5, ';d3'
        getMember
        setMember
        push r:13, 1, r:2, r:5, ';d3'
        getMember
        getMember
        push 'push'
        callMethod
        pop
        branch label312
       label314:
        push r:2, r:10, NULL
        setMember
       label315:
        branch label306
       label316:
        branch label303
       label317:
        push r:2
        return
      end // of function 

      setMember
      push r:1, ')+plo'
      function2 () (r:1='this')
      end // of function 

      setMember
      push r:1, ']2dH]'
      function2 () (r:1='this')
        push 32
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label319
       label318:
        push r:3
        increment
        setRegister r:3
        pop
       label319:
        push r:3, r:this, '2{l)6'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label324
        push r:this, '2{l)6'
        getMember
        push r:3
        getMember
        setRegister r:4
        pop
        push r:3, 1
        add
        setRegister r:5
        pop
        branch label321
       label320:
        push r:5
        increment
        setRegister r:5
        pop
       label321:
        push r:5, r:this, '2{l)6'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label323
        push r:this, '2{l)6'
        getMember
        push r:5
        getMember
        setRegister r:6
        pop
        push r:6, 1, r:4, '}1A{_'
        callMethod
        setRegister r:7
        pop
        push r:7, r:2
        lessThan
        not
        branchIfTrue label322
        push r:2, r:7
        subtract
        push 0.5
        multiply
        setRegister r:8
        pop
        push r:6, 1, r:4, ')153L'
        callMethod
        setRegister r:9
        pop
        push r:9, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:10
        pop
        push r:9, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:11
        pop
        push r:4, '((', r:4, '(('
        getMember
        push r:10, r:8
        multiply
        subtract
        setMember
        push r:4, ')(', r:4, ')('
        getMember
        push r:11, r:8
        multiply
        subtract
        setMember
        push r:6, '((', r:6, '(('
        getMember
        push r:10, r:8
        multiply
        add
        setMember
        push r:6, ')(', r:6, ')('
        getMember
        push r:11, r:8
        multiply
        add
        setMember
       label322:
        branch label320
       label323:
        branch label318
       label324:
      end // of function 

      setMember
      push r:1, '77ldJ('
      function2 (r:2='((', r:3=')(') (r:1='this')
        push r:this, ';AH0'
        getMember
        push r:'(('
        getMember
        push r:')('
        getMember
        push NULL
        equals
        dup
        not
        branchIfTrue label325
        pop
        push r:')(', 0
        lessThan
        not
       label325:
        return
      end // of function 

      setMember
      push r:1, '(hJ)a'
      function2 () (r:1='this')
        push r:this, ',qE', '44{N'
        getVariable
        push ';B2p1'
        getMember
        push '3z}u{', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, ',qE'
        getMember
        push '(Erk5', 1, 1, '$x', 'substring'
        callMethod
        push r:this, '+I;}1'
        getMember
        push 0
        getMember
        push 1
        subtract
        toString
        add
        setMember
      end // of function 

      setMember
      push r:0, '4MvcB', 1
      setMember
      push r:0, '86Itb', 2
      setMember
      push r:0, '(h4SU', 3
      setMember
      push r:0, '{YJfb', 4
      setMember
      push r:0, ';B2p1', 5
      setMember
      push r:0, ';MXK', 0, -1, 2
      initArray
      push 1, 0, 2
      initArray
      push 2
      initArray
      setMember
      push '980Sb'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '}-B2'
      function2 (r:2='}J') (r:1='this')
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        not
        branchIfTrue label326
        push UNDEF
        return
       label326:
        push '980Sb'
        getVariable
        push ')2fr3', r:'}J'
        setMember
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        branchIfTrue label327
        push '980Sb'
        getVariable
        push 'mode', '980Sb'
        getVariable
        push ')2fr3'
        getMember
        push 1, '44{N'
        new
        setMember
       label327:
      end // of function 

      setMember
      push r:0, '0D 6'
      function2 () (r:1='this')
        push 0, '{-kxL'
        getVariable
        push '87vE7('
        callMethod
        pop
        push 0, '980Sb'
        getVariable
        push 'mode'
        getMember
        push '0D 6'
        callMethod
        pop
      end // of function 

      setMember
    end // of frame 0
  end // of defineMovieClip 230
  
  exportAssets
    230 as '90D*'
  end // of exportAssets
end
