movie '5e3f3dfb6d7004ac9d0334b5a3a9ff8b.swf' compressed // flash 8, total frames: 1, frame rate: 40 fps, 700x480 px


  defineMovieClip 2 // total frames: 1
  end // of defineMovieClip 2

  defineMovieClip 3 // total frames: 45

    frame 44
      push 0.0, 'this'
      getVariable
      push 'removeMovieClip'
      callMethod
      pop
    end // of frame 44
  end // of defineMovieClip 3
  
  exportAssets
    3 as '63G9'
  end // of exportAssets

  defineMovieClip 5 // total frames: 1
  end // of defineMovieClip 5

  defineMovieClip 6 // total frames: 25
  end // of defineMovieClip 6
  
  exportAssets
    6 as '[PAv'
  end // of exportAssets

  defineMovieClip 22 // total frames: 16

    frame 15
      push 0.0, 'this'
      getVariable
      push 'removeMovieClip'
      callMethod
      pop
    end // of frame 15
  end // of defineMovieClip 22
  
  exportAssets
    22 as '8Ugi)'
  end // of exportAssets

  defineMovieClip 29 // total frames: 6
  end // of defineMovieClip 29

  defineMovieClip 32 // total frames: 1
  end // of defineMovieClip 32

  defineMovieClip 34 // total frames: 1
  end // of defineMovieClip 34

  defineMovieClip 35 // total frames: 25
  end // of defineMovieClip 35

  defineMovieClip 36 // total frames: 14
  end // of defineMovieClip 36
  
  exportAssets
    36 as '[5(-'
  end // of exportAssets

  defineMovieClip 38 // total frames: 1
  end // of defineMovieClip 38

  defineMovieClip 40 // total frames: 1
  end // of defineMovieClip 40

  defineMovieClip 41 // total frames: 25
  end // of defineMovieClip 41

  defineMovieClip 43 // total frames: 1
  end // of defineMovieClip 43

  defineMovieClip 44 // total frames: 25

    frame 24
      push 0.0, 'this'
      getVariable
      push 'removeMovieClip'
      callMethod
      pop
    end // of frame 24
  end // of defineMovieClip 44
  
  exportAssets
    44 as ');=0I'
  end // of exportAssets

  defineMovieClip 53 // total frames: 9

    frame 8
      push 0.0, 'this'
      getVariable
      push 'removeMovieClip'
      callMethod
      pop
    end // of frame 8
  end // of defineMovieClip 53
  
  exportAssets
    53 as ']zpu5'
  end // of exportAssets

  defineMovieClip 55 // total frames: 1
  end // of defineMovieClip 55

  defineMovieClip 57 // total frames: 1
  end // of defineMovieClip 57

  defineMovieClip 59 // total frames: 1
  end // of defineMovieClip 59

  defineMovieClip 61 // total frames: 1
  end // of defineMovieClip 61

  defineMovieClip 63 // total frames: 1
  end // of defineMovieClip 63

  defineMovieClip 65 // total frames: 1
  end // of defineMovieClip 65

  defineMovieClip 66 // total frames: 2

    frame 0
      constants '4', '_xscale', '_parent'  
      push '4'
      getVariable
      push '_xscale', '_parent'
      getVariable
      push '_xscale'
      getMember
      setMember
    end // of frame 0

    frame 1
      push '', 4
      getProperty
      push 1
      subtract
      gotoAndPlay
    end // of frame 1
  end // of defineMovieClip 66

  defineMovieClip 76 // total frames: 10
  end // of defineMovieClip 76

  defineMovieClip 89 // total frames: 2

    frame 0
      constants '4', '_xscale', '_parent'  
      push '4'
      getVariable
      push '_xscale', '_parent'
      getVariable
      push '_xscale'
      getMember
      setMember
    end // of frame 0

    frame 1
      push '', 4
      getProperty
      push 1
      subtract
      gotoAndPlay
    end // of frame 1
  end // of defineMovieClip 89

  defineMovieClip 93 // total frames: 105
  end // of defineMovieClip 93
  
  exportAssets
    93 as '4,01'
  end // of exportAssets

  defineMovieClip 95 // total frames: 1
  end // of defineMovieClip 95

  defineMovieClip 96 // total frames: 41
  end // of defineMovieClip 96

  defineMovieClip 97 // total frames: 3

    frame 0
      constants '2', '-', '}J', 'this', '_totalframes', 'gotoAndPlay', '_xscale', '_yscale', ')', 'getBounds', '_x', 'xMin', '_y', 'yMin', ']', '_visible', '2VhU6'  
      push '2', 0.0
      varEquals
     label1:
      push '2'
      getVariable
      push 10
      lessThan
      not
      branchIfTrue label2
      push '-'
      getVariable
      push '-', '2'
      getVariable
      add
      push 16384, '2'
      getVariable
      add
      duplicateClip
      push '}J', 'this'
      getVariable
      push '-', '2'
      getVariable
      add
      getMember
      varEquals
      push 1, '}J'
      getVariable
      push '_totalframes'
      getMember
      random
      add
      push 1, '}J'
      getVariable
      push 'gotoAndPlay'
      callMethod
      pop
      push '}J'
      getVariable
      push '_xscale', '}J'
      getVariable
      push '_yscale', 50, 100
      random
      add
      setRegister r:0
      setMember
      push r:0
      setMember
      push ')', 'this'
      getVariable
      push 1, '}J'
      getVariable
      push 'getBounds'
      callMethod
      varEquals
      push '}J'
      getVariable
      push '_x', 0.0, ')'
      getVariable
      push 'xMin'
      getMember
      subtract
      setMember
      push '}J'
      getVariable
      push '_y', 0.0, ')'
      getVariable
      push 'yMin'
      getMember
      subtract
      setMember
      push '}J'
      getVariable
      push ']', 10, 40
      random
      add
      setMember
      push '2', '2'
      getVariable
      increment
      setVariable
      branch label1
     label2:
      push '-'
      getVariable
      push '_visible', FALSE
      setMember
      push '2VhU6', 50
      setVariable
    end // of frame 0

    frame 1
      constants '2', '}J', 'this', '-', ']', '_alpha', '*', '_currentframe', '_totalframes', '_y', 'Math', 'abs', 'removeMovieClip', '2VhU6', ''  
      push '2', 0.0
      varEquals
     label1:
      push '2'
      getVariable
      push 10
      lessThan
      not
      branchIfTrue label4
      push '}J', 'this'
      getVariable
      push '-', '2'
      getVariable
      add
      getMember
      varEquals
      push '}J'
      getVariable
      push ']', '}J'
      getVariable
      push ']'
      getMember
      decrement
      setMember
      push '}J'
      getVariable
      push ']'
      getMember
      push 10
      lessThan
      not
      branchIfTrue label2
      push '}J'
      getVariable
      push '_alpha', 10, '}J'
      getVariable
      push ']'
      getMember
      multiply
      setMember
     label2:
      push '*', '}J'
      getVariable
      push '_currentframe'
      getMember
      push 2
      multiply
      push '}J'
      getVariable
      push '_totalframes'
      getMember
      subtract
      push '}J'
      getVariable
      push '_totalframes'
      getMember
      divide
      varEquals
      push '}J'
      getVariable
      push '_y', '}J'
      getVariable
      push '_y'
      getMember
      push 0.5, '*'
      getVariable
      push 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      push 1
      multiply
      add
      add
      setMember
      push '}J'
      getVariable
      push ']'
      getMember
      push 0.0
      equals
      not
      branchIfTrue label3
      push 0.0, '}J'
      getVariable
      push 'removeMovieClip'
      callMethod
      pop
     label3:
      push '2', '2'
      getVariable
      increment
      setVariable
      branch label1
     label4:
      push '2VhU6'
      getVariable
      push '2VhU6', '2VhU6'
      getVariable
      decrement
      setVariable
      push 0.0
      lessThan
      not
      branchIfTrue label5
      push ''
      removeClip
     label5:
    end // of frame 1

    frame 2
      gotoFrame 1
      play
    end // of frame 2
  end // of defineMovieClip 97
  
  exportAssets
    97 as '{{ a'
  end // of exportAssets

  defineMovieClip 110 // total frames: 18
  end // of defineMovieClip 110

  defineMovieClip 113 // total frames: 1
  end // of defineMovieClip 113

  defineMovieClip 116 // total frames: 1
  end // of defineMovieClip 116

  defineMovieClip 118 // total frames: 1
  end // of defineMovieClip 118

  defineMovieClip 120 // total frames: 1
  end // of defineMovieClip 120

  defineMovieClip 122 // total frames: 1
  end // of defineMovieClip 122

  defineMovieClip 126 // total frames: 18
  end // of defineMovieClip 126

  defineMovieClip 128 // total frames: 1
  end // of defineMovieClip 128

  defineMovieClip 130 // total frames: 1
  end // of defineMovieClip 130

  defineMovieClip 134 // total frames: 3
  end // of defineMovieClip 134

  defineMovieClip 136 // total frames: 1
  end // of defineMovieClip 136

  defineMovieClip 137 // total frames: 26
  end // of defineMovieClip 137

  defineMovieClip 139 // total frames: 1
  end // of defineMovieClip 139

  defineMovieClip 141 // total frames: 1
  end // of defineMovieClip 141

  defineMovieClip 143 // total frames: 1
  end // of defineMovieClip 143

  defineMovieClip 145 // total frames: 1
  end // of defineMovieClip 145

  defineMovieClip 147 // total frames: 1
  end // of defineMovieClip 147

  defineMovieClip 148 // total frames: 9
  end // of defineMovieClip 148

  defineMovieClip 149 // total frames: 3
  end // of defineMovieClip 149
  
  exportAssets
    149 as '0i 3'
  end // of exportAssets

  defineMovieClip 151 // total frames: 1
  end // of defineMovieClip 151

  defineMovieClip 152 // total frames: 41
  end // of defineMovieClip 152

  defineMovieClip 154 // total frames: 3
  end // of defineMovieClip 154
  
  exportAssets
    154 as '4B1W('
  end // of exportAssets

  defineMovieClip 157 // total frames: 1
  end // of defineMovieClip 157
  
  exportAssets
    157 as ';+'
  end // of exportAssets
  
  exportAssets
    157 as ';+'
  end // of exportAssets
  
  exportAssets
    154 as '4B1W('
  end // of exportAssets
  
  exportAssets
    149 as '0i 3'
  end // of exportAssets
  
  exportAssets
    97 as '{{ a'
  end // of exportAssets
  
  exportAssets
    93 as '4,01'
  end // of exportAssets
  
  exportAssets
    53 as ']zpu5'
  end // of exportAssets
  
  exportAssets
    44 as ');=0I'
  end // of exportAssets
  
  exportAssets
    36 as '[5(-'
  end // of exportAssets
  
  exportAssets
    22 as '8Ugi)'
  end // of exportAssets
  
  exportAssets
    6 as '[PAv'
  end // of exportAssets
  
  exportAssets
    3 as '63G9'
  end // of exportAssets

  defineMovieClip 158 // total frames: 1

    frame 0
      constants '{sRCQ', '9w+x0(', '5Gr1)', 'Array', 'prototype', 'insert', 'splice', 'call', 'length', 'pop', ']]*Q1(', 'push', '7EyYf', 'shift', '=dbLP', '0y)Lk', 'unshift', '(Ip9A', '36}9L(', '=(,aA', '=2AUB', '6B6Ye', '*h0p]', '0+7n]', ']saU', '1BSU', '2BSU', '{J4p[', '-6cK;', '{UqW0', ';KCUw', '0T3E8', ';ndCG', '*G6KR', '*qvX5', '}Y,OG', '3r_nH(', ',i0 [', ' p3z=', '[', '+-(0', ']', '}J', '4B1W(', ']}lAm', '*=_p_', '_x', '((', '_y', ')(', 'gotoAndStop', '_xscale', '_yscale', '+}s,3(', '87vE7(', '{-kxL', '-V;B', '4,01', ');=0I', 'remove', 'removeMovieClip', '=E;uK(', '+7U K', ')2fr3', '}Zms3', ']1sj+', '-fC3a', '9oK', '7-,', ']bu40', '_name', 'swapDepths', '3Wt', '7bSH*', '18wU*', '-4*l((', '(GbB}', '+2NA', 'getDepth', 'Math', 'floor', '}oQA7', '08M8', 'clear', '9(K ;', ',}2X (', 'flash', 'Object', 'filters', '{lN=R', '4plQ5', 'getTimer', ';ILSy', '3R,QM', ';y}-6(', '-)Xd+', '[Ad;n', '6GI,F', 'fps', '=3+P', '8]X}5', '5fIk8(', '0BP', '+EtU}', '-4{9E', ' IWA+', '[PAv', 'stop', '0D 6', 'pow', '6)ca8(', '0*l[8(', 'Key', 'LEFT', 'isDown', 'RIGHT', 'UP', 'SPACE', ' P6i8(', ']zpu5', 'DOWN', '_visible', 'xMin', 'yMin', 'xMax', 'yMax', '3pbgv', '(WBt)', ']}Ou;(', '3I0pG', '{;7F4', '8U(wu', '}[cpB', '9xv]A', '{yQ=Q', '+,W', '2y+dV', '(tBee', '3)i[=', ' J3IC', '[6jRc', ')8Fyj', '7nzQ', '0i 3', '5U4B', '+Y', ',Y', '}-B2', '7+L2}', '5ZX', ';wj;Z', '(v+', '0tJ', '}Yax5', '=HU11', 'min', '-4L', '63G9', '565', 'getBounds', ';75J_', ']{i', 'trace', 'abs', 'max', '{{ a', '9T54', 'sin', '_totalframes', '44{N', '-iB=', '*M', '34++H(', 'random', '-_X}5', '$t', '$l', '$n', '$b', '$m', ';+', ')(-', '1mSg-', ')YJHO', '}txm6(', '6DoB7', '8Ugi)', '[5(-', '= y]5(', '3t_3E(', 'sqrt', '-[m(M', '7g,ln', '5b)bA(', '9pV)Z', 'slice', 'moveTo', 'lineStyle', 'lineTo', '$D', 'charCodeAt', '03(H;', '7T4cF(', '0ze*c', '980Sb', '(kJ+1(', '(H5 S', 'mode', ',Hwi)', '*B', 'clearInterval', '16(VU', '-', 'setInterval', '}wUHz', 'split', 'join', '', 'indexOf', 'substring', '* I51', ',JBe0', '],lYS', '4UQ(1', '_parent', '{2', '}2', ' Ly7b', '0', '4*fgv', '16KA', '(', ')goHJ(', 'movieclip', '9ss9+', 'localToGlobal', '19{O', ',[A(', 'set', '-[A(', 'get', 'globalToLocal', '{Gq]-', '$r', '$h', '$w', '$y', '$x', '$box', '$matrixType', '$radial', '$linear', ']cY[2', 'beginGradientFill', ' (', '1', '='  
      push '{sRCQ'
      function2 () (r:1='this', r:2='super')
        push 0, r:super, UNDEF
        callMethod
        pop
        push r:this, '9w+x0(', 0, 1
        initArray
        setMember
        push r:this, '5Gr1)', FALSE
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'Array'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, 'insert'
      function2 (r:2='4AF', r:3='((') (r:1='this')
        push r:'((', 0, r:'4AF', r:this, 4, 'Array'
        getVariable
        push 'prototype'
        getMember
        push 'splice'
        getMember
        push 'call'
        callMethod
        pop
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label1
        push r:this, '5Gr1)', TRUE
        setMember
       label1:
      end // of function 

      setMember
      push r:1, 'pop'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, ']]*Q1('
        getVariable
        push 'call'
        callMethod
        setRegister r:3
        pop
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label2
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        decrement
        push 1
        initArray
        setMember
       label2:
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label3
        push r:this, '5Gr1)', TRUE
        setMember
       label3:
        push r:3
        return
      end // of function 

      setMember
      push r:1, 'push'
      function2 (r:3='((') (r:1='this', r:2='super')
        push r:'((', r:this, 2, '7EyYf'
        getVariable
        push 'call'
        callMethod
        setRegister r:4
        pop
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label4
        push r:this, '5Gr1)', TRUE
        setMember
       label4:
        push r:4
        return
      end // of function 

      setMember
      push r:1, 'shift'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '=dbLP'
        getVariable
        push 'call'
        callMethod
        setRegister r:3
        pop
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label5
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        decrement
        push 1
        initArray
        setMember
       label5:
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label6
        push r:this, '5Gr1)', TRUE
        setMember
       label6:
        push r:3
        return
      end // of function 

      setMember
      push r:1, 'splice'
      function2 (r:3='4AF', r:4='; =') (r:1='this', r:2='super')
        push r:'; =', r:'4AF', r:this, 3, '0y)Lk'
        getVariable
        push 'call'
        callMethod
        setRegister r:5
        pop
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:5, 'length'
        getMember
        subtract
        push 1
        initArray
        setMember
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label7
        push r:this, '5Gr1)', TRUE
        setMember
       label7:
        push r:5
        return
      end // of function 

      setMember
      push r:1, 'unshift'
      function2 (r:3='((') (r:1='this', r:2='super')
        push r:'((', r:this, 2, '(Ip9A'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label8
        push r:this, '5Gr1)', TRUE
        setMember
       label8:
      end // of function 

      setMember
      push r:1, '36}9L('
      function2 () (r:1='this')
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label9
        push r:this, '5Gr1)', TRUE
        setMember
       label9:
        push r:this, '5Gr1)'
        getMember
        return
      end // of function 

      setMember
      push '0y)Lk', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 'splice'
      getMember
      setVariable
      push ']]*Q1(', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 'pop'
      getMember
      setVariable
      push '=dbLP', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 'shift'
      getMember
      setVariable
      push '(Ip9A', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 'unshift'
      getMember
      setVariable
      push '7EyYf', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 'push'
      getMember
      setVariable
      push '=(,aA'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '=2AUB', FALSE
      setMember
      push r:0, '6B6Ye', 3
      setMember
      push r:0, '*h0p]', 4
      setMember
      push r:0, '0+7n]', 5
      setMember
      push r:0, ']saU', 15
      setMember
      push r:0, '1BSU', 285
      setMember
      push r:0, '2BSU', 280
      setMember
      push r:0, '{J4p[', -20
      setMember
      push r:0, '-6cK;', 100
      setMember
      push r:0, '{UqW0', 1, 10, 50, 3
      initArray
      setMember
      push r:0, ';KCUw', 10, 40, 100, 3
      initArray
      setMember
      push r:0, '0T3E8', 3000, 500, 200, 3
      initArray
      push 1, ';ndCG'
      getVariable
      push '*G6KR'
      callMethod
      setMember
      push r:0, '*qvX5', 600
      setMember
      push r:0, '}Y,OG', 15
      setMember
      push r:0, '3r_nH(', 1, 2, 3, 3, 4, 4, 5, 10, 20, 35, 50, 11
      initArray
      setMember
      push ',i0 ['
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push ' p3z='
      function2 (r:2='0', r:3='9', r:4=']') (r:1='this')
        push r:this, '[', 5
        setMember
        push r:this, '+-(0', r:'0'
        setMember
        push r:this, ']', r:']'
        setMember
        push r:this, '}J', '=(,aA'
        getVariable
        push '6B6Ye'
        getMember
        push '4B1W(', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '}J'
        getMember
        push '_x', r:'9', '(('
        getMember
        setMember
        push r:this, '}J'
        getMember
        push '_y', r:'9', ')('
        getMember
        setMember
        push r:']', 1
        add
        toString
        push 1, r:this, '}J'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '}J'
        getMember
        push '_xscale', r:this, '['
        getMember
        setMember
        push r:this, '}J'
        getMember
        push '_yscale', r:this, '['
        getMember
        setMember
        push r:this, '}J'
        getMember
        push 1, r:this, '+-(0'
        getMember
        push '+}s,3('
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this')
        push r:this, '['
        getMember
        push 100
        lessThan
        not
        branchIfTrue label11
        push r:this, '[', r:this, '['
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 10
        multiply
        add
        setMember
        push r:this, '['
        getMember
        push 100
        lessThan
        not
        not
        branchIfTrue label10
        push r:this, '[', 100
        setMember
       label10:
        push r:this, '}J'
        getMember
        push '_xscale', r:this, '['
        getMember
        setMember
        push r:this, '}J'
        getMember
        push '_yscale', r:this, '['
        getMember
        setMember
       label11:
        push r:this, '+-(0'
        getMember
        push '4,01'
        getMember
        push '}J'
        getMember
        push '_x'
        getMember
        push r:this, '}J'
        getMember
        push '_x'
        getMember
        subtract
        setRegister r:2
        pop
        push r:this, '+-(0'
        getMember
        push '4,01'
        getMember
        push '}J'
        getMember
        push '_y'
        getMember
        push 20
        subtract
        push r:this, '}J'
        getMember
        push '_y'
        getMember
        subtract
        setRegister r:3
        pop
        push r:2, r:2
        multiply
        push r:3, r:3
        multiply
        add
        push '=(,aA'
        getVariable
        push '*qvX5'
        getMember
        lessThan
        not
        branchIfTrue label12
        push '=(,aA'
        getVariable
        push '*h0p]'
        getMember
        push 1
        add
        push ');=0I', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:4
        pop
        push r:4, '_x', r:this, '}J'
        getMember
        push '_x'
        getMember
        setMember
        push r:4, '_y', r:this, '}J'
        getMember
        push '_y'
        getMember
        setMember
        push r:this, '}J'
        getMember
        push 1, r:this, '+-(0'
        getMember
        push '+}s,3('
        getMember
        push 'remove'
        callMethod
        pop
        push 0, r:this, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, 1, r:this, '+-(0'
        getMember
        push '=E;uK('
        callMethod
        pop
        push FALSE
        return
       label12:
        push TRUE
        return
      end // of function 

      setMember
      push '+7U K'
      function2 (r:2='}J') (r:1='this')
        push r:this, ')2fr3', r:'}J'
        setMember
        push r:this, '}Zms3', 0, 'Array'
        new
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, ']1sj+'
      function2 () (r:1='this')
        push r:this, ')2fr3'
        getMember
        return
      end // of function 

      setMember
      push r:1, '-fC3a'
      function2 (r:2='59F') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'59F'
        getMember
        setRegister r:3
        pop
        push r:3, NULL
        equals
        not
        branchIfTrue label13
        push '9oK', 0, 'Array'
        new
        push '7-,', 0, 2
        initObject
        setRegister r:3
        pop
        push r:this, '}Zms3'
        getMember
        push r:'59F', r:3
        setMember
       label13:
        push r:3
        return
      end // of function 

      setMember
      push r:1, ']bu40'
      function2 (r:2='[-99') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'[-99'
        getMember
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:7
        pop
        push r:'[-99', 1000
        multiply
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label15
       label14:
        push r:6
        increment
        setRegister r:6
        pop
       label15:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label17
        push r:4, r:6
        getMember
        push '_name'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label16
        push r:8, r:7
        add
        push 1, r:4, r:6
        getMember
        push 'swapDepths'
        callMethod
        pop
        push r:4, r:7, r:4, r:6
        getMember
        setMember
        push r:7
        increment
        setRegister r:7
        pop
       label16:
        branch label14
       label17:
        push r:3, '7-,', r:7
        setMember
      end // of function 

      setMember
      push r:1, '*=_p_'
      function2 (r:2='*KB2', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label18
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'*KB2', 2, r:this, '*=_p_'
        callMethod
        return
       label18:
        push r:6, r:'[-99', 1000
        multiply
        add
        push r:'*KB2', r:this, ')2fr3'
        getMember
        push 3, '3Wt'
        getVariable
        push '7bSH*'
        callMethod
        setRegister r:7
        pop
        push r:5, r:6, r:7
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:7
        return
      end // of function 

      setMember
      push r:1, '18wU*'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push r:5, 1000
        equals
        not
        branchIfTrue label19
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', 1, r:this, '18wU*'
        callMethod
        return
       label19:
        push r:5, r:'[-99', 1000
        multiply
        add
        push r:this, ')2fr3'
        getMember
        push 2, '3Wt'
        getVariable
        push '-4*l(('
        callMethod
        setRegister r:6
        pop
        push r:4, r:5, r:6
        setMember
        push r:3, '7-,', r:3, '7-,'
        getMember
        increment
        setMember
        push r:6
        return
      end // of function 

      setMember
      push r:1, '(GbB}'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label20
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        return
       label20:
        push r:5, r:6, r:'}J'
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:6, r:'[-99', 1000
        multiply
        add
        return
      end // of function 

      setMember
      push r:1, '+2NA'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        push 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, r:'[-99'
        equals
        not
        branchIfTrue label21
        push UNDEF
        return
       label21:
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:5, '7-,'
        getMember
        setRegister r:7
        pop
        push 0
        setRegister r:8
        pop
        branch label23
       label22:
        push r:8
        increment
        setRegister r:8
        pop
       label23:
        push r:8, r:7
        lessThan
        not
        branchIfTrue label25
        push r:6, r:8
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label24
        push r:6, r:8, NULL
        setMember
        branch label25
       label24:
        branch label22
       label25:
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}oQA7'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label26
        push r:6, r:7, NULL
        setMember
        push r:'}J', 1, r:6, 'unshift'
        callMethod
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label26:
      end // of function 

      setMember
      push r:1, '08M8'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label28
        push r:6, r:7, NULL
        setMember
        push r:5, '7-,'
        getMember
        push 1000
        equals
        not
        branchIfTrue label27
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label27:
        push r:5, '7-,'
        getMember
        setRegister r:3
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:3, r:4, 1000
        multiply
        add
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
        push r:6, r:3, r:'}J'
        setMember
       label28:
      end // of function 

      setMember
      push r:1, 'clear'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:4
        pop
        branch label30
       label29:
        push r:4
        increment
        setRegister r:4
        pop
       label30:
        push r:4, r:3, '7-,'
        getMember
        lessThan
        not
        branchIfTrue label31
        push 0, r:5, r:4
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label29
       label31:
        push r:3, '7-,', 0
        setMember
      end // of function 

      setMember
      push r:1, '9(K ;'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push -99999999
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label33
       label32:
        push r:6
        increment
        setRegister r:6
        pop
       label33:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label41
        push r:4, r:6
        getMember
        setRegister r:9
        pop
        push r:9, '_y'
        getMember
        setRegister r:10
        pop
        push r:10, r:8
        lessThan
        not
        not
        branchIfTrue label34
        push r:10
        setRegister r:8
        pop
        branch label40
       label34:
        push r:6
        setRegister r:7
        pop
        branch label36
       label35:
        push r:7
        decrement
        setRegister r:7
        pop
       label36:
        push r:7, 0
        greaterThan
        not
        branchIfTrue label39
        push r:4, r:7, 1
        subtract
        getMember
        setRegister r:11
        pop
        push r:11, '_y'
        getMember
        push r:10
        greaterThan
        not
        branchIfTrue label37
        push r:4, r:7, r:11
        setMember
        push r:11, 1, r:9, 'swapDepths'
        callMethod
        pop
        branch label38
       label37:
        push r:4, r:7, r:9
        setMember
        branch label39
       label38:
        branch label35
       label39:
        push r:7, 0
        equals
        not
        branchIfTrue label40
        push r:4, 0, r:9
        setMember
       label40:
        branch label32
       label41:
      end // of function 

      setMember
      push r:1, ',}2X ('
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label43
       label42:
        push r:2
        increment
        setRegister r:2
        pop
       label43:
        push r:2, r:this, '}Zms3'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label44
        push r:2, 1, r:this, 'clear'
        callMethod
        pop
        branch label42
       label44:
      end // of function 

      setMember
      push 'flash'
      getVariable
      not
      not
      branchIfTrue label45
      push 'flash', 0, 'Object'
      new
      setVariable
     label45:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      not
      not
      branchIfTrue label46
      push 'flash'
      getVariable
      push 'filters', 0, 'Object'
      new
      setMember
     label46:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      push '{lN=R'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setMember
      push '{-kxL'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '87vE7('
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '4plQ5', '{-kxL'
        getVariable
        push '4plQ5'
        getMember
        increment
        setMember
        push 0, '3Wt'
        getVariable
        push 'getTimer'
        callMethod
        setRegister r:2
        pop
        push '{-kxL'
        getVariable
        push ';ILSy', r:2, '{-kxL'
        getVariable
        push '3R,QM'
        getMember
        subtract
        push 1000.0
        divide
        setMember
        push '{-kxL'
        getVariable
        push '3R,QM', r:2
        setMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        push '{-kxL'
        getVariable
        push ';y}-6('
        getMember
        lessThan
        not
        branchIfTrue label47
        push '{-kxL'
        getVariable
        push '-)Xd+', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        push '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        multiply
        push 1, '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        subtract
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        multiply
        add
        setMember
        branch label48
       label47:
        push '{-kxL'
        getVariable
        push ';ILSy', 1, '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        divide
        setMember
       label48:
        push '{-kxL'
        getVariable
        push '-V;B', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        setMember
      end // of function 

      setMember
      push r:0, 'fps'
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        return
      end // of function 

      setMember
      push r:0, '6GI,F', 32
      setMember
      push r:0, ';y}-6(', 0.5
      setMember
      push r:0, '3R,QM', 0, '3Wt'
      getVariable
      push 'getTimer'
      callMethod
      setMember
      push r:0, '[Ad;n', 0.95
      setMember
      push r:0, '-)Xd+', 1
      setMember
      push r:0, '-V;B', 1
      setMember
      push r:0, ';ILSy', 1
      setMember
      push r:0, '4plQ5', 0
      setMember
      push '=3+P'
      function2 (r:2='0') (r:1='this')
        push r:this, '+-(0', r:'0'
        setMember
        push r:this, '((', 150
        setMember
        push r:this, '8]X}5', '=3+P'
        getVariable
        push '5fIk8('
        getMember
        setMember
        push r:this, ')(', '=(,aA'
        getVariable
        push '2BSU'
        getMember
        setMember
        push r:this, '0BP', 1
        setMember
        push r:this, '+EtU}', 0, 1
        initArray
        setMember
        push r:this, '-4{9E', 0, 1
        initArray
        setMember
        push r:this, ' IWA+', 0
        setMember
        push r:this, '[PAv', 5, '[PAv', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '}J', '=(,aA'
        getVariable
        push '*h0p]'
        getMember
        push '4,01', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push 0, r:this, '}J'
        getMember
        push 'stop'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '0D 6'
      function2 () (r:1='this')
        push 5
        setRegister r:2
        pop
        push 0.7
        setRegister r:3
        pop
        push 25
        setRegister r:4
        pop
        push r:this, '+EtU}', r:this, '+EtU}'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.9, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        push 1
        initArray
        setMember
        push r:this, '8]X}5'
        getMember
        setRegister r:0
        push '=3+P'
        getVariable
        push '5fIk8('
        getMember
        strictEquals
        branchIfTrue label49
        push r:0, '=3+P'
        getVariable
        push '6)ca8('
        getMember
        strictEquals
        branchIfTrue label49
        push r:0, '=3+P'
        getVariable
        push '0*l[8('
        getMember
        strictEquals
        branchIfTrue label60
        branch label69
       label49:
        push 'Key'
        getVariable
        push 'LEFT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label51
        push r:this, '8]X}5'
        getMember
        push '=3+P'
        getVariable
        push '5fIk8('
        getMember
        equals
        not
        branchIfTrue label50
        push r:this, ' IWA+', 29
        setMember
       label50:
        push r:this, '8]X}5', '=3+P'
        getVariable
        push '6)ca8('
        getMember
        setMember
        push r:this, '0BP', -1
        setMember
        push r:this, '((', r:this, '(('
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push r:2
        multiply
        subtract
        setMember
        branch label55
       label51:
        push 'Key'
        getVariable
        push 'RIGHT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label53
        push r:this, '8]X}5'
        getMember
        push '=3+P'
        getVariable
        push '5fIk8('
        getMember
        equals
        not
        branchIfTrue label52
        push r:this, ' IWA+', 29
        setMember
       label52:
        push r:this, '8]X}5', '=3+P'
        getVariable
        push '6)ca8('
        getMember
        setMember
        push r:this, '0BP', 1
        setMember
        push r:this, '((', r:this, '(('
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push r:2
        multiply
        add
        setMember
        branch label55
       label53:
        push r:this, '8]X}5'
        getMember
        push '=3+P'
        getVariable
        push '6)ca8('
        getMember
        equals
        not
        branchIfTrue label54
        push r:this, ' IWA+', 40
        setMember
       label54:
        push r:this, '8]X}5', '=3+P'
        getVariable
        push '5fIk8('
        getMember
        setMember
       label55:
        push 'Key'
        getVariable
        push 'UP'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        dup
        branchIfTrue label56
        pop
        push 'Key'
        getVariable
        push 'SPACE'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
       label56:
        not
        branchIfTrue label59
        push r:this, ' P6i8(', TRUE
        setMember
        push r:this, '-4{9E', 4, 1
        initArray
        setMember
        push r:this, '+EtU}', r:this, '8]X}5'
        getMember
        push '=3+P'
        getVariable
        push '6)ca8('
        getMember
        equals
        not
        branchIfTrue label57
        push r:this, '0BP'
        getMember
        push r:2
        multiply
        branch label58
       label57:
        push 0
       label58:
        push 1
        initArray
        setMember
        push r:this, '8]X}5', '=3+P'
        getVariable
        push '0*l[8('
        getMember
        setMember
        push r:this, ' IWA+', 58
        setMember
        push '=(,aA'
        getVariable
        push '*h0p]'
        getMember
        push ']zpu5', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:5
        pop
        push r:5, '_x', r:this, '(('
        getMember
        setMember
        push r:5, '_y', r:this, ')('
        getMember
        setMember
       label59:
        branch label69
       label60:
        push 'Key'
        getVariable
        push 'LEFT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label61
        push r:this, '0BP', -1
        setMember
        push r:this, '+EtU}', r:this, '+EtU}'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        push 1
        initArray
        setMember
        branch label62
       label61:
        push 'Key'
        getVariable
        push 'RIGHT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label62
        push r:this, '0BP', 1
        setMember
        push r:this, '+EtU}', r:this, '+EtU}'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        add
        push 1
        initArray
        setMember
       label62:
        push 'Key'
        getVariable
        push 'UP'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        dup
        branchIfTrue label63
        pop
        push 'Key'
        getVariable
        push 'SPACE'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
       label63:
        not
        branchIfTrue label66
        push r:this, ' P6i8('
        getMember
        dup
        not
        branchIfTrue label64
        pop
        push r:this, '-4{9E'
        getMember
        push 0
        getMember
        push r:4
        lessThan
       label64:
        not
        branchIfTrue label65
        push r:this, '-4{9E', r:this, '-4{9E'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 1.4, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        push 1
        initArray
        setMember
        push r:this, '-4{9E'
        getMember
        push 0
        getMember
        push r:4
        lessThan
        not
        not
        branchIfTrue label65
        push r:this, '-4{9E', r:4, 1
        initArray
        setMember
        push r:this, ' P6i8(', FALSE
        setMember
       label65:
        branch label67
       label66:
        push r:this, ' P6i8(', FALSE
        setMember
       label67:
        push r:this, '((', r:this, '(('
        getMember
        push r:this, '+EtU}'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        push 1.5
        divide
        add
        setMember
        push r:this, ' P6i8('
        getMember
        not
        not
        branchIfTrue label68
        push r:this, '-4{9E', r:this, '-4{9E'
        getMember
        push 0
        getMember
        push 1.2, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        push 1
        initArray
        setMember
       label68:
        branch label69
       label69:
        push r:this, ')(', r:this, ')('
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push r:3
        multiply
        push r:this, '-4{9E'
        getMember
        push 0
        getMember
        multiply
        subtract
        setMember
        push r:this, ')('
        getMember
        push '=(,aA'
        getVariable
        push '2BSU'
        getMember
        greaterThan
        not
        branchIfTrue label70
        push r:this, '-4{9E', 0, 1
        initArray
        setMember
        push r:this, '8]X}5', '=3+P'
        getVariable
        push '5fIk8('
        getMember
        setMember
        push r:this, ' IWA+', 94
        setMember
        push r:this, ')(', '=(,aA'
        getVariable
        push '2BSU'
        getMember
        setMember
       label70:
        push r:this, '(('
        getMember
        push '=(,aA'
        getVariable
        push ']saU'
        getMember
        lessThan
        not
        branchIfTrue label71
        push r:this, '((', '=(,aA'
        getVariable
        push ']saU'
        getMember
        setMember
        push r:this, '+EtU}', r:this, '+EtU}'
        getMember
        push 0
        getMember
        push -2
        multiply
        push 1
        initArray
        setMember
       label71:
        push r:this, '(('
        getMember
        push '=(,aA'
        getVariable
        push '1BSU'
        getMember
        greaterThan
        not
        branchIfTrue label72
        push r:this, '((', '=(,aA'
        getVariable
        push '1BSU'
        getMember
        setMember
        push r:this, '+EtU}', r:this, '+EtU}'
        getMember
        push 0
        getMember
        push -2
        multiply
        push 1
        initArray
        setMember
       label72:
        push r:this, '}J'
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '}J'
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
        push r:this, '}J'
        getMember
        push '_xscale', 100
        setMember
        push r:this, '8]X}5'
        getMember
        setRegister r:0
        push '=3+P'
        getVariable
        push '5fIk8('
        getMember
        strictEquals
        branchIfTrue label73
        push r:0, '=3+P'
        getVariable
        push '6)ca8('
        getMember
        strictEquals
        branchIfTrue label82
        push r:0, '=3+P'
        getVariable
        push '0*l[8('
        getMember
        strictEquals
        branchIfTrue label85
        branch label89
       label73:
        push r:this, ' IWA+', r:this, ' IWA+'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        add
        setMember
        push r:this, ' IWA+'
        getMember
        push 94
        lessThan
        not
        not
        branchIfTrue label75
        push r:this, ' IWA+'
        getMember
        push 106
        lessThan
        not
        not
        branchIfTrue label74
        push r:this, ' IWA+', 1
        setMember
       label74:
        branch label81
       label75:
        push r:this, ' IWA+'
        getMember
        push 40
        lessThan
        not
        not
        branchIfTrue label79
        push r:this, ' IWA+'
        getMember
        push 46
        lessThan
        not
        not
        branchIfTrue label78
        push r:this, ' IWA+', 'Key'
        getVariable
        push 'DOWN'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label76
        push 59
        branch label77
       label76:
        push 1
       label77:
        setMember
       label78:
        branch label81
       label79:
        push 'Key'
        getVariable
        push 'DOWN'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label80
        push r:this, ' IWA+', 59
        setMember
        branch label81
       label80:
        push r:this, ' IWA+'
        getMember
        push 25
        lessThan
        not
        not
        branchIfTrue label81
        push r:this, ' IWA+', r:this, ' IWA+'
        getMember
        push 24
        subtract
        setMember
       label81:
        branch label89
       label82:
        push r:this, ' IWA+', r:this, ' IWA+'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        add
        setMember
       label83:
        push r:this, ' IWA+'
        getMember
        push 36
        lessThan
        not
        not
        branchIfTrue label84
        push r:this, ' IWA+', r:this, ' IWA+'
        getMember
        push 3
        subtract
        setMember
        branch label83
       label84:
        branch label89
       label85:
        push r:this, ' IWA+', r:this, ' IWA+'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        add
        setMember
        push r:this, ' IWA+'
        getMember
        push 73
        lessThan
        not
        dup
        not
        branchIfTrue label86
        pop
        push r:this, '-4{9E'
        getMember
        push 0
        getMember
        push 0
        greaterThan
       label86:
        not
        branchIfTrue label87
        push r:this, ' IWA+', 70
        setMember
       label87:
        push r:this, ' IWA+'
        getMember
        push 93
        lessThan
        not
        not
        branchIfTrue label88
        push r:this, ' IWA+', 80
        setMember
       label88:
        branch label89
       label89:
        push r:this, ' IWA+'
        getMember
        int
        toString
        push 1, r:this, '}J'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '[PAv'
        getMember
        push '_visible', r:this, ')('
        getMember
        push 0
        lessThan
        setMember
        push r:this, '[PAv'
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push '=(,aA'
        getVariable
        push '=2AUB'
        getMember
        not
        branchIfTrue label90
        push r:this, ')('
        getMember
        push 20
        subtract
        push r:this, '(('
        getMember
        push 'xMin', -10, 'yMin', -10, 'xMax', 10, 'yMax', 10, 4
        initObject
        push 3, r:this, '+-(0'
        getMember
        push '3pbgv'
        callMethod
        pop
       label90:
      end // of function 

      setMember
      push r:0, '5fIk8(', 0
      setMember
      push r:0, '6)ca8(', 1
      setMember
      push r:0, '0*l[8(', 2
      setMember
      push '(WBt)'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ']}Ou;(', 1
      setMember
      push r:0, '3I0pG', 2
      setMember
      push r:0, '{;7F4', 3
      setMember
      push r:0, '8U(wu', 4
      setMember
      push r:0, '}[cpB', 5
      setMember
      push r:0, '9xv]A', 6
      setMember
      push r:0, '{yQ=Q', 7
      setMember
      push r:0, '+,W', 8
      setMember
      push r:0, '2y+dV', 9
      setMember
      push r:0, '(tBee', 10
      setMember
      push r:0, '3)i[=', 11
      setMember
      push r:0, ' J3IC', 12
      setMember
      push r:0, '[6jRc', 13
      setMember
      push r:0, ')8Fyj', 14
      setMember
      push '7nzQ'
      function2 (r:2='0', r:3='9', r:4=']') (r:1='this')
        push r:this, '+-(0', r:'0'
        setMember
        push r:this, ']', r:']'
        setMember
        push r:this, '}J', '=(,aA'
        getVariable
        push '0+7n]'
        getMember
        push '0i 3', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:']', 1
        add
        toString
        push 1, r:this, '}J'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '((', r:'9', '(('
        getMember
        setMember
        push r:this, ')(', r:'9', ')('
        getMember
        setMember
        push r:this, '5U4B', 0
        setMember
        push r:this, '+Y', r:this, '(('
        getMember
        setMember
        push r:this, ',Y', r:this, ')('
        getMember
        setMember
        push r:this, '0BP', r:this, '(('
        getMember
        push 0
        greaterThan
        setMember
        push 0, r:this, '}-B2'
        callMethod
        pop
        push r:this, '}J'
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '}J'
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
        push r:this, '}J'
        getMember
        push 1, r:this, '+-(0'
        getMember
        push '+}s,3('
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '}-B2'
      function2 () (r:1='this')
        push r:this, ']'
        getMember
        setRegister r:0
        push '7nzQ'
        getVariable
        push '7+L2}'
        getMember
        strictEquals
        branchIfTrue label91
        push r:0, '7nzQ'
        getVariable
        push '5ZX'
        getMember
        strictEquals
        branchIfTrue label94
        push r:0, '7nzQ'
        getVariable
        push ';wj;Z'
        getMember
        strictEquals
        branchIfTrue label98
        branch label103
       label91:
        push r:this, '(v+', r:this, '}J'
        getMember
        push '0tJ'
        getMember
        push '(v+'
        getMember
        setMember
        push r:this, '(v+'
        getMember
        push '_visible', FALSE
        setMember
        push r:this, '0BP'
        getMember
        not
        branchIfTrue label92
        push r:this, '}J'
        getMember
        push '_xscale', -100
        setMember
        push r:this, '((', r:this, '(('
        getMember
        push 20
        add
        setMember
        branch label93
       label92:
        push r:this, '((', r:this, '(('
        getMember
        push 20
        subtract
        setMember
       label93:
        push r:this, '}Yax5', 1, 0.3, r:this, '+-(0'
        getMember
        push '=HU11'
        getMember
        push 0
        getMember
        multiply
        add
        setMember
        branch label103
       label94:
        push r:this, '+Y', 50, 5, r:this, '+-(0'
        getMember
        push '=HU11'
        getMember
        push 0
        getMember
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:this, ',Y'
        getMember
        push r:this, '+Y'
        getMember
        add
        push '=(,aA'
        getVariable
        push '1BSU'
        getMember
        greaterThan
        not
        branchIfTrue label95
        push r:this, ',Y', '=(,aA'
        getVariable
        push '1BSU'
        getMember
        push r:this, '+Y'
        getMember
        subtract
        setMember
       label95:
        push r:this, ',Y'
        getMember
        push r:this, '+Y'
        getMember
        subtract
        push 0
        lessThan
        not
        branchIfTrue label96
        push r:this, ',Y', r:this, '+Y'
        getMember
        setMember
       label96:
        push r:this, '}Yax5', 0.4, 0.2, r:this, '+-(0'
        getMember
        push '=HU11'
        getMember
        push 0
        getMember
        multiply
        add
        setMember
        push r:this, '0BP'
        getMember
        not
        branchIfTrue label97
        push r:this, '}J'
        getMember
        push '_xscale', -100
        setMember
       label97:
        branch label103
       label98:
        push r:this, ')(', '=(,aA'
        getVariable
        push '2BSU'
        getMember
        setMember
        push r:this, '+Y', 0
        setMember
        push r:this, '}Yax5', 8
        setMember
        push 0, r:this, '}J'
        getMember
        push '0tJ'
        getMember
        push 'stop'
        callMethod
        pop
        push r:this, '5U4B', -2.7, r:this, '+-(0'
        getMember
        push '=HU11'
        getMember
        push 0
        getMember
        push 0.15
        multiply
        add
        setMember
        push r:this, '-4L', 6, '63G9', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '-4L'
        getMember
        push '_x', r:this, '(('
        getMember
        push r:this, '0BP'
        getMember
        not
        branchIfTrue label99
        push -20
        branch label100
       label99:
        push 20
       label100:
        add
        setMember
        push r:this, '-4L'
        getMember
        push '_y', r:this, ')('
        getMember
        push 10
        subtract
        setMember
        push r:this, '0BP'
        getMember
        not
        branchIfTrue label101
        push r:this, '}J'
        getMember
        push '_xscale', -100
        setMember
        branch label102
       label101:
        push r:this, '-4L'
        getMember
        push '_xscale', -100
        setMember
       label102:
        branch label103
       label103:
      end // of function 

      setMember
      push r:1, '565'
      function2 (r:2='1wG1') (r:1='this')
        push r:this, '+-(0'
        getMember
        push '4,01'
        getMember
        push '}J'
        getMember
        push '_name'
        getMember
        push NULL
        equals
        not
        branchIfTrue label104
        push FALSE
        return
       label104:
        push r:this, '}J'
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '}J'
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
        push r:this, '+-(0'
        getMember
        push '4,01'
        getMember
        push '}J'
        getMember
        push 1, r:this, '(v+'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label105
        push r:this, '(v+'
        getMember
        branch label106
       label105:
        push r:this, '}J'
        getMember
       label106:
        push 'getBounds'
        callMethod
        setRegister r:3
        pop
        push '=(,aA'
        getVariable
        push '=2AUB'
        getMember
        not
        branchIfTrue label107
        push r:this, '+-(0'
        getMember
        push '4,01'
        getMember
        push '}J'
        getMember
        push '_y'
        getMember
        push r:this, '+-(0'
        getMember
        push '4,01'
        getMember
        push '}J'
        getMember
        push '_x'
        getMember
        push r:3, 3, r:this, '+-(0'
        getMember
        push '3pbgv'
        callMethod
        pop
       label107:
        push r:3, 'yMin', r:3, 'yMin'
        getMember
        push 20
        add
        setMember
        push r:3, 'yMax', r:3, 'yMax'
        getMember
        push 20
        add
        setMember
        push r:3, 'xMin'
        getMember
        push r:3, 'xMax'
        getMember
        multiply
        push 0
        greaterThan
        not
        branchIfTrue label110
        push r:3, 'xMin'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label109
        push r:3, 'xMax'
        getMember
        push r:'1wG1'
        lessThan
        not
        branchIfTrue label108
        push FALSE
        return
       label108:
        branch label110
       label109:
        push r:3, 'xMin'
        getMember
        push r:'1wG1'
        greaterThan
        not
        branchIfTrue label110
        push FALSE
        return
       label110:
        push r:3, 'yMin'
        getMember
        push r:3, 'yMax'
        getMember
        multiply
        push 0
        greaterThan
        not
        branchIfTrue label113
        push r:3, 'yMin'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label112
        push r:3, 'yMax'
        getMember
        push r:'1wG1'
        lessThan
        not
        branchIfTrue label111
        push FALSE
        return
       label111:
        branch label113
       label112:
        push r:3, 'yMin'
        getMember
        push r:'1wG1'
        greaterThan
        not
        branchIfTrue label113
        push FALSE
        return
       label113:
        push r:this, ';75J_', r:3, 'yMin'
        getMember
        push r:3, 'yMax'
        getMember
        add
        push 2
        divide
        push 5
        greaterThan
        setMember
        push r:this, ';75J_'
        getMember
        not
        dup
        not
        branchIfTrue label114
        pop
        push '=(,aA'
        getVariable
        push '=2AUB'
        getMember
       label114:
        not
        branchIfTrue label115
        push r:3, 'yMin'
        getMember
        push r:3, 'yMax'
        getMember
        add
        push 2
        divide
        push 1, ']{i'
        getVariable
        push 'trace'
        callMethod
        pop
       label115:
        push TRUE
        return
      end // of function 

      setMember
      push r:1, 'remove'
      function2 () (r:1='this')
        push r:this, '}J'
        getMember
        push 1, r:this, '+-(0'
        getMember
        push '+}s,3('
        getMember
        push 'remove'
        callMethod
        pop
        push 0, r:this, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push FALSE
        return
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this')
        push TRUE
        setRegister r:2
        pop
        push r:this, '5U4B', r:this, '5U4B'
        getMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        add
        setMember
        push r:this, ']'
        getMember
        setRegister r:0
        push '7nzQ'
        getVariable
        push '7+L2}'
        getMember
        strictEquals
        branchIfTrue label116
        push r:0, '7nzQ'
        getVariable
        push '5ZX'
        getMember
        strictEquals
        branchIfTrue label124
        push r:0, '7nzQ'
        getVariable
        push ';wj;Z'
        getMember
        strictEquals
        branchIfTrue label130
        branch label137
       label116:
        push r:this, '((', r:this, '(('
        getMember
        push r:this, '}Yax5'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        push r:this, '0BP'
        getMember
        not
        branchIfTrue label117
        push -1
        branch label118
       label117:
        push 1
       label118:
        multiply
        add
        setMember
        push 10, 1, r:this, '565'
        callMethod
        not
        branchIfTrue label121
        push r:this, ';75J_'
        getMember
        not
        branchIfTrue label119
        push r:this, '+-(0'
        getMember
        push '4,01'
        getMember
        push '-4{9E'
        getMember
        push 0
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        setRegister r:3
        pop
        push r:3, 0.7
        multiply
        setRegister r:3
        pop
        push 5, r:3, 2, 'Math'
        getVariable
        push 'max'
        callMethod
        setRegister r:3
        pop
        push r:this, '+-(0'
        getMember
        push '4,01'
        getMember
        push '-4{9E', r:3, 1
        initArray
        setMember
        push r:this, '+-(0'
        getMember
        push '4,01'
        getMember
        push ' P6i8(', TRUE
        setMember
        push r:this, '+-(0'
        getMember
        push '4,01'
        getMember
        push ' IWA+', 59
        setMember
        push '=(,aA'
        getVariable
        push '0+7n]'
        getMember
        push 1
        add
        push '{{ a', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:4
        pop
        push r:4, '_x', r:this, '(('
        getMember
        setMember
        push r:4, '_y', r:this, ')('
        getMember
        setMember
        push '=(,aA'
        getVariable
        push '*h0p]'
        getMember
        push ']zpu5', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:4
        pop
        push r:4, '_x', r:this, '(('
        getMember
        setMember
        push r:4, '_y', r:this, ')('
        getMember
        setMember
        push 0, r:this, 'remove'
        callMethod
        setRegister r:2
        pop
        branch label121
       label119:
        push '=(,aA'
        getVariable
        push '=2AUB'
        getMember
        not
        branchIfTrue label120
        push r:this, '+-(0'
        getMember
        push '0D 6', NULL
        setMember
        push FALSE
        return
       label120:
        push 0, r:this, '+-(0'
        getMember
        push '9T54'
        callMethod
        pop
       label121:
        push r:this, '(('
        getMember
        push 340
        greaterThan
        dup
        branchIfTrue label122
        pop
        push r:this, '(('
        getMember
        push -40
        lessThan
       label122:
        not
        branchIfTrue label123
        push 0, r:this, 'remove'
        callMethod
        setRegister r:2
        pop
       label123:
        branch label137
       label124:
        push r:this, '((', r:this, '(('
        getMember
        push r:this, '}Yax5'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        push r:this, '0BP'
        getMember
        not
        branchIfTrue label125
        push -1
        branch label126
       label125:
        push 1
       label126:
        multiply
        add
        setMember
        push r:this, ')(', r:this, '5U4B'
        getMember
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:this, '+Y'
        getMember
        multiply
        push r:this, ',Y'
        getMember
        add
        setMember
        push 5, 1, r:this, '565'
        callMethod
        not
        branchIfTrue label127
        push 0, r:this, '+-(0'
        getMember
        push '9T54'
        callMethod
        pop
       label127:
        push r:this, '(('
        getMember
        push 320
        greaterThan
        dup
        branchIfTrue label128
        pop
        push r:this, '(('
        getMember
        push -20
        lessThan
       label128:
        not
        branchIfTrue label129
        push 0, r:this, 'remove'
        callMethod
        setRegister r:2
        pop
       label129:
        branch label137
       label130:
        push r:this, '5U4B'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label131
        branch label137
       label131:
        push 0, r:this, '-4L'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, '+Y', r:this, '+Y'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        add
        setMember
        push r:this, '+Y'
        getMember
        push r:this, '}J'
        getMember
        push '_totalframes'
        getMember
        modulo
        int
        push 1
        add
        toString
        push 1, r:this, '}J'
        getMember
        push '0tJ'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '((', r:this, '(('
        getMember
        push r:this, '}Yax5'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        push r:this, '0BP'
        getMember
        not
        branchIfTrue label132
        push -1
        branch label133
       label132:
        push 1
       label133:
        multiply
        add
        setMember
        push 10, 1, r:this, '565'
        callMethod
        not
        branchIfTrue label134
        push 0, r:this, '+-(0'
        getMember
        push '9T54'
        callMethod
        pop
       label134:
        push r:this, '(('
        getMember
        push 340
        greaterThan
        dup
        branchIfTrue label135
        pop
        push r:this, '(('
        getMember
        push -40
        lessThan
       label135:
        not
        branchIfTrue label136
        push 0, r:this, 'remove'
        callMethod
        setRegister r:2
        pop
       label136:
        branch label137
       label137:
        push r:this, '}J'
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '}J'
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
        push r:2
        return
      end // of function 

      setMember
      push r:0, '7+L2}', 0
      setMember
      push r:0, '5ZX', 1
      setMember
      push r:0, ';wj;Z', 2
      setMember
      push '44{N'
      function2 (r:2='}J') (r:1='this')
        push r:this, '-iB=', r:'}J'
        setMember
        push r:this, '*M', 0, 1
        initArray
        setMember
        push r:this, '=HU11', 0, 1
        initArray
        setMember
        push r:this, '34++H(', 0
        setMember
        push 1000, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label138
        push '=(,aA'
        getVariable
        push '{UqW0'
        getMember
        push 2, 3
        setMember
       label138:
        push r:this, '-_X}5', '$t', 0, '$l', 0, '$n', 0, '$b', 0, 0, 0, 3
        initArray
        push '$m', 0, 0, 0, 3
        initArray
        push 5
        initObject
        setMember
        push r:this, ']}lAm', r:'}J', 1, '+7U K'
        new
        setMember
        push 0, ';+', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        pop
        push r:this, ')(-', 30, 1, r:this, ']}lAm'
        getMember
        push '18wU*'
        callMethod
        setMember
        push r:this, '4,01', r:this, 1, '=3+P'
        new
        setMember
        push r:this, '1mSg-', 0, '{sRCQ'
        new
        setMember
        push r:this, '+}s,3(', 0, '{sRCQ'
        new
        setMember
        push r:this, ')YJHO', 0, '{sRCQ'
        new
        setMember
        push r:this, '4,01'
        getMember
        push '}J'
        getMember
        push 1, r:this, '+}s,3('
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '}txm6('
      function2 (r:2='=', r:3='4,') (r:1='this')
        push r:'4,'
        setRegister r:5
        pop
        push 50
        setRegister r:7
        pop
        push r:this, '+}s,3('
        getMember
        push 'length'
        getMember
        setRegister r:8
        pop
        push r:'=', r:'='
        multiply
        setRegister r:9
        pop
       label139:
        push r:7, r:7
        decrement
        setRegister r:7
        pop
        push 0
        greaterThan
        not
        branchIfTrue label146
        push r:'4,', NULL
        equals
        not
        branchIfTrue label140
        push 300, r:'=', 2
        multiply
        subtract
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push r:'='
        add
        setRegister r:5
        pop
       label140:
        push '=(,aA'
        getVariable
        push '2BSU'
        getMember
        push r:'=', 2
        multiply
        subtract
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push r:'='
        add
        setRegister r:6
        pop
        push 0
        setRegister r:4
        pop
        branch label142
       label141:
        push r:4
        increment
        setRegister r:4
        pop
       label142:
        push r:4, r:8
        lessThan
        not
        branchIfTrue label144
        push r:this, '+}s,3('
        getMember
        push r:4
        getMember
        setRegister r:10
        pop
        push r:10, '_x'
        getMember
        push r:5
        subtract
        setRegister r:11
        pop
        push r:10, '_y'
        getMember
        push r:6
        subtract
        setRegister r:12
        pop
        push r:11, r:11
        multiply
        push r:12, r:12
        multiply
        add
        push r:9
        lessThan
        not
        branchIfTrue label143
        branch label144
       label143:
        branch label141
       label144:
        push r:4, r:8
        equals
        not
        branchIfTrue label145
        push '((', r:5, ')(', r:6, 2
        initObject
        return
       label145:
        branch label139
       label146:
        push NULL
        return
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this')
        push r:this, '6DoB7'
        getMember
        not
        branchIfTrue label147
        push UNDEF
        return
       label147:
        push r:this, '6DoB7', TRUE
        setMember
        push 0, r:this, '4,01'
        getMember
        push '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, '8Ugi)', '=(,aA'
        getVariable
        push '*h0p]'
        getMember
        push '8Ugi)', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '8Ugi)'
        getMember
        push '_x', r:this, '4,01'
        getMember
        push '(('
        getMember
        setMember
        push r:this, '8Ugi)'
        getMember
        push '_y', r:this, '4,01'
        getMember
        push ')('
        getMember
        push 15
        subtract
        setMember
        push r:this, '8Ugi)', '=(,aA'
        getVariable
        push '*h0p]'
        getMember
        push '[5(-', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '= y]5(', -5
        setMember
        push r:this, '8Ugi)'
        getMember
        push '_x', r:this, '4,01'
        getMember
        push '(('
        getMember
        setMember
        push r:this, '8Ugi)'
        getMember
        push '_y', r:this, '4,01'
        getMember
        push ')('
        getMember
        setMember
        push r:this, '4,01'
        getMember
        push '+EtU}', r:this, '4,01'
        getMember
        push '(('
        getMember
        push 150
        lessThan
        not
        branchIfTrue label148
        push 1
        branch label149
       label148:
        push -1
       label149:
        push 1
        initArray
        setMember
      end // of function 

      setMember
      push r:1, '3t_3E('
      function2 () (r:1='this')
        push NULL, 5, '=(,aA'
        getVariable
        push '*qvX5'
        getMember
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        int
        add
        push 2, r:this, '}txm6('
        callMethod
        setRegister r:2
        pop
        push r:2, NULL
        equals
        not
        branchIfTrue label150
        push UNDEF
        return
       label150:
        push '=(,aA'
        getVariable
        push '{UqW0'
        getMember
        push 1, '-[m(M'
        getVariable
        push '7g,ln'
        callMethod
        setRegister r:3
        pop
        push r:3, r:2, r:this, 3, ' p3z='
        new
        setRegister r:4
        pop
        push r:4, 1, r:this, ')YJHO'
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '=E;uK('
      function2 (r:2=')') (r:1='this')
        push '=(,aA'
        getVariable
        push '0T3E8'
        getMember
        push r:')', ']'
        getMember
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push r:this, '*M', r:this, '*M'
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push r:this, '-_X}5'
        getMember
        push '$n', r:this, '-_X}5'
        getMember
        push '$n'
        getMember
        increment
        setMember
        push r:this, '-_X}5'
        getMember
        push '$b'
        getMember
        push r:')', ']'
        getMember
        push r:this, '-_X}5'
        getMember
        push '$b'
        getMember
        push r:')', ']'
        getMember
        getMember
        increment
        setMember
        push r:this, '*M'
        getMember
        push 0
        getMember
        push '=(,aA'
        getVariable
        push '}Y,OG'
        getMember
        modulo
        push 0
        equals
        not
        branchIfTrue label151
        push r:this, '=HU11', r:this, '=HU11'
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
       label151:
      end // of function 

      setMember
      push r:1, '9pV)Z'
      function2 () (r:1='this')
        push 2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        setRegister r:2
        pop
        push r:2
        not
        branchIfTrue label152
        push 320
        branch label153
       label152:
        push -20
       label153:
        push 40, 2, r:this, '}txm6('
        callMethod
        setRegister r:3
        pop
        push r:3, NULL
        equals
        not
        branchIfTrue label154
        push UNDEF
        return
       label154:
        push r:this, '=HU11'
        getMember
        push 0
        getMember
        push 1
        add
        push 0, 2, '=(,aA'
        getVariable
        push ';KCUw'
        getMember
        push 'slice'
        callMethod
        push 1, '-[m(M'
        getVariable
        push '7g,ln'
        callMethod
        setRegister r:4
        pop
        push r:4, r:3, r:this, 3, '7nzQ'
        new
        setRegister r:5
        pop
        push r:this, '-_X}5'
        getMember
        push '$m'
        getMember
        push r:4, r:this, '-_X}5'
        getMember
        push '$m'
        getMember
        push r:4
        getMember
        increment
        setMember
        push r:5, 1, r:this, '1mSg-'
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '3pbgv'
      function2 (r:2=')', r:3='((', r:4=')(') (r:1='this')
        push r:')', 'yMin'
        getMember
        push r:')('
        add
        push r:')', 'xMin'
        getMember
        push r:'(('
        add
        push 2, r:this, ')(-'
        getMember
        push 'moveTo'
        callMethod
        pop
        push 100, 16711935, 1, 3, r:this, ')(-'
        getMember
        push 'lineStyle'
        callMethod
        pop
        push r:')', 'yMin'
        getMember
        push r:')('
        add
        push r:')', 'xMax'
        getMember
        push r:'(('
        add
        push 2, r:this, ')(-'
        getMember
        push 'lineTo'
        callMethod
        pop
        push r:')', 'yMax'
        getMember
        push r:')('
        add
        push r:')', 'xMax'
        getMember
        push r:'(('
        add
        push 2, r:this, ')(-'
        getMember
        push 'lineTo'
        callMethod
        pop
        push r:')', 'yMax'
        getMember
        push r:')('
        add
        push r:')', 'xMin'
        getMember
        push r:'(('
        add
        push 2, r:this, ')(-'
        getMember
        push 'lineTo'
        callMethod
        pop
        push r:')', 'yMin'
        getMember
        push r:')('
        add
        push r:')', 'xMin'
        getMember
        push r:'(('
        add
        push 2, r:this, ')(-'
        getMember
        push 'lineTo'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '0D 6'
      function2 () (r:1='this')
        push r:this, '34++H(', r:this, '34++H('
        getMember
        push 0.99
        multiply
        push '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        push 0.01
        multiply
        add
        setMember
        push 0, r:this, ')(-'
        getMember
        push 'clear'
        callMethod
        pop
        push 1, 1, '$D', 'charCodeAt'
        callMethod
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        dup
        not
        branchIfTrue label155
        pop
        push 0, ';ndCG'
        getVariable
        push '03(H;'
        callMethod
       label155:
        not
        branchIfTrue label156
        push '=(,aA'
        getVariable
        push '=2AUB', '=(,aA'
        getVariable
        push '=2AUB'
        getMember
        not
        setMember
       label156:
        push r:this, '6DoB7'
        getMember
        not
        branchIfTrue label158
        push r:this, '8Ugi)'
        getMember
        push '_x', r:this, '8Ugi)'
        getMember
        push '_x'
        getMember
        push r:this, '4,01'
        getMember
        push '+EtU}'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '8Ugi)'
        getMember
        push '_y', r:this, '8Ugi)'
        getMember
        push '_y'
        getMember
        push r:this, '= y]5('
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '= y]5(', r:this, '= y]5('
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        add
        setMember
        push r:this, '8Ugi)'
        getMember
        push '_y'
        getMember
        push 330
        greaterThan
        not
        branchIfTrue label157
        push r:this, '-_X}5'
        getMember
        push '$l', r:this, '=HU11'
        getMember
        push 0
        getMember
        setMember
        push r:this, '-_X}5'
        getMember
        push '$t', r:this, '34++H('
        getMember
        push 100
        multiply
        int
        setMember
        push r:this, '-_X}5'
        getMember
        push 1, ';ndCG'
        getVariable
        push '7T4cF('
        callMethod
        pop
        push r:this, '6DoB7', FALSE
        setMember
       label157:
        branch label159
       label158:
        push 0, r:this, '4,01'
        getMember
        push '0D 6'
        callMethod
        pop
       label159:
        push r:this, ')YJHO'
        getMember
        push 'length'
        getMember
        push 3
        lessThan
        dup
        not
        branchIfTrue label160
        pop
        push '=(,aA'
        getVariable
        push '-6cK;'
        getMember
        push r:this, ')YJHO'
        getMember
        push 'length'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        int
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
       label160:
        not
        branchIfTrue label161
        push 0, r:this, '3t_3E('
        callMethod
        pop
       label161:
        push r:this, '=HU11'
        getMember
        push 0
        getMember
        setRegister r:2
        pop
        push r:2, '=(,aA'
        getVariable
        push '3r_nH('
        getMember
        push 'length'
        getMember
        lessThan
        not
        not
        branchIfTrue label162
        push '=(,aA'
        getVariable
        push '3r_nH('
        getMember
        push 'length'
        getMember
        push 1
        subtract
        setRegister r:2
        pop
       label162:
        push r:this, '1mSg-'
        getMember
        push 'length'
        getMember
        push 10
        lessThan
        dup
        not
        branchIfTrue label163
        pop
        push '=(,aA'
        getVariable
        push '3r_nH('
        getMember
        push r:2
        getMember
        push r:this, '1mSg-'
        getMember
        push 'length'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        int
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
       label163:
        not
        branchIfTrue label164
        push 0, r:this, '9pV)Z'
        callMethod
        pop
       label164:
        push 0
        setRegister r:3
        pop
        branch label166
       label165:
        push r:3
        increment
        setRegister r:3
        pop
       label166:
        push r:3, r:this, ')YJHO'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label168
        push 0, r:this, ')YJHO'
        getMember
        push r:3
        getMember
        push '87vE7('
        callMethod
        not
        not
        branchIfTrue label167
        push 1, r:3, r:3
        decrement
        setRegister r:3
        pop
        push 2, r:this, ')YJHO'
        getMember
        push 'splice'
        callMethod
        pop
       label167:
        branch label165
       label168:
        push 0
        setRegister r:3
        pop
        branch label170
       label169:
        push r:3
        increment
        setRegister r:3
        pop
       label170:
        push r:3, r:this, '1mSg-'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label172
        push 0, r:this, '1mSg-'
        getMember
        push r:3
        getMember
        push '87vE7('
        callMethod
        not
        not
        branchIfTrue label171
        push 1, r:3, r:3
        decrement
        setRegister r:3
        pop
        push 2, r:this, '1mSg-'
        getMember
        push 'splice'
        callMethod
        pop
       label171:
        branch label169
       label172:
        push r:this, '4,01'
        getMember
        push '}J'
        getMember
        push '_xscale', r:this, '4,01'
        getMember
        push '0BP'
        getMember
        push 100
        multiply
        setMember
        push 0, r:this, '+}s,3('
        getMember
        push '36}9L('
        callMethod
        dup
        branchIfTrue label173
        pop
        push 0, r:this, ')YJHO'
        getMember
        push '36}9L('
        callMethod
       label173:
        dup
        branchIfTrue label174
        pop
        push 0, r:this, '1mSg-'
        getMember
        push '36}9L('
        callMethod
       label174:
        not
        branchIfTrue label175
        push 0, ';ndCG'
        getVariable
        push '0ze*c'
        callMethod
        pop
       label175:
      end // of function 

      setMember
      push r:1, ',}2X ('
      function2 () (r:1='this')
      end // of function 

      setMember
      push '980Sb'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '}-B2'
      function2 (r:2='}J') (r:1='this')
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        not
        branchIfTrue label176
        push UNDEF
        return
       label176:
        push 16777215, 1, ']{i'
        getVariable
        push '(H5 S'
        callMethod
        pop
        push '980Sb'
        getVariable
        push ')2fr3', r:'}J'
        setMember
        push '980Sb'
        getVariable
        push 'mode', '980Sb'
        getVariable
        push ')2fr3'
        getMember
        push 1, '44{N'
        new
        setMember
      end // of function 

      setMember
      push r:0, '0D 6'
      function2 () (r:1='this')
        push 0, '{-kxL'
        getVariable
        push '87vE7('
        callMethod
        pop
        push 5
        setRegister r:2
        pop
        push '{-kxL'
        getVariable
        push ';ILSy', '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        push r:2
        divide
        setMember
        push '{-kxL'
        getVariable
        push '-V;B', '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push r:2
        divide
        setMember
        push 0
        setRegister r:3
        pop
        branch label178
       label177:
        push r:3
        increment
        setRegister r:3
        pop
       label178:
        push r:3, r:2
        lessThan
        not
        branchIfTrue label179
        push 0, '980Sb'
        getVariable
        push 'mode'
        getMember
        push '0D 6'
        callMethod
        pop
        branch label177
       label179:
      end // of function 

      setMember
      push '-[m(M'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',Hwi)'
      function2 ('-', r:2='5U4B') (r:1='this')
        push '*B'
        var
        push '*B', r:'5U4B'
        function2 () (r:1='this')
          push '*B'
          getVariable
          push 1, 'clearInterval', 1, '3Wt'
          getVariable
          push '16(VU'
          callMethod
          push UNDEF
          callMethod
          pop
          push 0, '-'
          callFunction
          pop
        end // of function 

        push 2, 'setInterval', 1, '3Wt'
        getVariable
        push '16(VU'
        callMethod
        push UNDEF
        callMethod
        setVariable
      end // of function 

      setMember
      push r:0, '}wUHz'
      function2 (r:2='=rJ', r:3='7olX7', r:4='}wUHz') (r:1='this')
        push r:'=rJ', NULL
        equals
        not
        branchIfTrue label180
        push NULL
        return
       label180:
        push r:'7olX7', 'length'
        getMember
        setRegister r:5
        pop
        push r:5, 1
        equals
        not
        branchIfTrue label181
        push r:'}wUHz', 1, r:'7olX7', 1, r:'=rJ', 'split'
        callMethod
        push 'join'
        callMethod
        return
       label181:
        push 0
        setRegister r:7
        pop
        push ''
        setRegister r:8
        pop
       label182:
        push TRUE
        not
        branchIfTrue label184
        push r:7, r:'7olX7', 2, r:'=rJ', 'indexOf'
        callMethod
        setRegister r:6
        pop
        push r:6, -1
        equals
        not
        branchIfTrue label183
        branch label184
       label183:
        push r:8, r:6, r:7, 2, r:'=rJ', 'slice'
        callMethod
        push r:'}wUHz'
        add
        add
        setRegister r:8
        pop
        push r:6, r:5
        add
        setRegister r:7
        pop
        branch label182
       label184:
        push r:8, r:7, 1, r:'=rJ', 'substring'
        callMethod
        add
        return
      end // of function 

      setMember
      push r:0, '* I51'
      function2 (r:2='=rJ') (r:1='this')
        push 0, 'Array'
        new
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        push r:'=rJ', 'length'
        getMember
        setRegister r:6
        pop
        push 0
        setRegister r:3
        pop
        branch label186
       label185:
        push r:3
        increment
        setRegister r:3
        pop
       label186:
        push r:3, r:6
        lessThan
        not
        branchIfTrue label191
        push r:3, 1, r:'=rJ', 'charCodeAt'
        callMethod
        setRegister r:7
        pop
        push r:7, 10
        equals
        dup
        branchIfTrue label187
        pop
        push r:7, 13
        equals
       label187:
        not
        branchIfTrue label190
        push r:3, r:5, 2, r:'=rJ', 'slice'
        callMethod
        push 1, r:4, 'push'
        callMethod
        pop
        push r:7, 13
        equals
        dup
        not
        branchIfTrue label188
        pop
        push r:3, 1
        add
        push 1, r:'=rJ', 'charCodeAt'
        callMethod
        push 10
        equals
       label188:
        not
        branchIfTrue label189
        push r:3
        increment
        setRegister r:3
        pop
       label189:
        push r:3, 1
        add
        setRegister r:5
        pop
       label190:
        branch label185
       label191:
        push r:3, r:5, 2, r:'=rJ', 'slice'
        callMethod
        push 1, r:4, 'push'
        callMethod
        pop
        push r:4
        return
      end // of function 

      setMember
      push r:0, ',JBe0'
      function2 (r:2=';p(') (r:1='this')
        push 0, r:';p(', '],lYS'
        callMethod
        setRegister r:4
        pop
        push r:4, 'length'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:3
        pop
        branch label193
       label192:
        push r:3
        increment
        setRegister r:3
        pop
       label193:
        push r:3, r:5
        lessThan
        not
        branchIfTrue label194
        push r:5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:6
        pop
        push r:5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:7
        pop
        push r:4, r:6
        getMember
        setRegister r:8
        pop
        push r:4, r:6, r:4, r:7
        getMember
        setMember
        push r:4, r:7, r:8
        setMember
        branch label192
       label194:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '4UQ(1'
      function2 (r:2='}J') (r:1='this')
        push 0
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
       label195:
        push r:'}J', '_parent'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label196
        push r:3, r:'}J', '_x'
        getMember
        add
        setRegister r:3
        pop
        push r:4, r:'}J', '_y'
        getMember
        add
        setRegister r:4
        pop
        push r:'}J', '_parent'
        getMember
        setRegister r:'}J'
        pop
        branch label195
       label196:
        push '{2', r:3, '}2', r:4, 2
        initObject
        return
      end // of function 

      setMember
      push r:0, ' Ly7b'
      function2 (r:2='((', r:3='{nq3-(') (r:1='this')
        push r:'(('
        toString
        setRegister r:4
        pop
       label197:
        push r:4, 'length'
        getMember
        push r:'{nq3-('
        lessThan
        not
        branchIfTrue label198
        push '0', r:4
        add
        setRegister r:4
        pop
        branch label197
       label198:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '7g,ln'
      function2 (r:2='(') (r:1='this')
        push 0
        setRegister r:3
        pop
        push r:'(', 'length'
        getMember
        push 1
        subtract
        setRegister r:4
        pop
        branch label200
       label199:
        push r:4
        decrement
        setRegister r:4
        pop
       label200:
        push r:4, 0
        lessThan
        not
        not
        branchIfTrue label201
        push r:3, r:'(', r:4
        getMember
        add
        setRegister r:3
        pop
        branch label199
       label201:
        push r:3, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
       label202:
        push r:3, r:'(', r:4
        getMember
        lessThan
        not
        not
        branchIfTrue label203
        push r:3, r:'(', r:4
        getMember
        subtract
        setRegister r:3
        pop
        push r:4
        increment
        setRegister r:4
        pop
        branch label202
       label203:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '4*fgv'
      function2 (r:2='*QA', r:3='+QA') (r:1='this')
        push r:'*QA', 1, r:'*QA', 'getBounds'
        callMethod
        setRegister r:4
        pop
        push r:'*QA', 1, r:'+QA', 'getBounds'
        callMethod
        setRegister r:5
        pop
        push r:4, 'xMin'
        getMember
        push r:4, 'xMax'
        getMember
        add
        push 2
        divide
        push r:5, 'xMin'
        getMember
        push r:5, 'xMax'
        getMember
        add
        push 2
        divide
        subtract
        setRegister r:6
        pop
        push r:4, 'yMin'
        getMember
        push r:4, 'yMax'
        getMember
        add
        push 2
        divide
        push r:5, 'yMin'
        getMember
        push r:5, 'yMax'
        getMember
        add
        push 2
        divide
        subtract
        setRegister r:7
        pop
        push r:6, r:6
        multiply
        push r:7, r:7
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        return
      end // of function 

      setMember
      push r:0, '16KA'
      function2 ('}J') (r:1='this')
        push '(', 0, 'Array'
        new
        varEquals
        function2 (r:2='4') (r:1='this')
          push '}J'
          getVariable
          push r:'4'
          getMember
          setRegister r:3
          pop
          push r:3, 1, '3Wt'
          getVariable
          push ')goHJ('
          callMethod
          push 'movieclip'
          equals
          dup
          not
          branchIfTrue label204
          pop
          push r:3, '_parent'
          getMember
          push '}J'
          getVariable
          equals
         label204:
          not
          branchIfTrue label205
          push r:3, 1, '('
          getVariable
          push 'push'
          callMethod
          pop
         label205:
        end // of function 

        push '}J'
        getVariable
        push 2, '3Wt'
        getVariable
        push '9ss9+'
        callMethod
        pop
        push '('
        getVariable
        return
      end // of function 

      setMember
      push r:0, 'localToGlobal'
      function2 (r:2='}J', r:3='((', r:4=')(') (r:1='this')
        push 0, '19{O'
        new
        setRegister r:5
        pop
        push r:'((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:5, 1, r:'}J', 'localToGlobal'
        callMethod
        pop
        push '((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push ')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push 2
        initObject
        return
      end // of function 

      setMember
      push r:0, 'globalToLocal'
      function2 (r:2='}J', r:3='((', r:4=')(') (r:1='this')
        push 0, '19{O'
        new
        setRegister r:5
        pop
        push r:'((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:5, 1, r:'}J', 'globalToLocal'
        callMethod
        pop
        push '((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push ')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push 2
        initObject
        return
      end // of function 

      setMember
      push r:0, '{Gq]-'
      function2 () (r:1='this')
        push '$r', '$h', '$w', '$y', '$x', '$box', '$matrixType', '$radial', '$linear', 9
        initArray
        setRegister r:2
        pop
        push '-[m(M'
        getVariable
        push ']cY[2', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:3
        pop
        branch label207
       label206:
        push r:3
        increment
        setRegister r:3
        pop
       label207:
        push r:3, r:2, 'length'
        getMember
        lessThan
        not
        branchIfTrue label208
        push r:2, r:3
        getMember
        setRegister r:4
        pop
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push r:3, 1, 1, r:4, 'substring'
        callMethod
        setMember
        branch label206
       label208:
      end // of function 

      setMember
      push r:0, 'beginGradientFill'
      function2 (r:2='}J', r:3=' Wo02', r:4='=cKzE(', r:5='8)JNX', r:6='7eq8)', r:7='matrix') (r:1='this')
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push NULL
        equals
        not
        branchIfTrue label209
        push 0, '-[m(M'
        getVariable
        push '{Gq]-'
        callMethod
        pop
       label209:
        push 0, '19{O'
        new
        setRegister r:8
        pop
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 3
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 2
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, '(('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 4
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, ')('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 5
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, ' ('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 6
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, '1'
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 7
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, '='
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 8
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:8, r:'7eq8)', r:'8)JNX', r:'=cKzE(', r:' Wo02'
        not
        branchIfTrue label210
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 0
        getMember
        branch label211
       label210:
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 1
        getMember
       label211:
        push 5, r:'}J', 'beginGradientFill'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, ',[A(', 1, 1, '$x', 'substring'
      callMethod
      setMember
      push r:0, '-[A(', 1, 1, '$y', 'substring'
      callMethod
      setMember
      push r:0, ']cY[2', NULL
      setMember
    end // of frame 0
  end // of defineMovieClip 158
  
  exportAssets
    158 as '90D*'
  end // of exportAssets
end
