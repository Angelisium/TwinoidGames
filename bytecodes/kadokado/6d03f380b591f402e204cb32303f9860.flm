movie '6d03f380b591f402e204cb32303f9860.swf' compressed // flash 8, total frames: 1, frame rate: 40 fps, 700x480 px


  defineMovieClip 7 // total frames: 8
  end // of defineMovieClip 7
  
  exportAssets
    7 as '--VJE'
  end // of exportAssets

  defineMovieClip 16 // total frames: 11
  end // of defineMovieClip 16
  
  exportAssets
    16 as '4B1W('
  end // of exportAssets

  defineMovieClip 19 // total frames: 1
  end // of defineMovieClip 19

  defineMovieClip 22 // total frames: 10
  end // of defineMovieClip 22
  
  exportAssets
    22 as '}tepB'
  end // of exportAssets

  defineMovieClip 23 // total frames: 1
  end // of defineMovieClip 23
  
  exportAssets
    23 as ';rbg-'
  end // of exportAssets

  defineMovieClip 25 // total frames: 1
  end // of defineMovieClip 25

  defineMovieClip 26 // total frames: 41
  end // of defineMovieClip 26

  defineMovieClip 27 // total frames: 3

    frame 0
      constants '2', '-', '}J', 'this', '_totalframes', 'gotoAndPlay', '_xscale', '_yscale', ')', 'getBounds', '_x', 'xMin', '_y', 'yMin', ']', '_visible', '2VhU6'  
      push '2', 0.0
      varEquals
     label1:
      push '2'
      getVariable
      push 10
      lessThan
      not
      branchIfTrue label2
      push '-'
      getVariable
      push '-', '2'
      getVariable
      add
      push 16384, '2'
      getVariable
      add
      duplicateClip
      push '}J', 'this'
      getVariable
      push '-', '2'
      getVariable
      add
      getMember
      varEquals
      push 1, '}J'
      getVariable
      push '_totalframes'
      getMember
      random
      add
      push 1, '}J'
      getVariable
      push 'gotoAndPlay'
      callMethod
      pop
      push '}J'
      getVariable
      push '_xscale', '}J'
      getVariable
      push '_yscale', 50, 100
      random
      add
      setRegister r:0
      setMember
      push r:0
      setMember
      push ')', 'this'
      getVariable
      push 1, '}J'
      getVariable
      push 'getBounds'
      callMethod
      varEquals
      push '}J'
      getVariable
      push '_x', 0.0, ')'
      getVariable
      push 'xMin'
      getMember
      subtract
      setMember
      push '}J'
      getVariable
      push '_y', 0.0, ')'
      getVariable
      push 'yMin'
      getMember
      subtract
      setMember
      push '}J'
      getVariable
      push ']', 10, 40
      random
      add
      setMember
      push '2', '2'
      getVariable
      increment
      setVariable
      branch label1
     label2:
      push '-'
      getVariable
      push '_visible', FALSE
      setMember
      push '2VhU6', 50
      setVariable
    end // of frame 0

    frame 1
      constants '2', '}J', 'this', '-', ']', '_alpha', '*', '_currentframe', '_totalframes', '_y', 'Math', 'abs', 'removeMovieClip', '2VhU6', ''  
      push '2', 0.0
      varEquals
     label1:
      push '2'
      getVariable
      push 10
      lessThan
      not
      branchIfTrue label4
      push '}J', 'this'
      getVariable
      push '-', '2'
      getVariable
      add
      getMember
      varEquals
      push '}J'
      getVariable
      push ']', '}J'
      getVariable
      push ']'
      getMember
      decrement
      setMember
      push '}J'
      getVariable
      push ']'
      getMember
      push 10
      lessThan
      not
      branchIfTrue label2
      push '}J'
      getVariable
      push '_alpha', 10, '}J'
      getVariable
      push ']'
      getMember
      multiply
      setMember
     label2:
      push '*', '}J'
      getVariable
      push '_currentframe'
      getMember
      push 2
      multiply
      push '}J'
      getVariable
      push '_totalframes'
      getMember
      subtract
      push '}J'
      getVariable
      push '_totalframes'
      getMember
      divide
      varEquals
      push '}J'
      getVariable
      push '_y', '}J'
      getVariable
      push '_y'
      getMember
      push 0.5, '*'
      getVariable
      push 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      push 1
      multiply
      add
      add
      setMember
      push '}J'
      getVariable
      push ']'
      getMember
      push 0.0
      equals
      not
      branchIfTrue label3
      push 0.0, '}J'
      getVariable
      push 'removeMovieClip'
      callMethod
      pop
     label3:
      push '2', '2'
      getVariable
      increment
      setVariable
      branch label1
     label4:
      push '2VhU6'
      getVariable
      push '2VhU6', '2VhU6'
      getVariable
      decrement
      setVariable
      push 0.0
      lessThan
      not
      branchIfTrue label5
      push ''
      removeClip
     label5:
    end // of frame 1

    frame 2
      gotoFrame 1
      play
    end // of frame 2
  end // of defineMovieClip 27
  
  exportAssets
    27 as '{{ a'
  end // of exportAssets
  
  exportAssets
    22 as '}tepB'
  end // of exportAssets

  defineMovieClip 29 // total frames: 1
  end // of defineMovieClip 29

  defineMovieClip 31 // total frames: 1
  end // of defineMovieClip 31

  defineMovieClip 33 // total frames: 1
  end // of defineMovieClip 33

  defineMovieClip 35 // total frames: 1
  end // of defineMovieClip 35

  defineMovieClip 38 // total frames: 1
  end // of defineMovieClip 38

  defineMovieClip 39 // total frames: 1
  end // of defineMovieClip 39

  defineMovieClip 41 // total frames: 1
  end // of defineMovieClip 41

  defineMovieClip 57 // total frames: 104

    frame 63
      push '', 4
      getProperty
      push 4
      subtract
      gotoAndPlay
    end // of frame 63

    frame 72
      stop
    end // of frame 72

    frame 103
      stop
    end // of frame 103
  end // of defineMovieClip 57
  
  exportAssets
    57 as '4,01'
  end // of exportAssets

  defineMovieClip 59 // total frames: 1
  end // of defineMovieClip 59

  defineMovieClip 60 // total frames: 5
  end // of defineMovieClip 60
  
  exportAssets
    60 as '[9 9'
  end // of exportAssets

  defineMovieClip 63 // total frames: 1

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 63
  
  exportAssets
    63 as '2tMZ ('
  end // of exportAssets

  defineMovieClip 67 // total frames: 1
  end // of defineMovieClip 67
  
  exportAssets
    67 as '(aLl1'
  end // of exportAssets

  defineMovieClip 69 // total frames: 1
  end // of defineMovieClip 69

  defineMovieClip 70 // total frames: 9

    frame 8
      constants '*', '(', 'Math', 'random', '+', '', 'cos', 'sin'  
      push '*'
      getVariable
      push NULL
      equals
      not
      branchIfTrue label1
      push '*', 1
      setVariable
      branch label2
     label1:
      push '*', '*'
      getVariable
      push 0.75
      multiply
      setVariable
     label2:
      push '(', 0.0, 'Math'
      getVariable
      push 'random'
      callMethod
      push 6.28
      multiply
      setVariable
      push '+', 16
      random
      setVariable
      push '', 0.0, '('
      getVariable
      push 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push '+'
      getVariable
      multiply
      setProperty
      push '', 1, '('
      getVariable
      push 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push '+'
      getVariable
      multiply
      setProperty
      push '', 2, '', 3, 100, '+'
      getVariable
      push 4
      multiply
      subtract
      push '*'
      getVariable
      multiply
      setRegister r:0
      setProperty
      push r:0
      setProperty
    end // of frame 8
  end // of defineMovieClip 70

  defineMovieClip 71 // total frames: 60

    frame 59
      push 0.0, '_parent'
      getVariable
      push 'removeMovieClip'
      callMethod
      pop
    end // of frame 59
  end // of defineMovieClip 71

  defineMovieClip 72 // total frames: 3
  end // of defineMovieClip 72
  
  exportAssets
    72 as ');=0I'
  end // of exportAssets

  defineMovieClip 75 // total frames: 1
  end // of defineMovieClip 75
  
  exportAssets
    75 as '[rMZ ('
  end // of exportAssets

  defineMovieClip 80 // total frames: 10
  end // of defineMovieClip 80
  
  exportAssets
    80 as ' Y2T('
  end // of exportAssets

  defineMovieClip 83 // total frames: 1
  end // of defineMovieClip 83

  defineMovieClip 84 // total frames: 6
  end // of defineMovieClip 84
  
  exportAssets
    84 as '1mpQ6'
  end // of exportAssets
  
  exportAssets
    84 as '1mpQ6'
  end // of exportAssets

  defineMovieClip 86 // total frames: 2

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 86
  
  exportAssets
    86 as ';+'
  end // of exportAssets
  
  exportAssets
    86 as ';+'
  end // of exportAssets
  
  exportAssets
    80 as ' Y2T('
  end // of exportAssets
  
  exportAssets
    75 as '[rMZ ('
  end // of exportAssets
  
  exportAssets
    72 as ');=0I'
  end // of exportAssets
  
  exportAssets
    67 as '(aLl1'
  end // of exportAssets
  
  exportAssets
    84 as '1mpQ6'
  end // of exportAssets
  
  exportAssets
    63 as '2tMZ ('
  end // of exportAssets
  
  exportAssets
    60 as '[9 9'
  end // of exportAssets
  
  exportAssets
    57 as '4,01'
  end // of exportAssets
  
  exportAssets
    22 as '}tepB'
  end // of exportAssets
  
  exportAssets
    27 as '{{ a'
  end // of exportAssets
  
  exportAssets
    23 as ';rbg-'
  end // of exportAssets
  
  exportAssets
    16 as '4B1W('
  end // of exportAssets
  
  exportAssets
    16 as '4B1W('
  end // of exportAssets
  
  exportAssets
    7 as '--VJE'
  end // of exportAssets

  defineMovieClip 87 // total frames: 1

    frame 0
      constants '=(,aA', '[MqDO', '*sd+;(', '1[3J,', '*EsxD(', ';ndCG', '*G6KR', '-6cK;', '3d0fx', '9iOaV', '*YW--(', '*h0p]', '6B6Ye', '=Y7h]', '8ITeH(', ']iaT', '-[m(M', ',Hwi)', '*B', 'clearInterval', '3Wt', 'getGlobal', '-', 'setInterval', '}wUHz', 'length', 'split', 'join', '', 'indexOf', 'slice', 'substring', '* I51', 'Array', 'charCodeAt', 'push', ',JBe0', 'duplicate', 'random', '4UQ(1', '_parent', '_x', '_y', '{2', '}2', ' Ly7b', '0', '7g,ln', '4*fgv', 'getBounds', 'xMin', 'xMax', 'yMin', 'yMax', 'Math', 'sqrt', '16KA', '(', '}J', '_typeof', 'movieclip', 'forin', 'localToGlobal', 'Hash', ',[A(', 'set', '-[A(', '((', 'get', ')(', 'globalToLocal', '{Gq]-', '$r', '$h', '$w', '$y', '$x', '$box', '$matrixType', '$radial', '$linear', ']cY[2', 'beginGradientFill', ' (', '1', '=', 'flash', 'Object', 'filters', '{lN=R', ',i0 [', '44{N', ')2fr3', ')26+', '5955', ',;rp)', ']}lAm', '+7U K', ';+', '*=_p_', '1mpQ6', '8mNoI(', '18wU*', '[rMZ (', '1Z 6', 'setMask', '=HU11', '0vWVG', '4,01', '=3+P', '-_X}5', '$b', '$d', '$k', '$c', '$l', '(aLl1', ';rbg-', '*Cq36', 'prototype', '=E;uK(', '4B1W(', ']', '3B(*', '8kN', '5b)bA(', ');=0I', '*Y;B', '4', 'gotoAndStop', ')', 'remove', 'removeMovieClip', '[8FB-', ',DODC', '0Lh{2', '3]S3C', '9oK', '8 mfF(', '}Q4))', '}D4i3', '}]l)+', 'color', '+Da3+', 'text', '-', '$M', '5R', '6R', '1', '2', 'init', '0tJ', '2tMZ (', '=4dBu', 'draw', 'moveTo', 'beginFill', 'curveTo', 'endFill', 'clear', ']baBA', ';)O9x', ' Y2T(', '_currentframe', 'stop', 'lineTo', '}qZx6(', '{-kxL', '-V;B', '7Z**9(', '[9 9', '_xscale', '_yscale', '{K', '-Q)9)', '=J_wk', '_totalframes', '87vE7(', '0D 6', ')SR7-', '+}B(', '_visible', 'pow', '8]X}5', ']}Ou;(', '39XWB(', '5];UB', ' IWA+', ';ILSy', ')Bx7K', '9T54', 'splice', 'destroy', '+-(0', ']rMT-', '1fByC(', '8Ugi)', '{{ a', ' _gkA', '5DNw=', '*)zO-', '31Gqy', '}*A6D(', '7T4cF(', '_name', 'Key', 'LEFT', 'isDown', 'RIGHT', 'DOWN', 'min', 'max', '+Y', 'abs', '980Sb', '(kJ+1(', 'mode', ']{i', 'setColor', '}Zms3', ']1sj+', '-fC3a', 'cur', ']bu40', 'swapDepths', 'attachMC', 'createEmptyMC', '(GbB}', '+2NA', 'getDepth', 'floor', '}oQA7', 'unshift', '08M8', '9(K ;', '5Y-', '}OM8t', 'connect', '(WBt)', '3I0pG', '{;7F4', '8U(wu', '}[cpB', '9xv]A', '{yQ=Q', '+,W', '2y+dV', '(tBee', '3)i[=', ' J3IC', '[6jRc', ')8Fyj', '4plQ5', 'getTimer', '3R,QM', ';y}-6(', '-)Xd+', '[Ad;n', '6GI,F', 'fps'  
      push '=(,aA'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '[MqDO', 10
      setMember
      push r:0, '*sd+;(', 10
      setMember
      push r:0, '1[3J,', 30
      setMember
      push r:0, '*EsxD(', 1500, 1200, 1000, 700, 500, 200, 6
      initArray
      push 1, ';ndCG'
      getVariable
      push '*G6KR'
      callMethod
      setMember
      push r:0, '-6cK;', 600, 1, 20, 3
      initArray
      setMember
      push r:0, '3d0fx', 0
      setMember
      push r:0, '9iOaV', 0
      setMember
      push r:0, '*YW--(', 2
      setMember
      push r:0, '*h0p]', 2
      setMember
      push r:0, '6B6Ye', 3
      setMember
      push r:0, '=Y7h]', 4
      setMember
      push r:0, '8ITeH(', 5
      setMember
      push r:0, ']iaT', 0, 100, 60, 20, 50, 5
      initArray
      push 1, ';ndCG'
      getVariable
      push '*G6KR'
      callMethod
      setMember
      push '-[m(M'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',Hwi)'
      function2 ('-', r:2='5U4B') (r:1='this')
        push '*B'
        var
        push '*B', r:'5U4B'
        function2 () (r:1='this')
          push '*B'
          getVariable
          push 1, 'clearInterval', 1, '3Wt'
          getVariable
          push 'getGlobal'
          callMethod
          push UNDEF
          callMethod
          pop
          push 0, '-'
          callFunction
          pop
        end // of function 

        push 2, 'setInterval', 1, '3Wt'
        getVariable
        push 'getGlobal'
        callMethod
        push UNDEF
        callMethod
        setVariable
      end // of function 

      setMember
      push r:0, '}wUHz'
      function2 (r:2='=rJ', r:3='7olX7', r:4='}wUHz') (r:1='this')
        push r:'=rJ', NULL
        equals
        not
        branchIfTrue label1
        push NULL
        return
       label1:
        push r:'7olX7', 'length'
        getMember
        setRegister r:5
        pop
        push r:5, 1
        equals
        not
        branchIfTrue label2
        push r:'}wUHz', 1, r:'7olX7', 1, r:'=rJ', 'split'
        callMethod
        push 'join'
        callMethod
        return
       label2:
        push 0
        setRegister r:7
        pop
        push ''
        setRegister r:8
        pop
       label3:
        push TRUE
        not
        branchIfTrue label5
        push r:7, r:'7olX7', 2, r:'=rJ', 'indexOf'
        callMethod
        setRegister r:6
        pop
        push r:6, -1
        equals
        not
        branchIfTrue label4
        branch label5
       label4:
        push r:8, r:6, r:7, 2, r:'=rJ', 'slice'
        callMethod
        push r:'}wUHz'
        add
        add
        setRegister r:8
        pop
        push r:6, r:5
        add
        setRegister r:7
        pop
        branch label3
       label5:
        push r:8, r:7, 1, r:'=rJ', 'substring'
        callMethod
        add
        return
      end // of function 

      setMember
      push r:0, '* I51'
      function2 (r:2='=rJ') (r:1='this')
        push 0, 'Array'
        new
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        push r:'=rJ', 'length'
        getMember
        setRegister r:6
        pop
        push 0
        setRegister r:3
        pop
        branch label7
       label6:
        push r:3
        increment
        setRegister r:3
        pop
       label7:
        push r:3, r:6
        lessThan
        not
        branchIfTrue label12
        push r:3, 1, r:'=rJ', 'charCodeAt'
        callMethod
        setRegister r:7
        pop
        push r:7, 10
        equals
        dup
        branchIfTrue label8
        pop
        push r:7, 13
        equals
       label8:
        not
        branchIfTrue label11
        push r:3, r:5, 2, r:'=rJ', 'slice'
        callMethod
        push 1, r:4, 'push'
        callMethod
        pop
        push r:7, 13
        equals
        dup
        not
        branchIfTrue label9
        pop
        push r:3, 1
        add
        push 1, r:'=rJ', 'charCodeAt'
        callMethod
        push 10
        equals
       label9:
        not
        branchIfTrue label10
        push r:3
        increment
        setRegister r:3
        pop
       label10:
        push r:3, 1
        add
        setRegister r:5
        pop
       label11:
        branch label6
       label12:
        push r:3, r:5, 2, r:'=rJ', 'slice'
        callMethod
        push 1, r:4, 'push'
        callMethod
        pop
        push r:4
        return
      end // of function 

      setMember
      push r:0, ',JBe0'
      function2 (r:2=';p(') (r:1='this')
        push 0, r:';p(', 'duplicate'
        callMethod
        setRegister r:4
        pop
        push r:4, 'length'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:3
        pop
        branch label14
       label13:
        push r:3
        increment
        setRegister r:3
        pop
       label14:
        push r:3, r:5
        lessThan
        not
        branchIfTrue label15
        push r:5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:6
        pop
        push r:5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:7
        pop
        push r:4, r:6
        getMember
        setRegister r:8
        pop
        push r:4, r:6, r:4, r:7
        getMember
        setMember
        push r:4, r:7, r:8
        setMember
        branch label13
       label15:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '4UQ(1'
      function2 (r:2='}J') (r:1='this')
        push 0
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
       label16:
        push r:'}J', '_parent'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label17
        push r:3, r:'}J', '_x'
        getMember
        add
        setRegister r:3
        pop
        push r:4, r:'}J', '_y'
        getMember
        add
        setRegister r:4
        pop
        push r:'}J', '_parent'
        getMember
        setRegister r:'}J'
        pop
        branch label16
       label17:
        push '{2', r:3, '}2', r:4, 2
        initObject
        return
      end // of function 

      setMember
      push r:0, ' Ly7b'
      function2 (r:2='((', r:3='{nq3-(') (r:1='this')
        push r:'(('
        toString
        setRegister r:4
        pop
       label18:
        push r:4, 'length'
        getMember
        push r:'{nq3-('
        lessThan
        not
        branchIfTrue label19
        push '0', r:4
        add
        setRegister r:4
        pop
        branch label18
       label19:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '7g,ln'
      function2 (r:2='(') (r:1='this')
        push 0
        setRegister r:3
        pop
        push r:'(', 'length'
        getMember
        push 1
        subtract
        setRegister r:4
        pop
        branch label21
       label20:
        push r:4
        decrement
        setRegister r:4
        pop
       label21:
        push r:4, 0
        lessThan
        not
        not
        branchIfTrue label22
        push r:3, r:'(', r:4
        getMember
        add
        setRegister r:3
        pop
        branch label20
       label22:
        push r:3, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
       label23:
        push r:3, r:'(', r:4
        getMember
        lessThan
        not
        not
        branchIfTrue label24
        push r:3, r:'(', r:4
        getMember
        subtract
        setRegister r:3
        pop
        push r:4
        increment
        setRegister r:4
        pop
        branch label23
       label24:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '4*fgv'
      function2 (r:2='*QA', r:3='+QA') (r:1='this')
        push r:'*QA', 1, r:'*QA', 'getBounds'
        callMethod
        setRegister r:4
        pop
        push r:'*QA', 1, r:'+QA', 'getBounds'
        callMethod
        setRegister r:5
        pop
        push r:4, 'xMin'
        getMember
        push r:4, 'xMax'
        getMember
        add
        push 2
        divide
        push r:5, 'xMin'
        getMember
        push r:5, 'xMax'
        getMember
        add
        push 2
        divide
        subtract
        setRegister r:6
        pop
        push r:4, 'yMin'
        getMember
        push r:4, 'yMax'
        getMember
        add
        push 2
        divide
        push r:5, 'yMin'
        getMember
        push r:5, 'yMax'
        getMember
        add
        push 2
        divide
        subtract
        setRegister r:7
        pop
        push r:6, r:6
        multiply
        push r:7, r:7
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        return
      end // of function 

      setMember
      push r:0, '16KA'
      function2 ('}J') (r:1='this')
        push '(', 0, 'Array'
        new
        varEquals
        function2 (r:2='4') (r:1='this')
          push '}J'
          getVariable
          push r:'4'
          getMember
          setRegister r:3
          pop
          push r:3, 1, '3Wt'
          getVariable
          push '_typeof'
          callMethod
          push 'movieclip'
          equals
          dup
          not
          branchIfTrue label25
          pop
          push r:3, '_parent'
          getMember
          push '}J'
          getVariable
          equals
         label25:
          not
          branchIfTrue label26
          push r:3, 1, '('
          getVariable
          push 'push'
          callMethod
          pop
         label26:
        end // of function 

        push '}J'
        getVariable
        push 2, '3Wt'
        getVariable
        push 'forin'
        callMethod
        pop
        push '('
        getVariable
        return
      end // of function 

      setMember
      push r:0, 'localToGlobal'
      function2 (r:2='}J', r:3='((', r:4=')(') (r:1='this')
        push 0, 'Hash'
        new
        setRegister r:5
        pop
        push r:'((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:5, 1, r:'}J', 'localToGlobal'
        callMethod
        pop
        push '((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push ')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push 2
        initObject
        return
      end // of function 

      setMember
      push r:0, 'globalToLocal'
      function2 (r:2='}J', r:3='((', r:4=')(') (r:1='this')
        push 0, 'Hash'
        new
        setRegister r:5
        pop
        push r:'((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:5, 1, r:'}J', 'globalToLocal'
        callMethod
        pop
        push '((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push ')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push 2
        initObject
        return
      end // of function 

      setMember
      push r:0, '{Gq]-'
      function2 () (r:1='this')
        push '$r', '$h', '$w', '$y', '$x', '$box', '$matrixType', '$radial', '$linear', 9
        initArray
        setRegister r:2
        pop
        push '-[m(M'
        getVariable
        push ']cY[2', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:3
        pop
        branch label28
       label27:
        push r:3
        increment
        setRegister r:3
        pop
       label28:
        push r:3, r:2, 'length'
        getMember
        lessThan
        not
        branchIfTrue label29
        push r:2, r:3
        getMember
        setRegister r:4
        pop
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push r:3, 1, 1, r:4, 'substring'
        callMethod
        setMember
        branch label27
       label29:
      end // of function 

      setMember
      push r:0, 'beginGradientFill'
      function2 (r:2='}J', r:3=' Wo02', r:4='=cKzE(', r:5='8)JNX', r:6='7eq8)', r:7='matrix') (r:1='this')
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push NULL
        equals
        not
        branchIfTrue label30
        push 0, '-[m(M'
        getVariable
        push '{Gq]-'
        callMethod
        pop
       label30:
        push 0, 'Hash'
        new
        setRegister r:8
        pop
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 3
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 2
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, '(('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 4
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, ')('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 5
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, ' ('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 6
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, '1'
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 7
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, '='
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 8
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:8, r:'7eq8)', r:'8)JNX', r:'=cKzE(', r:' Wo02'
        not
        branchIfTrue label31
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 0
        getMember
        branch label32
       label31:
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 1
        getMember
       label32:
        push 5, r:'}J', 'beginGradientFill'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, ',[A(', 1, 1, '$x', 'substring'
      callMethod
      setMember
      push r:0, '-[A(', 1, 1, '$y', 'substring'
      callMethod
      setMember
      push r:0, ']cY[2', NULL
      setMember
      push 'flash'
      getVariable
      not
      not
      branchIfTrue label33
      push 'flash', 0, 'Object'
      new
      setVariable
     label33:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      not
      not
      branchIfTrue label34
      push 'flash'
      getVariable
      push 'filters', 0, 'Object'
      new
      setMember
     label34:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      push '{lN=R'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setMember
      push ',i0 ['
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push '44{N'
      function2 (r:2='}J') (r:1='this')
        push r:this, ')2fr3', r:'}J'
        setMember
        push r:this, ')26+', 0, 1
        initArray
        setMember
        push r:this, '5955', '=(,aA'
        getVariable
        push ']iaT'
        getMember
        push 0
        getMember
        setMember
        push r:this, ',;rp)', 0, 1
        initArray
        setMember
        push r:this, ']}lAm', r:'}J', 1, '+7U K'
        new
        setMember
        push r:this, ';+', '=(,aA'
        getVariable
        push '3d0fx'
        getMember
        push ';+', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '1mpQ6', '=(,aA'
        getVariable
        push '9iOaV'
        getMember
        push '1mpQ6', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '8mNoI(', '=(,aA'
        getVariable
        push '9iOaV'
        getMember
        push 1, r:this, ']}lAm'
        getMember
        push '18wU*'
        callMethod
        setMember
        push r:this, '[rMZ (', '=(,aA'
        getVariable
        push '*YW--('
        getMember
        push '[rMZ (', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '1Z 6', '=(,aA'
        getVariable
        push '*YW--('
        getMember
        push 1, r:this, ']}lAm'
        getMember
        push '18wU*'
        callMethod
        setMember
        push r:this, '1Z 6'
        getMember
        push 1, r:this, '[rMZ ('
        getMember
        push 'setMask'
        callMethod
        pop
        push r:this, '8mNoI('
        getMember
        push 1, r:this, '1mpQ6'
        getMember
        push 'setMask'
        callMethod
        pop
        push r:this, '=HU11', r:this, 1, '0vWVG'
        new
        setMember
        push r:this, '4,01', '=(,aA'
        getVariable
        push '*sd+;('
        getMember
        push 2
        subtract
        push 1, r:this, 3, '=3+P'
        new
        setMember
        push r:this, '-_X}5', '$b', 0, 0, 0, 0, 0, 0, 0, 0, 8
        initArray
        push '$d', 0, '$k', 0, '$c', 0, '$l', 0, 5
        initObject
        setMember
        push r:this, '(aLl1', '=(,aA'
        getVariable
        push '8ITeH('
        getMember
        push '(aLl1', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, ';rbg-', '=(,aA'
        getVariable
        push '8ITeH('
        getMember
        push ';rbg-', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, ';rbg-'
        getMember
        push '_x', 100
        setMember
        push 0, 0, 2, r:this, '*Cq36'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '=E;uK('
      function2 (r:2='5R', r:3='6R') (r:1='this')
        push r:this, '4B1W('
        getMember
        push r:'5R'
        getMember
        push r:'6R'
        getMember
        setRegister r:4
        pop
        push r:4, NULL
        equals
        not
        branchIfTrue label35
        push UNDEF
        return
       label35:
        push r:this, '-_X}5'
        getMember
        push '$b'
        getMember
        push r:4, ']'
        getMember
        push r:this, '-_X}5'
        getMember
        push '$b'
        getMember
        push r:4, ']'
        getMember
        getMember
        increment
        setMember
        push '=(,aA'
        getVariable
        push ']iaT'
        getMember
        push 3
        getMember
        setRegister r:5
        pop
        push r:4, ']'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label36
        push r:0, 1
        strictEquals
        branchIfTrue label38
        branch label40
       label36:
        push r:this, '5955', '=(,aA'
        getVariable
        push ']iaT'
        getMember
        push 1
        getMember
        push r:this, '5955'
        getMember
        push 2, ';ndCG'
        getVariable
        push '3B(*'
        callMethod
        setMember
        push r:this, '5955'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        push r:5, 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        lessThan
        not
        not
        branchIfTrue label37
        push r:this, '5955', r:5
        setMember
       label37:
        branch label41
       label38:
        push r:this, '5955', '=(,aA'
        getVariable
        push ']iaT'
        getMember
        push 2
        getMember
        push r:this, '5955'
        getMember
        push 2, ';ndCG'
        getVariable
        push '3B(*'
        callMethod
        setMember
        push r:this, '5955'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        push r:5, 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        lessThan
        not
        not
        branchIfTrue label39
        push r:this, '5955', r:5
        setMember
       label39:
        branch label41
       label40:
        push '=(,aA'
        getVariable
        push '*EsxD('
        getMember
        push r:4, ']'
        getMember
        push 2
        subtract
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        branch label41
       label41:
        push '=(,aA'
        getVariable
        push '=Y7h]'
        getMember
        push ');=0I', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:6
        pop
        push r:6, '_x', r:4, '_x'
        getMember
        push 15
        add
        setMember
        push r:6, '_y', r:4, '_y'
        getMember
        push 15
        add
        setMember
        push r:6, 1, r:this, '*Y;B'
        getMember
        push 'push'
        callMethod
        pop
        push '4', 1, r:6, 'gotoAndStop'
        callMethod
        pop
        push r:4, ')'
        getMember
        push 1, r:this, '=HU11'
        getMember
        push '4B1W('
        getMember
        push 'remove'
        callMethod
        pop
        push 0, r:4, 'removeMovieClip'
        callMethod
        pop
        push r:this, '4B1W('
        getMember
        push r:'5R'
        getMember
        push r:'6R', NULL
        setMember
      end // of function 

      setMember
      push r:1, '[8FB-'
      function2 () (r:1='this')
        push 0, 'Array'
        new
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label43
       label42:
        push r:3
        increment
        setRegister r:3
        pop
       label43:
        push r:3, '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        lessThan
        not
        branchIfTrue label47
        push r:2, r:3, 0, 'Array'
        new
        setMember
        push 0
        setRegister r:4
        pop
        branch label45
       label44:
        push r:4
        increment
        setRegister r:4
        pop
       label45:
        push r:4, '=(,aA'
        getVariable
        push '*sd+;('
        getMember
        push 1
        subtract
        lessThan
        not
        branchIfTrue label46
        push r:2, r:3
        getMember
        push r:4, '0vWVG'
        getVariable
        push ',DODC'
        getMember
        setMember
        branch label44
       label46:
        push r:2, r:3
        getMember
        push r:4, '0vWVG'
        getVariable
        push '0Lh{2'
        getMember
        setMember
        push r:2, r:3
        getMember
        push r:4, 1
        add
        push '0vWVG'
        getVariable
        push ',DODC'
        getMember
        setMember
        branch label42
       label47:
        push r:2, 0
        getMember
        push 8, '0vWVG'
        getVariable
        push '0Lh{2'
        getMember
        setMember
        push r:2, 9
        getMember
        push 8, '0vWVG'
        getVariable
        push '0Lh{2'
        getMember
        setMember
        push 0
        setRegister r:5
        pop
        branch label49
       label48:
        push r:5
        increment
        setRegister r:5
        pop
       label49:
        push r:5, 3
        lessThan
        not
        branchIfTrue label50
        push r:2, 8, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        add
        getMember
        push 9, '0vWVG'
        getVariable
        push '3]S3C'
        getMember
        setMember
        branch label48
       label50:
        push r:this, '=HU11'
        getMember
        push '9oK', r:2
        setMember
      end // of function 

      setMember
      push r:1, '*Cq36'
      function2 (r:2='{2', r:3='}2') (r:1='this')
        push 0
        setRegister r:5
        pop
        branch label52
       label51:
        push r:5
        increment
        setRegister r:5
        pop
       label52:
        push r:5, '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        lessThan
        not
        branchIfTrue label56
        push 0
        setRegister r:6
        pop
        branch label54
       label53:
        push r:6
        increment
        setRegister r:6
        pop
       label54:
        push r:6, '=(,aA'
        getVariable
        push '*sd+;('
        getMember
        lessThan
        not
        branchIfTrue label55
        push 0, r:this, '8 mfF('
        getMember
        push r:5
        getMember
        push r:6
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push 0, r:this, '}Q4))'
        getMember
        push r:5
        getMember
        push r:6
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push 0, r:this, '4B1W('
        getMember
        push r:5
        getMember
        push r:6
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label53
       label55:
        branch label51
       label56:
        push 0
        setRegister r:4
        pop
        branch label58
       label57:
        push r:4
        increment
        setRegister r:4
        pop
       label58:
        push r:4, r:this, '*Y;B'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label59
        push 0, r:this, '*Y;B'
        getMember
        push r:4
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label57
       label59:
        push 0
        setRegister r:4
        pop
        branch label61
       label60:
        push r:4
        increment
        setRegister r:4
        pop
       label61:
        push r:4, r:this, '}D4i3'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label62
        push 0, r:this, '}D4i3'
        getMember
        push r:4
        getMember
        push '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label60
       label62:
        push 0
        setRegister r:4
        pop
        branch label64
       label63:
        push r:4
        increment
        setRegister r:4
        pop
       label64:
        push r:4, r:this, '}]l)+'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label65
        push 0, r:this, '}]l)+'
        getMember
        push r:4
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label63
       label65:
        push r:this, ')26+', r:this, ')26+'
        getMember
        push 0
        getMember
        push r:'}2'
        add
        push 1
        initArray
        setMember
        push r:this, ')26+'
        getMember
        push 0
        getMember
        push 40
        greaterThan
        not
        branchIfTrue label66
        push r:this, 'color', 5
        setMember
        branch label70
       label66:
        push r:this, ')26+'
        getMember
        push 0
        getMember
        push 30
        greaterThan
        not
        branchIfTrue label67
        push r:this, 'color', 4
        setMember
        branch label70
       label67:
        push r:this, ')26+'
        getMember
        push 0
        getMember
        push 20
        greaterThan
        not
        branchIfTrue label68
        push r:this, 'color', 3
        setMember
        branch label70
       label68:
        push r:this, ')26+'
        getMember
        push 0
        getMember
        push 10
        greaterThan
        not
        branchIfTrue label69
        push r:this, 'color', 2
        setMember
        branch label70
       label69:
        push r:this, 'color', 1
        setMember
       label70:
        push r:this, 'color'
        getMember
        toString
        push 1, r:this, '1mpQ6'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '-_X}5'
        getMember
        push '$d', r:this, '-_X}5'
        getMember
        push '$d'
        getMember
        push r:'}2'
        add
        setMember
        push r:this, '-_X}5'
        getMember
        push '$l', r:this, '-_X}5'
        getMember
        push '$l'
        getMember
        increment
        setMember
        push r:this, '(aLl1'
        getMember
        push '+Da3+'
        getMember
        push 'text', r:this, ')26+'
        getMember
        push 0
        getMember
        push 0
        equals
        not
        branchIfTrue label71
        push '0'
        branch label72
       label71:
        push '-', r:this, ')26+'
        getMember
        push 0
        getMember
        add
       label72:
        push 1, 1, '$M', 'substring'
        callMethod
        add
        setMember
        push r:this, '*Y;B', 0, 'Array'
        new
        setMember
        push r:this, '8 mfF(', 0, 'Array'
        new
        setMember
        push r:this, '}]l)+', 0, 'Array'
        new
        setMember
        push r:this, '}D4i3', 0, 'Array'
        new
        setMember
        push r:this, '}Q4))', 0, 'Array'
        new
        setMember
        push r:this, '4B1W(', 0, 'Array'
        new
        setMember
        push r:this, '=HU11'
        getMember
        push '5R', r:this, '=HU11'
        getMember
        push '5R'
        getMember
        push r:'{2'
        add
        setMember
        push r:this, '=HU11'
        getMember
        push '6R', r:this, '=HU11'
        getMember
        push '6R'
        getMember
        push r:'}2'
        add
        setMember
        push r:this, '4,01'
        getMember
        push '((', r:this, '4,01'
        getMember
        push '(('
        getMember
        push 0
        getMember
        push r:'{2', 290
        multiply
        subtract
        push 1
        initArray
        setMember
        push r:this, '4,01'
        getMember
        push ')(', r:this, '4,01'
        getMember
        push ')('
        getMember
        push 0
        getMember
        push r:'}2', 290
        multiply
        subtract
        push 1
        initArray
        setMember
        push r:this, ')26+'
        getMember
        push 0
        getMember
        push 0
        equals
        not
        branchIfTrue label73
        push '1', 1, r:this, ';+'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push 0, r:this, '[8FB-'
        callMethod
        pop
        branch label74
       label73:
        push '2', 1, r:this, ';+'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, ')26+'
        getMember
        push 0
        getMember
        push r:this, '4,01'
        getMember
        push ')('
        getMember
        push 0
        getMember
        push '=(,aA'
        getVariable
        push '1[3J,'
        getMember
        divide
        int
        push r:this, '4,01'
        getMember
        push '(('
        getMember
        push 0
        getMember
        push '=(,aA'
        getVariable
        push '1[3J,'
        getMember
        divide
        int
        push 3, r:this, '=HU11'
        getMember
        push 'init'
        callMethod
        pop
       label74:
        push r:this, 'color'
        getMember
        toString
        push 1, r:this, ';+'
        getMember
        push '0tJ'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push 0
        setRegister r:4
        pop
        branch label76
       label75:
        push r:4
        increment
        setRegister r:4
        pop
       label76:
        push r:4, r:this, '=HU11'
        getMember
        push '4B1W('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label78
        push r:this, '=HU11'
        getMember
        push '4B1W('
        getMember
        push r:4
        getMember
        setRegister r:7
        pop
        push '=(,aA'
        getVariable
        push '6B6Ye'
        getMember
        push '4B1W(', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:8
        pop
        push r:8, '_x', r:7, '(('
        getMember
        push '=(,aA'
        getVariable
        push '1[3J,'
        getMember
        multiply
        setMember
        push r:8, '_y', r:7, ')('
        getMember
        push '=(,aA'
        getVariable
        push '1[3J,'
        getMember
        multiply
        setMember
        push r:7, ']'
        getMember
        push 1
        add
        toString
        push 1, r:8, 'gotoAndStop'
        callMethod
        pop
        push r:8, ']', r:7, ']'
        getMember
        setMember
        push r:8, ')', r:7
        setMember
        push r:this, '4B1W('
        getMember
        push r:7, '(('
        getMember
        getMember
        push NULL
        equals
        not
        branchIfTrue label77
        push r:this, '4B1W('
        getMember
        push r:7, '(('
        getMember
        push 0, 'Array'
        new
        setMember
       label77:
        push r:this, '4B1W('
        getMember
        push r:7, '(('
        getMember
        getMember
        push r:7, ')('
        getMember
        push r:8
        setMember
        branch label75
       label78:
        push 0
        setRegister r:5
        pop
        branch label80
       label79:
        push r:5
        increment
        setRegister r:5
        pop
       label80:
        push r:5, '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        lessThan
        not
        branchIfTrue label86
        push 0
        setRegister r:6
        pop
        branch label82
       label81:
        push r:6
        increment
        setRegister r:6
        pop
       label82:
        push r:6, '=(,aA'
        getVariable
        push '*sd+;('
        getMember
        lessThan
        not
        branchIfTrue label85
        push r:this, '=HU11'
        getMember
        push '9oK'
        getMember
        push r:5
        getMember
        push r:6
        getMember
        setRegister r:9
        pop
        push r:9, '0vWVG'
        getVariable
        push '0Lh{2'
        getMember
        equals
        not
        branchIfTrue label84
        push '=(,aA'
        getVariable
        push '*YW--('
        getMember
        push '2tMZ (', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:10
        pop
        push r:10, '_x', r:5, '=(,aA'
        getVariable
        push '1[3J,'
        getMember
        multiply
        setMember
        push r:10, '_y', r:6, '=(,aA'
        getVariable
        push '1[3J,'
        getMember
        multiply
        setMember
        push r:this, '8 mfF('
        getMember
        push r:5
        getMember
        push NULL
        equals
        not
        branchIfTrue label83
        push r:this, '8 mfF('
        getMember
        push r:5, 0, 'Array'
        new
        setMember
       label83:
        push r:this, '8 mfF('
        getMember
        push r:5
        getMember
        push r:6, r:10
        setMember
       label84:
        branch label81
       label85:
        branch label79
       label86:
        push 0, r:this, '=4dBu'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, 'draw'
      function2 (r:2='{f', r:3='*i', r:4=',') (r:1='this')
        push '=(,aA'
        getVariable
        push '1[3J,'
        getMember
        setRegister r:5
        pop
        push r:',', r:5
        multiply
        setRegister r:6
        pop
        push r:'{f', 7
        modulo
        push 1
        add
        push 2
        multiply
        setRegister r:7
        pop
        push r:'*i', 7
        modulo
        push 1
        add
        push 2
        multiply
        setRegister r:8
        pop
        push r:'*i', r:'{f', r:6
        subtract
        push 2, r:this, '8mNoI('
        getMember
        push 'moveTo'
        callMethod
        pop
        push 100, 0, 2, r:this, '8mNoI('
        getMember
        push 'beginFill'
        callMethod
        pop
        push r:'*i', r:'{f', r:'*i', r:8
        subtract
        push r:'{f', r:6, 2
        divide
        subtract
        push 4, r:this, '8mNoI('
        getMember
        push 'curveTo'
        callMethod
        pop
        push r:'*i', r:5
        add
        push r:'{f', r:'*i', r:5, 2
        divide
        add
        push r:'{f', r:7
        add
        push 4, r:this, '8mNoI('
        getMember
        push 'curveTo'
        callMethod
        pop
        push r:'*i', r:5
        add
        push r:'{f', r:6
        subtract
        push r:'*i', r:5
        add
        push r:8
        add
        push r:'{f', r:6, 2
        divide
        subtract
        push 4, r:this, '8mNoI('
        getMember
        push 'curveTo'
        callMethod
        pop
        push r:'*i', r:'{f', r:6
        subtract
        push r:'*i', r:5, 2
        divide
        add
        push r:'{f', r:6
        subtract
        push r:7
        subtract
        push 4, r:this, '8mNoI('
        getMember
        push 'curveTo'
        callMethod
        pop
        push 0, r:this, '8mNoI('
        getMember
        push 'endFill'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '=4dBu'
      function2 () (r:1='this')
        push 0, r:this, '1Z 6'
        getMember
        push 'clear'
        callMethod
        pop
        push 0, r:this, '8mNoI('
        getMember
        push 'clear'
        callMethod
        pop
        push 0
        setRegister r:4
        pop
        push '=(,aA'
        getVariable
        push '1[3J,'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:3
        pop
        branch label88
       label87:
        push r:3
        increment
        setRegister r:3
        pop
       label88:
        push r:3, '=(,aA'
        getVariable
        push '*sd+;('
        getMember
        lessThan
        not
        branchIfTrue label99
        push r:3, r:5
        multiply
        setRegister r:6
        pop
        push 0
        setRegister r:2
        pop
        branch label90
       label89:
        push r:2
        increment
        setRegister r:2
        pop
       label90:
        push r:2, '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        lessThan
        not
        branchIfTrue label97
        push r:this, '=HU11'
        getMember
        push '9oK'
        getMember
        push r:2
        getMember
        push r:3
        getMember
        setRegister r:7
        pop
        push r:2, r:5
        multiply
        setRegister r:8
        pop
        push r:7, '0vWVG'
        getVariable
        push '3]S3C'
        getMember
        equals
        not
        branchIfTrue label91
        push r:4
        increment
        setRegister r:4
        pop
        branch label96
       label91:
        push r:4, 0
        greaterThan
        not
        branchIfTrue label92
        push r:4, r:6, r:8, 3, r:this, 'draw'
        callMethod
        pop
        push 0
        setRegister r:4
        pop
       label92:
        push r:7, '0vWVG'
        getVariable
        push ']baBA'
        getMember
        equals
        not
        branchIfTrue label96
        push r:this, '=HU11'
        getMember
        push '9oK'
        getMember
        push r:2
        getMember
        push r:3, 1
        add
        getMember
        push '0vWVG'
        getVariable
        push ',DODC'
        getMember
        equals
        dup
        not
        branchIfTrue label93
        pop
        push r:3, '=(,aA'
        getVariable
        push '*sd+;('
        getMember
        push 1
        subtract
        equals
        not
       label93:
        not
        branchIfTrue label95
        push r:this, '=HU11'
        getMember
        push '9oK'
        getMember
        push r:2
        getMember
        push r:3, '0vWVG'
        getVariable
        push ';)O9x'
        getMember
        setMember
        push '0vWVG'
        getVariable
        push ';)O9x'
        getMember
        setRegister r:7
        pop
        push '=(,aA'
        getVariable
        push '*YW--('
        getMember
        push ' Y2T(', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:9
        pop
        push r:this, '}Q4))'
        getMember
        push r:2
        getMember
        push r:3
        getMember
        setRegister r:10
        pop
        push r:10, NULL
        equals
        not
        not
        branchIfTrue label94
        push r:10, '_currentframe'
        getMember
        toString
        push 1, r:9, 'gotoAndStop'
        callMethod
        pop
        push 0, r:10, 'removeMovieClip'
        callMethod
        pop
       label94:
        push 0, r:9, 'stop'
        callMethod
        pop
        push r:9, '6R', r:6
        setMember
        push r:9, '((', r:2
        setMember
        push r:9, ')(', r:3
        setMember
        push r:9, ']', 1
        setMember
        push r:9, '_x', r:8
        setMember
        push r:9, '_y', r:6
        setMember
        push r:9, 1, r:this, '}]l)+'
        getMember
        push 'push'
        callMethod
        pop
        branch label96
       label95:
        push r:6, r:8, 2, r:this, '1Z 6'
        getMember
        push 'moveTo'
        callMethod
        pop
        push 100, 0, 2, r:this, '1Z 6'
        getMember
        push 'beginFill'
        callMethod
        pop
        push r:6, r:8, r:5
        add
        push 2, r:this, '1Z 6'
        getMember
        push 'lineTo'
        callMethod
        pop
        push r:6, r:5
        add
        push r:8, r:5
        add
        push 2, r:this, '1Z 6'
        getMember
        push 'lineTo'
        callMethod
        pop
        push r:6, r:5
        add
        push r:8, 2, r:this, '1Z 6'
        getMember
        push 'lineTo'
        callMethod
        pop
        push r:6, r:8, 2, r:this, '1Z 6'
        getMember
        push 'lineTo'
        callMethod
        pop
        push 0, r:this, '1Z 6'
        getMember
        push 'endFill'
        callMethod
        pop
       label96:
        branch label89
       label97:
        push r:4, 0
        greaterThan
        not
        branchIfTrue label98
        push r:4, r:6, r:2, r:5
        multiply
        push 3, r:this, 'draw'
        callMethod
        pop
        push 0
        setRegister r:4
        pop
       label98:
        branch label87
       label99:
      end // of function 

      setMember
      push r:1, '}qZx6('
      function2 (r:2='5R', r:3='6R', r:4='{2', r:5='}2') (r:1='this')
        push 5, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        int
        setRegister r:7
        pop
        push 0, 50, r:this, ')26+'
        getMember
        push 0
        getMember
        add
        subtract
        push 200
        divide
        push 1, r:this, '7Z**9('
        callMethod
        pop
        push 0
        setRegister r:6
        pop
        branch label101
       label100:
        push r:6
        increment
        setRegister r:6
        pop
       label101:
        push r:6, r:7
        lessThan
        not
        branchIfTrue label102
        push '=(,aA'
        getVariable
        push '3d0fx'
        getMember
        push '[9 9', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:8
        pop
        push r:'5R', '=(,aA'
        getVariable
        push '1[3J,'
        getMember
        multiply
        push '=(,aA'
        getVariable
        push '1[3J,'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        add
        setRegister r:9
        pop
        push r:'6R', '=(,aA'
        getVariable
        push '1[3J,'
        getMember
        multiply
        push '=(,aA'
        getVariable
        push '1[3J,'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        add
        setRegister r:10
        pop
        push r:this, 'color'
        getMember
        toString
        push 1, r:8, 'gotoAndStop'
        callMethod
        pop
        push r:8, '_xscale', 50, 70, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        add
        setMember
        push r:8, '_yscale', r:8, '_xscale'
        getMember
        setMember
        push r:8, '_x', r:9
        setMember
        push r:8, '_y', r:10
        setMember
        push '}J', r:8, '((', r:9, ')(', r:10, '5R', r:'5R', '6R', r:'6R', '{K', r:'6R', 1
        add
        push '=(,aA'
        getVariable
        push '1[3J,'
        getMember
        multiply
        push '{2', r:'{2', 10, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 20
        divide
        add
        push '}2', r:'}2', 10, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 20
        divide
        subtract
        push 8
        initObject
        push 1, r:this, '}D4i3'
        getMember
        push 'push'
        callMethod
        pop
        branch label100
       label102:
      end // of function 

      setMember
      push r:1, '7Z**9('
      function2 (r:2='+') (r:1='this')
        push r:this, ',;rp)', r:this, ',;rp)'
        getMember
        push 0
        getMember
        push r:'+'
        add
        push 1
        initArray
        setMember
        push r:this, ',;rp)'
        getMember
        push 0
        getMember
        int
        setRegister r:3
        pop
        push r:this, ',;rp)', r:this, ',;rp)'
        getMember
        push 0
        getMember
        push r:3
        subtract
        push 1
        initArray
        setMember
        push r:this, '5955', r:3, 1, ';ndCG'
        getVariable
        push '-Q)9)'
        callMethod
        push r:this, '5955'
        getMember
        push 2, ';ndCG'
        getVariable
        push '3B(*'
        callMethod
        setMember
      end // of function 

      setMember
      push r:1, '=J_wk'
      function2 (r:2='((', r:3=')(') (r:1='this')
        push r:this, '}Q4))'
        getMember
        push r:'(('
        getMember
        push NULL
        equals
        not
        branchIfTrue label103
        push r:this, '}Q4))'
        getMember
        push r:'((', 0, 'Array'
        new
        setMember
       label103:
        push r:this, '}Q4))'
        getMember
        push r:'(('
        getMember
        push r:')('
        getMember
        setRegister r:4
        pop
        push r:4, NULL
        equals
        not
        branchIfTrue label104
        push '=(,aA'
        getVariable
        push '*YW--('
        getMember
        push ' Y2T(', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:4
        pop
        push r:4, '_x', r:'((', '=(,aA'
        getVariable
        push '1[3J,'
        getMember
        multiply
        setMember
        push r:4, '_y', r:')(', '=(,aA'
        getVariable
        push '1[3J,'
        getMember
        multiply
        setMember
        push r:4, '-', 0
        setMember
        push 0, r:4, 'stop'
        callMethod
        pop
        push r:this, '}Q4))'
        getMember
        push r:'(('
        getMember
        push r:')(', r:4
        setMember
       label104:
        push r:4, '-'
        getMember
        push 5
        greaterThan
        not
        branchIfTrue label105
        push 0, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        push 2
        divide
        push 1, r:this, '7Z**9('
        callMethod
        pop
       label105:
        push r:4, '-', r:4, '-'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 2
        divide
        add
        setMember
        push r:4, '-'
        getMember
        int
        push 1
        add
        toString
        push 1, r:4, 'gotoAndStop'
        callMethod
        pop
        push r:4, '-'
        getMember
        push r:4, '_totalframes'
        getMember
        lessThan
        not
        not
        branchIfTrue label106
        push 0, r:4, 'removeMovieClip'
        callMethod
        pop
        push r:this, '-_X}5'
        getMember
        push '$k', r:this, '-_X}5'
        getMember
        push '$k'
        getMember
        increment
        setMember
        push r:this, '=HU11'
        getMember
        push '9oK'
        getMember
        push r:'(('
        getMember
        push r:')(', '0vWVG'
        getVariable
        push ',DODC'
        getMember
        setMember
        push r:this, '87vE7(', TRUE
        setMember
       label106:
      end // of function 

      setMember
      push r:1, '0D 6'
      function2 () (r:1='this')
        push r:this, '5955'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        push r:this, ',;rp)'
        getMember
        push 0
        getMember
        add
        setRegister r:2
        pop
        push r:2
        int
        setRegister r:3
        pop
        push r:this, ')SR7-'
        getMember
        push r:3
        equals
        not
        not
        branchIfTrue label107
        push r:this, ')SR7-', r:3
        setMember
        push r:this, ';rbg-'
        getMember
        push '0tJ'
        getMember
        push '_yscale', r:3
        setMember
       label107:
        push r:this, ';rbg-'
        getMember
        push '+}B('
        getMember
        push '_visible', r:2, 10
        lessThan
        setMember
        push r:this, ')26+'
        getMember
        push 0
        getMember
        push 0
        greaterThan
        dup
        not
        branchIfTrue label108
        pop
        push r:this, ';rbg-'
        getMember
        push '_x'
        getMember
        push 0
        greaterThan
       label108:
        not
        branchIfTrue label109
        push r:this, ';rbg-'
        getMember
        push '_x', r:this, ';rbg-'
        getMember
        push '_x'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.9, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        setMember
        push r:this, ';rbg-'
        getMember
        push '_x'
        getMember
        push 1
        lessThan
        not
        branchIfTrue label109
        push r:this, ';rbg-'
        getMember
        push '_x', 0
        setMember
       label109:
        push r:2, 0
        greaterThan
        not
        not
        branchIfTrue label111
        push r:this, '5955', '=(,aA'
        getVariable
        push ']iaT'
        getMember
        push 4
        getMember
        setMember
        push r:this, ',;rp)', 0, 1
        initArray
        setMember
        push r:this, '4,01'
        getMember
        push '8]X}5'
        getMember
        push '=3+P'
        getVariable
        push ']}Ou;('
        getMember
        equals
        dup
        not
        branchIfTrue label110
        pop
        push r:this, '4,01'
        getMember
        push '+}B('
        getMember
        push '=3+P'
        getVariable
        push '39XWB('
        getMember
        equals
        not
       label110:
        not
        branchIfTrue label111
        push r:this, '4,01'
        getMember
        push '8]X}5', '=3+P'
        getVariable
        push '5];UB'
        getMember
        setMember
        push r:this, '4,01'
        getMember
        push '+}B(', '=3+P'
        getVariable
        push '39XWB('
        getMember
        setMember
        push r:this, '4,01'
        getMember
        push ' IWA+', 0
        setMember
       label111:
        push r:this, '87vE7(', FALSE
        setMember
        push 0, r:this, '4,01'
        getMember
        push '87vE7('
        callMethod
        pop
        push 0
        setRegister r:4
        pop
        branch label113
       label112:
        push r:4
        increment
        setRegister r:4
        pop
       label113:
        push r:4, r:this, '}]l)+'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label118
        push r:this, '}]l)+'
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push r:5, ']', r:5, ']'
        getMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        subtract
        setMember
        push r:5, ']'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label116
        push r:5, '_x', r:5, '(('
        getMember
        push '=(,aA'
        getVariable
        push '1[3J,'
        getMember
        multiply
        setMember
        push r:5, '6R', r:5, '6R'
        getMember
        push 5, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:5, '_y', r:5, '6R'
        getMember
        setMember
        push r:5, '6R'
        getMember
        push '=(,aA'
        getVariable
        push '1[3J,'
        getMember
        divide
        int
        setRegister r:6
        pop
        push r:6, r:5, ')('
        getMember
        equals
        not
        not
        branchIfTrue label115
        push r:this, '4,01'
        getMember
        push ')Bx7K', TRUE
        setMember
        push r:this, '=HU11'
        getMember
        push '9oK'
        getMember
        push r:5, '(('
        getMember
        getMember
        push r:5, ')('
        getMember
        push '0vWVG'
        getVariable
        push ',DODC'
        getMember
        setMember
        push r:5, ')(', r:5, ')('
        getMember
        increment
        setMember
        push r:5, ')('
        getMember
        push r:5, '(('
        getMember
        push 2, r:this, '4,01'
        getMember
        push '9T54'
        callMethod
        pop
        push r:this, '=HU11'
        getMember
        push '9oK'
        getMember
        push r:5, '(('
        getMember
        getMember
        push r:5, ')('
        getMember
        push 1
        add
        getMember
        push '0vWVG'
        getVariable
        push ',DODC'
        getMember
        equals
        not
        branchIfTrue label114
        push r:this, '=HU11'
        getMember
        push '9oK'
        getMember
        push r:5, '(('
        getMember
        getMember
        push r:5, ')('
        getMember
        push '0vWVG'
        getVariable
        push ';)O9x'
        getMember
        setMember
        branch label115
       label114:
        push r:this, '=HU11'
        getMember
        push '9oK'
        getMember
        push r:5, '(('
        getMember
        getMember
        push r:5, ')('
        getMember
        push '0vWVG'
        getVariable
        push ']baBA'
        getMember
        setMember
        push 0, r:5, 'removeMovieClip'
        callMethod
        pop
        push r:this, '87vE7(', TRUE
        setMember
        push 1, r:4, r:4
        decrement
        setRegister r:4
        pop
        push 2, r:this, '}]l)+'
        getMember
        push 'splice'
        callMethod
        pop
       label115:
        branch label117
       label116:
        push r:5, '_x', r:5, '(('
        getMember
        push '=(,aA'
        getVariable
        push '1[3J,'
        getMember
        multiply
        push 5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 2
        subtract
        add
        setMember
       label117:
        branch label112
       label118:
        push r:this, '87vE7('
        getMember
        not
        branchIfTrue label119
        push 0, r:this, '=4dBu'
        callMethod
        pop
       label119:
        push 0
        setRegister r:4
        pop
        branch label121
       label120:
        push r:4
        increment
        setRegister r:4
        pop
       label121:
        push r:4, r:this, '}D4i3'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label125
        push r:this, '}D4i3'
        getMember
        push r:4
        getMember
        setRegister r:7
        pop
        push r:7, '}2', r:7, '}2'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.5
        multiply
        add
        setMember
        push r:7, '((', r:7, '(('
        getMember
        push r:7, '{2'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:7, ')(', r:7, ')('
        getMember
        push r:7, '}2'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '=HU11'
        getMember
        push '9oK'
        getMember
        push r:7, '5R'
        getMember
        getMember
        push r:7, '6R'
        getMember
        push 1
        add
        getMember
        push '0vWVG'
        getVariable
        push ',DODC'
        getMember
        equals
        not
        branchIfTrue label122
        push r:7, '{K', r:7, '{K'
        getMember
        push '=(,aA'
        getVariable
        push '1[3J,'
        getMember
        add
        setMember
        push r:7, '6R', r:7, '6R'
        getMember
        increment
        setMember
       label122:
        push r:7, ')('
        getMember
        push r:7, '{K'
        getMember
        greaterThan
        not
        branchIfTrue label123
        push r:7, ')(', r:7, '{K'
        getMember
        setMember
        push r:7, '{2', 0
        setMember
       label123:
        push r:7, '}J'
        getMember
        push '_xscale', r:7, '}J'
        getMember
        push '_xscale'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.9, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        setMember
        push r:7, '}J'
        getMember
        push '_x', r:7, '(('
        getMember
        setMember
        push r:7, '}J'
        getMember
        push '_y', r:7, ')('
        getMember
        setMember
        push r:7, '}J'
        getMember
        push '_xscale'
        getMember
        push 10
        greaterThan
        not
        not
        branchIfTrue label124
        push 0, r:7, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push 1, r:4, r:4
        decrement
        setRegister r:4
        pop
        push 2, r:this, '}D4i3'
        getMember
        push 'splice'
        callMethod
        pop
       label124:
        branch label120
       label125:
      end // of function 

      setMember
      push r:1, 'destroy'
      function2 () (r:1='this')
      end // of function 

      setMember
      push '=3+P'
      function2 (r:2='0', r:3='5R', r:4='6R') (r:1='this')
        push r:this, '+-(0', r:'0'
        setMember
        push r:this, ']rMT-', 0
        setMember
        push r:this, '}J', '=(,aA'
        getVariable
        push '*h0p]'
        getMember
        push '4,01', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '8]X}5', '=3+P'
        getVariable
        push ']}Ou;('
        getMember
        setMember
        push r:this, '+}B(', '=3+P'
        getVariable
        push '1fByC('
        getMember
        setMember
        push r:this, ' IWA+', 0
        setMember
        push r:this, '((', r:'5R', 0.5
        add
        push '=(,aA'
        getVariable
        push '1[3J,'
        getMember
        multiply
        push 1
        initArray
        setMember
        push r:this, ')(', r:'6R', '=(,aA'
        getVariable
        push '1[3J,'
        getMember
        multiply
        push 1
        initArray
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '9T54'
      function2 (r:2='4,', r:3='5,') (r:1='this')
        push r:this, '8]X}5'
        getMember
        push '=3+P'
        getVariable
        push '5];UB'
        getMember
        equals
        not
        branchIfTrue label126
        push UNDEF
        return
       label126:
        push r:this, '(('
        getMember
        push 0
        getMember
        push '=(,aA'
        getVariable
        push '1[3J,'
        getMember
        divide
        int
        setRegister r:4
        pop
        push r:this, ')('
        getMember
        push 0
        getMember
        push '=(,aA'
        getVariable
        push '1[3J,'
        getMember
        divide
        int
        setRegister r:5
        pop
        push r:'4,', r:4
        equals
        dup
        not
        branchIfTrue label127
        pop
        push r:'5,', r:5
        equals
       label127:
        not
        branchIfTrue label128
        push r:this, '8]X}5', '=3+P'
        getVariable
        push '5];UB'
        getMember
        setMember
        push r:this, '8Ugi)', '=(,aA'
        getVariable
        push '=Y7h]'
        getMember
        push '{{ a', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '8Ugi)'
        getMember
        push '_x', r:this, '}J'
        getMember
        push '_x'
        getMember
        setMember
        push r:this, '8Ugi)'
        getMember
        push '_y', r:this, '}J'
        getMember
        push '_y'
        getMember
        setMember
        push 0, r:this, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
       label128:
      end // of function 

      setMember
      push r:1, ' _gkA'
      function2 () (r:1='this')
        push r:this, '+}B('
        getMember
        push '=3+P'
        getVariable
        push '5DNw='
        getMember
        equals
        not
        branchIfTrue label129
        push r:this, ' IWA+', r:this, ' IWA+'
        getMember
        push 3
        add
        setMember
       label129:
        push r:this, '+}B('
        getMember
        push '=3+P'
        getVariable
        push '*)zO-'
        getMember
        equals
        dup
        not
        branchIfTrue label130
        pop
        push r:this, '8]X}5'
        getMember
        push '=3+P'
        getVariable
        push '31Gqy'
        getMember
        equals
       label130:
        not
        branchIfTrue label131
        push r:this, '(('
        getMember
        push 0
        getMember
        push '=(,aA'
        getVariable
        push '1[3J,'
        getMember
        divide
        int
        setRegister r:2
        pop
        push r:this, ')('
        getMember
        push 0
        getMember
        push '=(,aA'
        getVariable
        push '1[3J,'
        getMember
        divide
        int
        setRegister r:3
        pop
        push -1, 0, r:3, 1
        add
        push r:2, 4, r:this, '+-(0'
        getMember
        push '}qZx6('
        callMethod
        pop
        push r:3, 1
        add
        push r:2, 2, r:this, '+-(0'
        getMember
        push '=E;uK('
        callMethod
        pop
        push r:this, '+-(0'
        getMember
        push '=HU11'
        getMember
        push '9oK'
        getMember
        push r:2
        getMember
        push r:3, 1
        add
        push '0vWVG'
        getVariable
        push ',DODC'
        getMember
        setMember
        push r:this, '+-(0'
        getMember
        push '87vE7(', TRUE
        setMember
        push r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$c', r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$c'
        getMember
        increment
        setMember
        push r:this, ')Bx7K', TRUE
        setMember
        push r:this, '+}B(', '=3+P'
        getVariable
        push '}*A6D('
        getMember
        setMember
        push r:this, ' IWA+', 0
        setMember
        push r:this, '8]X}5', '=3+P'
        getVariable
        push ']}Ou;('
        getMember
        setMember
       label131:
        push r:this, '+}B('
        getMember
        push '=3+P'
        getVariable
        push '39XWB('
        getMember
        equals
        not
        branchIfTrue label132
        push r:this, '+}B(', '=3+P'
        getVariable
        push '1fByC('
        getMember
        setMember
        push 0, r:this, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push 1, ';ndCG'
        getVariable
        push '7T4cF('
        callMethod
        pop
       label132:
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this')
        push r:this, '8Ugi)'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label134
        push r:this, '8Ugi)'
        getMember
        push '_name'
        getMember
        push NULL
        equals
        not
        branchIfTrue label133
        push r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push 1, ';ndCG'
        getVariable
        push '7T4cF('
        callMethod
        pop
       label133:
        push UNDEF
        return
       label134:
        push 0
        setRegister r:2
        pop
        push '=(,aA'
        getVariable
        push '1[3J,'
        getMember
        setRegister r:3
        pop
        push 5
        setRegister r:4
        pop
        push r:this, '8]X}5'
        getMember
        push '=3+P'
        getVariable
        push ']}Ou;('
        getMember
        equals
        not
        branchIfTrue label144
        push 'Key'
        getVariable
        push 'LEFT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label135
        push r:this, '+}B(', '=3+P'
        getVariable
        push '1fByC('
        getMember
        setMember
        push r:this, ')Bx7K', TRUE
        setMember
        push r:this, '}J'
        getMember
        push '_xscale', -100
        setMember
        push -1
        setRegister r:2
        pop
        branch label144
       label135:
        push 'Key'
        getVariable
        push 'RIGHT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label136
        push r:this, '+}B(', '=3+P'
        getVariable
        push '1fByC('
        getMember
        setMember
        push r:this, ')Bx7K', TRUE
        setMember
        push r:this, '}J'
        getMember
        push '_xscale', 100
        setMember
        push 1
        setRegister r:2
        pop
        branch label144
       label136:
        push 'Key'
        getVariable
        push 'DOWN'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        dup
        not
        branchIfTrue label137
        pop
        push r:this, ']rMT-'
        getMember
        push 0
        greaterThan
        not
       label137:
        not
        branchIfTrue label143
        push r:this, ')('
        getMember
        push 0
        getMember
        push r:3
        divide
        int
        setRegister r:5
        pop
        push r:this, '(('
        getMember
        push 0
        getMember
        push r:3
        divide
        int
        setRegister r:6
        pop
        push r:this, '+-(0'
        getMember
        push '=HU11'
        getMember
        push '9oK'
        getMember
        push r:6
        getMember
        push r:5, 1
        add
        getMember
        setRegister r:7
        pop
        push r:7, '0vWVG'
        getVariable
        push '3]S3C'
        getMember
        equals
        not
        branchIfTrue label138
        push r:this, '+}B(', '=3+P'
        getVariable
        push '*)zO-'
        getMember
        setMember
        push r:this, ' IWA+', 0
        setMember
        push r:this, '8]X}5', '=3+P'
        getVariable
        push '31Gqy'
        getMember
        setMember
        push 0, r:this, ' _gkA'
        callMethod
        pop
        branch label142
       label138:
        push r:7, '0vWVG'
        getVariable
        push ']baBA'
        getMember
        equals
        not
        branchIfTrue label140
        push r:this, '+}B('
        getMember
        push '=3+P'
        getVariable
        push '5DNw='
        getMember
        equals
        not
        not
        branchIfTrue label139
        push r:this, '+}B(', '=3+P'
        getVariable
        push '5DNw='
        getMember
        setMember
        push r:this, ' IWA+', 0
        setMember
       label139:
        push r:5, 1
        add
        push r:6, 2, r:this, '+-(0'
        getMember
        push '=J_wk'
        callMethod
        pop
        branch label142
       label140:
        push r:7, '0vWVG'
        getVariable
        push '0Lh{2'
        getMember
        equals
        not
        branchIfTrue label142
        push r:this, '+}B('
        getMember
        push '=3+P'
        getVariable
        push '5DNw='
        getMember
        equals
        not
        not
        branchIfTrue label141
        push r:this, '+}B(', '=3+P'
        getVariable
        push '5DNw='
        getMember
        setMember
        push r:this, ' IWA+', 0
        setMember
       label141:
        push r:this, '+-(0'
        getMember
        push ')26+'
        getMember
        push 0
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label142
        push 0, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        push 1, r:this, '+-(0'
        getMember
        push '7Z**9('
        callMethod
        pop
       label142:
        push r:this, ')Bx7K', TRUE
        setMember
        branch label144
       label143:
        push r:this, ']rMT-', r:this, ']rMT-'
        getMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        subtract
        setMember
       label144:
        push r:this, ' IWA+', r:this, ' IWA+'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        add
        setMember
        push r:this, ' IWA+'
        getMember
        push r:this, '+}B('
        getMember
        push 'length'
        getMember
        lessThan
        not
        not
        branchIfTrue label145
        push r:this, ' IWA+', r:this, ' IWA+'
        getMember
        push r:this, '+}B('
        getMember
        push 'length'
        getMember
        modulo
        setMember
        push 0, r:this, ' _gkA'
        callMethod
        pop
       label145:
        push r:this, '8]X}5'
        getMember
        setRegister r:0
        push '=3+P'
        getVariable
        push ']}Ou;('
        getMember
        strictEquals
        branchIfTrue label146
        push r:0, '=3+P'
        getVariable
        push ';)O9x'
        getMember
        strictEquals
        branchIfTrue label162
        branch label167
       label146:
        push r:this, ')Bx7K'
        getMember
        not
        not
        branchIfTrue label147
        push r:this, '+}B(', '=3+P'
        getVariable
        push '1fByC('
        getMember
        setMember
        push r:this, ' IWA+', 0
        setMember
        branch label167
       label147:
        push r:this, '(('
        getMember
        push 0
        getMember
        push r:2, r:4
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setRegister r:8
        pop
        push r:this, '(('
        getMember
        push 0
        getMember
        push r:3
        divide
        int
        setRegister r:9
        pop
        push r:8, r:3
        divide
        push 0.3
        subtract
        int
        setRegister r:10
        pop
        push r:8, r:3
        divide
        push 0.3
        add
        int
        setRegister r:11
        pop
        push r:this, ')('
        getMember
        push 0
        getMember
        push r:3
        divide
        int
        setRegister r:12
        pop
        push TRUE
        setRegister r:13
        pop
        push r:10, r:9
        lessThan
        not
        branchIfTrue label148
        push r:9, 1
        subtract
        setRegister r:10
        pop
       label148:
        push r:11, r:9
        greaterThan
        not
        branchIfTrue label149
        push r:9, 1
        add
        setRegister r:11
        pop
       label149:
        push r:2, 0
        greaterThan
        not
        not
        branchIfTrue label152
        push r:this, '+-(0'
        getMember
        push '=HU11'
        getMember
        push '9oK'
        getMember
        push r:10
        getMember
        push r:12
        getMember
        setRegister r:0
        push '0vWVG'
        getVariable
        push '3]S3C'
        getMember
        strictEquals
        branchIfTrue label150
        push r:0, '0vWVG'
        getVariable
        push '0Lh{2'
        getMember
        strictEquals
        branchIfTrue label151
        push r:0, '0vWVG'
        getVariable
        push ']baBA'
        getMember
        strictEquals
        branchIfTrue label151
        branch label152
       label150:
        push 0, 1, r:12, r:10, 4, r:this, '+-(0'
        getMember
        push '}qZx6('
        callMethod
        pop
        push r:12, r:10, 2, r:this, '+-(0'
        getMember
        push '=E;uK('
        callMethod
        pop
        push r:this, '+-(0'
        getMember
        push '=HU11'
        getMember
        push '9oK'
        getMember
        push r:10
        getMember
        push r:12, '0vWVG'
        getVariable
        push ',DODC'
        getMember
        setMember
        push r:this, '+-(0'
        getMember
        push '87vE7(', TRUE
        setMember
        branch label152
       label151:
        push FALSE
        setRegister r:13
        pop
        branch label152
       label152:
        push r:2, 0
        lessThan
        not
        not
        branchIfTrue label155
        push r:this, '+-(0'
        getMember
        push '=HU11'
        getMember
        push '9oK'
        getMember
        push r:11
        getMember
        push r:12
        getMember
        setRegister r:0
        push '0vWVG'
        getVariable
        push '3]S3C'
        getMember
        strictEquals
        branchIfTrue label153
        push r:0, '0vWVG'
        getVariable
        push '0Lh{2'
        getMember
        strictEquals
        branchIfTrue label154
        push r:0, '0vWVG'
        getVariable
        push ']baBA'
        getMember
        strictEquals
        branchIfTrue label154
        branch label155
       label153:
        push 0, -1, r:12, r:11, 4, r:this, '+-(0'
        getMember
        push '}qZx6('
        callMethod
        pop
        push r:12, r:11, 2, r:this, '+-(0'
        getMember
        push '=E;uK('
        callMethod
        pop
        push r:this, '+-(0'
        getMember
        push '=HU11'
        getMember
        push '9oK'
        getMember
        push r:11
        getMember
        push r:12, '0vWVG'
        getVariable
        push ',DODC'
        getMember
        setMember
        push r:this, '+-(0'
        getMember
        push '87vE7(', TRUE
        setMember
        branch label155
       label154:
        push FALSE
        setRegister r:13
        pop
        branch label155
       label155:
        push r:13
        not
        branchIfTrue label156
        push r:this, '((', r:8, 1
        initArray
        setMember
        branch label160
       label156:
        push r:2, 0
        lessThan
        not
        branchIfTrue label157
        push r:10, 1.5
        add
        branch label158
       label157:
        push r:11, 0.5
        subtract
       label158:
        push r:3
        multiply
        setRegister r:14
        pop
        push r:2, 0
        lessThan
        not
        branchIfTrue label159
        push r:this, '((', r:14, r:this, '(('
        getMember
        push 0
        getMember
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        push 1
        initArray
        setMember
        branch label160
       label159:
        push r:this, '((', r:14, r:this, '(('
        getMember
        push 0
        getMember
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        push 1
        initArray
        setMember
       label160:
        push r:this, '(('
        getMember
        push 0
        getMember
        push r:3
        divide
        push 0.3, r:2
        multiply
        subtract
        int
        setRegister r:9
        pop
        push r:this, '+-(0'
        getMember
        push '=HU11'
        getMember
        push '9oK'
        getMember
        push r:9
        getMember
        push r:12, 1
        add
        getMember
        push '0vWVG'
        getVariable
        push ',DODC'
        getMember
        equals
        not
        branchIfTrue label161
        push r:this, '+Y', r:this, '(('
        getMember
        push 0
        getMember
        setMember
        push r:this, '((', r:9, 0.5
        add
        push r:3
        multiply
        push 1
        initArray
        setMember
        push r:this, '8]X}5', '=3+P'
        getVariable
        push ';)O9x'
        getMember
        setMember
       label161:
        branch label167
       label162:
        push r:this, '+Y'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label164
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.5, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:15
        pop
        push r:this, '+Y', r:this, '+Y'
        getMember
        push r:15
        multiply
        push r:this, '(('
        getMember
        push 0
        getMember
        push 1, r:15
        subtract
        multiply
        add
        setMember
        push r:this, '+Y'
        getMember
        push r:this, '(('
        getMember
        push 0
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push 1
        lessThan
        not
        branchIfTrue label163
        push r:this, '+Y', NULL
        setMember
       label163:
        branch label165
       label164:
        push r:this, ')(', r:this, ')('
        getMember
        push 0
        getMember
        push 8, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 1
        initArray
        setMember
       label165:
        push r:this, '(('
        getMember
        push 0
        getMember
        push r:3
        divide
        int
        setRegister r:16
        pop
        push r:this, ')('
        getMember
        push 0
        getMember
        push r:3
        divide
        int
        setRegister r:17
        pop
        push r:this, '+-(0'
        getMember
        push '=HU11'
        getMember
        push '9oK'
        getMember
        push r:16
        getMember
        push r:17, 1
        add
        getMember
        push '0vWVG'
        getVariable
        push ',DODC'
        getMember
        equals
        not
        not
        branchIfTrue label166
        push r:this, ')(', r:17, r:3
        multiply
        push 1
        initArray
        setMember
        push r:this, '8]X}5', '=3+P'
        getVariable
        push ']}Ou;('
        getMember
        setMember
       label166:
        branch label167
       label167:
        push r:this, '(('
        getMember
        push 0
        getMember
        push 0
        lessThan
        not
        branchIfTrue label168
        push 0, -1, 2, r:this, '+-(0'
        getMember
        push '*Cq36'
        callMethod
        pop
        branch label170
       label168:
        push r:this, '(('
        getMember
        push 0
        getMember
        push 300
        lessThan
        not
        not
        branchIfTrue label169
        push 0, 1, 2, r:this, '+-(0'
        getMember
        push '*Cq36'
        callMethod
        pop
        branch label170
       label169:
        push r:this, ')('
        getMember
        push 0
        getMember
        push 290
        lessThan
        not
        not
        branchIfTrue label170
        push r:this, ')(', 290, 1
        initArray
        setMember
        push 1, 0, 2, r:this, '+-(0'
        getMember
        push '*Cq36'
        callMethod
        pop
       label170:
        push r:this, '(('
        getMember
        push 0
        getMember
        push r:3
        divide
        int
        setRegister r:18
        pop
        push r:this, ')('
        getMember
        push 0
        getMember
        push r:3
        divide
        int
        setRegister r:19
        pop
        push r:this, '}J'
        getMember
        push '_yscale', 100
        setMember
        push r:this, '8]X}5'
        getMember
        push '=3+P'
        getVariable
        push ']}Ou;('
        getMember
        equals
        not
        branchIfTrue label175
        push 0
        setRegister r:20
        pop
        branch label172
       label171:
        push r:20
        increment
        setRegister r:20
        pop
       label172:
        push r:20, r:this, '+-(0'
        getMember
        push '}]l)+'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label175
        push r:this, '+-(0'
        getMember
        push '}]l)+'
        getMember
        push r:20
        getMember
        setRegister r:21
        pop
        push r:21, '(('
        getMember
        push r:18
        equals
        dup
        not
        branchIfTrue label173
        pop
        push r:21, ')('
        getMember
        push 1
        add
        push r:19
        equals
       label173:
        not
        branchIfTrue label174
        push r:this, '}J'
        getMember
        push '_yscale', 100, r:this, ')('
        getMember
        push 0
        getMember
        push r:21, '_y'
        getMember
        subtract
        multiply
        push 30
        divide
        setMember
       label174:
        branch label171
       label175:
        push r:this, '}J'
        getMember
        push '_x', r:this, '+Y'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label176
        push r:this, '+Y'
        getMember
        branch label177
       label176:
        push r:this, '(('
        getMember
        push 0
        getMember
       label177:
        setMember
        push r:this, '}J'
        getMember
        push '_y', r:this, ')('
        getMember
        push 0
        getMember
        push r:3
        add
        setMember
        push r:this, '+}B('
        getMember
        push r:this, ' IWA+'
        getMember
        int
        getMember
        toString
        push 1, r:this, '}J'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, ')Bx7K', FALSE
        setMember
      end // of function 

      setMember
      push r:0, ']}Ou;(', 0
      setMember
      push r:0, ';)O9x', 1
      setMember
      push r:0, '31Gqy', 2
      setMember
      push r:0, '5];UB', 3
      setMember
      push r:0, '1fByC(', 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 16
      initArray
      setMember
      push r:0, '5DNw=', 64, 63, 62, 61, 60, 59, 58, 7
      initArray
      setMember
      push r:0, '}*A6D(', 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 16
      initArray
      setMember
      push r:0, '*)zO-', 64, 63, 62, 61, 60, 59, 58, 7
      initArray
      setMember
      push r:0, '39XWB(', 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 26
      initArray
      setMember
      push '980Sb'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'init'
      function2 (r:2='}J') (r:1='this')
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        not
        branchIfTrue label178
        push UNDEF
        return
       label178:
        push '980Sb'
        getVariable
        push ')2fr3', r:'}J'
        setMember
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        branchIfTrue label179
        push '980Sb'
        getVariable
        push 'mode', '980Sb'
        getVariable
        push ')2fr3'
        getMember
        push 1, '44{N'
        new
        setMember
       label179:
        push 65280, 1, ']{i'
        getVariable
        push 'setColor'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '0D 6'
      function2 () (r:1='this')
        push 0, '{-kxL'
        getVariable
        push '87vE7('
        callMethod
        pop
        push 0, '980Sb'
        getVariable
        push 'mode'
        getMember
        push '0D 6'
        callMethod
        pop
      end // of function 

      setMember
      push '+7U K'
      function2 (r:2='}J') (r:1='this')
        push r:this, ')2fr3', r:'}J'
        setMember
        push r:this, '}Zms3', 0, 'Array'
        new
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, ']1sj+'
      function2 () (r:1='this')
        push r:this, ')2fr3'
        getMember
        return
      end // of function 

      setMember
      push r:1, '-fC3a'
      function2 (r:2='59F') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'59F'
        getMember
        setRegister r:3
        pop
        push r:3, NULL
        equals
        not
        branchIfTrue label180
        push '9oK', 0, 'Array'
        new
        push 'cur', 0, 2
        initObject
        setRegister r:3
        pop
        push r:this, '}Zms3'
        getMember
        push r:'59F', r:3
        setMember
       label180:
        push r:3
        return
      end // of function 

      setMember
      push r:1, ']bu40'
      function2 (r:2='[-99') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'[-99'
        getMember
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, 'cur'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:7
        pop
        push r:'[-99', 1000
        multiply
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label182
       label181:
        push r:6
        increment
        setRegister r:6
        pop
       label182:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label184
        push r:4, r:6
        getMember
        push '_name'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label183
        push r:8, r:7
        add
        push 1, r:4, r:6
        getMember
        push 'swapDepths'
        callMethod
        pop
        push r:4, r:7, r:4, r:6
        getMember
        setMember
        push r:7
        increment
        setRegister r:7
        pop
       label183:
        branch label181
       label184:
        push r:3, 'cur', r:7
        setMember
      end // of function 

      setMember
      push r:1, '*=_p_'
      function2 (r:2='*KB2', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, 'cur'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label185
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'*KB2', 2, r:this, '*=_p_'
        callMethod
        return
       label185:
        push r:6, r:'[-99', 1000
        multiply
        add
        push r:'*KB2', r:this, ')2fr3'
        getMember
        push 3, '3Wt'
        getVariable
        push 'attachMC'
        callMethod
        setRegister r:7
        pop
        push r:5, r:6, r:7
        setMember
        push r:4, 'cur', r:4, 'cur'
        getMember
        increment
        setMember
        push r:7
        return
      end // of function 

      setMember
      push r:1, '18wU*'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, 'cur'
        getMember
        setRegister r:5
        pop
        push r:5, 1000
        equals
        not
        branchIfTrue label186
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', 1, r:this, '18wU*'
        callMethod
        return
       label186:
        push r:5, r:'[-99', 1000
        multiply
        add
        push r:this, ')2fr3'
        getMember
        push 2, '3Wt'
        getVariable
        push 'createEmptyMC'
        callMethod
        setRegister r:6
        pop
        push r:4, r:5, r:6
        setMember
        push r:3, 'cur', r:3, 'cur'
        getMember
        increment
        setMember
        push r:6
        return
      end // of function 

      setMember
      push r:1, '(GbB}'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, 'cur'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label187
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        return
       label187:
        push r:5, r:6, r:'}J'
        setMember
        push r:4, 'cur', r:4, 'cur'
        getMember
        increment
        setMember
        push r:6, r:'[-99', 1000
        multiply
        add
        return
      end // of function 

      setMember
      push r:1, '+2NA'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        push 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, r:'[-99'
        equals
        not
        branchIfTrue label188
        push UNDEF
        return
       label188:
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:5, 'cur'
        getMember
        setRegister r:7
        pop
        push 0
        setRegister r:8
        pop
        branch label190
       label189:
        push r:8
        increment
        setRegister r:8
        pop
       label190:
        push r:8, r:7
        lessThan
        not
        branchIfTrue label192
        push r:6, r:8
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label191
        push r:6, r:8, NULL
        setMember
        branch label192
       label191:
        branch label189
       label192:
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}oQA7'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label193
        push r:6, r:7, NULL
        setMember
        push r:'}J', 1, r:6, 'unshift'
        callMethod
        pop
        push r:5, 'cur', r:5, 'cur'
        getMember
        increment
        setMember
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label193:
      end // of function 

      setMember
      push r:1, '08M8'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label195
        push r:6, r:7, NULL
        setMember
        push r:5, 'cur'
        getMember
        push 1000
        equals
        not
        branchIfTrue label194
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label194:
        push r:5, 'cur'
        getMember
        setRegister r:3
        pop
        push r:5, 'cur', r:5, 'cur'
        getMember
        increment
        setMember
        push r:3, r:4, 1000
        multiply
        add
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
        push r:6, r:3, r:'}J'
        setMember
       label195:
      end // of function 

      setMember
      push r:1, 'clear'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:4
        pop
        branch label197
       label196:
        push r:4
        increment
        setRegister r:4
        pop
       label197:
        push r:4, r:3, 'cur'
        getMember
        lessThan
        not
        branchIfTrue label198
        push 0, r:5, r:4
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label196
       label198:
        push r:3, 'cur', 0
        setMember
      end // of function 

      setMember
      push r:1, '9(K ;'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, 'cur'
        getMember
        setRegister r:5
        pop
        push -99999999
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label200
       label199:
        push r:6
        increment
        setRegister r:6
        pop
       label200:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label208
        push r:4, r:6
        getMember
        setRegister r:9
        pop
        push r:9, '_y'
        getMember
        setRegister r:10
        pop
        push r:10, r:8
        lessThan
        not
        not
        branchIfTrue label201
        push r:10
        setRegister r:8
        pop
        branch label207
       label201:
        push r:6
        setRegister r:7
        pop
        branch label203
       label202:
        push r:7
        decrement
        setRegister r:7
        pop
       label203:
        push r:7, 0
        greaterThan
        not
        branchIfTrue label206
        push r:4, r:7, 1
        subtract
        getMember
        setRegister r:11
        pop
        push r:11, '_y'
        getMember
        push r:10
        greaterThan
        not
        branchIfTrue label204
        push r:4, r:7, r:11
        setMember
        push r:11, 1, r:9, 'swapDepths'
        callMethod
        pop
        branch label205
       label204:
        push r:4, r:7, r:9
        setMember
        branch label206
       label205:
        branch label202
       label206:
        push r:7, 0
        equals
        not
        branchIfTrue label207
        push r:4, 0, r:9
        setMember
       label207:
        branch label199
       label208:
      end // of function 

      setMember
      push r:1, 'destroy'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label210
       label209:
        push r:2
        increment
        setRegister r:2
        pop
       label210:
        push r:2, r:this, '}Zms3'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label211
        push r:2, 1, r:this, 'clear'
        callMethod
        pop
        branch label209
       label211:
      end // of function 

      setMember
      push '0vWVG'
      function2 (r:2='0') (r:1='this')
        push r:this, '5Y-', 0, 'Array'
        new
        setMember
        push r:this, '4B1W(', 0, 'Array'
        new
        setMember
        push r:this, '+-(0', r:'0'
        setMember
        push r:this, '5R', 100
        setMember
        push r:this, '6R', 0
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '}OM8t'
      function2 (r:2='9', r:3='((', r:4=')(') (r:1='this')
        push r:this, '9oK'
        getMember
        push r:'(('
        getMember
        push r:')('
        getMember
        setRegister r:5
        pop
        push r:'((', 0
        lessThan
        dup
        branchIfTrue label212
        pop
        push r:'((', '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        lessThan
        not
       label212:
        not
        branchIfTrue label213
        push FALSE
        return
       label213:
        push r:5, '0vWVG'
        getVariable
        push ',DODC'
        getMember
        equals
        dup
        branchIfTrue label214
        pop
        push r:5, '0vWVG'
        getVariable
        push '3]S3C'
        getMember
        equals
       label214:
        dup
        not
        branchIfTrue label215
        pop
        push r:'9', r:'(('
        getMember
        push r:')('
        getMember
        not
       label215:
        not
        branchIfTrue label219
        push r:'9', r:'(('
        getMember
        push r:')(', TRUE
        setMember
        push r:')(', '=(,aA'
        getVariable
        push '*sd+;('
        getMember
        push 1
        subtract
        equals
        not
        branchIfTrue label216
        push TRUE
        return
       label216:
        push r:')(', 1
        add
        push r:'((', r:'9', 3, r:this, '}OM8t'
        callMethod
        not
        branchIfTrue label217
        push TRUE
        return
       label217:
        push r:')(', r:'((', 1
        subtract
        push r:'9', 3, r:this, '}OM8t'
        callMethod
        not
        branchIfTrue label218
        push TRUE
        return
       label218:
        push r:')(', r:'((', 1
        add
        push r:'9', 3, r:this, '}OM8t'
        callMethod
        not
        branchIfTrue label219
        push TRUE
        return
       label219:
        push FALSE
        return
      end // of function 

      setMember
      push r:1, 'init'
      function2 (r:2='+Y', r:3=',Y', r:4=')26+') (r:1='this')
        push r:this, '5Y-'
        getMember
        push r:this, '5R'
        getMember
        getMember
        push r:this, '6R'
        getMember
        getMember
        setRegister r:5
        pop
        push r:this, '9oK', r:5, ']'
        getMember
        setMember
        push r:this, '4B1W(', r:5, ')'
        getMember
        setMember
        push r:this, '9oK'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label220
        push r:this, '9oK'
        getMember
        push r:'+Y'
        getMember
        push r:',Y', '0vWVG'
        getVariable
        push ',DODC'
        getMember
        setMember
        push UNDEF
        return
       label220:
        push 10, 100, r:')26+', 2
        multiply
        subtract
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        int
        setRegister r:6
        pop
        push 3, 10, r:')26+', 2
        divide
        subtract
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        int
        setRegister r:7
        pop
        push 7, r:')26+', 10
        divide
        int
        add
        setRegister r:8
        pop
        push r:this, '9oK', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:9
        pop
        branch label222
       label221:
        push r:9
        increment
        setRegister r:9
        pop
       label222:
        push r:9, '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        lessThan
        not
        branchIfTrue label237
        push r:this, '9oK'
        getMember
        push r:9, 0, 'Array'
        new
        setMember
        push 0
        setRegister r:10
        pop
        branch label224
       label223:
        push r:10
        increment
        setRegister r:10
        pop
       label224:
        push r:10, '=(,aA'
        getVariable
        push '*sd+;('
        getMember
        lessThan
        not
        branchIfTrue label236
        push r:10, 1
        bitwiseAnd
        push 0
        equals
        not
        branchIfTrue label232
        push r:9, 0
        equals
        dup
        branchIfTrue label225
        pop
        push r:9, '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        push 1
        subtract
        equals
       label225:
        not
        branchIfTrue label230
        push r:10, 0
        greaterThan
        dup
        not
        branchIfTrue label226
        pop
        push r:10, 5
        greaterThan
        not
       label226:
        dup
        not
        branchIfTrue label227
        pop
        push 4, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
       label227:
        not
        branchIfTrue label228
        push r:this, '9oK'
        getMember
        push r:9
        getMember
        push r:10, '0vWVG'
        getVariable
        push '3]S3C'
        getMember
        setMember
        branch label229
       label228:
        push r:this, '9oK'
        getMember
        push r:9
        getMember
        push r:10, '0vWVG'
        getVariable
        push '0Lh{2'
        getMember
        setMember
       label229:
        branch label231
       label230:
        push r:this, '9oK'
        getMember
        push r:9
        getMember
        push r:10, '0vWVG'
        getVariable
        push '3]S3C'
        getMember
        setMember
       label231:
        branch label235
       label232:
        push r:9, 0
        equals
        dup
        branchIfTrue label233
        pop
        push r:9, '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        push 1
        subtract
        equals
       label233:
        not
        branchIfTrue label234
        push r:this, '9oK'
        getMember
        push r:9
        getMember
        push r:10, '0vWVG'
        getVariable
        push '0Lh{2'
        getMember
        setMember
        branch label235
       label234:
        push r:this, '9oK'
        getMember
        push r:9
        getMember
        push r:10, '0vWVG'
        getVariable
        push ']baBA'
        getMember
        setMember
       label235:
        branch label223
       label236:
        push r:this, '9oK'
        getMember
        push r:9
        getMember
        push r:10, '0vWVG'
        getVariable
        push ',DODC'
        getMember
        setMember
        branch label221
       label237:
        push 0
        setRegister r:11
        pop
        branch label239
       label238:
        push r:11
        increment
        setRegister r:11
        pop
       label239:
        push r:11, r:6
        lessThan
        not
        branchIfTrue label240
        push '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        push 2
        subtract
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        add
        setRegister r:9
        pop
        push '=(,aA'
        getVariable
        push '*sd+;('
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        bitwiseOr
        setRegister r:10
        pop
        push r:this, '9oK'
        getMember
        push r:9
        getMember
        push r:10, '0vWVG'
        getVariable
        push '3]S3C'
        getMember
        setMember
        branch label238
       label240:
        push 0
        setRegister r:11
        pop
        branch label242
       label241:
        push r:11
        increment
        setRegister r:11
        pop
       label242:
        push r:11, 3
        lessThan
        not
        branchIfTrue label243
        push '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        push 2
        subtract
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        add
        setRegister r:9
        pop
        push '=(,aA'
        getVariable
        push '*sd+;('
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 254
        bitwiseAnd
        setRegister r:10
        pop
        push r:this, '9oK'
        getMember
        push r:9
        getMember
        push r:10, '0vWVG'
        getVariable
        push ']baBA'
        getMember
        setMember
        branch label241
       label243:
        push 0
        setRegister r:11
        pop
        branch label245
       label244:
        push r:11
        increment
        setRegister r:11
        pop
       label245:
        push r:11, r:7
        lessThan
        not
        branchIfTrue label247
        push '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        push 2
        subtract
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        add
        setRegister r:9
        pop
        push '=(,aA'
        getVariable
        push '*sd+;('
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:10
        pop
        push r:this, '9oK'
        getMember
        push r:9
        getMember
        push r:10, 1
        subtract
        getMember
        push '0vWVG'
        getVariable
        push '3]S3C'
        getMember
        equals
        not
        branchIfTrue label246
        push r:this, '9oK'
        getMember
        push r:9
        getMember
        push r:10, '0vWVG'
        getVariable
        push ',DODC'
        getMember
        setMember
       label246:
        branch label244
       label247:
        push r:this, '9oK'
        getMember
        push r:'+Y'
        getMember
        push r:',Y', '0vWVG'
        getVariable
        push ',DODC'
        getMember
        setMember
        push r:',Y', 0
        greaterThan
        not
        branchIfTrue label248
        push r:this, '9oK'
        getMember
        push r:'+Y', 1
        add
        getMember
        push r:',Y', '0vWVG'
        getVariable
        push '3]S3C'
        getMember
        setMember
        push r:this, '9oK'
        getMember
        push r:'+Y', 1
        subtract
        getMember
        push r:',Y', '0vWVG'
        getVariable
        push '3]S3C'
        getMember
        setMember
       label248:
        push r:this, '9oK'
        getMember
        push r:'+Y'
        getMember
        push r:',Y', 1
        add
        push '0vWVG'
        getVariable
        push ']baBA'
        getMember
        setMember
        push 0, 'Array'
        new
        setRegister r:12
        pop
        push 0, '=(,aA'
        getVariable
        push '-6cK;'
        getMember
        push 'duplicate'
        callMethod
        setRegister r:13
        pop
        push r:13, 0, r:13, 0
        getMember
        push 20, r:')26+'
        subtract
        add
        setMember
        push r:13, 0
        getMember
        push 10
        lessThan
        not
        branchIfTrue label249
        push r:13, 0, 10
        setMember
       label249:
        push r:this, '4B1W(', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:11
        pop
        branch label251
       label250:
        push r:11
        increment
        setRegister r:11
        pop
       label251:
        push r:11, r:8
        lessThan
        not
        branchIfTrue label258
        push 1, '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        push 2
        subtract
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        add
        setRegister r:9
        pop
        push '=(,aA'
        getVariable
        push '*sd+;('
        getMember
        push 1
        subtract
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:10
        pop
        push r:this, '9oK'
        getMember
        push r:9
        getMember
        push r:10
        getMember
        push '0vWVG'
        getVariable
        push '3]S3C'
        getMember
        equals
        dup
        not
        branchIfTrue label252
        pop
        push r:'+Y', r:9
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push 2
        lessThan
        not
       label252:
        dup
        not
        branchIfTrue label253
        pop
        push r:',Y', r:10
        equals
        not
       label253:
        dup
        not
        branchIfTrue label254
        pop
        push r:12, r:9, r:10, '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        multiply
        add
        getMember
        not
       label254:
        not
        branchIfTrue label257
        push r:13, 1, '-[m(M'
        getVariable
        push '7g,ln'
        callMethod
        setRegister r:14
        pop
        push r:14, 2
        equals
        not
        branchIfTrue label256
        push r:')26+', 5
        divide
        int
        push 1
        add
        setRegister r:15
        pop
        push r:15, 6
        greaterThan
        not
        branchIfTrue label255
        push 6
        setRegister r:15
        pop
       label255:
        push 2, r:15, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push r:15, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        add
        int
        setRegister r:14
        pop
       label256:
        push r:12, r:9, r:10, '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        multiply
        add
        push TRUE
        setMember
        push '((', r:9, ')(', r:10, ']', r:14, 3
        initObject
        push 1, r:this, '4B1W('
        getMember
        push 'push'
        callMethod
        pop
       label257:
        branch label250
       label258:
        push 0, r:this, 'connect'
        callMethod
        pop
        push 0, 'Array'
        new
        setRegister r:16
        pop
        push 0
        setRegister r:9
        pop
        branch label260
       label259:
        push r:9
        increment
        setRegister r:9
        pop
       label260:
        push r:9, '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        lessThan
        not
        branchIfTrue label261
        push r:16, r:9, 0, 'Array'
        new
        setMember
        branch label259
       label261:
        push r:',Y', r:'+Y', r:16, 3, r:this, '}OM8t'
        callMethod
        not
        branchIfTrue label263
        push r:this, '5Y-'
        getMember
        push r:this, '5R'
        getMember
        getMember
        push NULL
        equals
        not
        branchIfTrue label262
        push r:this, '5Y-'
        getMember
        push r:this, '5R'
        getMember
        push 0, 'Array'
        new
        setMember
       label262:
        push r:this, '5Y-'
        getMember
        push r:this, '5R'
        getMember
        getMember
        push r:this, '6R'
        getMember
        push ']', r:this, '9oK'
        getMember
        push ')', r:this, '4B1W('
        getMember
        push 2
        initObject
        setMember
        branch label264
       label263:
        push r:')26+', r:',Y', r:'+Y', 3, r:this, 'init'
        callMethod
        pop
       label264:
      end // of function 

      setMember
      push r:1, 'connect'
      function2 () (r:1='this')
        push r:this, '5Y-'
        getMember
        push r:this, '5R'
        getMember
        push 1
        subtract
        getMember
        push r:this, '6R'
        getMember
        getMember
        push ']'
        getMember
        setRegister r:4
        pop
        push r:4, NULL
        equals
        not
        not
        branchIfTrue label270
        push 0
        setRegister r:3
        pop
        branch label266
       label265:
        push r:3
        increment
        setRegister r:3
        pop
       label266:
        push r:3, '=(,aA'
        getVariable
        push '*sd+;('
        getMember
        lessThan
        not
        branchIfTrue label270
        push r:4, '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        push 1
        subtract
        getMember
        push r:3
        getMember
        setRegister r:5
        pop
        push r:5, '0vWVG'
        getVariable
        push ']baBA'
        getMember
        equals
        not
        dup
        not
        branchIfTrue label267
        pop
        push r:5, '0vWVG'
        getVariable
        push '0Lh{2'
        getMember
        equals
        not
       label267:
        not
        branchIfTrue label268
        push r:this, '9oK'
        getMember
        push 0
        getMember
        push r:3, '0vWVG'
        getVariable
        push '3]S3C'
        getMember
        setMember
        branch label269
       label268:
        push r:this, '9oK'
        getMember
        push 0
        getMember
        push r:3, '0vWVG'
        getVariable
        push '0Lh{2'
        getMember
        setMember
       label269:
        branch label265
       label270:
        push r:this, '5Y-'
        getMember
        push r:this, '5R'
        getMember
        push 1
        add
        getMember
        push r:this, '6R'
        getMember
        getMember
        push ']'
        getMember
        setRegister r:4
        pop
        push r:4, NULL
        equals
        not
        not
        branchIfTrue label276
        push 0
        setRegister r:3
        pop
        branch label272
       label271:
        push r:3
        increment
        setRegister r:3
        pop
       label272:
        push r:3, '=(,aA'
        getVariable
        push '*sd+;('
        getMember
        lessThan
        not
        branchIfTrue label276
        push r:4, 0
        getMember
        push r:3
        getMember
        setRegister r:6
        pop
        push r:6, '0vWVG'
        getVariable
        push ']baBA'
        getMember
        equals
        not
        dup
        not
        branchIfTrue label273
        pop
        push r:6, '0vWVG'
        getVariable
        push '0Lh{2'
        getMember
        equals
        not
       label273:
        not
        branchIfTrue label274
        push r:this, '9oK'
        getMember
        push '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        push 1
        subtract
        getMember
        push r:3, '0vWVG'
        getVariable
        push '3]S3C'
        getMember
        setMember
        branch label275
       label274:
        push r:this, '9oK'
        getMember
        push '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        push 1
        subtract
        getMember
        push r:3, '0vWVG'
        getVariable
        push '0Lh{2'
        getMember
        setMember
       label275:
        branch label271
       label276:
      end // of function 

      setMember
      push r:0, ',DODC', 0
      setMember
      push r:0, ']baBA', 1
      setMember
      push r:0, '3]S3C', 2
      setMember
      push r:0, ';)O9x', 3
      setMember
      push r:0, '0Lh{2', 5
      setMember
      push '(WBt)'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ']}Ou;(', 1
      setMember
      push r:0, '3I0pG', 2
      setMember
      push r:0, '{;7F4', 3
      setMember
      push r:0, '8U(wu', 4
      setMember
      push r:0, '}[cpB', 5
      setMember
      push r:0, '9xv]A', 6
      setMember
      push r:0, '{yQ=Q', 7
      setMember
      push r:0, '+,W', 8
      setMember
      push r:0, '2y+dV', 9
      setMember
      push r:0, '(tBee', 10
      setMember
      push r:0, '3)i[=', 11
      setMember
      push r:0, ' J3IC', 12
      setMember
      push r:0, '[6jRc', 13
      setMember
      push r:0, ')8Fyj', 14
      setMember
      push '{-kxL'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '87vE7('
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '4plQ5', '{-kxL'
        getVariable
        push '4plQ5'
        getMember
        increment
        setMember
        push 0, '3Wt'
        getVariable
        push 'getTimer'
        callMethod
        setRegister r:2
        pop
        push '{-kxL'
        getVariable
        push ';ILSy', r:2, '{-kxL'
        getVariable
        push '3R,QM'
        getMember
        subtract
        push 1000.0
        divide
        setMember
        push '{-kxL'
        getVariable
        push '3R,QM', r:2
        setMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        push '{-kxL'
        getVariable
        push ';y}-6('
        getMember
        lessThan
        not
        branchIfTrue label277
        push '{-kxL'
        getVariable
        push '-)Xd+', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        push '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        multiply
        push 1, '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        subtract
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        multiply
        add
        setMember
        branch label278
       label277:
        push '{-kxL'
        getVariable
        push ';ILSy', 1, '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        divide
        setMember
       label278:
        push '{-kxL'
        getVariable
        push '-V;B', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        setMember
      end // of function 

      setMember
      push r:0, 'fps'
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        return
      end // of function 

      setMember
      push r:0, '6GI,F', 32
      setMember
      push r:0, ';y}-6(', 0.5
      setMember
      push r:0, '3R,QM', 0, '3Wt'
      getVariable
      push 'getTimer'
      callMethod
      setMember
      push r:0, '[Ad;n', 0.95
      setMember
      push r:0, '-)Xd+', 1
      setMember
      push r:0, '-V;B', 1
      setMember
      push r:0, ';ILSy', 1
      setMember
      push r:0, '4plQ5', 0
      setMember
    end // of frame 0
  end // of defineMovieClip 87
  
  exportAssets
    87 as '90D*'
  end // of exportAssets
end
