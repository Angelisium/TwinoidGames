movie 'b4dbb572527609a2e4e19077457afaf8.swf' compressed // flash 8, total frames: 1, frame rate: 40 fps, 700x480 px


  defineMovieClip 3 // total frames: 2

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 3
  
  exportAssets
    3 as '4b6DE'
  end // of exportAssets

  defineMovieClip 6 // total frames: 2
  end // of defineMovieClip 6

  defineMovieClip 9 // total frames: 1
  end // of defineMovieClip 9
  
  exportAssets
    9 as '*xjm_'
  end // of exportAssets

  defineMovieClip 14 // total frames: 21
  end // of defineMovieClip 14
  
  exportAssets
    14 as ' gFFu'
  end // of exportAssets
  
  exportAssets
    14 as ' gFFu'
  end // of exportAssets
  
  exportAssets
    9 as '*xjm_'
  end // of exportAssets
  
  exportAssets
    3 as '4b6DE'
  end // of exportAssets

  defineMovieClip 17 // total frames: 1
  end // of defineMovieClip 17
  
  exportAssets
    17 as '-l*WO'
  end // of exportAssets

  defineMovieClip 20 // total frames: 1
  end // of defineMovieClip 20
  
  exportAssets
    20 as '0o*6'
  end // of exportAssets
  
  exportAssets
    20 as '0o*6'
  end // of exportAssets
  
  exportAssets
    17 as '-l*WO'
  end // of exportAssets

  defineMovieClip 25 // total frames: 21
  end // of defineMovieClip 25
  
  exportAssets
    25 as ' gFFu'
  end // of exportAssets

  defineMovieClip 38 // total frames: 15

    frame 14
      push ''
      removeClip
    end // of frame 14
  end // of defineMovieClip 38
  
  exportAssets
    38 as '-O_ y'
  end // of exportAssets

  defineMovieClip 40 // total frames: 1
  end // of defineMovieClip 40

  defineMovieClip 41 // total frames: 5

    frame 4
      push 0.0, '+KD'
      getVariable
      push '9T54'
      callMethod
      pop
    end // of frame 4
  end // of defineMovieClip 41
  
  exportAssets
    41 as '2 EA,('
  end // of exportAssets

  defineMovieClip 44 // total frames: 2
  end // of defineMovieClip 44

  defineMovieClip 45 // total frames: 1
  end // of defineMovieClip 45
  
  exportAssets
    45 as '7LeMK('
  end // of exportAssets

  defineMovieClip 48 // total frames: 1
  end // of defineMovieClip 48

  defineMovieClip 49 // total frames: 16

    frame 8
      push '5t 9)', 30
      setVariable
    end // of frame 8

    frame 10
      constants '5t 9)', ''  
      push '5t 9)', '5t 9)'
      getVariable
      push 1
      subtract
      setVariable
      push '5t 9)'
      getVariable
      push 0.0
      greaterThan
      not
      branchIfTrue label1
      push '', 4
      getProperty
      push 1
      subtract
      gotoAndPlay
     label1:
    end // of frame 10

    frame 15
      push ''
      removeClip
    end // of frame 15
  end // of defineMovieClip 49
  
  exportAssets
    49 as '{aw I'
  end // of exportAssets

  defineMovieClip 51 // total frames: 1
  end // of defineMovieClip 51

  defineMovieClip 52 // total frames: 17

    frame 9
      push '5t 9)', 30
      setVariable
    end // of frame 9

    frame 11
      constants '5t 9)', ''  
      push '5t 9)', '5t 9)'
      getVariable
      push 1
      subtract
      setVariable
      push '5t 9)'
      getVariable
      push 0.0
      greaterThan
      not
      branchIfTrue label1
      push '', 4
      getProperty
      push 1
      subtract
      gotoAndPlay
     label1:
    end // of frame 11

    frame 16
      push ''
      removeClip
    end // of frame 16
  end // of defineMovieClip 52
  
  exportAssets
    52 as ' kf;B'
  end // of exportAssets

  defineMovieClip 54 // total frames: 2
  end // of defineMovieClip 54

  defineMovieClip 63 // total frames: 8
  end // of defineMovieClip 63
  
  exportAssets
    63 as '6LME,('
  end // of exportAssets

  defineMovieClip 65 // total frames: 1
  end // of defineMovieClip 65

  defineMovieClip 66 // total frames: 12

    frame 11
      push 0.0, '+KD'
      getVariable
      push '9T54'
      callMethod
      pop
    end // of frame 11
  end // of defineMovieClip 66
  
  exportAssets
    66 as '9(b5q'
  end // of exportAssets

  defineMovieClip 70 // total frames: 1
  end // of defineMovieClip 70

  defineMovieClip 80 // total frames: 4
  end // of defineMovieClip 80

  defineMovieClip 85 // total frames: 1
  end // of defineMovieClip 85

  defineMovieClip 87 // total frames: 1
  end // of defineMovieClip 87

  defineMovieClip 88 // total frames: 1
  end // of defineMovieClip 88

  defineMovieClip 90 // total frames: 64
  end // of defineMovieClip 90
  
  exportAssets
    90 as '9[d;C'
  end // of exportAssets
  
  exportAssets
    90 as '9[d;C'
  end // of exportAssets
  
  exportAssets
    66 as '9(b5q'
  end // of exportAssets
  
  exportAssets
    63 as '6LME,('
  end // of exportAssets
  
  exportAssets
    52 as ' kf;B'
  end // of exportAssets
  
  exportAssets
    49 as '{aw I'
  end // of exportAssets
  
  exportAssets
    45 as '7LeMK('
  end // of exportAssets
  
  exportAssets
    41 as '2 EA,('
  end // of exportAssets
  
  exportAssets
    38 as '-O_ y'
  end // of exportAssets

  defineMovieClip 91 // total frames: 1

    frame 0
      constants 'flash', 'Object', 'filters', '{lN=R', '*r', 'init', '=P(', '{Cs', '] (', ';CYOh', '=', '0', ')', 'Color', 'ra', 'ga', 'ba', 'aa', 'rb', 'gb', 'bb', 'ab', 'setTransform', '2K', 'Math', 'max', 'min', ')GiA', '0Yj1', '*QP3L', 'round', '((', ')(', '=OA', '*OA', '4Hh41(', '=q=1(', '5NUOp', '--DR}', ']cdn5', ',il7z', '3iWD8', '*(EIm', ',Nwxx', '*e[', '5Xbvg', '42jo6', '8C7;6', '{(HO5(', '+joze', '-Ju7B(', '6[u7B(', '(i(E6(', ']g1Pa', '8Dut5(', '1,ut5(', '}cl4B', ';ndCG', '-Q)9)', '2Xl5B', '-*MsG', '[FvXY', '2)F8[', '*G6KR', ',i0 [', '44{N', '+-(0', '(W3', '+7U K', '(KA', '-l*WO', '*=_p_', '_x', '_y', '32', ';+', '0o*6', '7Qe;6', 'Array', '86{p(', ')gv94', ';AH0', '=bA(A(', '(VKB', '-R 9)', ']Wz+ (', '3vnF5', '5Hy6b', '9O*r', '))E', '0+E', '0O', '60Q1j', '+Tm_D', 'prototype', ';8,t2', '8q9h3(', 'push', '9[d;C', '2e{I', 'random', '+G97+', ']ZsEn', 'color', '21', '-iB=', 'gotoAndStop', 'remove', '=kIA', 'onPress', '7{(s7(', '3Wt', 'callback', 'useHandCursor', ')R,vQ', '2VhU6', '}FI;8', '2W]+a', 'length', '9xqR3(', '{aw I', '_visible', 'removeMovieClip', '[QL', ' x', ' ', '7j3QZ', '*J(Bk', '3WUPC(', ']oH', ');-', '5T6+', ' [z_9(', '}1A{_', '5b)bA(', '+', '8kN', '*L6o7', '3B(*', '-_X}5', '$sp', '=} 1', '0D 6', '{-kxL', '-V;B', '}-9mm', 'Key', 'SPACE', 'isDown', '5GKtY', '_xscale', '_yscale', ';-[;H', '-[9S8(', '7', '86Itb', '(j;o7', 'abs', '7b', '7T4cF(', '[GH7r', 'duplicate', '87vE7(', '980Sb', ')2fr3', '_xmouse', '_ymouse', 'atan2', 'LEFT', 'RIGHT', 'pow', 'PI', '_rotation', ',d951', 'cos', 'sin', '2sngh', 'shift', '9T54', '[b', ']b', ';357+', '4u=dZ', '{a0(C', '}b( X', ';d3', 'pop', '08M8', '$c', '$s', '$t', '$sc', 'center', '{(g}5', '[5(-', '5R', '6R', '0d', '20', '6uA', ' kf;B', '{YJfb', '[VjD-', '-0]rl', '+KD', 'sqrt', ')153L', '[j0D-', ',v0X', '+{eA+', '1Jr-,(', 'call', '(KpGn', ';zS4((', '*DzW', ',DBRf', 'scale', '3V[D(', '3BjX_', '4RW6x', '6b', '849kV', '_alpha', '8I0t8(', '2u=W=', '(kJ+1(', 'mode', '}Zms3', ']1sj+', '-fC3a', '9oK', '7-,', ']bu40', '_name', 'swapDepths', 'attachMC', '18wU*', 'createEmptyMC', '(GbB}', '+2NA', 'getDepth', 'floor', '}oQA7', 'unshift', 'clear', '9(K ;', 'destroy', '5P55', '7yU(0', '6o_Q+', '-O_ y', '}CL', ']OCkF(', '(El(0', '16[0P', '{biQC', '=jE}1', '6LME,(', '(nsSt', '+46i4(', '8t,B7', '7LeMK(', '0tJ', 'gotoAndPlay', '}PxyY', ' gFFu', '--m8U', '8HPUn', '3AYjk', '(WBt)', ']}Ou;(', '3I0pG', '{;7F4', '8U(wu', '}[cpB', '9xv]A', '{yQ=Q', '+,W', '2y+dV', '(tBee', '3)i[=', ' J3IC', '[6jRc', ')8Fyj', '4plQ5', 'getTimer', ';ILSy', '3R,QM', ';y}-6(', '-)Xd+', '[Ad;n', '6GI,F', 'fps'  
      push 'flash'
      getVariable
      not
      not
      branchIfTrue label1
      push 'flash', 0, 'Object'
      new
      setVariable
     label1:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      not
      not
      branchIfTrue label2
      push 'flash'
      getVariable
      push 'filters', 0, 'Object'
      new
      setMember
     label2:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      push '{lN=R'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setMember
      push '*r'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'init'
      function2 () (r:1='this')
        push '*r'
        getVariable
        push '=P(', '*r'
        getVariable
        push '{Cs'
        getMember
        push 2.25
        multiply
        setMember
        push '*r'
        getVariable
        push '] (', '*r'
        getVariable
        push '{Cs'
        getMember
        push 1.25
        multiply
        setMember
      end // of function 

      setMember
      push r:0, ';CYOh'
      function2 (r:2='}J', r:3='3GF', r:4='(v+') (r:1='this')
        push '=', r:'(v+', 16
        shiftRight
        push '0', r:'(v+', 8
        shiftRight
        push 255
        bitwiseAnd
        push ')', r:'(v+', 255
        bitwiseAnd
        push 3
        initObject
        setRegister r:5
        pop
        push r:'}J', 1, 'Color'
        new
        setRegister r:6
        pop
        push r:'3GF', 100
        divide
        setRegister r:7
        pop
        push 'ra', 100, r:'3GF'
        subtract
        int
        push 'ga', 100, r:'3GF'
        subtract
        int
        push 'ba', 100, r:'3GF'
        subtract
        int
        push 'aa', 100, 'rb', r:7, r:5, '='
        getMember
        multiply
        int
        push 'gb', r:7, r:5, '0'
        getMember
        multiply
        int
        push 'bb', r:7, r:5, ')'
        getMember
        multiply
        int
        push 'ab', 0, 8
        initObject
        setRegister r:8
        pop
        push r:8, 1, r:6, 'setTransform'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '2K'
      function2 (r:2='(', r:3=')', r:4='*') (r:1='this')
        push r:'*', r:')', r:'(', 2, 'Math'
        getVariable
        push 'max'
        callMethod
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        return
      end // of function 

      setMember
      push r:0, ')GiA'
      function2 (r:2='}', r:3='6lA') (r:1='this')
       label3:
        push r:'}', r:'6lA'
        lessThan
        not
        not
        branchIfTrue label4
        push r:'}', r:'6lA'
        subtract
        setRegister r:'}'
        pop
        branch label3
       label4:
        push r:'}', 0
        lessThan
        not
        branchIfTrue label5
        push r:'}', r:'6lA'
        add
        setRegister r:'}'
        pop
        branch label4
       label5:
        push r:'}'
        return
      end // of function 

      setMember
      push r:0, '0Yj1'
      function2 (r:2='}', r:3='6lA') (r:1='this')
       label6:
        push r:'}', r:'6lA'
        greaterThan
        not
        branchIfTrue label7
        push r:'}', r:'6lA', 2
        multiply
        subtract
        setRegister r:'}'
        pop
        branch label6
       label7:
        push r:'}', 0, r:'6lA'
        subtract
        lessThan
        not
        branchIfTrue label8
        push r:'}', r:'6lA', 2
        multiply
        add
        setRegister r:'}'
        pop
        branch label7
       label8:
        push r:'}'
        return
      end // of function 

      setMember
      push r:0, '*QP3L'
      function2 (r:2='((', r:3=')(') (r:1='this')
        push r:')(', '*r'
        getVariable
        push '] ('
        getMember
        divide
        push r:'((', '*r'
        getVariable
        push '=P('
        getMember
        divide
        add
        push 2
        divide
        push 1, 'Math'
        getVariable
        push 'round'
        callMethod
        setRegister r:4
        pop
        push r:'((', '*r'
        getVariable
        push '=P('
        getMember
        divide
        push r:4
        subtract
        push 1, 'Math'
        getVariable
        push 'round'
        callMethod
        setRegister r:5
        pop
        push '((', r:4, ')(', r:5, 2
        initObject
        return
      end // of function 

      setMember
      push r:0, '{Cs', 12
      setMember
      push r:0, '=OA', 300
      setMember
      push r:0, '*OA', 300
      setMember
      push r:0, '4Hh41(', 20
      setMember
      push r:0, '=q=1(', 132
      setMember
      push r:0, '5NUOp', 160
      setMember
      push r:0, '--DR}', 1
      setMember
      push r:0, ']cdn5', 2
      setMember
      push r:0, ',il7z', 3
      setMember
      push r:0, '3iWD8', 4
      setMember
      push r:0, '*(EIm', 5
      setMember
      push r:0, ',Nwxx', 6
      setMember
      push r:0, '*e[', 1, -1, 2
      initArray
      push 0, -1, 2
      initArray
      push -1, 0, 2
      initArray
      push -1, 1, 2
      initArray
      push 0, 1, 2
      initArray
      push 1, 0, 2
      initArray
      push 6
      initArray
      setMember
      push r:0, '5Xbvg', 3
      setMember
      push r:0, '42jo6', 3
      setMember
      push r:0, '8C7;6', 200, 110, 70, 40, 10, 5
      initArray
      setMember
      push r:0, '{(HO5(', 10
      setMember
      push r:0, '+joze', 400
      setMember
      push r:0, '-Ju7B(', 0.1
      setMember
      push r:0, '6[u7B(', 0.3
      setMember
      push r:0, '(i(E6(', 50
      setMember
      push r:0, ']g1Pa', 400
      setMember
      push r:0, '8Dut5(', 0
      setMember
      push r:0, '1,ut5(', 1
      setMember
      push r:0, '}cl4B', 1000, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '2Xl5B', 2000, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '-*MsG', 200, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '[FvXY', 100, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '2)F8[', 500, 250, 150, 100, 75, 50, 50, 50, 8
      initArray
      push 1, ';ndCG'
      getVariable
      push '*G6KR'
      callMethod
      setMember
      push ',i0 ['
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push '44{N'
      function2 (r:2='}J') (r:1='this')
        push 0, '*r'
        getVariable
        push 'init'
        callMethod
        pop
        push '*r'
        getVariable
        push '+-(0', r:this
        setMember
        push r:this, '(W3', r:'}J', 1, '+7U K'
        new
        setMember
        push r:this, '(KA', 1, '-l*WO', 2, r:this, '(W3'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '(KA'
        getMember
        push '_x', '*r'
        getVariable
        push '=OA'
        getMember
        push 0.5
        multiply
        setMember
        push r:this, '(KA'
        getMember
        push '_y', '*r'
        getVariable
        push '*OA'
        getMember
        push 0.5
        multiply
        setMember
        push r:this, '32', r:this, '(KA'
        getMember
        push 1, '+7U K'
        new
        setMember
        push r:this, ';+', 0, '0o*6', 2, r:this, '(W3'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '7Qe;6', 0, 'Array'
        new
        setMember
        push r:this, '86{p(', 0, 'Array'
        new
        setMember
        push r:this, ')gv94', 0, 'Array'
        new
        setMember
        push r:this, ';AH0', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:3
        pop
        branch label10
       label9:
        push r:3
        increment
        setRegister r:3
        pop
       label10:
        push r:3, 2, '*r'
        getVariable
        push '4Hh41('
        getMember
        multiply
        push 2
        multiply
        lessThan
        not
        branchIfTrue label11
        push r:this, ';AH0'
        getMember
        push r:3, 0, 'Array'
        new
        setMember
        branch label9
       label11:
        push r:this, '=bA(A(', '*r'
        getVariable
        push '42jo6'
        getMember
        push 1
        initArray
        setMember
        push r:this, '(VKB', 0, 1
        initArray
        setMember
        push r:this, '-R 9)', 0, 1
        initArray
        setMember
        push 0, r:this, ']Wz+ ('
        callMethod
        pop
        push 0, r:this, '3vnF5'
        callMethod
        pop
        push '*r'
        getVariable
        push '*(EIm'
        getMember
        push 1, r:this, '5Hy6b'
        callMethod
        pop
        push r:this, '9O*r', 0
        setMember
        push r:this, '))E', 0
        setMember
        push r:this, '0+E', 0
        setMember
        push r:this, '0O', 0
        setMember
        push r:this, '60Q1j', 0
        setMember
        push r:this, '+Tm_D', '*r'
        getVariable
        push '2Xl5B'
        getMember
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '3vnF5'
      function2 () (r:1='this')
        push r:this, ';8,t2', 0, 'Array'
        new
        setMember
        push r:this, ';8,t2', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:2
        pop
        branch label13
       label12:
        push r:2
        increment
        setRegister r:2
        pop
       label13:
        push r:2, 3
        lessThan
        not
        branchIfTrue label14
        push 0, r:this, '8q9h3('
        callMethod
        setRegister r:3
        pop
        push r:3, 1, r:this, ';8,t2'
        getMember
        push 'push'
        callMethod
        pop
        branch label12
       label14:
      end // of function 

      setMember
      push r:1, '8q9h3('
      function2 () (r:1='this')
        push 5, '9[d;C', 2, r:this, '(W3'
        getMember
        push '*=_p_'
        callMethod
        push 1, '2e{I'
        new
        setRegister r:2
        pop
        push r:2, '((', 0, '*r'
        getVariable
        push '{Cs'
        getMember
        subtract
        setMember
        push r:2, ')(', '*r'
        getVariable
        push '*OA'
        getMember
        push '*r'
        getVariable
        push '{Cs'
        getMember
        add
        setMember
        push r:this, '(VKB'
        getMember
        push 0
        getMember
        push '*r'
        getVariable
        push '{(HO5('
        getMember
        greaterThan
        not
        branchIfTrue label15
        push '*r'
        getVariable
        push '-Ju7B('
        getMember
        push '*r'
        getVariable
        push '6[u7B('
        getMember
        push '*r'
        getVariable
        push '-Ju7B('
        getMember
        subtract
        push r:this, '(VKB'
        getMember
        push 0
        getMember
        push '*r'
        getVariable
        push '{(HO5('
        getMember
        subtract
        push '*r'
        getVariable
        push '+joze'
        getMember
        divide
        push 0, 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setRegister r:3
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push r:3
        lessThan
        not
        branchIfTrue label15
        push r:2, '+G97+', TRUE
        setMember
        push 0, r:2, ']ZsEn'
        callMethod
        pop
       label15:
        push r:this, '(VKB'
        getMember
        push 0
        getMember
        push '*r'
        getVariable
        push '(i(E6('
        getMember
        greaterThan
        not
        branchIfTrue label16
        push '*r'
        getVariable
        push '8Dut5('
        getMember
        push '*r'
        getVariable
        push '1,ut5('
        getMember
        push '*r'
        getVariable
        push '8Dut5('
        getMember
        subtract
        push r:this, '(VKB'
        getMember
        push 0
        getMember
        push '*r'
        getVariable
        push '(i(E6('
        getMember
        subtract
        push '*r'
        getVariable
        push ']g1Pa'
        getMember
        divide
        push 0, 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setRegister r:4
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push r:4
        lessThan
        not
        branchIfTrue label16
        push r:2, 'color', 20
        setMember
        push r:2, '+G97+', FALSE
        setMember
        push '21', 1, r:2, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
       label16:
        push r:2, 1, r:this, '86{p('
        getMember
        push 'remove'
        callMethod
        pop
        push r:2
        return
      end // of function 

      setMember
      push r:1, '5Hy6b'
      function2 (r:2='[') (r:1='this')
        push r:this, '=kIA', r:'['
        setMember
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label17
        push r:0, '*r'
        getVariable
        push '--DR}'
        getMember
        strictEquals
        branchIfTrue label18
        push r:0, '*r'
        getVariable
        push ']cdn5'
        getMember
        strictEquals
        branchIfTrue label19
        push r:0, '*r'
        getVariable
        push ',il7z'
        getMember
        strictEquals
        branchIfTrue label20
        push r:0, '*r'
        getVariable
        push '3iWD8'
        getMember
        strictEquals
        branchIfTrue label24
        push r:0, '*r'
        getVariable
        push '*(EIm'
        getMember
        strictEquals
        branchIfTrue label26
        push r:0, '*r'
        getVariable
        push ',Nwxx'
        getMember
        strictEquals
        branchIfTrue label27
        branch label31
       label17:
        branch label31
       label18:
        push r:this, ';+'
        getMember
        push 'onPress', '7{(s7(', r:this, 2, '3Wt'
        getVariable
        push 'callback'
        callMethod
        setMember
        branch label31
       label19:
        push r:this, ';+'
        getMember
        push 'onPress', NULL
        setMember
        push r:this, ';+'
        getMember
        push 'useHandCursor', FALSE
        setMember
        branch label31
       label20:
        push 0, r:this, ')R,vQ'
        callMethod
        pop
        push r:this, '2VhU6', '44{N'
        getVariable
        push '}FI;8'
        getMember
        push 1
        initArray
        setMember
        push r:this, '2W]+a'
        getMember
        push 'length'
        getMember
        push 0
        equals
        not
        branchIfTrue label21
        push 0, r:this, '9xqR3('
        callMethod
        pop
        branch label23
       label21:
        push r:this, '-R 9)'
        getMember
        push 0
        getMember
        push 1
        greaterThan
        not
        branchIfTrue label23
        push r:this, '{aw I'
        getMember
        push '_visible'
        getMember
        not
        branchIfTrue label22
        push 0, r:this, '{aw I'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
       label22:
        push r:this, '{aw I', 20, '{aw I', 2, r:this, '(W3'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '{aw I'
        getMember
        push '[QL', ' x', r:this, '-R 9)'
        getMember
        push 0
        getMember
        add
        push ' '
        add
        setMember
       label23:
        branch label31
       label24:
        push r:this, '2VhU6', '44{N'
        getVariable
        push '7j3QZ'
        getMember
        push 1
        initArray
        setMember
        push 0, r:this, '*J(Bk'
        callMethod
        not
        not
        branchIfTrue label25
        push '*r'
        getVariable
        push ',il7z'
        getMember
        push 1, r:this, '5Hy6b'
        callMethod
        pop
       label25:
        branch label31
       label26:
        push r:this, '3WUPC(', ']oH', 1, ');-', 0, '5T6+', 0, 3
        initObject
        setMember
        push r:this, '2VhU6', 0, 1
        initArray
        setMember
        branch label31
       label27:
        push r:this, '2VhU6', 25, 1
        initArray
        setMember
        push 1
        setRegister r:3
        pop
        branch label29
       label28:
        push r:3
        increment
        setRegister r:3
        pop
       label29:
        push r:3, r:this, '86{p('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label30
        push r:this, '86{p('
        getMember
        push r:3
        getMember
        setRegister r:4
        pop
        push r:4, ' [z_9(', '((', 0, ')(', 0, 2
        initObject
        push 1, r:4, '}1A{_'
        callMethod
        push 0.2
        multiply
        setMember
        branch label28
       label30:
        branch label31
       label31:
      end // of function 

      setMember
      push r:1, '9xqR3('
      function2 () (r:1='this')
        push r:this, '86{p('
        getMember
        push 'length'
        getMember
        push 1
        equals
        not
        branchIfTrue label32
        push '*r'
        getVariable
        push '*(EIm'
        getMember
        push 1, r:this, '5Hy6b'
        callMethod
        pop
        push r:this, '+Tm_D'
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push '+', r:this, '+Tm_D'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        add
        push 1, r:this, '*L6o7'
        callMethod
        pop
        push r:this, '+Tm_D', '*r'
        getVariable
        push '2Xl5B'
        getMember
        push r:this, '+Tm_D'
        getMember
        push 2, ';ndCG'
        getVariable
        push '3B(*'
        callMethod
        setMember
        push r:this, '-_X}5'
        getMember
        push '$sp', r:this, '-_X}5'
        getMember
        push '$sp'
        getMember
        increment
        setMember
        push UNDEF
        return
       label32:
        push r:this, '(VKB', r:this, '(VKB'
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push r:this, '-R 9)', 0, 1
        initArray
        setMember
        push r:this, '(VKB'
        getMember
        push 0
        getMember
        push '*r'
        getVariable
        push '8C7;6'
        getMember
        push r:this, '=bA(A('
        getMember
        push 0
        getMember
        push '*r'
        getVariable
        push '42jo6'
        getMember
        subtract
        getMember
        greaterThan
        not
        branchIfTrue label33
        push r:this, '=bA(A(', r:this, '=bA(A('
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
       label33:
        push r:this, '=} 1'
        getMember
        push '-iB='
        getMember
        push '_visible'
        getMember
        dup
        not
        branchIfTrue label34
        pop
        push '((', 0, ')(', 0, 2
        initObject
        push 1, r:this, '=} 1'
        getMember
        push '}1A{_'
        callMethod
        push '*r'
        getVariable
        push '=q=1('
        getMember
        push 20
        subtract
        greaterThan
       label34:
        not
        branchIfTrue label35
        push '*r'
        getVariable
        push ',Nwxx'
        getMember
        push 1, r:this, '5Hy6b'
        callMethod
        pop
        branch label36
       label35:
        push '*r'
        getVariable
        push '--DR}'
        getMember
        push 1, r:this, '5Hy6b'
        callMethod
        pop
       label36:
      end // of function 

      setMember
      push r:1, '0D 6'
      function2 () (r:1='this')
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        push 1
        initArray
        setMember
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label37
        push r:0, '*r'
        getVariable
        push '--DR}'
        getMember
        strictEquals
        branchIfTrue label38
        push r:0, '*r'
        getVariable
        push ']cdn5'
        getMember
        strictEquals
        branchIfTrue label42
        push r:0, '*r'
        getVariable
        push ',il7z'
        getMember
        strictEquals
        branchIfTrue label43
        push r:0, '*r'
        getVariable
        push '3iWD8'
        getMember
        strictEquals
        branchIfTrue label49
        push r:0, '*r'
        getVariable
        push '*(EIm'
        getMember
        strictEquals
        branchIfTrue label51
        push r:0, '*r'
        getVariable
        push ',Nwxx'
        getMember
        strictEquals
        branchIfTrue label55
        branch label57
       label37:
        branch label57
       label38:
        push 0, r:this, '}-9mm'
        callMethod
        pop
        push 'Key'
        getVariable
        push 'SPACE'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label40
        push r:this, '5GKtY'
        getMember
        not
        branchIfTrue label39
        push 0, r:this, '7{(s7('
        callMethod
        pop
       label39:
        push r:this, '5GKtY', FALSE
        setMember
        branch label41
       label40:
        push r:this, '5GKtY', TRUE
        setMember
       label41:
        branch label57
       label42:
        push '{-kxL'
        getVariable
        push '-V;B', 1
        setMember
        branch label57
       label43:
        push r:this, '2VhU6'
        getMember
        push 0
        getMember
        push '44{N'
        getVariable
        push '}FI;8'
        getMember
        divide
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label45
       label44:
        push r:3
        increment
        setRegister r:3
        pop
       label45:
        push r:3, r:this, '2W]+a'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label47
        push r:this, '2W]+a'
        getMember
        push r:3
        getMember
        setRegister r:4
        pop
        push 16777215, 1, r:2
        subtract
        push 100
        multiply
        push r:4, '-iB='
        getMember
        push 3, '*r'
        getVariable
        push ';CYOh'
        callMethod
        pop
        push r:4, '-iB='
        getMember
        push '_xscale', 100, 1, r:2
        subtract
        push 30
        multiply
        add
        setMember
        push r:4, '-iB='
        getMember
        push '_yscale', r:4, '-iB='
        getMember
        push '_xscale'
        getMember
        setMember
        push r:2, 0
        lessThan
        not
        branchIfTrue label46
        push 0, r:4, ';-[;H'
        callMethod
        pop
       label46:
        branch label44
       label47:
        push r:2, 0
        lessThan
        not
        branchIfTrue label48
        push r:this, '-[9S8('
        getMember
        push '7'
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push '*r'
        getVariable
        push '3iWD8'
        getMember
        push 1, r:this, '5Hy6b'
        callMethod
        pop
       label48:
        branch label57
       label49:
        push r:this, '2VhU6'
        getMember
        push 0
        getMember
        push 0
        lessThan
        not
        branchIfTrue label50
        push '*r'
        getVariable
        push ',il7z'
        getMember
        push 1, r:this, '5Hy6b'
        callMethod
        pop
       label50:
        branch label57
       label51:
        push r:this, '2VhU6'
        getMember
        push 0
        getMember
        push 0
        lessThan
        not
        branchIfTrue label54
        push r:this, '2VhU6', 1, 1
        initArray
        setMember
        push '*r'
        getVariable
        push '*e['
        getMember
        push r:this, '3WUPC('
        getMember
        push ');-'
        getMember
        getMember
        setRegister r:5
        pop
        push '*r'
        getVariable
        push '*e['
        getMember
        push r:this, '3WUPC('
        getMember
        push ');-'
        getMember
        push 2
        add
        push '*r'
        getVariable
        push '*e['
        getMember
        push 'length'
        getMember
        modulo
        getMember
        setRegister r:6
        pop
        push r:5, 0
        getMember
        push r:this, '3WUPC('
        getMember
        push ']oH'
        getMember
        multiply
        push r:6, 0
        getMember
        push r:this, '3WUPC('
        getMember
        push '5T6+'
        getMember
        multiply
        add
        setRegister r:7
        pop
        push r:5, 1
        getMember
        push r:this, '3WUPC('
        getMember
        push ']oH'
        getMember
        multiply
        push r:6, 1
        getMember
        push r:this, '3WUPC('
        getMember
        push '5T6+'
        getMember
        multiply
        add
        setRegister r:8
        pop
        push r:this, '3WUPC('
        getMember
        push '5T6+', r:this, '3WUPC('
        getMember
        push '5T6+'
        getMember
        increment
        setMember
        push r:this, '3WUPC('
        getMember
        push '5T6+'
        getMember
        push r:this, '3WUPC('
        getMember
        push ']oH'
        getMember
        lessThan
        not
        not
        branchIfTrue label53
        push r:this, '3WUPC('
        getMember
        push '5T6+', 0
        setMember
        push r:this, '3WUPC('
        getMember
        push ');-', r:this, '3WUPC('
        getMember
        push ');-'
        getMember
        increment
        setMember
        push r:this, '3WUPC('
        getMember
        push ');-'
        getMember
        push '*r'
        getVariable
        push '*e['
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label52
        push r:this, '3WUPC('
        getMember
        push '5T6+', 0
        setMember
        branch label53
       label52:
        push r:this, '3WUPC('
        getMember
        push ');-', 0
        setMember
        push r:this, '3WUPC('
        getMember
        push ']oH', r:this, '3WUPC('
        getMember
        push ']oH'
        getMember
        increment
        setMember
        push r:this, '3WUPC('
        getMember
        push ']oH'
        getMember
        push 2
        greaterThan
        not
        branchIfTrue label53
        push '*r'
        getVariable
        push '--DR}'
        getMember
        push 1, r:this, '5Hy6b'
        callMethod
        pop
       label53:
        push '44{N'
        getVariable
        push '86Itb'
        getMember
        push '9[d;C', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '2e{I'
        new
        setRegister r:9
        pop
        push r:8, r:7, 2, r:9, '(j;o7'
        callMethod
        pop
        push r:9, 'color', r:7, r:8
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:this, '=bA(A('
        getMember
        push 0
        getMember
        modulo
        int
        setMember
        push 0, r:9, ']ZsEn'
        callMethod
        pop
        push r:9, '7b', 0
        setMember
        push r:9, '-iB='
        getMember
        push '_xscale', 0
        setMember
        push r:9, '-iB='
        getMember
        push '_yscale', 0
        setMember
       label54:
        branch label57
       label55:
        push r:this, '2VhU6'
        getMember
        push 0
        getMember
        push 0
        lessThan
        not
        branchIfTrue label56
        push 0
        initObject
        push 1, ';ndCG'
        getVariable
        push '7T4cF('
        callMethod
        pop
        push 99, 1, r:this, '5Hy6b'
        callMethod
        pop
       label56:
        branch label57
       label57:
        push 0, r:this, '[GH7r'
        callMethod
        pop
        push 0, r:this, '7Qe;6'
        getMember
        push 'duplicate'
        callMethod
        setRegister r:10
        pop
        push 0
        setRegister r:11
        pop
        branch label59
       label58:
        push r:11
        increment
        setRegister r:11
        pop
       label59:
        push r:11, r:10, 'length'
        getMember
        lessThan
        not
        branchIfTrue label60
        push 0, r:10, r:11
        getMember
        push '87vE7('
        callMethod
        pop
        branch label58
       label60:
      end // of function 

      setMember
      push r:1, '}-9mm'
      function2 () (r:1='this')
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 0.5
        multiply
        push '980Sb'
        getVariable
        push ')2fr3'
        getMember
        push '_xmouse'
        getMember
        subtract
        setRegister r:2
        pop
        push '*r'
        getVariable
        push '*OA'
        getMember
        push 0.5
        multiply
        push '980Sb'
        getVariable
        push ')2fr3'
        getMember
        push '_ymouse'
        getMember
        subtract
        setRegister r:3
        pop
        push r:2, r:3, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        setRegister r:4
        pop
        push 3.14, r:this, '0O'
        getMember
        push r:4
        subtract
        push 2, '*r'
        getVariable
        push '0Yj1'
        callMethod
        setRegister r:5
        pop
        push 0.3
        setRegister r:6
        pop
        push r:this, '60Q1j', r:this, '60Q1j'
        getMember
        push r:6, r:5, 0.4
        multiply
        push 0, r:6
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '0O', r:4
        setMember
        push 'Key'
        getVariable
        push 'LEFT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label61
        push r:this, '60Q1j', r:this, '60Q1j'
        getMember
        push 0.1, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label61:
        push 'Key'
        getVariable
        push 'RIGHT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label62
        push r:this, '60Q1j', r:this, '60Q1j'
        getMember
        push 0.1, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        setMember
       label62:
        push r:this, '60Q1j', r:this, '60Q1j'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.5, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        setMember
        push r:this, '9O*r', r:this, '9O*r'
        getMember
        push r:this, '60Q1j'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '9O*r', 'Math'
        getVariable
        push 'PI'
        getMember
        push r:this, '9O*r'
        getMember
        push 2, '*r'
        getVariable
        push '0Yj1'
        callMethod
        setMember
        push r:this, '(KA'
        getMember
        push '_rotation', 0, r:this, '9O*r'
        getMember
        subtract
        push 'Math'
        getVariable
        push 'PI'
        getMember
        push 180
        divide
        divide
        setMember
        push 0
        setRegister r:7
        pop
        branch label64
       label63:
        push r:7
        increment
        setRegister r:7
        pop
       label64:
        push r:7, r:this, '86{p('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label65
        push r:this, '86{p('
        getMember
        push r:7
        getMember
        setRegister r:8
        pop
        push r:8, '-iB='
        getMember
        push ',d951'
        getMember
        push '_rotation', 0, r:this, '(KA'
        getMember
        push '_rotation'
        getMember
        push r:8, '-iB='
        getMember
        push '_rotation'
        getMember
        add
        subtract
        setMember
        branch label63
       label65:
      end // of function 

      setMember
      push r:1, '[GH7r'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label67
       label66:
        push r:2
        increment
        setRegister r:2
        pop
       label67:
        push r:2, r:this, ';8,t2'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label68
        push r:this, ';8,t2'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push '*r'
        getVariable
        push '5NUOp'
        getMember
        push r:2, '*r'
        getVariable
        push '{Cs'
        getMember
        push 2.5
        add
        multiply
        push 2
        multiply
        add
        setRegister r:4
        pop
        push 'Math'
        getVariable
        push 'PI'
        getMember
        push 0.75
        multiply
        setRegister r:5
        pop
        push '((', '*r'
        getVariable
        push '=OA'
        getMember
        push 0.5
        multiply
        push r:5, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:4
        multiply
        add
        push ')(', '*r'
        getVariable
        push '*OA'
        getMember
        push 0.5
        multiply
        push r:5, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:4
        multiply
        add
        push 2
        initObject
        setRegister r:6
        pop
        push 10, 0.2, r:6, 3, r:3, '2sngh'
        callMethod
        pop
        branch label66
       label68:
      end // of function 

      setMember
      push r:1, '7{(s7('
      function2 () (r:1='this')
        push 0, r:this, ';8,t2'
        getMember
        push 'shift'
        callMethod
        setRegister r:2
        pop
        push r:this, '=} 1', '44{N'
        getVariable
        push '86Itb'
        getMember
        push '9[d;C', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '2e{I'
        new
        setMember
        push r:this, '=} 1'
        getMember
        push 'color', r:2, 'color'
        getMember
        setMember
        push r:this, '=} 1'
        getMember
        push '+G97+', r:2, '+G97+'
        getMember
        setMember
        push 0, r:this, '=} 1'
        getMember
        push ']ZsEn'
        callMethod
        pop
        push 0, r:2, '9T54'
        callMethod
        pop
        push 18
        setRegister r:3
        pop
        push r:this, '9O*r'
        getMember
        push 0.775
        subtract
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:4
        pop
        push r:this, '9O*r'
        getMember
        push 0.775
        subtract
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:5
        pop
        push r:this, '=} 1'
        getMember
        push '((', 0, r:4
        subtract
        push '*r'
        getVariable
        push '5NUOp'
        getMember
        multiply
        setMember
        push r:this, '=} 1'
        getMember
        push ')(', 0, r:5
        subtract
        push '*r'
        getVariable
        push '5NUOp'
        getMember
        multiply
        setMember
        push r:this, '=} 1'
        getMember
        push '[b', r:4, r:3
        multiply
        setMember
        push r:this, '=} 1'
        getMember
        push ']b', r:5, r:3
        multiply
        setMember
        push r:this, '=} 1'
        getMember
        push ';357+', TRUE
        setMember
        push 0, r:this, '=} 1'
        getMember
        push '4u=dZ'
        callMethod
        pop
        push r:this, '=} 1'
        getMember
        push '-iB='
        getMember
        push '_rotation', 0, r:this, '(KA'
        getMember
        push '_rotation'
        getMember
        subtract
        setMember
        push '*r'
        getVariable
        push ']cdn5'
        getMember
        push 1, r:this, '5Hy6b'
        callMethod
        pop
        push 0, r:this, '8q9h3('
        callMethod
        push 1, r:this, ';8,t2'
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '{a0(C'
      function2 () (r:1='this')
        push 0, r:this, '9O*r'
        getMember
        push 0.775
        subtract
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        subtract
        push '*r'
        getVariable
        push '5NUOp'
        getMember
        multiply
        setRegister r:2
        pop
        push 0, r:this, '9O*r'
        getMember
        push 0.775
        subtract
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        subtract
        push '*r'
        getVariable
        push '5NUOp'
        getMember
        multiply
        setRegister r:3
        pop
        push '((', r:2, ')(', r:3, 2
        initObject
        return
      end // of function 

      setMember
      push r:1, ')R,vQ'
      function2 () (r:1='this')
        push 0, r:this, '}b( X'
        callMethod
        pop
        push r:this, '-[9S8(', '7', 0, 1, ';ndCG'
        getVariable
        push '-Q)9)'
        callMethod
        push 1
        initObject
        setMember
        push 0, 'Array'
        new
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label70
       label69:
        push r:3
        increment
        setRegister r:3
        pop
       label70:
        push r:3, '*r'
        getVariable
        push '4Hh41('
        getMember
        push 2
        multiply
        lessThan
        not
        branchIfTrue label89
        push 0
        setRegister r:4
        pop
        branch label72
       label71:
        push r:4
        increment
        setRegister r:4
        pop
       label72:
        push r:4, '*r'
        getVariable
        push '4Hh41('
        getMember
        push 2
        multiply
        lessThan
        not
        branchIfTrue label88
        push r:this, ';AH0'
        getMember
        push r:3
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push r:5, NULL
        equals
        not
        dup
        not
        branchIfTrue label73
        pop
        push r:5, '+G97+'
        getMember
        not
       label73:
        dup
        not
        branchIfTrue label74
        pop
        push r:5, 'color'
        getMember
        push 20
        equals
        not
       label74:
        not
        branchIfTrue label87
        push r:5, ';d3'
        getMember
        push NULL
        equals
        not
        branchIfTrue label75
        push r:5, ';d3', r:2, 'length'
        getMember
        setMember
        push r:5, 1
        initArray
        push 1, r:2, 'push'
        callMethod
        pop
       label75:
        push 0
        setRegister r:6
        pop
        branch label77
       label76:
        push r:6
        increment
        setRegister r:6
        pop
       label77:
        push r:6, 3
        lessThan
        not
        branchIfTrue label87
        push r:3, '*r'
        getVariable
        push '*e['
        getMember
        push r:6
        getMember
        push 0
        getMember
        add
        setRegister r:7
        pop
        push r:4, '*r'
        getVariable
        push '*e['
        getMember
        push r:6
        getMember
        push 1
        getMember
        add
        setRegister r:8
        pop
        push r:this, ';AH0'
        getMember
        push r:7
        getMember
        push r:8
        getMember
        setRegister r:9
        pop
        push r:5, 'color'
        getMember
        push r:9, 'color'
        getMember
        equals
        dup
        not
        branchIfTrue label78
        pop
        push r:9, NULL
        equals
        not
       label78:
        dup
        not
        branchIfTrue label79
        pop
        push r:9, '+G97+'
        getMember
        not
       label79:
        dup
        not
        branchIfTrue label80
        pop
        push r:9, 'color'
        getMember
        push 20
        equals
        not
       label80:
        not
        branchIfTrue label86
        push r:9, ';d3'
        getMember
        push NULL
        equals
        not
        branchIfTrue label81
        push r:9, ';d3', r:5, ';d3'
        getMember
        setMember
        push r:9, 1, r:2, r:5, ';d3'
        getMember
        getMember
        push 'push'
        callMethod
        pop
        branch label86
       label81:
        push r:9, ';d3'
        getMember
        push r:5, ';d3'
        getMember
        equals
        not
        branchIfTrue label82
        branch label86
       label82:
        push r:9, ';d3'
        getMember
        setRegister r:10
        pop
        push r:2, r:10
        getMember
        setRegister r:11
        pop
        push 0
        setRegister r:12
        pop
        branch label84
       label83:
        push r:12
        increment
        setRegister r:12
        pop
       label84:
        push r:12, r:11, 'length'
        getMember
        lessThan
        not
        branchIfTrue label85
        push r:11, r:12
        getMember
        setRegister r:13
        pop
        push r:13, ';d3', r:5, ';d3'
        getMember
        setMember
        push r:13, 1, r:2, r:5, ';d3'
        getMember
        getMember
        push 'push'
        callMethod
        pop
        branch label83
       label85:
        push r:2, r:10, NULL
        setMember
       label86:
        branch label76
       label87:
        branch label71
       label88:
        branch label69
       label89:
        push r:this, '2W]+a', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:14
        pop
        branch label91
       label90:
        push r:14
        increment
        setRegister r:14
        pop
       label91:
        push r:14, r:2, 'length'
        getMember
        lessThan
        not
        branchIfTrue label94
        push r:2, r:14
        getMember
        setRegister r:15
        pop
        push r:15, 'length'
        getMember
        push '*r'
        getVariable
        push '5Xbvg'
        getMember
        push 1
        subtract
        greaterThan
        not
        branchIfTrue label93
        push r:this, '-[9S8('
        getMember
        push '7', '*r'
        getVariable
        push '-*MsG'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        push r:15, 'length'
        getMember
        push '*r'
        getVariable
        push '5Xbvg'
        getMember
        subtract
        push '*r'
        getVariable
        push '[FvXY'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        multiply
        push r:this, '-R 9)'
        getMember
        push 0
        getMember
        push 1
        add
        multiply
        add
        push 1, ';ndCG'
        getVariable
        push '-Q)9)'
        callMethod
        setMember
       label92:
        push r:15, 'length'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label93
        push 0, r:15, 'pop'
        callMethod
        setRegister r:16
        pop
        push r:16, 1, r:this, '2W]+a'
        getMember
        push 'push'
        callMethod
        pop
        push r:16, '-iB='
        getMember
        push 1, r:this, '32'
        getMember
        push '08M8'
        callMethod
        pop
        branch label92
       label93:
        branch label90
       label94:
        push r:this, '2W]+a'
        getMember
        push 'length'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label95
        push '$c', r:this, '-R 9)'
        getMember
        push 0
        getMember
        push '$s', r:this, '-[9S8('
        getMember
        push '7'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        push '$t', r:this, '(VKB'
        getMember
        push 0
        getMember
        push 3
        initObject
        push 1, r:this, '-_X}5'
        getMember
        push '$sc'
        getMember
        push 'push'
        callMethod
        pop
       label95:
        push r:this, '-R 9)', r:this, '-R 9)'
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
      end // of function 

      setMember
      push r:1, '*J(Bk'
      function2 () (r:1='this')
        push 0, r:this, '}b( X'
        callMethod
        pop
        push r:this, 'center'
        getMember
        push 1, r:this, '{(g}5'
        callMethod
        pop
        push FALSE
        setRegister r:2
        pop
        push 0, r:this, '86{p('
        getMember
        push 'duplicate'
        callMethod
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        branch label97
       label96:
        push r:4
        increment
        setRegister r:4
        pop
       label97:
        push r:4, r:3, 'length'
        getMember
        lessThan
        not
        branchIfTrue label99
        push r:3, r:4
        getMember
        setRegister r:5
        pop
        push r:5, ';d3'
        getMember
        push NULL
        equals
        not
        branchIfTrue label98
        push 0, r:5, '[5(-'
        callMethod
        pop
        push TRUE
        setRegister r:2
        pop
       label98:
        branch label96
       label99:
        push r:2
        return
      end // of function 

      setMember
      push r:1, '}b( X'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label101
       label100:
        push r:2
        increment
        setRegister r:2
        pop
       label101:
        push r:2, r:this, '86{p('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label102
        push r:this, '86{p('
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3, ';d3', NULL
        setMember
        branch label100
       label102:
      end // of function 

      setMember
      push r:1, '{(g}5'
      function2 (r:2=')') (r:1='this')
        push r:')', ';d3', 0
        setMember
        push 0
        setRegister r:3
        pop
        branch label104
       label103:
        push r:3
        increment
        setRegister r:3
        pop
       label104:
        push r:3, '*r'
        getVariable
        push '*e['
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label107
        push '*r'
        getVariable
        push '*e['
        getMember
        push r:3
        getMember
        setRegister r:4
        pop
        push r:')', '5R'
        getMember
        push r:4, 0
        getMember
        add
        push '*r'
        getVariable
        push '4Hh41('
        getMember
        add
        setRegister r:5
        pop
        push r:')', '6R'
        getMember
        push r:4, 1
        getMember
        add
        push '*r'
        getVariable
        push '4Hh41('
        getMember
        add
        setRegister r:6
        pop
        push r:this, ';AH0'
        getMember
        push r:5
        getMember
        push r:6
        getMember
        setRegister r:7
        pop
        push r:7, NULL
        equals
        not
        dup
        not
        branchIfTrue label105
        pop
        push r:7, ';d3'
        getMember
        push NULL
        equals
       label105:
        not
        branchIfTrue label106
        push r:7, 1, r:this, '{(g}5'
        callMethod
        pop
       label106:
        branch label103
       label107:
      end // of function 

      setMember
      push r:1, ']Wz+ ('
      function2 () (r:1='this')
        push r:this, 'center', '44{N'
        getVariable
        push '86Itb'
        getMember
        push '9[d;C', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '2e{I'
        new
        setMember
        push 0, 0, 2, r:this, 'center'
        getMember
        push '(j;o7'
        callMethod
        pop
        push r:this, 'center'
        getMember
        push 'color', 100
        setMember
        push r:this, 'center'
        getMember
        push '0d', 1
        setMember
        push '20', 1, r:this, 'center'
        getMember
        push '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '*L6o7'
      function2 (r:2='[QL') (r:1='this')
        push r:this, '6uA'
        getMember
        push '_visible'
        getMember
        not
        branchIfTrue label108
        push 0, r:this, '6uA'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
       label108:
        push r:this, '6uA', 20, ' kf;B', 2, r:this, '(W3'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '6uA'
        getMember
        push '_x', '*r'
        getVariable
        push '=OA'
        getMember
        setMember
        push r:this, '6uA'
        getMember
        push '[QL', r:'[QL'
        setMember
      end // of function 

      setMember
      push r:0, '86Itb', 2
      setMember
      push r:0, '{YJfb', 3
      setMember
      push r:0, '}FI;8', 6
      setMember
      push r:0, '7j3QZ', 20
      setMember
      push r:0, '[VjD-', 0.3
      setMember
      push '-0]rl'
      function2 (r:2='}J') (r:1='this')
        push r:this, '-iB=', r:'}J'
        setMember
        push r:this, '-iB='
        getMember
        push '+KD', r:this
        setMember
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '7Qe;6'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '((', 0
        setMember
        push r:this, ')(', 0
        setMember
        push r:this, '-iB='
        getMember
        push '_x', -1000
        setMember
        push r:this, '-iB='
        getMember
        push '_y', -1000
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this')
        push r:this, '-iB='
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '-iB='
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this')
        push 0, r:this, '-iB='
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '7Qe;6'
        getMember
        push 'remove'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '4u=dZ'
      function2 () (r:1='this')
        push r:this, '-iB='
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '-iB='
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '}1A{_'
      function2 (r:2='8') (r:1='this')
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:3
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:4
        pop
        push r:3, r:3
        multiply
        push r:4, r:4
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        return
      end // of function 

      setMember
      push r:1, ')153L'
      function2 (r:2='8') (r:1='this')
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:3
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:4
        pop
        push r:3, r:4, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        return
      end // of function 

      setMember
      push r:1, '2sngh'
      function2 (r:2='8', r:3='*', r:4='62=') (r:1='this')
        push r:'8', 1, r:this, ')153L'
        callMethod
        setRegister r:5
        pop
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:6
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:7
        pop
        push r:this, '((', r:this, '(('
        getMember
        push r:'62=', r:6, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push r:'62=', r:7, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
      end // of function 

      setMember
      push r:1, '[j0D-'
      function2 (r:2='6') (r:1='this')
        push r:this, '(('
        getMember
        push 0, r:'6'
        subtract
        lessThan
        dup
        branchIfTrue label109
        pop
        push r:this, '(('
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        push r:'6'
        add
        greaterThan
       label109:
        dup
        branchIfTrue label110
        pop
        push r:this, ')('
        getMember
        push 0, r:'6'
        subtract
        lessThan
       label110:
        dup
        branchIfTrue label111
        pop
        push r:this, ')('
        getMember
        push '*r'
        getVariable
        push '*OA'
        getMember
        push r:'6'
        add
        greaterThan
       label111:
        return
      end // of function 

      setMember
      push ',v0X'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '+{eA+', 0.95
        setMember
        push r:this, '[b', 0
        setMember
        push r:this, ']b', 0
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '-0]rl'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '1Jr-,('
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '(KpGn'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label112
        push r:this, ']b', r:this, ']b'
        getMember
        push r:this, '(KpGn'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label112:
        push r:this, '+{eA+'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label113
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push r:this, '+{eA+'
        getMember
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:3
        pop
        push r:this, '[b', r:this, '[b'
        getMember
        push r:3
        multiply
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:3
        multiply
        setMember
       label113:
        push r:this, '((', r:this, '(('
        getMember
        push r:this, '[b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push r:this, ']b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
      end // of function 

      setMember
      push r:1, ';zS4(('
      function2 (r:2='8', r:3='*', r:4='62=') (r:1='this')
        push r:'8', 1, r:this, ')153L'
        callMethod
        setRegister r:5
        pop
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:6
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:7
        pop
        push r:this, '[b', r:this, '[b'
        getMember
        push r:'62=', r:6, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:'62=', r:7, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
      end // of function 

      setMember
      push '1Jr-,(', '-0]rl'
      getVariable
      push 'prototype'
      getMember
      push '87vE7('
      getMember
      setVariable
      push '*DzW'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, ',DBRf', 10
        setMember
        push r:this, 'scale', 100
        setMember
        push r:this, '3V[D(', 1
        setMember
        push r:this, '-iB='
        getMember
        push '+KD', r:this
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '3BjX_'
      function2 (r:2='-X') (r:1='this')
        push r:this, 'scale', r:'-X'
        setMember
        push r:this, '-iB='
        getMember
        push '_xscale', r:'-X'
        setMember
        push r:this, '-iB='
        getMember
        push '_yscale', r:'-X'
        setMember
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '6b'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label114
        push r:this, '6b', r:this, '6b'
        getMember
        push r:this, '3V[D('
        getMember
        multiply
        setMember
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '-iB='
        getMember
        push '_rotation'
        getMember
        push r:this, '6b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label114:
        push r:this, '2VhU6'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label118
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '2VhU6'
        getMember
        push r:this, ',DBRf'
        getMember
        lessThan
        not
        branchIfTrue label118
        push r:this, '2VhU6'
        getMember
        push r:this, ',DBRf'
        getMember
        divide
        setRegister r:3
        pop
        push r:this, '849kV'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label115
        branch label116
       label115:
        push r:this, '-iB='
        getMember
        push '_xscale', r:this, 'scale'
        getMember
        push r:3
        multiply
        setMember
        push r:this, '-iB='
        getMember
        push '_yscale', r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        setMember
        branch label117
       label116:
        push r:this, '-iB='
        getMember
        push '_alpha', r:3, 100
        multiply
        setMember
        branch label117
       label117:
        push r:this, '2VhU6'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label118
        push 0, r:this, '9T54'
        callMethod
        pop
       label118:
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push r:this, '8I0t8('
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label119
        push r:this, '8I0t8('
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
       label119:
        push r:this, 1, '2u=W='
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push '2u=W=', '-0]rl'
      getVariable
      push 'prototype'
      getMember
      push '9T54'
      getMember
      setVariable
      push '4RW6x', ',v0X'
      getVariable
      push 'prototype'
      getMember
      push '87vE7('
      getMember
      setVariable
      push '980Sb'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'init'
      function2 (r:2='}J') (r:1='this')
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        not
        branchIfTrue label120
        push UNDEF
        return
       label120:
        push '980Sb'
        getVariable
        push ')2fr3', r:'}J'
        setMember
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        branchIfTrue label121
        push '980Sb'
        getVariable
        push 'mode', '980Sb'
        getVariable
        push ')2fr3'
        getMember
        push 1, '44{N'
        new
        setMember
       label121:
      end // of function 

      setMember
      push r:0, '0D 6'
      function2 () (r:1='this')
        push 0, '{-kxL'
        getVariable
        push '87vE7('
        callMethod
        pop
        push 0, '980Sb'
        getVariable
        push 'mode'
        getMember
        push '0D 6'
        callMethod
        pop
      end // of function 

      setMember
      push '+7U K'
      function2 (r:2='}J') (r:1='this')
        push r:this, ')2fr3', r:'}J'
        setMember
        push r:this, '}Zms3', 0, 'Array'
        new
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, ']1sj+'
      function2 () (r:1='this')
        push r:this, ')2fr3'
        getMember
        return
      end // of function 

      setMember
      push r:1, '-fC3a'
      function2 (r:2='59F') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'59F'
        getMember
        setRegister r:3
        pop
        push r:3, NULL
        equals
        not
        branchIfTrue label122
        push '9oK', 0, 'Array'
        new
        push '7-,', 0, 2
        initObject
        setRegister r:3
        pop
        push r:this, '}Zms3'
        getMember
        push r:'59F', r:3
        setMember
       label122:
        push r:3
        return
      end // of function 

      setMember
      push r:1, ']bu40'
      function2 (r:2='[-99') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'[-99'
        getMember
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:7
        pop
        push r:'[-99', 1000
        multiply
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label124
       label123:
        push r:6
        increment
        setRegister r:6
        pop
       label124:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label126
        push r:4, r:6
        getMember
        push '_name'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label125
        push r:8, r:7
        add
        push 1, r:4, r:6
        getMember
        push 'swapDepths'
        callMethod
        pop
        push r:4, r:7, r:4, r:6
        getMember
        setMember
        push r:7
        increment
        setRegister r:7
        pop
       label125:
        branch label123
       label126:
        push r:3, '7-,', r:7
        setMember
      end // of function 

      setMember
      push r:1, '*=_p_'
      function2 (r:2='*KB2', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label127
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'*KB2', 2, r:this, '*=_p_'
        callMethod
        return
       label127:
        push r:6, r:'[-99', 1000
        multiply
        add
        push r:'*KB2', r:this, ')2fr3'
        getMember
        push 3, '3Wt'
        getVariable
        push 'attachMC'
        callMethod
        setRegister r:7
        pop
        push r:5, r:6, r:7
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:7
        return
      end // of function 

      setMember
      push r:1, '18wU*'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push r:5, 1000
        equals
        not
        branchIfTrue label128
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', 1, r:this, '18wU*'
        callMethod
        return
       label128:
        push r:5, r:'[-99', 1000
        multiply
        add
        push r:this, ')2fr3'
        getMember
        push 2, '3Wt'
        getVariable
        push 'createEmptyMC'
        callMethod
        setRegister r:6
        pop
        push r:4, r:5, r:6
        setMember
        push r:3, '7-,', r:3, '7-,'
        getMember
        increment
        setMember
        push r:6
        return
      end // of function 

      setMember
      push r:1, '(GbB}'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label129
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        return
       label129:
        push r:5, r:6, r:'}J'
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:6, r:'[-99', 1000
        multiply
        add
        return
      end // of function 

      setMember
      push r:1, '+2NA'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        push 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, r:'[-99'
        equals
        not
        branchIfTrue label130
        push UNDEF
        return
       label130:
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:5, '7-,'
        getMember
        setRegister r:7
        pop
        push 0
        setRegister r:8
        pop
        branch label132
       label131:
        push r:8
        increment
        setRegister r:8
        pop
       label132:
        push r:8, r:7
        lessThan
        not
        branchIfTrue label134
        push r:6, r:8
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label133
        push r:6, r:8, NULL
        setMember
        branch label134
       label133:
        branch label131
       label134:
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}oQA7'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label135
        push r:6, r:7, NULL
        setMember
        push r:'}J', 1, r:6, 'unshift'
        callMethod
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label135:
      end // of function 

      setMember
      push r:1, '08M8'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label137
        push r:6, r:7, NULL
        setMember
        push r:5, '7-,'
        getMember
        push 1000
        equals
        not
        branchIfTrue label136
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label136:
        push r:5, '7-,'
        getMember
        setRegister r:3
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:3, r:4, 1000
        multiply
        add
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
        push r:6, r:3, r:'}J'
        setMember
       label137:
      end // of function 

      setMember
      push r:1, 'clear'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:4
        pop
        branch label139
       label138:
        push r:4
        increment
        setRegister r:4
        pop
       label139:
        push r:4, r:3, '7-,'
        getMember
        lessThan
        not
        branchIfTrue label140
        push 0, r:5, r:4
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label138
       label140:
        push r:3, '7-,', 0
        setMember
      end // of function 

      setMember
      push r:1, '9(K ;'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push -99999999
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label142
       label141:
        push r:6
        increment
        setRegister r:6
        pop
       label142:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label150
        push r:4, r:6
        getMember
        setRegister r:9
        pop
        push r:9, '_y'
        getMember
        setRegister r:10
        pop
        push r:10, r:8
        lessThan
        not
        not
        branchIfTrue label143
        push r:10
        setRegister r:8
        pop
        branch label149
       label143:
        push r:6
        setRegister r:7
        pop
        branch label145
       label144:
        push r:7
        decrement
        setRegister r:7
        pop
       label145:
        push r:7, 0
        greaterThan
        not
        branchIfTrue label148
        push r:4, r:7, 1
        subtract
        getMember
        setRegister r:11
        pop
        push r:11, '_y'
        getMember
        push r:10
        greaterThan
        not
        branchIfTrue label146
        push r:4, r:7, r:11
        setMember
        push r:11, 1, r:9, 'swapDepths'
        callMethod
        pop
        branch label147
       label146:
        push r:4, r:7, r:9
        setMember
        branch label148
       label147:
        branch label144
       label148:
        push r:7, 0
        equals
        not
        branchIfTrue label149
        push r:4, 0, r:9
        setMember
       label149:
        branch label141
       label150:
      end // of function 

      setMember
      push r:1, 'destroy'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label152
       label151:
        push r:2
        increment
        setRegister r:2
        pop
       label152:
        push r:2, r:this, '}Zms3'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label153
        push r:2, 1, r:this, 'clear'
        callMethod
        pop
        branch label151
       label153:
      end // of function 

      setMember
      push '2e{I'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '5P55', 0, 'Array'
        new
        setMember
        push r:this, '-iB='
        getMember
        push '+KD', r:this
        setMember
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '86{p('
        getMember
        push 'push'
        callMethod
        pop
        push r:this, ']oH', '*r'
        getVariable
        push '{Cs'
        getMember
        setMember
        push r:this, '+{eA+', 1
        setMember
        push r:this, '0d', 0.5
        setMember
        push r:this, ';357+', FALSE
        setMember
        push r:this, '+G97+', FALSE
        setMember
        push r:this, 'color', '*r'
        getVariable
        push '+-(0'
        getMember
        push '=bA(A('
        getMember
        push 0
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setMember
        push 0, r:this, ']ZsEn'
        callMethod
        pop
        push r:this, '-iB='
        getMember
        push '_xscale', '*r'
        getVariable
        push '{Cs'
        getMember
        push 12
        divide
        push 100
        multiply
        setMember
        push r:this, '-iB='
        getMember
        push '_yscale', r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, ';357+'
        getMember
        not
        branchIfTrue label155
        push 0, 1, r:this, '7yU(0'
        callMethod
        not
        branchIfTrue label154
        push 0, r:this, '6o_Q+'
        callMethod
        pop
       label154:
        push '((', 0, ')(', 0, 2
        initObject
        push 1, r:this, '}1A{_'
        callMethod
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 0.8
        multiply
        greaterThan
        not
        branchIfTrue label155
        push 0, r:this, '9T54'
        callMethod
        pop
        push '*r'
        getVariable
        push ',il7z'
        getMember
        push 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '5Hy6b'
        callMethod
        pop
       label155:
        push r:this, ' [z_9('
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label157
        push r:this, ' [z_9(', r:this, ' [z_9('
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push 5
        setRegister r:3
        pop
        push r:this, ' [z_9('
        getMember
        push r:3
        lessThan
        not
        branchIfTrue label156
        push 1, r:this, ' [z_9('
        getMember
        push r:3
        divide
        subtract
        setRegister r:4
        pop
        push r:this, '-iB='
        getMember
        push '_xscale', 100, r:4, 10
        multiply
        add
        setMember
        push r:this, '-iB='
        getMember
        push '_yscale', r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        setMember
       label156:
        push r:this, ' [z_9('
        getMember
        push 0
        lessThan
        not
        branchIfTrue label157
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push '-O_ y', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:5
        pop
        push r:5, '_x', r:this, '(('
        getMember
        setMember
        push r:5, '_y', r:this, ')('
        getMember
        setMember
        push r:5, '_xscale', 300
        setMember
        push r:5, '_yscale', r:5, '_xscale'
        getMember
        setMember
        push r:5, '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        push 0, r:this, '9T54'
        callMethod
        pop
       label157:
        push r:this, '}CL'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label158
        push 20, '2e{I'
        getVariable
        push ']OCkF('
        getMember
        push r:this, '}CL'
        getMember
        push 3, r:this, '2sngh'
        callMethod
        pop
        push r:this, '}CL'
        getMember
        push 1, r:this, '}1A{_'
        callMethod
        push 0.5
        lessThan
        not
        branchIfTrue label158
        push r:this, '}CL', NULL
        setMember
       label158:
        push r:this, '7b'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label160
        push 100, r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        subtract
        setRegister r:6
        pop
        push r:this, '7b', r:this, '7b'
        getMember
        push r:6, 0.2
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '7b', r:this, '7b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.7, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        setMember
        push r:this, '-iB='
        getMember
        push '_xscale', r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        push r:this, '7b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '-iB='
        getMember
        push '_yscale', r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        setMember
        push r:6, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push 0.5
        lessThan
        dup
        not
        branchIfTrue label159
        pop
        push r:this, '7b'
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push 0.5
        lessThan
       label159:
        not
        branchIfTrue label160
        push r:this, '7b', NULL
        setMember
        push r:this, '-iB='
        getMember
        push '_xscale', 100
        setMember
        push r:this, '-iB='
        getMember
        push '_yscale', r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        setMember
       label160:
      end // of function 

      setMember
      push r:1, '7yU(0'
      function2 (r:2='7') (r:1='this')
        push 0
        setRegister r:3
        pop
        branch label162
       label161:
        push r:3
        increment
        setRegister r:3
        pop
       label162:
        push r:3, '*r'
        getVariable
        push '+-(0'
        getMember
        push '86{p('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label164
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '86{p('
        getMember
        push r:3
        getMember
        setRegister r:4
        pop
        push r:4, r:this
        equals
        not
        not
        branchIfTrue label163
        push r:4, 1, r:this, '}1A{_'
        callMethod
        setRegister r:5
        pop
        push r:5, r:this, ']oH'
        getMember
        push 2
        multiply
        push r:'7'
        add
        lessThan
        not
        branchIfTrue label163
        push TRUE
        return
       label163:
        branch label161
       label164:
        push FALSE
        return
      end // of function 

      setMember
      push r:1, '6o_Q+'
      function2 () (r:1='this')
        push r:this, ';357+', FALSE
        setMember
        push 0.02
        setRegister r:2
        pop
        branch label167
       label165:
        push 0, 1, r:this, '7yU(0'
        callMethod
        dup
        branchIfTrue label166
        pop
        push 0, r:this, '(El(0'
        callMethod
       label166:
        not
        branchIfTrue label168
       label167:
        push r:this, '((', r:this, '(('
        getMember
        push r:this, '[b'
        getMember
        push r:2
        multiply
        subtract
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push r:this, ']b'
        getMember
        push r:2
        multiply
        subtract
        setMember
        push r:this, ')('
        getMember
        push r:this, '(('
        getMember
        push 2, '*r'
        getVariable
        push '*QP3L'
        callMethod
        setRegister r:3
        pop
        push r:this, '5R', r:3, '(('
        getMember
        setMember
        push r:this, '6R', r:3, ')('
        getMember
        setMember
        branch label165
       label168:
        push r:this, '6R'
        getMember
        push r:this, '5R'
        getMember
        push 2, r:this, '16[0P'
        callMethod
        not
        branchIfTrue label169
        push 0, r:this, '{biQC'
        callMethod
        pop
       label169:
        push r:this, '[b', 0
        setMember
        push r:this, ']b', 0
        setMember
        push r:this, '(('
        getMember
        setRegister r:4
        pop
        push r:this, ')('
        getMember
        setRegister r:5
        pop
        push 0, r:this, '=jE}1'
        callMethod
        pop
        push r:this, '}CL', '((', r:this, '(('
        getMember
        push ')(', r:this, ')('
        getMember
        push 2
        initObject
        setMember
        push r:this, '((', r:4
        setMember
        push r:this, ')(', r:5
        setMember
        push '*r'
        getVariable
        push ',il7z'
        getMember
        push 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '5Hy6b'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '16[0P'
      function2 (r:2='90', r:3=';0') (r:1='this')
        push 0
        setRegister r:4
        pop
        branch label171
       label170:
        push r:4
        increment
        setRegister r:4
        pop
       label171:
        push r:4, '*r'
        getVariable
        push '*e['
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label173
        push '*r'
        getVariable
        push '*e['
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push r:'90', r:5, 0
        getMember
        add
        setRegister r:6
        pop
        push r:';0', r:5, 1
        getMember
        add
        setRegister r:7
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push ';AH0'
        getMember
        push r:6, '*r'
        getVariable
        push '4Hh41('
        getMember
        add
        getMember
        push r:7, '*r'
        getVariable
        push '4Hh41('
        getMember
        add
        getMember
        setRegister r:8
        pop
        push r:8, NULL
        equals
        not
        not
        branchIfTrue label172
        push FALSE
        return
       label172:
        branch label170
       label173:
        push TRUE
        return
      end // of function 

      setMember
      push r:1, '{biQC'
      function2 () (r:1='this')
        push 1
        setRegister r:2
        pop
        branch label175
       label174:
        push r:2
        increment
        setRegister r:2
        pop
       label175:
        push r:2, 10
        lessThan
        not
        branchIfTrue label184
        push 0
        setRegister r:3
        pop
        branch label177
       label176:
        push r:3
        increment
        setRegister r:3
        pop
       label177:
        push r:3, '*r'
        getVariable
        push '*e['
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label183
        push '*r'
        getVariable
        push '*e['
        getMember
        push r:3
        getMember
        setRegister r:4
        pop
        push r:this, '5R'
        getMember
        push r:4, 0
        getMember
        push r:2
        multiply
        add
        setRegister r:5
        pop
        push r:this, '6R'
        getMember
        push r:4, 1
        getMember
        push r:2
        multiply
        add
        setRegister r:6
        pop
        push 0
        setRegister r:7
        pop
        branch label179
       label178:
        push r:7
        increment
        setRegister r:7
        pop
       label179:
        push r:7, r:2
        lessThan
        not
        branchIfTrue label182
        push '*r'
        getVariable
        push '*e['
        getMember
        push r:3, 2
        add
        push '*r'
        getVariable
        push '*e['
        getMember
        push 'length'
        getMember
        modulo
        getMember
        setRegister r:8
        pop
        push r:5, r:8, 0
        getMember
        push r:7
        multiply
        add
        setRegister r:9
        pop
        push r:6, r:8, 1
        getMember
        push r:7
        multiply
        add
        setRegister r:10
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push ';AH0'
        getMember
        push r:9, '*r'
        getVariable
        push '4Hh41('
        getMember
        add
        getMember
        push r:10, '*r'
        getVariable
        push '4Hh41('
        getMember
        add
        getMember
        setRegister r:11
        pop
        push r:11, NULL
        equals
        dup
        not
        branchIfTrue label180
        pop
        push r:10, r:9, 2, r:this, '16[0P'
        callMethod
        not
       label180:
        not
        branchIfTrue label181
        push r:this, '5R', r:9
        setMember
        push r:this, '6R', r:10
        setMember
        push UNDEF
        return
       label181:
        branch label178
       label182:
        branch label176
       label183:
        branch label174
       label184:
      end // of function 

      setMember
      push r:1, '(j;o7'
      function2 (r:2=')N', r:3='*N') (r:1='this')
        push r:this, '5R', r:')N'
        setMember
        push r:this, '6R', r:'*N'
        setMember
        push 0, r:this, '=jE}1'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '(El(0'
      function2 () (r:1='this')
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push ';AH0'
        getMember
        push r:this, '5R'
        getMember
        push '*r'
        getVariable
        push '4Hh41('
        getMember
        add
        getMember
        push r:this, '6R'
        getMember
        push '*r'
        getVariable
        push '4Hh41('
        getMember
        add
        getMember
        push NULL
        equals
        not
        return
      end // of function 

      setMember
      push r:1, '=jE}1'
      function2 () (r:1='this')
        push r:this, '((', r:this, '5R'
        getMember
        push r:this, '6R'
        getMember
        add
        push '*r'
        getVariable
        push '=P('
        getMember
        multiply
        setMember
        push r:this, ')(', r:this, '5R'
        getMember
        push r:this, '6R'
        getMember
        subtract
        push '*r'
        getVariable
        push '] ('
        getMember
        multiply
        setMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push ';AH0'
        getMember
        push r:this, '5R'
        getMember
        push '*r'
        getVariable
        push '4Hh41('
        getMember
        add
        getMember
        push r:this, '6R'
        getMember
        push '*r'
        getVariable
        push '4Hh41('
        getMember
        add
        push r:this
        setMember
      end // of function 

      setMember
      push r:1, '[5(-'
      function2 () (r:1='this')
        push 10, '6LME,(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '(W3'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:2
        pop
        push 1, r:this, 'color'
        getMember
        add
        toString
        push 1, r:2, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, ')('
        getMember
        push r:this, '(('
        getMember
        push 2, r:this, '(nsSt'
        callMethod
        setRegister r:3
        pop
        push r:2, '((', r:3, '(('
        getMember
        setMember
        push r:2, ')(', r:3, ')('
        getMember
        setMember
        push r:2, '(KpGn', 0.2, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.5
        multiply
        add
        setMember
        push r:2, '849kV', 0
        setMember
        push r:2, '2VhU6', 18, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push '*r'
        getVariable
        push '2)F8['
        getMember
        push r:this, 'color'
        getMember
        getMember
        setRegister r:4
        pop
        push r:this, 'color'
        getMember
        push 20
        equals
        not
        branchIfTrue label185
        push '*r'
        getVariable
        push '}cl4B'
        getMember
        setRegister r:4
        pop
       label185:
        push r:2, '8I0t8(', r:4, 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '-R 9)'
        getMember
        push 0
        getMember
        push 1
        add
        multiply
        push 1, ';ndCG'
        getVariable
        push '-Q)9)'
        callMethod
        setMember
        push 0, r:this, '9T54'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ';-[;H'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label187
       label186:
        push r:2
        increment
        setRegister r:2
        pop
       label187:
        push r:2, 20
        lessThan
        not
        branchIfTrue label188
        push 0, r:this, '+46i4('
        callMethod
        pop
        branch label186
       label188:
        push 0
        setRegister r:3
        pop
        branch label190
       label189:
        push r:3
        increment
        setRegister r:3
        pop
       label190:
        push r:3, '*r'
        getVariable
        push '*e['
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label192
        push r:this, '5R'
        getMember
        push '*r'
        getVariable
        push '*e['
        getMember
        push r:3
        getMember
        push 0
        getMember
        add
        setRegister r:4
        pop
        push r:this, '6R'
        getMember
        push '*r'
        getVariable
        push '*e['
        getMember
        push r:3
        getMember
        push 1
        getMember
        add
        setRegister r:5
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push ';AH0'
        getMember
        push r:4, '*r'
        getVariable
        push '4Hh41('
        getMember
        add
        getMember
        push r:5, '*r'
        getVariable
        push '4Hh41('
        getMember
        add
        getMember
        setRegister r:6
        pop
        push r:6, '+G97+'
        getMember
        not
        branchIfTrue label191
        push 0, r:6, '8t,B7'
        callMethod
        pop
       label191:
        branch label189
       label192:
        push 0, r:this, '9T54'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '+46i4('
      function2 () (r:1='this')
        push 10, '7LeMK(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '(W3'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:2
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:3
        pop
        push r:3, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:4
        pop
        push r:3, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:5
        pop
        push 1, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 3
        multiply
        add
        setRegister r:6
        pop
        push r:this, ')('
        getMember
        push r:this, '(('
        getMember
        push 2, r:this, '(nsSt'
        callMethod
        setRegister r:7
        pop
        push r:2, '((', r:7, '(('
        getMember
        push r:4, r:this, ']oH'
        getMember
        multiply
        add
        setMember
        push r:2, ')(', r:7, ')('
        getMember
        push r:5, r:this, ']oH'
        getMember
        multiply
        add
        setMember
        push r:2, '[b', r:4, r:6
        multiply
        setMember
        push r:2, ']b', r:5, r:6
        multiply
        setMember
        push r:2, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 12
        multiply
        add
        setMember
        push r:2, '-iB='
        getMember
        push '0tJ'
        getMember
        setRegister r:8
        pop
        push r:3, 2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 1.57
        multiply
        add
        setRegister r:9
        pop
        push 1, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setRegister r:10
        pop
        push r:8, '_x', r:9, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:10
        multiply
        setMember
        push r:8, '_y', r:9, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:10
        multiply
        setMember
        push r:2, '((', r:2, '(('
        getMember
        push r:8, '_x'
        getMember
        subtract
        setMember
        push r:2, ')(', r:2, ')('
        getMember
        push r:8, '_y'
        getMember
        subtract
        setMember
        push r:2, '6b', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 20
        multiply
        setMember
        push 2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        add
        toString
        push 1, r:8, 'gotoAndPlay'
        callMethod
        pop
        push r:2, '849kV', 0
        setMember
      end // of function 

      setMember
      push r:1, '}PxyY'
      function2 () (r:1='this')
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push '6LME,(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:2
        pop
        push 1, r:this, 'color'
        getMember
        add
        toString
        push 1, r:2, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:3
        pop
        push r:3, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:4
        pop
        push r:3, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:5
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push r:this, ']oH'
        getMember
        multiply
        push 2
        multiply
        push r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        multiply
        push 100
        divide
        setRegister r:6
        pop
        push r:2, '((', r:this, '(('
        getMember
        push r:4, r:6
        multiply
        add
        setMember
        push r:2, ')(', r:this, ')('
        getMember
        push r:5, r:6
        multiply
        add
        setMember
        push r:2, '(KpGn', 0.5, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 0.3
        multiply
        add
        setMember
        push r:2, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 20
        multiply
        add
        push 1, r:2, '3BjX_'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '8t,B7'
      function2 () (r:1='this')
        push r:this, '+G97+', FALSE
        setMember
        push 0, r:this, ']ZsEn'
        callMethod
        pop
        push 10
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label194
       label193:
        push r:3
        increment
        setRegister r:3
        pop
       label194:
        push r:3, r:2
        lessThan
        not
        branchIfTrue label195
        push 10, ' gFFu', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '(W3'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:4
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:5
        pop
        push r:5, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:6
        pop
        push r:5, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:7
        pop
        push 0.5, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 3
        multiply
        add
        setRegister r:8
        pop
        push r:this, ')('
        getMember
        push r:this, '(('
        getMember
        push 2, r:this, '(nsSt'
        callMethod
        setRegister r:9
        pop
        push r:this, ']oH'
        getMember
        push 2
        add
        setRegister r:10
        pop
        push r:4, '((', r:9, '(('
        getMember
        push r:6, r:10
        multiply
        add
        setMember
        push r:4, ')(', r:9, ')('
        getMember
        push r:7, r:10
        multiply
        add
        setMember
        push r:4, '[b', r:6, r:8
        multiply
        setMember
        push r:4, ']b', r:7, r:8
        multiply
        setMember
        push r:4, '6b', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 16
        multiply
        setMember
        push r:4, '(KpGn', 0.1, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.2
        multiply
        add
        setMember
        push r:4, '-iB='
        getMember
        push '_rotation', r:5, 0.0157
        divide
        push 90
        add
        setMember
        push 20, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        add
        toString
        push 1, r:4, '-iB='
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push r:4, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 50
        multiply
        add
        setMember
        push r:4, 'scale', 20, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 100
        multiply
        add
        setMember
        push r:4, '849kV', 1
        setMember
        push r:4, '-iB='
        getMember
        push '_xscale', r:4, 'scale'
        getMember
        setMember
        push r:4, '-iB='
        getMember
        push '_yscale', r:4, 'scale'
        getMember
        setMember
        branch label193
       label195:
      end // of function 

      setMember
      push r:1, ']ZsEn'
      function2 () (r:1='this')
        push r:this, 'color'
        getMember
        push 1
        add
        setRegister r:2
        pop
        push r:this, '+G97+'
        getMember
        not
        branchIfTrue label196
        push r:2, 10
        add
        setRegister r:2
        pop
       label196:
        push r:2
        toString
        push 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push 'center'
        getMember
        push r:this
        equals
        not
        branchIfTrue label197
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push 'center', NULL
        setMember
       label197:
        push 0, r:this, '--m8U'
        callMethod
        pop
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '86{p('
        getMember
        push 'remove'
        callMethod
        pop
        push r:this, 1, '2u=W='
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '--m8U'
      function2 () (r:1='this')
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push ';AH0'
        getMember
        push r:this, '5R'
        getMember
        push '*r'
        getVariable
        push '4Hh41('
        getMember
        add
        getMember
        push r:this, '6R'
        getMember
        push '*r'
        getVariable
        push '4Hh41('
        getMember
        add
        push NULL
        setMember
      end // of function 

      setMember
      push r:1, '(nsSt'
      function2 (r:2='((', r:3=')(') (r:1='this')
        push r:'((', r:')(', 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        setRegister r:4
        pop
        push r:'((', r:'(('
        multiply
        push r:')(', r:')('
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        setRegister r:5
        pop
        push r:4, '*r'
        getVariable
        push '+-(0'
        getMember
        push '9O*r'
        getMember
        subtract
        setRegister r:6
        pop
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 0.5
        multiply
        push r:6, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:5
        multiply
        add
        setRegister r:7
        pop
        push '*r'
        getVariable
        push '*OA'
        getMember
        push 0.5
        multiply
        push r:6, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:5
        multiply
        add
        setRegister r:8
        pop
        push '((', r:7, ')(', r:8, 2
        initObject
        return
      end // of function 

      setMember
      push r:0, '8HPUn', 0.2
      setMember
      push r:0, '3AYjk', 0.1
      setMember
      push r:0, ']OCkF(', 0.4
      setMember
      push '(WBt)'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ']}Ou;(', 1
      setMember
      push r:0, '3I0pG', 2
      setMember
      push r:0, '{;7F4', 3
      setMember
      push r:0, '8U(wu', 4
      setMember
      push r:0, '}[cpB', 5
      setMember
      push r:0, '9xv]A', 6
      setMember
      push r:0, '{yQ=Q', 7
      setMember
      push r:0, '+,W', 8
      setMember
      push r:0, '2y+dV', 9
      setMember
      push r:0, '(tBee', 10
      setMember
      push r:0, '3)i[=', 11
      setMember
      push r:0, ' J3IC', 12
      setMember
      push r:0, '[6jRc', 13
      setMember
      push r:0, ')8Fyj', 14
      setMember
      push '{-kxL'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '87vE7('
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '4plQ5', '{-kxL'
        getVariable
        push '4plQ5'
        getMember
        increment
        setMember
        push 0, '3Wt'
        getVariable
        push 'getTimer'
        callMethod
        setRegister r:2
        pop
        push '{-kxL'
        getVariable
        push ';ILSy', r:2, '{-kxL'
        getVariable
        push '3R,QM'
        getMember
        subtract
        push 1000.0
        divide
        setMember
        push '{-kxL'
        getVariable
        push '3R,QM', r:2
        setMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        push '{-kxL'
        getVariable
        push ';y}-6('
        getMember
        lessThan
        not
        branchIfTrue label198
        push '{-kxL'
        getVariable
        push '-)Xd+', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        push '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        multiply
        push 1, '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        subtract
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        multiply
        add
        setMember
        branch label199
       label198:
        push '{-kxL'
        getVariable
        push ';ILSy', 1, '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        divide
        setMember
       label199:
        push '{-kxL'
        getVariable
        push '-V;B', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        setMember
      end // of function 

      setMember
      push r:0, 'fps'
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        return
      end // of function 

      setMember
      push r:0, '6GI,F', 32
      setMember
      push r:0, ';y}-6(', 0.5
      setMember
      push r:0, '3R,QM', 0, '3Wt'
      getVariable
      push 'getTimer'
      callMethod
      setMember
      push r:0, '[Ad;n', 0.95
      setMember
      push r:0, '-)Xd+', 1
      setMember
      push r:0, '-V;B', 1
      setMember
      push r:0, ';ILSy', 1
      setMember
      push r:0, '4plQ5', 0
      setMember
    end // of frame 0
  end // of defineMovieClip 91
  
  exportAssets
    91 as '90D*'
  end // of exportAssets
end
