movie '28b357c4b63ea29f9502e69e4d43a2db.swf' compressed // flash 8, total frames: 1, frame rate: 40 fps, 700x480 px


  defineMovieClip 2 // total frames: 1
  end // of defineMovieClip 2

  defineMovieClip 5 // total frames: 1
  end // of defineMovieClip 5

  defineMovieClip 8 // total frames: 1
  end // of defineMovieClip 8

  defineMovieClip 11 // total frames: 1
  end // of defineMovieClip 11

  defineMovieClip 14 // total frames: 1
  end // of defineMovieClip 14

  defineMovieClip 17 // total frames: 1
  end // of defineMovieClip 17

  defineMovieClip 19 // total frames: 1
  end // of defineMovieClip 19

  defineMovieClip 21 // total frames: 1
  end // of defineMovieClip 21

  defineMovieClip 24 // total frames: 1
  end // of defineMovieClip 24

  defineMovieClip 26 // total frames: 1
  end // of defineMovieClip 26

  defineMovieClip 28 // total frames: 1
  end // of defineMovieClip 28

  defineMovieClip 31 // total frames: 1
  end // of defineMovieClip 31

  defineMovieClip 34 // total frames: 1
  end // of defineMovieClip 34

  defineMovieClip 35 // total frames: 23
  end // of defineMovieClip 35
  
  exportAssets
    35 as ')9L'
  end // of exportAssets

  defineMovieClip 40 // total frames: 1
  end // of defineMovieClip 40
  
  exportAssets
    35 as ')9L'
  end // of exportAssets
  
  exportAssets
    35 as ')9L'
  end // of exportAssets
  
  exportAssets
    35 as ')9L'
  end // of exportAssets
  
  exportAssets
    35 as ')9L'
  end // of exportAssets
  
  exportAssets
    35 as ')9L'
  end // of exportAssets
  
  exportAssets
    35 as ')9L'
  end // of exportAssets
  
  exportAssets
    35 as ')9L'
  end // of exportAssets
  
  exportAssets
    35 as ')9L'
  end // of exportAssets
  
  exportAssets
    35 as ')9L'
  end // of exportAssets
  
  exportAssets
    35 as ')9L'
  end // of exportAssets
  
  exportAssets
    35 as ')9L'
  end // of exportAssets
  
  exportAssets
    35 as ')9L'
  end // of exportAssets
  
  exportAssets
    35 as ')9L'
  end // of exportAssets
  
  exportAssets
    35 as ')9L'
  end // of exportAssets
  
  exportAssets
    35 as ')9L'
  end // of exportAssets

  defineMovieClip 41 // total frames: 23

    frame 0
    end // of frame 0

    frame 15
      stop
    end // of frame 15

    frame 22
      gotoFrame 0
    end // of frame 22
  end // of defineMovieClip 41

  defineMovieClip 42 // total frames: 1
  end // of defineMovieClip 42
  
  exportAssets
    42 as '4N*'
  end // of exportAssets

  defineMovieClip 47 // total frames: 1
  end // of defineMovieClip 47

  defineMovieClip 50 // total frames: 2
  end // of defineMovieClip 50

  defineMovieClip 54 // total frames: 1
  end // of defineMovieClip 54

  defineMovieClip 57 // total frames: 10

    frame 0
      stop
    end // of frame 0

    frame 5
      push 0.0, '}4Yx5'
      callFunction
      pop
    end // of frame 5

    frame 9
      gotoFrame 0
    end // of frame 9
  end // of defineMovieClip 57
  
  exportAssets
    57 as '-r1eL'
  end // of exportAssets

  defineMovieClip 61 // total frames: 1
  end // of defineMovieClip 61

  defineMovieClip 68 // total frames: 10

    frame 0
      stop
    end // of frame 0

    frame 1
      push '5t 9)', 3
      setVariable
    end // of frame 1

    frame 9
      constants '5t 9)'  
      push '5t 9)'
      getVariable
      push '5t 9)', '5t 9)'
      getVariable
      decrement
      setVariable
      push 0.0
      greaterThan
      not
      branchIfTrue label1
      gotoFrame 2
      play
     label1:
    end // of frame 9
  end // of defineMovieClip 68

  defineMovieClip 72 // total frames: 10

    frame 0
      stop
    end // of frame 0

    frame 1
      push '5t 9)', 3
      setVariable
    end // of frame 1

    frame 9
      constants '5t 9)'  
      push '5t 9)'
      getVariable
      push '5t 9)', '5t 9)'
      getVariable
      decrement
      setVariable
      push 0.0
      greaterThan
      not
      branchIfTrue label1
      gotoFrame 2
      play
     label1:
    end // of frame 9
  end // of defineMovieClip 72

  defineMovieClip 73 // total frames: 1
  end // of defineMovieClip 73

  defineMovieClip 74 // total frames: 1

    frame 0
      stop
      push '*('
      getVariable
      pop
    end // of frame 0
  end // of defineMovieClip 74
  
  exportAssets
    74 as '{Nz6s'
  end // of exportAssets

  defineMovieClip 76 // total frames: 1
  end // of defineMovieClip 76
  
  exportAssets
    76 as ';+'
  end // of exportAssets
  
  exportAssets
    76 as ';+'
  end // of exportAssets
  
  exportAssets
    74 as '{Nz6s'
  end // of exportAssets
  
  exportAssets
    74 as '{Nz6s'
  end // of exportAssets
  
  exportAssets
    74 as '{Nz6s'
  end // of exportAssets
  
  exportAssets
    57 as '-r1eL'
  end // of exportAssets
  
  exportAssets
    42 as '4N*'
  end // of exportAssets
  
  exportAssets
    57 as '-r1eL'
  end // of exportAssets
  
  exportAssets
    57 as '-r1eL'
  end // of exportAssets

  defineMovieClip 77 // total frames: 1

    frame 0
      constants '=(,aA', '8FkFg', ',4yN2', ',6cmF', '1B)SZ', '][xe=(', ';0PP6', '[=Qq(', '6cji8(', '{un,3', '*+fFC', '6jZ', ';ndCG', '-Q)9)', ']y;,8(', '6V[ZE', '=c578', '-[m(M', ',Hwi)', '*B', 'clearInterval', '3Wt', 'getGlobal', '-', 'setInterval', '}wUHz', 'length', 'split', 'join', '', 'indexOf', 'slice', 'substring', '* I51', 'Array', 'charCodeAt', 'push', ',JBe0', 'duplicate', 'random', '4UQ(1', '_parent', '_x', '_y', '{2', '}2', ' Ly7b', '0', '7g,ln', '4*fgv', 'getBounds', 'xMin', 'xMax', 'yMin', 'yMax', 'Math', 'sqrt', '16KA', '(', '}J', '_typeof', 'movieclip', 'forin', 'localToGlobal', 'Hash', ',[A(', 'set', '-[A(', '((', 'get', ')(', 'globalToLocal', '{Gq]-', '$r', '$h', '$w', '$y', '$x', '$box', '$matrixType', '$radial', '$linear', ']cY[2', 'beginGradientFill', ' (', '1', '=', 'flash', 'Object', 'filters', '{lN=R', ',i0 [', '44{N', '1uu', '7Gj]', ']}lAm', '+7U K', ';+', '*=_p_', '5U4B', '+bFio', '}Yax5', '4N*', '{SWu]', '-_X}5', '=6o,5', '9myY', '*c,A', '5Z', '4Z', '3Z', ']', '[5(-', 'gotoAndPlay', 'onPress', ';S[{T', 'callback', '7vdL6(', ']x5dZ', 'prototype', ')9L', 'gotoAndStop', '7[*', '_alpha', ' Z vF', '4zkrA(', '_visible', '+2NA', ')j)Yf', 'destroy', '16', '18wU*', '8[kz=(', ' 1+}7(', '8+C5', 'xmouse', 'ymouse', '0D 6', '{-kxL', ';ILSy', '87vE7(', ' ;1,e', '$c', '7T4cF(', '980Sb', 'init', '(kJ+1(', ']{i', 'setColor', ')2fr3', 'mode', '}Zms3', ']1sj+', '-fC3a', '9oK', '7-,', ']bu40', '_name', 'swapDepths', 'attachMC', 'createEmptyMC', '(GbB}', 'getDepth', 'floor', '}oQA7', 'unshift', '08M8', 'clear', 'removeMovieClip', '9(K ;', '+-(0', '4AF', '0f 5', '0twi)', '(12]+(', ')I()', '{Nz6s', ');oA+', '-r1eL', '1', '8]', '2', '9]', '4Ck}6(', '+6jYE', '-nBB', '-V;B', '(v+i3', '+Da3+', 'text', 'textColor', ']L,PR', '$b', '+GWw+', 'play', '[wH', '$s', '4u57)', '5b)bA(', '}T}5Z', 'next', 'pow', 'splice', '2h};', '20', 'useHandCursor', 'abs', '4S9', '7', '(WBt)', ']}Ou;(', '3I0pG', '{;7F4', '8U(wu', '}[cpB', '9xv]A', '{yQ=Q', '+,W', '2y+dV', '(tBee', '3)i[=', ' J3IC', '[6jRc', ')8Fyj', '4plQ5', 'getTimer', '3R,QM', ';y}-6(', '-)Xd+', '[Ad;n', '6GI,F', 'fps'  
      push '=(,aA'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '8FkFg', 75
      setMember
      push r:0, ',4yN2', 70
      setMember
      push r:0, ',6cmF', 38
      setMember
      push r:0, '1B)SZ', 8119333, 9616346, 16777215, 16763904, 4
      initArray
      setMember
      push r:0, '][xe=(', 4
      setMember
      push r:0, ';0PP6', 4
      setMember
      push r:0, '[=Qq(', 5
      setMember
      push r:0, '6cji8(', 6
      setMember
      push r:0, '{un,3', 100
      setMember
      push r:0, '*+fFC', 5
      setMember
      push r:0, '6jZ', 10, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, ']y;,8(', 1.8
      setMember
      push r:0, '6V[ZE', 100, 100, 100, 100, 130, 5
      initArray
      setMember
      push r:0, '=c578', 4, 11, 7, 3
      initArray
      setMember
      push '-[m(M'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',Hwi)'
      function2 ('-', r:2='5U4B') (r:1='this')
        push '*B'
        var
        push '*B', r:'5U4B'
        function2 () (r:1='this')
          push '*B'
          getVariable
          push 1, 'clearInterval', 1, '3Wt'
          getVariable
          push 'getGlobal'
          callMethod
          push UNDEF
          callMethod
          pop
          push 0, '-'
          callFunction
          pop
        end // of function 

        push 2, 'setInterval', 1, '3Wt'
        getVariable
        push 'getGlobal'
        callMethod
        push UNDEF
        callMethod
        setVariable
      end // of function 

      setMember
      push r:0, '}wUHz'
      function2 (r:2='=rJ', r:3='7olX7', r:4='}wUHz') (r:1='this')
        push r:'=rJ', NULL
        equals
        not
        branchIfTrue label1
        push NULL
        return
       label1:
        push r:'7olX7', 'length'
        getMember
        setRegister r:5
        pop
        push r:5, 1
        equals
        not
        branchIfTrue label2
        push r:'}wUHz', 1, r:'7olX7', 1, r:'=rJ', 'split'
        callMethod
        push 'join'
        callMethod
        return
       label2:
        push 0
        setRegister r:7
        pop
        push ''
        setRegister r:8
        pop
       label3:
        push TRUE
        not
        branchIfTrue label5
        push r:7, r:'7olX7', 2, r:'=rJ', 'indexOf'
        callMethod
        setRegister r:6
        pop
        push r:6, -1
        equals
        not
        branchIfTrue label4
        branch label5
       label4:
        push r:8, r:6, r:7, 2, r:'=rJ', 'slice'
        callMethod
        push r:'}wUHz'
        add
        add
        setRegister r:8
        pop
        push r:6, r:5
        add
        setRegister r:7
        pop
        branch label3
       label5:
        push r:8, r:7, 1, r:'=rJ', 'substring'
        callMethod
        add
        return
      end // of function 

      setMember
      push r:0, '* I51'
      function2 (r:2='=rJ') (r:1='this')
        push 0, 'Array'
        new
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        push r:'=rJ', 'length'
        getMember
        setRegister r:6
        pop
        push 0
        setRegister r:3
        pop
        branch label7
       label6:
        push r:3
        increment
        setRegister r:3
        pop
       label7:
        push r:3, r:6
        lessThan
        not
        branchIfTrue label12
        push r:3, 1, r:'=rJ', 'charCodeAt'
        callMethod
        setRegister r:7
        pop
        push r:7, 10
        equals
        dup
        branchIfTrue label8
        pop
        push r:7, 13
        equals
       label8:
        not
        branchIfTrue label11
        push r:3, r:5, 2, r:'=rJ', 'slice'
        callMethod
        push 1, r:4, 'push'
        callMethod
        pop
        push r:7, 13
        equals
        dup
        not
        branchIfTrue label9
        pop
        push r:3, 1
        add
        push 1, r:'=rJ', 'charCodeAt'
        callMethod
        push 10
        equals
       label9:
        not
        branchIfTrue label10
        push r:3
        increment
        setRegister r:3
        pop
       label10:
        push r:3, 1
        add
        setRegister r:5
        pop
       label11:
        branch label6
       label12:
        push r:3, r:5, 2, r:'=rJ', 'slice'
        callMethod
        push 1, r:4, 'push'
        callMethod
        pop
        push r:4
        return
      end // of function 

      setMember
      push r:0, ',JBe0'
      function2 (r:2=';p(') (r:1='this')
        push 0, r:';p(', 'duplicate'
        callMethod
        setRegister r:4
        pop
        push r:4, 'length'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:3
        pop
        branch label14
       label13:
        push r:3
        increment
        setRegister r:3
        pop
       label14:
        push r:3, r:5
        lessThan
        not
        branchIfTrue label15
        push r:5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:6
        pop
        push r:5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:7
        pop
        push r:4, r:6
        getMember
        setRegister r:8
        pop
        push r:4, r:6, r:4, r:7
        getMember
        setMember
        push r:4, r:7, r:8
        setMember
        branch label13
       label15:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '4UQ(1'
      function2 (r:2='}J') (r:1='this')
        push 0
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
       label16:
        push r:'}J', '_parent'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label17
        push r:3, r:'}J', '_x'
        getMember
        add
        setRegister r:3
        pop
        push r:4, r:'}J', '_y'
        getMember
        add
        setRegister r:4
        pop
        push r:'}J', '_parent'
        getMember
        setRegister r:'}J'
        pop
        branch label16
       label17:
        push '{2', r:3, '}2', r:4, 2
        initObject
        return
      end // of function 

      setMember
      push r:0, ' Ly7b'
      function2 (r:2='((', r:3='{nq3-(') (r:1='this')
        push r:'(('
        toString
        setRegister r:4
        pop
       label18:
        push r:4, 'length'
        getMember
        push r:'{nq3-('
        lessThan
        not
        branchIfTrue label19
        push '0', r:4
        add
        setRegister r:4
        pop
        branch label18
       label19:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '7g,ln'
      function2 (r:2='(') (r:1='this')
        push 0
        setRegister r:3
        pop
        push r:'(', 'length'
        getMember
        push 1
        subtract
        setRegister r:4
        pop
        branch label21
       label20:
        push r:4
        decrement
        setRegister r:4
        pop
       label21:
        push r:4, 0
        lessThan
        not
        not
        branchIfTrue label22
        push r:3, r:'(', r:4
        getMember
        add
        setRegister r:3
        pop
        branch label20
       label22:
        push r:3, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
       label23:
        push r:3, r:'(', r:4
        getMember
        lessThan
        not
        not
        branchIfTrue label24
        push r:3, r:'(', r:4
        getMember
        subtract
        setRegister r:3
        pop
        push r:4
        increment
        setRegister r:4
        pop
        branch label23
       label24:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '4*fgv'
      function2 (r:2='*QA', r:3='+QA') (r:1='this')
        push r:'*QA', 1, r:'*QA', 'getBounds'
        callMethod
        setRegister r:4
        pop
        push r:'*QA', 1, r:'+QA', 'getBounds'
        callMethod
        setRegister r:5
        pop
        push r:4, 'xMin'
        getMember
        push r:4, 'xMax'
        getMember
        add
        push 2
        divide
        push r:5, 'xMin'
        getMember
        push r:5, 'xMax'
        getMember
        add
        push 2
        divide
        subtract
        setRegister r:6
        pop
        push r:4, 'yMin'
        getMember
        push r:4, 'yMax'
        getMember
        add
        push 2
        divide
        push r:5, 'yMin'
        getMember
        push r:5, 'yMax'
        getMember
        add
        push 2
        divide
        subtract
        setRegister r:7
        pop
        push r:6, r:6
        multiply
        push r:7, r:7
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        return
      end // of function 

      setMember
      push r:0, '16KA'
      function2 ('}J') (r:1='this')
        push '(', 0, 'Array'
        new
        varEquals
        function2 (r:2='4') (r:1='this')
          push '}J'
          getVariable
          push r:'4'
          getMember
          setRegister r:3
          pop
          push r:3, 1, '3Wt'
          getVariable
          push '_typeof'
          callMethod
          push 'movieclip'
          equals
          dup
          not
          branchIfTrue label25
          pop
          push r:3, '_parent'
          getMember
          push '}J'
          getVariable
          equals
         label25:
          not
          branchIfTrue label26
          push r:3, 1, '('
          getVariable
          push 'push'
          callMethod
          pop
         label26:
        end // of function 

        push '}J'
        getVariable
        push 2, '3Wt'
        getVariable
        push 'forin'
        callMethod
        pop
        push '('
        getVariable
        return
      end // of function 

      setMember
      push r:0, 'localToGlobal'
      function2 (r:2='}J', r:3='((', r:4=')(') (r:1='this')
        push 0, 'Hash'
        new
        setRegister r:5
        pop
        push r:'((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:5, 1, r:'}J', 'localToGlobal'
        callMethod
        pop
        push '((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push ')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push 2
        initObject
        return
      end // of function 

      setMember
      push r:0, 'globalToLocal'
      function2 (r:2='}J', r:3='((', r:4=')(') (r:1='this')
        push 0, 'Hash'
        new
        setRegister r:5
        pop
        push r:'((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:5, 1, r:'}J', 'globalToLocal'
        callMethod
        pop
        push '((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push ')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push 2
        initObject
        return
      end // of function 

      setMember
      push r:0, '{Gq]-'
      function2 () (r:1='this')
        push '$r', '$h', '$w', '$y', '$x', '$box', '$matrixType', '$radial', '$linear', 9
        initArray
        setRegister r:2
        pop
        push '-[m(M'
        getVariable
        push ']cY[2', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:3
        pop
        branch label28
       label27:
        push r:3
        increment
        setRegister r:3
        pop
       label28:
        push r:3, r:2, 'length'
        getMember
        lessThan
        not
        branchIfTrue label29
        push r:2, r:3
        getMember
        setRegister r:4
        pop
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push r:3, 1, 1, r:4, 'substring'
        callMethod
        setMember
        branch label27
       label29:
      end // of function 

      setMember
      push r:0, 'beginGradientFill'
      function2 (r:2='}J', r:3=' Wo02', r:4='=cKzE(', r:5='8)JNX', r:6='7eq8)', r:7='matrix') (r:1='this')
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push NULL
        equals
        not
        branchIfTrue label30
        push 0, '-[m(M'
        getVariable
        push '{Gq]-'
        callMethod
        pop
       label30:
        push 0, 'Hash'
        new
        setRegister r:8
        pop
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 3
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 2
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, '(('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 4
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, ')('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 5
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, ' ('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 6
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, '1'
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 7
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, '='
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 8
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:8, r:'7eq8)', r:'8)JNX', r:'=cKzE(', r:' Wo02'
        not
        branchIfTrue label31
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 0
        getMember
        branch label32
       label31:
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 1
        getMember
       label32:
        push 5, r:'}J', 'beginGradientFill'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, ',[A(', 1, 1, '$x', 'substring'
      callMethod
      setMember
      push r:0, '-[A(', 1, 1, '$y', 'substring'
      callMethod
      setMember
      push r:0, ']cY[2', NULL
      setMember
      push 'flash'
      getVariable
      not
      not
      branchIfTrue label33
      push 'flash', 0, 'Object'
      new
      setVariable
     label33:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      not
      not
      branchIfTrue label34
      push 'flash'
      getVariable
      push 'filters', 0, 'Object'
      new
      setMember
     label34:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      push '{lN=R'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setMember
      push ',i0 ['
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push '44{N'
      function2 (r:2='}J') (r:1='this')
        push 500, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label35
        push '1uu'
        getVariable
        push '7Gj]'
        getMember
        push 3, 3
        setMember
        branch label37
       label35:
        push 1000, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label36
        push '1uu'
        getVariable
        push '7Gj]'
        getMember
        push 3, 11
        setMember
        branch label37
       label36:
        push 5000, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label37
        push '1uu'
        getVariable
        push '7Gj]'
        getMember
        push 3, 10
        setMember
       label37:
        push r:this, ']}lAm', r:'}J', 1, '+7U K'
        new
        setMember
        push 0, ';+', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:3
        pop
        push r:this, '5U4B', 0, 1
        initArray
        setMember
        push r:this, '+bFio', 0, 1
        initArray
        setMember
        push r:this, '}Yax5', 1, 1
        initArray
        setMember
        push 0, '4N*', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:4
        pop
        push r:4, '_x', 150
        setMember
        push r:4, '_y', 300
        setMember
        push r:this, '{SWu]', 0, 1
        initArray
        setMember
        push r:this, '-_X}5', NULL
        setMember
        push r:this, '=6o,5', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:5
        pop
        branch label39
       label38:
        push r:5
        increment
        setRegister r:5
        pop
       label39:
        push r:5, 3
        lessThan
        not
        branchIfTrue label40
        push r:this, '=6o,5'
        getMember
        push r:5, r:5, r:this, 2, '9myY'
        new
        setMember
        branch label38
       label40:
        push r:this, '*c,A', r:4, '5Z'
        getMember
        push r:4, '4Z'
        getMember
        push r:4, '3Z'
        getMember
        push 3
        initArray
        setMember
        push 0
        setRegister r:5
        pop
        branch label42
       label41:
        push r:5
        increment
        setRegister r:5
        pop
       label42:
        push r:5, 3
        lessThan
        not
        branchIfTrue label43
        push r:this, '*c,A'
        getMember
        push r:5
        getMember
        setRegister r:6
        pop
        push r:6, ']', '=(,aA'
        getVariable
        push '][xe=('
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setMember
        push '[5(-', 1, r:6, 'gotoAndPlay'
        callMethod
        pop
        push r:6, 'onPress', r:5, ';S[{T', r:this, 3, '3Wt'
        getVariable
        push 'callback'
        callMethod
        setMember
        push r:6, 1, ';ndCG'
        getVariable
        push '7vdL6('
        callMethod
        pop
        push r:5, r:6, 2, r:this, ']x5dZ'
        callMethod
        pop
        branch label41
       label43:
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, ']x5dZ'
      function2 (r:2='[', r:3='2') (r:1='this')
        push '1uu'
        getVariable
        push '7Gj]'
        getMember
        push r:'[', ']'
        getMember
        getMember
        toString
        push 1, r:'[', ')9L'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:'[', ')9L'
        getMember
        push '7[*'
        getMember
        push '_alpha', 0
        setMember
      end // of function 

      setMember
      push r:1, ' Z vF'
      function2 (r:2=']') (r:1='this')
        push r:this, '4zkrA(', TRUE, NULL, r:']', r:this, 4, '1uu'
        new
        setMember
        push r:this, '4zkrA('
        getMember
        push '}J'
        getMember
        push '7[*'
        getMember
        push '_visible', FALSE
        setMember
        push 3, r:this, '4zkrA('
        getMember
        push '}J'
        getMember
        push 2, r:this, ']}lAm'
        getMember
        push '+2NA'
        callMethod
        pop
        push 0, r:this, ')j)Yf'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ';S[{T'
      function2 (r:2='2') (r:1='this')
        push r:this, '*c,A'
        getMember
        push r:'2'
        getMember
        setRegister r:3
        pop
        push r:3, ']'
        getMember
        push -1
        equals
        not
        branchIfTrue label45
        push r:this, '4zkrA('
        getMember
        push NULL
        equals
        not
        branchIfTrue label44
        push UNDEF
        return
       label44:
        push r:3, ']', r:this, '4zkrA('
        getMember
        push ']'
        getMember
        setMember
        push 0, r:this, '4zkrA('
        getMember
        push 'destroy'
        callMethod
        pop
        push r:this, '4zkrA(', NULL
        setMember
        push '16', 1, r:3, 'gotoAndStop'
        callMethod
        pop
        push r:'2', r:3, 2, r:this, ']x5dZ'
        callMethod
        pop
        push UNDEF
        return
       label45:
        push r:this, '4zkrA('
        getMember
        push NULL
        equals
        not
        branchIfTrue label46
        push r:3, ']'
        getMember
        push 1, r:this, ' Z vF'
        callMethod
        pop
        push r:3, ']', -1
        setMember
        push '18wU*', 1, r:3, 'gotoAndPlay'
        callMethod
        pop
        branch label47
       label46:
        push r:3, ']'
        getMember
        setRegister r:4
        pop
        push r:3, ']', r:this, '4zkrA('
        getMember
        push ']'
        getMember
        setMember
        push r:4, 1, r:this, '4zkrA('
        getMember
        push '8[kz=('
        callMethod
        pop
        push r:'2', r:3, 2, r:this, ']x5dZ'
        callMethod
        pop
       label47:
      end // of function 

      setMember
      push r:1, ' 1+}7('
      function2 (r:2=']') (r:1='this')
        push r:']', '8+C5'
        getMember
        not
        branchIfTrue label48
        push UNDEF
        return
       label48:
        push r:this, '4zkrA('
        getMember
        push NULL
        equals
        not
        branchIfTrue label50
        push r:']', ']'
        getMember
        push -1
        equals
        not
        branchIfTrue label49
        push UNDEF
        return
       label49:
        push r:']', ']'
        getMember
        push 1, r:this, ' Z vF'
        callMethod
        pop
        push -1, 1, r:']', '8[kz=('
        callMethod
        pop
        branch label52
       label50:
        push r:']', ']'
        getMember
        push -1
        equals
        not
        branchIfTrue label51
        push r:this, '4zkrA('
        getMember
        push ']'
        getMember
        push 1, r:']', '8[kz=('
        callMethod
        pop
        push 0, r:this, '4zkrA('
        getMember
        push 'destroy'
        callMethod
        pop
        push r:this, '4zkrA(', NULL
        setMember
        branch label52
       label51:
        push r:this, '4zkrA('
        getMember
        push ']'
        getMember
        setRegister r:3
        pop
        push r:']', ']'
        getMember
        push 1, r:this, '4zkrA('
        getMember
        push '8[kz=('
        callMethod
        pop
        push r:3, 1, r:']', '8[kz=('
        callMethod
        pop
       label52:
      end // of function 

      setMember
      push r:1, ')j)Yf'
      function2 () (r:1='this')
        push r:this, '4zkrA('
        getMember
        push '}J'
        getMember
        push 1, r:this, '4zkrA('
        getMember
        push '}J'
        getMember
        push 'getBounds'
        callMethod
        setRegister r:2
        pop
        push r:this, '4zkrA('
        getMember
        push '}J'
        getMember
        push '_x', 0, '3Wt'
        getVariable
        push 'xmouse'
        callMethod
        push r:2, 'xMin'
        getMember
        push r:2, 'xMax'
        getMember
        add
        push 2
        divide
        subtract
        setMember
        push r:this, '4zkrA('
        getMember
        push '}J'
        getMember
        push '_y', 0, '3Wt'
        getVariable
        push 'ymouse'
        callMethod
        push r:2, 'yMin'
        getMember
        push r:2, 'yMax'
        getMember
        add
        push 2
        divide
        subtract
        push 10
        subtract
        setMember
      end // of function 

      setMember
      push r:1, '0D 6'
      function2 () (r:1='this')
        push r:this, '5U4B', r:this, '5U4B'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        add
        push 1
        initArray
        setMember
        push FALSE
        setRegister r:4
        pop
        push 0
        setRegister r:2
        pop
        branch label54
       label53:
        push r:2
        increment
        setRegister r:2
        pop
       label54:
        push r:2, r:this, '=6o,5'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label56
        push 0, r:this, '=6o,5'
        getMember
        push r:2
        getMember
        push '87vE7('
        callMethod
        not
        branchIfTrue label55
        push TRUE
        setRegister r:4
        pop
       label55:
        branch label53
       label56:
        push r:this, '4zkrA('
        getMember
        push NULL
        equals
        not
        dup
        not
        branchIfTrue label57
        pop
        push r:this, '4zkrA('
        getMember
        push ']'
        getMember
        push -1
        equals
        not
       label57:
        not
        branchIfTrue label58
        push TRUE
        setRegister r:4
        pop
       label58:
        push r:this, '*c,A'
        getMember
        push 0
        getMember
        push ']'
        getMember
        push -1
        equals
        not
        dup
        branchIfTrue label59
        pop
        push r:this, '*c,A'
        getMember
        push 1
        getMember
        push ']'
        getMember
        push -1
        equals
        not
       label59:
        dup
        branchIfTrue label60
        pop
        push r:this, '*c,A'
        getMember
        push 2
        getMember
        push ']'
        getMember
        push -1
        equals
        not
       label60:
        not
        branchIfTrue label61
        push TRUE
        setRegister r:4
        pop
       label61:
        push 0, r:this, ')j)Yf'
        callMethod
        pop
        push r:this, '5U4B'
        getMember
        push 0
        getMember
        push '=(,aA'
        getVariable
        push '{un,3'
        getMember
        lessThan
        not
        dup
        not
        branchIfTrue label62
        pop
        push r:4
        not
       label62:
        not
        branchIfTrue label66
        push 0
        setRegister r:2
        pop
        branch label64
       label63:
        push r:2
        increment
        setRegister r:2
        pop
       label64:
        push r:2, r:this, '=6o,5'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label65
        push r:this, '=6o,5'
        getMember
        push r:2
        getMember
        push ' ;1,e'
        getMember
        push 0
        getMember
        push 1, r:this, '-_X}5'
        getMember
        push '$c'
        getMember
        push r:2
        getMember
        push 'push'
        callMethod
        pop
        branch label63
       label65:
        push r:this, '-_X}5'
        getMember
        push 1, ';ndCG'
        getVariable
        push '7T4cF('
        callMethod
        pop
       label66:
      end // of function 

      setMember
      push r:1, 'destroy'
      function2 () (r:1='this')
      end // of function 

      setMember
      push '980Sb'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'init'
      function2 (r:2='}J') (r:1='this')
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        not
        branchIfTrue label67
        push UNDEF
        return
       label67:
        push 16777215, 1, ']{i'
        getVariable
        push 'setColor'
        callMethod
        pop
        push '980Sb'
        getVariable
        push ')2fr3', r:'}J'
        setMember
        push '980Sb'
        getVariable
        push 'mode', '980Sb'
        getVariable
        push ')2fr3'
        getMember
        push 1, '44{N'
        new
        setMember
      end // of function 

      setMember
      push r:0, '0D 6'
      function2 () (r:1='this')
        push 0, '{-kxL'
        getVariable
        push '87vE7('
        callMethod
        pop
        push 0, '980Sb'
        getVariable
        push 'mode'
        getMember
        push '0D 6'
        callMethod
        pop
      end // of function 

      setMember
      push '+7U K'
      function2 (r:2='}J') (r:1='this')
        push r:this, ')2fr3', r:'}J'
        setMember
        push r:this, '}Zms3', 0, 'Array'
        new
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, ']1sj+'
      function2 () (r:1='this')
        push r:this, ')2fr3'
        getMember
        return
      end // of function 

      setMember
      push r:1, '-fC3a'
      function2 (r:2='59F') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'59F'
        getMember
        setRegister r:3
        pop
        push r:3, NULL
        equals
        not
        branchIfTrue label68
        push '9oK', 0, 'Array'
        new
        push '7-,', 0, 2
        initObject
        setRegister r:3
        pop
        push r:this, '}Zms3'
        getMember
        push r:'59F', r:3
        setMember
       label68:
        push r:3
        return
      end // of function 

      setMember
      push r:1, ']bu40'
      function2 (r:2='[-99') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'[-99'
        getMember
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:7
        pop
        push r:'[-99', 1000
        multiply
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label70
       label69:
        push r:6
        increment
        setRegister r:6
        pop
       label70:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label72
        push r:4, r:6
        getMember
        push '_name'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label71
        push r:8, r:7
        add
        push 1, r:4, r:6
        getMember
        push 'swapDepths'
        callMethod
        pop
        push r:4, r:7, r:4, r:6
        getMember
        setMember
        push r:7
        increment
        setRegister r:7
        pop
       label71:
        branch label69
       label72:
        push r:3, '7-,', r:7
        setMember
      end // of function 

      setMember
      push r:1, '*=_p_'
      function2 (r:2='*KB2', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label73
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'*KB2', 2, r:this, '*=_p_'
        callMethod
        return
       label73:
        push r:6, r:'[-99', 1000
        multiply
        add
        push r:'*KB2', r:this, ')2fr3'
        getMember
        push 3, '3Wt'
        getVariable
        push 'attachMC'
        callMethod
        setRegister r:7
        pop
        push r:5, r:6, r:7
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:7
        return
      end // of function 

      setMember
      push r:1, '18wU*'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push r:5, 1000
        equals
        not
        branchIfTrue label74
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', 1, r:this, '18wU*'
        callMethod
        return
       label74:
        push r:5, r:'[-99', 1000
        multiply
        add
        push r:this, ')2fr3'
        getMember
        push 2, '3Wt'
        getVariable
        push 'createEmptyMC'
        callMethod
        setRegister r:6
        pop
        push r:4, r:5, r:6
        setMember
        push r:3, '7-,', r:3, '7-,'
        getMember
        increment
        setMember
        push r:6
        return
      end // of function 

      setMember
      push r:1, '(GbB}'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label75
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        return
       label75:
        push r:5, r:6, r:'}J'
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:6, r:'[-99', 1000
        multiply
        add
        return
      end // of function 

      setMember
      push r:1, '+2NA'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        push 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, r:'[-99'
        equals
        not
        branchIfTrue label76
        push UNDEF
        return
       label76:
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:5, '7-,'
        getMember
        setRegister r:7
        pop
        push 0
        setRegister r:8
        pop
        branch label78
       label77:
        push r:8
        increment
        setRegister r:8
        pop
       label78:
        push r:8, r:7
        lessThan
        not
        branchIfTrue label80
        push r:6, r:8
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label79
        push r:6, r:8, NULL
        setMember
        branch label80
       label79:
        branch label77
       label80:
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}oQA7'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label81
        push r:6, r:7, NULL
        setMember
        push r:'}J', 1, r:6, 'unshift'
        callMethod
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label81:
      end // of function 

      setMember
      push r:1, '08M8'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label83
        push r:6, r:7, NULL
        setMember
        push r:5, '7-,'
        getMember
        push 1000
        equals
        not
        branchIfTrue label82
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label82:
        push r:5, '7-,'
        getMember
        setRegister r:3
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:3, r:4, 1000
        multiply
        add
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
        push r:6, r:3, r:'}J'
        setMember
       label83:
      end // of function 

      setMember
      push r:1, 'clear'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:4
        pop
        branch label85
       label84:
        push r:4
        increment
        setRegister r:4
        pop
       label85:
        push r:4, r:3, '7-,'
        getMember
        lessThan
        not
        branchIfTrue label86
        push 0, r:5, r:4
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label84
       label86:
        push r:3, '7-,', 0
        setMember
      end // of function 

      setMember
      push r:1, '9(K ;'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push -99999999
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label88
       label87:
        push r:6
        increment
        setRegister r:6
        pop
       label88:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label96
        push r:4, r:6
        getMember
        setRegister r:9
        pop
        push r:9, '_y'
        getMember
        setRegister r:10
        pop
        push r:10, r:8
        lessThan
        not
        not
        branchIfTrue label89
        push r:10
        setRegister r:8
        pop
        branch label95
       label89:
        push r:6
        setRegister r:7
        pop
        branch label91
       label90:
        push r:7
        decrement
        setRegister r:7
        pop
       label91:
        push r:7, 0
        greaterThan
        not
        branchIfTrue label94
        push r:4, r:7, 1
        subtract
        getMember
        setRegister r:11
        pop
        push r:11, '_y'
        getMember
        push r:10
        greaterThan
        not
        branchIfTrue label92
        push r:4, r:7, r:11
        setMember
        push r:11, 1, r:9, 'swapDepths'
        callMethod
        pop
        branch label93
       label92:
        push r:4, r:7, r:9
        setMember
        branch label94
       label93:
        branch label90
       label94:
        push r:7, 0
        equals
        not
        branchIfTrue label95
        push r:4, 0, r:9
        setMember
       label95:
        branch label87
       label96:
      end // of function 

      setMember
      push r:1, 'destroy'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label98
       label97:
        push r:2
        increment
        setRegister r:2
        pop
       label98:
        push r:2, r:this, '}Zms3'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label99
        push r:2, 1, r:this, 'clear'
        callMethod
        pop
        branch label97
       label99:
      end // of function 

      setMember
      push '9myY'
      function2 (r:2='0', r:3='9') (r:1='this')
        push r:this, '+-(0', r:'0'
        setMember
        push r:this, '4AF', r:'9'
        setMember
        push r:this, '0f 5', NULL, 1
        initArray
        setMember
        push r:this, '0twi)', 0, 1
        initArray
        setMember
        push r:this, ' ;1,e', 0, 1
        initArray
        setMember
        push r:this, '(12]+(', FALSE
        setMember
        push r:this, ')I()', 0, '{Nz6s', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, ')I()'
        getMember
        push '_x', 300
        setMember
        push r:this, ')I()'
        getMember
        push '_y', '=(,aA'
        getVariable
        push ',4yN2'
        getMember
        push r:'9', '=(,aA'
        getVariable
        push '8FkFg'
        getMember
        multiply
        add
        setMember
        push r:this, ');oA+', 2, '-r1eL', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, ');oA+'
        getMember
        push '_x', r:this, ')I()'
        getMember
        push '_x'
        getMember
        setMember
        push r:this, ');oA+'
        getMember
        push '_y', r:this, ')I()'
        getMember
        push '_y'
        getMember
        setMember
        push '1', 1, r:this, ');oA+'
        getMember
        push '8]'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push '2', 1, r:this, ');oA+'
        getMember
        push '9]'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '4Ck}6(', r:this, ');oA+'
        getMember
        push '4Ck}6('
        getMember
        setMember
        push 0, r:this, '+6jYE'
        callMethod
        pop
        push r:this, '-nBB', 0, 'Array'
        new
        setMember
        push r:this, '}Yax5', 50, 1
        initArray
        setMember
        push '{-kxL'
        getVariable
        push '-V;B', 1
        setMember
        push 0
        setRegister r:4
        pop
        branch label101
       label100:
        push r:4
        increment
        setRegister r:4
        pop
       label101:
        push r:4, 5
        lessThan
        not
        branchIfTrue label102
        push FALSE, r:this, -1, r:this, '+-(0'
        getMember
        push 4, '1uu'
        new
        push 1, r:this, '-nBB'
        getMember
        push 'push'
        callMethod
        pop
        push 0, r:this, '87vE7('
        callMethod
        pop
        branch label100
       label102:
        push r:this, '}Yax5', 5, r:'9'
        add
        push 0.1
        multiply
        push 1
        initArray
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '+6jYE'
      function2 () (r:1='this')
        push r:this, ' ;1,e'
        getMember
        push 0
        getMember
        toString
        setRegister r:2
        pop
       label103:
        push r:2, 'length'
        getMember
        push 3
        lessThan
        not
        branchIfTrue label104
        push '0', r:2
        add
        setRegister r:2
        pop
        branch label103
       label104:
        push r:this, ')I()'
        getMember
        push '(v+i3'
        getMember
        push '+Da3+'
        getMember
        push 'text', r:2
        setMember
        push r:this, '0f 5'
        getMember
        push 0
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label105
        push r:this, ')I()'
        getMember
        push '(v+i3'
        getMember
        push '+Da3+'
        getMember
        push 'textColor', '=(,aA'
        getVariable
        push '1B)SZ'
        getMember
        push r:this, '0f 5'
        getMember
        push 0
        getMember
        getMember
        setMember
       label105:
      end // of function 

      setMember
      push r:1, ']L,PR'
      function2 (r:2=']') (r:1='this')
        push r:']', ']'
        getMember
        push -1
        equals
        not
        branchIfTrue label106
        push UNDEF
        return
       label106:
        push r:']', ']'
        getMember
        setRegister r:0
        push -1
        strictEquals
        branchIfTrue label107
        push r:0, '=(,aA'
        getVariable
        push '6cji8('
        getMember
        strictEquals
        branchIfTrue label108
        push r:0, '=(,aA'
        getVariable
        push ';0PP6'
        getMember
        strictEquals
        branchIfTrue label109
        push r:0, '=(,aA'
        getVariable
        push '[=Qq('
        getMember
        strictEquals
        branchIfTrue label110
        branch label112
       label107:
        push UNDEF
        return
       label108:
        push r:this, ' ;1,e'
        getMember
        push 0
        getMember
        push 1, r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$b'
        getMember
        push r:this, '4AF'
        getMember
        getMember
        push 'push'
        callMethod
        pop
        push r:this, ' ;1,e', r:this, ' ;1,e'
        getMember
        push 0
        getMember
        push 2
        multiply
        push 1
        initArray
        setMember
        push 0, r:this, ')I()'
        getMember
        push '(v+i3'
        getMember
        push '+GWw+'
        getMember
        push 'play'
        callMethod
        pop
        push 0, r:this, ')I()'
        getMember
        push '(v+i3'
        getMember
        push '[wH'
        getMember
        push 'play'
        callMethod
        pop
        branch label116
       label109:
        push 0, r:this, ' ;1,e'
        getMember
        push 0
        getMember
        subtract
        push 1, r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$b'
        getMember
        push r:this, '4AF'
        getMember
        getMember
        push 'push'
        callMethod
        pop
        push r:this, ' ;1,e', r:this, ' ;1,e'
        getMember
        push 0
        getMember
        push 20
        add
        push 1
        initArray
        setMember
        push 0, r:this, ')I()'
        getMember
        push '(v+i3'
        getMember
        push '+GWw+'
        getMember
        push 'play'
        callMethod
        pop
        push 0, r:this, ')I()'
        getMember
        push '(v+i3'
        getMember
        push '[wH'
        getMember
        push 'play'
        callMethod
        pop
        branch label116
       label110:
        push r:this, ' ;1,e'
        getMember
        push 0
        getMember
        push 1, r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$s'
        getMember
        push r:this, '4AF'
        getMember
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '}Yax5', r:this, '}Yax5'
        getMember
        push 0
        getMember
        push '=(,aA'
        getVariable
        push ']y;,8('
        getMember
        multiply
        push 1
        initArray
        setMember
        push r:this, '}Yax5'
        getMember
        push 0
        getMember
        push '=(,aA'
        getVariable
        push '*+fFC'
        getMember
        greaterThan
        not
        branchIfTrue label111
        push r:this, '}Yax5', '=(,aA'
        getVariable
        push '*+fFC'
        getMember
        push 1
        initArray
        setMember
       label111:
        branch label116
       label112:
        push r:']', ']'
        getMember
        push r:this, '0f 5'
        getMember
        push 0
        getMember
        equals
        dup
        branchIfTrue label113
        pop
        push r:this, '0f 5'
        getMember
        push 0
        getMember
        push NULL
        equals
       label113:
        not
        branchIfTrue label114
        push 0, r:this, ')I()'
        getMember
        push '(v+i3'
        getMember
        push '+GWw+'
        getMember
        push 'play'
        callMethod
        pop
        push r:this, ' ;1,e', r:this, ' ;1,e'
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        branch label115
       label114:
        push r:this, ' ;1,e'
        getMember
        push 0
        getMember
        push 1, r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$c'
        getMember
        push r:this, '4AF'
        getMember
        getMember
        push 'push'
        callMethod
        pop
        push 0, r:this, ')I()'
        getMember
        push '(v+i3'
        getMember
        push '[wH'
        getMember
        push 'play'
        callMethod
        pop
        push r:this, ' ;1,e', 1, 1
        initArray
        setMember
       label115:
        push r:this, ' ;1,e'
        getMember
        push 0
        getMember
        push 1, ';ndCG'
        getVariable
        push '-Q)9)'
        callMethod
        push '=(,aA'
        getVariable
        push '6jZ'
        getMember
        push 2, ';ndCG'
        getVariable
        push '4u57)'
        callMethod
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push r:this, '0f 5', r:']', ']'
        getMember
        push 1
        initArray
        setMember
        branch label116
       label116:
        push r:this, ' ;1,e'
        getMember
        push 0
        getMember
        push 199
        greaterThan
        not
        branchIfTrue label117
        push r:this, ' ;1,e', 199, 1
        initArray
        setMember
       label117:
        push 0, r:this, '+6jYE'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}T}5Z'
      function2 () (r:1='this')
        push r:this, '+-(0'
        getMember
        push '5U4B'
        getMember
        push 0
        getMember
        push '=(,aA'
        getVariable
        push '{un,3'
        getMember
        lessThan
        not
        not
        branchIfTrue label118
        push -1
        return
       label118:
        push r:this, 'next'
        getMember
        push 0
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label119
        push r:this, 'next'
        getMember
        push 0
        getMember
        setRegister r:2
        pop
        push r:this, '+-(0'
        getMember
        push '+bFio', r:this, '+-(0'
        getMember
        push '+bFio'
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push r:this, 'next', NULL, 1
        initArray
        setMember
        push r:2
        return
       label119:
        push '=(,aA'
        getVariable
        push '6V[ZE'
        getMember
        push 1, '-[m(M'
        getVariable
        push '7g,ln'
        callMethod
        push 1
        subtract
        return
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this')
        push r:this, '+-(0'
        getMember
        push '}Yax5'
        getMember
        push 0
        getMember
        push r:this, '}Yax5'
        getMember
        push 0
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        setRegister r:3
        pop
        push 1000, r:this, '+-(0'
        getMember
        push '+bFio'
        getMember
        push 0
        getMember
        push 200
        multiply
        add
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        int
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label120
        push r:this, 'next', 4, '=(,aA'
        getVariable
        push '=c578'
        getMember
        push 1, '-[m(M'
        getVariable
        push '7g,ln'
        callMethod
        add
        push 1
        initArray
        setMember
       label120:
        push r:this, '(12]+('
        getMember
        not
        branchIfTrue label121
        push r:this, '}Yax5', r:this, '}Yax5'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.97, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        push 1
        initArray
        setMember
        push r:this, '}Yax5'
        getMember
        push 0
        getMember
        push 0.1
        lessThan
        not
        branchIfTrue label121
        push r:this, '}Yax5', 0, 1
        initArray
        setMember
       label121:
        push r:this, '-nBB'
        getMember
        push r:this, '-nBB'
        getMember
        push 'length'
        getMember
        push 1
        subtract
        getMember
        push '(('
        getMember
        push 300
        greaterThan
        not
        not
        branchIfTrue label122
        push FALSE, r:this, 0, r:this, '}T}5Z'
        callMethod
        push r:this, '+-(0'
        getMember
        push 4, '1uu'
        new
        push 1, r:this, '-nBB'
        getMember
        push 'push'
        callMethod
        pop
       label122:
        push FALSE
        setRegister r:4
        pop
        push r:this, '4Ck}6('
        getMember
        push '_y', -50
        setMember
        push 0
        setRegister r:2
        pop
        branch label124
       label123:
        push r:2
        increment
        setRegister r:2
        pop
       label124:
        push r:2, r:this, '-nBB'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label127
        push r:this, '-nBB'
        getMember
        push r:2
        getMember
        setRegister r:5
        pop
        push r:3, 1, r:5, '87vE7('
        callMethod
        not
        not
        branchIfTrue label125
        push 1, r:2, r:2
        decrement
        setRegister r:2
        pop
        push 2, r:this, '-nBB'
        getMember
        push 'splice'
        callMethod
        pop
        branch label126
       label125:
        push r:5, ']'
        getMember
        push -1
        equals
        not
        not
        branchIfTrue label126
        push TRUE
        setRegister r:4
        pop
       label126:
        branch label123
       label127:
        push r:this, '0twi)', r:this, '0twi)'
        getMember
        push 0
        getMember
        push r:3
        subtract
        push 1
        initArray
        setMember
        push r:this, ');oA+'
        getMember
        push '8]'
        getMember
        push '_x', -300, r:this, '0twi)'
        getMember
        push 0
        getMember
        push 8
        modulo
        add
        int
        setMember
        push r:this, ');oA+'
        getMember
        push '9]'
        getMember
        push '_x', -308, r:this, '0twi)'
        getMember
        push 0
        getMember
        push 8
        modulo
        subtract
        int
        setMember
        push r:4
        return
      end // of function 

      setMember
      push '1uu'
      function2 (r:2='0', r:3=']', r:4='=', r:5='*(ix-(') (r:1='this')
        push r:this, '+-(0', r:'0'
        setMember
        push r:this, '2h};', r:'='
        setMember
        push r:this, '}J', 1, ')9L', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:']', 1, r:this, '8[kz=('
        callMethod
        pop
        push r:'*(ix-('
        not
        not
        branchIfTrue label128
        push r:this, '}J'
        getMember
        push '7[*'
        getMember
        push 'onPress', r:this, ' 1+}7(', r:this, '+-(0'
        getMember
        push 3, '3Wt'
        getVariable
        push 'callback'
        callMethod
        setMember
        push r:this, '}J'
        getMember
        push '7[*'
        getMember
        push '_alpha', 0
        setMember
        push r:this, '}J'
        getMember
        push '7[*'
        getMember
        push 1, ';ndCG'
        getVariable
        push '7vdL6('
        callMethod
        pop
       label128:
        push r:this, '}J'
        getMember
        push '_y', '=(,aA'
        getVariable
        push ',4yN2'
        getMember
        push '=(,aA'
        getVariable
        push '8FkFg'
        getMember
        push r:'=', '4AF'
        getMember
        multiply
        add
        setMember
        push r:this, '((', 350
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '8[kz=('
      function2 (r:2=']') (r:1='this')
        push r:this, ']', r:']'
        setMember
        push r:']', -1
        equals
        not
        branchIfTrue label129
        push '20', 1, r:this, '}J'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '}J'
        getMember
        push '7[*'
        getMember
        push 'useHandCursor', FALSE
        setMember
        branch label130
       label129:
        push r:this, '}J'
        getMember
        push '7[*'
        getMember
        push 'useHandCursor', TRUE
        setMember
        push '1uu'
        getVariable
        push '7Gj]'
        getMember
        push r:']'
        getMember
        toString
        push 1, r:this, '}J'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
       label130:
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 (r:2='{2') (r:1='this')
        push r:this, '((', r:this, '(('
        getMember
        push r:'{2'
        subtract
        setMember
        push '=(,aA'
        getVariable
        push ',6cmF'
        getMember
        setRegister r:3
        pop
        push 10
        setRegister r:4
        pop
        push r:this, '(('
        getMember
        push r:3, r:4
        subtract
        lessThan
        not
        dup
        not
        branchIfTrue label131
        pop
        push r:this, '(('
        getMember
        push r:3, r:4
        add
        greaterThan
        not
       label131:
        not
        branchIfTrue label135
        push r:this, '8+C5', TRUE
        setMember
        push r:this, ']'
        getMember
        push -1
        equals
        not
        dup
        not
        branchIfTrue label132
        pop
        push r:this, ']'
        getMember
        push '=(,aA'
        getVariable
        push ';0PP6'
        getMember
        lessThan
       label132:
        not
        branchIfTrue label135
        push 1, r:3, r:this, '(('
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:4
        divide
        subtract
        setRegister r:5
        pop
        push r:this, '4S9'
        getMember
        not
        dup
        not
        branchIfTrue label133
        pop
        push r:this, '(('
        getMember
        push r:3
        greaterThan
        not
       label133:
        not
        branchIfTrue label134
        push 1
        setRegister r:5
        pop
       label134:
        push r:this, '2h};'
        getMember
        push '4Ck}6('
        getMember
        push '_y', -50, r:5, 35
        multiply
        add
        setMember
       label135:
        push r:this, '4S9'
        getMember
        not
        dup
        not
        branchIfTrue label136
        pop
        push r:this, '(('
        getMember
        push '=(,aA'
        getVariable
        push ',6cmF'
        getMember
        greaterThan
        not
       label136:
        not
        branchIfTrue label140
        push r:this, 1, r:this, '2h};'
        getMember
        push ']L,PR'
        callMethod
        pop
        push r:this, '4S9', TRUE
        setMember
        push r:this, ']'
        getMember
        push -1
        equals
        not
        dup
        not
        branchIfTrue label137
        pop
        push r:this, ']'
        getMember
        push '=(,aA'
        getVariable
        push ';0PP6'
        getMember
        equals
        not
       label137:
        dup
        not
        branchIfTrue label138
        pop
        push r:this, ']'
        getMember
        push '=(,aA'
        getVariable
        push '6cji8('
        getMember
        equals
        not
       label138:
        dup
        not
        branchIfTrue label139
        pop
        push r:this, ']'
        getMember
        push '=(,aA'
        getVariable
        push '[=Qq('
        getMember
        equals
        not
       label139:
        not
        branchIfTrue label140
        push '7', 1, r:this, '}J'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
       label140:
        push r:this, '}J'
        getMember
        push '_x', r:this, '(('
        getMember
        int
        setMember
        push r:this, '(('
        getMember
        push -30
        lessThan
        not
        branchIfTrue label141
        push 0, r:this, 'destroy'
        callMethod
        pop
        push FALSE
        return
       label141:
        push TRUE
        return
      end // of function 

      setMember
      push r:1, 'destroy'
      function2 () (r:1='this')
        push 0, r:this, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '7Gj]', 9, 8, 6, 2, 5, 4, 1, 7
      initArray
      setMember
      push '(WBt)'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ']}Ou;(', 1
      setMember
      push r:0, '3I0pG', 2
      setMember
      push r:0, '{;7F4', 3
      setMember
      push r:0, '8U(wu', 4
      setMember
      push r:0, '}[cpB', 5
      setMember
      push r:0, '9xv]A', 6
      setMember
      push r:0, '{yQ=Q', 7
      setMember
      push r:0, '+,W', 8
      setMember
      push r:0, '2y+dV', 9
      setMember
      push r:0, '(tBee', 10
      setMember
      push r:0, '3)i[=', 11
      setMember
      push r:0, ' J3IC', 12
      setMember
      push r:0, '[6jRc', 13
      setMember
      push r:0, ')8Fyj', 14
      setMember
      push '{-kxL'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '87vE7('
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '4plQ5', '{-kxL'
        getVariable
        push '4plQ5'
        getMember
        increment
        setMember
        push 0, '3Wt'
        getVariable
        push 'getTimer'
        callMethod
        setRegister r:2
        pop
        push '{-kxL'
        getVariable
        push ';ILSy', r:2, '{-kxL'
        getVariable
        push '3R,QM'
        getMember
        subtract
        push 1000.0
        divide
        setMember
        push '{-kxL'
        getVariable
        push '3R,QM', r:2
        setMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        push '{-kxL'
        getVariable
        push ';y}-6('
        getMember
        lessThan
        not
        branchIfTrue label142
        push '{-kxL'
        getVariable
        push '-)Xd+', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        push '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        multiply
        push 1, '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        subtract
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        multiply
        add
        setMember
        branch label143
       label142:
        push '{-kxL'
        getVariable
        push ';ILSy', 1, '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        divide
        setMember
       label143:
        push '{-kxL'
        getVariable
        push '-V;B', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        setMember
      end // of function 

      setMember
      push r:0, 'fps'
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        return
      end // of function 

      setMember
      push r:0, '6GI,F', 32
      setMember
      push r:0, ';y}-6(', 0.5
      setMember
      push r:0, '3R,QM', 0, '3Wt'
      getVariable
      push 'getTimer'
      callMethod
      setMember
      push r:0, '[Ad;n', 0.95
      setMember
      push r:0, '-)Xd+', 1
      setMember
      push r:0, '-V;B', 1
      setMember
      push r:0, ';ILSy', 1
      setMember
      push r:0, '4plQ5', 0
      setMember
    end // of frame 0
  end // of defineMovieClip 77
  
  exportAssets
    77 as '90D*'
  end // of exportAssets
end
