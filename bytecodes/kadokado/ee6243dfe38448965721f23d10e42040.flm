movie 'ee6243dfe38448965721f23d10e42040.swf' compressed // flash 8, total frames: 1, frame rate: 40 fps, 700x480 px


  defineMovieClip 3 // total frames: 2
  end // of defineMovieClip 3

  defineMovieClip 18 // total frames: 25
  end // of defineMovieClip 18

  defineMovieClip 27 // total frames: 1
  end // of defineMovieClip 27

  defineMovieClip 31 // total frames: 30
  end // of defineMovieClip 31

  defineMovieClip 33 // total frames: 1
  end // of defineMovieClip 33

  defineMovieClip 35 // total frames: 1
  end // of defineMovieClip 35

  defineMovieClip 37 // total frames: 30
  end // of defineMovieClip 37
  
  exportAssets
    37 as ',XnXA'
  end // of exportAssets

  defineMovieClip 38 // total frames: 4
  end // of defineMovieClip 38
  
  exportAssets
    38 as '(UCsj'
  end // of exportAssets

  defineMovieClip 40 // total frames: 1
  end // of defineMovieClip 40
  
  exportAssets
    40 as '8Xy2K'
  end // of exportAssets

  defineMovieClip 42 // total frames: 1
  end // of defineMovieClip 42
  
  exportAssets
    42 as ' )dtK('
  end // of exportAssets

  defineMovieClip 46 // total frames: 3
  end // of defineMovieClip 46
  
  exportAssets
    46 as '6mCFu'
  end // of exportAssets

  defineMovieClip 48 // total frames: 1
  end // of defineMovieClip 48
  
  exportAssets
    48 as '=MR4L('
  end // of exportAssets

  defineMovieClip 50 // total frames: 2

    frame 1
      push ''
      removeClip
    end // of frame 1
  end // of defineMovieClip 50
  
  exportAssets
    50 as ' G7]G('
  end // of exportAssets
  
  exportAssets
    50 as ' G7]G('
  end // of exportAssets
  
  exportAssets
    48 as '=MR4L('
  end // of exportAssets
  
  exportAssets
    46 as '6mCFu'
  end // of exportAssets
  
  exportAssets
    42 as ' )dtK('
  end // of exportAssets
  
  exportAssets
    40 as '8Xy2K'
  end // of exportAssets
  
  exportAssets
    38 as '(UCsj'
  end // of exportAssets
  
  exportAssets
    37 as ',XnXA'
  end // of exportAssets

  defineMovieClip 53 // total frames: 1
  end // of defineMovieClip 53
  
  exportAssets
    53 as '0o*6'
  end // of exportAssets
  
  exportAssets
    53 as '0o*6'
  end // of exportAssets

  defineMovieClip 61 // total frames: 8

    frame 7
      push ''
      removeClip
    end // of frame 7
  end // of defineMovieClip 61
  
  exportAssets
    61 as '(3Jr2'
  end // of exportAssets

  defineMovieClip 71 // total frames: 16
  end // of defineMovieClip 71
  
  exportAssets
    71 as '*937,('
  end // of exportAssets

  defineMovieClip 76 // total frames: 10
  end // of defineMovieClip 76

  defineMovieClip 77 // total frames: 4
  end // of defineMovieClip 77
  
  exportAssets
    77 as '2PG]D'
  end // of exportAssets

  defineMovieClip 79 // total frames: 1
  end // of defineMovieClip 79

  defineMovieClip 81 // total frames: 1
  end // of defineMovieClip 81

  defineMovieClip 83 // total frames: 1
  end // of defineMovieClip 83

  defineMovieClip 85 // total frames: 1
  end // of defineMovieClip 85

  defineMovieClip 94 // total frames: 5

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 94

  defineMovieClip 96 // total frames: 1
  end // of defineMovieClip 96

  defineMovieClip 98 // total frames: 1
  end // of defineMovieClip 98

  defineMovieClip 100 // total frames: 1
  end // of defineMovieClip 100

  defineMovieClip 102 // total frames: 1
  end // of defineMovieClip 102

  defineMovieClip 104 // total frames: 1
  end // of defineMovieClip 104

  defineMovieClip 118 // total frames: 22

    frame 21
      stop
    end // of frame 21
  end // of defineMovieClip 118

  defineMovieClip 120 // total frames: 1
  end // of defineMovieClip 120

  defineMovieClip 122 // total frames: 1
  end // of defineMovieClip 122

  defineMovieClip 124 // total frames: 1
  end // of defineMovieClip 124

  defineMovieClip 126 // total frames: 1
  end // of defineMovieClip 126

  defineMovieClip 128 // total frames: 1
  end // of defineMovieClip 128

  defineMovieClip 130 // total frames: 1
  end // of defineMovieClip 130

  defineMovieClip 137 // total frames: 22

    frame 21
      stop
    end // of frame 21
  end // of defineMovieClip 137

  defineMovieClip 138 // total frames: 3
  end // of defineMovieClip 138
  
  exportAssets
    138 as '2(dmL'
  end // of exportAssets

  defineMovieClip 143 // total frames: 7

    frame 6
      push ''
      removeClip
    end // of frame 6
  end // of defineMovieClip 143
  
  exportAssets
    143 as '2KhC(('
  end // of exportAssets

  defineMovieClip 149 // total frames: 1
  end // of defineMovieClip 149

  defineMovieClip 150 // total frames: 5
  end // of defineMovieClip 150
  
  exportAssets
    150 as ';p8E;('
  end // of exportAssets

  defineMovieClip 152 // total frames: 1
  end // of defineMovieClip 152
  
  exportAssets
    152 as '7O MD('
  end // of exportAssets

  defineMovieClip 154 // total frames: 1
  end // of defineMovieClip 154
  
  exportAssets
    154 as '{GFP;('
  end // of exportAssets

  defineMovieClip 156 // total frames: 1
  end // of defineMovieClip 156

  defineMovieClip 157 // total frames: 7

    frame 6
      push ''
      removeClip
    end // of frame 6
  end // of defineMovieClip 157
  
  exportAssets
    157 as '2 EA,('
  end // of exportAssets

  defineMovieClip 159 // total frames: 1
  end // of defineMovieClip 159
  
  exportAssets
    159 as '7y,=z'
  end // of exportAssets
  
  exportAssets
    159 as '7y,=z'
  end // of exportAssets
  
  exportAssets
    159 as '7y,=z'
  end // of exportAssets
  
  exportAssets
    159 as '7y,=z'
  end // of exportAssets
  
  exportAssets
    159 as '7y,=z'
  end // of exportAssets
  
  exportAssets
    159 as '7y,=z'
  end // of exportAssets
  
  exportAssets
    159 as '7y,=z'
  end // of exportAssets
  
  exportAssets
    159 as '7y,=z'
  end // of exportAssets
  
  exportAssets
    159 as '7y,=z'
  end // of exportAssets
  
  exportAssets
    159 as '7y,=z'
  end // of exportAssets

  defineMovieClip 161 // total frames: 9
  end // of defineMovieClip 161
  
  exportAssets
    161 as '7y,=z'
  end // of exportAssets

  defineMovieClip 164 // total frames: 1
  end // of defineMovieClip 164

  defineMovieClip 165 // total frames: 1
  end // of defineMovieClip 165
  
  exportAssets
    165 as '58_[E'
  end // of exportAssets

  defineMovieClip 173 // total frames: 7
  end // of defineMovieClip 173
  
  exportAssets
    173 as '+EA{;('
  end // of exportAssets

  defineMovieClip 181 // total frames: 8

    frame 7
      push ''
      removeClip
    end // of frame 7
  end // of defineMovieClip 181
  
  exportAssets
    181 as '-O_ y'
  end // of exportAssets

  defineMovieClip 183 // total frames: 1
  end // of defineMovieClip 183

  defineMovieClip 184 // total frames: 46
  end // of defineMovieClip 184
  
  exportAssets
    184 as '0Icg1'
  end // of exportAssets
  
  exportAssets
    184 as '0Icg1'
  end // of exportAssets

  defineMovieClip 186 // total frames: 1
  end // of defineMovieClip 186

  defineMovieClip 209 // total frames: 23

    frame 0
      push '', 5
      getProperty
      push 1
      subtract
      random
      push 2
      add
      gotoAndPlay
    end // of frame 0

    frame 22
      gotoFrame 1
      play
    end // of frame 22
  end // of defineMovieClip 209

  defineMovieClip 211 // total frames: 1
  end // of defineMovieClip 211

  defineMovieClip 215 // total frames: 58

    frame 57
      gotoFrame 0
    end // of frame 57
  end // of defineMovieClip 215

  defineMovieClip 217 // total frames: 1
  end // of defineMovieClip 217

  defineMovieClip 221 // total frames: 1
  end // of defineMovieClip 221

  defineMovieClip 223 // total frames: 1
  end // of defineMovieClip 223

  defineMovieClip 226 // total frames: 2
  end // of defineMovieClip 226

  defineMovieClip 229 // total frames: 2
  end // of defineMovieClip 229

  defineMovieClip 231 // total frames: 74

    frame 0
      push '', 5
      getProperty
      push 1
      subtract
      random
      push 2
      add
      gotoAndPlay
    end // of frame 0

    frame 73
      gotoFrame 1
      play
    end // of frame 73
  end // of defineMovieClip 231

  defineMovieClip 236 // total frames: 1
  end // of defineMovieClip 236

  defineMovieClip 237 // total frames: 9
  end // of defineMovieClip 237

  defineMovieClip 238 // total frames: 22
  end // of defineMovieClip 238

  defineMovieClip 239 // total frames: 10
  end // of defineMovieClip 239

  defineMovieClip 246 // total frames: 8
  end // of defineMovieClip 246

  defineMovieClip 247 // total frames: 5
  end // of defineMovieClip 247

  defineMovieClip 248 // total frames: 78

    frame 74
      gotoLabel '1'
    end // of frame 74
  end // of defineMovieClip 248

  defineMovieClip 255 // total frames: 12
  end // of defineMovieClip 255

  defineMovieClip 260 // total frames: 8
  end // of defineMovieClip 260

  defineMovieClip 273 // total frames: 6
  end // of defineMovieClip 273

  defineMovieClip 290 // total frames: 55

    frame 54
      stop
    end // of frame 54
  end // of defineMovieClip 290

  defineMovieClip 319 // total frames: 53

    frame 52
      stop
    end // of frame 52
  end // of defineMovieClip 319

  defineMovieClip 320 // total frames: 58
  end // of defineMovieClip 320

  defineMovieClip 321 // total frames: 48
  end // of defineMovieClip 321
  
  exportAssets
    321 as '7hlq='
  end // of exportAssets

  defineMovieClip 324 // total frames: 4
  end // of defineMovieClip 324
  
  exportAssets
    324 as ',GSVf'
  end // of exportAssets

  defineMovieClip 327 // total frames: 1
  end // of defineMovieClip 327

  defineMovieClip 330 // total frames: 1
  end // of defineMovieClip 330

  defineMovieClip 332 // total frames: 4

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 332

  defineMovieClip 333 // total frames: 1
  end // of defineMovieClip 333
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets

  defineMovieClip 341 // total frames: 5

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 341

  defineMovieClip 343 // total frames: 1
  end // of defineMovieClip 343

  defineMovieClip 345 // total frames: 1
  end // of defineMovieClip 345

  defineMovieClip 346 // total frames: 65

    frame 47
      gotoFrame 0
    end // of frame 47

    frame 60
      gotoFrame 0
    end // of frame 60
  end // of defineMovieClip 346

  defineMovieClip 349 // total frames: 1
  end // of defineMovieClip 349

  defineMovieClip 351 // total frames: 1
  end // of defineMovieClip 351

  defineMovieClip 352 // total frames: 62

    frame 48
      gotoFrame 0
    end // of frame 48

    frame 57
      gotoFrame 0
    end // of frame 57
  end // of defineMovieClip 352

  defineMovieClip 353 // total frames: 65

    frame 48
      gotoFrame 0
    end // of frame 48

    frame 60
      gotoFrame 0
    end // of frame 60
  end // of defineMovieClip 353

  defineMovieClip 356 // total frames: 2
  end // of defineMovieClip 356

  defineMovieClip 358 // total frames: 1
  end // of defineMovieClip 358

  defineMovieClip 360 // total frames: 1
  end // of defineMovieClip 360

  defineMovieClip 362 // total frames: 1
  end // of defineMovieClip 362

  defineMovieClip 364 // total frames: 1
  end // of defineMovieClip 364

  defineMovieClip 366 // total frames: 1
  end // of defineMovieClip 366

  defineMovieClip 368 // total frames: 1
  end // of defineMovieClip 368

  defineMovieClip 370 // total frames: 1
  end // of defineMovieClip 370

  defineMovieClip 372 // total frames: 1
  end // of defineMovieClip 372
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets
  
  exportAssets
    333 as '7sedl'
  end // of exportAssets

  defineMovieClip 374 // total frames: 33

    frame 11
      gotoLabel '14J=1'
      play
    end // of frame 11

    frame 26
      gotoLabel '04J=1'
      play
    end // of frame 26
  end // of defineMovieClip 374

  defineMovieClip 377 // total frames: 11
  end // of defineMovieClip 377
  
  exportAssets
    377 as '=-u9C'
  end // of exportAssets

  defineMovieClip 380 // total frames: 4
  end // of defineMovieClip 380
  
  exportAssets
    380 as '5]m1A('
  end // of exportAssets
  
  exportAssets
    380 as '5]m1A('
  end // of exportAssets
  
  exportAssets
    377 as '=-u9C'
  end // of exportAssets
  
  exportAssets
    324 as ',GSVf'
  end // of exportAssets
  
  exportAssets
    321 as '7hlq='
  end // of exportAssets
  
  exportAssets
    181 as '-O_ y'
  end // of exportAssets
  
  exportAssets
    173 as '+EA{;('
  end // of exportAssets
  
  exportAssets
    165 as '58_[E'
  end // of exportAssets
  
  exportAssets
    161 as '7y,=z'
  end // of exportAssets
  
  exportAssets
    157 as '2 EA,('
  end // of exportAssets
  
  exportAssets
    154 as '{GFP;('
  end // of exportAssets
  
  exportAssets
    152 as '7O MD('
  end // of exportAssets
  
  exportAssets
    150 as ';p8E;('
  end // of exportAssets
  
  exportAssets
    143 as '2KhC(('
  end // of exportAssets
  
  exportAssets
    138 as '2(dmL'
  end // of exportAssets
  
  exportAssets
    77 as '2PG]D'
  end // of exportAssets
  
  exportAssets
    71 as '*937,('
  end // of exportAssets

  defineMovieClip 381 // total frames: 1

    frame 0
      constants '-0]rl', '-iB=', '+KD', '*r', '+-(0', '7Qe;6', 'push', '((', ')(', '_x', '_y', 'prototype', '87vE7(', '9T54', 'removeMovieClip', 'remove', '4u=dZ', '}1A{_', 'Math', 'sqrt', ')153L', 'atan2', '2sngh', '2K', '[j0D-', '=OA', '*OA', ',v0X', '+{eA+', '[b', ']b', '9Z 6', '1Jr-,(', 'call', '(KpGn', '{-kxL', '-V;B', 'pow', ';zS4((', '1(DG=', '5}w((', '2Gr]U', '[a', '9-', '9O*r', '}Yax5', '58L', '+(5v', '3=', ' D3Z,', '5,l6b', 'type', 'gotoAndStop', '=S7A', '0tJ', 'stop', '4RW6x', '9d', ' IWA+', 'run', '+1DY9', '1STKS', '}JD27(', '_alpha', '3LyoG(', ']oH', '0THo7', 'cos', 'sin', '3o*R]', '{*Kuf', '0Yj1', 'abs', '[DLTI(', '_rotation', ')K{W)', '5MZ2T', '1V{f', '5wo6p', '565', 'max', '1YWq6', '59-', '2u=W=', '44{N', ',N)rb', '58_[E', '32', '*=_p_', '+(*', '_xscale', ';gvo(', '2 2A=', '86{p(', '{bUE)', '-ar+C', '7hlq=', '5Qv,5', '*]Q5}', 'rate', '3,4D', '(Erk5', '8s', ')vYj7', '[-', '8So2=', '2awen', '2PG]D', '5V61B', 'random', '6YQ5U', ']J', '-=_p_', 'gotoAndPlay', '4w*6(', 'length', '(qH4}', '30Z*V', ';ndCG', '5b)bA(', '(h4SU', '+EA{;(', '*DzW', '2VhU6', '3BjX_', '849kV', '_totalframes', '3Wt', '-_X}5', '$k', '0ynl', '3lmbn', '2i2O', '*(', '{b', '*e', '6b', '5ggDk', '(8LH1', ',XnXA', '(Gr+((', '[X', ';={0[', '{LJLw', ')fbO1', '2Xl5B', '-OE;0(', '9od19', '8Xy2K', '{YJfb', '6mCFu', ' )dtK(', '(78}=(', '0}hl', '-6ww0(', '0D+L', '}BFK1(', 'shift', '468I', '8,EHH', '=-u9C', '5]m1A(', '8INpN', '0P', '1P', ' DR_z', ') 4)x', '2GXKO', ',d951', ';CYOh', '1p(wU', '3mgb+', '+RShH', '-O_ y', '_yscale', '-NJ', '2(dmL', '1{a1J(', 'pop', ' oURB(', '(lpyk', ',GSVf', '4_y{7(', ']V*R', ')KL', ']', '2MU(1', ']8Jeg', '-5c5C(', 'play', '(3Jr2', '=vRV0(', '6aU;T', '8r_-6', '2 EA,(', '2KhC((', '*937,(', '}-B2', '=', '0', ')', 'Color', 'ra', 'ga', 'ba', 'aa', 'rb', 'gb', 'bb', 'ab', 'setTransform', 'min', ')GiA', '77DFL(', '-Q)9)', '=jZ', '4]1L', '21t4B', '99l8B', '*[NCa', ';S{*V', '7aj=S', '=enbD', '2SqQj', '2', ' G7]G(', ',i0 [', ',DBRf', '5DZk5', '3V[D(', '8I0t8(', ' p}WK(', '+1=(', '92]IH', '+7U K', ')2fr3', '}Zms3', 'Array', ']1sj+', '-fC3a', '9oK', '7-,', ']bu40', '_name', 'swapDepths', 'attachMC', '18wU*', 'createEmptyMC', '(GbB}', '+2NA', 'getDepth', 'floor', '}oQA7', 'unshift', '08M8', 'clear', '9(K ;', ',}2X (', 'flash', 'Object', '3[4k{', '{lN=R', '(j]Nr', '-V6F2', '7y,=z', '7O MD(', '(j;o7', '+Y', ',Y', '5lEo7', '4RkUv', '2[', '3[', '[c4gL', 'duplicate', '{Cs', '981eA', '-tHJ)(', ';p8E;(', '7O4es', '[,Ypd', '+l Yy', '4plQ5', 'getTimer', ';ILSy', '3R,QM', ';y}-6(', '-)Xd+', '[Ad;n', '6GI,F', 'fps', '7SlbE', '6u*J7', '(WBt)', ']}Ou;(', '3I0pG', '{;7F4', '8U(wu', '}[cpB', '9xv]A', '{yQ=Q', '+,W', '2y+dV', '(tBee', '3)i[=', ' J3IC', '[6jRc', ')8Fyj', '-y6}J', '2S28H', ';ck5n', '5FqUx', '5T6+', 'sort', '(rsF+', '9jh4}', '8Y-1', '{GFP;(', '(W3', '(KA', ';+', '4MvcB', '0o*6', '5JH+', '+x}tT', '8D2sD(', '5kABJ', '69-', '0G-c,(', '*Kzwx', '$b', '$l', '$d', '5Hy6b', '=kIA', 'onPress', ';b_Jn', 'callback', 'onRelease', '=}X;A(', '0D 6', '*y[P8(', '_xmouse', '_ymouse', '3ljEs', ' JJ', 'Key', 'ENTER', 'isDown', ',z7N (', '6iT8k', '[VeKO', '7T4cF(', '+adIn', 'SPACE', '0yixR', '*id{7(', '),BZc', '6,Ld)(', '83(+Y', 'splice', '+Yuv4(', 'scroll', '4QvZJ', '(UCsj', ' ngjU', '=MR4L(', ')Wnb1(', ' XY9U', '8*+-k', 'lineStyle', 'moveTo', 'lineTo', '9t1r1', 'onKeyDown', ']668C(', 'onKeyUp', '=(D=5', 'addListener', '=11Rh', 'getCode', '980Sb', '(kJ+1(', '({B6'  
      push '-0]rl'
      function2 (r:2='}J') (r:1='this')
        push r:this, '-iB=', r:'}J'
        setMember
        push r:this, '-iB='
        getMember
        push '+KD', r:this
        setMember
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '7Qe;6'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '((', 0
        setMember
        push r:this, ')(', 0
        setMember
        push r:this, '-iB='
        getMember
        push '_x', -1000
        setMember
        push r:this, '-iB='
        getMember
        push '_y', -1000
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this')
        push r:this, '-iB='
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '-iB='
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this')
        push 0, r:this, '-iB='
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '7Qe;6'
        getMember
        push 'remove'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '4u=dZ'
      function2 () (r:1='this')
        push r:this, '-iB='
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '-iB='
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '}1A{_'
      function2 (r:2='8') (r:1='this')
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:3
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:4
        pop
        push r:3, r:3
        multiply
        push r:4, r:4
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        return
      end // of function 

      setMember
      push r:1, ')153L'
      function2 (r:2='8') (r:1='this')
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:3
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:4
        pop
        push r:3, r:4, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        return
      end // of function 

      setMember
      push r:1, '2sngh'
      function2 (r:2='8', r:3='*', r:4='62=') (r:1='this')
        push r:'8', 1, r:this, ')153L'
        callMethod
        setRegister r:5
        pop
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:6
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:7
        pop
        push r:this, '((', r:this, '(('
        getMember
        push r:'62=', r:6, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push r:'62=', r:7, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
      end // of function 

      setMember
      push r:1, '[j0D-'
      function2 (r:2='6') (r:1='this')
        push r:this, '(('
        getMember
        push 0, r:'6'
        subtract
        lessThan
        dup
        branchIfTrue label1
        pop
        push r:this, '(('
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        push r:'6'
        add
        greaterThan
       label1:
        dup
        branchIfTrue label2
        pop
        push r:this, ')('
        getMember
        push 0, r:'6'
        subtract
        lessThan
       label2:
        dup
        branchIfTrue label3
        pop
        push r:this, ')('
        getMember
        push '*r'
        getVariable
        push '*OA'
        getMember
        push r:'6'
        add
        greaterThan
       label3:
        return
      end // of function 

      setMember
      push ',v0X'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '+{eA+', 0.95
        setMember
        push r:this, '[b', 0
        setMember
        push r:this, ']b', 0
        setMember
        push r:this, '9Z 6', 1
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '-0]rl'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '1Jr-,('
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '(KpGn'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label4
        push r:this, ']b', r:this, ']b'
        getMember
        push r:this, '(KpGn'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label4:
        push r:this, '+{eA+'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label5
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push r:this, '+{eA+'
        getMember
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:3
        pop
        push r:this, '[b', r:this, '[b'
        getMember
        push r:3
        multiply
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:3
        multiply
        setMember
       label5:
        push r:this, '((', r:this, '(('
        getMember
        push r:this, '[b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push r:this, ']b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
      end // of function 

      setMember
      push r:1, ';zS4(('
      function2 (r:2='8', r:3='*', r:4='62=') (r:1='this')
        push r:'8', 1, r:this, ')153L'
        callMethod
        setRegister r:5
        pop
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:6
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:7
        pop
        push r:this, '[b', r:this, '[b'
        getMember
        push r:'62=', r:6, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:'62=', r:7, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
      end // of function 

      setMember
      push '1Jr-,(', '-0]rl'
      getVariable
      push 'prototype'
      getMember
      push '87vE7('
      getMember
      setVariable
      push '1(DG='
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '5}w((', TRUE
        setMember
        push r:this, '2Gr]U', FALSE
        setMember
        push r:this, '[a', 1
        setMember
        push r:this, '9-', 0.1
        setMember
        push r:this, '9O*r', 0
        setMember
        push r:this, '}Yax5', 0
        setMember
        push r:this, '58L', 10
        setMember
        push r:this, '+(5v', 0
        setMember
        push r:this, '3=', 0
        setMember
        push r:this, ' D3Z,', 1
        setMember
        push 0, r:this, '5,l6b'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '5,l6b'
      function2 () (r:1='this')
        push r:this, 'type'
        getMember
        push 1
        add
        toString
        push 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '=S7A', r:this, '-iB='
        getMember
        push '0tJ'
        getMember
        setMember
        push 0, r:this, '=S7A'
        getMember
        push 'stop'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '9d'
        getMember
        push '2Gr]U'
        getMember
        not
        branchIfTrue label6
        push r:this, '9d', NULL
        setMember
       label6:
        push r:this, ' IWA+'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label7
        push 0, r:this, 'run'
        callMethod
        pop
       label7:
        push r:this, '+1DY9'
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '+1DY9'
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
        push r:this, '1STKS'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label8
        push r:this, '1STKS', r:this, '1STKS'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push 5
        setRegister r:3
        pop
        push r:this, '1STKS'
        getMember
        push r:3
        lessThan
        not
        branchIfTrue label8
        push r:this, '}JD27('
        getMember
        push '_alpha', r:this, '1STKS'
        getMember
        push r:3
        divide
        push 100
        multiply
        setMember
        push r:this, '1STKS'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label8
        push 0, r:this, '3LyoG('
        callMethod
        pop
       label8:
        push r:this, '}JD27('
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label9
        push r:this, '}JD27('
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '}JD27('
        getMember
        push '_y', r:this, ')('
        getMember
        push r:this, ']oH'
        getMember
        subtract
        setMember
       label9:
      end // of function 

      setMember
      push r:1, '0THo7'
      function2 (r:2='}Yax5') (r:1='this')
        push r:this, '[b', r:this, '9O*r'
        getMember
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:'}Yax5'
        multiply
        setMember
        push r:this, ']b', r:this, '9O*r'
        getMember
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:'}Yax5'
        multiply
        setMember
      end // of function 

      setMember
      push r:1, '3o*R]'
      function2 (r:2='*', r:3='}Yax5') (r:1='this')
        push r:this, '9O*r'
        getMember
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:'}Yax5'
        multiply
        push r:this, '[b'
        getMember
        subtract
        setRegister r:4
        pop
        push r:this, '9O*r'
        getMember
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:'}Yax5'
        multiply
        push r:this, ']b'
        getMember
        subtract
        setRegister r:5
        pop
        push r:this, '[b', r:this, '[b'
        getMember
        push r:4, r:'*'
        multiply
        add
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:5, r:'*'
        multiply
        add
        setMember
      end // of function 

      setMember
      push r:1, '{*Kuf'
      function2 (r:2='2Z') (r:1='this')
        push 3.14, r:'2Z', r:this, '9O*r'
        getMember
        subtract
        push 2, '*r'
        getVariable
        push '0Yj1'
        callMethod
        setRegister r:3
        pop
        push r:this, '9O*r', r:this, '9O*r'
        getMember
        push r:3, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:this, '[a'
        getMember
        push r:3, r:this, '9-'
        getMember
        multiply
        push 0, r:this, '[a'
        getMember
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        push 0, r:3, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
        push 0, r:this, '[DLTI('
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '[DLTI('
      function2 () (r:1='this')
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '9O*r'
        getMember
        push 0.0174
        divide
        setMember
      end // of function 

      setMember
      push r:1, ')K{W)'
      function2 () (r:1='this')
        push r:this, '9d'
        getMember
        push 1, r:this, '}1A{_'
        callMethod
        setRegister r:2
        pop
        push 1, r:2, r:this, '58L'
        getMember
        subtract
        push 0.1
        multiply
        push 0, 3, '*r'
        getVariable
        push '2K'
        callMethod
        push r:this, '5MZ2T'
        getMember
        multiply
        push r:this, '}Yax5'
        getMember
        subtract
        setRegister r:3
        pop
        push r:this, '}Yax5', r:this, '}Yax5'
        getMember
        push r:3, r:this, '1V{f'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '9d'
        getMember
        push 1, r:this, ')153L'
        callMethod
        push 1, r:this, '{*Kuf'
        callMethod
        pop
        push r:this, '}Yax5'
        getMember
        push 1, r:this, '0THo7'
        callMethod
        pop
        push r:3, 0.1
        lessThan
        dup
        not
        branchIfTrue label10
        pop
        push r:2, r:this, '58L'
        getMember
        lessThan
       label10:
        not
        branchIfTrue label11
        push 0, r:this, '5wo6p'
        callMethod
        pop
       label11:
      end // of function 

      setMember
      push r:1, '5wo6p'
      function2 () (r:1='this')
        push r:this, '9d', NULL
        setMember
        push r:this, '[b', 0
        setMember
        push r:this, ']b', 0
        setMember
      end // of function 

      setMember
      push r:1, '565'
      function2 (r:2='*]Q5}', r:3='(') (r:1='this')
        push r:'*]Q5}', r:this, '+(5v'
        getMember
        subtract
        push 0, 2, 'Math'
        getVariable
        push 'max'
        callMethod
        setRegister r:'*]Q5}'
        pop
        push r:this, '3=', r:this, '3='
        getMember
        push r:'*]Q5}'
        subtract
        setMember
        push 0, r:this, '1YWq6'
        callMethod
        pop
        push r:this, '1STKS', 30
        setMember
        push r:this, '3='
        getMember
        push 0
        greaterThan
        not
        not
        branchIfTrue label12
        push r:'(', 1, r:this, '59-'
        callMethod
        pop
       label12:
      end // of function 

      setMember
      push r:1, '59-'
      function2 (r:2='(') (r:1='this')
        push 0, r:this, '9T54'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push r:this, '2Gr]U', TRUE
        setMember
        push 0, r:this, '+1DY9'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, '}JD27('
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label13
        push 0, r:this, '}JD27('
        getMember
        push 'removeMovieClip'
        callMethod
        pop
       label13:
        push r:this, 1, '2u=W='
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, 'run'
      function2 () (r:1='this')
        push r:this, '[b'
        getMember
        push r:this, '[b'
        getMember
        multiply
        push r:this, ']b'
        getMember
        push r:this, ']b'
        getMember
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        setRegister r:2
        pop
        push r:this, ' IWA+', r:this, ' IWA+'
        getMember
        push r:2, 2
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 40
        modulo
        setMember
        push 1, r:this, ' IWA+'
        getMember
        int
        add
        toString
        push 1, r:this, '=S7A'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '1YWq6'
      function2 () (r:1='this')
        push r:this, '}JD27('
        getMember
        push NULL
        equals
        not
        branchIfTrue label14
        push r:this, '}JD27(', '44{N'
        getVariable
        push ',N)rb'
        getMember
        push '58_[E', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '}JD27('
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '}JD27('
        getMember
        push '_y', r:this, ')('
        getMember
        push r:this, ']oH'
        getMember
        subtract
        setMember
       label14:
        push r:this, '}JD27('
        getMember
        push '+(*'
        getMember
        push '_xscale', r:this, '3='
        getMember
        push r:this, ' D3Z,'
        getMember
        divide
        push 100
        multiply
        setMember
        push r:this, '}JD27('
        getMember
        push '_alpha', 100
        setMember
      end // of function 

      setMember
      push r:1, '3LyoG('
      function2 () (r:1='this')
        push 0, r:this, '}JD27('
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, '}JD27(', NULL
        setMember
        push r:this, '1STKS', NULL
        setMember
      end // of function 

      setMember
      push r:1, ';gvo('
      function2 (r:2='4AF') (r:1='this')
        push r:this, '9d', r:'4AF'
        setMember
        push r:this, '5}w(('
        getMember
        dup
        not
        branchIfTrue label15
        pop
        push r:this, ' IWA+'
        getMember
        push NULL
        equals
       label15:
        not
        branchIfTrue label16
        push r:this, ' IWA+', 0
        setMember
       label16:
      end // of function 

      setMember
      push '2u=W=', '-0]rl'
      getVariable
      push 'prototype'
      getMember
      push '9T54'
      getMember
      setVariable
      push '4RW6x', ',v0X'
      getVariable
      push 'prototype'
      getMember
      push '87vE7('
      getMember
      setVariable
      push '2 2A='
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '86{p('
        getMember
        push 'push'
        callMethod
        pop
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '{bUE)'
        getMember
        push 'push'
        callMethod
        pop
        push '44{N'
        getVariable
        push '-ar+C'
        getMember
        push '7hlq=', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:'}J'
        pop
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '5Qv,5', 5
        setMember
        push r:this, '*]Q5}', 0
        setMember
        push r:this, 'rate', 1
        setMember
        push r:this, '3,4D', 50
        setMember
        push r:this, '[a', 1
        setMember
        push r:this, '9-', 0.3
        setMember
        push r:this, ']oH', 10
        setMember
        push r:this, '58L', 10
        setMember
        push r:this, '(Erk5', '*r'
        getVariable
        push '8s'
        getMember
        setMember
        push r:this, ')vYj7', 0
        setMember
        push r:this, '[-', 0
        setMember
        push r:this, ' IWA+', 0
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '1(DG='
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '5,l6b'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '8So2='
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '+1DY9', '44{N'
        getVariable
        push '2awen'
        getMember
        push '2PG]D', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, 'type'
        getMember
        push 1
        add
        toString
        push 1, r:this, '+1DY9'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '5V61B'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '[-'
        getMember
        push 0
        lessThan
        not
        not
        branchIfTrue label17
        push r:this, '[-', r:this, '[-'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
       label17:
        push r:this, '9d'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label22
        push r:this, '[-'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label21
        push r:this, '9d'
        getMember
        push 1, r:this, '}1A{_'
        callMethod
        setRegister r:3
        pop
        push r:3, r:this, ']oH'
        getMember
        push r:this, '9d'
        getMember
        push ']oH'
        getMember
        add
        push r:this, '5Qv,5'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        greaterThan
        not
        branchIfTrue label19
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        push 0.02
        lessThan
        not
        branchIfTrue label18
        push 0, r:this, '6YQ5U'
        callMethod
        pop
       label18:
        push 0, r:this, ')K{W)'
        callMethod
        pop
        branch label21
       label19:
        push r:this, '9d'
        getMember
        push 1, r:this, ')153L'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '{*Kuf'
        callMethod
        pop
        push r:this, ']J'
        getMember
        push NULL
        equals
        dup
        branchIfTrue label20
        pop
        push 3.14, r:this, '9O*r'
        getMember
        push r:4
        subtract
        push 2, '*r'
        getVariable
        push '0Yj1'
        callMethod
        push r:this, ']J'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        lessThan
       label20:
        not
        branchIfTrue label21
        push 0, r:this, '-=_p_'
        callMethod
        pop
       label21:
        branch label23
       label22:
        push r:this, '[-'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label23
        push 0, r:this, '6YQ5U'
        callMethod
        pop
       label23:
      end // of function 

      setMember
      push r:1, '-=_p_'
      function2 () (r:1='this')
        push r:this, ' IWA+', NULL
        setMember
        push r:this, '[-', r:this, 'rate'
        getMember
        setMember
        push '-=_p_', 1, r:this, '=S7A'
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push r:this, '*]Q5}'
        getMember
        push 1, r:this, '9d'
        getMember
        push '565'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '6YQ5U'
      function2 () (r:1='this')
        push 1, 0
        divide
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label25
       label24:
        push r:3
        increment
        setRegister r:3
        pop
       label25:
        push r:3, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4w*6('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label27
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4w*6('
        getMember
        push r:3
        getMember
        setRegister r:4
        pop
        push r:4, 1, r:this, '}1A{_'
        callMethod
        setRegister r:5
        pop
        push r:5, r:2
        lessThan
        not
        branchIfTrue label26
        push r:5
        setRegister r:2
        pop
        push r:4, 1, r:this, ';gvo('
        callMethod
        pop
       label26:
        branch label24
       label27:
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '86{p('
        getMember
        push 'remove'
        callMethod
        pop
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '{bUE)'
        getMember
        push 'remove'
        callMethod
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '(qH4}', '*r'
        getVariable
        push '+-(0'
        getMember
        push '(qH4}'
        getMember
        push r:this, ')vYj7'
        getMember
        subtract
        setMember
        push r:this, 1, '30Z*V'
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '59-'
      function2 (r:3='ba') (r:1='this', r:2='super')
        push 0.8
        setRegister r:4
        pop
        push r:this, '(Erk5'
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push r:this, ']oH'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:6
        pop
        branch label29
       label28:
        push r:6
        increment
        setRegister r:6
        pop
       label29:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label33
        push '44{N'
        getVariable
        push '(h4SU'
        getMember
        push '+EA{;(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:7
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:8
        pop
        push r:ba, NULL
        equals
        not
        not
        branchIfTrue label30
        push r:ba, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        add
        setRegister r:8
        pop
       label30:
        push r:8, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:9
        pop
        push r:8, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:10
        pop
        push r:7, '((', r:this, '(('
        getMember
        push r:9, r:this, ']oH'
        getMember
        multiply
        push r:4
        multiply
        add
        setMember
        push r:7, ')(', r:this, ')('
        getMember
        push r:10, r:this, ']oH'
        getMember
        multiply
        push r:4
        multiply
        add
        setMember
        push r:6, r:5, 0.4
        multiply
        lessThan
        not
        branchIfTrue label31
        push r:7, '[b', r:9, 3
        multiply
        setMember
        push r:7, ']b', r:10, 3
        multiply
        setMember
        push r:7, '+{eA+', 0.5
        setMember
        push r:7, '2VhU6', 40, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push 100, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 100
        multiply
        add
        push r:this, ']oH'
        getMember
        multiply
        push 0.08
        multiply
        push 1, r:7, '3BjX_'
        callMethod
        pop
        branch label32
       label31:
        push 1, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 5
        multiply
        add
        setRegister r:11
        pop
        push r:7, '[b', r:9, r:11
        multiply
        setMember
        push r:7, ']b', r:10, r:11
        multiply
        setMember
        push r:7, '2VhU6', 6, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push 20, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 60
        multiply
        add
        push 1, r:7, '3BjX_'
        callMethod
        pop
        push r:7, '849kV', 0
        setMember
       label32:
        push r:7, '-iB='
        getMember
        push '_totalframes'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        add
        toString
        push 1, r:7, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:7, '-iB='
        getMember
        push '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        branch label28
       label33:
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$k'
        getMember
        push r:this, 'type'
        getMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$k'
        getMember
        push r:this, 'type'
        getMember
        getMember
        increment
        setMember
        push r:ba, r:this, 2, '0ynl'
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '3lmbn'
      function2 (r:2='size', r:3='ba') (r:1='this')
        push r:ba, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 0.8
        multiply
        add
        setRegister r:4
        pop
        push r:4, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:5
        pop
        push r:4, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:6
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push r:this, ']oH'
        getMember
        multiply
        setRegister r:7
        pop
        push r:7, r:this, ']oH'
        getMember
        divide
        push 8
        multiply
        setRegister r:8
        pop
        push NULL, 1, '2i2O'
        new
        setRegister r:9
        pop
        push r:9, '((', r:this, '(('
        getMember
        push r:5, r:7
        multiply
        add
        setMember
        push r:9, ')(', r:this, ')('
        getMember
        push r:6, r:7
        multiply
        add
        setMember
        push r:9, '*(', 8, r:7, r:this, ']oH'
        getMember
        divide
        push 6
        multiply
        subtract
        setMember
        push r:9, '[b', r:5, r:8
        multiply
        setMember
        push r:9, ']b', r:6, r:8
        multiply
        setMember
        push r:9, '{b', r:9, '*('
        getMember
        setMember
        push r:size, 0.5
        multiply
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push r:size
        multiply
        add
        push 1, r:9, '3BjX_'
        callMethod
        pop
        push r:9, '2VhU6', 30, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 20
        multiply
        add
        setMember
        push r:9, '*e', 0.2, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.4
        multiply
        add
        setMember
        push r:9, '6b', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 16
        multiply
        setMember
        push r:9, '+{eA+', 0.94
        setMember
        push r:9, '-iB='
        getMember
        push '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        push r:9, '-iB='
        getMember
        push '_totalframes'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        add
        toString
        push 1, r:9, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '5ggDk'
      function2 () (r:1='this')
        push '44{N'
        getVariable
        push '(8LH1'
        getMember
        push ',XnXA', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '-0]rl'
        new
        setRegister r:2
        pop
        push r:2, '((', r:this, '(('
        getMember
        setMember
        push r:2, ')(', r:this, ')('
        getMember
        setMember
        push 0
        setRegister r:3
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        setRegister r:4
        pop
        push '*r'
        getVariable
        push '(Gr+(('
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label34
        push r:0, 1
        strictEquals
        branchIfTrue label39
        branch label42
       label34:
        push r:4, 0.01
        lessThan
        not
        branchIfTrue label35
        push 4
        setRegister r:3
        pop
        branch label38
       label35:
        push r:4, 0.05
        lessThan
        not
        branchIfTrue label36
        push 2
        setRegister r:3
        pop
        branch label38
       label36:
        push r:4, 0.15
        lessThan
        not
        branchIfTrue label37
        push 3
        setRegister r:3
        pop
        branch label38
       label37:
        push r:4, 0.35
        lessThan
        not
        branchIfTrue label38
        push 1
        setRegister r:3
        pop
       label38:
        branch label42
       label39:
        push r:4, 0.05
        lessThan
        not
        branchIfTrue label40
        push 2
        setRegister r:3
        pop
        branch label41
       label40:
        push r:4, 0.25
        lessThan
        not
        branchIfTrue label41
        push 1
        setRegister r:3
        pop
       label41:
        branch label42
       label42:
        push r:3, 1
        add
        toString
        push 1, r:2, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push '[X', r:2, '2VhU6', 300, 'type', r:3, 3
        initObject
        push 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push ';={0['
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '{LJLw'
      function2 () (r:1='this')
        push '44{N'
        getVariable
        push '(8LH1'
        getMember
        push ',XnXA', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '-0]rl'
        new
        setRegister r:2
        pop
        push r:2, '((', r:this, '(('
        getMember
        setMember
        push r:2, ')(', r:this, ')('
        getMember
        setMember
        push 10
        setRegister r:3
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        setRegister r:4
        pop
        push r:4, 0.08
        lessThan
        not
        branchIfTrue label43
        push 13
        setRegister r:3
        pop
        branch label45
       label43:
        push r:4, 0.25
        lessThan
        not
        branchIfTrue label44
        push 12
        setRegister r:3
        pop
        branch label45
       label44:
        push r:4, 0.5
        lessThan
        not
        branchIfTrue label45
        push 11
        setRegister r:3
        pop
       label45:
        push r:3, 1
        add
        toString
        push 1, r:2, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push '[X', r:2, '2VhU6', 300, 'type', r:3, 3
        initObject
        push 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push ';={0['
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setMember
      push '8So2=', '1(DG='
      getVariable
      push 'prototype'
      getMember
      push '5,l6b'
      getMember
      setVariable
      push '30Z*V', '1(DG='
      getVariable
      push 'prototype'
      getMember
      push '9T54'
      getMember
      setVariable
      push '5V61B', '1(DG='
      getVariable
      push 'prototype'
      getMember
      push '87vE7('
      getMember
      setVariable
      push '0ynl', '1(DG='
      getVariable
      push 'prototype'
      getMember
      push '59-'
      getMember
      setVariable
      push ')fbO1'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:this, 'type', 5
        setMember
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '5Qv,5', 2
        setMember
        push r:this, '*]Q5}', 40
        setMember
        push r:this, 'rate', 120
        setMember
        push r:this, '3,4D', 50
        setMember
        push r:this, '[a', 0.4
        setMember
        push r:this, '9-', 0.2
        setMember
        push r:this, ']oH', 12
        setMember
        push r:this, '58L', 10
        setMember
        push r:this, ' D3Z,', 200
        setMember
        push r:this, '1V{f', 1
        setMember
        push r:this, '5MZ2T', 3
        setMember
        push r:this, '9Z 6', 0.3
        setMember
        push r:this, '(Erk5', '*r'
        getVariable
        push '2Xl5B'
        getMember
        setMember
        push r:this, ')vYj7', 8
        setMember
        push r:this, '+(5v', -1
        setMember
        push r:this, '-OE;0(', r:this, ']oH'
        getMember
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '2 2A='
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '9od19'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '[-'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label46
        push r:this, '[b', r:this, '[b'
        getMember
        push 0.1
        multiply
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push 0.1
        multiply
        setMember
        branch label47
       label46:
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        push 0.1
        lessThan
        not
        branchIfTrue label47
        push '44{N'
        getVariable
        push '(h4SU'
        getMember
        push '8Xy2K', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:3
        pop
        push r:3, '((', r:this, '(('
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 10
        multiply
        add
        setMember
        push r:3, ')(', r:this, ')('
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 10
        multiply
        add
        setMember
        push 50, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 150
        multiply
        add
        push 1, r:3, '3BjX_'
        callMethod
        pop
        push r:3, '2VhU6', 30, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 20
        multiply
        add
        setMember
        push r:3, '849kV', 0
        setMember
       label47:
      end // of function 

      setMember
      push r:1, '59-'
      function2 (r:3='ba') (r:1='this', r:2='super')
        push 10
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        branch label49
       label48:
        push r:5
        increment
        setRegister r:5
        pop
       label49:
        push r:5, r:4
        lessThan
        not
        branchIfTrue label51
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push '6mCFu', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:6
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:7
        pop
        push r:ba, NULL
        equals
        not
        not
        branchIfTrue label50
        push r:ba, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        add
        setRegister r:7
        pop
       label50:
        push r:7, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:8
        pop
        push r:7, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:9
        pop
        push 0.8, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.8
        multiply
        add
        setRegister r:10
        pop
        push r:6, '((', r:this, '(('
        getMember
        push r:8, r:this, ']oH'
        getMember
        multiply
        push r:10
        multiply
        add
        setMember
        push r:6, ')(', r:this, ')('
        getMember
        push r:9, r:this, ']oH'
        getMember
        multiply
        push r:10
        multiply
        add
        setMember
        push 1, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6
        multiply
        add
        setRegister r:11
        pop
        push r:6, '[b', r:8, r:11
        multiply
        setMember
        push r:6, ']b', r:9, r:11
        multiply
        setMember
        push r:6, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push 80, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 40
        multiply
        add
        push 1, r:6, '3BjX_'
        callMethod
        pop
        push r:6, '849kV', 0
        setMember
        push r:6, '-iB='
        getMember
        push '_totalframes'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        add
        toString
        push 1, r:6, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:6, '-iB='
        getMember
        push '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        branch label48
       label51:
        push '44{N'
        getVariable
        push '(h4SU'
        getMember
        push ' )dtK(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:12
        pop
        push r:12, '((', r:this, '(('
        getMember
        setMember
        push r:12, ')(', r:this, ')('
        getMember
        setMember
        push r:12, '-iB='
        getMember
        push '_rotation', 180, r:ba, 0.0174
        divide
        add
        setMember
        push r:12, '2VhU6', 80, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 60
        multiply
        add
        setMember
        push r:this, ']oH', 0
        setMember
        push r:ba, r:this, 2, '(78}=('
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '-=_p_'
      function2 () (r:1='this')
        push r:this, ' IWA+', NULL
        setMember
        push r:this, '[-', r:this, 'rate'
        getMember
        setMember
        push r:this, '9d'
        getMember
        setRegister r:2
        pop
        push r:2, 'type'
        getMember
        push 51
        add
        toString
        push 1, r:this, '=S7A'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '((', r:2, '(('
        getMember
        setMember
        push r:this, ')(', r:2, ')('
        getMember
        setMember
        push r:this, '-iB='
        getMember
        push '_rotation', r:2, '-iB='
        getMember
        push '_rotation'
        getMember
        setMember
        push r:this, ']oH', r:2, ']oH'
        getMember
        setMember
        push 0, r:2, '9T54'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '565'
      function2 (r:3='*]Q5}', r:4='ba') (r:1='this', r:2='super')
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push '6mCFu', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:5
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:6
        pop
        push r:ba, NULL
        equals
        not
        not
        branchIfTrue label52
        push r:ba, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        add
        setRegister r:6
        pop
       label52:
        push r:6, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:7
        pop
        push r:6, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:8
        pop
        push 0.8, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.6
        multiply
        add
        setRegister r:9
        pop
        push r:5, '((', r:this, '(('
        getMember
        push r:7, r:this, ']oH'
        getMember
        multiply
        push r:9
        multiply
        add
        setMember
        push r:5, ')(', r:this, ')('
        getMember
        push r:8, r:this, ']oH'
        getMember
        multiply
        push r:9
        multiply
        add
        setMember
        push 1, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6
        multiply
        add
        setRegister r:10
        pop
        push r:5, '[b', r:7, r:10
        multiply
        setMember
        push r:5, ']b', r:8, r:10
        multiply
        setMember
        push r:5, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push 80, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 40
        multiply
        add
        push 1, r:5, '3BjX_'
        callMethod
        pop
        push r:5, '849kV', 0
        setMember
        push r:5, '-iB='
        getMember
        push '_totalframes'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        add
        toString
        push 1, r:5, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:5, '-iB='
        getMember
        push '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        push r:6, r:'*]Q5}', r:this, 3, '0}hl'
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push '0}hl', '1(DG='
      getVariable
      push 'prototype'
      getMember
      push '565'
      getMember
      setVariable
      push '(78}=(', '2 2A='
      getVariable
      push 'prototype'
      getMember
      push '59-'
      getMember
      setVariable
      push '9od19', '2 2A='
      getVariable
      push 'prototype'
      getMember
      push '87vE7('
      getMember
      setVariable
      push '-6ww0('
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:this, 'type', 1
        setMember
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '5Qv,5', 11
        setMember
        push r:this, '*]Q5}', 3
        setMember
        push r:this, 'rate', 12
        setMember
        push r:this, '3,4D', 50
        setMember
        push r:this, '[a', 0.2
        setMember
        push r:this, '9-', 0.2
        setMember
        push r:this, ']oH', 20
        setMember
        push r:this, '58L', 10
        setMember
        push r:this, ' D3Z,', 61
        setMember
        push r:this, '1V{f', 0.1
        setMember
        push r:this, '5MZ2T', 1.5
        setMember
        push r:this, '9Z 6', 0.2
        setMember
        push r:this, '(Erk5', '*r'
        getVariable
        push '0D+L'
        getMember
        setMember
        push r:this, ')vYj7', 5
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '2 2A='
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '9od19'
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '59-'
      function2 (r:3='ba') (r:1='this', r:2='super')
        push r:ba, 200, 2, r:this, '3lmbn'
        callMethod
        pop
        push 0
        setRegister r:4
        pop
        branch label54
       label53:
        push r:4
        increment
        setRegister r:4
        pop
       label54:
        push r:4, 3
        lessThan
        not
        branchIfTrue label55
        push r:ba, 100, 2, r:this, '3lmbn'
        callMethod
        pop
        branch label53
       label55:
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.1, '*r'
        getVariable
        push '(Gr+(('
        getMember
        push 0.3
        multiply
        add
        lessThan
        not
        branchIfTrue label56
        push 0, r:this, '5ggDk'
        callMethod
        pop
        branch label58
       label56:
        push '*r'
        getVariable
        push '(Gr+(('
        getMember
        push 1
        equals
        dup
        not
        branchIfTrue label57
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '*r'
        getVariable
        push '}BFK1('
        getMember
        push 0
        getMember
        lessThan
       label57:
        not
        branchIfTrue label58
        push 0, r:this, '{LJLw'
        callMethod
        pop
        push '*r'
        getVariable
        push '}BFK1('
        getMember
        push 'length'
        getMember
        push 1
        greaterThan
        not
        branchIfTrue label58
        push 0, '*r'
        getVariable
        push '}BFK1('
        getMember
        push 'shift'
        callMethod
        pop
       label58:
        push r:ba, r:this, 2, '(78}=('
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push '468I'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:this, '8,EHH', TRUE
        setMember
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4w*6('
        getMember
        push 'push'
        callMethod
        pop
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '{bUE)'
        getMember
        push 'push'
        callMethod
        pop
        push '44{N'
        getVariable
        push '-ar+C'
        getMember
        push '=-u9C', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:'}J'
        pop
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '[-', 0
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '1(DG='
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '5,l6b'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '8So2='
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '+1DY9', '44{N'
        getVariable
        push '2awen'
        getMember
        push '5]m1A(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, 'type'
        getMember
        push 1
        add
        toString
        push 1, r:this, '+1DY9'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '5V61B'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '[-', r:this, '[-'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '9d'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label59
        push 0, r:this, ')K{W)'
        callMethod
        pop
        push r:this, '8INpN', r:this, '8INpN'
        getMember
        push 1.5, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '8INpN', r:this, '8INpN'
        getMember
        push r:this, '0P'
        getMember
        push r:this, '(('
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:this, '1P'
        getMember
        push r:this, ')('
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        add
        subtract
        setMember
        push r:this, '0P', r:this, '(('
        getMember
        setMember
        push r:this, '1P', r:this, ')('
        getMember
        setMember
        push r:this, '8INpN'
        getMember
        push 4
        greaterThan
        not
        branchIfTrue label59
        push r:this, '9d', NULL
        setMember
       label59:
        push 0, r:this, ' DR_z'
        callMethod
        setRegister r:3
        pop
        push r:3, NULL
        equals
        not
        not
        branchIfTrue label60
        push r:3, 1, r:this, ') 4)x'
        callMethod
        pop
        push r:this, '[-'
        getMember
        push 0
        greaterThan
        not
        not
        branchIfTrue label60
        push r:3, 1, r:this, '-=_p_'
        callMethod
        pop
       label60:
        push 0, r:this, '2GXKO'
        callMethod
        pop
        push r:this, ',d951'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label61
        push 16777215, r:this, ',d951'
        getMember
        push r:this, '-iB='
        getMember
        push 3, '*r'
        getVariable
        push ';CYOh'
        callMethod
        pop
        push r:this, ',d951', r:this, ',d951'
        getMember
        push 1
        subtract
        push 0.9
        multiply
        setMember
        push r:this, ',d951'
        getMember
        push 1
        lessThan
        not
        branchIfTrue label61
        push r:this, ',d951', NULL
        setMember
        push 16777215, 0, r:this, '-iB='
        getMember
        push 3, '*r'
        getVariable
        push ';CYOh'
        callMethod
        pop
       label61:
        push r:this, '1p(wU'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label62
        push r:this, '1p(wU'
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '1p(wU'
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
       label62:
      end // of function 

      setMember
      push r:1, ';gvo('
      function2 (r:3='4AF') (r:1='this', r:2='super')
        push r:'4AF', r:this, 2, '3mgb+'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '8INpN', 0
        setMember
        push r:this, '0P', r:this, '(('
        getMember
        setMember
        push r:this, '1P', r:this, ')('
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '2GXKO'
      function2 () (r:1='this')
        push r:this, '(('
        getMember
        push r:this, ']oH'
        getMember
        lessThan
        dup
        branchIfTrue label63
        pop
        push r:this, '(('
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        push r:this, ']oH'
        getMember
        subtract
        greaterThan
       label63:
        not
        branchIfTrue label64
        push r:this, '((', '*r'
        getVariable
        push '=OA'
        getMember
        push r:this, ']oH'
        getMember
        subtract
        push r:this, '(('
        getMember
        push r:this, ']oH'
        getMember
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
        push r:this, '[b', 0
        setMember
       label64:
        push r:this, ')('
        getMember
        push r:this, ']oH'
        getMember
        lessThan
        dup
        branchIfTrue label65
        pop
        push r:this, ')('
        getMember
        push '*r'
        getVariable
        push '*OA'
        getMember
        push r:this, ']oH'
        getMember
        subtract
        greaterThan
       label65:
        not
        branchIfTrue label66
        push r:this, ')(', '*r'
        getVariable
        push '*OA'
        getMember
        push r:this, ']oH'
        getMember
        subtract
        push r:this, ')('
        getMember
        push r:this, ']oH'
        getMember
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
        push r:this, ']b', 0
        setMember
       label66:
      end // of function 

      setMember
      push r:1, ') 4)x'
      function2 (r:2='}CL') (r:1='this')
        push r:'}CL', 1, r:this, ')153L'
        callMethod
        push 1, r:this, '{*Kuf'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ' DR_z'
      function2 () (r:1='this')
        push 1, 0
        divide
        setRegister r:2
        pop
        push NULL
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        branch label68
       label67:
        push r:4
        increment
        setRegister r:4
        pop
       label68:
        push r:4, '*r'
        getVariable
        push '+-(0'
        getMember
        push '86{p('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label73
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '86{p('
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push r:5, 1, r:this, '}1A{_'
        callMethod
        setRegister r:6
        pop
        push r:6, r:5, ']oH'
        getMember
        push r:this, ']oH'
        getMember
        add
        push r:this, '5Qv,5'
        getMember
        add
        lessThan
        dup
        not
        branchIfTrue label69
        pop
        push r:6, r:2
        lessThan
       label69:
        setRegister r:7
        pop
        push r:7
        dup
        not
        branchIfTrue label70
        pop
        push r:this, '9d'
        getMember
        push NULL
        equals
        not
       label70:
        not
        branchIfTrue label71
        push 3.14, r:5, 1, r:this, ')153L'
        callMethod
        push r:this, '9O*r'
        getMember
        subtract
        push 2, '*r'
        getVariable
        push '0Yj1'
        callMethod
        setRegister r:8
        pop
        push r:8, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:this, '+RShH'
        getMember
        greaterThan
        not
        branchIfTrue label71
        push FALSE
        setRegister r:7
        pop
       label71:
        push r:7
        not
        branchIfTrue label72
        push r:5
        setRegister r:3
        pop
        push r:6
        setRegister r:2
        pop
       label72:
        branch label67
       label73:
        push r:3
        return
      end // of function 

      setMember
      push r:1, '-=_p_'
      function2 (r:2='}CL') (r:1='this')
        push r:this, '[-', r:this, 'rate'
        getMember
        setMember
        push r:'}CL', 1, r:this, ')153L'
        callMethod
        setRegister r:3
        pop
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push '-O_ y', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:4
        pop
        push r:4, '_rotation', r:3, 0.0174
        divide
        setMember
        push r:4, '_x', r:'}CL', '(('
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push r:'}CL', ']oH'
        getMember
        multiply
        push 0.8
        multiply
        add
        setMember
        push r:4, '_y', r:'}CL', ')('
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push r:'}CL', ']oH'
        getMember
        multiply
        push 0.8
        multiply
        add
        setMember
        push r:4, '_xscale', 100
        setMember
        push r:4, '_yscale', r:4, '_xscale'
        getMember
        setMember
        push 5, r:'}CL', '9Z 6'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        setRegister r:5
        pop
        push r:'}CL', '[b', r:'}CL', '[b'
        getMember
        push r:3, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:5
        multiply
        add
        setMember
        push r:'}CL', ']b', r:'}CL', ']b'
        getMember
        push r:3, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:5
        multiply
        add
        setMember
        push r:3, r:this, '*]Q5}'
        getMember
        push 2, r:'}CL', '565'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '468I'
        getVariable
        push '-NJ'
        getMember
        push 'remove'
        callMethod
        pop
        push r:this, '1p(wU'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label74
        push 0, r:this, '1p(wU'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
       label74:
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4w*6('
        getMember
        push 'remove'
        callMethod
        pop
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '{bUE)'
        getMember
        push 'remove'
        callMethod
        pop
        push r:this, 1, '30Z*V'
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '565'
      function2 (r:3='*]Q5}', r:4='(') (r:1='this', r:2='super')
        push 0, r:this, '1YWq6'
        callMethod
        pop
        push r:this, '1STKS', 30
        setMember
        push r:'(', r:'*]Q5}', r:this, 3, '0}hl'
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '59-'
      function2 (r:3='ba') (r:1='this', r:2='super')
        push r:this, 'type'
        getMember
        push 3
        lessThan
        not
        branchIfTrue label75
        push '44{N'
        getVariable
        push '(8LH1'
        getMember
        push '2(dmL', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:4
        pop
        push r:4, '((', r:this, '(('
        getMember
        setMember
        push r:4, ')(', r:this, ')('
        getMember
        setMember
        push r:4, '-iB='
        getMember
        push '_rotation', r:this, '-iB='
        getMember
        push '_rotation'
        getMember
        setMember
        push r:this, 'type'
        getMember
        push 1
        add
        toString
        push 1, r:4, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:4, '2VhU6', 50, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
       label75:
        push r:ba, r:this, 2, '0ynl'
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '1{a1J('
      function2 () (r:1='this')
       label76:
        push '468I'
        getVariable
        push '-NJ'
        getMember
        push 'length'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label77
        push 0, 0, '468I'
        getVariable
        push '-NJ'
        getMember
        push 'pop'
        callMethod
        push '1p(wU'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label76
       label77:
      end // of function 

      setMember
      push r:1, ' oURB('
      function2 () (r:1='this')
        push r:this, 1, '468I'
        getVariable
        push '-NJ'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '1p(wU', '44{N'
        getVariable
        push '(lpyk'
        getMember
        push ',GSVf', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '1p(wU'
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '1p(wU'
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
        push r:this, 'type'
        getMember
        push 1
        add
        toString
        push 1, r:this, '1p(wU'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '4_y{7('
      function2 () (r:1='this')
        push 0, '468I'
        getVariable
        push '1{a1J('
        callMethod
        pop
        push 0, r:this, ' oURB('
        callMethod
        pop
      end // of function 

      setMember
      push '3mgb+', '1(DG='
      getVariable
      push 'prototype'
      getMember
      push ';gvo('
      getMember
      setVariable
      push ']V*R'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:this, 'type', 3
        setMember
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '[a', 0.13
        setMember
        push r:this, '9-', 0.15
        setMember
        push r:this, ']oH', 20
        setMember
        push r:this, '58L', 36
        setMember
        push r:this, '1V{f', 0.1
        setMember
        push r:this, '5MZ2T', 6
        setMember
        push r:this, '9Z 6', 0.1
        setMember
        push r:this, ' D3Z,', 70
        setMember
        push r:this, '+(5v', 1
        setMember
        push r:this, '5Qv,5', 80
        setMember
        push r:this, '*]Q5}', 12
        setMember
        push r:this, 'rate', 14
        setMember
        push r:this, '+RShH', 3.14
        setMember
        push r:this, '5}w((', FALSE
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '468I'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, ') 4)x'
      function2 (r:2='}CL') (r:1='this')
        push r:this, '=S7A'
        getMember
        push ')KL'
        getMember
        push ']'
        getMember
        setRegister r:3
        pop
        push 0, r:this, '2MU(1'
        callMethod
        setRegister r:4
        pop
        push 3.14, r:4, 1, r:'}CL', ')153L'
        callMethod
        add
        setRegister r:5
        pop
        push 3.14, r:5, r:this, '9O*r'
        getMember
        subtract
        push 2, '*r'
        getVariable
        push '0Yj1'
        callMethod
        push 0.0174
        divide
        setRegister r:6
        pop
        push 180, r:6, r:3, '_rotation'
        getMember
        subtract
        push 2, '*r'
        getVariable
        push '0Yj1'
        callMethod
        setRegister r:7
        pop
        push r:3, '_rotation', r:3, '_rotation'
        getMember
        push r:7, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:7, 0.3
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        push 0, r:7, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, ']8Jeg'
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '-=_p_'
      function2 (r:3='}CL') (r:1='this', r:2='super')
        push r:'}CL', r:this, 2, '-5c5C('
        getVariable
        push 'call'
        callMethod
        pop
        push 0, r:this, '2MU(1'
        callMethod
        setRegister r:4
        pop
        push r:this, '=S7A'
        getMember
        push ')KL'
        getMember
        push ']'
        getMember
        push '_rotation'
        getMember
        push r:this, '-iB='
        getMember
        push '_rotation'
        getMember
        add
        push 0.0174
        multiply
        setRegister r:5
        pop
        push 0, r:this, '=S7A'
        getMember
        push ')KL'
        getMember
        push ']'
        getMember
        push 'play'
        callMethod
        pop
        push 0
        setRegister r:6
        pop
        branch label79
       label78:
        push r:6
        increment
        setRegister r:6
        pop
       label79:
        push r:6, 2
        lessThan
        not
        branchIfTrue label80
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push '(3Jr2', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:7
        pop
        push r:7, '_x', r:4, '(('
        getMember
        setMember
        push r:7, '_y', r:4, ')('
        getMember
        setMember
        push r:7, '_rotation', r:5, 0.0174
        divide
        setMember
        branch label78
       label80:
      end // of function 

      setMember
      push r:1, '2MU(1'
      function2 () (r:1='this')
        push '((', r:this, '(('
        getMember
        push r:this, '9O*r'
        getMember
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push 14
        multiply
        subtract
        push ')(', r:this, ')('
        getMember
        push r:this, '9O*r'
        getMember
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push 14
        multiply
        subtract
        push 2
        initObject
        return
      end // of function 

      setMember
      push r:1, ';gvo('
      function2 (r:3='4AF') (r:1='this', r:2='super')
        push 'run', 1, r:this, '=S7A'
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push r:'4AF', r:this, 2, '=vRV0('
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '5wo6p'
      function2 () (r:1='this', r:2='super')
        push 'stop', 1, r:this, '=S7A'
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push r:this, 1, '6aU;T'
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '59-'
      function2 (r:3='ba') (r:1='this', r:2='super')
        push r:ba, r:this, 2, '8r_-6'
        getVariable
        push 'call'
        callMethod
        pop
        push 25
        setRegister r:4
        pop
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push '2 EA,(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:5
        pop
        push r:5, '_x', r:this, '(('
        getMember
        setMember
        push r:5, '_y', r:this, ')('
        getMember
        setMember
        push r:5, '_xscale', r:4, 2
        multiply
        setMember
        push r:5, '_yscale', r:5, '_xscale'
        getMember
        setMember
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push '2KhC((', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:5
        pop
        push r:5, '_x', r:this, '(('
        getMember
        setMember
        push r:5, '_y', r:this, ')('
        getMember
        setMember
        push r:5, '_xscale', r:4, 1.7
        multiply
        setMember
        push r:5, '_yscale', r:5, '_xscale'
        getMember
        setMember
        push 0.75
        setRegister r:6
        pop
        push 1
        setRegister r:7
        pop
       label81:
        push TRUE
        not
        branchIfTrue label83
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:8
        pop
        push r:8, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:9
        pop
        push r:8, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:10
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push r:this, ']oH'
        getMember
        multiply
        setRegister r:11
        pop
        push r:11, r:this, ']oH'
        getMember
        divide
        push 8
        multiply
        setRegister r:12
        pop
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push '*937,(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '2i2O'
        new
        setRegister r:13
        pop
        push r:13, '((', r:this, '(('
        getMember
        push r:9, r:11
        multiply
        add
        setMember
        push r:13, ')(', r:this, ')('
        getMember
        push r:10, r:11
        multiply
        add
        setMember
        push r:13, '*(', 8, r:11, r:this, ']oH'
        getMember
        divide
        push 6
        multiply
        subtract
        setMember
        push r:13, '[b', r:9, r:12
        multiply
        setMember
        push r:13, ']b', r:10, r:12
        multiply
        setMember
        push r:13, '{b', r:13, '*('
        getMember
        push 0.8
        multiply
        setMember
        push r:13, '2VhU6', 40, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 30
        multiply
        add
        setMember
        push r:13, '*e', 0.2, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.4
        multiply
        add
        setMember
        push r:13, '6b', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 16
        multiply
        setMember
        push r:13, '+{eA+', 0.94
        setMember
        push r:13, '-iB='
        getMember
        push '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        push r:7
        toString
        push 1, r:13, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:7
        increment
        setRegister r:7
        pop
        push r:7, r:13, '-iB='
        getMember
        push '_totalframes'
        getMember
        greaterThan
        not
        branchIfTrue label82
        branch label83
       label82:
        branch label81
       label83:
      end // of function 

      setMember
      push '8r_-6', '468I'
      getVariable
      push 'prototype'
      getMember
      push '59-'
      getMember
      setVariable
      push '6aU;T', '1(DG='
      getVariable
      push 'prototype'
      getMember
      push '5wo6p'
      getMember
      setVariable
      push ']8Jeg', '468I'
      getVariable
      push 'prototype'
      getMember
      push '87vE7('
      getMember
      setVariable
      push '-5c5C(', '468I'
      getVariable
      push 'prototype'
      getMember
      push '-=_p_'
      getMember
      setVariable
      push '=vRV0(', '468I'
      getVariable
      push 'prototype'
      getMember
      push ';gvo('
      getMember
      setVariable
      push '*r'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '}-B2'
      function2 () (r:1='this')
        push '468I'
        getVariable
        push '-NJ', 0
        initArray
        setMember
      end // of function 

      setMember
      push r:0, ';CYOh'
      function2 (r:2='}J', r:3='3GF', r:4='(v+') (r:1='this')
        push '=', r:'(v+', 16
        shiftRight
        push '0', r:'(v+', 8
        shiftRight
        push 255
        bitwiseAnd
        push ')', r:'(v+', 255
        bitwiseAnd
        push 3
        initObject
        setRegister r:5
        pop
        push r:'}J', 1, 'Color'
        new
        setRegister r:6
        pop
        push r:'3GF', 100
        divide
        setRegister r:7
        pop
        push 'ra', 100, r:'3GF'
        subtract
        int
        push 'ga', 100, r:'3GF'
        subtract
        int
        push 'ba', 100, r:'3GF'
        subtract
        int
        push 'aa', 100, 'rb', r:7, r:5, '='
        getMember
        multiply
        int
        push 'gb', r:7, r:5, '0'
        getMember
        multiply
        int
        push 'bb', r:7, r:5, ')'
        getMember
        multiply
        int
        push 'ab', 0, 8
        initObject
        setRegister r:8
        pop
        push r:8, 1, r:6, 'setTransform'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '2K'
      function2 (r:2='(', r:3=')', r:4='*') (r:1='this')
        push r:'*', r:')', r:'(', 2, 'Math'
        getVariable
        push 'max'
        callMethod
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        return
      end // of function 

      setMember
      push r:0, ')GiA'
      function2 (r:2='}', r:3='6lA') (r:1='this')
       label84:
        push r:'}', r:'6lA'
        lessThan
        not
        not
        branchIfTrue label85
        push r:'}', r:'6lA'
        subtract
        setRegister r:'}'
        pop
        branch label84
       label85:
        push r:'}', 0
        lessThan
        not
        branchIfTrue label86
        push r:'}', r:'6lA'
        add
        setRegister r:'}'
        pop
        branch label85
       label86:
        push r:'}'
        return
      end // of function 

      setMember
      push r:0, '0Yj1'
      function2 (r:2='}', r:3='6lA') (r:1='this')
       label87:
        push r:'}', r:'6lA'
        greaterThan
        not
        branchIfTrue label88
        push r:'}', r:'6lA', 2
        multiply
        subtract
        setRegister r:'}'
        pop
        branch label87
       label88:
        push r:'}', 0, r:'6lA'
        subtract
        lessThan
        not
        branchIfTrue label89
        push r:'}', r:'6lA', 2
        multiply
        add
        setRegister r:'}'
        pop
        branch label88
       label89:
        push r:'}'
        return
      end // of function 

      setMember
      push r:0, '77DFL('
      function2 (r:2=']oH') (r:1='this')
        push 4, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:3
        pop
        push '*r'
        getVariable
        push '=OA'
        getMember
        setRegister r:4
        pop
        push '*r'
        getVariable
        push '*OA'
        getMember
        setRegister r:5
        pop
        push r:3
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label90
        push r:0, 1
        strictEquals
        branchIfTrue label91
        push r:0, 2
        strictEquals
        branchIfTrue label92
        push r:0, 3
        strictEquals
        branchIfTrue label93
        branch label94
       label90:
        push '((', 0, r:']oH'
        subtract
        push ')(', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push r:5
        multiply
        push 2
        initObject
        return
       label91:
        push '((', r:4, r:']oH'
        add
        push ')(', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push r:5
        multiply
        push 2
        initObject
        return
       label92:
        push '((', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push r:4
        multiply
        push ')(', 0, r:']oH'
        subtract
        push 2
        initObject
        return
       label93:
        push '((', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push r:4
        multiply
        push ')(', r:5, r:']oH'
        add
        push 2
        initObject
        return
       label94:
        push NULL
        return
      end // of function 

      setMember
      push r:0, '=OA', 300
      setMember
      push r:0, '*OA', 300
      setMember
      push r:0, '8s', 1, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '=jZ', 15, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '0D+L', 250, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '4]1L', 500, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '21t4B', 1500, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '2Xl5B', 2000, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '99l8B', 5000, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '}BFK1(', 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 1, 7
      initArray
      setMember
      push r:0, '*[NCa', 1.3
      setMember
      push r:0, ';S{*V', 0.007
      setMember
      push r:0, '(Gr+((', 1
      setMember
      push r:0, '7aj=S', 1
      setMember
      push r:0, '=enbD', 1
      setMember
      push '2SqQj'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:this, 'type', 0
        setMember
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '[a', 1
        setMember
        push r:this, '9-', 0.3
        setMember
        push r:this, ']oH', 10
        setMember
        push r:this, '58L', 10
        setMember
        push r:this, ' D3Z,', 10
        setMember
        push r:this, ' IWA+', 0
        setMember
        push r:this, '1V{f', 0.2
        setMember
        push r:this, '5MZ2T', 3
        setMember
        push r:this, '5Qv,5', 60
        setMember
        push r:this, '*]Q5}', 2
        setMember
        push r:this, 'rate', 4
        setMember
        push r:this, '+RShH', 0.8
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '468I'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, ']8Jeg'
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '-=_p_'
      function2 (r:3='}CL') (r:1='this', r:2='super')
        push '2', 1, r:this, '=S7A'
        getMember
        push ')'
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push '44{N'
        getVariable
        push '2awen'
        getMember
        push ' G7]G(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:4
        pop
        push r:4, '_x', r:this, '(('
        getMember
        setMember
        push r:4, '_y', r:this, ')('
        getMember
        setMember
        push r:4, '_rotation', r:this, '-iB='
        getMember
        push '_rotation'
        getMember
        setMember
        push r:'}CL', r:this, 2, '-5c5C('
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push ',i0 ['
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push '*DzW'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, ',DBRf', 10
        setMember
        push r:this, '5DZk5', 100
        setMember
        push r:this, '3V[D(', 1
        setMember
        push r:this, '-iB='
        getMember
        push '+KD', r:this
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '3BjX_'
      function2 (r:2='-X') (r:1='this')
        push r:this, '5DZk5', r:'-X'
        setMember
        push r:this, '-iB='
        getMember
        push '_xscale', r:'-X'
        setMember
        push r:this, '-iB='
        getMember
        push '_yscale', r:'-X'
        setMember
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '6b'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label95
        push r:this, '6b', r:this, '6b'
        getMember
        push r:this, '3V[D('
        getMember
        multiply
        setMember
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '-iB='
        getMember
        push '_rotation'
        getMember
        push r:this, '6b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label95:
        push r:this, '2VhU6'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label99
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '2VhU6'
        getMember
        push r:this, ',DBRf'
        getMember
        lessThan
        not
        branchIfTrue label99
        push r:this, '2VhU6'
        getMember
        push r:this, ',DBRf'
        getMember
        divide
        setRegister r:3
        pop
        push r:this, '849kV'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label96
        branch label97
       label96:
        push r:this, '-iB='
        getMember
        push '_xscale', r:this, '5DZk5'
        getMember
        push r:3
        multiply
        setMember
        push r:this, '-iB='
        getMember
        push '_yscale', r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        setMember
        branch label98
       label97:
        push r:this, '-iB='
        getMember
        push '_alpha', r:3, 100
        multiply
        setMember
        branch label98
       label98:
        push r:this, '2VhU6'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label99
        push 0, r:this, '9T54'
        callMethod
        pop
       label99:
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push r:this, '8I0t8('
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label100
        push r:this, '8I0t8('
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
       label100:
        push r:this, 1, '2u=W='
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push ' p}WK('
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:this, 'type', 2
        setMember
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '5Qv,5', 4
        setMember
        push r:this, '*]Q5}', 6
        setMember
        push r:this, 'rate', 20
        setMember
        push r:this, '3,4D', 50
        setMember
        push r:this, '[a', 0.1
        setMember
        push r:this, '9-', 0.1
        setMember
        push r:this, ']oH', 29
        setMember
        push r:this, '58L', 10
        setMember
        push r:this, ' D3Z,', 360
        setMember
        push r:this, '1V{f', 0.1
        setMember
        push r:this, '5MZ2T', 0.7
        setMember
        push r:this, '9Z 6', 0
        setMember
        push r:this, '(Erk5', '*r'
        getVariable
        push '21t4B'
        getMember
        setMember
        push r:this, ')vYj7', 18
        setMember
        push r:this, '+(5v', 1
        setMember
        push r:this, ']J', 0.2
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '2 2A='
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '9od19'
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '59-'
      function2 (r:3='ba') (r:1='this', r:2='super')
        push 0
        setRegister r:4
        pop
        branch label102
       label101:
        push r:4
        increment
        setRegister r:4
        pop
       label102:
        push r:4, 4
        lessThan
        not
        branchIfTrue label103
        push r:ba, 300, 2, r:this, '3lmbn'
        callMethod
        pop
        branch label101
       label103:
        push 0
        setRegister r:5
        pop
        branch label105
       label104:
        push r:5
        increment
        setRegister r:5
        pop
       label105:
        push r:5, 12
        lessThan
        not
        branchIfTrue label106
        push r:ba, 180, 2, r:this, '3lmbn'
        callMethod
        pop
        branch label104
       label106:
        push 0, r:this, '5ggDk'
        callMethod
        pop
        push r:ba, r:this, 2, '(78}=('
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '-=_p_'
      function2 () (r:1='this', r:2='super')
        push r:this, '9d'
        getMember
        setRegister r:3
        pop
        push r:3, 'type'
        getMember
        push 3
        lessThan
        not
        branchIfTrue label107
        push r:this, ' IWA+', NULL
        setMember
        push r:this, '[-', 30
        setMember
        push '-=_p_', 1, r:this, '=S7A'
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push r:3, 'type'
        getMember
        push 2
        add
        toString
        push 1, r:this, '=S7A'
        getMember
        push '+1=('
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push 0, r:this, '9d'
        getMember
        push '9T54'
        callMethod
        pop
        branch label108
       label107:
        push r:this, 1, '92]IH'
        getVariable
        push 'call'
        callMethod
        pop
        push 0, r:this, '=S7A'
        getMember
        push '+1=('
        getMember
        push 'stop'
        callMethod
        pop
       label108:
      end // of function 

      setMember
      push '92]IH', '2 2A='
      getVariable
      push 'prototype'
      getMember
      push '-=_p_'
      getMember
      setVariable
      push '+7U K'
      function2 (r:2='}J') (r:1='this')
        push r:this, ')2fr3', r:'}J'
        setMember
        push r:this, '}Zms3', 0, 'Array'
        new
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, ']1sj+'
      function2 () (r:1='this')
        push r:this, ')2fr3'
        getMember
        return
      end // of function 

      setMember
      push r:1, '-fC3a'
      function2 (r:2='59F') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'59F'
        getMember
        setRegister r:3
        pop
        push r:3, NULL
        equals
        not
        branchIfTrue label109
        push '9oK', 0, 'Array'
        new
        push '7-,', 0, 2
        initObject
        setRegister r:3
        pop
        push r:this, '}Zms3'
        getMember
        push r:'59F', r:3
        setMember
       label109:
        push r:3
        return
      end // of function 

      setMember
      push r:1, ']bu40'
      function2 (r:2='[-99') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'[-99'
        getMember
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:7
        pop
        push r:'[-99', 1000
        multiply
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label111
       label110:
        push r:6
        increment
        setRegister r:6
        pop
       label111:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label113
        push r:4, r:6
        getMember
        push '_name'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label112
        push r:8, r:7
        add
        push 1, r:4, r:6
        getMember
        push 'swapDepths'
        callMethod
        pop
        push r:4, r:7, r:4, r:6
        getMember
        setMember
        push r:7
        increment
        setRegister r:7
        pop
       label112:
        branch label110
       label113:
        push r:3, '7-,', r:7
        setMember
      end // of function 

      setMember
      push r:1, '*=_p_'
      function2 (r:2='*KB2', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label114
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'*KB2', 2, r:this, '*=_p_'
        callMethod
        return
       label114:
        push r:6, r:'[-99', 1000
        multiply
        add
        push r:'*KB2', r:this, ')2fr3'
        getMember
        push 3, '3Wt'
        getVariable
        push 'attachMC'
        callMethod
        setRegister r:7
        pop
        push r:5, r:6, r:7
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:7
        return
      end // of function 

      setMember
      push r:1, '18wU*'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push r:5, 1000
        equals
        not
        branchIfTrue label115
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', 1, r:this, '18wU*'
        callMethod
        return
       label115:
        push r:5, r:'[-99', 1000
        multiply
        add
        push r:this, ')2fr3'
        getMember
        push 2, '3Wt'
        getVariable
        push 'createEmptyMC'
        callMethod
        setRegister r:6
        pop
        push r:4, r:5, r:6
        setMember
        push r:3, '7-,', r:3, '7-,'
        getMember
        increment
        setMember
        push r:6
        return
      end // of function 

      setMember
      push r:1, '(GbB}'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label116
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        return
       label116:
        push r:5, r:6, r:'}J'
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:6, r:'[-99', 1000
        multiply
        add
        return
      end // of function 

      setMember
      push r:1, '+2NA'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        push 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, r:'[-99'
        equals
        not
        branchIfTrue label117
        push UNDEF
        return
       label117:
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:5, '7-,'
        getMember
        setRegister r:7
        pop
        push 0
        setRegister r:8
        pop
        branch label119
       label118:
        push r:8
        increment
        setRegister r:8
        pop
       label119:
        push r:8, r:7
        lessThan
        not
        branchIfTrue label121
        push r:6, r:8
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label120
        push r:6, r:8, NULL
        setMember
        branch label121
       label120:
        branch label118
       label121:
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}oQA7'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label122
        push r:6, r:7, NULL
        setMember
        push r:'}J', 1, r:6, 'unshift'
        callMethod
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label122:
      end // of function 

      setMember
      push r:1, '08M8'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label124
        push r:6, r:7, NULL
        setMember
        push r:5, '7-,'
        getMember
        push 1000
        equals
        not
        branchIfTrue label123
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label123:
        push r:5, '7-,'
        getMember
        setRegister r:3
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:3, r:4, 1000
        multiply
        add
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
        push r:6, r:3, r:'}J'
        setMember
       label124:
      end // of function 

      setMember
      push r:1, 'clear'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:4
        pop
        branch label126
       label125:
        push r:4
        increment
        setRegister r:4
        pop
       label126:
        push r:4, r:3, '7-,'
        getMember
        lessThan
        not
        branchIfTrue label127
        push 0, r:5, r:4
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label125
       label127:
        push r:3, '7-,', 0
        setMember
      end // of function 

      setMember
      push r:1, '9(K ;'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push -99999999
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label129
       label128:
        push r:6
        increment
        setRegister r:6
        pop
       label129:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label137
        push r:4, r:6
        getMember
        setRegister r:9
        pop
        push r:9, '_y'
        getMember
        setRegister r:10
        pop
        push r:10, r:8
        lessThan
        not
        not
        branchIfTrue label130
        push r:10
        setRegister r:8
        pop
        branch label136
       label130:
        push r:6
        setRegister r:7
        pop
        branch label132
       label131:
        push r:7
        decrement
        setRegister r:7
        pop
       label132:
        push r:7, 0
        greaterThan
        not
        branchIfTrue label135
        push r:4, r:7, 1
        subtract
        getMember
        setRegister r:11
        pop
        push r:11, '_y'
        getMember
        push r:10
        greaterThan
        not
        branchIfTrue label133
        push r:4, r:7, r:11
        setMember
        push r:11, 1, r:9, 'swapDepths'
        callMethod
        pop
        branch label134
       label133:
        push r:4, r:7, r:9
        setMember
        branch label135
       label134:
        branch label131
       label135:
        push r:7, 0
        equals
        not
        branchIfTrue label136
        push r:4, 0, r:9
        setMember
       label136:
        branch label128
       label137:
      end // of function 

      setMember
      push r:1, ',}2X ('
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label139
       label138:
        push r:2
        increment
        setRegister r:2
        pop
       label139:
        push r:2, r:this, '}Zms3'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label140
        push r:2, 1, r:this, 'clear'
        callMethod
        pop
        branch label138
       label140:
      end // of function 

      setMember
      push 'flash'
      getVariable
      not
      not
      branchIfTrue label141
      push 'flash', 0, 'Object'
      new
      setVariable
     label141:
      push 'flash'
      getVariable
      push '3[4k{'
      getMember
      not
      not
      branchIfTrue label142
      push 'flash'
      getVariable
      push '3[4k{', 0, 'Object'
      new
      setMember
     label142:
      push 'flash'
      getVariable
      push '3[4k{'
      getMember
      push '{lN=R'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setMember
      push '(j]Nr'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push '44{N'
        getVariable
        push '-V6F2'
        getMember
        push '7y,=z', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:'}J'
        pop
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '+1DY9', '44{N'
        getVariable
        push '2awen'
        getMember
        push '7O MD(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '(j;o7'
      function2 (r:2='5R', r:3='6R') (r:1='this')
        push r:this, '+Y', r:'5R'
        setMember
        push r:this, ',Y', r:'6R'
        setMember
        push r:this, '((', r:this, '+Y'
        getMember
        setMember
        push r:this, ')(', r:this, ',Y'
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '5lEo7'
      function2 (r:2='5R', r:3='6R') (r:1='this')
        push r:this, 'max', '((', r:'5R', ')(', r:'6R', 2
        initObject
        push 1, r:this, '}1A{_'
        callMethod
        setMember
        push r:this, '4RkUv', 0
        setMember
        push r:this, '2[', r:'5R'
        setMember
        push r:this, '3[', r:'6R'
        setMember
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, '4RkUv', r:this, 'max'
        getMember
        push r:this, '4RkUv'
        getMember
        push '(j]Nr'
        getVariable
        push '[c4gL'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setMember
        push r:this, '4RkUv'
        getMember
        push r:this, 'max'
        getMember
        divide
        setRegister r:3
        pop
        push r:this, '((', r:this, '+Y'
        getMember
        push 1, r:3
        subtract
        multiply
        push r:this, '2['
        getMember
        push r:3
        multiply
        add
        setMember
        push r:this, ')(', r:this, ',Y'
        getMember
        push 1, r:3
        subtract
        multiply
        push r:this, '3['
        getMember
        push r:3
        multiply
        add
        setMember
        push r:this, '+1DY9'
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '+1DY9'
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push r:3, 3.14
        multiply
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:this, 'max'
        getMember
        push 0.4
        multiply
        multiply
        subtract
        setMember
        push r:this, '4RkUv'
        getMember
        push r:this, 'max'
        getMember
        equals
        not
        branchIfTrue label147
        push 0, '*r'
        getVariable
        push '+-(0'
        getMember
        push '86{p('
        getMember
        push 'duplicate'
        callMethod
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        branch label144
       label143:
        push r:5
        increment
        setRegister r:5
        pop
       label144:
        push r:5, r:4, 'length'
        getMember
        lessThan
        not
        branchIfTrue label146
        push r:4, r:5
        getMember
        setRegister r:6
        pop
        push r:6, 1, r:this, '}1A{_'
        callMethod
        setRegister r:7
        pop
        push r:7, '(j]Nr'
        getVariable
        push '{Cs'
        getMember
        push r:6, ']oH'
        getMember
        add
        lessThan
        not
        branchIfTrue label145
        push r:6, 1, r:this, ')153L'
        callMethod
        push '(j]Nr'
        getVariable
        push '981eA'
        getMember
        push 2, r:6, '565'
        callMethod
        pop
       label145:
        branch label143
       label146:
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push '2 EA,(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:8
        pop
        push r:8, '_x', r:this, '(('
        getMember
        setMember
        push r:8, '_y', r:this, ')('
        getMember
        setMember
        push r:8, '_xscale', '(j]Nr'
        getVariable
        push '{Cs'
        getMember
        push 2
        multiply
        setMember
        push r:8, '_yscale', r:8, '_xscale'
        getMember
        setMember
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push '2KhC((', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:8
        pop
        push r:8, '_x', r:this, '(('
        getMember
        setMember
        push r:8, '_y', r:this, ')('
        getMember
        setMember
        push r:8, '_xscale', '(j]Nr'
        getVariable
        push '{Cs'
        getMember
        push 1.7
        multiply
        setMember
        push r:8, '_yscale', r:8, '_xscale'
        getMember
        setMember
        push 0, r:this, '9T54'
        callMethod
        pop
       label147:
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push 0, r:this, '+1DY9'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, 1, '2u=W='
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '[c4gL', 6
      setMember
      push r:0, '{Cs', 40
      setMember
      push r:0, '981eA', 8
      setMember
      push '2i2O'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:this, '-tHJ)(', FALSE
        setMember
        push r:'}J', NULL
        equals
        not
        branchIfTrue label148
        push r:this, '-tHJ)(', TRUE
        setMember
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push ';p8E;(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:'}J'
        pop
       label148:
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '+1DY9', '44{N'
        getVariable
        push '2awen'
        getMember
        push '7O MD(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '+1DY9'
        getMember
        push '_alpha', 50
        setMember
        push r:this, '*(', 0
        setMember
        push r:this, '{b', 0
        setMember
        push r:this, '*e', 1
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '*DzW'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '3BjX_'
      function2 (r:3='-X') (r:1='this', r:2='super')
        push r:'-X', r:this, 2, '7O4es'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '+1DY9'
        getMember
        push '_xscale', r:'-X', 0.8
        multiply
        setMember
        push r:this, '+1DY9'
        getMember
        push '_yscale', r:'-X', 0.8
        multiply
        setMember
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '[,Ypd'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '+1DY9'
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '+1DY9'
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
        push r:this, '+1DY9'
        getMember
        push '_alpha', r:this, '-iB='
        getMember
        push '_alpha'
        getMember
        push 0.5
        multiply
        setMember
        push r:this, '{b', r:this, '{b'
        getMember
        push r:this, '*e'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        setMember
        push r:this, '{b', r:this, '{b'
        getMember
        push r:this, '+{eA+'
        getMember
        multiply
        setMember
        push r:this, '*(', r:this, '*('
        getMember
        push r:this, '{b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '*('
        getMember
        push 0
        lessThan
        not
        branchIfTrue label149
        push r:this, '*(', 0
        setMember
        push r:this, '{b', r:this, '{b'
        getMember
        push -0.8
        multiply
        setMember
       label149:
        push r:this, '-iB='
        getMember
        push '_y', r:this, '-iB='
        getMember
        push '_y'
        getMember
        push r:this, '*('
        getMember
        subtract
        setMember
        push 0.5
        setRegister r:3
        pop
        push r:this, '-tHJ)('
        getMember
        dup
        not
        branchIfTrue label150
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        push 0.2
        lessThan
       label150:
        not
        branchIfTrue label151
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push '+EA{;(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:4
        pop
        push r:4, '((', r:this, '-iB='
        getMember
        push '_x'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 5
        multiply
        add
        setMember
        push r:4, ')(', r:this, '-iB='
        getMember
        push '_y'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 5
        multiply
        add
        setMember
        push r:4, '[b', r:this, '[b'
        getMember
        push r:3
        multiply
        setMember
        push r:4, ']b', r:this, ']b'
        getMember
        push r:3
        multiply
        setMember
        push 30, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 70
        multiply
        add
        push 1, r:4, '3BjX_'
        callMethod
        pop
        push r:4, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:4, '-iB='
        getMember
        push '_totalframes'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        add
        toString
        push 1, r:4, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:4, '849kV', 0
        setMember
       label151:
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push 0, r:this, '+1DY9'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, 1, '+l Yy'
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push '+l Yy', '*DzW'
      getVariable
      push 'prototype'
      getMember
      push '9T54'
      getMember
      setVariable
      push '7O4es', '*DzW'
      getVariable
      push 'prototype'
      getMember
      push '3BjX_'
      getMember
      setVariable
      push '[,Ypd', '*DzW'
      getVariable
      push 'prototype'
      getMember
      push '87vE7('
      getMember
      setVariable
      push '{-kxL'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '87vE7('
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '4plQ5', '{-kxL'
        getVariable
        push '4plQ5'
        getMember
        increment
        setMember
        push 0, '3Wt'
        getVariable
        push 'getTimer'
        callMethod
        setRegister r:2
        pop
        push '{-kxL'
        getVariable
        push ';ILSy', r:2, '{-kxL'
        getVariable
        push '3R,QM'
        getMember
        subtract
        push 1000.0
        divide
        setMember
        push '{-kxL'
        getVariable
        push '3R,QM', r:2
        setMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        push '{-kxL'
        getVariable
        push ';y}-6('
        getMember
        lessThan
        not
        branchIfTrue label152
        push '{-kxL'
        getVariable
        push '-)Xd+', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        push '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        multiply
        push 1, '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        subtract
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        multiply
        add
        setMember
        branch label153
       label152:
        push '{-kxL'
        getVariable
        push ';ILSy', 1, '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        divide
        setMember
       label153:
        push '{-kxL'
        getVariable
        push '-V;B', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        setMember
      end // of function 

      setMember
      push r:0, 'fps'
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        return
      end // of function 

      setMember
      push r:0, '6GI,F', 32
      setMember
      push r:0, ';y}-6(', 0.5
      setMember
      push r:0, '3R,QM', 0, '3Wt'
      getVariable
      push 'getTimer'
      callMethod
      setMember
      push r:0, '[Ad;n', 0.95
      setMember
      push r:0, '-)Xd+', 1
      setMember
      push r:0, '-V;B', 1
      setMember
      push r:0, ';ILSy', 1
      setMember
      push r:0, '4plQ5', 0
      setMember
      push '7SlbE'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:this, 'type', 1
        setMember
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '[a', 1
        setMember
        push r:this, '9-', 0.3
        setMember
        push r:this, ']oH', 10
        setMember
        push r:this, '58L', 10
        setMember
        push r:this, ' D3Z,', 10
        setMember
        push r:this, ' IWA+', 0
        setMember
        push r:this, '1V{f', 0.2
        setMember
        push r:this, '5MZ2T', 3
        setMember
        push r:this, '5Qv,5', 180
        setMember
        push r:this, '*]Q5}', 1000
        setMember
        push r:this, 'rate', 100
        setMember
        push r:this, '+RShH', 0.2
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '468I'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, ']8Jeg'
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '-=_p_'
      function2 (r:2='}CL') (r:1='this')
        push '6u*J7', 1, r:this, '=S7A'
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push r:this, ' IWA+', NULL
        setMember
        push 3.14, r:'}CL', 1, r:this, ')153L'
        callMethod
        push r:this, '9O*r'
        getMember
        subtract
        push 2, '*r'
        getVariable
        push '0Yj1'
        callMethod
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push 0.1
        greaterThan
        not
        branchIfTrue label154
        push UNDEF
        return
       label154:
        push NULL, 1, '(j]Nr'
        new
        setRegister r:3
        pop
        push r:this, ')('
        getMember
        push r:this, '(('
        getMember
        push 2, r:3, '(j;o7'
        callMethod
        pop
        push 10
        setRegister r:4
        pop
        push r:'}CL', ')('
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push r:4
        multiply
        add
        push r:'}CL', '(('
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push r:4
        multiply
        add
        push 2, r:3, '5lEo7'
        callMethod
        pop
        push r:this, '[-', r:this, 'rate'
        getMember
        setMember
      end // of function 

      setMember
      push '(WBt)'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ']}Ou;(', 1
      setMember
      push r:0, '3I0pG', 2
      setMember
      push r:0, '{;7F4', 3
      setMember
      push r:0, '8U(wu', 4
      setMember
      push r:0, '}[cpB', 5
      setMember
      push r:0, '9xv]A', 6
      setMember
      push r:0, '{yQ=Q', 7
      setMember
      push r:0, '+,W', 8
      setMember
      push r:0, '2y+dV', 9
      setMember
      push r:0, '(tBee', 10
      setMember
      push r:0, '3)i[=', 11
      setMember
      push r:0, ' J3IC', 12
      setMember
      push r:0, '[6jRc', 13
      setMember
      push r:0, ')8Fyj', 14
      setMember
      push '-y6}J'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:this, 'type', 0
        setMember
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '5Qv,5', 5
        setMember
        push r:this, '*]Q5}', 0.4
        setMember
        push r:this, 'rate', 5
        setMember
        push r:this, '3,4D', 50
        setMember
        push r:this, '[a', 1
        setMember
        push r:this, '9-', 0.3
        setMember
        push r:this, ']oH', 10
        setMember
        push r:this, '58L', 10
        setMember
        push r:this, ' D3Z,', 7
        setMember
        push r:this, '1V{f', 0.2
        setMember
        push r:this, '5MZ2T', 3.5
        setMember
        push r:this, '(Erk5', '*r'
        getVariable
        push '=jZ'
        getMember
        setMember
        push r:this, ')vYj7', 1
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '2 2A='
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '9od19'
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push '2S28H'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:this, 'type', 2
        setMember
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '[a', 1
        setMember
        push r:this, '9-', 0.3
        setMember
        push r:this, ']oH', 8
        setMember
        push r:this, '58L', 6
        setMember
        push r:this, ' D3Z,', 10
        setMember
        push r:this, ' IWA+', 0
        setMember
        push r:this, '1V{f', 0.2
        setMember
        push r:this, '5MZ2T', 3
        setMember
        push r:this, '*]Q5}', 6
        setMember
        push r:this, 'rate', 4
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '468I'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, ']8Jeg'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '9d'
        getMember
        push NULL
        equals
        not
        branchIfTrue label155
        push 0, r:this, ';ck5n'
        callMethod
        pop
       label155:
      end // of function 

      setMember
      push r:1, ';ck5n'
      function2 () (r:1='this')
        push 0, 'Array'
        new
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label157
       label156:
        push r:3
        increment
        setRegister r:3
        pop
       label157:
        push r:3, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4w*6('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label161
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4w*6('
        getMember
        push r:3
        getMember
        setRegister r:4
        pop
        push r:4, r:this
        equals
        not
        dup
        not
        branchIfTrue label158
        pop
        push r:4, 'type'
        getMember
        push 3
        equals
        not
       label158:
        dup
        not
        branchIfTrue label159
        pop
        push r:4, '3='
        getMember
        push r:4, ' D3Z,'
        getMember
        lessThan
       label159:
        not
        branchIfTrue label160
        push r:4, 1, r:this, '}1A{_'
        callMethod
        setRegister r:5
        pop
        push r:5, r:4, ']oH'
        getMember
        push r:this, ']oH'
        getMember
        add
        push '2S28H'
        getVariable
        push '5FqUx'
        getMember
        add
        lessThan
        not
        branchIfTrue label160
        push '[X', r:4, '5T6+', r:5, 2
        initObject
        push 1, r:2, 'push'
        callMethod
        pop
       label160:
        branch label156
       label161:
        function2 (r:2='(', r:3=')') (r:1='this')
          push r:'(', '5T6+'
          getMember
          push r:')', '5T6+'
          getMember
          greaterThan
          not
          branchIfTrue label162
          push 1
          return
         label162:
          push -1
          return
        end // of function 

        setRegister r:6
        pop
        push r:6, 1, r:2, 'sort'
        callMethod
        pop
        push 0
        setRegister r:7
        pop
        branch label164
       label163:
        push r:7
        increment
        setRegister r:7
        pop
       label164:
        push r:7, r:2, 'length'
        getMember
        lessThan
        not
        branchIfTrue label173
        push r:2, r:7
        getMember
        setRegister r:8
        pop
        push r:8, '[X'
        getMember
        setRegister r:9
        pop
        push r:this, '[-'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label172
        push r:8, '5T6+'
        getMember
        push r:9, ']oH'
        getMember
        push r:this, ']oH'
        getMember
        add
        push '2S28H'
        getVariable
        push '(rsF+'
        getMember
        add
        lessThan
        not
        branchIfTrue label171
        push 0
        setRegister r:10
        pop
        branch label166
       label165:
        push r:10
        increment
        setRegister r:10
        pop
       label166:
        push r:10, 3
        lessThan
        not
        branchIfTrue label167
        push r:9, 1, r:this, ')153L'
        callMethod
        push 1, r:this, '{*Kuf'
        callMethod
        pop
        branch label165
       label167:
        push r:this, '[-', r:this, 'rate'
        getMember
        setMember
        push r:9, '3=', r:9, ' D3Z,'
        getMember
        push r:9, '3='
        getMember
        push '2S28H'
        getVariable
        push '9jh4}'
        getMember
        add
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setMember
        push 0, r:9, '1YWq6'
        callMethod
        pop
        push r:9, '1STKS', 30
        setMember
        push '8Y-1', 1, r:this, '=S7A'
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push r:this, ' IWA+', NULL
        setMember
        push 0
        setRegister r:11
        pop
        branch label169
       label168:
        push r:11
        increment
        setRegister r:11
        pop
       label169:
        push r:11, 1
        lessThan
        not
        branchIfTrue label170
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push '{GFP;(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:12
        pop
        push r:12, '((', r:9, '(('
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push r:9, ']oH'
        getMember
        multiply
        add
        setMember
        push r:12, ')(', r:9, ')('
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push r:9, ']oH'
        getMember
        multiply
        add
        setMember
        push 50, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 100
        multiply
        add
        push 1, r:12, '3BjX_'
        callMethod
        pop
        push r:12, '849kV', 0
        setMember
        push r:12, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        branch label168
       label170:
        push UNDEF
        return
        branch label172
       label171:
        push r:8, '5T6+'
        getMember
        push r:9, ']oH'
        getMember
        push r:this, ']oH'
        getMember
        add
        subtract
        setRegister r:13
        pop
        push r:9, 1, r:this, ')153L'
        callMethod
        setRegister r:14
        pop
        push '((', r:this, '(('
        getMember
        push r:14, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:13
        multiply
        add
        push ')(', r:this, ')('
        getMember
        push r:14, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:13
        multiply
        add
        push ']oH', NULL, 3
        initObject
        setRegister r:15
        pop
        push r:15, 1, r:this, ';gvo('
        callMethod
        pop
        push UNDEF
        return
       label172:
        branch label163
       label173:
      end // of function 

      setMember
      push r:1, ' DR_z'
      function2 () (r:1='this')
        push NULL
        return
      end // of function 

      setMember
      push r:1, '-=_p_'
      function2 (r:2='}CL') (r:1='this')
        push UNDEF
        return
      end // of function 

      setMember
      push r:0, '(rsF+', 6
      setMember
      push r:0, '5FqUx', 60
      setMember
      push r:0, '9jh4}', 0.15
      setMember
      push '44{N'
      function2 (r:2='}J') (r:1='this')
        push 0, '*r'
        getVariable
        push '}-B2'
        callMethod
        pop
        push '*r'
        getVariable
        push '+-(0', r:this
        setMember
        push r:this, '-iB=', r:'}J'
        setMember
        push r:this, '(W3', r:'}J', 1, '+7U K'
        new
        setMember
        push r:this, '(KA', 1, 1, r:this, '(W3'
        getMember
        push '18wU*'
        callMethod
        setMember
        push r:this, '32', r:this, '(KA'
        getMember
        push 1, '+7U K'
        new
        setMember
        push r:this, ';+', '44{N'
        getVariable
        push '4MvcB'
        getMember
        push '0o*6', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '5JH+', '44{N'
        getVariable
        push ',N)rb'
        getMember
        push 1, r:this, '32'
        getMember
        push '18wU*'
        callMethod
        setMember
        push r:this, '+x}tT', FALSE
        setMember
        push r:this, '8D2sD(', FALSE
        setMember
        push r:this, '7Qe;6', 0, 'Array'
        new
        setMember
        push r:this, '4w*6(', 0, 'Array'
        new
        setMember
        push r:this, '86{p(', 0, 'Array'
        new
        setMember
        push r:this, '{bUE)', 0, 'Array'
        new
        setMember
        push r:this, '5kABJ', 0, 'Array'
        new
        setMember
        push r:this, ';={0[', 0, 'Array'
        new
        setMember
        push r:this, '69-', 2
        setMember
        push r:this, '0G-c,(', 800
        setMember
        push r:this, '(qH4}', 0
        setMember
        push r:this, '*Kzwx', 0
        setMember
        push r:this, '-_X}5', '$b', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15
        initArray
        push '$l', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15
        initArray
        push '$k', 0, 0, 0, 0, 4
        initArray
        push '$d', NULL, 4
        initObject
        setMember
        push 4
        setRegister r:3
        pop
        push 30
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        branch label175
       label174:
        push r:5
        increment
        setRegister r:5
        pop
       label175:
        push r:5, r:3
        lessThan
        not
        branchIfTrue label176
        push NULL, 1, '2SqQj'
        new
        setRegister r:6
        pop
        push r:5, r:3
        divide
        push 6.28
        multiply
        setRegister r:7
        pop
        push r:6, '((', '*r'
        getVariable
        push '=OA'
        getMember
        push 0.5
        multiply
        push r:7, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:4
        multiply
        add
        setMember
        push r:6, ')(', '*r'
        getVariable
        push '*OA'
        getMember
        push 0.5
        multiply
        push r:7, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:4
        multiply
        add
        setMember
        push r:6, '3=', r:6, ' D3Z,'
        getMember
        setMember
        branch label174
       label176:
        push 0, 1, r:this, '5Hy6b'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '5Hy6b'
      function2 (r:2='7') (r:1='this')
        push r:this, '=kIA', r:'7'
        setMember
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label177
        push r:0, 1
        strictEquals
        branchIfTrue label178
        branch label179
       label177:
        push r:this, ';+'
        getMember
        push 'onPress', ';b_Jn', r:this, 2, '3Wt'
        getVariable
        push 'callback'
        callMethod
        setMember
        push r:this, ';+'
        getMember
        push 'onRelease', '=}X;A(', r:this, 2, '3Wt'
        getVariable
        push 'callback'
        callMethod
        setMember
        branch label179
       label178:
        branch label179
       label179:
      end // of function 

      setMember
      push r:1, '0D 6'
      function2 () (r:1='this')
        push 1, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        setRegister r:2
        pop
        push 1
        setRegister r:3
        pop
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push r:3
        greaterThan
        not
        branchIfTrue label180
        push '{-kxL'
        getVariable
        push '-V;B', r:3
        setMember
       label180:
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push 0
        setRegister r:4
        pop
        branch label182
       label181:
        push r:4
        increment
        setRegister r:4
        pop
       label182:
        push r:4, r:2
        lessThan
        not
        branchIfTrue label212
        push 0, r:this, '5JH+'
        getMember
        push 'clear'
        callMethod
        pop
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label183
        push r:0, 1
        strictEquals
        branchIfTrue label202
        branch label203
       label183:
        push r:this, '+x}tT'
        getMember
        not
        branchIfTrue label188
        push 0, r:this, '*y[P8('
        callMethod
        pop
        push r:this, ';+'
        getMember
        push '_xmouse'
        getMember
        push 0
        lessThan
        dup
        branchIfTrue label184
        pop
        push r:this, ';+'
        getMember
        push '_xmouse'
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        greaterThan
       label184:
        dup
        branchIfTrue label185
        pop
        push r:this, ';+'
        getMember
        push '_ymouse'
        getMember
        push 0
        lessThan
       label185:
        dup
        branchIfTrue label186
        pop
        push r:this, ';+'
        getMember
        push '_ymouse'
        getMember
        push '*r'
        getVariable
        push '*OA'
        getMember
        greaterThan
       label186:
        not
        branchIfTrue label187
        push 0, r:this, '=}X;A('
        callMethod
        pop
       label187:
        branch label190
       label188:
        push r:this, '3ljEs'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label190
        push r:this, '3ljEs', r:this, '3ljEs'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        add
        setMember
        push r:this, ' JJ'
        getMember
        push '(('
        getMember
        push r:this, ';+'
        getMember
        push '_xmouse'
        getMember
        subtract
        setRegister r:5
        pop
        push r:this, ' JJ'
        getMember
        push ')('
        getMember
        push r:this, ';+'
        getMember
        push '_ymouse'
        getMember
        subtract
        setRegister r:6
        pop
        push r:5, r:5
        multiply
        push r:6, r:6
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        setRegister r:7
        pop
        push r:this, '3ljEs'
        getMember
        push 2
        greaterThan
        dup
        not
        branchIfTrue label189
        pop
        push r:7, 30
        greaterThan
       label189:
        not
        branchIfTrue label190
        push r:this, '+x}tT', TRUE
        setMember
       label190:
        push 'Key'
        getVariable
        push 'ENTER'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label195
        push r:this, '8D2sD('
        getMember
        not
        not
        branchIfTrue label194
        push 0
        setRegister r:8
        pop
        branch label192
       label191:
        push r:8
        increment
        setRegister r:8
        pop
       label192:
        push r:8, r:this, '4w*6('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label193
        push r:this, '4w*6('
        getMember
        push r:8
        getMember
        setRegister r:9
        pop
        push 0, r:9, '1YWq6'
        callMethod
        pop
        branch label191
       label193:
        push r:this, '8D2sD(', TRUE
        setMember
       label194:
        branch label199
       label195:
        push r:this, '8D2sD('
        getMember
        not
        branchIfTrue label199
        push 0
        setRegister r:10
        pop
        branch label197
       label196:
        push r:10
        increment
        setRegister r:10
        pop
       label197:
        push r:10, r:this, '4w*6('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label198
        push r:this, '4w*6('
        getMember
        push r:10
        getMember
        setRegister r:11
        pop
        push 0, r:11, '3LyoG('
        callMethod
        pop
        branch label196
       label198:
        push r:this, '8D2sD(', FALSE
        setMember
       label199:
        push '*r'
        getVariable
        push '(Gr+(('
        getMember
        push 0
        equals
        not
        branchIfTrue label200
        push r:this, '*Kzwx', r:this, '*Kzwx'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        add
        setMember
        push r:this, '*Kzwx'
        getMember
        push '44{N'
        getVariable
        push ',z7N ('
        getMember
        push r:this, '5kABJ'
        getMember
        push 'length'
        getMember
        getMember
        lessThan
        not
        not
        branchIfTrue label200
        push 0, r:this, '6iT8k'
        callMethod
        pop
       label200:
        push 0, r:this, '[VeKO'
        callMethod
        pop
        push r:this, '4w*6('
        getMember
        push 'length'
        getMember
        push 0
        equals
        not
        branchIfTrue label201
        push r:this, '-_X}5'
        getMember
        push '$d', r:this, '69-'
        getMember
        int
        setMember
        push r:this, '-_X}5'
        getMember
        push 1, ';ndCG'
        getVariable
        push '7T4cF('
        callMethod
        pop
        push r:this, '=kIA', 1
        setMember
        push r:this, '*Kzwx', 0
        setMember
        push 0, r:this, '6iT8k'
        callMethod
        pop
       label201:
        branch label203
       label202:
        branch label203
       label203:
        push r:this, '69-', r:this, '69-'
        getMember
        push '*r'
        getVariable
        push ';S{*V'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push 0, r:this, '+adIn'
        callMethod
        pop
        push 'Key'
        getVariable
        push 'SPACE'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label207
        push r:this, '0yixR'
        getMember
        not
        branchIfTrue label206
        push '*r'
        getVariable
        push '=enbD'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label204
        push r:0, 1
        strictEquals
        branchIfTrue label205
        branch label206
       label204:
        push 0, r:this, '*id{7('
        callMethod
        pop
        branch label206
       label205:
        push 0, r:this, '),BZc'
        callMethod
        pop
        branch label206
       label206:
        push r:this, '0yixR', FALSE
        setMember
        branch label208
       label207:
        push r:this, '0yixR', TRUE
        setMember
       label208:
        push 0, r:this, '6,Ld)('
        callMethod
        pop
        push 0, r:this, '7Qe;6'
        getMember
        push 'duplicate'
        callMethod
        setRegister r:12
        pop
        push 0
        setRegister r:13
        pop
        branch label210
       label209:
        push r:13
        increment
        setRegister r:13
        pop
       label210:
        push r:13, r:12, 'length'
        getMember
        lessThan
        not
        branchIfTrue label211
        push 0, r:12, r:13
        getMember
        push '87vE7('
        callMethod
        pop
        branch label209
       label211:
        branch label181
       label212:
      end // of function 

      setMember
      push r:1, '+adIn'
      function2 () (r:1='this')
        push r:this, '0G-c,('
        getMember
        push 0
        lessThan
        not
        branchIfTrue label216
        push 20, r:this, '69-'
        getMember
        add
        push 1, '*r'
        getVariable
        push '77DFL('
        callMethod
        setRegister r:2
        pop
       label213:
        push r:this, '(qH4}'
        getMember
        push r:this, '69-'
        getMember
        lessThan
        not
        branchIfTrue label215
        push 0, r:this, '83(+Y'
        callMethod
        setRegister r:3
        pop
        push r:3, NULL
        equals
        not
        not
        branchIfTrue label214
        push r:3, '((', r:2, '(('
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 20
        multiply
        add
        setMember
        push r:3, ')(', r:2, ')('
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 20
        multiply
        add
        setMember
        push r:3, '9O*r', '((', '*r'
        getVariable
        push '=OA'
        getMember
        push 0.5
        multiply
        push ')(', '*r'
        getVariable
        push '*OA'
        getMember
        push 0.5
        multiply
        push 2
        initObject
        push 1, r:3, ')153L'
        callMethod
        setMember
        push r:3, '3=', r:3, ' D3Z,'
        getMember
        setMember
        push r:this, '(qH4}', r:this, '(qH4}'
        getMember
        push r:3, ')vYj7'
        getMember
        add
        setMember
       label214:
        branch label213
       label215:
        push r:this, '0G-c,(', 350, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 150
        multiply
        add
        setMember
        branch label218
       label216:
        push 1
        setRegister r:4
        pop
        push r:this, '86{p('
        getMember
        push 'length'
        getMember
        push 0
        equals
        not
        branchIfTrue label217
        push r:4, 10
        add
        setRegister r:4
        pop
       label217:
        push r:this, '0G-c,(', r:this, '0G-c,('
        getMember
        push r:4, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        setMember
       label218:
      end // of function 

      setMember
      push r:1, '[VeKO'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label220
       label219:
        push r:2
        increment
        setRegister r:2
        pop
       label220:
        push r:2, r:this, ';={0['
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label234
        push r:this, ';={0['
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3, '2VhU6', r:3, '2VhU6'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:3, '2VhU6'
        getMember
        push 10
        lessThan
        not
        branchIfTrue label221
        push r:3, '[X'
        getMember
        push '-iB='
        getMember
        push '_xscale', r:3, '2VhU6'
        getMember
        push 10
        multiply
        setMember
        push r:3, '[X'
        getMember
        push '-iB='
        getMember
        push '_yscale', r:3, '[X'
        getMember
        push '-iB='
        getMember
        push '_xscale'
        getMember
        setMember
       label221:
        push r:3, '2VhU6'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label222
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$l'
        getMember
        push r:3, 'type'
        getMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$l'
        getMember
        push r:3, 'type'
        getMember
        getMember
        increment
        setMember
        push 0, r:3, '[X'
        getMember
        push '9T54'
        callMethod
        pop
        push 1, r:2, r:2
        decrement
        setRegister r:2
        pop
        push 2, r:this, ';={0['
        getMember
        push 'splice'
        callMethod
        pop
        branch label233
       label222:
        push 0
        setRegister r:4
        pop
        branch label224
       label223:
        push r:4
        increment
        setRegister r:4
        pop
       label224:
        push r:4, r:this, '4w*6('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label233
        push r:this, '4w*6('
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push r:3, '[X'
        getMember
        push 1, r:5, '}1A{_'
        callMethod
        push 10, r:5, ']oH'
        getMember
        add
        lessThan
        not
        branchIfTrue label232
        push r:3, 'type'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label225
        push r:0, 1
        strictEquals
        branchIfTrue label226
        push r:0, 2
        strictEquals
        branchIfTrue label227
        push r:0, 3
        strictEquals
        branchIfTrue label228
        push r:0, 4
        strictEquals
        branchIfTrue label229
        push r:0, 10
        strictEquals
        branchIfTrue label230
        push r:0, 11
        strictEquals
        branchIfTrue label230
        push r:0, 12
        strictEquals
        branchIfTrue label230
        push r:0, 13
        strictEquals
        branchIfTrue label230
        branch label231
       label225:
        push '*r'
        getVariable
        push '4]1L'
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        branch label231
       label226:
        push '*r'
        getVariable
        push '2Xl5B'
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        branch label231
       label227:
        push '*r'
        getVariable
        push '99l8B'
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        branch label231
       label228:
        push r:this, '*Kzwx', r:this, '*Kzwx'
        getMember
        push 1000
        add
        setMember
        branch label231
       label229:
        push r:this, '*Kzwx', r:this, '*Kzwx'
        getMember
        push 5000
        add
        setMember
        branch label231
       label230:
        push r:3, '[X'
        getMember
        push r:3, 'type'
        getMember
        push 10
        subtract
        push 2, r:this, '+Yuv4('
        callMethod
        pop
        branch label231
       label231:
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$b'
        getMember
        push r:3, 'type'
        getMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$b'
        getMember
        push r:3, 'type'
        getMember
        getMember
        increment
        setMember
        push 0, r:3, '[X'
        getMember
        push '9T54'
        callMethod
        pop
        push 1, r:2, r:2
        decrement
        setRegister r:2
        pop
        push 2, r:this, ';={0['
        getMember
        push 'splice'
        callMethod
        pop
        branch label233
       label232:
        branch label223
       label233:
        branch label219
       label234:
      end // of function 

      setMember
      push r:1, '6,Ld)('
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label236
       label235:
        push r:2
        increment
        setRegister r:2
        pop
       label236:
        push r:2, r:this, '{bUE)'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label242
        push r:this, '{bUE)'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:2, 1
        add
        setRegister r:4
        pop
        branch label238
       label237:
        push r:4
        increment
        setRegister r:4
        pop
       label238:
        push r:4, r:this, '{bUE)'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label241
        push r:this, '{bUE)'
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push r:5, 1, r:3, '}1A{_'
        callMethod
        push r:5, ']oH'
        getMember
        push r:3, ']oH'
        getMember
        add
        subtract
        setRegister r:6
        pop
        push r:6, 0
        lessThan
        not
        branchIfTrue label240
        push r:5, 1, r:3, ')153L'
        callMethod
        setRegister r:7
        pop
        push r:7, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:8
        pop
        push r:7, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:9
        pop
        push r:3, '9Z 6'
        getMember
        push r:3, '9Z 6'
        getMember
        push r:5, '9Z 6'
        getMember
        add
        divide
        setRegister r:10
        pop
        push r:3, '9Z 6'
        getMember
        push r:5, '9Z 6'
        getMember
        add
        push 0
        equals
        not
        branchIfTrue label239
        push 0.5
        setRegister r:10
        pop
       label239:
        push r:3, '((', r:3, '(('
        getMember
        push r:8, r:6
        multiply
        push r:10
        multiply
        add
        setMember
        push r:3, ')(', r:3, ')('
        getMember
        push r:9, r:6
        multiply
        push r:10
        multiply
        add
        setMember
        push r:5, '((', r:5, '(('
        getMember
        push r:8, r:6
        multiply
        push 1, r:10
        subtract
        multiply
        subtract
        setMember
        push r:5, ')(', r:5, ')('
        getMember
        push r:9, r:6
        multiply
        push 1, r:10
        subtract
        multiply
        subtract
        setMember
       label240:
        branch label237
       label241:
        branch label235
       label242:
      end // of function 

      setMember
      push r:1, 'scroll'
      function2 () (r:1='this')
        push 2, r:this, '-iB='
        getMember
        push '_xmouse'
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 0.5
        multiply
        subtract
        multiply
        push '*r'
        getVariable
        push '=OA'
        getMember
        divide
        setRegister r:2
        pop
        push 2, r:this, '-iB='
        getMember
        push '_ymouse'
        getMember
        push '*r'
        getVariable
        push '*OA'
        getMember
        push 0.5
        multiply
        subtract
        multiply
        push '*r'
        getVariable
        push '*OA'
        getMember
        divide
        setRegister r:3
        pop
        push 2, r:2, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        push r:2, r:2, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        divide
        multiply
        setRegister r:2
        pop
        push 2, r:3, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        push r:3, r:3, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        divide
        multiply
        setRegister r:3
        pop
        push 0, r:2
        subtract
        push '*r'
        getVariable
        push '=OA'
        getMember
        multiply
        push 0.5
        multiply
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 0.5
        multiply
        subtract
        setRegister r:4
        pop
        push 0, r:3
        subtract
        push '*r'
        getVariable
        push '*OA'
        getMember
        multiply
        push 0.5
        multiply
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 0.5
        multiply
        subtract
        setRegister r:5
        pop
        push r:4, r:this, '(KA'
        getMember
        push '_x'
        getMember
        subtract
        setRegister r:6
        pop
        push r:5, r:this, '(KA'
        getMember
        push '_y'
        getMember
        subtract
        setRegister r:7
        pop
        push 0.1
        setRegister r:8
        pop
        push r:this, '(KA'
        getMember
        push '_x', r:this, '(KA'
        getMember
        push '_x'
        getMember
        push r:6, r:8
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '(KA'
        getMember
        push '_y', r:this, '(KA'
        getMember
        push '_y'
        getMember
        push r:7, r:8
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
      end // of function 

      setMember
      push r:1, '6iT8k'
      function2 () (r:1='this')
        push 4
        setRegister r:2
        pop
       label243:
        push r:this, '5kABJ'
        getMember
        push 'length'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label244
        push 0, 0, r:this, '5kABJ'
        getMember
        push 'pop'
        callMethod
        push 'removeMovieClip'
        callMethod
        pop
        branch label243
       label244:
        push 0
        setRegister r:3
        pop
        branch label246
       label245:
        push r:3
        increment
        setRegister r:3
        pop
       label246:
        push r:3, '44{N'
        getVariable
        push ',z7N ('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label248
        push '44{N'
        getVariable
        push ',z7N ('
        getMember
        push r:3
        getMember
        push r:this, '*Kzwx'
        getMember
        greaterThan
        not
        branchIfTrue label247
        push UNDEF
        return
       label247:
        push '44{N'
        getVariable
        push '4QvZJ'
        getMember
        push '(UCsj', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:4
        pop
        push r:3, 1
        add
        toString
        push 1, r:4, 'gotoAndStop'
        callMethod
        pop
        push r:4, '_x', r:2, r:3, 20, r:2
        add
        multiply
        add
        setMember
        push r:4, '_y', r:2
        setMember
        push r:4, 1, r:this, '5kABJ'
        getMember
        push 'push'
        callMethod
        pop
        branch label245
       label248:
      end // of function 

      setMember
      push r:1, '+Yuv4('
      function2 (r:2='7', r:3='*') (r:1='this')
        push NULL
        setRegister r:4
        pop
        push r:'*', NULL
        equals
        not
        branchIfTrue label249
        push r:this, '4w*6('
        getMember
        push 1, r:this, ' ngjU'
        callMethod
        setRegister r:'*'
        pop
       label249:
        push r:'7'
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label250
        push r:0, 1
        strictEquals
        branchIfTrue label251
        push r:0, 2
        strictEquals
        branchIfTrue label252
        push r:0, 3
        strictEquals
        branchIfTrue label253
        branch label254
       label250:
        push NULL, 1, '2SqQj'
        new
        setRegister r:4
        pop
        branch label254
       label251:
        push NULL, 1, '7SlbE'
        new
        setRegister r:4
        pop
        branch label254
       label252:
        push NULL, 1, '2S28H'
        new
        setRegister r:4
        pop
        branch label254
       label253:
        push NULL, 1, ']V*R'
        new
        setRegister r:4
        pop
        branch label254
       label254:
        push r:4, '((', r:'*', '(('
        getMember
        setMember
        push r:4, ')(', r:'*', ')('
        getMember
        setMember
        push r:4, '3=', r:4, ' D3Z,'
        getMember
        setMember
        push r:4, ',d951', 100
        setMember
        push '468I'
        getVariable
        push '-NJ'
        getMember
        push 'length'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label255
        push 0, r:4, ' oURB('
        callMethod
        pop
       label255:
        push r:this, '*Kzwx', r:this, '*Kzwx'
        getMember
        push '44{N'
        getVariable
        push ',z7N ('
        getMember
        push r:'7'
        getMember
        subtract
        setMember
        push 0, r:this, '6iT8k'
        callMethod
        pop
        push '44{N'
        getVariable
        push '2awen'
        getMember
        push '2 EA,(', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:5
        pop
        push r:5, '_x', r:4, '(('
        getMember
        setMember
        push r:5, '_y', r:4, ')('
        getMember
        setMember
        push r:5, '_xscale', r:4, ']oH'
        getMember
        push 2.5
        multiply
        setMember
        push r:5, '_yscale', r:4, ']oH'
        getMember
        push 2.5
        multiply
        setMember
        push 8
        setRegister r:6
        pop
        push 0.7
        setRegister r:7
        pop
        push 0
        setRegister r:8
        pop
        branch label257
       label256:
        push r:8
        increment
        setRegister r:8
        pop
       label257:
        push r:8, 12
        lessThan
        not
        branchIfTrue label258
        push r:8, r:6
        divide
        push 6.28
        multiply
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 0.2
        multiply
        add
        setRegister r:9
        pop
        push r:9, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:10
        pop
        push r:9, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:11
        pop
        push 2, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 1.5
        multiply
        add
        setRegister r:12
        pop
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push '=MR4L(', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:13
        pop
        push r:13, '((', r:4, '(('
        getMember
        push r:10, r:4, ']oH'
        getMember
        multiply
        push r:7
        multiply
        add
        setMember
        push r:13, ')(', r:4, ')('
        getMember
        push r:11, r:4, ']oH'
        getMember
        multiply
        push r:7
        multiply
        add
        setMember
        push r:13, '[b', r:10, r:12
        multiply
        setMember
        push r:13, ']b', r:11, r:12
        multiply
        setMember
        push r:13, '6b', 30, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        multiply
        setMember
        push r:13, '+{eA+', 0.92
        setMember
        push r:13, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:13, '849kV', 0
        setMember
        push 80, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 40
        multiply
        add
        push 1, r:13, '3BjX_'
        callMethod
        pop
        push r:13, '-iB='
        getMember
        push '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        branch label256
       label258:
      end // of function 

      setMember
      push r:1, ' ngjU'
      function2 (r:2='list') (r:1='this')
        push 1, 0
        divide
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        push 1, 0
        divide
        setRegister r:5
        pop
        push 0
        setRegister r:6
        pop
        push 0
        setRegister r:7
        pop
        branch label260
       label259:
        push r:7
        increment
        setRegister r:7
        pop
       label260:
        push r:7, r:list, 'length'
        getMember
        lessThan
        not
        branchIfTrue label261
        push r:list, r:7
        getMember
        setRegister r:8
        pop
        push r:8, '(('
        getMember
        push r:3, 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:3
        pop
        push r:8, '(('
        getMember
        push r:4, 2, 'Math'
        getVariable
        push 'max'
        callMethod
        setRegister r:4
        pop
        push r:8, ')('
        getMember
        push r:5, 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:5
        pop
        push r:8, ')('
        getMember
        push r:6, 2, 'Math'
        getVariable
        push 'max'
        callMethod
        setRegister r:6
        pop
        branch label259
       label261:
        push '((', r:3, r:4, r:3
        subtract
        push 0.5
        multiply
        add
        push ')(', r:5, r:6, r:5
        subtract
        push 0.5
        multiply
        add
        push 2
        initObject
        return
      end // of function 

      setMember
      push r:1, '83(+Y'
      function2 () (r:1='this')
        push 2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label262
        push NULL, 1, '-y6}J'
        new
        return
       label262:
        push 6, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        dup
        not
        branchIfTrue label263
        pop
        push r:this, '69-'
        getMember
        push 5
        greaterThan
       label263:
        not
        branchIfTrue label264
        push NULL, 1, '-6ww0('
        new
        return
       label264:
        push 48, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        dup
        not
        branchIfTrue label265
        pop
        push r:this, '69-'
        getMember
        push 24
        greaterThan
       label265:
        not
        branchIfTrue label266
        push NULL, 1, ' p}WK('
        new
        return
       label266:
        push 32, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        dup
        not
        branchIfTrue label267
        pop
        push r:this, '69-'
        getMember
        push 38
        greaterThan
       label267:
        not
        branchIfTrue label268
        push NULL, 1, ')fbO1'
        new
        return
       label268:
        push NULL
        return
      end // of function 

      setMember
      push r:1, ';b_Jn'
      function2 () (r:1='this')
        push r:this, '3ljEs', 0
        setMember
        push r:this, ' JJ', '((', r:this, ';+'
        getMember
        push '_xmouse'
        getMember
        push ')(', r:this, ';+'
        getMember
        push '_ymouse'
        getMember
        push 2
        initObject
        setMember
      end // of function 

      setMember
      push r:1, '=}X;A('
      function2 () (r:1='this')
        push r:this, '3ljEs', NULL
        setMember
        push r:this, '+x}tT'
        getMember
        not
        branchIfTrue label269
        push 0, r:this, ')Wnb1('
        callMethod
        pop
        push r:this, '+x}tT', FALSE
        setMember
        push UNDEF
        return
       label269:
        push 4
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label271
       label270:
        push r:3
        increment
        setRegister r:3
        pop
       label271:
        push r:3, r:this, '5kABJ'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label276
        push r:2, r:3, 20, r:2
        add
        multiply
        add
        setRegister r:4
        pop
        push r:2
        setRegister r:5
        pop
        push r:2, r:3, 20, r:2
        add
        multiply
        add
        push 20
        add
        setRegister r:6
        pop
        push r:2, 20
        add
        setRegister r:7
        pop
        push r:this, ';+'
        getMember
        push '_xmouse'
        getMember
        push r:4
        greaterThan
        dup
        not
        branchIfTrue label272
        pop
        push r:this, ';+'
        getMember
        push '_xmouse'
        getMember
        push r:6
        lessThan
       label272:
        dup
        not
        branchIfTrue label273
        pop
        push r:this, ';+'
        getMember
        push '_ymouse'
        getMember
        push r:5
        greaterThan
       label273:
        dup
        not
        branchIfTrue label274
        pop
        push r:this, ';+'
        getMember
        push '_ymouse'
        getMember
        push r:7
        lessThan
       label274:
        not
        branchIfTrue label275
        push NULL, r:3, 2, r:this, '+Yuv4('
        callMethod
        pop
        push UNDEF
        return
       label275:
        branch label270
       label276:
        push '*r'
        getVariable
        push '7aj=S'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label277
        push r:0, 1
        strictEquals
        branchIfTrue label280
        push r:0, 2
        strictEquals
        branchIfTrue label282
        branch label284
       label277:
        push 0, r:this, ' XY9U'
        callMethod
        not
        dup
        not
        branchIfTrue label278
        pop
        push '468I'
        getVariable
        push '-NJ'
        getMember
        push 'length'
        getMember
        push 0
        greaterThan
       label278:
        not
        branchIfTrue label279
        push 0, r:this, '8*+-k'
        callMethod
        pop
        push 'Key'
        getVariable
        push 'SPACE'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        not
        branchIfTrue label279
        push 0, '468I'
        getVariable
        push '1{a1J('
        callMethod
        pop
       label279:
        branch label284
       label280:
        push 0, r:this, ' XY9U'
        callMethod
        not
        not
        branchIfTrue label281
        push 0, r:this, '8*+-k'
        callMethod
        pop
       label281:
        branch label284
       label282:
        push 0, r:this, ' XY9U'
        callMethod
        not
        not
        branchIfTrue label283
        push 0, r:this, '8*+-k'
        callMethod
        pop
       label283:
        branch label284
       label284:
      end // of function 

      setMember
      push r:1, '*id{7('
      function2 () (r:1='this')
        push 0, '468I'
        getVariable
        push '1{a1J('
        callMethod
        pop
        push 0
        setRegister r:2
        pop
        branch label286
       label285:
        push r:2
        increment
        setRegister r:2
        pop
       label286:
        push r:2, r:this, '4w*6('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label288
        push r:this, '4w*6('
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3, '8,EHH'
        getMember
        not
        branchIfTrue label287
        push 0, r:3, ' oURB('
        callMethod
        pop
       label287:
        branch label285
       label288:
      end // of function 

      setMember
      push r:1, '),BZc'
      function2 () (r:1='this')
        push 0, '468I'
        getVariable
        push '-NJ'
        getMember
        push 'duplicate'
        callMethod
        setRegister r:2
        pop
        push 0, '468I'
        getVariable
        push '1{a1J('
        callMethod
        pop
        push 0
        setRegister r:3
        pop
        branch label290
       label289:
        push r:3
        increment
        setRegister r:3
        pop
       label290:
        push r:3, r:this, '4w*6('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label296
        push r:this, '4w*6('
        getMember
        push r:3
        getMember
        setRegister r:4
        pop
        push TRUE
        setRegister r:5
        pop
        push 0
        setRegister r:6
        pop
        branch label292
       label291:
        push r:6
        increment
        setRegister r:6
        pop
       label292:
        push r:6, r:2, 'length'
        getMember
        lessThan
        not
        branchIfTrue label294
        push r:4, r:2, r:6
        getMember
        equals
        not
        branchIfTrue label293
        push FALSE
        setRegister r:5
        pop
        push 1, r:6, r:6
        decrement
        setRegister r:6
        pop
        push 2, r:2, 'splice'
        callMethod
        pop
        branch label294
       label293:
        branch label291
       label294:
        push r:5
        not
        branchIfTrue label295
        push 0, r:4, ' oURB('
        callMethod
        pop
       label295:
        branch label289
       label296:
      end // of function 

      setMember
      push r:1, ' XY9U'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label298
       label297:
        push r:2
        increment
        setRegister r:2
        pop
       label298:
        push r:2, r:this, '4w*6('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label300
        push r:this, '4w*6('
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push '((', r:this, ';+'
        getMember
        push '_xmouse'
        getMember
        push ')(', r:this, ';+'
        getMember
        push '_ymouse'
        getMember
        push 2
        initObject
        push 1, r:3, '}1A{_'
        callMethod
        push r:3, ']oH'
        getMember
        push '*r'
        getVariable
        push '*[NCa'
        getMember
        multiply
        lessThan
        not
        branchIfTrue label299
        push 0, r:3, '4_y{7('
        callMethod
        pop
        push TRUE
        return
       label299:
        branch label297
       label300:
        push FALSE
        return
      end // of function 

      setMember
      push r:1, '8*+-k'
      function2 () (r:1='this')
        push '468I'
        getVariable
        push '-NJ'
        getMember
        push 1, r:this, ' ngjU'
        callMethod
        setRegister r:2
        pop
        push 0.8
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        branch label302
       label301:
        push r:4
        increment
        setRegister r:4
        pop
       label302:
        push r:4, '468I'
        getVariable
        push '-NJ'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label303
        push '468I'
        getVariable
        push '-NJ'
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push '((', '*r'
        getVariable
        push '=OA'
        getMember
        push r:5, ']oH'
        getMember
        subtract
        push r:this, ';+'
        getMember
        push '_xmouse'
        getMember
        push r:2, '(('
        getMember
        push r:5, '(('
        getMember
        subtract
        push r:3
        multiply
        subtract
        push r:5, ']oH'
        getMember
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        push ')(', '*r'
        getVariable
        push '*OA'
        getMember
        push r:5, ']oH'
        getMember
        subtract
        push r:this, ';+'
        getMember
        push '_ymouse'
        getMember
        push r:2, ')('
        getMember
        push r:5, ')('
        getMember
        subtract
        push r:3
        multiply
        subtract
        push r:5, ']oH'
        getMember
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        push ']oH', NULL, 3
        initObject
        setRegister r:6
        pop
        push r:6, 1, r:5, ';gvo('
        callMethod
        pop
        branch label301
       label303:
      end // of function 

      setMember
      push r:1, '*y[P8('
      function2 () (r:1='this')
        push 15, 65280, 6, 3, r:this, '5JH+'
        getMember
        push 'lineStyle'
        callMethod
        pop
        push r:this, ';+'
        getMember
        push '_ymouse'
        getMember
        push r:this, ';+'
        getMember
        push '_xmouse'
        getMember
        push 2, r:this, '5JH+'
        getMember
        push 'moveTo'
        callMethod
        pop
        push r:this, ' JJ'
        getMember
        push ')('
        getMember
        push r:this, ';+'
        getMember
        push '_xmouse'
        getMember
        push 2, r:this, '5JH+'
        getMember
        push 'lineTo'
        callMethod
        pop
        push r:this, ' JJ'
        getMember
        push ')('
        getMember
        push r:this, ' JJ'
        getMember
        push '(('
        getMember
        push 2, r:this, '5JH+'
        getMember
        push 'lineTo'
        callMethod
        pop
        push r:this, ';+'
        getMember
        push '_ymouse'
        getMember
        push r:this, ' JJ'
        getMember
        push '(('
        getMember
        push 2, r:this, '5JH+'
        getMember
        push 'lineTo'
        callMethod
        pop
        push r:this, ';+'
        getMember
        push '_ymouse'
        getMember
        push r:this, ';+'
        getMember
        push '_xmouse'
        getMember
        push 2, r:this, '5JH+'
        getMember
        push 'lineTo'
        callMethod
        pop
        push 100, 10092441, 1, 3, r:this, '5JH+'
        getMember
        push 'lineStyle'
        callMethod
        pop
        push r:this, ';+'
        getMember
        push '_ymouse'
        getMember
        push r:this, ';+'
        getMember
        push '_xmouse'
        getMember
        push 2, r:this, '5JH+'
        getMember
        push 'moveTo'
        callMethod
        pop
        push r:this, ' JJ'
        getMember
        push ')('
        getMember
        push r:this, ';+'
        getMember
        push '_xmouse'
        getMember
        push 2, r:this, '5JH+'
        getMember
        push 'lineTo'
        callMethod
        pop
        push r:this, ' JJ'
        getMember
        push ')('
        getMember
        push r:this, ' JJ'
        getMember
        push '(('
        getMember
        push 2, r:this, '5JH+'
        getMember
        push 'lineTo'
        callMethod
        pop
        push r:this, ';+'
        getMember
        push '_ymouse'
        getMember
        push r:this, ' JJ'
        getMember
        push '(('
        getMember
        push 2, r:this, '5JH+'
        getMember
        push 'lineTo'
        callMethod
        pop
        push r:this, ';+'
        getMember
        push '_ymouse'
        getMember
        push r:this, ';+'
        getMember
        push '_xmouse'
        getMember
        push 2, r:this, '5JH+'
        getMember
        push 'lineTo'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ')Wnb1('
      function2 () (r:1='this')
        push 0, '468I'
        getVariable
        push '1{a1J('
        callMethod
        pop
        push 0
        setRegister r:2
        pop
        branch label305
       label304:
        push r:2
        increment
        setRegister r:2
        pop
       label305:
        push r:2, r:this, '4w*6('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label310
        push r:this, '4w*6('
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3, '8,EHH'
        getMember
        not
        branchIfTrue label309
        push r:this, ';+'
        getMember
        push '_xmouse'
        getMember
        push r:this, ' JJ'
        getMember
        push '(('
        getMember
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:4
        pop
        push r:this, ';+'
        getMember
        push '_xmouse'
        getMember
        push r:this, ' JJ'
        getMember
        push '(('
        getMember
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        setRegister r:5
        pop
        push r:this, ';+'
        getMember
        push '_ymouse'
        getMember
        push r:this, ' JJ'
        getMember
        push ')('
        getMember
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:6
        pop
        push r:this, ';+'
        getMember
        push '_ymouse'
        getMember
        push r:this, ' JJ'
        getMember
        push ')('
        getMember
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        setRegister r:7
        pop
        push r:3, ']oH'
        getMember
        push '*r'
        getVariable
        push '*[NCa'
        getMember
        multiply
        setRegister r:8
        pop
        push r:3, '(('
        getMember
        push r:8
        add
        push r:4
        greaterThan
        dup
        not
        branchIfTrue label306
        pop
        push r:3, '(('
        getMember
        push r:8
        subtract
        push r:5
        lessThan
       label306:
        dup
        not
        branchIfTrue label307
        pop
        push r:3, ')('
        getMember
        push r:8
        add
        push r:6
        greaterThan
       label307:
        dup
        not
        branchIfTrue label308
        pop
        push r:3, ')('
        getMember
        push r:8
        subtract
        push r:7
        lessThan
       label308:
        not
        branchIfTrue label309
        push 0, r:3, ' oURB('
        callMethod
        pop
       label309:
        branch label304
       label310:
      end // of function 

      setMember
      push r:1, '9t1r1'
      function2 () (r:1='this')
        push 'onKeyDown', ']668C(', r:this, 2, '3Wt'
        getVariable
        push 'callback'
        callMethod
        push 'onKeyUp', '=(D=5', r:this, 2, '3Wt'
        getVariable
        push 'callback'
        callMethod
        push 2
        initObject
        setRegister r:2
        pop
        push r:2, 1, 'Key'
        getVariable
        push 'addListener'
        callMethod
        pop
        push r:this, '=11Rh', TRUE
        setMember
      end // of function 

      setMember
      push r:1, ']668C('
      function2 () (r:1='this')
        push r:this, '=11Rh'
        getMember
        not
        branchIfTrue label319
        push 0, 'Key'
        getVariable
        push 'getCode'
        callMethod
        setRegister r:2
        pop
        push r:2, 96
        lessThan
        not
        dup
        not
        branchIfTrue label311
        pop
        push r:2, 107
        lessThan
       label311:
        not
        branchIfTrue label319
        push 20, r:this, '69-'
        getMember
        add
        push 1, '*r'
        getVariable
        push '77DFL('
        callMethod
        setRegister r:3
        pop
        push NULL
        setRegister r:4
        pop
        push r:2
        setRegister r:0
        push 96
        strictEquals
        branchIfTrue label312
        push r:0, 97
        strictEquals
        branchIfTrue label313
        push r:0, 98
        strictEquals
        branchIfTrue label314
        push r:0, 99
        strictEquals
        branchIfTrue label315
        push r:0, 104
        strictEquals
        branchIfTrue label316
        push r:0, 105
        strictEquals
        branchIfTrue label317
        branch label318
       label312:
        push NULL, 1, '-y6}J'
        new
        setRegister r:4
        pop
        branch label318
       label313:
        push NULL, 1, '-6ww0('
        new
        setRegister r:4
        pop
        branch label318
       label314:
        push NULL, 1, ' p}WK('
        new
        setRegister r:4
        pop
        branch label318
       label315:
        push NULL, 1, ')fbO1'
        new
        setRegister r:4
        pop
        branch label318
       label316:
        push r:this, '69-', r:this, '69-'
        getMember
        increment
        setMember
        branch label318
       label317:
        push r:this, '*Kzwx', r:this, '*Kzwx'
        getMember
        push 10000
        add
        setMember
        push 0, r:this, '6iT8k'
        callMethod
        pop
        branch label318
       label318:
        push r:4, NULL
        equals
        not
        not
        branchIfTrue label319
        push r:4, '((', r:3, '(('
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 20
        multiply
        add
        setMember
        push r:4, ')(', r:3, ')('
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 20
        multiply
        add
        setMember
        push r:4, '9O*r', '((', '*r'
        getVariable
        push '=OA'
        getMember
        push 0.5
        multiply
        push ')(', '*r'
        getVariable
        push '*OA'
        getMember
        push 0.5
        multiply
        push 2
        initObject
        push 1, r:4, ')153L'
        callMethod
        setMember
        push r:4, '3=', r:4, ' D3Z,'
        getMember
        setMember
        push r:this, '(qH4}', r:this, '(qH4}'
        getMember
        push r:4, ')vYj7'
        getMember
        add
        setMember
       label319:
        push r:this, '=11Rh', FALSE
        setMember
      end // of function 

      setMember
      push r:1, '=(D=5'
      function2 () (r:1='this')
        push r:this, '=11Rh', TRUE
        setMember
      end // of function 

      setMember
      push r:0, '4MvcB', 1
      setMember
      push r:0, '(h4SU', 2
      setMember
      push r:0, '2awen', 3
      setMember
      push r:0, '(lpyk', 4
      setMember
      push r:0, '(8LH1', 5
      setMember
      push r:0, '-ar+C', 6
      setMember
      push r:0, '{YJfb', 7
      setMember
      push r:0, '-V6F2', 8
      setMember
      push r:0, ',N)rb', 9
      setMember
      push r:0, '4QvZJ', 10
      setMember
      push r:0, ',z7N (', 1500, 900, 500, 300, 4
      initArray
      setMember
      push '980Sb'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '}-B2'
      function2 (r:2='}J') (r:1='this')
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        not
        branchIfTrue label320
        push UNDEF
        return
       label320:
        push '980Sb'
        getVariable
        push ')2fr3', r:'}J'
        setMember
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        branchIfTrue label321
        push '980Sb'
        getVariable
        push '({B6', '980Sb'
        getVariable
        push ')2fr3'
        getMember
        push 1, '44{N'
        new
        setMember
       label321:
      end // of function 

      setMember
      push r:0, '0D 6'
      function2 () (r:1='this')
        push 0, '{-kxL'
        getVariable
        push '87vE7('
        callMethod
        pop
        push 0, '980Sb'
        getVariable
        push '({B6'
        getMember
        push '0D 6'
        callMethod
        pop
      end // of function 

      setMember
    end // of frame 0
  end // of defineMovieClip 381
  
  exportAssets
    381 as '90D*'
  end // of exportAssets
end
