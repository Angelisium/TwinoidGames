movie 'e3d28087fe6cd8d9c40cce306b749350.swf' compressed // flash 8, total frames: 1, frame rate: 40 fps, 700x480 px


  defineMovieClip 2 // total frames: 1
  end // of defineMovieClip 2

  defineMovieClip 5 // total frames: 1
  end // of defineMovieClip 5

  defineMovieClip 9 // total frames: 1
  end // of defineMovieClip 9

  defineMovieClip 11 // total frames: 30
  end // of defineMovieClip 11

  defineMovieClip 13 // total frames: 1
  end // of defineMovieClip 13

  defineMovieClip 15 // total frames: 1
  end // of defineMovieClip 15

  defineMovieClip 16 // total frames: 30
  end // of defineMovieClip 16

  defineMovieClip 18 // total frames: 1
  end // of defineMovieClip 18

  defineMovieClip 20 // total frames: 1
  end // of defineMovieClip 20

  defineMovieClip 21 // total frames: 30
  end // of defineMovieClip 21

  defineMovieClip 23 // total frames: 1
  end // of defineMovieClip 23

  defineMovieClip 25 // total frames: 1
  end // of defineMovieClip 25

  defineMovieClip 26 // total frames: 41
  end // of defineMovieClip 26

  defineMovieClip 28 // total frames: 30
  end // of defineMovieClip 28

  defineMovieClip 29 // total frames: 4
  end // of defineMovieClip 29
  
  exportAssets
    29 as '4B1W('
  end // of exportAssets

  defineMovieClip 31 // total frames: 1
  end // of defineMovieClip 31

  defineMovieClip 33 // total frames: 1
  end // of defineMovieClip 33

  defineMovieClip 35 // total frames: 1
  end // of defineMovieClip 35

  defineMovieClip 37 // total frames: 1
  end // of defineMovieClip 37

  defineMovieClip 38 // total frames: 11
  end // of defineMovieClip 38

  defineMovieClip 39 // total frames: 2
  end // of defineMovieClip 39
  
  exportAssets
    39 as '1(}ZT'
  end // of exportAssets

  defineMovieClip 54 // total frames: 18
  end // of defineMovieClip 54

  defineMovieClip 57 // total frames: 1
  end // of defineMovieClip 57

  defineMovieClip 74 // total frames: 18
  end // of defineMovieClip 74
  
  exportAssets
    74 as '-,=)'
  end // of exportAssets

  defineMovieClip 87 // total frames: 12
  end // of defineMovieClip 87

  defineMovieClip 94 // total frames: 13

    frame 12
      push 'this'
      getVariable
      removeClip
    end // of frame 12
  end // of defineMovieClip 94
  
  exportAssets
    94 as '[J}o8'
  end // of exportAssets

  defineMovieClip 102 // total frames: 7
  end // of defineMovieClip 102
  
  exportAssets
    102 as '9z09)'
  end // of exportAssets

  defineMovieClip 109 // total frames: 6
  end // of defineMovieClip 109

  defineMovieClip 112 // total frames: 1
  end // of defineMovieClip 112

  defineMovieClip 114 // total frames: 1
  end // of defineMovieClip 114

  defineMovieClip 115 // total frames: 1
  end // of defineMovieClip 115

  defineMovieClip 116 // total frames: 14
  end // of defineMovieClip 116
  
  exportAssets
    116 as '[5(-'
  end // of exportAssets

  defineMovieClip 118 // total frames: 1
  end // of defineMovieClip 118

  defineMovieClip 120 // total frames: 1
  end // of defineMovieClip 120

  defineMovieClip 122 // total frames: 1
  end // of defineMovieClip 122

  defineMovieClip 124 // total frames: 1
  end // of defineMovieClip 124

  defineMovieClip 126 // total frames: 1
  end // of defineMovieClip 126

  defineMovieClip 128 // total frames: 1
  end // of defineMovieClip 128

  defineMovieClip 129 // total frames: 26
  end // of defineMovieClip 129

  defineMovieClip 131 // total frames: 1
  end // of defineMovieClip 131

  defineMovieClip 133 // total frames: 1
  end // of defineMovieClip 133

  defineMovieClip 135 // total frames: 1
  end // of defineMovieClip 135

  defineMovieClip 136 // total frames: 2

    frame 0
      constants '4', '_xscale', '_parent'  
      push '4'
      getVariable
      push '_xscale', '_parent'
      getVariable
      push '_parent'
      getMember
      push '_xscale'
      getMember
      setMember
    end // of frame 0

    frame 1
      push '', 4
      getProperty
      push 1
      subtract
      gotoAndPlay
    end // of frame 1
  end // of defineMovieClip 136

  defineMovieClip 141 // total frames: 20
  end // of defineMovieClip 141

  defineMovieClip 153 // total frames: 18
  end // of defineMovieClip 153

  defineMovieClip 156 // total frames: 1
  end // of defineMovieClip 156

  defineMovieClip 160 // total frames: 5
  end // of defineMovieClip 160

  defineMovieClip 161 // total frames: 21
  end // of defineMovieClip 161

  defineMovieClip 162 // total frames: 15
  end // of defineMovieClip 162

  defineMovieClip 165 // total frames: 12
  end // of defineMovieClip 165
  
  exportAssets
    116 as '[5(-'
  end // of exportAssets

  defineMovieClip 166 // total frames: 7
  end // of defineMovieClip 166
  
  exportAssets
    166 as '4,01'
  end // of exportAssets

  defineMovieClip 169 // total frames: 1
  end // of defineMovieClip 169
  
  exportAssets
    169 as ')9*'
  end // of exportAssets

  defineMovieClip 172 // total frames: 1
  end // of defineMovieClip 172
  
  exportAssets
    172 as ';+'
  end // of exportAssets
  
  exportAssets
    172 as ';+'
  end // of exportAssets
  
  exportAssets
    169 as ')9*'
  end // of exportAssets
  
  exportAssets
    166 as '4,01'
  end // of exportAssets
  
  exportAssets
    102 as '9z09)'
  end // of exportAssets
  
  exportAssets
    94 as '[J}o8'
  end // of exportAssets
  
  exportAssets
    74 as '-,=)'
  end // of exportAssets
  
  exportAssets
    74 as '-,=)'
  end // of exportAssets
  
  exportAssets
    74 as '-,=)'
  end // of exportAssets
  
  exportAssets
    74 as '-,=)'
  end // of exportAssets
  
  exportAssets
    74 as '-,=)'
  end // of exportAssets
  
  exportAssets
    94 as '[J}o8'
  end // of exportAssets
  
  exportAssets
    39 as '1(}ZT'
  end // of exportAssets
  
  exportAssets
    29 as '4B1W('
  end // of exportAssets
  
  exportAssets
    74 as '-,=)'
  end // of exportAssets
  
  exportAssets
    74 as '-,=)'
  end // of exportAssets

  defineMovieClip 173 // total frames: 1

    frame 0
      constants '=(,aA', '1Y6ud', '8g10Z', '6B6Ye', '*h0p]', '1hyu]', '[MqDO', '5INjI(', '{saU', '=lZ', ';ndCG', '-Q)9)', '99l8B', '9MGyU', '-6cK;', ',i0 [', ' p3z=', '+-(0', '*B', '}J', '4B1W(', ']}lAm', '*=_p_', '_xscale', '_yscale', 'gotoAndStop', 'prototype', '2ufmm', 'flash', '}2o(3', '4,01', '5pGCS', '*W2T(', '],lYS', 'length', '565', ' 8g]j', '-_X}5', '$b', '5b)bA(', '[5(-', '{2', '}2', '((', '_x', ')(', '_y', '87vE7(', '3Wt', '6{VYR', '[pTlo', '{-kxL', '-V;B', 'Math', 'abs', 'sqrt', '=-6+', 'removeMovieClip', '+7U K', ')2fr3', '}Zms3', 'Array', ']1sj+', '-fC3a', '9oK', '7-,', ']bu40', '_name', 'swapDepths', '7bSH*', '18wU*', '-4*l((', '(GbB}', '+2NA', 'getDepth', 'floor', '}oQA7', 'unshift', '08M8', 'clear', '9(K ;', ',}2X (', 'Object', 'filters', '{lN=R', '4plQ5', 'getTimer', ';ILSy', '3R,QM', ';y}-6(', '-)Xd+', '[Ad;n', '6GI,F', 'fps', '=3+P', ' IWA+', ']Y(', ');-', '8+C5', 'stop', '9T54', '{8+{+', '7', '_height', 'size', '[J}o8', '(H5 S', '6', ')Bx7K', '_currentframe', '0tJ', '_totalframes', '1(}ZT', 'Key', 'SPACE', 'isDown', '{FpD (', '4', '7T4cF(', 'LEFT', '2', 'RIGHT', 'pow', '3', '1', 'PI', 'sin', 'max', '(WBt)', ']}Ou;(', '3I0pG', '{;7F4', '8U(wu', '}[cpB', '9xv]A', '{yQ=Q', '+,W', '2y+dV', '(tBee', '3)i[=', ' J3IC', '[6jRc', ')8Fyj', '}-_tE(', ' BERG', '4vh2A', '}Yax5', '  tMB', '_alpha', 'splice', '9;I', '_rotation', '3-61', 'random', '8kN', '$s', '$ts', '9z09)', 'push', '638J', '=HU11', '-,=)', '(v+', 'Color', 'ra', 'rb', 'ga', 'gb', 'ba', 'bb', 'aa', 'ab', 'setTransform', 'remove', '2+bb6', '44{N', '-iB=', '1wrs-', ';+', ')9*', '8KrCz', '85kwY', '-[m(M', '7g,ln', ')+V3f', '[tloW', '0D 6', '{L 35', 'min', '980Sb', '}-B2', '(kJ+1(', ']{i', 'mode', ',Hwi)', 'clearInterval', '16(VU', '-', 'setInterval', '}wUHz', 'split', 'join', '', 'indexOf', 'slice', 'substring', '* I51', 'charCodeAt', ',JBe0', '4UQ(1', '_parent', ' Ly7b', '0', '4*fgv', 'getBounds', 'xMin', 'xMax', 'yMin', 'yMax', '16KA', '(', ')goHJ(', 'movieclip', '9ss9+', 'localToGlobal', '19{O', ',[A(', 'set', '-[A(', 'get', 'globalToLocal', '{Gq]-', '$r', '$h', '$w', '$y', '$x', '$box', '$matrixType', '$radial', '$linear', ']cY[2', 'beginGradientFill', ' (', '1', '='  
      push '=(,aA'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '1Y6ud', 2
      setMember
      push r:0, '8g10Z', 4
      setMember
      push r:0, '6B6Ye', 4
      setMember
      push r:0, '*h0p]', 3
      setMember
      push r:0, '1hyu]', 4
      setMember
      push r:0, '[MqDO', 450
      setMember
      push r:0, '5INjI(', 3000
      setMember
      push r:0, '{saU', 290
      setMember
      push r:0, '=lZ', 20, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '99l8B', 5000, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '9MGyU', 10
      setMember
      push r:0, '-6cK;', 50, 30, 10, 100, 500, 5
      initArray
      setMember
      push ',i0 ['
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push ' p3z='
      function2 (r:2='0', r:3='*B') (r:1='this')
        push r:this, '+-(0', r:'0'
        setMember
        push r:this, '*B', r:'*B'
        setMember
        push r:this, '}J', '=(,aA'
        getVariable
        push '6B6Ye'
        getMember
        push '4B1W(', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '}J'
        getMember
        push '_xscale', 50
        setMember
        push r:this, '}J'
        getMember
        push '_yscale', 50
        setMember
        push r:'*B', 1
        add
        toString
        push 1, r:this, '}J'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '2ufmm'
      function2 () (r:1='this')
        push r:this, '*B'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label1
        push r:0, 1
        strictEquals
        branchIfTrue label2
        push r:0, 2
        strictEquals
        branchIfTrue label3
        push r:0, 3
        strictEquals
        branchIfTrue label7
        branch label8
       label1:
        push 65280, 1, r:this, '+-(0'
        getMember
        push 'flash'
        callMethod
        pop
        push r:this, '+-(0'
        getMember
        push '}2o(3', 5, 1
        initArray
        setMember
        branch label8
       label2:
        push 16711680, 1, r:this, '+-(0'
        getMember
        push 'flash'
        callMethod
        pop
        push r:this, '+-(0'
        getMember
        push '4,01'
        getMember
        push '5pGCS', 20, 1
        initArray
        setMember
        branch label8
       label3:
        push 0, r:this, '+-(0'
        getMember
        push '*W2T('
        getMember
        push '],lYS'
        callMethod
        setRegister r:3
        pop
        push 0
        setRegister r:2
        pop
        branch label5
       label4:
        push r:2
        increment
        setRegister r:2
        pop
       label5:
        push r:2, r:3, 'length'
        getMember
        lessThan
        not
        branchIfTrue label6
        push 0, r:3, r:2
        getMember
        push '565'
        callMethod
        pop
        branch label4
       label6:
        push 255, 1, r:this, '+-(0'
        getMember
        push 'flash'
        callMethod
        pop
        push 0, r:this, '+-(0'
        getMember
        push '4,01'
        getMember
        push ' 8g]j'
        callMethod
        pop
        branch label8
       label7:
        push r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$b', r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$b'
        getMember
        increment
        setMember
        push 16777215, 1, r:this, '+-(0'
        getMember
        push 'flash'
        callMethod
        pop
        push '=(,aA'
        getVariable
        push '99l8B'
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        branch label8
       label8:
      end // of function 

      setMember
      push r:1, '[5(-'
      function2 () (r:1='this')
        push r:this, '{2', 0
        setMember
        push r:this, '}2', 2
        setMember
        push r:this, '((', r:this, '}J'
        getMember
        push '_x'
        getMember
        setMember
        push r:this, ')(', r:this, '}J'
        getMember
        push '_y'
        getMember
        setMember
        push '87vE7(', r:this, 2, '3Wt'
        getVariable
        push '6{VYR'
        callMethod
        push 1, r:this, '+-(0'
        getMember
        push '[pTlo'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this')
        push r:this, '}2', r:this, '}2'
        getMember
        push 0.9, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push r:this, '}2'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '((', r:this, '(('
        getMember
        push r:this, '{2'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push '=(,aA'
        getVariable
        push '{saU'
        getMember
        push 10
        subtract
        setRegister r:2
        pop
        push r:this, ')('
        getMember
        push r:2
        greaterThan
        not
        branchIfTrue label9
        push r:this, ')(', r:2, 2
        multiply
        push r:this, ')('
        getMember
        subtract
        setMember
        push r:this, '}2', r:this, '}2'
        getMember
        push -0.5
        multiply
        setMember
        push r:this, '}2'
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push 1
        lessThan
        not
        branchIfTrue label9
        push r:this, '}2', 0
        setMember
        push r:this, ')(', r:2
        setMember
       label9:
        push r:this, '(('
        getMember
        push r:this, '+-(0'
        getMember
        push '4,01'
        getMember
        push '(('
        getMember
        subtract
        setRegister r:3
        pop
        push r:this, ')('
        getMember
        push r:this, '+-(0'
        getMember
        push '4,01'
        getMember
        push ')('
        getMember
        subtract
        setRegister r:4
        pop
        push r:3, r:3
        multiply
        push r:4, r:4
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        setRegister r:5
        pop
        push r:5, 30
        lessThan
        dup
        not
        branchIfTrue label10
        pop
        push r:this, '+-(0'
        getMember
        push '4,01'
        getMember
        push '=-6+'
        getMember
        not
       label10:
        not
        branchIfTrue label11
        push 0, r:this, '2ufmm'
        callMethod
        pop
        push 0, r:this, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push FALSE
        return
       label11:
        push r:this, '}J'
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '}J'
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
        push TRUE
        return
      end // of function 

      setMember
      push '+7U K'
      function2 (r:2='}J') (r:1='this')
        push r:this, ')2fr3', r:'}J'
        setMember
        push r:this, '}Zms3', 0, 'Array'
        new
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, ']1sj+'
      function2 () (r:1='this')
        push r:this, ')2fr3'
        getMember
        return
      end // of function 

      setMember
      push r:1, '-fC3a'
      function2 (r:2='59F') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'59F'
        getMember
        setRegister r:3
        pop
        push r:3, NULL
        equals
        not
        branchIfTrue label12
        push '9oK', 0, 'Array'
        new
        push '7-,', 0, 2
        initObject
        setRegister r:3
        pop
        push r:this, '}Zms3'
        getMember
        push r:'59F', r:3
        setMember
       label12:
        push r:3
        return
      end // of function 

      setMember
      push r:1, ']bu40'
      function2 (r:2='[-99') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'[-99'
        getMember
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:7
        pop
        push r:'[-99', 1000
        multiply
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label14
       label13:
        push r:6
        increment
        setRegister r:6
        pop
       label14:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label16
        push r:4, r:6
        getMember
        push '_name'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label15
        push r:8, r:7
        add
        push 1, r:4, r:6
        getMember
        push 'swapDepths'
        callMethod
        pop
        push r:4, r:7, r:4, r:6
        getMember
        setMember
        push r:7
        increment
        setRegister r:7
        pop
       label15:
        branch label13
       label16:
        push r:3, '7-,', r:7
        setMember
      end // of function 

      setMember
      push r:1, '*=_p_'
      function2 (r:2='*KB2', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label17
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'*KB2', 2, r:this, '*=_p_'
        callMethod
        return
       label17:
        push r:6, r:'[-99', 1000
        multiply
        add
        push r:'*KB2', r:this, ')2fr3'
        getMember
        push 3, '3Wt'
        getVariable
        push '7bSH*'
        callMethod
        setRegister r:7
        pop
        push r:5, r:6, r:7
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:7
        return
      end // of function 

      setMember
      push r:1, '18wU*'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push r:5, 1000
        equals
        not
        branchIfTrue label18
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', 1, r:this, '18wU*'
        callMethod
        return
       label18:
        push r:5, r:'[-99', 1000
        multiply
        add
        push r:this, ')2fr3'
        getMember
        push 2, '3Wt'
        getVariable
        push '-4*l(('
        callMethod
        setRegister r:6
        pop
        push r:4, r:5, r:6
        setMember
        push r:3, '7-,', r:3, '7-,'
        getMember
        increment
        setMember
        push r:6
        return
      end // of function 

      setMember
      push r:1, '(GbB}'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label19
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        return
       label19:
        push r:5, r:6, r:'}J'
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:6, r:'[-99', 1000
        multiply
        add
        return
      end // of function 

      setMember
      push r:1, '+2NA'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        push 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, r:'[-99'
        equals
        not
        branchIfTrue label20
        push UNDEF
        return
       label20:
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:5, '7-,'
        getMember
        setRegister r:7
        pop
        push 0
        setRegister r:8
        pop
        branch label22
       label21:
        push r:8
        increment
        setRegister r:8
        pop
       label22:
        push r:8, r:7
        lessThan
        not
        branchIfTrue label24
        push r:6, r:8
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label23
        push r:6, r:8, NULL
        setMember
        branch label24
       label23:
        branch label21
       label24:
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}oQA7'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label25
        push r:6, r:7, NULL
        setMember
        push r:'}J', 1, r:6, 'unshift'
        callMethod
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label25:
      end // of function 

      setMember
      push r:1, '08M8'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label27
        push r:6, r:7, NULL
        setMember
        push r:5, '7-,'
        getMember
        push 1000
        equals
        not
        branchIfTrue label26
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label26:
        push r:5, '7-,'
        getMember
        setRegister r:3
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:3, r:4, 1000
        multiply
        add
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
        push r:6, r:3, r:'}J'
        setMember
       label27:
      end // of function 

      setMember
      push r:1, 'clear'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:4
        pop
        branch label29
       label28:
        push r:4
        increment
        setRegister r:4
        pop
       label29:
        push r:4, r:3, '7-,'
        getMember
        lessThan
        not
        branchIfTrue label30
        push 0, r:5, r:4
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label28
       label30:
        push r:3, '7-,', 0
        setMember
      end // of function 

      setMember
      push r:1, '9(K ;'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push -99999999
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label32
       label31:
        push r:6
        increment
        setRegister r:6
        pop
       label32:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label40
        push r:4, r:6
        getMember
        setRegister r:9
        pop
        push r:9, '_y'
        getMember
        setRegister r:10
        pop
        push r:10, r:8
        lessThan
        not
        not
        branchIfTrue label33
        push r:10
        setRegister r:8
        pop
        branch label39
       label33:
        push r:6
        setRegister r:7
        pop
        branch label35
       label34:
        push r:7
        decrement
        setRegister r:7
        pop
       label35:
        push r:7, 0
        greaterThan
        not
        branchIfTrue label38
        push r:4, r:7, 1
        subtract
        getMember
        setRegister r:11
        pop
        push r:11, '_y'
        getMember
        push r:10
        greaterThan
        not
        branchIfTrue label36
        push r:4, r:7, r:11
        setMember
        push r:11, 1, r:9, 'swapDepths'
        callMethod
        pop
        branch label37
       label36:
        push r:4, r:7, r:9
        setMember
        branch label38
       label37:
        branch label34
       label38:
        push r:7, 0
        equals
        not
        branchIfTrue label39
        push r:4, 0, r:9
        setMember
       label39:
        branch label31
       label40:
      end // of function 

      setMember
      push r:1, ',}2X ('
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label42
       label41:
        push r:2
        increment
        setRegister r:2
        pop
       label42:
        push r:2, r:this, '}Zms3'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label43
        push r:2, 1, r:this, 'clear'
        callMethod
        pop
        branch label41
       label43:
      end // of function 

      setMember
      push 'flash'
      getVariable
      not
      not
      branchIfTrue label44
      push 'flash', 0, 'Object'
      new
      setVariable
     label44:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      not
      not
      branchIfTrue label45
      push 'flash'
      getVariable
      push 'filters', 0, 'Object'
      new
      setMember
     label45:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      push '{lN=R'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setMember
      push '{-kxL'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '87vE7('
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '4plQ5', '{-kxL'
        getVariable
        push '4plQ5'
        getMember
        increment
        setMember
        push 0, '3Wt'
        getVariable
        push 'getTimer'
        callMethod
        setRegister r:2
        pop
        push '{-kxL'
        getVariable
        push ';ILSy', r:2, '{-kxL'
        getVariable
        push '3R,QM'
        getMember
        subtract
        push 1000.0
        divide
        setMember
        push '{-kxL'
        getVariable
        push '3R,QM', r:2
        setMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        push '{-kxL'
        getVariable
        push ';y}-6('
        getMember
        lessThan
        not
        branchIfTrue label46
        push '{-kxL'
        getVariable
        push '-)Xd+', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        push '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        multiply
        push 1, '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        subtract
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        multiply
        add
        setMember
        branch label47
       label46:
        push '{-kxL'
        getVariable
        push ';ILSy', 1, '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        divide
        setMember
       label47:
        push '{-kxL'
        getVariable
        push '-V;B', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        setMember
      end // of function 

      setMember
      push r:0, 'fps'
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        return
      end // of function 

      setMember
      push r:0, '6GI,F', 32
      setMember
      push r:0, ';y}-6(', 0.5
      setMember
      push r:0, '3R,QM', 0, '3Wt'
      getVariable
      push 'getTimer'
      callMethod
      setMember
      push r:0, '[Ad;n', 0.95
      setMember
      push r:0, '-)Xd+', 1
      setMember
      push r:0, '-V;B', 1
      setMember
      push r:0, ';ILSy', 1
      setMember
      push r:0, '4plQ5', 0
      setMember
      push '=3+P'
      function2 (r:2='0') (r:1='this')
        push r:this, ' IWA+', 0
        setMember
        push r:this, ']Y(', 0
        setMember
        push r:this, ');-', 1
        setMember
        push r:this, '5pGCS', 0, 1
        initArray
        setMember
        push r:this, '8+C5', FALSE
        setMember
        push r:this, '=-6+', FALSE
        setMember
        push r:this, '+-(0', r:'0'
        setMember
        push r:this, '}J', '=(,aA'
        getVariable
        push '*h0p]'
        getMember
        push '4,01', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push 0, r:this, '}J'
        getMember
        push 'stop'
        callMethod
        pop
        push r:this, '((', '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        push 2
        divide
        setMember
        push r:this, ')(', '=(,aA'
        getVariable
        push '{saU'
        getMember
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '9T54'
      function2 () (r:1='this')
        push r:this, '}2', -10
        setMember
        push r:this, '{2', r:this, '(('
        getMember
        push '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        push 2
        divide
        lessThan
        not
        branchIfTrue label48
        push 2
        branch label49
       label48:
        push -2
       label49:
        setMember
        push r:this, '=-6+', TRUE
        setMember
        push r:this, '{8+{+', 1.5
        setMember
        push r:this, ' IWA+', 0
        setMember
        push '7', 1, r:this, '}J'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '565'
      function2 () (r:1='this')
        push r:this, '(('
        getMember
        setRegister r:3
        pop
        push r:this, ')('
        getMember
        push r:this, '}J'
        getMember
        push '_height'
        getMember
        push 3
        divide
        subtract
        setRegister r:4
        pop
        push 8
        setRegister r:5
        pop
        push 0
        setRegister r:2
        pop
        branch label51
       label50:
        push r:2
        increment
        setRegister r:2
        pop
       label51:
        push r:2, r:this, '+-(0'
        getMember
        push '*W2T('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label53
        push r:this, '+-(0'
        getMember
        push '*W2T('
        getMember
        push r:2
        getMember
        setRegister r:6
        pop
        push r:6, '(('
        getMember
        push r:3
        subtract
        setRegister r:7
        pop
        push r:6, ')('
        getMember
        push r:4
        subtract
        setRegister r:8
        pop
        push r:7, r:7
        multiply
        push r:8, r:8
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        setRegister r:9
        pop
        push r:9, r:6, 'size'
        getMember
        push 2.4
        divide
        push r:5
        add
        lessThan
        not
        branchIfTrue label52
        push r:this, '((', r:6, '(('
        getMember
        setMember
        push r:this, ')(', r:6, ')('
        getMember
        setMember
        push 0, r:this, '9T54'
        callMethod
        pop
        push r:6, '}J'
        getMember
        push '_xscale', 50
        setMember
        push r:6, '}J'
        getMember
        push '_yscale', 50
        setMember
        push r:6, 'size', 50
        setMember
        push '=(,aA'
        getVariable
        push '1hyu]'
        getMember
        push '[J}o8', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:10
        pop
        push r:10, '_x', r:6, '(('
        getMember
        setMember
        push r:10, '_y', r:6, ')('
        getMember
        setMember
        push r:10, '_xscale', 50
        setMember
        push r:10, '_yscale', 50
        setMember
        push r:10, 1, r:6, '(H5 S'
        callMethod
        pop
        push 0, r:6, '4B1W('
        getMember
        push '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:6, '4B1W(', r:this
        setMember
        branch label53
       label52:
        branch label50
       label53:
      end // of function 

      setMember
      push r:1, ' 8g]j'
      function2 () (r:1='this')
        push r:this, ' IWA+', 0
        setMember
        push '6', 1, r:this, '}J'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, ')Bx7K', FALSE
        setMember
        push r:this, '8+C5', TRUE
        setMember
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this')
        push r:this, '5pGCS'
        getMember
        push 0
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label54
        push r:this, '5pGCS', r:this, '5pGCS'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        subtract
        push 1
        initArray
        setMember
       label54:
        push r:this, ' IWA+', r:this, ' IWA+'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        add
        setMember
        push r:this, '}J'
        getMember
        push '_currentframe'
        getMember
        setRegister r:0
        push 2
        strictEquals
        branchIfTrue label55
        branch label57
       label55:
        push r:this, ' IWA+'
        getMember
        push r:this, '}J'
        getMember
        push '0tJ'
        getMember
        push '_totalframes'
        getMember
        lessThan
        not
        not
        branchIfTrue label56
        push r:this, ' IWA+', r:this, ' IWA+'
        getMember
        push r:this, '}J'
        getMember
        push '0tJ'
        getMember
        push '_totalframes'
        getMember
        push 4
        subtract
        subtract
        setMember
       label56:
        branch label57
       label57:
        push r:this, '1(}ZT'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label59
        push 0, r:this, '1(}ZT'
        getMember
        push '87vE7('
        callMethod
        not
        not
        branchIfTrue label58
        push r:this, '1(}ZT', NULL
        setMember
       label58:
        branch label63
       label59:
        push 'Key'
        getVariable
        push 'SPACE'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        dup
        not
        branchIfTrue label60
        pop
        push r:this, '=-6+'
        getMember
        not
       label60:
        dup
        not
        branchIfTrue label61
        pop
        push r:this, '8+C5'
        getMember
        not
       label61:
        not
        branchIfTrue label63
        push r:this, '1(}ZT', r:this, '+-(0'
        getMember
        push 1, '{FpD ('
        new
        setMember
        push 0, r:this, '1(}ZT'
        getMember
        push '87vE7('
        callMethod
        not
        not
        branchIfTrue label62
        push r:this, '1(}ZT', NULL
        setMember
       label62:
        push r:this, ' IWA+', 0
        setMember
        push r:this, ')Bx7K', FALSE
        setMember
        push '4', 1, r:this, '}J'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
       label63:
        push r:this, '=-6+'
        getMember
        not
        branchIfTrue label65
        push r:this, '{8+{+'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label64
        push r:this, '{8+{+', r:this, '{8+{+'
        getMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        subtract
        setMember
        push r:this, '{8+{+'
        getMember
        push 0
        greaterThan
        not
        not
        branchIfTrue label64
        push r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push 1, ';ndCG'
        getVariable
        push '7T4cF('
        callMethod
        pop
       label64:
        push 1, r:this, ' IWA+'
        getMember
        int
        push r:this, '}J'
        getMember
        push '0tJ'
        getMember
        push '_totalframes'
        getMember
        modulo
        add
        toString
        push 1, r:this, '}J'
        getMember
        push '0tJ'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push UNDEF
        return
       label65:
        push r:this, '8+C5'
        getMember
        not
        not
        branchIfTrue label75
        push 'Key'
        getVariable
        push 'LEFT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label69
        push r:this, ')Bx7K'
        getMember
        not
        not
        branchIfTrue label66
        push r:this, ')Bx7K', TRUE
        setMember
        push r:this, ' IWA+', 0
        setMember
        push '2', 1, r:this, '}J'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
       label66:
        push r:this, ');-', -1
        setMember
        push r:this, ']Y('
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label67
        push r:this, ']Y(', 0
        setMember
       label67:
        push r:this, ']Y(', r:this, ']Y('
        getMember
        push 1, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        setMember
        push r:this, ']Y('
        getMember
        push -5
        lessThan
        not
        branchIfTrue label68
        push r:this, ']Y(', -5
        setMember
       label68:
        branch label74
       label69:
        push 'Key'
        getVariable
        push 'RIGHT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label73
        push r:this, ')Bx7K'
        getMember
        not
        not
        branchIfTrue label70
        push r:this, ')Bx7K', TRUE
        setMember
        push r:this, ' IWA+', 0
        setMember
        push '2', 1, r:this, '}J'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
       label70:
        push r:this, ');-', 1
        setMember
        push r:this, ']Y('
        getMember
        push 0
        lessThan
        not
        branchIfTrue label71
        push r:this, ']Y(', 0
        setMember
       label71:
        push r:this, ']Y(', r:this, ']Y('
        getMember
        push 1, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, ']Y('
        getMember
        push 5
        greaterThan
        not
        branchIfTrue label72
        push r:this, ']Y(', 5
        setMember
       label72:
        branch label74
       label73:
        push r:this, ']Y(', r:this, ']Y('
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.8, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        setMember
        push r:this, ')Bx7K'
        getMember
        not
        branchIfTrue label74
        push r:this, ')Bx7K', FALSE
        setMember
        push r:this, ' IWA+', 0
        setMember
        push '3', 1, r:this, '}J'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
       label74:
        push r:this, '((', r:this, '(('
        getMember
        push r:this, ']Y('
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label75:
        push r:this, ')Bx7K'
        getMember
        not
        branchIfTrue label76
        branch label79
       label76:
        push r:this, '}J'
        getMember
        push '_currentframe'
        getMember
        push 2
        equals
        not
        branchIfTrue label77
        push '1', 1, r:this, '}J'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        branch label79
       label77:
        push r:this, '}J'
        getMember
        push '_currentframe'
        getMember
        push 3
        lessThan
        not
        dup
        not
        branchIfTrue label78
        pop
        push r:this, ' IWA+'
        getMember
        push r:this, '}J'
        getMember
        push '0tJ'
        getMember
        push '_totalframes'
        getMember
        lessThan
        not
       label78:
        not
        branchIfTrue label79
        push r:this, '8+C5', FALSE
        setMember
        push r:this, ']Y(', 0
        setMember
        push '1', 1, r:this, '}J'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
       label79:
        push r:this, '}J'
        getMember
        push '_xscale', r:this, ');-'
        getMember
        push 100
        multiply
        setMember
        push 1, r:this, ' IWA+'
        getMember
        int
        push r:this, '}J'
        getMember
        push '0tJ'
        getMember
        push '_totalframes'
        getMember
        modulo
        add
        toString
        push 1, r:this, '}J'
        getMember
        push '0tJ'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '(('
        getMember
        push 30
        greaterThan
        not
        not
        branchIfTrue label80
        push r:this, '((', 30
        setMember
        branch label81
       label80:
        push r:this, '(('
        getMember
        push '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        push 20
        subtract
        lessThan
        not
        not
        branchIfTrue label81
        push r:this, '((', '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        push 20
        subtract
        setMember
       label81:
        push r:this, '+-(0'
        getMember
        push '}2o(3'
        getMember
        push 0
        getMember
        push 0
        greaterThan
        not
        not
        branchIfTrue label82
        push 0, r:this, '565'
        callMethod
        pop
       label82:
        push r:this, '(('
        getMember
        push 'Math'
        getVariable
        push 'PI'
        getMember
        multiply
        push 17
        divide
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push 0, 2, 'Math'
        getVariable
        push 'max'
        callMethod
        push 3
        multiply
        setRegister r:2
        pop
        push r:this, '}J'
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '}J'
        getMember
        push '_y', r:this, ')('
        getMember
        push r:2
        subtract
        setMember
      end // of function 

      setMember
      push '(WBt)'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ']}Ou;(', 1
      setMember
      push r:0, '3I0pG', 2
      setMember
      push r:0, '{;7F4', 3
      setMember
      push r:0, '8U(wu', 4
      setMember
      push r:0, '}[cpB', 5
      setMember
      push r:0, '9xv]A', 6
      setMember
      push r:0, '{yQ=Q', 7
      setMember
      push r:0, '+,W', 8
      setMember
      push r:0, '2y+dV', 9
      setMember
      push r:0, '(tBee', 10
      setMember
      push r:0, '3)i[=', 11
      setMember
      push r:0, ' J3IC', 12
      setMember
      push r:0, '[6jRc', 13
      setMember
      push r:0, ')8Fyj', 14
      setMember
      push '{FpD ('
      function2 (r:2='0') (r:1='this')
        push r:this, '+-(0', r:'0'
        setMember
        push r:this, '}J', '=(,aA'
        getVariable
        push '8g10Z'
        getMember
        push '1(}ZT', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '}-_tE(', 0, 'Array'
        new
        setMember
        push r:this, ' BERG', r:this, '+-(0'
        getMember
        push '4,01'
        getMember
        push '5pGCS'
        getMember
        push 0
        getMember
        push 0
        greaterThan
        setMember
        push r:this, '((', r:this, '+-(0'
        getMember
        push '4,01'
        getMember
        push '(('
        getMember
        setMember
        push r:this, ')(', '{FpD ('
        getVariable
        push '4vh2A'
        getMember
        setMember
        push r:this, '}Yax5', 8
        setMember
        push r:this, ' BERG'
        getMember
        not
        branchIfTrue label83
        push '2'
        branch label84
       label83:
        push '1'
       label84:
        push 1, r:this, '}J'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '  tMB'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label86
       label85:
        push r:2
        increment
        setRegister r:2
        pop
       label86:
        push r:2, r:this, '}-_tE('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label88
        push r:this, '}-_tE('
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3, '_alpha', r:3, '_alpha'
        getMember
        push 10, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        setMember
        push r:3, '_alpha'
        getMember
        push 0
        greaterThan
        not
        not
        branchIfTrue label87
        push 0, r:3, 'removeMovieClip'
        callMethod
        pop
        push 1, r:2, r:2
        decrement
        setRegister r:2
        pop
        push 2, r:this, '}-_tE('
        getMember
        push 'splice'
        callMethod
        pop
       label87:
        branch label85
       label88:
        push r:this, '}Yax5', r:this, '}Yax5'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 1.05, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        setMember
        push r:this, '9;I'
        getMember
        not
        branchIfTrue label89
        push r:this, '}J'
        getMember
        push '_rotation', r:this, '}J'
        getMember
        push '_rotation'
        getMember
        push 40, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '}J'
        getMember
        push '_x', r:this, '}J'
        getMember
        push '_x'
        getMember
        push r:this, '}Yax5'
        getMember
        push 6
        divide
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '}J'
        getMember
        push '_y', r:this, '}J'
        getMember
        push '_y'
        getMember
        push r:this, '}Yax5'
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push 3
        divide
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '}J'
        getMember
        push '_xscale', r:this, '}J'
        getMember
        push '_xscale'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.98, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        setMember
        push r:this, '}J'
        getMember
        push '_yscale', r:this, '}J'
        getMember
        push '_xscale'
        getMember
        setMember
        branch label90
       label89:
        push r:this, '}J'
        getMember
        push '_y', r:this, '}J'
        getMember
        push '_y'
        getMember
        push r:this, '}Yax5'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        setMember
       label90:
        push r:this, '}J'
        getMember
        push '_y'
        getMember
        push 320
        greaterThan
        dup
        branchIfTrue label91
        pop
        push r:this, '}J'
        getMember
        push '_y'
        getMember
        push -20
        lessThan
       label91:
        not
        branchIfTrue label92
        push 0, r:this, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
       label92:
        push r:this, '}-_tE('
        getMember
        push 'length'
        getMember
        push 0
        greaterThan
        dup
        branchIfTrue label93
        pop
        push r:this, '}J'
        getMember
        push '_name'
        getMember
        push NULL
        equals
        not
       label93:
        return
      end // of function 

      setMember
      push r:1, '3-61'
      function2 () (r:1='this')
        push r:this, '+-(0'
        getMember
        push '4,01'
        getMember
        push '=-6+'
        getMember
        not
        branchIfTrue label94
        push FALSE
        return
       label94:
        push 0
        setRegister r:2
        pop
        branch label96
       label95:
        push r:2
        increment
        setRegister r:2
        pop
       label96:
        push r:2, r:this, '+-(0'
        getMember
        push '*W2T('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label102
        push r:this, '+-(0'
        getMember
        push '*W2T('
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3, 'size'
        getMember
        push 2
        divide
        int
        setRegister r:4
        pop
        push r:this, '(('
        getMember
        push r:3, '(('
        getMember
        push r:4
        subtract
        lessThan
        not
        dup
        not
        branchIfTrue label97
        pop
        push r:this, '(('
        getMember
        push r:3, '(('
        getMember
        push r:4
        add
        greaterThan
        not
       label97:
        dup
        not
        branchIfTrue label98
        pop
        push r:this, ')('
        getMember
        push r:3, ')('
        getMember
        push r:4
        add
        greaterThan
        not
       label98:
        not
        branchIfTrue label101
        push 0, r:3, '565'
        callMethod
        pop
        push r:this, '9;I', r:this, ')('
        getMember
        push r:3, ')('
        getMember
        lessThan
        not
        setMember
        push r:this, '9;I'
        getMember
        not
        branchIfTrue label99
        push 1, r:this, '}J'
        getMember
        push 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '+2NA'
        callMethod
        pop
        push 2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label99
        push r:this, '}Yax5', r:this, '}Yax5'
        getMember
        push -1
        multiply
        setMember
       label99:
        push r:4, '=(,aA'
        getVariable
        push '=lZ'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        multiply
        setRegister r:5
        pop
        push r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$s', r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$s'
        getMember
        increment
        setMember
        push r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$ts', r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$ts'
        getMember
        push r:5
        add
        setMember
        push r:5, 1, ';ndCG'
        getVariable
        push '-Q)9)'
        callMethod
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push r:this, ' BERG'
        getMember
        not
        branchIfTrue label100
        push r:this, '}Yax5', r:this, '}Yax5'
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        setMember
        push r:this, '9;I', FALSE
        setMember
        branch label95
       label100:
        push TRUE
        return
       label101:
        branch label95
       label102:
        push FALSE
        return
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this')
        push r:this, ')(', r:this, ')('
        getMember
        push r:this, '}Yax5'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        setMember
        push 1, '{FpD ('
        getVariable
        push '4vh2A'
        getMember
        push r:this, ')('
        getMember
        subtract
        push 25
        divide
        int
        add
        setRegister r:3
        pop
        push 0
        setRegister r:2
        pop
        branch label104
       label103:
        push r:2
        increment
        setRegister r:2
        pop
       label104:
        push r:2, r:3
        lessThan
        not
        branchIfTrue label106
        push r:this, '}-_tE('
        getMember
        push r:2
        getMember
        setRegister r:4
        pop
        push r:4, NULL
        equals
        not
        branchIfTrue label105
        push '=(,aA'
        getVariable
        push '1Y6ud'
        getMember
        push '9z09)', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:4
        pop
        push r:4, '_y', '{FpD ('
        getVariable
        push '4vh2A'
        getMember
        push 25, r:2, 1
        subtract
        multiply
        subtract
        setMember
        push r:4, 1, r:this, '}-_tE('
        getMember
        push 'push'
        callMethod
        pop
       label105:
        push r:4, '_yscale', 100
        setMember
        push r:4, '_x', r:this, '(('
        getMember
        setMember
        branch label103
       label106:
        push r:this, '}-_tE('
        getMember
        push r:2, 1
        subtract
        getMember
        push '_yscale', r:this, '}-_tE('
        getMember
        push r:2, 1
        subtract
        getMember
        push '_y'
        getMember
        push r:this, ')('
        getMember
        subtract
        push 4
        multiply
        setMember
        push 0, r:this, '3-61'
        callMethod
        setRegister r:5
        pop
        push r:this, '}J'
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '}J'
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
        push r:this, ')('
        getMember
        push -100
        lessThan
        dup
        branchIfTrue label107
        pop
        push r:5
       label107:
        not
        branchIfTrue label109
        push r:this, ')('
        getMember
        push -100
        lessThan
        not
        branchIfTrue label108
        push 0, r:this, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
       label108:
        push '  tMB', r:this, 2, '3Wt'
        getVariable
        push '6{VYR'
        callMethod
        push 1, r:this, '+-(0'
        getMember
        push '[pTlo'
        callMethod
        pop
        push FALSE
        return
       label109:
        push TRUE
        return
      end // of function 

      setMember
      push r:0, '4vh2A', '=(,aA'
      getVariable
      push '{saU'
      getMember
      push 30
      subtract
      setMember
      push '638J'
      function2 (r:2='0', r:3='size', r:4=')') (r:1='this')
        push r:this, '+-(0', r:'0'
        setMember
        push r:this, '4B1W(', r:')'
        setMember
        push r:this, 'size', r:size
        setMember
        push r:this, '}Yax5', 5, r:this, '+-(0'
        getMember
        push '=HU11'
        getMember
        push 0
        getMember
        push 20
        divide
        add
        setMember
        push r:this, ')(', -100
        setMember
        push r:this, '{2', 2.5
        setMember
        push r:this, '}2', 1
        setMember
        push r:this, ');-', 2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        setMember
        push r:this, '((', r:this, '+-(0'
        getMember
        push '4,01'
        getMember
        push '(('
        getMember
        push r:this, ');-'
        getMember
        push 50
        multiply
        add
        setMember
        push r:this, '}J', '=(,aA'
        getVariable
        push '1hyu]'
        getMember
        push '-,=)', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '}J'
        getMember
        push '_xscale', r:size
        setMember
        push r:this, '}J'
        getMember
        push '_yscale', r:size
        setMember
        push r:this, '}J'
        getMember
        push 1, r:this, '(H5 S'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '(H5 S'
      function2 (r:2='}J') (r:1='this')
        push r:'}J', '(v+'
        getMember
        push 1, 'Color'
        new
        setRegister r:3
        pop
        push r:this, '4B1W('
        getMember
        push NULL
        equals
        not
        branchIfTrue label110
        push 'ra', 82, 'rb', 40, 'ga', 86, 'gb', 30, 'ba', 52, 'bb', -51, 'aa', 100, 'ab', 0, 8
        initObject
        setRegister r:4
        pop
        branch label111
       label110:
        push 'ra', 82, 'rb', 150, 'ga', 86, 'gb', 10, 'ba', 52, 'bb', -51, 'aa', 100, 'ab', 0, 8
        initObject
        setRegister r:4
        pop
       label111:
        push r:4, 1, r:3, 'setTransform'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '565'
      function2 () (r:1='this')
        push r:this, 1, r:this, '+-(0'
        getMember
        push '*W2T('
        getMember
        push 'remove'
        callMethod
        pop
        push '=(,aA'
        getVariable
        push '1hyu]'
        getMember
        push '[J}o8', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:2
        pop
        push r:2, '_x', r:this, '(('
        getMember
        setMember
        push r:2, '_y', r:this, ')('
        getMember
        setMember
        push r:2, '_xscale', r:this, 'size'
        getMember
        push 2
        divide
        setMember
        push r:2, '_yscale', r:this, 'size'
        getMember
        push 2
        divide
        setMember
        push r:2, 1, r:this, '(H5 S'
        callMethod
        pop
        push r:this, '+-(0'
        getMember
        push '=HU11', r:this, '+-(0'
        getMember
        push '=HU11'
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push 0, r:this, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, 'size'
        getMember
        push 2
        divide
        setRegister r:3
        pop
        push r:this, 'size'
        getMember
        push 150
        equals
        not
        branchIfTrue label112
        push 100
        setRegister r:3
        pop
       label112:
        push r:this, 'size'
        getMember
        push 25
        lessThan
        not
        dup
        not
        branchIfTrue label113
        pop
        push r:this, '4B1W('
        getMember
        push NULL
        equals
       label113:
        not
        branchIfTrue label114
        push NULL, r:3, r:this, '+-(0'
        getMember
        push 3, '638J'
        new
        setRegister r:4
        pop
        push r:4, '((', r:this, '(('
        getMember
        push r:this, 'size'
        getMember
        push 4
        divide
        add
        setMember
        push r:4, ')(', r:this, ')('
        getMember
        setMember
        push r:4, '}2', 0, r:this, '}2'
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        subtract
        setMember
        push r:4, ');-', 1
        setMember
        push 0, r:4, '87vE7('
        callMethod
        pop
        push r:4, 1, r:this, '+-(0'
        getMember
        push '*W2T('
        getMember
        push 'push'
        callMethod
        pop
        push NULL, r:3, r:this, '+-(0'
        getMember
        push 3, '638J'
        new
        setRegister r:4
        pop
        push r:4, '((', r:this, '(('
        getMember
        push r:this, 'size'
        getMember
        push 4
        divide
        subtract
        setMember
        push r:4, ')(', r:this, ')('
        getMember
        setMember
        push r:4, '}2', 0, r:this, '}2'
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        subtract
        setMember
        push r:4, ');-', -1
        setMember
        push 0, r:4, '87vE7('
        callMethod
        pop
        push r:4, 1, r:this, '+-(0'
        getMember
        push '*W2T('
        getMember
        push 'push'
        callMethod
        pop
        branch label115
       label114:
        push 0, r:this, '4B1W('
        getMember
        push '[5(-'
        callMethod
        pop
        push r:this, '+-(0'
        getMember
        push '2+bb6', r:this, '+-(0'
        getMember
        push '2+bb6'
        getMember
        push 0
        getMember
        push r:this, 'size'
        getMember
        subtract
        push 1
        initArray
        setMember
       label115:
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this')
        push r:this, '}2', r:this, '}2'
        getMember
        push 0.9, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '{2'
        getMember
        push r:this, '{2'
        getMember
        multiply
        push r:this, '}2'
        getMember
        push r:this, '}2'
        getMember
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        setRegister r:2
        pop
        push r:this, '}Yax5'
        getMember
        push 15
        divide
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        setRegister r:3
        pop
        push r:this, '((', r:this, '(('
        getMember
        push r:this, ');-'
        getMember
        push r:this, '{2'
        getMember
        multiply
        push r:3
        multiply
        add
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push r:this, '}2'
        getMember
        push r:3
        multiply
        add
        setMember
        push r:this, ')('
        getMember
        push '=(,aA'
        getVariable
        push '{saU'
        getMember
        push r:this, 'size'
        getMember
        push 2
        divide
        subtract
        greaterThan
        not
        branchIfTrue label116
        push r:this, ')(', '=(,aA'
        getVariable
        push '{saU'
        getMember
        push r:this, 'size'
        getMember
        push 2
        divide
        subtract
        setMember
        push r:this, '}2', -20, r:this, 'size'
        getMember
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        subtract
        setMember
       label116:
        push r:this, '(('
        getMember
        push r:this, 'size'
        getMember
        push 2
        divide
        lessThan
        not
        branchIfTrue label117
        push r:this, '((', r:this, 'size'
        getMember
        push r:this, '(('
        getMember
        subtract
        setMember
        push r:this, ');-', r:this, ');-'
        getMember
        push -1
        multiply
        setMember
        branch label118
       label117:
        push r:this, '(('
        getMember
        push '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        push r:this, 'size'
        getMember
        push 2
        divide
        subtract
        greaterThan
        not
        branchIfTrue label118
        push r:this, '((', '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        push 2
        multiply
        push r:this, 'size'
        getMember
        subtract
        push r:this, '(('
        getMember
        subtract
        setMember
        push r:this, ');-', r:this, ');-'
        getMember
        push -1
        multiply
        setMember
       label118:
        push r:this, '4B1W('
        getMember
        push '}J'
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '4B1W('
        getMember
        push '}J'
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
        push r:this, '}J'
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '}J'
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
        push TRUE
        return
      end // of function 

      setMember
      push '44{N'
      function2 (r:2='}J') (r:1='this')
        push r:this, '-iB=', r:'}J'
        setMember
        push r:this, '2+bb6', 0, 1
        initArray
        setMember
        push r:this, '}2o(3', 0, 1
        initArray
        setMember
        push r:this, '1wrs-', '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        push 2
        divide
        setMember
        push r:this, ']}lAm', r:'}J', 1, '+7U K'
        new
        setMember
        push r:this, ';+', 0, ';+', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push 2, ')9*', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        pop
        push r:this, '=HU11', 1, 1
        initArray
        setMember
        push r:this, '-_X}5', '$s', 0, '$ts', 0, '$b', 0, 3
        initObject
        setMember
        push r:this, '8KrCz', 0, 'Array'
        new
        setMember
        push r:this, '4,01', r:this, 1, '=3+P'
        new
        setMember
        push r:this, '*W2T(', 0, 'Array'
        new
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '[pTlo'
      function2 (r:2='-') (r:1='this')
        push r:'-', 1, r:this, '8KrCz'
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '85kwY'
      function2 () (r:1='this')
        push r:this, '=HU11'
        getMember
        push 0
        getMember
        push r:this, '=HU11'
        getMember
        push 0
        getMember
        push 10
        multiply
        push 100, 3
        initArray
        push 1, '-[m(M'
        getVariable
        push '7g,ln'
        callMethod
        push 1
        add
        push 50
        multiply
        setRegister r:2
        pop
        push '=(,aA'
        getVariable
        push '-6cK;'
        getMember
        push 1, '-[m(M'
        getVariable
        push '7g,ln'
        callMethod
        setRegister r:3
        pop
        push NULL
        setRegister r:4
        pop
        push r:this, '=HU11'
        getMember
        push 0
        getMember
        push '=(,aA'
        getVariable
        push '9MGyU'
        getMember
        lessThan
        not
        dup
        not
        branchIfTrue label119
        pop
        push r:3, 0
        greaterThan
       label119:
        not
        branchIfTrue label120
        push r:3, 1
        subtract
        push r:this, 2, ' p3z='
        new
        setRegister r:4
        pop
        push 50
        setRegister r:2
        pop
       label120:
        push r:4, r:2, r:this, 3, '638J'
        new
        setRegister r:5
        pop
        push 0, r:5, '87vE7('
        callMethod
        not
        branchIfTrue label121
        push r:this, '2+bb6', r:this, '2+bb6'
        getMember
        push 0
        getMember
        push r:2
        add
        push 1
        initArray
        setMember
        push r:5, 1, r:this, '*W2T('
        getMember
        push 'push'
        callMethod
        pop
       label121:
      end // of function 

      setMember
      push r:1, 'flash'
      function2 (r:2='color') (r:1='this')
        push r:this, ')+V3f', 100
        setMember
        push r:this, '[tloW', r:color
        setMember
      end // of function 

      setMember
      push r:1, '0D 6'
      function2 () (r:1='this')
        push r:this, '}2o(3'
        getMember
        push 0
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label122
        push r:this, '}2o(3', r:this, '}2o(3'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        subtract
        push 1
        initArray
        setMember
       label122:
        push r:this, ')+V3f'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label124
        push r:this, '-iB='
        getMember
        push 1, 'Color'
        new
        setRegister r:2
        pop
        push r:this, ')+V3f', r:this, ')+V3f'
        getMember
        push 10, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        setMember
        push r:this, ')+V3f'
        getMember
        push 0
        greaterThan
        not
        not
        branchIfTrue label123
        push 0, r:2, '{L 35'
        callMethod
        pop
        branch label124
       label123:
        push r:this, ')+V3f'
        getMember
        push 100
        divide
        setRegister r:3
        pop
        push 100
        setRegister r:4
        pop
        push 'ra', r:4, 'rb', r:this, '[tloW'
        getMember
        push 16
        shiftRight
        push r:3
        multiply
        int
        push 'ga', r:4, 'gb', r:this, '[tloW'
        getMember
        push 8
        shiftRight
        push 255
        bitwiseAnd
        push r:3
        multiply
        int
        push 'ba', r:4, 'bb', r:this, '[tloW'
        getMember
        push 255
        bitwiseAnd
        push r:3
        multiply
        int
        push 'aa', 100, 'ab', 0, 8
        initObject
        push 1, r:2, 'setTransform'
        callMethod
        pop
       label124:
        push r:this, '2+bb6'
        getMember
        push 0
        getMember
        push 100
        divide
        push '=(,aA'
        getVariable
        push '5INjI('
        getMember
        push r:this, '=HU11'
        getMember
        push 0
        getMember
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        divide
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        int
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label125
        push 0, r:this, '85kwY'
        callMethod
        pop
       label125:
        push 0, r:this, '4,01'
        getMember
        push '87vE7('
        callMethod
        pop
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.9, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:5
        pop
        push r:this, '1wrs-', r:this, '1wrs-'
        getMember
        push r:5
        multiply
        push r:this, '4,01'
        getMember
        push '(('
        getMember
        push 1, r:5
        subtract
        multiply
        add
        setMember
        push r:this, '-iB='
        getMember
        push '_x', 0, '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        push 300
        subtract
        push 0, r:this, '1wrs-'
        getMember
        push 150
        subtract
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        subtract
        setMember
        push r:this, ';+'
        getMember
        push '_x', 0, r:this, '-iB='
        getMember
        push '_x'
        getMember
        subtract
        push 3
        divide
        setMember
        push r:this, '}2o(3'
        getMember
        push 0
        getMember
        push 0
        greaterThan
        not
        not
        branchIfTrue label129
        push 0
        setRegister r:6
        pop
        branch label127
       label126:
        push r:6
        increment
        setRegister r:6
        pop
       label127:
        push r:6, r:this, '*W2T('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label129
        push 0, r:this, '*W2T('
        getMember
        push r:6
        getMember
        push '87vE7('
        callMethod
        not
        not
        branchIfTrue label128
        push r:this, '2+bb6', r:this, '2+bb6'
        getMember
        push 0
        getMember
        push r:this, '*W2T('
        getMember
        push r:6
        getMember
        push 'size'
        getMember
        subtract
        push 1
        initArray
        setMember
        push 1, r:6, r:6
        decrement
        setRegister r:6
        pop
        push 2, r:this, '*W2T('
        getMember
        push 'splice'
        callMethod
        pop
       label128:
        branch label126
       label129:
        push 0
        setRegister r:6
        pop
        branch label131
       label130:
        push r:6
        increment
        setRegister r:6
        pop
       label131:
        push r:6, r:this, '8KrCz'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label133
        push 0, r:this, '8KrCz'
        getMember
        push r:6
        callMethod
        not
        not
        branchIfTrue label132
        push 1, r:6, r:6
        decrement
        setRegister r:6
        pop
        push 2, r:this, '8KrCz'
        getMember
        push 'splice'
        callMethod
        pop
       label132:
        branch label130
       label133:
      end // of function 

      setMember
      push r:1, ',}2X ('
      function2 () (r:1='this')
      end // of function 

      setMember
      push '980Sb'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '}-B2'
      function2 (r:2='}J') (r:1='this')
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        not
        branchIfTrue label134
        push UNDEF
        return
       label134:
        push 16777215, 1, ']{i'
        getVariable
        push '(H5 S'
        callMethod
        pop
        push '980Sb'
        getVariable
        push ')2fr3', r:'}J'
        setMember
        push '980Sb'
        getVariable
        push 'mode', '980Sb'
        getVariable
        push ')2fr3'
        getMember
        push 1, '44{N'
        new
        setMember
      end // of function 

      setMember
      push r:0, '0D 6'
      function2 () (r:1='this')
        push 0, '{-kxL'
        getVariable
        push '87vE7('
        callMethod
        pop
        push 0, '980Sb'
        getVariable
        push 'mode'
        getMember
        push '0D 6'
        callMethod
        pop
      end // of function 

      setMember
      push '-[m(M'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',Hwi)'
      function2 ('-', r:2='5U4B') (r:1='this')
        push '*B'
        var
        push '*B', r:'5U4B'
        function2 () (r:1='this')
          push '*B'
          getVariable
          push 1, 'clearInterval', 1, '3Wt'
          getVariable
          push '16(VU'
          callMethod
          push UNDEF
          callMethod
          pop
          push 0, '-'
          callFunction
          pop
        end // of function 

        push 2, 'setInterval', 1, '3Wt'
        getVariable
        push '16(VU'
        callMethod
        push UNDEF
        callMethod
        setVariable
      end // of function 

      setMember
      push r:0, '}wUHz'
      function2 (r:2='=rJ', r:3='7olX7', r:4='}wUHz') (r:1='this')
        push r:'=rJ', NULL
        equals
        not
        branchIfTrue label135
        push NULL
        return
       label135:
        push r:'7olX7', 'length'
        getMember
        setRegister r:5
        pop
        push r:5, 1
        equals
        not
        branchIfTrue label136
        push r:'}wUHz', 1, r:'7olX7', 1, r:'=rJ', 'split'
        callMethod
        push 'join'
        callMethod
        return
       label136:
        push 0
        setRegister r:7
        pop
        push ''
        setRegister r:8
        pop
       label137:
        push TRUE
        not
        branchIfTrue label139
        push r:7, r:'7olX7', 2, r:'=rJ', 'indexOf'
        callMethod
        setRegister r:6
        pop
        push r:6, -1
        equals
        not
        branchIfTrue label138
        branch label139
       label138:
        push r:8, r:6, r:7, 2, r:'=rJ', 'slice'
        callMethod
        push r:'}wUHz'
        add
        add
        setRegister r:8
        pop
        push r:6, r:5
        add
        setRegister r:7
        pop
        branch label137
       label139:
        push r:8, r:7, 1, r:'=rJ', 'substring'
        callMethod
        add
        return
      end // of function 

      setMember
      push r:0, '* I51'
      function2 (r:2='=rJ') (r:1='this')
        push 0, 'Array'
        new
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        push r:'=rJ', 'length'
        getMember
        setRegister r:6
        pop
        push 0
        setRegister r:3
        pop
        branch label141
       label140:
        push r:3
        increment
        setRegister r:3
        pop
       label141:
        push r:3, r:6
        lessThan
        not
        branchIfTrue label146
        push r:3, 1, r:'=rJ', 'charCodeAt'
        callMethod
        setRegister r:7
        pop
        push r:7, 10
        equals
        dup
        branchIfTrue label142
        pop
        push r:7, 13
        equals
       label142:
        not
        branchIfTrue label145
        push r:3, r:5, 2, r:'=rJ', 'slice'
        callMethod
        push 1, r:4, 'push'
        callMethod
        pop
        push r:7, 13
        equals
        dup
        not
        branchIfTrue label143
        pop
        push r:3, 1
        add
        push 1, r:'=rJ', 'charCodeAt'
        callMethod
        push 10
        equals
       label143:
        not
        branchIfTrue label144
        push r:3
        increment
        setRegister r:3
        pop
       label144:
        push r:3, 1
        add
        setRegister r:5
        pop
       label145:
        branch label140
       label146:
        push r:3, r:5, 2, r:'=rJ', 'slice'
        callMethod
        push 1, r:4, 'push'
        callMethod
        pop
        push r:4
        return
      end // of function 

      setMember
      push r:0, ',JBe0'
      function2 (r:2=';p(') (r:1='this')
        push 0, r:';p(', '],lYS'
        callMethod
        setRegister r:4
        pop
        push r:4, 'length'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:3
        pop
        branch label148
       label147:
        push r:3
        increment
        setRegister r:3
        pop
       label148:
        push r:3, r:5
        lessThan
        not
        branchIfTrue label149
        push r:5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:6
        pop
        push r:5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:7
        pop
        push r:4, r:6
        getMember
        setRegister r:8
        pop
        push r:4, r:6, r:4, r:7
        getMember
        setMember
        push r:4, r:7, r:8
        setMember
        branch label147
       label149:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '4UQ(1'
      function2 (r:2='}J') (r:1='this')
        push 0
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
       label150:
        push r:'}J', '_parent'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label151
        push r:3, r:'}J', '_x'
        getMember
        add
        setRegister r:3
        pop
        push r:4, r:'}J', '_y'
        getMember
        add
        setRegister r:4
        pop
        push r:'}J', '_parent'
        getMember
        setRegister r:'}J'
        pop
        branch label150
       label151:
        push '{2', r:3, '}2', r:4, 2
        initObject
        return
      end // of function 

      setMember
      push r:0, ' Ly7b'
      function2 (r:2='((', r:3='{nq3-(') (r:1='this')
        push r:'(('
        toString
        setRegister r:4
        pop
       label152:
        push r:4, 'length'
        getMember
        push r:'{nq3-('
        lessThan
        not
        branchIfTrue label153
        push '0', r:4
        add
        setRegister r:4
        pop
        branch label152
       label153:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '7g,ln'
      function2 (r:2='(') (r:1='this')
        push 0
        setRegister r:3
        pop
        push r:'(', 'length'
        getMember
        push 1
        subtract
        setRegister r:4
        pop
        branch label155
       label154:
        push r:4
        decrement
        setRegister r:4
        pop
       label155:
        push r:4, 0
        lessThan
        not
        not
        branchIfTrue label156
        push r:3, r:'(', r:4
        getMember
        add
        setRegister r:3
        pop
        branch label154
       label156:
        push r:3, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
       label157:
        push r:3, r:'(', r:4
        getMember
        lessThan
        not
        not
        branchIfTrue label158
        push r:3, r:'(', r:4
        getMember
        subtract
        setRegister r:3
        pop
        push r:4
        increment
        setRegister r:4
        pop
        branch label157
       label158:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '4*fgv'
      function2 (r:2='*QA', r:3='+QA') (r:1='this')
        push r:'*QA', 1, r:'*QA', 'getBounds'
        callMethod
        setRegister r:4
        pop
        push r:'*QA', 1, r:'+QA', 'getBounds'
        callMethod
        setRegister r:5
        pop
        push r:4, 'xMin'
        getMember
        push r:4, 'xMax'
        getMember
        add
        push 2
        divide
        push r:5, 'xMin'
        getMember
        push r:5, 'xMax'
        getMember
        add
        push 2
        divide
        subtract
        setRegister r:6
        pop
        push r:4, 'yMin'
        getMember
        push r:4, 'yMax'
        getMember
        add
        push 2
        divide
        push r:5, 'yMin'
        getMember
        push r:5, 'yMax'
        getMember
        add
        push 2
        divide
        subtract
        setRegister r:7
        pop
        push r:6, r:6
        multiply
        push r:7, r:7
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        return
      end // of function 

      setMember
      push r:0, '16KA'
      function2 ('}J') (r:1='this')
        push '(', 0, 'Array'
        new
        varEquals
        function2 (r:2='4') (r:1='this')
          push '}J'
          getVariable
          push r:'4'
          getMember
          setRegister r:3
          pop
          push r:3, 1, '3Wt'
          getVariable
          push ')goHJ('
          callMethod
          push 'movieclip'
          equals
          dup
          not
          branchIfTrue label159
          pop
          push r:3, '_parent'
          getMember
          push '}J'
          getVariable
          equals
         label159:
          not
          branchIfTrue label160
          push r:3, 1, '('
          getVariable
          push 'push'
          callMethod
          pop
         label160:
        end // of function 

        push '}J'
        getVariable
        push 2, '3Wt'
        getVariable
        push '9ss9+'
        callMethod
        pop
        push '('
        getVariable
        return
      end // of function 

      setMember
      push r:0, 'localToGlobal'
      function2 (r:2='}J', r:3='((', r:4=')(') (r:1='this')
        push 0, '19{O'
        new
        setRegister r:5
        pop
        push r:'((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:5, 1, r:'}J', 'localToGlobal'
        callMethod
        pop
        push '((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push ')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push 2
        initObject
        return
      end // of function 

      setMember
      push r:0, 'globalToLocal'
      function2 (r:2='}J', r:3='((', r:4=')(') (r:1='this')
        push 0, '19{O'
        new
        setRegister r:5
        pop
        push r:'((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:5, 1, r:'}J', 'globalToLocal'
        callMethod
        pop
        push '((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push ')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push 2
        initObject
        return
      end // of function 

      setMember
      push r:0, '{Gq]-'
      function2 () (r:1='this')
        push '$r', '$h', '$w', '$y', '$x', '$box', '$matrixType', '$radial', '$linear', 9
        initArray
        setRegister r:2
        pop
        push '-[m(M'
        getVariable
        push ']cY[2', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:3
        pop
        branch label162
       label161:
        push r:3
        increment
        setRegister r:3
        pop
       label162:
        push r:3, r:2, 'length'
        getMember
        lessThan
        not
        branchIfTrue label163
        push r:2, r:3
        getMember
        setRegister r:4
        pop
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push r:3, 1, 1, r:4, 'substring'
        callMethod
        setMember
        branch label161
       label163:
      end // of function 

      setMember
      push r:0, 'beginGradientFill'
      function2 (r:2='}J', r:3=' Wo02', r:4='=cKzE(', r:5='8)JNX', r:6='7eq8)', r:7='matrix') (r:1='this')
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push NULL
        equals
        not
        branchIfTrue label164
        push 0, '-[m(M'
        getVariable
        push '{Gq]-'
        callMethod
        pop
       label164:
        push 0, '19{O'
        new
        setRegister r:8
        pop
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 3
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 2
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, '(('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 4
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, ')('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 5
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, ' ('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 6
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, '1'
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 7
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, '='
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 8
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:8, r:'7eq8)', r:'8)JNX', r:'=cKzE(', r:' Wo02'
        not
        branchIfTrue label165
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 0
        getMember
        branch label166
       label165:
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 1
        getMember
       label166:
        push 5, r:'}J', 'beginGradientFill'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, ',[A(', 1, 1, '$x', 'substring'
      callMethod
      setMember
      push r:0, '-[A(', 1, 1, '$y', 'substring'
      callMethod
      setMember
      push r:0, ']cY[2', NULL
      setMember
    end // of frame 0
  end // of defineMovieClip 173
  
  exportAssets
    173 as '90D*'
  end // of exportAssets
end
