movie '89d6133a458f2eccc3beb32b01a9c138.swf' compressed // flash 8, total frames: 1, frame rate: 40 fps, 700x480 px


  defineMovieClip 1 // total frames: 1
  end // of defineMovieClip 1
  
  exportAssets
    1 as '1d{Bs'
  end // of exportAssets

  defineMovieClip 4 // total frames: 1
  end // of defineMovieClip 4

  defineMovieClip 6 // total frames: 1
  end // of defineMovieClip 6

  defineMovieClip 11 // total frames: 4
  end // of defineMovieClip 11

  defineMovieClip 12 // total frames: 23

    frame 12
      push '44=-'
      getVariable
      push NULL
      equals
      not
      branchIfTrue label1
      push '', 4
      getProperty
      push 1
      subtract
      gotoAndPlay
     label1:
    end // of frame 12

    frame 22
      push ''
      removeClip
    end // of frame 22
  end // of defineMovieClip 12
  
  exportAssets
    12 as '=7kjJ'
  end // of exportAssets

  defineMovieClip 14 // total frames: 1
  end // of defineMovieClip 14

  defineMovieClip 15 // total frames: 6

    frame 5
      push 0.0, '+KD'
      getVariable
      push '9T54'
      callMethod
      pop
    end // of frame 5
  end // of defineMovieClip 15
  
  exportAssets
    15 as '6u4iJ('
  end // of exportAssets

  defineMovieClip 33 // total frames: 18

    frame 17
      push 0.0, '+KD'
      getVariable
      push '9T54'
      callMethod
      pop
    end // of frame 17
  end // of defineMovieClip 33
  
  exportAssets
    33 as '1TIu1'
  end // of exportAssets

  defineMovieClip 55 // total frames: 29

    frame 28
      push 0.0, '+KD'
      getVariable
      push '9T54'
      callMethod
      pop
    end // of frame 28
  end // of defineMovieClip 55
  
  exportAssets
    55 as '5vp9A('
  end // of exportAssets

  defineMovieClip 57 // total frames: 1
  end // of defineMovieClip 57

  defineMovieClip 59 // total frames: 1
  end // of defineMovieClip 59

  defineMovieClip 61 // total frames: 1
  end // of defineMovieClip 61

  defineMovieClip 62 // total frames: 1

    frame 0
      constants '=', '_rotation', '_parent'  
      push '='
      getVariable
      push '_rotation', 0.0, '_parent'
      getVariable
      push '_rotation'
      getMember
      subtract
      setMember
    end // of frame 0
  end // of defineMovieClip 62

  defineMovieClip 79 // total frames: 29

    frame 20
      constants '+KD', '2VhU6', ',DBRf'  
      push '+KD'
      getVariable
      push '2VhU6', 5
      setMember
      push '+KD'
      getVariable
      push ',DBRf', 5
      setMember
    end // of frame 20

    frame 28
      push 0.0, '+KD'
      getVariable
      push '9T54'
      callMethod
      pop
    end // of frame 28
  end // of defineMovieClip 79
  
  exportAssets
    79 as '}LciA'
  end // of exportAssets

  defineMovieClip 83 // total frames: 3
  end // of defineMovieClip 83

  defineMovieClip 84 // total frames: 18

    frame 9
      push '5t 9)', 20
      setVariable
    end // of frame 9

    frame 11
      constants '5t 9)', ''  
      push '5t 9)'
      getVariable
      push '5t 9)', '5t 9)'
      getVariable
      decrement
      setVariable
      push 0.0
      greaterThan
      not
      branchIfTrue label1
      push '', 4
      getProperty
      push 1
      subtract
      gotoAndPlay
     label1:
    end // of frame 11

    frame 17
      push 0.0, '+KD'
      getVariable
      push '9T54'
      callMethod
      pop
    end // of frame 17
  end // of defineMovieClip 84
  
  exportAssets
    84 as '}UuJ='
  end // of exportAssets

  defineMovieClip 86 // total frames: 1
  end // of defineMovieClip 86
  
  exportAssets
    86 as ']BMyF('
  end // of exportAssets

  defineMovieClip 115 // total frames: 29

    frame 28
      push 0.0, '+KD'
      getVariable
      push '9T54'
      callMethod
      pop
    end // of frame 28
  end // of defineMovieClip 115
  
  exportAssets
    115 as '{e{=K('
  end // of exportAssets

  defineMovieClip 117 // total frames: 1
  end // of defineMovieClip 117
  
  exportAssets
    117 as ']GM*S'
  end // of exportAssets

  defineMovieClip 129 // total frames: 4

    frame 0
      push '', 5
      getProperty
      random
      push 1
      add
      gotoAndStop
    end // of frame 0
  end // of defineMovieClip 129

  defineMovieClip 130 // total frames: 12

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 130

  defineMovieClip 131 // total frames: 11
  end // of defineMovieClip 131
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets

  defineMovieClip 135 // total frames: 1
  end // of defineMovieClip 135

  defineMovieClip 137 // total frames: 6

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 137
  
  exportAssets
    137 as ';+'
  end // of exportAssets
  
  exportAssets
    137 as ';+'
  end // of exportAssets

  defineMovieClip 140 // total frames: 2
  end // of defineMovieClip 140
  
  exportAssets
    140 as '[mRn('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    117 as ']GM*S'
  end // of exportAssets
  
  exportAssets
    115 as '{e{=K('
  end // of exportAssets
  
  exportAssets
    86 as ']BMyF('
  end // of exportAssets
  
  exportAssets
    84 as '}UuJ='
  end // of exportAssets
  
  exportAssets
    79 as '}LciA'
  end // of exportAssets
  
  exportAssets
    55 as '5vp9A('
  end // of exportAssets
  
  exportAssets
    33 as '1TIu1'
  end // of exportAssets
  
  exportAssets
    137 as ';+'
  end // of exportAssets
  
  exportAssets
    140 as '[mRn('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    131 as '*f,Q('
  end // of exportAssets
  
  exportAssets
    15 as '6u4iJ('
  end // of exportAssets
  
  exportAssets
    12 as '=7kjJ'
  end // of exportAssets

  defineMovieClip 141 // total frames: 1

    frame 0
      constants '8A1t=', '+-(0', '}J', '=(,aA', '*YW--(', '*f,Q(', ']}lAm', '*=_p_', '3U*}=(', 'prototype', '==Uf7', 'Color', 'ra', 'rb', 'ga', 'gb', 'ba', 'bb', 'aa', 'ab', 'setTransform', 'reset', '(j;o7', '((', ')(', '_x', '*]UIA', '0A(', '_y', '1A(', '5R', '6R', 'onPress', '+U7Eq', '3Wt', '6{VYR', ';ndCG', '7vdL6(', '=HU11', '9oK', '(Erk5', ']', '2_KkV', '9VWhs', '+4MuO', 'removeMovieClip', ',n)L', '5b)bA(', '-_X}5', '$k', '{e{=K(', '=Zoz7', '=S7A', '_rotation', 'Math', 'random', '6u4iJ(', '1TIu1', '3sZ', '$w', '$m', ']GM*S', '{==W3(', 'cos', 'sin', ';T4D', '=T4D', '2VhU6', '}-B2', '5vp9A(', '}cl4B', '$b', ']BMyF(', 'scale', '5T4D', '+iLR(', '}UuJ=', '0tJ', 'gotoAndStop', 'flash', 'moveTo', '{-kxL', '-V;B', 'pow', 'sqrt', '73(', 'MovieClip', '(H5 S', '6Kg]D', '0yflg', '=', '0', ')', 'colorTransform', '6oFnY', '6[x2n', ';CYOh', '[MqDO', '*sd+;(', '-Q)9)', '3d0fx', ')gnqU', '=Y7h]', ' a9JY', ',i0 [', '*DzW', '6x9p', ',DBRf', '_xscale', '_yscale', '_alpha', '+KD', '87vE7(', ';)bt5', '_visible', '(KpGn', '5cBEm', 'length', '(X]Nl', '4T4D', '9T54', '{BxJE(', 'atan2', ')gv94', 'splice', '+7U K', ')2fr3', '}Zms3', 'Array', ']1sj+', '-fC3a', '7-,', ']bu40', '_name', 'swapDepths', 'attachMC', '18wU*', '-4*l((', '(GbB}', '+2NA', 'getDepth', 'floor', '}oQA7', 'unshift', '08M8', 'clear', '9(K ;', ',}2X (', 'Object', 'filters', '{lN=R', '4plQ5', 'getTimer', ';ILSy', '3R,QM', ';y}-6(', '-)Xd+', '[Ad;n', '6GI,F', 'fps', '(WBt)', ']}Ou;(', '3I0pG', '{;7F4', '8U(wu', '}[cpB', '9xv]A', '{yQ=Q', '+,W', '2y+dV', '(tBee', '3)i[=', ' J3IC', '[6jRc', ')8Fyj', '0vWVG', '(K', '=-', '[-', '0Lh]4(', '0c]08(', ' sM(i', '7diw+', 'push', '8h]TL', '7-,lT', '{uSN8', '[mRn(', ' OG_-', '*B', '-[m(M', ',JBe0', '9', '39kX5', '-cLYz', '=vJ);(', '=kIA', 'index', ',PPQ2(', '(v+i3', '44=-', '7T4cF(', '=7kjJ', '0V],D', '}LciA', 'play', '8+C5', '0D 6', '44{N', '4b{ey', ';+', '$n', '17dU+', '-NJ', '3GF', 'duplicate', '980Sb', '(kJ+1(', 'mode', ',Hwi)', 'clearInterval', '16(VU', '-', 'setInterval', '}wUHz', 'split', 'join', '', 'indexOf', 'slice', 'substring', '* I51', 'charCodeAt', '4UQ(1', '_parent', '{2', '}2', ' Ly7b', '0', '7g,ln', '4*fgv', 'getBounds', 'xMin', 'xMax', 'yMin', 'yMax', '16KA', '(', ')goHJ(', 'movieclip', '9ss9+', 'localToGlobal', '19{O', ',[A(', 'set', '-[A(', 'get', 'globalToLocal', '{Gq]-', '$r', '$h', '$y', '$x', '$box', '$matrixType', '$radial', '$linear', ']cY[2', 'beginGradientFill', ' (', '1'  
      push '8A1t='
      function2 (r:2='0', r:3=']') (r:1='this')
        push r:this, '+-(0', r:'0'
        setMember
        push r:this, '}J', '=(,aA'
        getVariable
        push '*YW--('
        getMember
        push '*f,Q(', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:']', 1, r:this, '3U*}=('
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '==Uf7'
      function2 (r:2=')') (r:1='this')
        push r:this, '}J'
        getMember
        push 1, 'Color'
        new
        setRegister r:3
        pop
        push r:')'
        not
        branchIfTrue label1
        push 'ra', 100, 'rb', -50, 'ga', 100, 'gb', -50, 'ba', 100, 'bb', -50, 'aa', 100, 'ab', 0, 8
        initObject
        push 1, r:3, 'setTransform'
        callMethod
        pop
        branch label2
       label1:
        push 0, r:3, 'reset'
        callMethod
        pop
       label2:
      end // of function 

      setMember
      push r:1, '(j;o7'
      function2 (r:2='((', r:3=')(') (r:1='this')
        push r:this, '((', r:'(('
        setMember
        push r:this, ')(', r:')('
        setMember
        push r:this, '}J'
        getMember
        push '_x', r:'((', '=(,aA'
        getVariable
        push '*]UIA'
        getMember
        multiply
        push '=(,aA'
        getVariable
        push '0A('
        getMember
        add
        setMember
        push r:this, '}J'
        getMember
        push '_y', r:')(', '=(,aA'
        getVariable
        push '*]UIA'
        getMember
        multiply
        push '=(,aA'
        getVariable
        push '1A('
        getMember
        add
        setMember
        push r:this, '5R', r:this, '}J'
        getMember
        push '_x'
        getMember
        setMember
        push r:this, '6R', r:this, '}J'
        getMember
        push '_y'
        getMember
        setMember
        push r:this, '}J'
        getMember
        push 'onPress', r:this, '+U7Eq', r:this, '+-(0'
        getMember
        push 3, '3Wt'
        getVariable
        push '6{VYR'
        callMethod
        setMember
        push r:this, '}J'
        getMember
        push 1, ';ndCG'
        getVariable
        push '7vdL6('
        callMethod
        pop
        push r:this, '+-(0'
        getMember
        push '=HU11'
        getMember
        push '9oK'
        getMember
        push r:'(('
        getMember
        push r:')(', r:this
        setMember
      end // of function 

      setMember
      push r:1, '(Erk5'
      function2 () (r:1='this')
        push r:this, ']'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label3
        push r:0, 1
        strictEquals
        branchIfTrue label3
        push r:0, 2
        strictEquals
        branchIfTrue label3
        push r:0, 3
        strictEquals
        branchIfTrue label3
        push r:0, '=(,aA'
        getVariable
        push '2_KkV'
        getMember
        strictEquals
        branchIfTrue label4
        push r:0, '=(,aA'
        getVariable
        push '9VWhs'
        getMember
        strictEquals
        branchIfTrue label5
        push r:0, '=(,aA'
        getVariable
        push '+4MuO'
        getMember
        strictEquals
        branchIfTrue label9
        branch label13
       label3:
        push 0, r:this, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, '}J', NULL
        setMember
        push '=(,aA'
        getVariable
        push ',n)L'
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$k', r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$k'
        getMember
        increment
        setMember
        push '{e{=K(', 1, r:this, '=Zoz7'
        callMethod
        setRegister r:2
        pop
        push r:2, '=S7A'
        getMember
        push '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        push '6u4iJ(', 1, r:this, '=Zoz7'
        callMethod
        pop
        branch label13
       label4:
        push 0, r:this, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, '}J', NULL
        setMember
        push '1TIu1', 1, r:this, '=Zoz7'
        callMethod
        pop
        push '=(,aA'
        getVariable
        push '3sZ'
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$w', r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$w'
        getMember
        increment
        setMember
        branch label13
       label5:
        push 0, r:this, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, '}J', NULL
        setMember
        push r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$m', r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$m'
        getMember
        increment
        setMember
        push 12
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        branch label7
       label6:
        push r:4
        increment
        setRegister r:4
        pop
       label7:
        push r:4, 6
        lessThan
        not
        branchIfTrue label8
        push ']GM*S', 1, r:this, '+-(0'
        getMember
        push '{==W3('
        callMethod
        setRegister r:5
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:6
        pop
        push r:6, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:7
        pop
        push r:6, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:8
        pop
        push 0.6, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.5
        multiply
        add
        setRegister r:9
        pop
        push r:5, '((', r:this, '5R'
        getMember
        push r:7, r:3
        multiply
        add
        setMember
        push r:5, ')(', r:this, '6R'
        getMember
        push r:8, r:3
        multiply
        add
        setMember
        push r:5, ';T4D', r:7, r:9
        multiply
        setMember
        push r:5, '=T4D', r:8, r:9
        multiply
        setMember
        push r:5, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push 0, r:5, '}-B2'
        callMethod
        pop
        branch label6
       label8:
        push '5vp9A(', 1, r:this, '=Zoz7'
        callMethod
        pop
        branch label13
       label9:
        push 0, r:this, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, '}J', NULL
        setMember
        push '=(,aA'
        getVariable
        push '}cl4B'
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$b', r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$b'
        getMember
        increment
        setMember
        push 0
        setRegister r:10
        pop
        branch label11
       label10:
        push r:10
        increment
        setRegister r:10
        pop
       label11:
        push r:10, 1
        lessThan
        not
        branchIfTrue label12
        push ']BMyF(', 1, r:this, '+-(0'
        getMember
        push '{==W3('
        callMethod
        setRegister r:11
        pop
        push r:11, '((', r:this, '5R'
        getMember
        setMember
        push r:11, ')(', r:this, '6R'
        getMember
        setMember
        push r:11, 'scale', 50
        setMember
        push r:11, '5T4D', 20
        setMember
        push r:11, '2VhU6', 20
        setMember
        push r:11, '+iLR(', 1, 1
        initArray
        setMember
        push 0, r:11, '}-B2'
        callMethod
        pop
        branch label10
       label12:
        push '}UuJ=', 1, r:this, '=Zoz7'
        callMethod
        setRegister r:12
        pop
        push 2, 1, r:12, '=S7A'
        getMember
        push '0tJ'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        branch label13
       label13:
        push r:this, ']'
        getMember
        push '=(,aA'
        getVariable
        push '9VWhs'
        getMember
        equals
        not
        not
        branchIfTrue label14
        push r:this, '}J'
        getMember
        push 1, r:this, '+-(0'
        getMember
        push 'flash'
        callMethod
        pop
       label14:
      end // of function 

      setMember
      push r:1, '=Zoz7'
      function2 (r:2='5P55') (r:1='this')
        push r:'5P55', 1, r:this, '+-(0'
        getMember
        push '{==W3('
        callMethod
        setRegister r:3
        pop
        push r:3, '((', r:this, '5R'
        getMember
        setMember
        push r:3, ')(', r:this, '6R'
        getMember
        setMember
        push 0, r:3, '}-B2'
        callMethod
        pop
        push r:3
        return
      end // of function 

      setMember
      push r:1, '3U*}=('
      function2 (r:2=']') (r:1='this')
        push r:this, ']', r:']'
        setMember
        push r:']', 1
        add
        toString
        push 1, r:this, '}J'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, 'moveTo'
      function2 (r:2='((', r:3=')(') (r:1='this')
        push r:'((', '=(,aA'
        getVariable
        push '*]UIA'
        getMember
        multiply
        push '=(,aA'
        getVariable
        push '0A('
        getMember
        add
        setRegister r:4
        pop
        push r:')(', '=(,aA'
        getVariable
        push '*]UIA'
        getMember
        multiply
        push '=(,aA'
        getVariable
        push '1A('
        getMember
        add
        setRegister r:5
        pop
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.8, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:6
        pop
        push r:this, '}J'
        getMember
        push '_x', r:this, '}J'
        getMember
        push '_x'
        getMember
        push r:6
        multiply
        push r:4, 1, r:6
        subtract
        multiply
        add
        setMember
        push r:this, '6R', r:this, '6R'
        getMember
        push r:6
        multiply
        push r:5, 1, r:6
        subtract
        multiply
        add
        setMember
        push r:4, r:this, '5R'
        getMember
        equals
        not
        not
        branchIfTrue label17
        push r:this, '}J'
        getMember
        push '_y', r:this, '6R'
        getMember
        push r:this, '}J'
        getMember
        push '_x'
        getMember
        push r:this, '5R'
        getMember
        subtract
        push 3.14
        multiply
        push r:4, r:this, '5R'
        getMember
        subtract
        divide
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:4, r:this, '5R'
        getMember
        lessThan
        not
        branchIfTrue label15
        push 10
        branch label16
       label15:
        push -10
       label16:
        multiply
        add
        setMember
        branch label18
       label17:
        push r:this, '}J'
        getMember
        push '_y', r:this, '6R'
        getMember
        setMember
       label18:
        push r:this, '}J'
        getMember
        push '_x'
        getMember
        push r:4
        subtract
        setRegister r:7
        pop
        push r:this, '}J'
        getMember
        push '_y'
        getMember
        push r:5
        subtract
        setRegister r:8
        pop
        push r:7, r:7
        multiply
        push r:8, r:8
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        setRegister r:9
        pop
        push r:9, 1
        greaterThan
        return
      end // of function 

      setMember
      push '73('
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'MovieClip'
      getVariable
      extends
      push r:0, '(H5 S'
      function2 (r:2='}J', r:3='(v+') (r:1='this')
        push r:'}J'
        setRegister r:4
        pop
        push r:4, '6Kg]D'
        getMember
        push NULL
        equals
        not
        branchIfTrue label19
        push r:4, 1, '73('
        getVariable
        push '0yflg'
        callMethod
        pop
       label19:
        push '=', r:'(v+', 16
        shiftRight
        push '0', r:'(v+', 8
        shiftRight
        push 255
        bitwiseAnd
        push ')', r:'(v+', 255
        bitwiseAnd
        push 3
        initObject
        setRegister r:5
        pop
        push r:4, 'colorTransform', 'ra', 100, 'ga', 100, 'ba', 100, 'aa', 100, 'rb', r:5, '='
        getMember
        push 255
        subtract
        push 'gb', r:5, '0'
        getMember
        push 255
        subtract
        push 'bb', r:5, ')'
        getMember
        push 255
        subtract
        push 'ab', 0, 8
        initObject
        setMember
        push r:4, 'colorTransform'
        getMember
        push 1, r:4, '6Kg]D'
        getMember
        push 'setTransform'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '6oFnY'
      function2 (r:2='}J', r:3='}2D*', r:4='}m6') (r:1='this')
        push r:'}J'
        setRegister r:5
        pop
        push r:5, '6Kg]D'
        getMember
        push NULL
        equals
        not
        branchIfTrue label20
        push r:5, 1, '73('
        getVariable
        push '0yflg'
        callMethod
        pop
       label20:
        push r:5, 'colorTransform'
        getMember
        push 'ra', r:5, 'colorTransform'
        getMember
        push 'ra'
        getMember
        push r:'}2D*'
        multiply
        setMember
        push r:5, 'colorTransform'
        getMember
        push 'ga', r:5, 'colorTransform'
        getMember
        push 'ga'
        getMember
        push r:'}2D*'
        multiply
        setMember
        push r:5, 'colorTransform'
        getMember
        push 'ba', r:5, 'colorTransform'
        getMember
        push 'ba'
        getMember
        push r:'}2D*'
        multiply
        setMember
        push r:5, 'colorTransform'
        getMember
        push 'rb', r:5, 'colorTransform'
        getMember
        push 'rb'
        getMember
        push r:'}m6'
        add
        setMember
        push r:5, 'colorTransform'
        getMember
        push 'gb', r:5, 'colorTransform'
        getMember
        push 'gb'
        getMember
        push r:'}m6'
        add
        setMember
        push r:5, 'colorTransform'
        getMember
        push 'bb', r:5, 'colorTransform'
        getMember
        push 'bb'
        getMember
        push r:'}m6'
        add
        setMember
        push r:5, 'colorTransform'
        getMember
        push 1, r:5, '6Kg]D'
        getMember
        push 'setTransform'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '0yflg'
      function2 (r:2='3OA') (r:1='this')
        push r:'3OA', '6Kg]D', r:'3OA', 1, 'Color'
        new
        setMember
        push r:'3OA', '6[x2n', 'ra', 100, 'ga', 100, 'ba', 100, 'aa', 100, 'rb', 0, 'gb', 0, 'bb', 0, 'ab', 0, 8
        initObject
        setMember
      end // of function 

      setMember
      push r:0, ';CYOh'
      function2 (r:2='}J', r:3='3GF', r:4='(v+') (r:1='this')
        push '=', r:'(v+', 16
        shiftRight
        push '0', r:'(v+', 8
        shiftRight
        push 255
        bitwiseAnd
        push ')', r:'(v+', 255
        bitwiseAnd
        push 3
        initObject
        setRegister r:5
        pop
        push r:'}J'
        setRegister r:6
        pop
        push r:6, '6Kg]D'
        getMember
        push NULL
        equals
        not
        branchIfTrue label21
        push r:6, 1, '73('
        getVariable
        push '0yflg'
        callMethod
        pop
       label21:
        push r:'3GF', 100
        divide
        setRegister r:7
        pop
        push r:6, 'colorTransform', 'ra', 100, r:'3GF'
        subtract
        int
        push 'ga', 100, r:'3GF'
        subtract
        int
        push 'ba', 100, r:'3GF'
        subtract
        int
        push 'aa', 100, 'rb', r:7, r:5, '='
        getMember
        multiply
        int
        push 'gb', r:7, r:5, '0'
        getMember
        multiply
        int
        push 'bb', r:7, r:5, ')'
        getMember
        multiply
        int
        push 'ab', 0, 8
        initObject
        setMember
        push r:6, 'colorTransform'
        getMember
        push 1, r:6, '6Kg]D'
        getMember
        push 'setTransform'
        callMethod
        pop
      end // of function 

      setMember
      push '=(,aA'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '0A(', 24
      setMember
      push r:0, '1A(', 24
      setMember
      push r:0, '[MqDO', 10
      setMember
      push r:0, '*sd+;(', 10
      setMember
      push r:0, '*]UIA', 28
      setMember
      push r:0, ',n)L', 150, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '3sZ', 50, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '}cl4B', 1000, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '3d0fx', 0
      setMember
      push r:0, ')gnqU', 1
      setMember
      push r:0, '*YW--(', 2
      setMember
      push r:0, '=Y7h]', 3
      setMember
      push r:0, ' a9JY', 4
      setMember
      push r:0, '+4MuO', 4
      setMember
      push r:0, '2_KkV', 9
      setMember
      push r:0, '9VWhs', 10
      setMember
      push ',i0 ['
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push '*DzW'
      function2 () (r:1='this')
        push r:this, '((', 0
        setMember
        push r:this, ')(', 0
        setMember
        push r:this, ';T4D', 0
        setMember
        push r:this, '=T4D', 0
        setMember
        push r:this, 'scale', 100
        setMember
        push r:this, '6x9p', 100
        setMember
        push r:this, '+iLR(', 0, 1
        initArray
        setMember
        push r:this, ',DBRf', 10
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '}-B2'
      function2 () (r:1='this')
        push r:this, '=S7A'
        getMember
        push '_xscale', r:this, 'scale'
        getMember
        setMember
        push r:this, '=S7A'
        getMember
        push '_yscale', r:this, 'scale'
        getMember
        setMember
        push r:this, '=S7A'
        getMember
        push '_alpha', r:this, '6x9p'
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '3U*}=('
      function2 (r:2='}J') (r:1='this')
        push r:this, '=S7A', r:'}J'
        setMember
        push r:'}J', '+KD', r:this
        setMember
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this')
        push r:this, ';)bt5'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label23
        push r:this, ';)bt5', r:this, ';)bt5'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, ';)bt5'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label22
        push r:this, '=S7A'
        getMember
        push '_visible', TRUE
        setMember
        push r:this, ';)bt5', NULL
        setMember
       label22:
        push UNDEF
        return
       label23:
        push FALSE
        setRegister r:2
        pop
        push r:this, '(KpGn'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label24
        push r:this, '=T4D', r:this, '=T4D'
        getMember
        push r:this, '(KpGn'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label24:
        push r:this, '5cBEm'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label25
        push r:this, ';T4D', r:this, ';T4D'
        getMember
        push r:this, '5cBEm'
        getMember
        multiply
        setMember
        push r:this, '=T4D', r:this, '=T4D'
        getMember
        push r:this, '5cBEm'
        getMember
        multiply
        setMember
       label25:
        push r:this, '((', r:this, '(('
        getMember
        push r:this, ';T4D'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push r:this, '=T4D'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '2VhU6'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label35
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '2VhU6'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label26
        push TRUE
        setRegister r:2
        pop
        branch label35
       label26:
        push r:this, '2VhU6'
        getMember
        push r:this, ',DBRf'
        getMember
        lessThan
        not
        branchIfTrue label35
        push r:this, '2VhU6'
        getMember
        push r:this, ',DBRf'
        getMember
        divide
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        branch label28
       label27:
        push r:4
        increment
        setRegister r:4
        pop
       label28:
        push r:4, r:this, '+iLR('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label35
        push r:this, '+iLR('
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push r:5
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label29
        push r:0, 1
        strictEquals
        branchIfTrue label30
        push r:0, 2
        strictEquals
        branchIfTrue label31
        push r:0, 3
        strictEquals
        branchIfTrue label32
        push r:0, 4
        strictEquals
        branchIfTrue label33
        branch label34
       label29:
        push r:this, '=S7A'
        getMember
        push '_xscale', r:3, r:this, 'scale'
        getMember
        multiply
        setMember
        push r:this, '=S7A'
        getMember
        push '_yscale', r:3, r:this, 'scale'
        getMember
        multiply
        setMember
        branch label34
       label30:
        push r:this, '=S7A'
        getMember
        push '_alpha', r:3, r:this, '6x9p'
        getMember
        multiply
        setMember
        branch label34
       label31:
        push r:this, '(X]Nl'
        getMember
        push 100, r:3, 100
        multiply
        subtract
        push r:this, '=S7A'
        getMember
        push 3, '73('
        getVariable
        push ';CYOh'
        callMethod
        pop
        branch label34
       label32:
        push r:this, '=S7A'
        getMember
        push '_xscale', r:this, 'scale'
        getMember
        push 2, r:3
        subtract
        multiply
        setMember
        push r:this, '=S7A'
        getMember
        push '_yscale', r:this, 'scale'
        getMember
        push 2, r:3
        subtract
        multiply
        setMember
        branch label34
       label33:
        push r:this, '=S7A'
        getMember
        push '_yscale', r:3, r:this, 'scale'
        getMember
        multiply
        setMember
        branch label34
       label34:
        branch label27
       label35:
        push r:this, '4T4D'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label37
        push r:this, '5cBEm'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label36
        push r:this, '4T4D', r:this, '4T4D'
        getMember
        push r:this, '5cBEm'
        getMember
        multiply
        setMember
       label36:
        push r:this, '=S7A'
        getMember
        push '_rotation', r:this, '=S7A'
        getMember
        push '_rotation'
        getMember
        push r:this, '4T4D'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label37:
        push r:this, '5T4D'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label39
        push r:this, '5cBEm'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label38
        push r:this, '5T4D', r:this, '5T4D'
        getMember
        push r:this, '5cBEm'
        getMember
        multiply
        setMember
       label38:
        push r:this, 'scale', r:this, 'scale'
        getMember
        push r:this, '5T4D'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '=S7A'
        getMember
        push '_xscale', r:this, 'scale'
        getMember
        setMember
        push r:this, '=S7A'
        getMember
        push '_yscale', r:this, 'scale'
        getMember
        setMember
       label39:
        push r:2
        not
        branchIfTrue label40
        push 0, r:this, '9T54'
        callMethod
        pop
       label40:
        push r:this, '=S7A'
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '=S7A'
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '{BxJE('
      function2 () (r:1='this')
        push r:this, '=S7A'
        getMember
        push '_rotation', r:this, ';T4D'
        getMember
        push r:this, '=T4D'
        getMember
        push 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        push 0.0174
        divide
        setMember
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label42
       label41:
        push r:2
        increment
        setRegister r:2
        pop
       label42:
        push r:2, r:this, '+-(0'
        getMember
        push ')gv94'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label44
        push r:this, '+-(0'
        getMember
        push ')gv94'
        getMember
        push r:2
        getMember
        push r:this
        equals
        not
        branchIfTrue label43
        push 1, r:2, 2, r:this, '+-(0'
        getMember
        push ')gv94'
        getMember
        push 'splice'
        callMethod
        pop
        branch label44
       label43:
        branch label41
       label44:
        push 0, r:this, '=S7A'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
      end // of function 

      setMember
      push '+7U K'
      function2 (r:2='}J') (r:1='this')
        push r:this, ')2fr3', r:'}J'
        setMember
        push r:this, '}Zms3', 0, 'Array'
        new
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, ']1sj+'
      function2 () (r:1='this')
        push r:this, ')2fr3'
        getMember
        return
      end // of function 

      setMember
      push r:1, '-fC3a'
      function2 (r:2='59F') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'59F'
        getMember
        setRegister r:3
        pop
        push r:3, NULL
        equals
        not
        branchIfTrue label45
        push '9oK', 0, 'Array'
        new
        push '7-,', 0, 2
        initObject
        setRegister r:3
        pop
        push r:this, '}Zms3'
        getMember
        push r:'59F', r:3
        setMember
       label45:
        push r:3
        return
      end // of function 

      setMember
      push r:1, ']bu40'
      function2 (r:2='[-99') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'[-99'
        getMember
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:7
        pop
        push r:'[-99', 1000
        multiply
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label47
       label46:
        push r:6
        increment
        setRegister r:6
        pop
       label47:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label49
        push r:4, r:6
        getMember
        push '_name'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label48
        push r:8, r:7
        add
        push 1, r:4, r:6
        getMember
        push 'swapDepths'
        callMethod
        pop
        push r:4, r:7, r:4, r:6
        getMember
        setMember
        push r:7
        increment
        setRegister r:7
        pop
       label48:
        branch label46
       label49:
        push r:3, '7-,', r:7
        setMember
      end // of function 

      setMember
      push r:1, '*=_p_'
      function2 (r:2='*KB2', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label50
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'*KB2', 2, r:this, '*=_p_'
        callMethod
        return
       label50:
        push r:6, r:'[-99', 1000
        multiply
        add
        push r:'*KB2', r:this, ')2fr3'
        getMember
        push 3, '3Wt'
        getVariable
        push 'attachMC'
        callMethod
        setRegister r:7
        pop
        push r:5, r:6, r:7
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:7
        return
      end // of function 

      setMember
      push r:1, '18wU*'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push r:5, 1000
        equals
        not
        branchIfTrue label51
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', 1, r:this, '18wU*'
        callMethod
        return
       label51:
        push r:5, r:'[-99', 1000
        multiply
        add
        push r:this, ')2fr3'
        getMember
        push 2, '3Wt'
        getVariable
        push '-4*l(('
        callMethod
        setRegister r:6
        pop
        push r:4, r:5, r:6
        setMember
        push r:3, '7-,', r:3, '7-,'
        getMember
        increment
        setMember
        push r:6
        return
      end // of function 

      setMember
      push r:1, '(GbB}'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label52
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        return
       label52:
        push r:5, r:6, r:'}J'
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:6, r:'[-99', 1000
        multiply
        add
        return
      end // of function 

      setMember
      push r:1, '+2NA'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        push 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, r:'[-99'
        equals
        not
        branchIfTrue label53
        push UNDEF
        return
       label53:
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:5, '7-,'
        getMember
        setRegister r:7
        pop
        push 0
        setRegister r:8
        pop
        branch label55
       label54:
        push r:8
        increment
        setRegister r:8
        pop
       label55:
        push r:8, r:7
        lessThan
        not
        branchIfTrue label57
        push r:6, r:8
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label56
        push r:6, r:8, NULL
        setMember
        branch label57
       label56:
        branch label54
       label57:
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}oQA7'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label58
        push r:6, r:7, NULL
        setMember
        push r:'}J', 1, r:6, 'unshift'
        callMethod
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label58:
      end // of function 

      setMember
      push r:1, '08M8'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label60
        push r:6, r:7, NULL
        setMember
        push r:5, '7-,'
        getMember
        push 1000
        equals
        not
        branchIfTrue label59
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label59:
        push r:5, '7-,'
        getMember
        setRegister r:3
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:3, r:4, 1000
        multiply
        add
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
        push r:6, r:3, r:'}J'
        setMember
       label60:
      end // of function 

      setMember
      push r:1, 'clear'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:4
        pop
        branch label62
       label61:
        push r:4
        increment
        setRegister r:4
        pop
       label62:
        push r:4, r:3, '7-,'
        getMember
        lessThan
        not
        branchIfTrue label63
        push 0, r:5, r:4
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label61
       label63:
        push r:3, '7-,', 0
        setMember
      end // of function 

      setMember
      push r:1, '9(K ;'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push -99999999
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label65
       label64:
        push r:6
        increment
        setRegister r:6
        pop
       label65:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label73
        push r:4, r:6
        getMember
        setRegister r:9
        pop
        push r:9, '_y'
        getMember
        setRegister r:10
        pop
        push r:10, r:8
        lessThan
        not
        not
        branchIfTrue label66
        push r:10
        setRegister r:8
        pop
        branch label72
       label66:
        push r:6
        setRegister r:7
        pop
        branch label68
       label67:
        push r:7
        decrement
        setRegister r:7
        pop
       label68:
        push r:7, 0
        greaterThan
        not
        branchIfTrue label71
        push r:4, r:7, 1
        subtract
        getMember
        setRegister r:11
        pop
        push r:11, '_y'
        getMember
        push r:10
        greaterThan
        not
        branchIfTrue label69
        push r:4, r:7, r:11
        setMember
        push r:11, 1, r:9, 'swapDepths'
        callMethod
        pop
        branch label70
       label69:
        push r:4, r:7, r:9
        setMember
        branch label71
       label70:
        branch label67
       label71:
        push r:7, 0
        equals
        not
        branchIfTrue label72
        push r:4, 0, r:9
        setMember
       label72:
        branch label64
       label73:
      end // of function 

      setMember
      push r:1, ',}2X ('
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label75
       label74:
        push r:2
        increment
        setRegister r:2
        pop
       label75:
        push r:2, r:this, '}Zms3'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label76
        push r:2, 1, r:this, 'clear'
        callMethod
        pop
        branch label74
       label76:
      end // of function 

      setMember
      push 'flash'
      getVariable
      not
      not
      branchIfTrue label77
      push 'flash', 0, 'Object'
      new
      setVariable
     label77:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      not
      not
      branchIfTrue label78
      push 'flash'
      getVariable
      push 'filters', 0, 'Object'
      new
      setMember
     label78:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      push '{lN=R'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setMember
      push '{-kxL'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '87vE7('
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '4plQ5', '{-kxL'
        getVariable
        push '4plQ5'
        getMember
        increment
        setMember
        push 0, '3Wt'
        getVariable
        push 'getTimer'
        callMethod
        setRegister r:2
        pop
        push '{-kxL'
        getVariable
        push ';ILSy', r:2, '{-kxL'
        getVariable
        push '3R,QM'
        getMember
        subtract
        push 1000.0
        divide
        setMember
        push '{-kxL'
        getVariable
        push '3R,QM', r:2
        setMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        push '{-kxL'
        getVariable
        push ';y}-6('
        getMember
        lessThan
        not
        branchIfTrue label79
        push '{-kxL'
        getVariable
        push '-)Xd+', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        push '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        multiply
        push 1, '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        subtract
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        multiply
        add
        setMember
        branch label80
       label79:
        push '{-kxL'
        getVariable
        push ';ILSy', 1, '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        divide
        setMember
       label80:
        push '{-kxL'
        getVariable
        push '-V;B', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        setMember
      end // of function 

      setMember
      push r:0, 'fps'
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        return
      end // of function 

      setMember
      push r:0, '6GI,F', 32
      setMember
      push r:0, ';y}-6(', 0.5
      setMember
      push r:0, '3R,QM', 0, '3Wt'
      getVariable
      push 'getTimer'
      callMethod
      setMember
      push r:0, '[Ad;n', 0.95
      setMember
      push r:0, '-)Xd+', 1
      setMember
      push r:0, '-V;B', 1
      setMember
      push r:0, ';ILSy', 1
      setMember
      push r:0, '4plQ5', 0
      setMember
      push '(WBt)'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ']}Ou;(', 1
      setMember
      push r:0, '3I0pG', 2
      setMember
      push r:0, '{;7F4', 3
      setMember
      push r:0, '8U(wu', 4
      setMember
      push r:0, '}[cpB', 5
      setMember
      push r:0, '9xv]A', 6
      setMember
      push r:0, '{yQ=Q', 7
      setMember
      push r:0, '+,W', 8
      setMember
      push r:0, '2y+dV', 9
      setMember
      push r:0, '(tBee', 10
      setMember
      push r:0, '3)i[=', 11
      setMember
      push r:0, ' J3IC', 12
      setMember
      push r:0, '[6jRc', 13
      setMember
      push r:0, ')8Fyj', 14
      setMember
      push '0vWVG'
      function2 (r:2='0') (r:1='this')
        push r:this, '+-(0', r:'0'
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '}-B2'
      function2 () (r:1='this')
        push r:this, '9oK', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:2
        pop
        branch label82
       label81:
        push r:2
        increment
        setRegister r:2
        pop
       label82:
        push r:2, '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        lessThan
        not
        branchIfTrue label90
        push r:this, '9oK'
        getMember
        push r:2, 0, 'Array'
        new
        setMember
        push 0
        setRegister r:3
        pop
        branch label84
       label83:
        push r:3
        increment
        setRegister r:3
        pop
       label84:
        push r:3, '=(,aA'
        getVariable
        push '*sd+;('
        getMember
        lessThan
        not
        branchIfTrue label89
        branch label87
       label85:
        push r:4, r:this, '9oK'
        getMember
        push r:2, 1
        subtract
        getMember
        push r:3
        getMember
        push ']'
        getMember
        equals
        dup
        branchIfTrue label86
        pop
        push r:4, r:this, '9oK'
        getMember
        push r:2
        getMember
        push r:3, 1
        subtract
        getMember
        push ']'
        getMember
        equals
       label86:
        not
        branchIfTrue label88
       label87:
        push 4, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:4
        pop
        branch label85
       label88:
        push r:4, r:this, '+-(0'
        getMember
        push 2, '8A1t='
        new
        setRegister r:5
        pop
        push r:3, r:2, 2, r:5, '(j;o7'
        callMethod
        pop
        branch label83
       label89:
        branch label81
       label90:
        push 0
        setRegister r:6
        pop
        branch label92
       label91:
        push r:6
        increment
        setRegister r:6
        pop
       label92:
        push r:6, 4
        lessThan
        not
        branchIfTrue label95
        push r:this, '9oK'
        getMember
        push '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        getMember
        push '=(,aA'
        getVariable
        push '*sd+;('
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        getMember
        setRegister r:7
        pop
        push r:7, ']'
        getMember
        push '=(,aA'
        getVariable
        push '+4MuO'
        getMember
        lessThan
        not
        branchIfTrue label93
        push '=(,aA'
        getVariable
        push '9VWhs'
        getMember
        push 1, r:7, '3U*}=('
        callMethod
        pop
        branch label94
       label93:
        push r:6
        decrement
        setRegister r:6
        pop
       label94:
        branch label91
       label95:
        push 1, 5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        add
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label97
       label96:
        push r:6
        increment
        setRegister r:6
        pop
       label97:
        push r:6, r:8
        lessThan
        not
        branchIfTrue label100
        push r:this, '9oK'
        getMember
        push '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        getMember
        push '=(,aA'
        getVariable
        push '*sd+;('
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        getMember
        setRegister r:9
        pop
        push r:9, ']'
        getMember
        push '=(,aA'
        getVariable
        push '+4MuO'
        getMember
        lessThan
        not
        branchIfTrue label98
        push '=(,aA'
        getVariable
        push '+4MuO'
        getMember
        push 1, r:9, '3U*}=('
        callMethod
        pop
        branch label99
       label98:
        push r:6
        decrement
        setRegister r:6
        pop
       label99:
        branch label96
       label100:
      end // of function 

      setMember
      push r:1, '+2NA'
      function2 ('=-', '[-') (r:1='this')
        push '(K', r:this
        varEquals
        push '=-'
        getVariable
        push '}J'
        getMember
        push 1, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '08M8'
        callMethod
        pop
        push '[-'
        getVariable
        push '}J'
        getMember
        push 1, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '08M8'
        callMethod
        pop
        push r:this, '0Lh]4('
        function2 () (r:1='this')
          push '[-'
          getVariable
          push ')('
          getMember
          push '[-'
          getVariable
          push '(('
          getMember
          push 2, '=-'
          getVariable
          push 'moveTo'
          callMethod
          setRegister r:2
          pop
          push '=-'
          getVariable
          push ')('
          getMember
          push '=-'
          getVariable
          push '(('
          getMember
          push 2, '[-'
          getVariable
          push 'moveTo'
          callMethod
          setRegister r:3
          pop
          push r:2
          not
          dup
          not
          branchIfTrue label101
          pop
          push r:3
          not
         label101:
          not
          branchIfTrue label102
          push '((', '=-'
          getVariable
          push '(('
          getMember
          push ')(', '=-'
          getVariable
          push ')('
          getMember
          push 2
          initObject
          setRegister r:4
          pop
          push '[-'
          getVariable
          push ')('
          getMember
          push '[-'
          getVariable
          push '(('
          getMember
          push 2, '=-'
          getVariable
          push '(j;o7'
          callMethod
          pop
          push r:4, ')('
          getMember
          push r:4, '(('
          getMember
          push 2, '[-'
          getVariable
          push '(j;o7'
          callMethod
          pop
          push 0, '(K'
          getVariable
          push '0c]08('
          callMethod
          pop
         label102:
        end // of function 

        setMember
      end // of function 

      setMember
      push r:1, ' sM(i'
      function2 (r:2=')', r:3='((', r:4=')(', r:5='0') (r:1='this')
        push r:')', ']'
        getMember
        setRegister r:6
        pop
        push r:')', '7diw+', r:'0'
        setMember
        push r:')', 1, r:'0', 'push'
        callMethod
        pop
        push r:this, '9oK'
        getMember
        push r:'((', 1
        subtract
        getMember
        push r:')('
        getMember
        setRegister r:')'
        pop
        push r:')', ']'
        getMember
        push r:6
        equals
        dup
        not
        branchIfTrue label103
        pop
        push r:')', '7diw+'
        getMember
        push NULL
        equals
       label103:
        not
        branchIfTrue label104
        push r:'0', r:')(', r:'((', 1
        subtract
        push r:')', 4, r:this, ' sM(i'
        callMethod
        pop
       label104:
        push r:this, '9oK'
        getMember
        push r:'((', 1
        add
        getMember
        push r:')('
        getMember
        setRegister r:')'
        pop
        push r:')', ']'
        getMember
        push r:6
        equals
        dup
        not
        branchIfTrue label105
        pop
        push r:')', '7diw+'
        getMember
        push NULL
        equals
       label105:
        not
        branchIfTrue label106
        push r:'0', r:')(', r:'((', 1
        add
        push r:')', 4, r:this, ' sM(i'
        callMethod
        pop
       label106:
        push r:this, '9oK'
        getMember
        push r:'(('
        getMember
        push r:')(', 1
        subtract
        getMember
        setRegister r:')'
        pop
        push r:')', ']'
        getMember
        push r:6
        equals
        dup
        not
        branchIfTrue label107
        pop
        push r:')', '7diw+'
        getMember
        push NULL
        equals
       label107:
        not
        branchIfTrue label108
        push r:'0', r:')(', 1
        subtract
        push r:'((', r:')', 4, r:this, ' sM(i'
        callMethod
        pop
       label108:
        push r:this, '9oK'
        getMember
        push r:'(('
        getMember
        push r:')(', 1
        add
        getMember
        setRegister r:')'
        pop
        push r:')', ']'
        getMember
        push r:6
        equals
        dup
        not
        branchIfTrue label109
        pop
        push r:')', '7diw+'
        getMember
        push NULL
        equals
       label109:
        not
        branchIfTrue label110
        push r:'0', r:')(', 1
        add
        push r:'((', r:')', 4, r:this, ' sM(i'
        callMethod
        pop
       label110:
      end // of function 

      setMember
      push r:1, '8h]TL'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label112
       label111:
        push r:2
        increment
        setRegister r:2
        pop
       label112:
        push r:2, '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        lessThan
        not
        branchIfTrue label116
        push 0
        setRegister r:3
        pop
        branch label114
       label113:
        push r:3
        increment
        setRegister r:3
        pop
       label114:
        push r:3, '=(,aA'
        getVariable
        push '*sd+;('
        getMember
        lessThan
        not
        branchIfTrue label115
        push r:this, '9oK'
        getMember
        push r:2
        getMember
        push r:3
        getMember
        push '7diw+', NULL
        setMember
        branch label113
       label115:
        branch label111
       label116:
        push r:this, '7-,lT', 0, 'Array'
        new
        setMember
        push FALSE
        setRegister r:4
        pop
        push 0
        setRegister r:2
        pop
        branch label118
       label117:
        push r:2
        increment
        setRegister r:2
        pop
       label118:
        push r:2, '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        lessThan
        not
        branchIfTrue label125
        push 0
        setRegister r:3
        pop
        branch label120
       label119:
        push r:3
        increment
        setRegister r:3
        pop
       label120:
        push r:3, '=(,aA'
        getVariable
        push '*sd+;('
        getMember
        lessThan
        not
        branchIfTrue label124
        push r:this, '9oK'
        getMember
        push r:2
        getMember
        push r:3
        getMember
        setRegister r:5
        pop
        push r:5, NULL
        equals
        not
        dup
        not
        branchIfTrue label121
        pop
        push r:5, '7diw+'
        getMember
        push NULL
        equals
       label121:
        not
        branchIfTrue label123
        push 0, 'Array'
        new
        setRegister r:6
        pop
        push r:6, r:3, r:2, r:5, 4, r:this, ' sM(i'
        callMethod
        pop
        push r:6, 'length'
        getMember
        push 1
        greaterThan
        not
        branchIfTrue label122
        push r:6, 1, r:this, '7-,lT'
        getMember
        push 'push'
        callMethod
        pop
       label122:
        push TRUE
        setRegister r:4
        pop
       label123:
        branch label119
       label124:
        branch label117
       label125:
        push r:4
        return
      end // of function 

      setMember
      push r:1, '{uSN8'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label127
       label126:
        push r:2
        increment
        setRegister r:2
        pop
       label127:
        push r:2, r:this, '7-,lT'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label135
        push r:this, '7-,lT'
        getMember
        push r:2
        getMember
        setRegister r:4
        pop
        push r:4, 'length'
        getMember
        push 2
        greaterThan
        dup
        not
        branchIfTrue label128
        pop
        push r:4, 0
        getMember
        push ']'
        getMember
        push '=(,aA'
        getVariable
        push '+4MuO'
        getMember
        lessThan
       label128:
        not
        branchIfTrue label134
        push 0
        setRegister r:3
        pop
        branch label130
       label129:
        push r:3
        increment
        setRegister r:3
        pop
       label130:
        push r:3, r:4, 'length'
        getMember
        lessThan
        not
        branchIfTrue label134
        push r:4, r:3
        getMember
        setRegister r:5
        pop
        push r:5, '}J'
        getMember
        push 1, r:this, '+-(0'
        getMember
        push 'flash'
        callMethod
        pop
        push '=(,aA'
        getVariable
        push '2_KkV'
        getMember
        push 1, r:5, '3U*}=('
        callMethod
        pop
        push 0
        setRegister r:6
        pop
        branch label132
       label131:
        push r:6
        increment
        setRegister r:6
        pop
       label132:
        push r:6, 10
        lessThan
        not
        branchIfTrue label133
        push '[mRn(', 1, r:this, '+-(0'
        getMember
        push '{==W3('
        callMethod
        setRegister r:7
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:8
        pop
        push r:8, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:9
        pop
        push r:8, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:10
        pop
        push 14, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        add
        setRegister r:11
        pop
        push r:7, '((', r:5, '5R'
        getMember
        push r:9, r:11
        multiply
        add
        setMember
        push r:7, ')(', r:5, '6R'
        getMember
        push r:10, r:11
        multiply
        add
        setMember
        push r:7, ';T4D', r:9, r:11
        multiply
        push 0.05
        multiply
        setMember
        push r:7, '=T4D', r:10, r:11
        multiply
        push 0.05
        multiply
        setMember
        push r:7, '2VhU6', 6, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 12
        multiply
        add
        setMember
        push r:7, 'scale', 50, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 80
        multiply
        add
        setMember
        push 0, r:7, '}-B2'
        callMethod
        pop
        branch label131
       label133:
        branch label129
       label134:
        branch label126
       label135:
      end // of function 

      setMember
      push r:1, ' OG_-'
      function2 (r:2='max') (r:1='this')
        push '((', 0, ')(', -1, '*B', 3, 3
        initObject
        push '((', -1, ')(', 0, '*B', 2, 3
        initObject
        push '((', 0, ')(', 1, '*B', 1, 3
        initObject
        push '((', 1, ')(', 0, '*B', 0, 3
        initObject
        push 4
        initArray
        setRegister r:5
        pop
        push FALSE
        setRegister r:6
        pop
        push FALSE
        setRegister r:7
        pop
        push 0
        setRegister r:3
        pop
        branch label137
       label136:
        push r:3
        increment
        setRegister r:3
        pop
       label137:
        push r:3, '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        lessThan
        not
        branchIfTrue label148
        push 0
        setRegister r:4
        pop
        branch label139
       label138:
        push r:4
        increment
        setRegister r:4
        pop
       label139:
        push r:4, '=(,aA'
        getVariable
        push '*sd+;('
        getMember
        lessThan
        not
        branchIfTrue label147
        push r:this, '9oK'
        getMember
        push r:3
        getMember
        push r:4
        getMember
        setRegister r:8
        pop
        push r:8, ']'
        getMember
        push '=(,aA'
        getVariable
        push '9VWhs'
        getMember
        lessThan
        not
        not
        branchIfTrue label146
        push r:5, 1, '-[m(M'
        getVariable
        push ',JBe0'
        callMethod
        setRegister r:9
        pop
        push 0
        setRegister r:10
        pop
        branch label141
       label140:
        push r:10
        increment
        setRegister r:10
        pop
       label141:
        push r:10, 4
        lessThan
        not
        branchIfTrue label146
        push r:this, '9oK'
        getMember
        push r:3, r:9, r:10
        getMember
        push '(('
        getMember
        add
        getMember
        push r:4, r:9, r:10
        getMember
        push ')('
        getMember
        add
        getMember
        setRegister r:11
        pop
        push r:11, ']'
        getMember
        push '=(,aA'
        getVariable
        push '2_KkV'
        getMember
        lessThan
        not
        branchIfTrue label145
        push TRUE
        setRegister r:7
        pop
        push r:8, '7diw+'
        getMember
        push NULL
        equals
        dup
        branchIfTrue label142
        pop
        push r:max, 0
        equals
       label142:
        dup
        branchIfTrue label143
        pop
        push r:8, '7diw+'
        getMember
        push 'length'
        getMember
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        int
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
       label143:
        not
        branchIfTrue label144
        branch label146
       label144:
        push r:max
        decrement
        setRegister r:max
        pop
        push TRUE
        setRegister r:6
        pop
        push r:8, ']'
        getMember
        push 1, r:11, '3U*}=('
        callMethod
        pop
        push r:11, '7diw+', NULL
        setMember
        push ')', r:8, '[-', r:11, '=', r:9, r:10
        getMember
        push '*B'
        getMember
        push '9', NULL, 4
        initObject
        push 1, r:this, '39kX5'
        getMember
        push 'push'
        callMethod
        pop
        branch label146
       label145:
        branch label140
       label146:
        branch label138
       label147:
        branch label136
       label148:
        push r:max, 0
        greaterThan
        dup
        not
        branchIfTrue label149
        pop
        push r:6
        not
       label149:
        dup
        not
        branchIfTrue label150
        pop
        push r:7
       label150:
        not
        branchIfTrue label151
        push r:max, 1, r:this, ' OG_-'
        callMethod
        return
       label151:
        push r:7
        return
      end // of function 

      setMember
      push r:1, '0c]08('
      function2 () (r:1='this')
        push r:this
        setRegister r:2
        pop
        push r:this, '0Lh]4(', NULL
        setMember
        push 0, r:this, '8h]TL'
        callMethod
        pop
        push 0, r:this, '{uSN8'
        callMethod
        pop
        push r:this, '39kX5', 0, 'Array'
        new
        setMember
        push 5, 1, r:this, ' OG_-'
        callMethod
        pop
        push 0, 1, r:this, ' OG_-'
        callMethod
        not
        not
        branchIfTrue label152
        push 0, r:this, '-cLYz'
        callMethod
        pop
        push UNDEF
        return
       label152:
        push 0, r:this, '=vJ);('
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '-cLYz'
      function2 () (r:1='this')
        push r:this, '=kIA', 0
        setMember
        push r:this, 'index', 0
        setMember
        push r:this, '2VhU6', 0, 1
        initArray
        setMember
        push r:this, '0Lh]4(', ',}2X (', r:this, 2, '3Wt'
        getVariable
        push '6{VYR'
        callMethod
        setMember
        push 0, r:this, ',PPQ2('
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ',}2X ('
      function2 () (r:1='this')
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        push 1
        initArray
        setMember
        push r:this, '2VhU6'
        getMember
        push 0
        getMember
        push 0
        lessThan
        not
        branchIfTrue label170
       label153:
        push TRUE
        not
        branchIfTrue label168
        push FALSE
        setRegister r:2
        pop
        push r:this, 'index'
        getMember
        push '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        modulo
        setRegister r:3
        pop
        push r:this, 'index'
        getMember
        push '=(,aA'
        getVariable
        push '*sd+;('
        getMember
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:this, '9oK'
        getMember
        push r:3
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label154
        push r:0, 1
        strictEquals
        branchIfTrue label156
        push r:0, 2
        strictEquals
        branchIfTrue label158
        push r:0, 3
        strictEquals
        branchIfTrue label160
        push r:0, 4
        strictEquals
        branchIfTrue label162
        branch label163
       label154:
        push r:5, ']'
        getMember
        push '=(,aA'
        getVariable
        push '9VWhs'
        getMember
        equals
        not
        branchIfTrue label155
        push 0, r:5, '(Erk5'
        callMethod
        pop
        push TRUE
        setRegister r:2
        pop
       label155:
        branch label163
       label156:
        push r:5, ']'
        getMember
        push '=(,aA'
        getVariable
        push '2_KkV'
        getMember
        equals
        not
        branchIfTrue label157
        push 0, r:5, '(Erk5'
        callMethod
        pop
        push TRUE
        setRegister r:2
        pop
       label157:
        branch label163
       label158:
        push r:5, ']'
        getMember
        push 4
        lessThan
        not
        branchIfTrue label159
        push 0, r:5, '(Erk5'
        callMethod
        pop
        push TRUE
        setRegister r:2
        pop
       label159:
        branch label163
       label160:
        push r:5, ']'
        getMember
        push '=(,aA'
        getVariable
        push '+4MuO'
        getMember
        equals
        not
        branchIfTrue label161
        push 0, r:5, '(Erk5'
        callMethod
        pop
        push TRUE
        setRegister r:2
        pop
       label161:
        branch label163
       label162:
        push TRUE
        setRegister r:2
        pop
        branch label163
       label163:
        push r:this, 'index', r:this, 'index'
        getMember
        increment
        setMember
        push '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        push '=(,aA'
        getVariable
        push '*sd+;('
        getMember
        multiply
        setRegister r:6
        pop
        push r:this, 'index'
        getMember
        push r:6
        lessThan
        not
        not
        branchIfTrue label166
        push r:this, 'index', 0
        setMember
        push r:this, '=kIA', r:this, '=kIA'
        getMember
        increment
        setMember
        push TRUE
        setRegister r:2
        pop
        push r:this, '2VhU6', 10, 1
        initArray
        setMember
        push r:this, '=kIA'
        getMember
        push 3
        greaterThan
        not
        branchIfTrue label164
        push r:this, '(v+i3'
        getMember
        push '44=-', TRUE
        setMember
        push r:this, '0Lh]4(', NULL
        setMember
        push r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push 1, ';ndCG'
        getVariable
        push '7T4cF('
        callMethod
        pop
        branch label166
       label164:
        push r:this, '(v+i3'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label165
        push r:this, '(v+i3'
        getMember
        push '44=-', TRUE
        setMember
       label165:
        push 0, r:this, ',PPQ2('
        callMethod
        pop
       label166:
        push r:2
        not
        branchIfTrue label167
        branch label168
       label167:
        branch label153
       label168:
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push 0
        getMember
        push 1.5
        add
        push 1
        initArray
        setMember
        push r:this, '=kIA'
        getMember
        push 3
        equals
        not
        branchIfTrue label169
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push 0
        getMember
        push 16
        add
        push 1
        initArray
        setMember
       label169:
        push r:this, '=kIA'
        getMember
        push 1
        equals
        not
        branchIfTrue label170
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push 0
        getMember
        push 4
        add
        push 1
        initArray
        setMember
       label170:
      end // of function 

      setMember
      push r:1, ',PPQ2('
      function2 () (r:1='this')
        push r:this, '(v+i3', '=(,aA'
        getVariable
        push ' a9JY'
        getMember
        push '=7kjJ', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '=kIA'
        getMember
        push 1
        add
        toString
        push 1, r:this, '(v+i3'
        getMember
        push '9'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '(v+i3'
        getMember
        push '_x', 300
        setMember
        push r:this, '(v+i3'
        getMember
        push '_y', 300
        setMember
      end // of function 

      setMember
      push r:1, '=vJ);('
      function2 () (r:1='this')
        push r:this, 'index', 0
        setMember
        push r:this, '0Lh]4(', '0V],D', r:this, 2, '3Wt'
        getVariable
        push '6{VYR'
        callMethod
        setMember
        push 0
        setRegister r:2
        pop
        branch label172
       label171:
        push r:2
        increment
        setRegister r:2
        pop
       label172:
        push r:2, r:this, '39kX5'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label173
        push r:this, '39kX5'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3, '[-'
        getMember
        push '}J'
        getMember
        push '_alpha', 0
        setMember
        push '}LciA', 1, r:this, '+-(0'
        getMember
        push '{==W3('
        callMethod
        setRegister r:4
        pop
        push r:4, '((', r:3, ')'
        getMember
        push '5R'
        getMember
        setMember
        push r:4, ')(', r:3, ')'
        getMember
        push '6R'
        getMember
        setMember
        push r:4, '+iLR(', 1, 1
        initArray
        setMember
        push 0, r:4, '}-B2'
        callMethod
        pop
        push r:4, '=S7A'
        getMember
        push '_rotation', r:3, '='
        getMember
        push 90
        multiply
        setMember
        push r:4, '=S7A'
        getMember
        push '_alpha', 0
        setMember
        push r:3, '9', r:4
        setMember
        branch label171
       label173:
      end // of function 

      setMember
      push r:1, '0V],D'
      function2 () (r:1='this')
        push r:this, 'index', r:this, 'index'
        getMember
        increment
        setMember
        push r:this, 'index'
        getMember
        push 5
        greaterThan
        not
        not
        branchIfTrue label176
        push 0
        setRegister r:2
        pop
        branch label175
       label174:
        push r:2
        increment
        setRegister r:2
        pop
       label175:
        push r:2, r:this, '39kX5'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label176
        push r:this, '39kX5'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3, '9'
        getMember
        push '=S7A'
        getMember
        push '_alpha', r:this, 'index'
        getMember
        push 20
        multiply
        setMember
        push r:3, ')'
        getMember
        push '}J'
        getMember
        push '_alpha', 100, r:3, '9'
        getMember
        push '=S7A'
        getMember
        push '_alpha'
        getMember
        subtract
        setMember
        branch label174
       label176:
        push r:this, 'index'
        getMember
        push 20
        equals
        not
        branchIfTrue label179
        push 0
        setRegister r:4
        pop
        branch label178
       label177:
        push r:4
        increment
        setRegister r:4
        pop
       label178:
        push r:4, r:this, '39kX5'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label179
        push r:this, '39kX5'
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push r:5, ')'
        getMember
        push '}J'
        getMember
        push '_alpha', 100, 25, r:this, 'index'
        getMember
        subtract
        push 20
        multiply
        subtract
        setMember
        push r:5, '[-'
        getMember
        push '}J'
        getMember
        push '_alpha', 100, 25, r:this, 'index'
        getMember
        subtract
        push 20
        multiply
        subtract
        setMember
        branch label177
       label179:
        push r:this, 'index'
        getMember
        push 20
        greaterThan
        not
        branchIfTrue label184
        push 0
        setRegister r:6
        pop
        branch label181
       label180:
        push r:6
        increment
        setRegister r:6
        pop
       label181:
        push r:6, r:this, '39kX5'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label184
        push r:this, '39kX5'
        getMember
        push r:6
        getMember
        setRegister r:7
        pop
        push r:7, ')'
        getMember
        push '}J'
        getMember
        push '_alpha', 100, 25, r:this, 'index'
        getMember
        subtract
        push 20
        multiply
        subtract
        setMember
        push r:7, '[-'
        getMember
        push '}J'
        getMember
        push '_alpha', 100, 25, r:this, 'index'
        getMember
        subtract
        push 20
        multiply
        subtract
        setMember
        push r:this, 'index'
        getMember
        push 21
        equals
        not
        branchIfTrue label182
        push 0, r:7, ')'
        getMember
        push '}J'
        getMember
        push '0tJ'
        getMember
        push 'play'
        callMethod
        pop
       label182:
        push r:this, 'index'
        getMember
        push 23
        equals
        not
        branchIfTrue label183
        push 0, r:7, '[-'
        getMember
        push '}J'
        getMember
        push '0tJ'
        getMember
        push 'play'
        callMethod
        pop
       label183:
        branch label180
       label184:
        push r:this, 'index'
        getMember
        push 12
        equals
        not
        branchIfTrue label190
        push 4
        setRegister r:8
        pop
        push 0
        setRegister r:9
        pop
        branch label186
       label185:
        push r:9
        increment
        setRegister r:9
        pop
       label186:
        push r:9, r:this, '39kX5'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label190
        push r:this, '39kX5'
        getMember
        push r:9
        getMember
        setRegister r:10
        pop
        push r:10, ')'
        getMember
        push '5R'
        getMember
        push r:10, '[-'
        getMember
        push '5R'
        getMember
        add
        push 0.5
        multiply
        setRegister r:11
        pop
        push r:10, ')'
        getMember
        push '6R'
        getMember
        push r:10, '[-'
        getMember
        push '6R'
        getMember
        add
        push 0.5
        multiply
        setRegister r:12
        pop
        push 0
        setRegister r:13
        pop
        branch label188
       label187:
        push r:13
        increment
        setRegister r:13
        pop
       label188:
        push r:13, 4
        lessThan
        not
        branchIfTrue label189
        push ']GM*S', 1, r:this, '+-(0'
        getMember
        push '{==W3('
        callMethod
        setRegister r:14
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:15
        pop
        push r:15, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:16
        pop
        push r:15, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:17
        pop
        push 0.2, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.8
        multiply
        add
        setRegister r:18
        pop
        push r:14, '((', r:11, r:16, r:8
        multiply
        add
        setMember
        push r:14, ')(', r:12, r:17, r:8
        multiply
        add
        setMember
        push r:14, ';T4D', r:16, r:18
        multiply
        setMember
        push r:14, '=T4D', r:17, r:18
        multiply
        setMember
        push r:14, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push 0, r:14, '}-B2'
        callMethod
        pop
        branch label187
       label189:
        branch label185
       label190:
        push r:this, 'index'
        getMember
        push 30
        equals
        not
        branchIfTrue label191
        push r:this, '+-(0'
        getMember
        push '8+C5', FALSE
        setMember
        push r:this, '0Lh]4(', NULL
        setMember
       label191:
      end // of function 

      setMember
      push r:1, '0D 6'
      function2 () (r:1='this')
        push 0, r:this, '0Lh]4('
        callMethod
        pop
      end // of function 

      setMember
      push '44{N'
      function2 (r:2='}J') (r:1='this')
        push r:this, ')2fr3', r:'}J'
        setMember
        push r:this, '4b{ey', 1, 1
        initArray
        setMember
        push r:this, ']}lAm', r:'}J', 1, '+7U K'
        new
        setMember
        push '=(,aA'
        getVariable
        push '3d0fx'
        getMember
        push ';+', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        pop
        push r:this, '=HU11', r:this, 1, '0vWVG'
        new
        setMember
        push 0, r:this, '=HU11'
        getMember
        push '}-B2'
        callMethod
        pop
        push r:this, '-_X}5', '$k', 0, '$n', 0, '$m', 0, '$w', 0, '$b', 0, 5
        initObject
        setMember
        push r:this, '17dU+', 0, 'Array'
        new
        setMember
        push r:this, ')gv94', 0, 'Array'
        new
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '+U7Eq'
      function2 (r:2=')') (r:1='this')
        push r:this, '8+C5'
        getMember
        dup
        branchIfTrue label192
        pop
        push r:this, '4b{ey'
        getMember
        push 0
        getMember
        push 0
        greaterThan
       label192:
        not
        branchIfTrue label193
        push UNDEF
        return
       label193:
        push r:this, '-NJ'
        getMember
        push NULL
        equals
        not
        branchIfTrue label194
        push TRUE, 1, r:')', '==Uf7'
        callMethod
        pop
        push r:this, '-NJ', r:')'
        setMember
        branch label197
       label194:
        push r:this, '-NJ'
        getMember
        setRegister r:3
        pop
        push FALSE, 1, r:this, '-NJ'
        getMember
        push '==Uf7'
        callMethod
        pop
        push r:this, '-NJ', NULL
        setMember
        push r:')', '(('
        getMember
        push r:3, '(('
        getMember
        equals
        dup
        not
        branchIfTrue label195
        pop
        push r:')', ')('
        getMember
        push r:3, ')('
        getMember
        equals
       label195:
        not
        branchIfTrue label196
        push UNDEF
        return
       label196:
        push r:this, '-_X}5'
        getMember
        push '$n', r:this, '-_X}5'
        getMember
        push '$n'
        getMember
        increment
        setMember
        push r:this, '8+C5', TRUE
        setMember
        push r:')', r:3, 2, r:this, '=HU11'
        getMember
        push '+2NA'
        callMethod
        pop
       label197:
      end // of function 

      setMember
      push r:1, '0D 6'
      function2 () (r:1='this')
        push r:this, '4b{ey', r:this, '4b{ey'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        subtract
        push 1
        initArray
        setMember
        push 0, r:this, '=HU11'
        getMember
        push '0D 6'
        callMethod
        pop
        push 0
        setRegister r:2
        pop
        branch label199
       label198:
        push r:2
        increment
        setRegister r:2
        pop
       label199:
        push r:2, r:this, '17dU+'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label201
        push r:this, '17dU+'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3, '3GF'
        getMember
        push 1
        lessThan
        not
        branchIfTrue label200
        push 1, r:2, r:2
        decrement
        setRegister r:2
        pop
        push 2, r:this, '17dU+'
        getMember
        push 'splice'
        callMethod
        pop
        push r:3, '3GF', 0
        setMember
       label200:
        push 16777215, r:3, '3GF'
        getMember
        push r:3, '}J'
        getMember
        push 3, '73('
        getVariable
        push ';CYOh'
        callMethod
        pop
        push r:3, '3GF', r:3, '3GF'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.85, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        setMember
        branch label198
       label201:
        push 0, r:this, ')gv94'
        getMember
        push 'duplicate'
        callMethod
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        branch label203
       label202:
        push r:5
        increment
        setRegister r:5
        pop
       label203:
        push r:5, r:4, 'length'
        getMember
        lessThan
        not
        branchIfTrue label204
        push 0, r:4, r:5
        getMember
        push '87vE7('
        callMethod
        pop
        branch label202
       label204:
      end // of function 

      setMember
      push r:1, ',}2X ('
      function2 () (r:1='this')
      end // of function 

      setMember
      push r:1, 'flash'
      function2 (r:2='}J') (r:1='this')
        push '}J', r:'}J', '3GF', 100, 2
        initObject
        push 1, r:this, '17dU+'
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '{==W3('
      function2 (r:2='5P55') (r:1='this')
        push 0, '*DzW'
        new
        setRegister r:3
        pop
        push '=(,aA'
        getVariable
        push '=Y7h]'
        getMember
        setRegister r:4
        pop
        push '=(,aA'
        getVariable
        push '=Y7h]'
        getMember
        push r:'5P55', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:5
        pop
        push r:5, 1, r:3, '3U*}=('
        callMethod
        pop
        push r:3, '+-(0', r:this
        setMember
        push r:3, 1, r:this, ')gv94'
        getMember
        push 'push'
        callMethod
        pop
        push 0, r:3, '}-B2'
        callMethod
        pop
        push r:3
        return
      end // of function 

      setMember
      push '980Sb'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '}-B2'
      function2 (r:2='}J') (r:1='this')
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        not
        branchIfTrue label205
        push UNDEF
        return
       label205:
        push '980Sb'
        getVariable
        push ')2fr3', r:'}J'
        setMember
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        branchIfTrue label206
        push '980Sb'
        getVariable
        push 'mode', '980Sb'
        getVariable
        push ')2fr3'
        getMember
        push 1, '44{N'
        new
        setMember
       label206:
      end // of function 

      setMember
      push r:0, '0D 6'
      function2 () (r:1='this')
        push 0, '{-kxL'
        getVariable
        push '87vE7('
        callMethod
        pop
        push 0, '980Sb'
        getVariable
        push 'mode'
        getMember
        push '0D 6'
        callMethod
        pop
      end // of function 

      setMember
      push '-[m(M'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',Hwi)'
      function2 ('-', r:2='5U4B') (r:1='this')
        push '*B'
        var
        push '*B', r:'5U4B'
        function2 () (r:1='this')
          push '*B'
          getVariable
          push 1, 'clearInterval', 1, '3Wt'
          getVariable
          push '16(VU'
          callMethod
          push UNDEF
          callMethod
          pop
          push 0, '-'
          callFunction
          pop
        end // of function 

        push 2, 'setInterval', 1, '3Wt'
        getVariable
        push '16(VU'
        callMethod
        push UNDEF
        callMethod
        setVariable
      end // of function 

      setMember
      push r:0, '}wUHz'
      function2 (r:2='=rJ', r:3='7olX7', r:4='}wUHz') (r:1='this')
        push r:'=rJ', NULL
        equals
        not
        branchIfTrue label207
        push NULL
        return
       label207:
        push r:'7olX7', 'length'
        getMember
        setRegister r:5
        pop
        push r:5, 1
        equals
        not
        branchIfTrue label208
        push r:'}wUHz', 1, r:'7olX7', 1, r:'=rJ', 'split'
        callMethod
        push 'join'
        callMethod
        return
       label208:
        push 0
        setRegister r:7
        pop
        push ''
        setRegister r:8
        pop
       label209:
        push TRUE
        not
        branchIfTrue label211
        push r:7, r:'7olX7', 2, r:'=rJ', 'indexOf'
        callMethod
        setRegister r:6
        pop
        push r:6, -1
        equals
        not
        branchIfTrue label210
        branch label211
       label210:
        push r:8, r:6, r:7, 2, r:'=rJ', 'slice'
        callMethod
        push r:'}wUHz'
        add
        add
        setRegister r:8
        pop
        push r:6, r:5
        add
        setRegister r:7
        pop
        branch label209
       label211:
        push r:8, r:7, 1, r:'=rJ', 'substring'
        callMethod
        add
        return
      end // of function 

      setMember
      push r:0, '* I51'
      function2 (r:2='=rJ') (r:1='this')
        push 0, 'Array'
        new
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        push r:'=rJ', 'length'
        getMember
        setRegister r:6
        pop
        push 0
        setRegister r:3
        pop
        branch label213
       label212:
        push r:3
        increment
        setRegister r:3
        pop
       label213:
        push r:3, r:6
        lessThan
        not
        branchIfTrue label218
        push r:3, 1, r:'=rJ', 'charCodeAt'
        callMethod
        setRegister r:7
        pop
        push r:7, 10
        equals
        dup
        branchIfTrue label214
        pop
        push r:7, 13
        equals
       label214:
        not
        branchIfTrue label217
        push r:3, r:5, 2, r:'=rJ', 'slice'
        callMethod
        push 1, r:4, 'push'
        callMethod
        pop
        push r:7, 13
        equals
        dup
        not
        branchIfTrue label215
        pop
        push r:3, 1
        add
        push 1, r:'=rJ', 'charCodeAt'
        callMethod
        push 10
        equals
       label215:
        not
        branchIfTrue label216
        push r:3
        increment
        setRegister r:3
        pop
       label216:
        push r:3, 1
        add
        setRegister r:5
        pop
       label217:
        branch label212
       label218:
        push r:3, r:5, 2, r:'=rJ', 'slice'
        callMethod
        push 1, r:4, 'push'
        callMethod
        pop
        push r:4
        return
      end // of function 

      setMember
      push r:0, ',JBe0'
      function2 (r:2=';p(') (r:1='this')
        push 0, r:';p(', 'duplicate'
        callMethod
        setRegister r:4
        pop
        push r:4, 'length'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:3
        pop
        branch label220
       label219:
        push r:3
        increment
        setRegister r:3
        pop
       label220:
        push r:3, r:5
        lessThan
        not
        branchIfTrue label221
        push r:5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:6
        pop
        push r:5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:7
        pop
        push r:4, r:6
        getMember
        setRegister r:8
        pop
        push r:4, r:6, r:4, r:7
        getMember
        setMember
        push r:4, r:7, r:8
        setMember
        branch label219
       label221:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '4UQ(1'
      function2 (r:2='}J') (r:1='this')
        push 0
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
       label222:
        push r:'}J', '_parent'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label223
        push r:3, r:'}J', '_x'
        getMember
        add
        setRegister r:3
        pop
        push r:4, r:'}J', '_y'
        getMember
        add
        setRegister r:4
        pop
        push r:'}J', '_parent'
        getMember
        setRegister r:'}J'
        pop
        branch label222
       label223:
        push '{2', r:3, '}2', r:4, 2
        initObject
        return
      end // of function 

      setMember
      push r:0, ' Ly7b'
      function2 (r:2='((', r:3='{nq3-(') (r:1='this')
        push r:'(('
        toString
        setRegister r:4
        pop
       label224:
        push r:4, 'length'
        getMember
        push r:'{nq3-('
        lessThan
        not
        branchIfTrue label225
        push '0', r:4
        add
        setRegister r:4
        pop
        branch label224
       label225:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '7g,ln'
      function2 (r:2='(') (r:1='this')
        push 0
        setRegister r:3
        pop
        push r:'(', 'length'
        getMember
        push 1
        subtract
        setRegister r:4
        pop
        branch label227
       label226:
        push r:4
        decrement
        setRegister r:4
        pop
       label227:
        push r:4, 0
        lessThan
        not
        not
        branchIfTrue label228
        push r:3, r:'(', r:4
        getMember
        add
        setRegister r:3
        pop
        branch label226
       label228:
        push r:3, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
       label229:
        push r:3, r:'(', r:4
        getMember
        lessThan
        not
        not
        branchIfTrue label230
        push r:3, r:'(', r:4
        getMember
        subtract
        setRegister r:3
        pop
        push r:4
        increment
        setRegister r:4
        pop
        branch label229
       label230:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '4*fgv'
      function2 (r:2='*QA', r:3='+QA') (r:1='this')
        push r:'*QA', 1, r:'*QA', 'getBounds'
        callMethod
        setRegister r:4
        pop
        push r:'*QA', 1, r:'+QA', 'getBounds'
        callMethod
        setRegister r:5
        pop
        push r:4, 'xMin'
        getMember
        push r:4, 'xMax'
        getMember
        add
        push 2
        divide
        push r:5, 'xMin'
        getMember
        push r:5, 'xMax'
        getMember
        add
        push 2
        divide
        subtract
        setRegister r:6
        pop
        push r:4, 'yMin'
        getMember
        push r:4, 'yMax'
        getMember
        add
        push 2
        divide
        push r:5, 'yMin'
        getMember
        push r:5, 'yMax'
        getMember
        add
        push 2
        divide
        subtract
        setRegister r:7
        pop
        push r:6, r:6
        multiply
        push r:7, r:7
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        return
      end // of function 

      setMember
      push r:0, '16KA'
      function2 ('}J') (r:1='this')
        push '(', 0, 'Array'
        new
        varEquals
        function2 (r:2='4') (r:1='this')
          push '}J'
          getVariable
          push r:'4'
          getMember
          setRegister r:3
          pop
          push r:3, 1, '3Wt'
          getVariable
          push ')goHJ('
          callMethod
          push 'movieclip'
          equals
          dup
          not
          branchIfTrue label231
          pop
          push r:3, '_parent'
          getMember
          push '}J'
          getVariable
          equals
         label231:
          not
          branchIfTrue label232
          push r:3, 1, '('
          getVariable
          push 'push'
          callMethod
          pop
         label232:
        end // of function 

        push '}J'
        getVariable
        push 2, '3Wt'
        getVariable
        push '9ss9+'
        callMethod
        pop
        push '('
        getVariable
        return
      end // of function 

      setMember
      push r:0, 'localToGlobal'
      function2 (r:2='}J', r:3='((', r:4=')(') (r:1='this')
        push 0, '19{O'
        new
        setRegister r:5
        pop
        push r:'((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:5, 1, r:'}J', 'localToGlobal'
        callMethod
        pop
        push '((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push ')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push 2
        initObject
        return
      end // of function 

      setMember
      push r:0, 'globalToLocal'
      function2 (r:2='}J', r:3='((', r:4=')(') (r:1='this')
        push 0, '19{O'
        new
        setRegister r:5
        pop
        push r:'((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:5, 1, r:'}J', 'globalToLocal'
        callMethod
        pop
        push '((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push ')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push 2
        initObject
        return
      end // of function 

      setMember
      push r:0, '{Gq]-'
      function2 () (r:1='this')
        push '$r', '$h', '$w', '$y', '$x', '$box', '$matrixType', '$radial', '$linear', 9
        initArray
        setRegister r:2
        pop
        push '-[m(M'
        getVariable
        push ']cY[2', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:3
        pop
        branch label234
       label233:
        push r:3
        increment
        setRegister r:3
        pop
       label234:
        push r:3, r:2, 'length'
        getMember
        lessThan
        not
        branchIfTrue label235
        push r:2, r:3
        getMember
        setRegister r:4
        pop
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push r:3, 1, 1, r:4, 'substring'
        callMethod
        setMember
        branch label233
       label235:
      end // of function 

      setMember
      push r:0, 'beginGradientFill'
      function2 (r:2='}J', r:3=' Wo02', r:4='=cKzE(', r:5='8)JNX', r:6='7eq8)', r:7='matrix') (r:1='this')
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push NULL
        equals
        not
        branchIfTrue label236
        push 0, '-[m(M'
        getVariable
        push '{Gq]-'
        callMethod
        pop
       label236:
        push 0, '19{O'
        new
        setRegister r:8
        pop
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 3
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 2
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, '(('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 4
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, ')('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 5
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, ' ('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 6
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, '1'
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 7
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, '='
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 8
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:8, r:'7eq8)', r:'8)JNX', r:'=cKzE(', r:' Wo02'
        not
        branchIfTrue label237
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 0
        getMember
        branch label238
       label237:
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 1
        getMember
       label238:
        push 5, r:'}J', 'beginGradientFill'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, ',[A(', 1, 1, '$x', 'substring'
      callMethod
      setMember
      push r:0, '-[A(', 1, 1, '$y', 'substring'
      callMethod
      setMember
      push r:0, ']cY[2', NULL
      setMember
    end // of frame 0
  end // of defineMovieClip 141
  
  exportAssets
    141 as '90D*'
  end // of exportAssets
end
