movie '7f0fdc05bec1dbd7342ea56d05df3da3.swf' compressed // flash 8, total frames: 1, frame rate: 40 fps, 700x480 px


  defineMovieClip 2 // total frames: 1
  end // of defineMovieClip 2
  
  exportAssets
    2 as ';qoUA'
  end // of exportAssets

  defineMovieClip 4 // total frames: 1
  end // of defineMovieClip 4
  
  exportAssets
    4 as '(aVB+'
  end // of exportAssets

  defineMovieClip 6 // total frames: 1
  end // of defineMovieClip 6
  
  exportAssets
    6 as ';VcJC'
  end // of exportAssets

  defineMovieClip 9 // total frames: 1
  end // of defineMovieClip 9

  defineMovieClip 11 // total frames: 1
  end // of defineMovieClip 11

  defineMovieClip 13 // total frames: 100

    frame 0
      stop
    end // of frame 0

    frame 99
      stop
    end // of frame 99
  end // of defineMovieClip 13
  
  exportAssets
    13 as ';Sy=C'
  end // of exportAssets

  defineMovieClip 17 // total frames: 2
  end // of defineMovieClip 17
  
  exportAssets
    17 as '+k1PE'
  end // of exportAssets

  defineMovieClip 20 // total frames: 2
  end // of defineMovieClip 20
  
  exportAssets
    20 as '),HaF('
  end // of exportAssets

  defineMovieClip 22 // total frames: 1
  end // of defineMovieClip 22

  defineMovieClip 24 // total frames: 1
  end // of defineMovieClip 24

  defineMovieClip 26 // total frames: 1
  end // of defineMovieClip 26

  defineMovieClip 28 // total frames: 1
  end // of defineMovieClip 28

  defineMovieClip 30 // total frames: 1
  end // of defineMovieClip 30

  defineMovieClip 32 // total frames: 1
  end // of defineMovieClip 32

  defineMovieClip 34 // total frames: 1
  end // of defineMovieClip 34

  defineMovieClip 36 // total frames: 1
  end // of defineMovieClip 36

  defineMovieClip 40 // total frames: 4
  end // of defineMovieClip 40

  defineMovieClip 48 // total frames: 1
  end // of defineMovieClip 48

  defineMovieClip 51 // total frames: 1
  end // of defineMovieClip 51

  defineMovieClip 55 // total frames: 97

    frame 61
      gotoLabel '4-61'
      play
    end // of frame 61

    frame 80
      stop
    end // of frame 80

    frame 95
      gotoLabel '-GhAm'
      play
    end // of frame 95
  end // of defineMovieClip 55
  
  exportAssets
    55 as ';ay;C'
  end // of exportAssets

  defineMovieClip 58 // total frames: 1
  end // of defineMovieClip 58

  defineMovieClip 59 // total frames: 14

    frame 6
      push '5t 9)', 30
      setVariable
    end // of frame 6

    frame 8
      constants '5t 9)', ''  
      push '5t 9)', '5t 9)'
      getVariable
      decrement
      setVariable
      push '5t 9)'
      getVariable
      push 0.0
      greaterThan
      not
      branchIfTrue label1
      push '', 4
      getProperty
      push 1
      subtract
      gotoAndPlay
     label1:
    end // of frame 8

    frame 13
      push ''
      removeClip
    end // of frame 13
  end // of defineMovieClip 59
  
  exportAssets
    59 as '=ZXmL'
  end // of exportAssets

  defineMovieClip 61 // total frames: 1
  end // of defineMovieClip 61
  
  exportAssets
    61 as '}xIuk'
  end // of exportAssets

  defineMovieClip 62 // total frames: 50
  end // of defineMovieClip 62
  
  exportAssets
    62 as ',tiXV'
  end // of exportAssets

  defineMovieClip 65 // total frames: 2
  end // of defineMovieClip 65
  
  exportAssets
    65 as '9v)7H'
  end // of exportAssets

  defineMovieClip 71 // total frames: 5
  end // of defineMovieClip 71
  
  exportAssets
    71 as '[;bTC'
  end // of exportAssets

  defineMovieClip 82 // total frames: 11
  end // of defineMovieClip 82
  
  exportAssets
    82 as '1) k('
  end // of exportAssets

  defineMovieClip 89 // total frames: 22
  end // of defineMovieClip 89
  
  exportAssets
    89 as ',98PO'
  end // of exportAssets

  defineMovieClip 93 // total frames: 3
  end // of defineMovieClip 93
  
  exportAssets
    93 as '29JH-'
  end // of exportAssets

  defineMovieClip 95 // total frames: 1
  end // of defineMovieClip 95

  defineMovieClip 96 // total frames: 2
  end // of defineMovieClip 96
  
  exportAssets
    96 as '0JzS9'
  end // of exportAssets

  defineMovieClip 98 // total frames: 1
  end // of defineMovieClip 98

  defineMovieClip 100 // total frames: 1
  end // of defineMovieClip 100

  defineMovieClip 102 // total frames: 1
  end // of defineMovieClip 102

  defineMovieClip 104 // total frames: 1
  end // of defineMovieClip 104

  defineMovieClip 106 // total frames: 1
  end // of defineMovieClip 106

  defineMovieClip 107 // total frames: 13
  end // of defineMovieClip 107

  defineMovieClip 109 // total frames: 30

    frame 29
      gotoFrame 0
      play
    end // of frame 29
  end // of defineMovieClip 109

  defineMovieClip 110 // total frames: 2
  end // of defineMovieClip 110

  defineMovieClip 111 // total frames: 3
  end // of defineMovieClip 111
  
  exportAssets
    111 as '5(oMC'
  end // of exportAssets

  defineMovieClip 113 // total frames: 1
  end // of defineMovieClip 113
  
  exportAssets
    113 as '+MX*B'
  end // of exportAssets

  defineMovieClip 115 // total frames: 1
  end // of defineMovieClip 115
  
  exportAssets
    115 as ';+'
  end // of exportAssets

  defineMovieClip 116 // total frames: 1

    frame 0
      constants '-0]rl', '-iB=', '+KD', '*r', '+-(0', '7Qe;6', 'push', '((', ')(', '_x', '_y', 'prototype', '87vE7(', '9T54', 'removeMovieClip', '0ENPA', '4u=dZ', '}1A{_', 'Math', 'sqrt', ')153L', 'atan2', '2sngh', '2K', '[j0D-', '=OA', '*OA', ',v0X', '+{eA+', '[b', ']b', '1Jr-,(', 'call', '6b', '_rotation', '{-kxL', '-V;B', '(KpGn', 'pow', '1o8jJ', '-fRSr', '_xscale', ';zS4((', '1F*uB', '5R', '0P', '6R', '1P', ')9 9', '3ZAK', '44{N', '7C-sb', ';Sy=C', '32', '*=_p_', '[NuT)', 'random', '*cD)', '9or*K', '=kIA', '4RW6x', '9I', '(6IbI(', '*YT,T', '(v+', '3Wt', '6{VYR', '{Cs', '2VhU6', ' IWA+', '4;V]g', 'min', 'gotoAndStop', 'flash', 'geom', 'Matrix', 'rotate', 'translate', '1T=', 'draw', '_currentframe', '_totalframes', '=)0hg', '*sd+;(', '0Yj1', 'abs', '4,01', '}CL', ',J81z', ';-[;H', '29JH-', '{==W3(', 'cos', 'sin', '3BjX_', '849kV', '{YJfb', ',tiXV', '*7', '7IrKA', '2u=W=', 'Object', 'filters', '{lN=R', '}-B2', '3Xy1A', '9ZpS[', ';CYOh', '=', '0', ')', 'Color', 'ra', 'ga', 'ba', 'aa', 'rb', 'gb', 'bb', 'ab', 'setTransform', 'max', ')GiA', '],pz1(', 'length', '5tjEm', '_yscale', 'scale', '_alpha', 'ColorTransform', 'blendMode', '*Fgc (', 'BlurFilter', 'blurX', 'blurY', '0BGm_', 'GlowFilter', 'color', 'strength', '7V N)(', '}y_ZR', '(H5 S', '2ya 0(', '(', '{mMU7(', '4CDwp', '2QF=}', '*YU{A', ';ndCG', '*G6KR', '-)KN[', '-Q)9)', '*r63F', '*e[', ',i0 [', '*DzW', ',DBRf', '3V[D(', '3GWsN', '7b', '8I0t8(', '5b)bA(', '+7U K', ')2fr3', '}Zms3', 'Array', ']1sj+', '-fC3a', '9oK', '7-,', ']bu40', '_name', 'swapDepths', '7bSH*', '18wU*', '-4*l((', '(GbB}', '+2NA', 'getDepth', 'floor', '}oQA7', 'unshift', '08M8', 'clear', '9(K ;', ',}2X (', '] ktA', '[X', '(j;o7', '77ldJ(', '09uM1(', '1HwWD', '4plQ5', 'getTimer', ';ILSy', '3R,QM', ';y}-6(', '-)Xd+', '[Ad;n', '6GI,F', 'fps', '=3+P', '[j9fb', '5(oMC', '5Hy6b', '2', '7VQr3', '1', '}Yax5', '3-}+b', '(VKB', '565', 'Key', 'LEFT', 'isDown', 'RIGHT', '5yKOJ', '=[-8n', '+A}D', '{)W', '9{(a0(', '=YEsK(', ']9NQ (', '7bJ', '4SbC,(', '7KzN,', ',D2', ' fRjB(', '8h2(K(', '9RH*', ';8,PR', '7{zg9', '}B)Y_', '5hw(b', '4MvcB', '0JzS9', '_visible', '3hAJ', ';C*X2', ';ay;C', '6g,A', '+33kL', '69-', '6z]10', '4yx*K', ' (p(c', '-mi-b', '5955', ']iaT', '[hc22(', '+k1PE', '(W3', 'stop', 'invert', '(KA', ';+', '4hj(B', '{Dl(0', '40=9K', ']c_N,', 'gotoAndPlay', 'play', '}SC6', '6u*J7', '*af(*(', '[-vN8', '59-', '4-61', 'ColorMatrixFilter', 'matrix', '(WBt)', ']}Ou;(', '3I0pG', '{;7F4', '8U(wu', '}[cpB', '9xv]A', '{yQ=Q', '+,W', '2y+dV', '(tBee', '3)i[=', ' J3IC', '[6jRc', ')8Fyj', '6y392', ')gv94', 'shift', '[{Ws7(', 'decal error!', ']{i', 'print', 'ox: ', 'oy: ', ';KO', '=KO', 'Oh mon dieu, c\'est affreux!', 'trace', '}Q)0u', '6,Ld)(', ' Sk9H(', ']1dV=', '0co;I', '6LkQ1', ';VcJC', '{9yhS', ' yFNA(', '-zx=g', '62=', '9v)7H', '[gqwG', 'display', 'BitmapData', 'attachBitmap', '3{Htb', '+MX*B', '[-99', '*', 'height', '1) k(', '5P55', '[;bTC', ',98PO', '9t1r1', ',vZ9+', '0D 6', '5VTlb', '-_X}5', '7T4cF(', '+aDob', '*ro(=(', '*S-6V', '],lYS', '),HaF(', '=ZXmL', '(Erk5', '8kN', 'splice', '23c;]', 'getPixel32', '},J2', '(aVB+', ',N5JB', '=4H0', 'pop', '980Sb', 'size', '1U;0', '(jEr5', ']I,YD(', '72}8I(', 'onKeyDown', ']668C(', 'onKeyUp', '=(D=5', 'addListener', 'getCode', 'SPACE', 'ENTER', ']}ZkD(', '=2AUB', '(kJ+1(', 'mode'  
      push '-0]rl'
      function2 (r:2='}J') (r:1='this')
        push r:this, '-iB=', r:'}J'
        setMember
        push r:this, '-iB='
        getMember
        push '+KD', r:this
        setMember
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '7Qe;6'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '((', 0
        setMember
        push r:this, ')(', 0
        setMember
        push r:this, '-iB='
        getMember
        push '_x', -1000
        setMember
        push r:this, '-iB='
        getMember
        push '_y', -1000
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this')
        push r:this, '-iB='
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '-iB='
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this')
        push 0, r:this, '-iB='
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '7Qe;6'
        getMember
        push '0ENPA'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '4u=dZ'
      function2 () (r:1='this')
        push r:this, '-iB='
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '-iB='
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '}1A{_'
      function2 (r:2='8') (r:1='this')
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:3
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:4
        pop
        push r:3, r:3
        multiply
        push r:4, r:4
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        return
      end // of function 

      setMember
      push r:1, ')153L'
      function2 (r:2='8') (r:1='this')
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:3
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:4
        pop
        push r:3, r:4, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        return
      end // of function 

      setMember
      push r:1, '2sngh'
      function2 (r:2='8', r:3='*', r:4='62=') (r:1='this')
        push r:'8', 1, r:this, ')153L'
        callMethod
        setRegister r:5
        pop
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:6
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:7
        pop
        push r:this, '((', r:this, '(('
        getMember
        push r:'62=', r:6, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push r:'62=', r:7, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
      end // of function 

      setMember
      push r:1, '[j0D-'
      function2 (r:2='6') (r:1='this')
        push r:this, '(('
        getMember
        push 0, r:'6'
        subtract
        lessThan
        dup
        branchIfTrue label1
        pop
        push r:this, '(('
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        push r:'6'
        add
        greaterThan
       label1:
        dup
        branchIfTrue label2
        pop
        push r:this, ')('
        getMember
        push 0, r:'6'
        subtract
        lessThan
       label2:
        dup
        branchIfTrue label3
        pop
        push r:this, ')('
        getMember
        push '*r'
        getVariable
        push '*OA'
        getMember
        push r:'6'
        add
        greaterThan
       label3:
        return
      end // of function 

      setMember
      push ',v0X'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '+{eA+', 0.95
        setMember
        push r:this, '[b', 0
        setMember
        push r:this, ']b', 0
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '-0]rl'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '1Jr-,('
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '6b'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label4
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '-iB='
        getMember
        push '_rotation'
        getMember
        push r:this, '6b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label4:
        push r:this, '(KpGn'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label5
        push r:this, ']b', r:this, ']b'
        getMember
        push r:this, '(KpGn'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label5:
        push r:this, '+{eA+'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label6
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push r:this, '+{eA+'
        getMember
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:3
        pop
        push r:this, '[b', r:this, '[b'
        getMember
        push r:3
        multiply
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:3
        multiply
        setMember
       label6:
        push r:this, '1o8jJ'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label7
        push 0, r:this, '1o8jJ'
        getMember
        push '87vE7('
        callMethod
        pop
        branch label8
       label7:
        push r:this, '((', r:this, '(('
        getMember
        push r:this, '[b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push r:this, ']b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label8:
        push r:this, '-fRSr'
        getMember
        not
        branchIfTrue label10
        push 1
        setRegister r:4
        pop
        push r:this, '[b'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label9
        push -1
        setRegister r:4
        pop
       label9:
        push r:this, '-iB='
        getMember
        push '_xscale', r:4, 100
        multiply
        setMember
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '[b'
        getMember
        push r:this, ']b'
        getMember
        push 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        push 0.0174
        divide
        setMember
        push r:this, '[b'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label10
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '-iB='
        getMember
        push '_rotation'
        getMember
        push 180
        add
        setMember
       label10:
      end // of function 

      setMember
      push r:1, ';zS4(('
      function2 (r:2='8', r:3='*', r:4='62=') (r:1='this')
        push r:'8', 1, r:this, ')153L'
        callMethod
        setRegister r:5
        pop
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:6
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:7
        pop
        push r:this, '[b', r:this, '[b'
        getMember
        push r:'62=', r:6, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:'62=', r:7, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
      end // of function 

      setMember
      push r:1, '1F*uB'
      function2 () (r:1='this')
        push r:this, '((', r:this, '1o8jJ'
        getMember
        push '5R'
        getMember
        push r:this, '1o8jJ'
        getMember
        push '0P'
        getMember
        add
        setMember
        push r:this, ')(', r:this, '1o8jJ'
        getMember
        push '6R'
        getMember
        push r:this, '1o8jJ'
        getMember
        push '1P'
        getMember
        add
        setMember
        push r:this, '1o8jJ'
        getMember
        push ')9 9', 0
        setMember
        push r:this, '1o8jJ', NULL
        setMember
      end // of function 

      setMember
      push '1Jr-,(', '-0]rl'
      getVariable
      push 'prototype'
      getMember
      push '87vE7('
      getMember
      setVariable
      push '3ZAK'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push '44{N'
        getVariable
        push '7C-sb'
        getMember
        push ';Sy=C', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:'}J'
        pop
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '[NuT)'
        getMember
        push 'push'
        callMethod
        pop
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '(KpGn', 0.14, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '*cD)'
        getMember
        push '9or*K'
        getMember
        add
        multiply
        add
        setMember
        push r:this, '+{eA+', 0.95
        setMember
        push r:this, '=kIA', 0
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label11
        push r:0, 1
        strictEquals
        branchIfTrue label15
        branch label20
       label11:
        push r:this, ')('
        getMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '9I'
        getMember
        greaterThan
        not
        branchIfTrue label12
        push r:this, '1o8jJ', r:this, 1, '(6IbI('
        new
        setMember
        push r:this, '1o8jJ'
        getMember
        push '*YT,T', '(v+', r:this, 2, '3Wt'
        getVariable
        push '6{VYR'
        callMethod
        setMember
        push r:this, '=kIA', 1
        setMember
       label12:
        push '3ZAK'
        getVariable
        push '{Cs'
        getMember
        push 2
        multiply
        setRegister r:3
        pop
        push r:this, '(('
        getMember
        push r:3
        lessThan
        dup
        branchIfTrue label13
        pop
        push r:this, '(('
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        push r:3
        subtract
        greaterThan
       label13:
        not
        branchIfTrue label14
        push r:this, '((', '*r'
        getVariable
        push '=OA'
        getMember
        push r:3
        subtract
        push r:this, '(('
        getMember
        push r:3, 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
        push r:this, '[b', r:this, '[b'
        getMember
        push -1
        multiply
        setMember
       label14:
        branch label20
       label15:
        push r:this, '2VhU6'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label16
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
       label16:
        push r:this, '1o8jJ'
        getMember
        push NULL
        equals
        not
        branchIfTrue label18
        push r:this, ' IWA+', '3ZAK'
        getVariable
        push '4;V]g'
        getMember
        push r:this, ' IWA+'
        getMember
        push 15, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setMember
        push r:this, ' IWA+'
        getMember
        int
        push 1
        add
        toString
        push 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push 0, 'flash'
        getVariable
        push 'geom'
        getMember
        push 'Matrix'
        newMethod
        setRegister r:4
        pop
        push r:this, '-iB='
        getMember
        push '_rotation'
        getMember
        push 0.0174
        multiply
        push 1, r:4, 'rotate'
        callMethod
        pop
        push r:this, '-iB='
        getMember
        push '_y'
        getMember
        int
        push r:this, '-iB='
        getMember
        push '_x'
        getMember
        int
        push 2, r:4, 'translate'
        callMethod
        pop
        push NULL, NULL, NULL, NULL, r:4, r:this, '-iB='
        getMember
        push 6, '*r'
        getVariable
        push '+-(0'
        getMember
        push '1T='
        getMember
        push 'draw'
        callMethod
        pop
        push r:this, '-iB='
        getMember
        push '_currentframe'
        getMember
        push r:this, '-iB='
        getMember
        push '_totalframes'
        getMember
        equals
        not
        branchIfTrue label17
        push 0, r:this, '9T54'
        callMethod
        pop
       label17:
        branch label19
       label18:
        push r:this, '1o8jJ'
        getMember
        push '6R'
        getMember
        push r:this, '1o8jJ'
        getMember
        push '5R'
        getMember
        push 2, r:this, '1o8jJ'
        getMember
        push '=)0hg'
        callMethod
        not
        branchIfTrue label19
        push r:this, '1o8jJ'
        getMember
        push '5R', '*r'
        getVariable
        push '=OA'
        getMember
        push '3ZAK'
        getVariable
        push '{Cs'
        getMember
        push 3
        add
        subtract
        push r:this, '1o8jJ'
        getMember
        push '5R'
        getMember
        push '3ZAK'
        getVariable
        push '{Cs'
        getMember
        push 3
        add
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        int
        setMember
        push r:this, '1o8jJ'
        getMember
        push '6R', r:this, '1o8jJ'
        getMember
        push '6R'
        getMember
        decrement
        setMember
        branch label18
       label19:
        branch label20
       label20:
        push r:this, ')('
        getMember
        push '*r'
        getVariable
        push '*sd+;('
        getMember
        greaterThan
        not
        branchIfTrue label21
        push 0, r:this, '9T54'
        callMethod
        pop
       label21:
      end // of function 

      setMember
      push r:1, '(v+'
      function2 (r:2='(', r:3='7') (r:1='this')
        push r:this, '2VhU6'
        getMember
        push NULL
        equals
        not
        branchIfTrue label22
        push r:this, '2VhU6', 30
        setMember
        branch label25
       label22:
        push r:this, '2VhU6'
        getMember
        push 0
        lessThan
        dup
        not
        branchIfTrue label23
        pop
        push 3.14, 1.57, r:'7'
        subtract
        push 2, '*r'
        getVariable
        push '0Yj1'
        callMethod
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push 1.57
        lessThan
       label23:
        not
        branchIfTrue label25
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '}CL'
        getMember
        push r:this
        equals
        not
        branchIfTrue label24
        push 0, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push ',J81z'
        callMethod
        pop
       label24:
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '9I', r:this, ')('
        getMember
        push 30
        subtract
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '9I'
        getMember
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setMember
        push r:this, '[b', 0
        setMember
        push r:this, ']b', 0
        setMember
        push r:this, '(KpGn', 0
        setMember
        push 0, r:this, '1F*uB'
        callMethod
        pop
        push r:this, ' IWA+', 0
        setMember
        push r:this, '-iB='
        getMember
        push '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
       label25:
      end // of function 

      setMember
      push r:1, ';-[;H'
      function2 (r:2='4,', r:3='5,') (r:1='this')
        push 0
        setRegister r:4
        pop
        branch label27
       label26:
        push r:4
        increment
        setRegister r:4
        pop
       label27:
        push r:4, 12
        lessThan
        not
        branchIfTrue label28
        push '29JH-', 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '{==W3('
        callMethod
        setRegister r:5
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:6
        pop
        push r:6, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:7
        pop
        push r:6, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:8
        pop
        push 0.5, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        add
        setRegister r:9
        pop
        push r:5, '((', r:this, '(('
        getMember
        push r:7, '3ZAK'
        getVariable
        push '{Cs'
        getMember
        multiply
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        multiply
        add
        setMember
        push r:5, ')(', r:this, ')('
        getMember
        push r:8, '3ZAK'
        getVariable
        push '{Cs'
        getMember
        multiply
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        multiply
        add
        setMember
        push r:5, '[b', r:7, r:9
        multiply
        push r:'4,', 0.5
        multiply
        add
        setMember
        push r:5, ']b', r:8, r:9
        multiply
        push r:'5,', 0.5
        multiply
        add
        setMember
        push 50, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 50
        multiply
        add
        push 1, r:5, '3BjX_'
        callMethod
        pop
        push r:5, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:5, '(KpGn', 0.05, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.1
        multiply
        add
        setMember
        push r:5, '849kV', 0
        setMember
        push r:this, '-iB='
        getMember
        push '_totalframes'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        add
        toString
        push 1, r:5, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        branch label26
       label28:
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push ',tiXV', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:10
        pop
        push r:10, '_x', r:this, '(('
        getMember
        setMember
        push r:10, '_y', r:this, ')('
        getMember
        setMember
        push r:10, ' IWA+', 0
        setMember
        push r:10, '*7', 9
        setMember
        push r:10, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '7IrKA'
        getMember
        push 'push'
        callMethod
        pop
        push 0, r:this, '9T54'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '[NuT)'
        getMember
        push '0ENPA'
        callMethod
        pop
        push r:this, 1, '2u=W='
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push '2u=W=', '-0]rl'
      getVariable
      push 'prototype'
      getMember
      push '9T54'
      getMember
      setVariable
      push '4RW6x', ',v0X'
      getVariable
      push 'prototype'
      getMember
      push '87vE7('
      getMember
      setVariable
      push r:0, '4;V]g', 100
      setMember
      push r:0, '{Cs', 5
      setMember
      push 'flash'
      getVariable
      not
      not
      branchIfTrue label29
      push 'flash', 0, 'Object'
      new
      setVariable
     label29:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      not
      not
      branchIfTrue label30
      push 'flash'
      getVariable
      push 'filters', 0, 'Object'
      new
      setMember
     label30:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      push '{lN=R'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setMember
      push '*r'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '}-B2'
      function2 () (r:1='this')
        push 0.3
        setRegister r:2
        pop
        push 0.5
        setRegister r:3
        pop
        push 0.1
        setRegister r:4
        pop
        push 30
        setRegister r:5
        pop
        push '*r'
        getVariable
        push '3Xy1A', 0, 1, 0, 0, 0, r:5, 0, r:4, r:3, r:2, r:5, 0, r:4, r:3, r:2, r:5, 0, r:4, r:3, r:2, 20
        initArray
        setMember
        push '*r'
        getVariable
        push '9ZpS[', 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 20
        initArray
        setMember
      end // of function 

      setMember
      push r:0, ';CYOh'
      function2 (r:2='}J', r:3='3GF', r:4='(v+') (r:1='this')
        push '=', r:'(v+', 16
        shiftRight
        push '0', r:'(v+', 8
        shiftRight
        push 255
        bitwiseAnd
        push ')', r:'(v+', 255
        bitwiseAnd
        push 3
        initObject
        setRegister r:5
        pop
        push r:'}J', 1, 'Color'
        new
        setRegister r:6
        pop
        push r:'3GF', 100
        divide
        setRegister r:7
        pop
        push 'ra', 100, r:'3GF'
        subtract
        int
        push 'ga', 100, r:'3GF'
        subtract
        int
        push 'ba', 100, r:'3GF'
        subtract
        int
        push 'aa', 100, 'rb', r:7, r:5, '='
        getMember
        multiply
        int
        push 'gb', r:7, r:5, '0'
        getMember
        multiply
        int
        push 'bb', r:7, r:5, ')'
        getMember
        multiply
        int
        push 'ab', 0, 8
        initObject
        setRegister r:8
        pop
        push r:8, 1, r:6, 'setTransform'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '2K'
      function2 (r:2='(', r:3=')', r:4='*') (r:1='this')
        push r:'*', r:')', r:'(', 2, 'Math'
        getVariable
        push 'max'
        callMethod
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        return
      end // of function 

      setMember
      push r:0, ')GiA'
      function2 (r:2='}', r:3='6lA') (r:1='this')
       label31:
        push r:'}', r:'6lA'
        lessThan
        not
        not
        branchIfTrue label32
        push r:'}', r:'6lA'
        subtract
        setRegister r:'}'
        pop
        branch label31
       label32:
        push r:'}', 0
        lessThan
        not
        branchIfTrue label33
        push r:'}', r:'6lA'
        add
        setRegister r:'}'
        pop
        branch label32
       label33:
        push r:'}'
        return
      end // of function 

      setMember
      push r:0, '0Yj1'
      function2 (r:2='}', r:3='6lA') (r:1='this')
       label34:
        push r:'}', r:'6lA'
        greaterThan
        not
        branchIfTrue label35
        push r:'}', r:'6lA', 2
        multiply
        subtract
        setRegister r:'}'
        pop
        branch label34
       label35:
        push r:'}', 0, r:'6lA'
        subtract
        lessThan
        not
        branchIfTrue label36
        push r:'}', r:'6lA', 2
        multiply
        add
        setRegister r:'}'
        pop
        branch label35
       label36:
        push r:'}'
        return
      end // of function 

      setMember
      push r:0, '}1A{_'
      function2 (r:2='8', r:3='8Q') (r:1='this')
        push r:'8Q', '(('
        getMember
        push r:'8', '(('
        getMember
        subtract
        setRegister r:4
        pop
        push r:'8Q', ')('
        getMember
        push r:'8', ')('
        getMember
        subtract
        setRegister r:5
        pop
        push r:4, r:4
        multiply
        push r:5, r:5
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        return
      end // of function 

      setMember
      push r:0, '],pz1('
      function2 (r:2='list', r:3='6lA') (r:1='this')
        push 0
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        branch label38
       label37:
        push r:5
        increment
        setRegister r:5
        pop
       label38:
        push r:5, r:list, 'length'
        getMember
        lessThan
        not
        branchIfTrue label39
        push r:4, r:list, r:5
        getMember
        push r:list, 'length'
        getMember
        divide
        add
        setRegister r:4
        pop
        branch label37
       label39:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '5tjEm'
      function2 (r:2='9I*', r:3='}J', r:4='((', r:5=')(') (r:1='this')
        push 0, 'flash'
        getVariable
        push 'geom'
        getMember
        push 'Matrix'
        newMethod
        setRegister r:6
        pop
        push r:')(', r:'((', 2, r:6, 'translate'
        callMethod
        pop
        push NULL, NULL, NULL, NULL, r:6, r:'}J', 6, r:'9I*', 'draw'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, 'draw'
      function2 (r:2='9I*', r:3='}J') (r:1='this')
        push 0, 'flash'
        getVariable
        push 'geom'
        getMember
        push 'Matrix'
        newMethod
        setRegister r:4
        pop
        push r:'}J', '_yscale'
        getMember
        push 100
        divide
        push r:'}J', '_xscale'
        getMember
        push 100
        divide
        push 2, r:4, 'scale'
        callMethod
        pop
        push r:'}J', '_rotation'
        getMember
        push 0.0174
        multiply
        push 1, r:4, 'rotate'
        callMethod
        pop
        push r:'}J', '_y'
        getMember
        push r:'}J', '_x'
        getMember
        push 2, r:4, 'translate'
        callMethod
        pop
        push -255, r:'}J', '_alpha'
        getMember
        push 2.55
        multiply
        add
        push 0, 0, 0, 1, 1, 1, 1, 8, 'flash'
        getVariable
        push 'geom'
        getMember
        push 'ColorTransform'
        newMethod
        setRegister r:5
        pop
        push r:'}J', 'blendMode'
        getMember
        setRegister r:6
        pop
        push NULL, NULL, r:6, r:5, r:4, r:'}J', 6, r:'9I*', 'draw'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '*Fgc ('
      function2 (r:2='}J', r:3='+') (r:1='this')
        push 0, 'flash'
        getVariable
        push 'filters'
        getMember
        push 'BlurFilter'
        newMethod
        setRegister r:4
        pop
        push r:4, 'blurX', r:'+'
        setMember
        push r:4, 'blurY', r:'+'
        setMember
        push r:'}J', 'filters', r:4, 1
        initArray
        setMember
      end // of function 

      setMember
      push r:0, '0BGm_'
      function2 (r:2='}J', r:3='(v+', r:4='+') (r:1='this')
        push r:'+', NULL
        equals
        not
        branchIfTrue label40
        push 2
        setRegister r:'+'
        pop
       label40:
        push 0, 'flash'
        getVariable
        push 'filters'
        getMember
        push 'GlowFilter'
        newMethod
        setRegister r:5
        pop
        push r:5, 'blurX', r:'+'
        setMember
        push r:5, 'blurY', r:'+'
        setMember
        push r:5, 'color', r:'(v+'
        setMember
        push r:5, 'strength', 255
        setMember
        push r:'}J', 'filters', r:5, 1
        initArray
        setMember
      end // of function 

      setMember
      push r:0, '7V N)('
      function2 (r:2='(') (r:1='this')
        push 0.3
        setRegister r:3
        pop
        push 0.5
        setRegister r:4
        pop
        push 0.1
        setRegister r:5
        pop
        push 0, 1, 0, 0, 0, r:'(', 0, r:5, r:4, r:3, r:'(', 0, r:5, r:4, r:3, r:'(', 0, r:5, r:4, r:3, 20
        initArray
        return
      end // of function 

      setMember
      push r:0, '}y_ZR'
      function2 (r:2='(') (r:1='this')
        push 20
        setRegister r:3
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push r:3
        multiply
        setRegister r:4
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push r:3
        multiply
        setRegister r:5
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push r:3
        multiply
        setRegister r:6
        pop
        push 0.3
        setRegister r:7
        pop
        push 0.5
        setRegister r:8
        pop
        push 0.1
        setRegister r:9
        pop
        push 0, 1, 0, 0, 0, r:'(', r:6
        add
        push 0, r:9, r:8, r:7, r:'(', r:5
        add
        push 0, r:9, r:8, r:7, r:'(', r:4
        add
        push 0, r:9, r:8, r:7, 20
        initArray
        return
      end // of function 

      setMember
      push r:0, '(H5 S'
      function2 (r:2='}J', r:3='(v+', r:4='60-') (r:1='this')
        push r:'60-', NULL
        equals
        not
        branchIfTrue label41
        push -255
        setRegister r:'60-'
        pop
       label41:
        push r:'(v+', 1, '*r'
        getVariable
        push '2ya 0('
        callMethod
        setRegister r:5
        pop
        push r:'}J', 1, 'Color'
        new
        setRegister r:6
        pop
        push 'ra', 100, 'ga', 100, 'ba', 100, 'aa', 100, 'rb', r:5, '='
        getMember
        push r:'60-'
        add
        push 'gb', r:5, '0'
        getMember
        push r:'60-'
        add
        push 'bb', r:5, ')'
        getMember
        push r:'60-'
        add
        push 'ab', 0, 8
        initObject
        setRegister r:7
        pop
        push r:7, 1, r:6, 'setTransform'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '2ya 0('
      function2 (r:2='(v+') (r:1='this')
        push '(', r:'(v+', 24
        shiftRight2
        push '=', r:'(v+', 16
        shiftRight
        push 255
        bitwiseAnd
        push '0', r:'(v+', 8
        shiftRight
        push 255
        bitwiseAnd
        push ')', r:'(v+', 255
        bitwiseAnd
        push 4
        initObject
        return
      end // of function 

      setMember
      push r:0, '{mMU7('
      function2 (r:2='8') (r:1='this')
        push r:'8', '('
        getMember
        push 24
        shiftLeft
        push r:'8', '='
        getMember
        push 16
        shiftLeft
        bitwiseOr
        push r:'8', '0'
        getMember
        push 8
        shiftLeft
        bitwiseOr
        push r:'8', ')'
        getMember
        bitwiseOr
        return
      end // of function 

      setMember
      push r:0, '4CDwp'
      function2 (r:2='9I*', r:3='}J') (r:1='this')
        push 0, 'flash'
        getVariable
        push 'geom'
        getMember
        push 'Matrix'
        newMethod
        setRegister r:4
        pop
        push r:'}J', '_yscale'
        getMember
        push 100
        divide
        push r:'}J', '_xscale'
        getMember
        push 100
        divide
        push 2, r:4, 'scale'
        callMethod
        pop
        push r:'}J', '_rotation'
        getMember
        push 0.0174
        multiply
        push 1, r:4, 'rotate'
        callMethod
        pop
        push r:'}J', '_y'
        getMember
        push r:'}J', '_x'
        getMember
        push 2, r:4, 'translate'
        callMethod
        pop
        push -255, r:'}J', '_alpha'
        getMember
        push 2.55
        multiply
        add
        push 0, 0, 0, 1, 1, 1, 1, 8, 'flash'
        getVariable
        push 'geom'
        getMember
        push 'ColorTransform'
        newMethod
        setRegister r:5
        pop
        push r:'}J', 'blendMode'
        getMember
        setRegister r:6
        pop
        push NULL, NULL, r:6, r:5, r:4, r:'}J', 6, r:'9I*', 'draw'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '=OA', 300
      setMember
      push r:0, '*OA', 300
      setMember
      push r:0, '*sd+;(', 900
      setMember
      push r:0, '2QF=}', 0
      setMember
      push r:0, '*YU{A', 500, 400, 300, 200, 150, 100, 75, 50, 25, 9
      initArray
      push 1, ';ndCG'
      getVariable
      push '*G6KR'
      callMethod
      setMember
      push r:0, '-)KN[', 50000, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '*r63F', 5000, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '*e[', '((', 0, ')(', -1, 2
      initObject
      push '((', -1, ')(', 0, 2
      initObject
      push '((', 0, ')(', 1, 2
      initObject
      push '((', 1, ')(', 0, 2
      initObject
      push 4
      initArray
      setMember
      push r:0, '3Xy1A', 0
      initArray
      setMember
      push r:0, '9ZpS[', 0
      initArray
      setMember
      push ',i0 ['
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push '*DzW'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, ',DBRf', 10
        setMember
        push r:this, 'scale', 100
        setMember
        push r:this, '3V[D(', 1
        setMember
        push r:this, '3GWsN', 1
        setMember
        push r:this, '-iB='
        getMember
        push '+KD', r:this
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '3BjX_'
      function2 (r:2='-X') (r:1='this')
        push r:this, 'scale', r:'-X'
        setMember
        push r:this, '-iB='
        getMember
        push '_xscale', r:'-X'
        setMember
        push r:this, '-iB='
        getMember
        push '_yscale', r:'-X'
        setMember
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '6b'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label42
        push r:this, '6b', r:this, '6b'
        getMember
        push r:this, '3V[D('
        getMember
        multiply
        setMember
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '-iB='
        getMember
        push '_rotation'
        getMember
        push r:this, '6b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label42:
        push r:this, '2VhU6'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label46
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '2VhU6'
        getMember
        push r:this, ',DBRf'
        getMember
        lessThan
        not
        branchIfTrue label46
        push r:this, '2VhU6'
        getMember
        push r:this, ',DBRf'
        getMember
        divide
        setRegister r:3
        pop
        push r:this, '849kV'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label43
        branch label44
       label43:
        push r:this, '-iB='
        getMember
        push '_xscale', r:this, 'scale'
        getMember
        push r:3
        multiply
        setMember
        push r:this, '-iB='
        getMember
        push '_yscale', r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        setMember
        branch label45
       label44:
        push r:this, '-iB='
        getMember
        push '_alpha', r:3, 100
        multiply
        setMember
        branch label45
       label45:
        push r:this, '2VhU6'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label46
        push 0, r:this, '9T54'
        callMethod
        pop
       label46:
        push r:this, '7b'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label47
        push r:this, '7b', r:this, '7b'
        getMember
        push r:this, '3GWsN'
        getMember
        multiply
        setMember
        push r:this, 'scale', r:this, 'scale'
        getMember
        push r:this, '7b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, 'scale'
        getMember
        push 1, r:this, '3BjX_'
        callMethod
        pop
       label47:
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push r:this, '8I0t8('
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label48
        push r:this, '8I0t8('
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
       label48:
        push r:this, 1, '2u=W='
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push '+7U K'
      function2 (r:2='}J') (r:1='this')
        push r:this, ')2fr3', r:'}J'
        setMember
        push r:this, '}Zms3', 0, 'Array'
        new
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, ']1sj+'
      function2 () (r:1='this')
        push r:this, ')2fr3'
        getMember
        return
      end // of function 

      setMember
      push r:1, '-fC3a'
      function2 (r:2='59F') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'59F'
        getMember
        setRegister r:3
        pop
        push r:3, NULL
        equals
        not
        branchIfTrue label49
        push '9oK', 0, 'Array'
        new
        push '7-,', 0, 2
        initObject
        setRegister r:3
        pop
        push r:this, '}Zms3'
        getMember
        push r:'59F', r:3
        setMember
       label49:
        push r:3
        return
      end // of function 

      setMember
      push r:1, ']bu40'
      function2 (r:2='[-99') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'[-99'
        getMember
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:7
        pop
        push r:'[-99', 1000
        multiply
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label51
       label50:
        push r:6
        increment
        setRegister r:6
        pop
       label51:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label53
        push r:4, r:6
        getMember
        push '_name'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label52
        push r:8, r:7
        add
        push 1, r:4, r:6
        getMember
        push 'swapDepths'
        callMethod
        pop
        push r:4, r:7, r:4, r:6
        getMember
        setMember
        push r:7
        increment
        setRegister r:7
        pop
       label52:
        branch label50
       label53:
        push r:3, '7-,', r:7
        setMember
      end // of function 

      setMember
      push r:1, '*=_p_'
      function2 (r:2='*KB2', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label54
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'*KB2', 2, r:this, '*=_p_'
        callMethod
        return
       label54:
        push r:6, r:'[-99', 1000
        multiply
        add
        push r:'*KB2', r:this, ')2fr3'
        getMember
        push 3, '3Wt'
        getVariable
        push '7bSH*'
        callMethod
        setRegister r:7
        pop
        push r:5, r:6, r:7
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:7
        return
      end // of function 

      setMember
      push r:1, '18wU*'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push r:5, 1000
        equals
        not
        branchIfTrue label55
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', 1, r:this, '18wU*'
        callMethod
        return
       label55:
        push r:5, r:'[-99', 1000
        multiply
        add
        push r:this, ')2fr3'
        getMember
        push 2, '3Wt'
        getVariable
        push '-4*l(('
        callMethod
        setRegister r:6
        pop
        push r:4, r:5, r:6
        setMember
        push r:3, '7-,', r:3, '7-,'
        getMember
        increment
        setMember
        push r:6
        return
      end // of function 

      setMember
      push r:1, '(GbB}'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label56
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        return
       label56:
        push r:5, r:6, r:'}J'
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:6, r:'[-99', 1000
        multiply
        add
        return
      end // of function 

      setMember
      push r:1, '+2NA'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        push 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, r:'[-99'
        equals
        not
        branchIfTrue label57
        push UNDEF
        return
       label57:
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:5, '7-,'
        getMember
        setRegister r:7
        pop
        push 0
        setRegister r:8
        pop
        branch label59
       label58:
        push r:8
        increment
        setRegister r:8
        pop
       label59:
        push r:8, r:7
        lessThan
        not
        branchIfTrue label61
        push r:6, r:8
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label60
        push r:6, r:8, NULL
        setMember
        branch label61
       label60:
        branch label58
       label61:
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}oQA7'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label62
        push r:6, r:7, NULL
        setMember
        push r:'}J', 1, r:6, 'unshift'
        callMethod
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label62:
      end // of function 

      setMember
      push r:1, '08M8'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label64
        push r:6, r:7, NULL
        setMember
        push r:5, '7-,'
        getMember
        push 1000
        equals
        not
        branchIfTrue label63
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label63:
        push r:5, '7-,'
        getMember
        setRegister r:3
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:3, r:4, 1000
        multiply
        add
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
        push r:6, r:3, r:'}J'
        setMember
       label64:
      end // of function 

      setMember
      push r:1, 'clear'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:4
        pop
        branch label66
       label65:
        push r:4
        increment
        setRegister r:4
        pop
       label66:
        push r:4, r:3, '7-,'
        getMember
        lessThan
        not
        branchIfTrue label67
        push 0, r:5, r:4
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label65
       label67:
        push r:3, '7-,', 0
        setMember
      end // of function 

      setMember
      push r:1, '9(K ;'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push -99999999
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label69
       label68:
        push r:6
        increment
        setRegister r:6
        pop
       label69:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label77
        push r:4, r:6
        getMember
        setRegister r:9
        pop
        push r:9, '_y'
        getMember
        setRegister r:10
        pop
        push r:10, r:8
        lessThan
        not
        not
        branchIfTrue label70
        push r:10
        setRegister r:8
        pop
        branch label76
       label70:
        push r:6
        setRegister r:7
        pop
        branch label72
       label71:
        push r:7
        decrement
        setRegister r:7
        pop
       label72:
        push r:7, 0
        greaterThan
        not
        branchIfTrue label75
        push r:4, r:7, 1
        subtract
        getMember
        setRegister r:11
        pop
        push r:11, '_y'
        getMember
        push r:10
        greaterThan
        not
        branchIfTrue label73
        push r:4, r:7, r:11
        setMember
        push r:11, 1, r:9, 'swapDepths'
        callMethod
        pop
        branch label74
       label73:
        push r:4, r:7, r:9
        setMember
        branch label75
       label74:
        branch label71
       label75:
        push r:7, 0
        equals
        not
        branchIfTrue label76
        push r:4, 0, r:9
        setMember
       label76:
        branch label68
       label77:
      end // of function 

      setMember
      push r:1, ',}2X ('
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label79
       label78:
        push r:2
        increment
        setRegister r:2
        pop
       label79:
        push r:2, r:this, '}Zms3'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label80
        push r:2, 1, r:this, 'clear'
        callMethod
        pop
        branch label78
       label80:
      end // of function 

      setMember
      push '] ktA'
      function2 (r:2='9lj4D') (r:1='this')
        push r:this, '[X', r:'9lj4D'
        setMember
        push r:this, '5R', r:this, '[X'
        getMember
        push '(('
        getMember
        int
        setMember
        push r:this, '6R', r:this, '[X'
        getMember
        push ')('
        getMember
        int
        setMember
        push r:this, '0P', 0.5
        setMember
        push r:this, '1P', 0.5
        setMember
        push r:this, '+{eA+', 1
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '(j;o7'
      function2 (r:2='((', r:3=')(') (r:1='this')
        push r:this, '5R', r:'(('
        int
        setMember
        push r:this, '6R', r:')('
        int
        setMember
        push r:this, '[X'
        getMember
        push '((', r:'(('
        setMember
        push r:this, '[X'
        getMember
        push ')(', r:')('
        setMember
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this')
        push r:this, ')9 9', 1
        setMember
        push 0
        setRegister r:2
        pop
        push r:this, '[X'
        getMember
        push '[b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        setRegister r:3
        pop
        push r:this, '[X'
        getMember
        push ']b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        setRegister r:4
        pop
       label81:
        push r:this, ')9 9'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label95
        push NULL
        setRegister r:5
        pop
        push NULL
        setRegister r:6
        pop
        push r:3, 0
        greaterThan
        not
        branchIfTrue label82
        push 1, r:this, '0P'
        getMember
        subtract
        push r:3
        divide
        setRegister r:5
        pop
        branch label84
       label82:
        push r:3, 0
        lessThan
        not
        branchIfTrue label83
        push r:this, '0P'
        getMember
        push r:3
        divide
        setRegister r:5
        pop
        branch label84
       label83:
        push 1
        setRegister r:5
        pop
       label84:
        push r:4, 0
        greaterThan
        not
        branchIfTrue label85
        push 1, r:this, '1P'
        getMember
        subtract
        push r:4
        divide
        setRegister r:6
        pop
        branch label87
       label85:
        push r:4, 0
        lessThan
        not
        branchIfTrue label86
        push r:this, '1P'
        getMember
        push r:4
        divide
        setRegister r:6
        pop
        branch label87
       label86:
        push 1
        setRegister r:6
        pop
       label87:
        push NULL
        setRegister r:7
        pop
        push NULL
        setRegister r:8
        pop
        push NULL
        setRegister r:9
        pop
        push r:5, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:6, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        lessThan
        not
        branchIfTrue label88
        push r:5, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        setRegister r:7
        pop
        push r:5, r:7
        divide
        int
        setRegister r:8
        pop
        branch label89
       label88:
        push r:6, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        setRegister r:7
        pop
        push r:6, r:7
        divide
        int
        setRegister r:9
        pop
       label89:
        push TRUE
        setRegister r:10
        pop
        push r:7, r:this, ')9 9'
        getMember
        greaterThan
        not
        branchIfTrue label90
        push r:this, ')9 9'
        getMember
        setRegister r:7
        pop
        push FALSE
        setRegister r:10
        pop
       label90:
        push r:this, '0P', r:this, '0P'
        getMember
        push r:3, r:7
        multiply
        add
        setMember
        push r:this, '1P', r:this, '1P'
        getMember
        push r:4, r:7
        multiply
        add
        setMember
        push r:this, ')9 9', r:this, ')9 9'
        getMember
        push r:7
        subtract
        setMember
        push r:10
        not
        branchIfTrue label94
        push r:8, NULL
        equals
        not
        not
        branchIfTrue label92
        push r:this, '6R'
        getMember
        push r:this, '5R'
        getMember
        push r:8
        add
        push 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '77ldJ('
        callMethod
        not
        branchIfTrue label91
        push r:this, '5R', r:this, '5R'
        getMember
        push r:8
        add
        setMember
        push r:this, '0P', r:this, '0P'
        getMember
        push r:8
        subtract
        setMember
        branch label92
       label91:
        push 0, r:this, '[X'
        getMember
        push '[b'
        getMember
        push r:this, '[X'
        getMember
        push '[b'
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        divide
        push 2, r:this, '09uM1('
        callMethod
        pop
        push r:3, 0, r:this, '+{eA+'
        getMember
        subtract
        multiply
        setRegister r:3
        pop
        push r:this, '[X'
        getMember
        push '[b', r:this, '[X'
        getMember
        push '[b'
        getMember
        push 0, r:this, '+{eA+'
        getMember
        subtract
        multiply
        setMember
       label92:
        push r:9, NULL
        equals
        not
        not
        branchIfTrue label94
        push r:this, '6R'
        getMember
        push r:9
        add
        push r:this, '5R'
        getMember
        push 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '77ldJ('
        callMethod
        not
        branchIfTrue label93
        push r:this, '6R', r:this, '6R'
        getMember
        push r:9
        add
        setMember
        push r:this, '1P', r:this, '1P'
        getMember
        push r:9
        subtract
        setMember
        branch label94
       label93:
        push r:this, '[X'
        getMember
        push ']b'
        getMember
        push r:this, '[X'
        getMember
        push ']b'
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        divide
        push 0, 2, r:this, '09uM1('
        callMethod
        pop
        push r:4, 0, r:this, '+{eA+'
        getMember
        subtract
        multiply
        setRegister r:4
        pop
        push r:this, '[X'
        getMember
        push ']b', r:this, '[X'
        getMember
        push ']b'
        getMember
        push 0, r:this, '+{eA+'
        getMember
        subtract
        multiply
        setMember
       label94:
        branch label81
       label95:
        push r:this, '[X'
        getMember
        push '1o8jJ'
        getMember
        push r:this
        equals
        not
        branchIfTrue label96
        push r:this, '[X'
        getMember
        push '((', r:this, '5R'
        getMember
        push r:this, '0P'
        getMember
        add
        setMember
        push r:this, '[X'
        getMember
        push ')(', r:this, '6R'
        getMember
        push r:this, '1P'
        getMember
        add
        setMember
       label96:
      end // of function 

      setMember
      push r:1, '09uM1('
      function2 (r:2='[b', r:3=']b') (r:1='this')
      end // of function 

      setMember
      push r:1, '1HwWD'
      function2 () (r:1='this')
      end // of function 

      setMember
      push r:1, '*YT,T'
      function2 (r:2='(', r:3='7') (r:1='this')
      end // of function 

      setMember
      push '{-kxL'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '87vE7('
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '4plQ5', '{-kxL'
        getVariable
        push '4plQ5'
        getMember
        increment
        setMember
        push 0, '3Wt'
        getVariable
        push 'getTimer'
        callMethod
        setRegister r:2
        pop
        push '{-kxL'
        getVariable
        push ';ILSy', r:2, '{-kxL'
        getVariable
        push '3R,QM'
        getMember
        subtract
        push 1000.0
        divide
        setMember
        push '{-kxL'
        getVariable
        push '3R,QM', r:2
        setMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        push '{-kxL'
        getVariable
        push ';y}-6('
        getMember
        lessThan
        not
        branchIfTrue label97
        push '{-kxL'
        getVariable
        push '-)Xd+', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        push '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        multiply
        push 1, '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        subtract
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        multiply
        add
        setMember
        branch label98
       label97:
        push '{-kxL'
        getVariable
        push ';ILSy', 1, '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        divide
        setMember
       label98:
        push '{-kxL'
        getVariable
        push '-V;B', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        setMember
      end // of function 

      setMember
      push r:0, 'fps'
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        return
      end // of function 

      setMember
      push r:0, '6GI,F', 32
      setMember
      push r:0, ';y}-6(', 0.5
      setMember
      push r:0, '3R,QM', 0, '3Wt'
      getVariable
      push 'getTimer'
      callMethod
      setMember
      push r:0, '[Ad;n', 0.95
      setMember
      push r:0, '-)Xd+', 1
      setMember
      push r:0, '-V;B', 1
      setMember
      push r:0, ';ILSy', 1
      setMember
      push r:0, '4plQ5', 0
      setMember
      push '=3+P'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push '44{N'
        getVariable
        push '[j9fb'
        getMember
        push '5(oMC', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:'}J'
        pop
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push 0, 1, r:this, '5Hy6b'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '5Hy6b'
      function2 (r:2='7') (r:1='this')
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label99
        push r:0, 1
        strictEquals
        branchIfTrue label100
        branch label101
       label99:
        push r:this, '(KpGn', 0
        setMember
        push 0, r:this, '1F*uB'
        callMethod
        pop
        push r:this, '[b', 0
        setMember
        push r:this, ']b', 0
        setMember
        push r:this, '-fRSr', FALSE
        setMember
        branch label101
       label100:
        push r:this, ')(', r:this, ')('
        getMember
        push '=3+P'
        getVariable
        push '{Cs'
        getMember
        subtract
        setMember
        branch label101
       label101:
        push r:this, '=kIA', r:'7'
        setMember
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label102
        push r:0, 1
        strictEquals
        branchIfTrue label103
        branch label104
       label102:
        push r:this, '(KpGn', 0.5
        setMember
        push r:this, '((', '*r'
        getVariable
        push '=OA'
        getMember
        push '=3+P'
        getVariable
        push '{Cs'
        getMember
        push 3
        add
        subtract
        push r:this, '(('
        getMember
        push '=3+P'
        getVariable
        push '{Cs'
        getMember
        push 3
        add
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
        push r:this, '1o8jJ', r:this, 1, '(6IbI('
        new
        setMember
        push r:this, '1o8jJ'
        getMember
        push '*YT,T', '(v+', r:this, 2, '3Wt'
        getVariable
        push '6{VYR'
        callMethod
        setMember
        push '2', 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        branch label104
       label103:
        push r:this, '7VQr3', 0, 1
        initArray
        setMember
        push '1', 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '}Yax5', 0, 1
        initArray
        setMember
        push r:this, '-iB='
        getMember
        push '_rotation', 0
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push '=3+P'
        getVariable
        push '{Cs'
        getMember
        add
        setMember
        push r:this, '5R', r:this, '(('
        getMember
        int
        setMember
        push r:this, '6R', r:this, ')('
        getMember
        int
        setMember
        push r:this, ' IWA+', 0
        setMember
        branch label104
       label104:
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
        push '=3+P'
        getVariable
        push '{Cs'
        getMember
        push 4
        add
        setRegister r:3
        pop
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label105
        push r:0, 1
        strictEquals
        branchIfTrue label119
        push r:0, 2
        strictEquals
        branchIfTrue label122
        branch label123
       label105:
        push r:this, '1o8jJ'
        getMember
        push '5R', '*r'
        getVariable
        push '=OA'
        getMember
        push r:3
        subtract
        push r:this, '1o8jJ'
        getMember
        push '5R'
        getMember
        push r:3, 3, '*r'
        getVariable
        push '2K'
        callMethod
        int
        setMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '=kIA'
        getMember
        push 1
        equals
        not
        branchIfTrue label117
        push r:this, '}CL'
        getMember
        push NULL
        equals
        not
        branchIfTrue label116
        push 0
        setRegister r:4
        pop
        branch label107
       label106:
        push r:4
        increment
        setRegister r:4
        pop
       label107:
        push r:4, '*r'
        getVariable
        push '+-(0'
        getMember
        push '[NuT)'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label111
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '[NuT)'
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push r:5, '1o8jJ'
        getMember
        push NULL
        equals
        not
        dup
        branchIfTrue label108
        pop
        push r:5, '=kIA'
        getMember
        push 0
        equals
       label108:
        dup
        not
        branchIfTrue label109
        pop
        push r:5, 1, r:this, '}1A{_'
        callMethod
        push 16
        lessThan
       label109:
        not
        branchIfTrue label110
        push 0, r:this, '3-}+b'
        callMethod
        pop
        push r:this, '}CL', r:5
        setMember
        push r:this, '[b', 0
        setMember
        push r:this, ']b', 0
        setMember
        push '(VKB', 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '-iB='
        getMember
        push '_rotation', 0
        setMember
        push r:this, '-fRSr', FALSE
        setMember
       label110:
        branch label106
       label111:
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '*cD)'
        getMember
        push '=kIA'
        getMember
        push 3
        lessThan
        dup
        not
        branchIfTrue label112
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '*cD)'
        getMember
        push 1, r:this, '}1A{_'
        callMethod
        push 32
        lessThan
       label112:
        not
        branchIfTrue label113
        push 0, '*r'
        getVariable
        push '+-(0'
        getMember
        push '*cD)'
        getMember
        push '565'
        callMethod
        pop
       label113:
        push 0
        setRegister r:6
        pop
        push 'Key'
        getVariable
        push 'LEFT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label114
        push -1
        setRegister r:6
        pop
       label114:
        push 'Key'
        getVariable
        push 'RIGHT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label115
        push 1
        setRegister r:6
        pop
       label115:
        push r:this, '[b', r:this, '[b'
        getMember
        push r:6, '=3+P'
        getVariable
        push '5yKOJ'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label116:
        push 0, r:this, '=[-8n'
        callMethod
        pop
       label117:
        push r:this, '1o8jJ'
        getMember
        push '6R'
        getMember
        push r:this, '1o8jJ'
        getMember
        push '5R'
        getMember
        push 2, r:this, '1o8jJ'
        getMember
        push '=)0hg'
        callMethod
        push NULL
        equals
        not
        not
        branchIfTrue label118
        push r:this, '1o8jJ'
        getMember
        push '6R', r:this, '1o8jJ'
        getMember
        push '6R'
        getMember
        decrement
        setMember
        branch label117
       label118:
        branch label123
       label119:
        push 0, r:this, '+A}D'
        callMethod
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '=kIA'
        getMember
        push 1
        equals
        not
        branchIfTrue label121
        push 0, r:this, '=[-8n'
        callMethod
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '[NuT)'
        getMember
        push 'length'
        getMember
        push 0
        equals
        dup
        not
        branchIfTrue label120
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '*cD)'
        getMember
        push '=kIA'
        getMember
        push 4
        equals
       label120:
        not
        branchIfTrue label121
        push 9, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '5Hy6b'
        callMethod
        pop
       label121:
        push r:this, '((', '*r'
        getVariable
        push '=OA'
        getMember
        push r:3
        subtract
        push r:this, '(('
        getMember
        push r:3, 3, '*r'
        getVariable
        push '2K'
        callMethod
        int
        setMember
        branch label123
       label122:
        branch label123
       label123:
        push r:this, ')('
        getMember
        push '*r'
        getVariable
        push '*sd+;('
        getMember
        greaterThan
        not
        branchIfTrue label124
        push 9, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '5Hy6b'
        callMethod
        pop
       label124:
      end // of function 

      setMember
      push r:1, '(v+'
      function2 (r:2='(', r:3='7') (r:1='this')
        push 3.14, 1.57, r:'7'
        subtract
        push 2, '*r'
        getVariable
        push '0Yj1'
        callMethod
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push 1.57
        lessThan
        not
        branchIfTrue label125
        push 1, 1, r:this, '5Hy6b'
        callMethod
        pop
       label125:
      end // of function 

      setMember
      push r:1, '+A}D'
      function2 () (r:1='this')
        push 'Key'
        getVariable
        push 'LEFT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label126
        push r:this, '}Yax5', r:this, '}Yax5'
        getMember
        push 0
        getMember
        push '=3+P'
        getVariable
        push '{)W'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        push 1
        initArray
        setMember
        push r:this, '-iB='
        getMember
        push '_xscale', -100
        setMember
       label126:
        push 'Key'
        getVariable
        push 'RIGHT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label127
        push r:this, '}Yax5', r:this, '}Yax5'
        getMember
        push 0
        getMember
        push '=3+P'
        getVariable
        push '{)W'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 1
        initArray
        setMember
        push r:this, '-iB='
        getMember
        push '_xscale', 100
        setMember
       label127:
        push r:this, '}Yax5', r:this, '}Yax5'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push '=3+P'
        getVariable
        push '9{(a0('
        getMember
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        push 1
        initArray
        setMember
        push r:this, '=YEsK('
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label128
        push r:this, '}Yax5', 0, 1
        initArray
        setMember
       label128:
        push r:this, '}Yax5'
        getMember
        push 0
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        setRegister r:2
        pop
        push r:this, '}Yax5'
        getMember
        push 0
        getMember
        push r:2
        divide
        int
        setRegister r:3
        pop
        push r:this, '=YEsK('
        getMember
        push NULL
        equals
        not
        branchIfTrue label129
        push r:this, ' IWA+', r:this, ' IWA+'
        getMember
        push r:2
        add
        push '=3+P'
        getVariable
        push ']9NQ ('
        getMember
        modulo
        setMember
        push r:this, ' IWA+'
        getMember
        int
        push 1
        add
        toString
        push 1, r:this, '-iB='
        getMember
        push '7bJ'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
       label129:
        push r:2, 1
        greaterThan
        not
        branchIfTrue label149
        push 0
        setRegister r:4
        pop
        push NULL
        setRegister r:5
        pop
        push FALSE
        setRegister r:6
        pop
        push 0
        setRegister r:7
        pop
        branch label131
       label130:
        push r:7
        increment
        setRegister r:7
        pop
       label131:
        push r:7, '=3+P'
        getVariable
        push '4SbC,('
        getMember
        lessThan
        not
        branchIfTrue label133
        push r:this, '6R'
        getMember
        push r:7
        subtract
        push r:this, '5R'
        getMember
        push r:3
        add
        push 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '77ldJ('
        callMethod
        not
        branchIfTrue label132
        push r:7
        setRegister r:5
        pop
        branch label133
       label132:
        branch label130
       label133:
        push r:5, 0
        equals
        not
        branchIfTrue label139
        push 0
        setRegister r:8
        pop
        branch label135
       label134:
        push r:8
        increment
        setRegister r:8
        pop
       label135:
        push r:8, '=3+P'
        getVariable
        push '4SbC,('
        getMember
        lessThan
        not
        branchIfTrue label138
        push r:this, '6R'
        getMember
        push 1
        add
        push r:5
        subtract
        push r:this, '5R'
        getMember
        push r:3
        add
        push 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '77ldJ('
        callMethod
        not
        branchIfTrue label136
        push r:5
        decrement
        setRegister r:5
        pop
        branch label137
       label136:
        branch label138
       label137:
        branch label134
       label138:
        push r:5, 0, '=3+P'
        getVariable
        push '4SbC,('
        getMember
        subtract
        equals
        not
        branchIfTrue label139
        push NULL
        setRegister r:5
        pop
        push TRUE
        setRegister r:6
        pop
       label139:
        push r:5, NULL
        equals
        not
        not
        branchIfTrue label143
        push r:5, '=3+P'
        getVariable
        push '7KzN,'
        getMember
        greaterThan
        not
        dup
        not
        branchIfTrue label140
        pop
        push r:5, 0, '=3+P'
        getVariable
        push '7KzN,'
        getMember
        subtract
        lessThan
        not
       label140:
        not
        branchIfTrue label141
        push r:this, '5R', r:this, '5R'
        getMember
        push r:3
        add
        setMember
        push r:this, '6R', r:this, '6R'
        getMember
        push r:5
        subtract
        setMember
        branch label142
       label141:
        push r:this, '6R', r:this, '6R'
        getMember
        push '=3+P'
        getVariable
        push '7KzN,'
        getMember
        push r:5, 0, '=3+P'
        getVariable
        push '7KzN,'
        getMember
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        int
        subtract
        setMember
       label142:
        branch label148
       label143:
        push r:6
        not
        branchIfTrue label146
        push 0, 1, r:this, '5Hy6b'
        callMethod
        pop
       label144:
        push r:this, '1o8jJ'
        getMember
        push '6R'
        getMember
        push r:this, '1o8jJ'
        getMember
        push '5R'
        getMember
        push 2, r:this, '1o8jJ'
        getMember
        push '=)0hg'
        callMethod
        push NULL
        equals
        not
        not
        branchIfTrue label145
        push r:this, '1o8jJ'
        getMember
        push '6R', r:this, '1o8jJ'
        getMember
        push '6R'
        getMember
        decrement
        setMember
        branch label144
       label145:
        push r:this, '[b', r:3, 3
        multiply
        setMember
        push r:this, ']b', -3
        setMember
        push ',D2', 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '-fRSr', TRUE
        setMember
        branch label147
       label146:
        push r:this, '}Yax5', r:this, '}Yax5'
        getMember
        push 0
        getMember
        push -1
        multiply
        push 1
        initArray
        setMember
       label147:
        branch label149
       label148:
        push r:2
        decrement
        setRegister r:2
        pop
        branch label129
       label149:
        push r:this, '6R'
        getMember
        push r:this, '5R'
        getMember
        push 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '77ldJ('
        callMethod
        not
        not
        branchIfTrue label150
        push r:this, '6R', r:this, '6R'
        getMember
        decrement
        setMember
        branch label149
       label150:
        push 0
        setRegister r:9
        pop
        branch label152
       label151:
        push r:9
        increment
        setRegister r:9
        pop
       label152:
        push r:9, '*r'
        getVariable
        push '+-(0'
        getMember
        push '[NuT)'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label155
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '[NuT)'
        getMember
        push r:9
        getMember
        setRegister r:10
        pop
        push r:10, '1o8jJ'
        getMember
        push NULL
        equals
        not
        dup
        not
        branchIfTrue label153
        pop
        push r:10, 1, r:this, '}1A{_'
        callMethod
        push 16
        lessThan
       label153:
        not
        branchIfTrue label154
        push r:10, '[b', r:10, '[b'
        getMember
        push 5, r:3
        multiply
        add
        setMember
        push r:10, ']b', r:10, ']b'
        getMember
        push 2
        subtract
        setMember
       label154:
        branch label151
       label155:
        push r:this, '((', r:this, '5R'
        getMember
        setMember
        push r:this, ')(', r:this, '6R'
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '=[-8n'
      function2 () (r:1='this')
        push r:this, '=YEsK('
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label159
        push 0.1
        setRegister r:2
        pop
        push 'Key'
        getVariable
        push 'LEFT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label156
        push r:this, ' fRjB(', r:this, ' fRjB('
        getMember
        push r:2
        subtract
        setMember
       label156:
        push 'Key'
        getVariable
        push 'RIGHT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label157
        push r:this, ' fRjB(', r:this, ' fRjB('
        getMember
        push r:2
        add
        setMember
       label157:
        push r:this, '=YEsK(', r:this, '=YEsK('
        getMember
        push 5, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '=YEsK(', r:this, '=YEsK('
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.8, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        setMember
        push r:this, '}CL'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label158
        push r:this, ' fRjB('
        getMember
        push 1.57
        subtract
        setRegister r:3
        pop
        push r:3, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push 6
        multiply
        setRegister r:4
        pop
        push r:3, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push 6
        multiply
        setRegister r:5
        pop
        push r:this, '}CL'
        getMember
        push ')('
        getMember
        push r:5
        add
        push r:this, '}CL'
        getMember
        push '(('
        getMember
        push r:4
        add
        push 2, r:this, '1o8jJ'
        getMember
        push '(j;o7'
        callMethod
        pop
        push r:this, '-iB='
        getMember
        push '_rotation', r:3, 0.0174
        divide
        push 90
        add
        setMember
       label158:
        push r:this, '8h2(K('
        getMember
        push '_xscale', 1.25, r:this, '=YEsK('
        getMember
        multiply
        push 3
        multiply
        setMember
        push r:this, '8h2(K('
        getMember
        push '_yscale', r:this, '8h2(K('
        getMember
        push '_xscale'
        getMember
        setMember
        push r:this, '8h2(K('
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '8h2(K('
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
        push r:this, '8h2(K('
        getMember
        push '9RH*'
        getMember
        push '_rotation', r:this, ' fRjB('
        getMember
        push 0.0174
        divide
        setMember
        push r:this, '8h2(K('
        getMember
        push '9RH*'
        getMember
        push '_xscale', 10000, r:this, '8h2(K('
        getMember
        push '_xscale'
        getMember
        divide
        setMember
        push r:this, '8h2(K('
        getMember
        push '9RH*'
        getMember
        push '_yscale', 10000, r:this, '8h2(K('
        getMember
        push '_yscale'
        getMember
        divide
        setMember
        push r:this, '=YEsK('
        getMember
        push 18
        greaterThan
        not
        branchIfTrue label159
        push 0, r:this, ',J81z'
        callMethod
        pop
       label159:
      end // of function 

      setMember
      push r:1, ';8,PR'
      function2 () (r:1='this')
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '=kIA'
        getMember
        push 1
        equals
        not
        branchIfTrue label167
        push r:this, '=kIA'
        getMember
        push 0
        equals
        dup
        not
        branchIfTrue label160
        pop
        push r:this, '}CL'
        getMember
        push NULL
        equals
       label160:
        dup
        not
        branchIfTrue label161
        pop
        push r:this, '7{zg9'
        getMember
        push 0
        getMember
        push 0
        greaterThan
       label161:
        not
        branchIfTrue label164
        push 0
        setRegister r:2
        pop
        push 'Key'
        getVariable
        push 'LEFT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label162
        push -1
        setRegister r:2
        pop
       label162:
        push 'Key'
        getVariable
        push 'RIGHT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label163
        push 1
        setRegister r:2
        pop
       label163:
        push r:this, ']b', -10
        setMember
        push r:this, '[b', r:this, '[b'
        getMember
        push r:2, 3
        multiply
        add
        setMember
        push r:this, '7{zg9', r:this, '7{zg9'
        getMember
        push 0
        getMember
        decrement
        push 1
        initArray
        setMember
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push ',tiXV', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:3
        pop
        push r:3, '_x', r:this, '(('
        getMember
        setMember
        push r:3, '_y', r:this, ')('
        getMember
        setMember
        push r:3, '_xscale', 50
        setMember
        push r:3, '_yscale', r:3, '_xscale'
        getMember
        setMember
        push r:3, ' IWA+', 0
        setMember
        push r:3, '*7', 9
        setMember
        push r:3, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '7IrKA'
        getMember
        push 'push'
        callMethod
        pop
       label164:
        push r:this, '=YEsK('
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label165
        push 0, r:this, ',J81z'
        callMethod
        pop
       label165:
        push r:this, '=YEsK('
        getMember
        push NULL
        equals
        dup
        not
        branchIfTrue label166
        pop
        push r:this, '=kIA'
        getMember
        push 1
        equals
       label166:
        not
        branchIfTrue label167
        push 0, r:this, '3-}+b'
        callMethod
        pop
       label167:
      end // of function 

      setMember
      push r:1, ',J81z'
      function2 () (r:1='this')
        push r:this, '=YEsK('
        getMember
        push 5
        greaterThan
        not
        branchIfTrue label170
        push 0, 1, r:this, '5Hy6b'
        callMethod
        pop
       label168:
        push r:this, '1o8jJ'
        getMember
        push '6R'
        getMember
        push r:this, '1o8jJ'
        getMember
        push '5R'
        getMember
        push 2, r:this, '1o8jJ'
        getMember
        push '=)0hg'
        callMethod
        push NULL
        equals
        not
        not
        branchIfTrue label169
        push r:this, '1o8jJ'
        getMember
        push '6R', r:this, '1o8jJ'
        getMember
        push '6R'
        getMember
        decrement
        setMember
        branch label168
       label169:
        push r:this, '[b', r:this, ' fRjB('
        getMember
        push 1.57
        subtract
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:this, '=YEsK('
        getMember
        multiply
        setMember
        push r:this, ']b', r:this, ' fRjB('
        getMember
        push 1.57
        subtract
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:this, '=YEsK('
        getMember
        multiply
        setMember
        push r:this, '-fRSr', TRUE
        setMember
        push ',D2', 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '-iB='
        getMember
        push '_xscale', 100
        setMember
       label170:
        push 0, r:this, '8h2(K('
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, '=YEsK(', NULL
        setMember
        push r:this, '}CL'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label171
        push '*r'
        getVariable
        push '*YU{A'
        getMember
        push r:this, '7VQr3'
        getMember
        push 0
        getMember
        getMember
        setRegister r:2
        pop
        push 100, r:2, r:this, '}CL'
        getMember
        push ')('
        getMember
        push r:this, '}CL'
        getMember
        push '(('
        getMember
        push 4, '*r'
        getVariable
        push '+-(0'
        getMember
        push '}B)Y_'
        callMethod
        pop
        push r:this, '7VQr3', 8, r:this, '7VQr3'
        getMember
        push 0
        getMember
        push 1
        add
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        int
        push 1
        initArray
        setMember
        push 0, r:this, ']b'
        getMember
        subtract
        push 0.5
        multiply
        push 0, r:this, '[b'
        getMember
        subtract
        push 0.5
        multiply
        push 2, r:this, '}CL'
        getMember
        push ';-[;H'
        callMethod
        pop
        push r:this, '}CL', NULL
        setMember
       label171:
      end // of function 

      setMember
      push r:1, '3-}+b'
      function2 () (r:1='this')
        push 0, '*r'
        getVariable
        push '+-(0'
        getMember
        push '5hw(b'
        callMethod
        pop
        push r:this, '=YEsK('
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label172
        push 0, r:this, '8h2(K('
        getMember
        push 'removeMovieClip'
        callMethod
        pop
       label172:
        push r:this, '7{zg9', 1, 1
        initArray
        setMember
        push r:this, '=YEsK(', 0
        setMember
        push r:this, '8h2(K(', '44{N'
        getVariable
        push '4MvcB'
        getMember
        push '0JzS9', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '}CL'
        getMember
        push NULL
        equals
        not
        branchIfTrue label173
        push r:this, '8h2(K('
        getMember
        push '9RH*'
        getMember
        push '_visible', FALSE
        setMember
       label173:
        push r:this, ' fRjB(', 0
        setMember
      end // of function 

      setMember
      push r:0, ']9NQ (', 12
      setMember
      push r:0, '5yKOJ', 0.35
      setMember
      push r:0, '{Cs', 5
      setMember
      push r:0, '9{(a0(', 0.7
      setMember
      push r:0, '{)W', 3
      setMember
      push r:0, '4SbC,(', 24
      setMember
      push r:0, '7KzN,', 2
      setMember
      push '3hAJ'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push '44{N'
        getVariable
        push ';C*X2'
        getMember
        push ';ay;C', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:'}J'
        pop
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, ' IWA+', 0
        setMember
        push r:this, '6g,A', 1
        setMember
        push r:this, '}Yax5', 4
        setMember
        push r:this, '+33kL', 0
        setMember
        push r:this, '((', '*r'
        getVariable
        push '=OA'
        getMember
        push 0.5
        multiply
        setMember
        push r:this, ')(', '*r'
        getVariable
        push '*sd+;('
        getMember
        push 250
        subtract
        setMember
        push r:this, '=kIA', 0
        setMember
        push r:this, '69-', 0
        setMember
        push r:this, '6z]10', 0.08
        setMember
        push r:this, '4yx*K', 0.08
        setMember
        push r:this, '9or*K', 0
        setMember
        push r:this, ' (p(c', 100
        setMember
        push 0, r:this, '-mi-b'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '-mi-b'
      function2 () (r:1='this')
        push r:this, '5955', '3hAJ'
        getVariable
        push ']iaT'
        getMember
        push 1
        initArray
        setMember
        push r:this, '[hc22(', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:2
        pop
        branch label175
       label174:
        push r:2
        increment
        setRegister r:2
        pop
       label175:
        push r:2, r:this, '5955'
        getMember
        push 0
        getMember
        lessThan
        not
        branchIfTrue label176
        push 6, '+k1PE', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '(W3'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:3
        pop
        push r:3, '_x', 12, r:2, 16
        multiply
        add
        setMember
        push r:3, '_y', 13
        setMember
        push 0, r:3, 'stop'
        callMethod
        pop
        push r:3, 1, r:this, '[hc22('
        getMember
        push 'push'
        callMethod
        pop
        branch label174
       label176:
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, 'invert'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label177
        push r:this, 'invert', r:this, 'invert'
        getMember
        decrement
        setMember
        push r:this, 'invert'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label177
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '(KA'
        getMember
        push 'filters', 0
        initArray
        setMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push ';+'
        getMember
        push 'filters', 0
        initArray
        setMember
        push r:this, 'invert', NULL
        setMember
       label177:
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label178
        push r:0, 1
        strictEquals
        branchIfTrue label184
        push r:0, 2
        strictEquals
        branchIfTrue label186
        push r:0, 3
        strictEquals
        branchIfTrue label188
        push r:0, 4
        strictEquals
        branchIfTrue label190
        branch label192
       label178:
        push r:this, ' (p(c'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label179
        push r:this, ' IWA+', r:this, ' IWA+'
        getMember
        push 3, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push '3hAJ'
        getVariable
        push '4hj(B'
        getMember
        modulo
        setMember
        push r:this, ' IWA+'
        getMember
        int
        push 1
        add
        toString
        push 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push 0, r:this, '{Dl(0'
        callMethod
        pop
        branch label183
       label179:
        push r:this, ' (p(c', r:this, ' (p(c'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, ' (p(c'
        getMember
        push 50
        lessThan
        not
        branchIfTrue label182
        push r:this, '-iB='
        getMember
        push '_currentframe'
        getMember
        push '3hAJ'
        getVariable
        push '40=9K'
        getMember
        lessThan
        not
        branchIfTrue label180
        push ']c_N,', 1, r:this, '-iB='
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        branch label181
       label180:
        push 0, r:this, '-iB='
        getMember
        push 'play'
        callMethod
        pop
       label181:
        branch label183
       label182:
        push r:this, ' IWA+', r:this, ' IWA+'
        getMember
        push 3, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push '3hAJ'
        getVariable
        push '4hj(B'
        getMember
        modulo
        setMember
        push r:this, ' IWA+'
        getMember
        int
        push 1
        add
        toString
        push 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
       label183:
        push 0, r:this, '}SC6'
        callMethod
        pop
        branch label192
       label184:
        push r:this, '6u*J7', '3hAJ'
        getVariable
        push '40=9K'
        getMember
        push r:this, '6u*J7'
        getMember
        push 5, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setMember
        push r:this, '6u*J7'
        getMember
        push '3hAJ'
        getVariable
        push '40=9K'
        getMember
        equals
        not
        branchIfTrue label185
        push r:this, '=kIA', 2
        setMember
        push r:this, ')('
        getMember
        push 34
        subtract
        push r:this, '(('
        getMember
        push 44, 100, r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        divide
        multiply
        subtract
        push 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '*af(*('
        callMethod
        setRegister r:3
        pop
        push r:3, '[b', r:this, '6g,A'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        multiply
        push 6
        multiply
        setMember
       label185:
        push r:this, '6u*J7'
        getMember
        int
        push 1
        add
        toString
        push 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push 0, r:this, '}SC6'
        callMethod
        pop
        branch label192
       label186:
        push r:this, '6u*J7', '3hAJ'
        getVariable
        push '[-vN8'
        getMember
        push r:this, '6u*J7'
        getMember
        push 5, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        setMember
        push r:this, '6u*J7'
        getMember
        push '3hAJ'
        getVariable
        push '[-vN8'
        getMember
        equals
        not
        branchIfTrue label187
        push r:this, '=kIA', 0
        setMember
        push r:this, '-iB='
        getMember
        push '_xscale', 2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 100
        multiply
        setMember
       label187:
        push r:this, '6u*J7'
        getMember
        int
        push 1
        add
        toString
        push 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push 0, r:this, '}SC6'
        callMethod
        pop
        push 0, r:this, '{Dl(0'
        callMethod
        pop
        branch label192
       label188:
        push 0, r:this, '-iB='
        getMember
        push 'play'
        callMethod
        pop
        push r:this, '-iB='
        getMember
        push '_visible', r:this, '-iB='
        getMember
        push '_visible'
        getMember
        not
        setMember
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '2VhU6'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label189
        push r:this, '=kIA', 0
        setMember
        push r:this, '-iB='
        getMember
        push '_visible', TRUE
        setMember
       label189:
        push r:this, '((', '*r'
        getVariable
        push '=OA'
        getMember
        push '3hAJ'
        getVariable
        push '2QF=}'
        getMember
        subtract
        push r:this, '(('
        getMember
        push '3hAJ'
        getVariable
        push '2QF=}'
        getMember
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push 0.1
        subtract
        setMember
        branch label192
       label190:
        push r:this, '-iB='
        getMember
        push '_currentframe'
        getMember
        push '3hAJ'
        getVariable
        push '40=9K'
        getMember
        lessThan
        not
        branchIfTrue label191
        push '59-', 1, r:this, '-iB='
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
       label191:
        push r:this, ']b', r:this, ']b'
        getMember
        push 0.5
        add
        setMember
        branch label192
       label192:
        push r:this, '69-', r:this, '69-'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        add
        setMember
        push r:this, '9or*K', r:this, '9or*K'
        getMember
        push 3.0e-005
        add
        setMember
      end // of function 

      setMember
      push r:1, '}SC6'
      function2 () (r:1='this')
        push r:this, '}Yax5', r:this, '}Yax5'
        getMember
        push 0.003
        add
        setMember
        push r:this, '6g,A'
        getMember
        push r:this, '}Yax5'
        getMember
        multiply
        setRegister r:2
        pop
        push r:2, r:this, '[b'
        getMember
        subtract
        setRegister r:3
        pop
        push r:this, '[b', r:this, '[b'
        getMember
        push r:3, 0.2
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '(('
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        push '3hAJ'
        getVariable
        push '2QF=}'
        getMember
        subtract
        greaterThan
        dup
        branchIfTrue label193
        pop
        push r:this, '(('
        getMember
        push '3hAJ'
        getVariable
        push '2QF=}'
        getMember
        lessThan
       label193:
        not
        branchIfTrue label194
        push r:this, '((', '*r'
        getVariable
        push '=OA'
        getMember
        push '3hAJ'
        getVariable
        push '2QF=}'
        getMember
        subtract
        push r:this, '(('
        getMember
        push '3hAJ'
        getVariable
        push '2QF=}'
        getMember
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
        push r:this, '[b', 0
        setMember
        push r:this, '6g,A', r:this, '6g,A'
        getMember
        push -1
        multiply
        setMember
       label194:
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '9I'
        getMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push ')('
        getMember
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:4
        pop
        push 100, r:4, 215
        subtract
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        setRegister r:5
        pop
        push r:5, r:this, ')('
        getMember
        subtract
        setRegister r:6
        pop
        push r:6, r:this, '6z]10'
        getMember
        multiply
        setRegister r:7
        pop
        push r:7, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:this, '4yx*K'
        getMember
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:8
        pop
        push r:this, ']b', r:this, ']b'
        getMember
        push r:8, r:7, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        push 0, r:8
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
      end // of function 

      setMember
      push r:1, '{Dl(0'
      function2 () (r:1='this')
        push r:this, '+33kL', r:this, '+33kL'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
       label195:
        push r:this, '+33kL'
        getMember
        push 0
        greaterThan
        not
        not
        branchIfTrue label197
        push 3, 12, r:this, '69-'
        getMember
        push 0.004
        multiply
        subtract
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        setRegister r:2
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push r:2
        multiply
        push 1
        lessThan
        not
        branchIfTrue label196
        push r:this, '=kIA', 1
        setMember
        push r:this, '6u*J7'
        getMember
        push NULL
        equals
        not
        branchIfTrue label196
        push r:this, '6u*J7', 0
        setMember
       label196:
        push r:this, '+33kL', r:this, '+33kL'
        getMember
        push 3
        add
        setMember
        branch label195
       label197:
      end // of function 

      setMember
      push r:1, '565'
      function2 () (r:1='this')
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        setRegister r:2
        pop
        push r:2, 1, r:this, ')153L'
        callMethod
        setRegister r:3
        pop
        push r:3, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:4
        pop
        push r:3, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:5
        pop
        push r:this, '[b', r:this, '[b'
        getMember
        push r:4, 10
        multiply
        subtract
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:5, 10
        multiply
        subtract
        setMember
        push r:2, '[b', r:4, 5
        multiply
        setMember
        push r:2, ']b', r:5, 5
        multiply
        setMember
        push r:this, '5955', r:this, '5955'
        getMember
        push 0
        getMember
        decrement
        push 1
        initArray
        setMember
        push r:this, '6z]10', r:this, '6z]10'
        getMember
        push 0.02
        add
        setMember
        push r:this, '4yx*K', r:this, '4yx*K'
        getMember
        push 0.03
        add
        setMember
        push 0
        setRegister r:6
        pop
        branch label199
       label198:
        push r:6
        increment
        setRegister r:6
        pop
       label199:
        push r:6, r:this, '[hc22('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label201
        push r:this, '[hc22('
        getMember
        push r:6
        getMember
        setRegister r:7
        pop
        push '1'
        setRegister r:8
        pop
        push r:6, r:this, '5955'
        getMember
        push 0
        getMember
        lessThan
        not
        not
        branchIfTrue label200
        push '2'
        setRegister r:8
        pop
       label200:
        push r:8, 1, r:7, 'gotoAndStop'
        callMethod
        pop
        branch label198
       label201:
        push r:this, '5955'
        getMember
        push 0
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label202
        push r:this, '=kIA', 3
        setMember
        push r:this, '6u*J7', NULL
        setMember
        push r:this, '2VhU6', 70
        setMember
        push 150, '*r'
        getVariable
        push '*r63F'
        getMember
        push r:this, ')('
        getMember
        push r:this, '(('
        getMember
        push 4, '*r'
        getVariable
        push '+-(0'
        getMember
        push '}B)Y_'
        callMethod
        pop
        push '4-61', 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push 0, 1, 0, 0, 0, 255, 0, -1, 0, 0, 255, 0, 0, -1, 0, 255, 0, 0, 0, -1, 20
        initArray
        setRegister r:9
        pop
        push r:this, 'invert', 3
        setMember
        push 0, 'flash'
        getVariable
        push 'filters'
        getMember
        push 'ColorMatrixFilter'
        newMethod
        setRegister r:10
        pop
        push r:10, 'matrix', r:9
        setMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '(KA'
        getMember
        push 'filters', r:10, 1
        initArray
        setMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push ';+'
        getMember
        push 'filters', r:10, 1
        initArray
        setMember
        branch label203
       label202:
        push r:this, '=kIA', 4
        setMember
        push 280, '*r'
        getVariable
        push '-)KN['
        getMember
        push r:this, ')('
        getMember
        push r:this, '(('
        getMember
        push 4, '*r'
        getVariable
        push '+-(0'
        getMember
        push '}B)Y_'
        callMethod
        pop
        push r:this, '2VhU6', 100
        setMember
       label203:
      end // of function 

      setMember
      push r:0, '4hj(B', 29
      setMember
      push r:0, '[-vN8', 31
      setMember
      push r:0, '40=9K', 56
      setMember
      push r:0, ']iaT', 7
      setMember
      push r:0, '2QF=}', 60
      setMember
      push '(WBt)'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ']}Ou;(', 1
      setMember
      push r:0, '3I0pG', 2
      setMember
      push r:0, '{;7F4', 3
      setMember
      push r:0, '8U(wu', 4
      setMember
      push r:0, '}[cpB', 5
      setMember
      push r:0, '9xv]A', 6
      setMember
      push r:0, '{yQ=Q', 7
      setMember
      push r:0, '+,W', 8
      setMember
      push r:0, '2y+dV', 9
      setMember
      push r:0, '(tBee', 10
      setMember
      push r:0, '3)i[=', 11
      setMember
      push r:0, ' J3IC', 12
      setMember
      push r:0, '[6jRc', 13
      setMember
      push r:0, ')8Fyj', 14
      setMember
      push '(6IbI('
      function2 (r:3='9lj4D') (r:1='this', r:2='super')
        push r:'9lj4D', 1, r:super, UNDEF
        callMethod
        pop
        push '(6IbI('
        getVariable
        push '6y392'
        getMember
        push NULL
        equals
        not
        branchIfTrue label204
        push '(6IbI('
        getVariable
        push '6y392', 0, 'Array'
        new
        setMember
       label204:
        push r:this, ')gv94', 0, 'Array'
        new
        setMember
        push 6
        setRegister r:4
        pop
        push 4
        setRegister r:5
        pop
        push 0
        setRegister r:6
        pop
        branch label206
       label205:
        push r:6
        increment
        setRegister r:6
        pop
       label206:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label207
        push r:6, r:5
        divide
        push 6.28
        multiply
        setRegister r:7
        pop
        push r:7, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:8
        pop
        push r:7, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:9
        pop
        push '((', r:8, r:4
        multiply
        int
        push ')(', r:9, r:4
        multiply
        int
        push 2
        initObject
        push 1, r:this, ')gv94'
        getMember
        push 'push'
        callMethod
        pop
        branch label205
       label207:
        push r:this, '+{eA+', 0.3
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '] ktA'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this')
       label208:
        push '(6IbI('
        getVariable
        push '6y392'
        getMember
        push 'length'
        getMember
        push 100
        greaterThan
        not
        branchIfTrue label209
        push 0, 0, '(6IbI('
        getVariable
        push '6y392'
        getMember
        push 'shift'
        callMethod
        push 'removeMovieClip'
        callMethod
        pop
        branch label208
       label209:
        push r:this, ')9 9', 1
        setMember
        push 0
        setRegister r:2
        pop
        push 0, r:this, '[{Ws7('
        callMethod
        pop
       label210:
        push r:this, ')9 9'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label229
        push r:this, '0P'
        getMember
        push 0
        lessThan
        dup
        branchIfTrue label211
        pop
        push r:this, '0P'
        getMember
        push 1
        greaterThan
       label211:
        dup
        branchIfTrue label212
        pop
        push r:this, '1P'
        getMember
        push 0
        lessThan
       label212:
        dup
        branchIfTrue label213
        pop
        push r:this, '1P'
        getMember
        push 1
        greaterThan
       label213:
        not
        branchIfTrue label214
        push 'decal error!', 1, ']{i'
        getVariable
        push 'print'
        callMethod
        pop
        push 'ox: ', r:this, '0P'
        getMember
        add
        push 1, ']{i'
        getVariable
        push 'print'
        callMethod
        pop
        push 'oy: ', r:this, '1P'
        getMember
        add
        push 1, ']{i'
        getVariable
        push 'print'
        callMethod
        pop
        push UNDEF
        return
       label214:
        push NULL
        setRegister r:3
        pop
        push NULL
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        push 0
        setRegister r:6
        pop
        push r:this, ';KO'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label215
        push 1, r:this, '0P'
        getMember
        subtract
        push r:this, ';KO'
        getMember
        divide
        setRegister r:3
        pop
        push 1
        setRegister r:5
        pop
        branch label217
       label215:
        push r:this, ';KO'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label216
        push r:this, '0P'
        getMember
        push r:this, ';KO'
        getMember
        divide
        setRegister r:3
        pop
        push -1
        setRegister r:5
        pop
        branch label217
       label216:
        push 1
        setRegister r:3
        pop
       label217:
        push r:this, '=KO'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label218
        push 1, r:this, '1P'
        getMember
        subtract
        push r:this, '=KO'
        getMember
        divide
        setRegister r:4
        pop
        push 1
        setRegister r:6
        pop
        branch label220
       label218:
        push r:this, '=KO'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label219
        push r:this, '1P'
        getMember
        push r:this, '=KO'
        getMember
        divide
        setRegister r:4
        pop
        push -1
        setRegister r:6
        pop
        branch label220
       label219:
        push 1
        setRegister r:4
        pop
       label220:
        push NULL
        setRegister r:7
        pop
        push r:3, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        setRegister r:8
        pop
        push r:4, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        setRegister r:9
        pop
        push TRUE
        setRegister r:10
        pop
        push r:8, r:9
        lessThan
        not
        branchIfTrue label221
        push r:8
        setRegister r:7
        pop
        push 0
        setRegister r:6
        pop
        branch label222
       label221:
        push r:9
        setRegister r:7
        pop
        push 0
        setRegister r:5
        pop
       label222:
        push r:7, r:this, ')9 9'
        getMember
        lessThan
        not
        not
        branchIfTrue label223
        push r:this, ')9 9'
        getMember
        setRegister r:7
        pop
        push FALSE
        setRegister r:10
        pop
       label223:
        push r:this, '0P', 1, r:this, '0P'
        getMember
        push r:this, ';KO'
        getMember
        push r:7
        multiply
        add
        push 0, 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
        push r:this, '1P', 1, r:this, '1P'
        getMember
        push r:this, '=KO'
        getMember
        push r:7
        multiply
        add
        push 0, 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
        push r:this, ')9 9', r:this, ')9 9'
        getMember
        push r:7
        subtract
        setMember
        push r:10
        not
        branchIfTrue label228
        push r:5, 0
        equals
        dup
        not
        branchIfTrue label224
        pop
        push r:6, 0
        equals
       label224:
        not
        branchIfTrue label225
        push 'Oh mon dieu, c\'est affreux!', 1, ']{i'
        getVariable
        push 'trace'
        callMethod
        pop
       label225:
        push r:this, '6R'
        getMember
        push r:6
        add
        push r:this, '5R'
        getMember
        push r:5
        add
        push 2, r:this, '=)0hg'
        callMethod
        setRegister r:11
        pop
        push r:11, NULL
        equals
        setRegister r:12
        pop
        push r:12
        not
        not
        branchIfTrue label227
        push r:this, ';KO'
        getMember
        push r:this, '=KO'
        getMember
        push 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        setRegister r:13
        pop
        push '(6IbI('
        getVariable
        push '{Cs'
        getMember
        push '((', r:5, ')(', r:6, 2
        initObject
        push r:11, ')('
        getMember
        push r:11, '(('
        getMember
        push 4, r:this, '}Q)0u'
        callMethod
        setRegister r:14
        pop
        push 3.14, r:14, r:13
        subtract
        push 2, '*r'
        getVariable
        push '0Yj1'
        callMethod
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        setRegister r:15
        pop
        push r:15, 1.57
        greaterThan
        not
        branchIfTrue label226
        push TRUE
        setRegister r:12
        pop
        branch label227
       label226:
        push r:14, r:13, 2, r:this, '6,Ld)('
        callMethod
        pop
        push 1, r:15, 1.57
        divide
        push 0.8
        multiply
        push 0.5
        add
        subtract
        push 0, 2, 'Math'
        getVariable
        push 'max'
        callMethod
        setRegister r:16
        pop
        push r:16, r:this, '+{eA+'
        getMember
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:17
        pop
        push r:this, '[X'
        getMember
        push '[b', r:this, '[X'
        getMember
        push '[b'
        getMember
        push r:17
        multiply
        setMember
        push r:this, '[X'
        getMember
        push ']b', r:this, '[X'
        getMember
        push ']b'
        getMember
        push r:17
        multiply
        setMember
        push 0, r:this, '[{Ws7('
        callMethod
        pop
       label227:
        push r:12
        not
        branchIfTrue label228
        push r:this, '5R', r:this, '5R'
        getMember
        push r:5
        add
        setMember
        push r:this, '6R', r:this, '6R'
        getMember
        push r:6
        add
        setMember
        push r:this, '0P', 1, r:this, '0P'
        getMember
        push r:5
        subtract
        push 0, 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
        push r:this, '1P', 1, r:this, '1P'
        getMember
        push r:6
        subtract
        push 0, 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
       label228:
        branch label210
       label229:
        push r:this, '[X'
        getMember
        push '1o8jJ'
        getMember
        push r:this
        equals
        not
        branchIfTrue label230
        push r:this, '[X'
        getMember
        push '((', r:this, '5R'
        getMember
        push r:this, '0P'
        getMember
        add
        setMember
        push r:this, '[X'
        getMember
        push ')(', r:this, '6R'
        getMember
        push r:this, '1P'
        getMember
        add
        setMember
       label230:
      end // of function 

      setMember
      push r:1, '6,Ld)('
      function2 (r:2='(', r:3='7') (r:1='this')
        push r:'7', r:'(', 2, r:this, '*YT,T'
        callMethod
        pop
        push r:this, '[X'
        getMember
        push '[b'
        getMember
        push r:this, '[X'
        getMember
        push '[b'
        getMember
        multiply
        push r:this, '[X'
        getMember
        push ']b'
        getMember
        push r:this, '[X'
        getMember
        push ']b'
        getMember
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        setRegister r:4
        pop
        push r:'7', r:'(', 2, r:this, ' Sk9H('
        callMethod
        setRegister r:'('
        pop
        push r:'(', 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:5
        pop
        push r:'(', 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:6
        pop
        push r:this, '[X'
        getMember
        push '[b', r:5, r:4
        multiply
        setMember
        push r:this, '[X'
        getMember
        push ']b', r:6, r:4
        multiply
        setMember
        push 0, r:this, '[{Ws7('
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '[{Ws7('
      function2 () (r:1='this')
        push r:this, ';KO', r:this, '[X'
        getMember
        push '[b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        setMember
        push r:this, '=KO', r:this, '[X'
        getMember
        push ']b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        setMember
      end // of function 

      setMember
      push r:1, '}Q)0u'
      function2 (r:2='4,', r:3='5,', r:4='}},)', r:5=']oH') (r:1='this')
        push r:'}},)', ')('
        getMember
        push r:'}},)', '(('
        getMember
        push 2
        initArray
        push 1
        initArray
        setRegister r:6
        pop
        push 0
        setRegister r:7
        pop
        branch label232
       label231:
        push r:7
        increment
        setRegister r:7
        pop
       label232:
        push r:7, 2
        lessThan
        not
        branchIfTrue label239
        push r:'4,'
        setRegister r:8
        pop
        push r:'5,'
        setRegister r:9
        pop
        push '((', r:'}},)', '(('
        getMember
        push ')(', r:'}},)', ')('
        getMember
        push 2
        initObject
        setRegister r:10
        pop
        push r:7, 2
        multiply
        push 1
        subtract
        setRegister r:11
        pop
        push 0
        setRegister r:12
        pop
        branch label234
       label233:
        push r:12
        increment
        setRegister r:12
        pop
       label234:
        push r:12, r:']oH'
        lessThan
        not
        branchIfTrue label238
        push r:11, r:10, 2, r:this, '(VKB'
        callMethod
        setRegister r:13
        pop
        push r:8, r:13, '(('
        getMember
        add
        setRegister r:14
        pop
        push r:9, r:13, ')('
        getMember
        add
        setRegister r:15
        pop
        push r:15, r:14, 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '77ldJ('
        callMethod
        not
        not
        branchIfTrue label235
        push r:13
        setRegister r:10
        pop
        branch label237
       label235:
        push r:15, r:10, ')('
        getMember
        add
        push r:14, r:10, '(('
        getMember
        add
        push 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '77ldJ('
        callMethod
        not
        branchIfTrue label236
        push r:14, r:10, '(('
        getMember
        add
        setRegister r:8
        pop
        push r:15, r:10, ')('
        getMember
        add
        setRegister r:9
        pop
        push 0, r:11
        subtract
        push r:10, 2, r:this, '(VKB'
        callMethod
        setRegister r:10
        pop
        branch label237
       label236:
        push r:14
        setRegister r:8
        pop
        push r:15
        setRegister r:9
        pop
       label237:
        push r:10, ')('
        getMember
        push r:10, '(('
        getMember
        push 2
        initArray
        push 1, r:6, 'push'
        callMethod
        pop
        branch label233
       label238:
        branch label231
       label239:
        push 0
        setRegister r:16
        pop
        push 0
        setRegister r:17
        pop
        push 0
        setRegister r:18
        pop
        branch label241
       label240:
        push r:18
        increment
        setRegister r:18
        pop
       label241:
        push r:18, r:6, 'length'
        getMember
        lessThan
        not
        branchIfTrue label242
        push r:6, r:18
        getMember
        setRegister r:19
        pop
        push r:16, r:19, 0
        getMember
        add
        setRegister r:16
        pop
        push r:17, r:19, 1
        getMember
        add
        setRegister r:17
        pop
        branch label240
       label242:
        push r:16, r:17, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        return
      end // of function 

      setMember
      push r:1, ' Sk9H('
      function2 (r:2='(', r:3='7') (r:1='this')
        push 3.14, r:'7', r:'('
        subtract
        push 2, '*r'
        getVariable
        push '0Yj1'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:5
        pop
        push r:4, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:6
        pop
        push 0, r:5
        subtract
        push r:6, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        setRegister r:7
        pop
        push 3.14, r:'7', r:7
        subtract
        push 2, '*r'
        getVariable
        push '0Yj1'
        callMethod
        return
      end // of function 

      setMember
      push r:1, '(VKB'
      function2 (r:2='+', r:3='6g,A') (r:1='this')
        push '((', 0, r:'+', ')('
        getMember
        subtract
        push r:'6g,A'
        multiply
        push ')(', r:'+', '(('
        getMember
        push r:'6g,A'
        multiply
        push 2
        initObject
        return
      end // of function 

      setMember
      push r:1, '=)0hg'
      function2 (r:2='((', r:3=')(') (r:1='this')
        push 0
        setRegister r:4
        pop
        branch label244
       label243:
        push r:4
        increment
        setRegister r:4
        pop
       label244:
        push r:4, r:this, ')gv94'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label246
        push r:this, ')gv94'
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push '((', r:'((', r:5, '(('
        getMember
        add
        push ')(', r:')(', r:5, ')('
        getMember
        add
        push 2
        initObject
        setRegister r:6
        pop
        push r:6, ')('
        getMember
        push r:6, '(('
        getMember
        push 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '77ldJ('
        callMethod
        not
        not
        branchIfTrue label245
        push r:6
        return
       label245:
        branch label243
       label246:
        push NULL
        return
      end // of function 

      setMember
      push r:1, ']1dV='
      function2 (r:2='(') (r:1='this')
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push '0co;I', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:3
        pop
        push r:3, '_x', r:this, '5R'
        getMember
        push r:this, '0P'
        getMember
        add
        setMember
        push r:3, '_y', r:this, '6R'
        getMember
        push r:this, '1P'
        getMember
        add
        setMember
        push r:3, '_rotation', r:'(', 0.0174
        divide
        setMember
        push r:3, 1, '(6IbI('
        getVariable
        push '6y392'
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '6LkQ1'
      function2 (r:2='((', r:3=')(') (r:1='this')
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push ';VcJC', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:4
        pop
        push r:4, '_x', r:'(('
        setMember
        push r:4, '_y', r:')('
        setMember
        push r:4, 1, '(6IbI('
        getVariable
        push '6y392'
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '{Cs', 6
      setMember
      push '44{N'
      function2 (r:2='}J') (r:1='this')
        push 16777215, 1, ']{i'
        getVariable
        push '(H5 S'
        callMethod
        pop
        push 0, '*r'
        getVariable
        push '}-B2'
        callMethod
        pop
        push '*r'
        getVariable
        push '+-(0', r:this
        setMember
        push r:this, '(W3', r:'}J', 1, '+7U K'
        new
        setMember
        push r:this, ';+', 1, ';+', 2, r:this, '(W3'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '(KA', 2, 1, r:this, '(W3'
        getMember
        push '18wU*'
        callMethod
        setMember
        push r:this, '32', r:this, '(KA'
        getMember
        push 1, '+7U K'
        new
        setMember
        push r:this, '7Qe;6', 0, 'Array'
        new
        setMember
        push r:this, '[NuT)', 0, 'Array'
        new
        setMember
        push r:this, '7IrKA', 0, 'Array'
        new
        setMember
        push r:this, '{9yhS', 0, 'Array'
        new
        setMember
        push r:this, '9I', '*r'
        getVariable
        push '*sd+;('
        getMember
        push 30
        subtract
        setMember
        push r:this, ' yFNA(', 100
        setMember
        push 0, 1, r:this, '5Hy6b'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '-zx=g'
      function2 () (r:1='this')
        push r:this, '62=', '44{N'
        getVariable
        push ';C*X2'
        getMember
        push '9v)7H', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '62='
        getMember
        push '_y', '*r'
        getVariable
        push '*sd+;('
        getMember
        push '44{N'
        getVariable
        push '[gqwG'
        getMember
        subtract
        setMember
        push r:this, '1T=', 0, TRUE, '*r'
        getVariable
        push '*sd+;('
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 4, 'flash'
        getVariable
        push 'display'
        getMember
        push 'BitmapData'
        newMethod
        setMember
        push 0, r:this, '1T='
        getMember
        push 2, '44{N'
        getVariable
        push ';C*X2'
        getMember
        push 1, r:this, '32'
        getMember
        push '18wU*'
        callMethod
        push 'attachBitmap'
        callMethod
        pop
        push '44{N'
        getVariable
        push '3{Htb'
        getMember
        push '+MX*B', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:2
        pop
        push r:2, '_y', '*r'
        getVariable
        push '*sd+;('
        getMember
        push '*r'
        getVariable
        push '*OA'
        getMember
        subtract
        setMember
        push 0, r:2, 'removeMovieClip'
        callMethod
        pop
        push r:this, '[-99', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:3
        pop
        branch label248
       label247:
        push r:3
        increment
        setRegister r:3
        pop
       label248:
        push r:3, 2
        lessThan
        not
        branchIfTrue label253
        push 3, 1, r:this, '(W3'
        getMember
        push '18wU*'
        callMethod
        setRegister r:4
        pop
        push r:4, '*', 1.3
        setMember
        push 0, TRUE, '*r'
        getVariable
        push '*sd+;('
        getMember
        push r:4, '*'
        getMember
        multiply
        int
        push 70, 4, 'flash'
        getVariable
        push 'display'
        getMember
        push 'BitmapData'
        newMethod
        setRegister r:5
        pop
        push 0, r:5, 2, r:4, 'attachBitmap'
        callMethod
        pop
        push r:4, 1, r:this, '[-99'
        getMember
        push 'push'
        callMethod
        pop
        push r:4, '_x', r:3, '*r'
        getVariable
        push '=OA'
        getMember
        multiply
        setMember
        push r:4, '_xscale', 0, r:3, 2
        multiply
        push 1
        subtract
        subtract
        push 100
        multiply
        setMember
        push 0
        setRegister r:6
        pop
        branch label250
       label249:
        push r:6, 100
        add
        setRegister r:6
        pop
       label250:
        push r:6, r:5, 'height'
        getMember
        lessThan
        not
        branchIfTrue label252
        push 3, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label251
        push '44{N'
        getVariable
        push '3{Htb'
        getMember
        push '1) k(', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:7
        pop
        push r:7, '_y', r:6
        setMember
        push r:7, '_totalframes'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        add
        toString
        push 1, r:7, 'gotoAndStop'
        callMethod
        pop
        push 50, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 50
        multiply
        add
        setRegister r:8
        pop
        push r:7, '_xscale', r:8
        setMember
        push r:7, '_yscale', r:8
        setMember
        push r:7, r:5, 2, '*r'
        getVariable
        push 'draw'
        callMethod
        pop
        push 0, r:7, 'removeMovieClip'
        callMethod
        pop
       label251:
        branch label249
       label252:
        branch label247
       label253:
        push '*', 1, '5P55', '[;bTC', 2
        initObject
        push '*', 0.5, '5P55', ',98PO', 2
        initObject
        push 2
        initArray
        setRegister r:9
        pop
        push 0
        setRegister r:10
        pop
        branch label255
       label254:
        push r:10
        increment
        setRegister r:10
        pop
       label255:
        push r:10, 2
        lessThan
        not
        branchIfTrue label262
        push 0
        setRegister r:11
        pop
        branch label257
       label256:
        push r:11
        increment
        setRegister r:11
        pop
       label257:
        push r:11, 2
        lessThan
        not
        branchIfTrue label261
        push 1, 1, r:this, '(W3'
        getMember
        push '18wU*'
        callMethod
        setRegister r:12
        pop
        push r:12, '*', r:9, r:10
        getMember
        push '*'
        getMember
        setMember
        push '*r'
        getVariable
        push '*sd+;('
        getMember
        push r:12, '*'
        getMember
        multiply
        int
        push '*r'
        getVariable
        push '*OA'
        getMember
        add
        setRegister r:13
        pop
        push 0, TRUE, r:13, 50, 4, 'flash'
        getVariable
        push 'display'
        getMember
        push 'BitmapData'
        newMethod
        setRegister r:14
        pop
        push 0, r:14, 2, r:12, 'attachBitmap'
        callMethod
        pop
        push r:12, 1, r:this, '[-99'
        getMember
        push 'push'
        callMethod
        pop
        push r:12, '_x', r:11, '*r'
        getVariable
        push '=OA'
        getMember
        multiply
        setMember
        push r:12, '_xscale', 0, r:11, 2
        multiply
        push 1
        subtract
        subtract
        push 100
        multiply
        setMember
        push 0
        setRegister r:15
        pop
        branch label259
       label258:
        push r:15, 100, r:12, '*'
        getMember
        multiply
        add
        setRegister r:15
        pop
       label259:
        push r:15, r:13
        lessThan
        not
        branchIfTrue label260
        push '44{N'
        getVariable
        push '3{Htb'
        getMember
        push r:9, r:10
        getMember
        push '5P55'
        getMember
        push 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:16
        pop
        push r:16, '_xscale', 100, r:12, '*'
        getMember
        multiply
        setMember
        push r:16, '_yscale', 100, r:12, '*'
        getMember
        multiply
        setMember
        push r:16, '_y', r:15
        setMember
        push r:16, '_totalframes'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        add
        toString
        push 1, r:16, 'gotoAndStop'
        callMethod
        pop
        push r:16, r:14, 2, '*r'
        getVariable
        push 'draw'
        callMethod
        pop
        push 0, r:16, 'removeMovieClip'
        callMethod
        pop
        branch label258
       label260:
        branch label256
       label261:
        branch label254
       label262:
        push 1, 1, r:this, '5Hy6b'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '5Hy6b'
      function2 (r:2='[') (r:1='this')
        push r:this, '=kIA', r:'['
        setMember
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label263
        push r:0, 1
        strictEquals
        branchIfTrue label264
        push r:0, 9
        strictEquals
        branchIfTrue label265
        branch label267
       label263:
        push 0, r:this, '-zx=g'
        callMethod
        pop
        branch label267
       label264:
        push 0, r:this, '9t1r1'
        callMethod
        pop
        push r:this, '4,01', NULL, 1, '=3+P'
        new
        setMember
        push '*r'
        getVariable
        push '*sd+;('
        getMember
        push 20
        subtract
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 0.5
        multiply
        push 2, r:this, '4,01'
        getMember
        push '1o8jJ'
        getMember
        push '(j;o7'
        callMethod
        pop
        push r:this, '*cD)', NULL, 1, '3hAJ'
        new
        setMember
        push r:this, '*cD)'
        getMember
        push ')(', '*r'
        getVariable
        push '*sd+;('
        getMember
        push 320
        subtract
        setMember
        push r:this, '(KA'
        getMember
        push '_y', 0, '*r'
        getVariable
        push '*sd+;('
        getMember
        subtract
        push '*r'
        getVariable
        push '*OA'
        getMember
        add
        setMember
        push r:this, ',vZ9+', r:this, '4,01'
        getMember
        setMember
        branch label267
       label265:
        push r:this, '4,01'
        getMember
        push '=YEsK('
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label266
        push 0, r:this, '4,01'
        getMember
        push ',J81z'
        callMethod
        pop
       label266:
        push r:this, '2VhU6', 8, 1
        initArray
        setMember
        branch label267
       label267:
      end // of function 

      setMember
      push r:1, '0D 6'
      function2 () (r:1='this')
        push r:this, '4,01'
        getMember
        push '=YEsK('
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label268
        push '{-kxL'
        getVariable
        push '-V;B', 0.2
        setMember
       label268:
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        push 1
        initArray
        setMember
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label269
        push r:0, 1
        strictEquals
        branchIfTrue label270
        push r:0, 9
        strictEquals
        branchIfTrue label275
        push r:0, 10
        strictEquals
        branchIfTrue label277
        branch label278
       label269:
        branch label278
       label270:
        push '*r'
        getVariable
        push '*sd+;('
        getMember
        push '44{N'
        getVariable
        push '[gqwG'
        getMember
        subtract
        setRegister r:2
        pop
        push r:this, '9I'
        getMember
        push r:2
        lessThan
        not
        branchIfTrue label274
        push 0
        setRegister r:3
        pop
        branch label272
       label271:
        push r:3, 3
        add
        setRegister r:3
        pop
       label272:
        push r:3, '*r'
        getVariable
        push '=OA'
        getMember
        lessThan
        not
        branchIfTrue label274
        push r:2, r:3, 2, r:this, '77ldJ('
        callMethod
        not
        not
        branchIfTrue label273
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push ',vZ9+', ')(', r:2, 1
        initObject
        setMember
        push 9, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '5Hy6b'
        callMethod
        pop
       label273:
        branch label271
       label274:
        branch label278
       label275:
        push 0, r:this, '5VTlb'
        callMethod
        pop
        push r:this, '2VhU6'
        getMember
        push 0
        getMember
        push 0
        lessThan
        not
        branchIfTrue label276
        push r:this, '-_X}5'
        getMember
        push 1, ';ndCG'
        getVariable
        push '7T4cF('
        callMethod
        pop
        push 10, 1, r:this, '5Hy6b'
        callMethod
        pop
       label276:
        branch label278
       label277:
        push 0, r:this, '5VTlb'
        callMethod
        pop
        branch label278
       label278:
        push 0, r:this, '+aDob'
        callMethod
        pop
        push 0, r:this, '*ro(=('
        callMethod
        pop
        push 0, r:this, '*S-6V'
        callMethod
        pop
        push 0, r:this, '7Qe;6'
        getMember
        push '],lYS'
        callMethod
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        branch label280
       label279:
        push r:5
        increment
        setRegister r:5
        pop
       label280:
        push r:5, r:4, 'length'
        getMember
        lessThan
        not
        branchIfTrue label281
        push 0, r:4, r:5
        getMember
        push '87vE7('
        callMethod
        pop
        branch label279
       label281:
      end // of function 

      setMember
      push r:1, '5VTlb'
      function2 () (r:1='this')
        push 0, 'Array'
        new
        setRegister r:2
        pop
        push '*r'
        getVariable
        push '*sd+;('
        getMember
        push '44{N'
        getVariable
        push '[gqwG'
        getMember
        subtract
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        branch label283
       label282:
        push r:4, 3
        add
        setRegister r:4
        pop
       label283:
        push r:4, '*r'
        getVariable
        push '=OA'
        getMember
        lessThan
        not
        branchIfTrue label285
        push r:3, r:4, 2, r:this, '77ldJ('
        callMethod
        not
        not
        branchIfTrue label284
        push r:4, 1, r:2, 'push'
        callMethod
        pop
       label284:
        branch label282
       label285:
        push 0
        setRegister r:5
        pop
        branch label287
       label286:
        push r:5
        increment
        setRegister r:5
        pop
       label287:
        push r:5, 3
        lessThan
        not
        branchIfTrue label288
        push '),HaF(', 1, r:this, '{==W3('
        callMethod
        setRegister r:6
        pop
        push r:6, '((', r:2, r:2, 'length'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        getMember
        setMember
        push r:6, ')(', r:3
        setMember
        push r:6, '(KpGn', 0, 0.1, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.5
        multiply
        add
        subtract
        setMember
        push r:6, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push 100, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 150
        multiply
        add
        push 1, r:6, '3BjX_'
        callMethod
        pop
        push r:6, ']b', -1
        setMember
        branch label286
       label288:
      end // of function 

      setMember
      push r:1, '}B)Y_'
      function2 (r:2='((', r:3=')(', r:4='(Erk5', r:5='scale') (r:1='this')
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '=kIA'
        getMember
        push 10
        equals
        not
        not
        branchIfTrue label289
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push '=ZXmL', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:6
        pop
        push r:6, '_x', r:'(('
        setMember
        push r:6, '_y', r:')('
        setMember
        push r:6, '_xscale', r:scale
        setMember
        push r:6, '_yscale', r:scale
        setMember
        push r:6, '(Erk5', r:'(Erk5', 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        setMember
        push 2, 0, r:6, 3, '*r'
        getVariable
        push '0BGm_'
        callMethod
        pop
        push r:'(Erk5', 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
       label289:
      end // of function 

      setMember
      push r:1, '*ro(=('
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label291
       label290:
        push r:2
        increment
        setRegister r:2
        pop
       label291:
        push r:2, r:this, '7IrKA'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label294
        push r:this, '7IrKA'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3, ' IWA+', r:3, ' IWA+'
        getMember
        push r:3, '*7'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:3, ' IWA+'
        getMember
        push r:3, '_totalframes'
        getMember
        greaterThan
        not
        branchIfTrue label292
        push 0, r:3, 'removeMovieClip'
        callMethod
        pop
        push 1, r:2, r:2
        decrement
        setRegister r:2
        pop
        push 2, r:this, '7IrKA'
        getMember
        push 'splice'
        callMethod
        pop
        branch label293
       label292:
        push r:3, ' IWA+'
        getMember
        int
        push 1
        add
        toString
        push 1, r:3, 'gotoAndStop'
        callMethod
        pop
       label293:
        branch label290
       label294:
      end // of function 

      setMember
      push r:1, '{==W3('
      function2 (r:2='5P55') (r:1='this')
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push r:'5P55', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:3
        pop
        push r:3
        return
      end // of function 

      setMember
      push r:1, '23c;]'
      function2 (r:2='((', r:3=')(') (r:1='this')
        push r:')('
        int
        push r:'(('
        int
        push 2, r:this, '1T='
        getMember
        push 'getPixel32'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '},J2'
        callMethod
        not
        not
        branchIfTrue label295
        push '(aVB+', 1, r:this, '{==W3('
        callMethod
        setRegister r:5
        pop
        push r:5, '((', r:'(('
        setMember
        push r:5, ')(', r:')('
        setMember
        push 50, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 80
        multiply
        add
        push 1, r:5, '3BjX_'
        callMethod
        pop
        push r:5, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:5, '849kV', 0
        setMember
        push r:5, '(KpGn', 0.1, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.1
        multiply
        add
        setMember
        push r:5, '+{eA+', 0.98
        setMember
        push -255, r:4, r:5, '-iB='
        getMember
        push 3, '*r'
        getVariable
        push '(H5 S'
        callMethod
        pop
        push r:5
        return
       label295:
        push NULL
        return
      end // of function 

      setMember
      push r:1, '*S-6V'
      function2 () (r:1='this')
        push r:this, ',N5JB'
        getMember
        push 0
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label297
        push r:this, ',N5JB'
        getMember
        push 0
        getMember
        setRegister r:2
        pop
        push r:2, 5
        lessThan
        not
        branchIfTrue label296
        push 0
        setRegister r:2
        pop
        push r:this, ',N5JB', NULL, 1
        initArray
        setMember
       label296:
        push 16777215, r:2, r:this, '32'
        getMember
        push ')2fr3'
        getMember
        push 3, '*r'
        getVariable
        push ';CYOh'
        callMethod
        pop
        push r:this, ',N5JB'
        getMember
        push 0
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label297
        push r:this, ',N5JB', r:this, ',N5JB'
        getMember
        push 0
        getMember
        push 110, r:this, ',N5JB'
        getMember
        push 0
        getMember
        subtract
        subtract
        push 1
        initArray
        setMember
       label297:
        push r:this, '=4H0'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label311
        push 0
        setRegister r:3
        pop
        push r:this, '4,01'
        getMember
        push '=YEsK('
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label298
        push r:this, '=4H0', 100, r:this, '=4H0'
        getMember
        push 105, r:this, '=4H0'
        getMember
        subtract
        push 0.2
        multiply
        add
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setMember
        branch label299
       label298:
        push r:this, '=4H0', 0, r:this, '=4H0'
        getMember
        push 120, r:this, '=4H0'
        getMember
        subtract
        push 0.5
        multiply
        subtract
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        setMember
       label299:
        push r:this, '=4H0'
        getMember
        push 100
        divide
        setRegister r:3
        pop
        push 0
        initArray
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        branch label301
       label300:
        push r:5
        increment
        setRegister r:5
        pop
       label301:
        push r:5, '*r'
        getVariable
        push '9ZpS['
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label302
        push r:4, r:5, '*r'
        getVariable
        push '3Xy1A'
        getMember
        push r:5
        getMember
        push r:3
        multiply
        push '*r'
        getVariable
        push '9ZpS['
        getMember
        push r:5
        getMember
        push 1, r:3
        subtract
        multiply
        add
        setMember
        branch label300
       label302:
        push r:this, '=4H0'
        getMember
        push 0
        equals
        not
        branchIfTrue label305
        push r:this, '=4H0', NULL
        setMember
       label303:
        push r:this, '{9yhS'
        getMember
        push 'length'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label304
        push 0, 0, r:this, '{9yhS'
        getMember
        push 'pop'
        callMethod
        push 'removeMovieClip'
        callMethod
        pop
        branch label303
       label304:
        push '980Sb'
        getVariable
        push ')2fr3'
        getMember
        push 'filters', 0
        initArray
        setMember
        branch label307
       label305:
        push 0, 'flash'
        getVariable
        push 'filters'
        getMember
        push 'ColorMatrixFilter'
        newMethod
        setRegister r:6
        pop
        push 0
        setRegister r:7
        pop
        push r:this, '4,01'
        getMember
        push '=YEsK('
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label306
        push 1, r:3
        subtract
        push 160
        multiply
        setRegister r:7
        pop
       label306:
        push r:6, 'matrix', 30, r:7
        add
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 15
        multiply
        add
        push 1, '*r'
        getVariable
        push '7V N)('
        callMethod
        setMember
        push '980Sb'
        getVariable
        push ')2fr3'
        getMember
        push 'filters', r:6, 1
        initArray
        setMember
       label307:
        push 10
        setRegister r:8
        pop
        push 0
        setRegister r:9
        pop
        branch label309
       label308:
        push r:9
        increment
        setRegister r:9
        pop
       label309:
        push r:9, r:this, '{9yhS'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label311
        push r:this, '{9yhS'
        getMember
        push r:9
        getMember
        setRegister r:10
        pop
        push r:10, '_y', r:10, '_y'
        getMember
        push 5, r:10, 'size'
        getMember
        multiply
        push 1, r:3
        subtract
        push 50
        multiply
        add
        subtract
        setMember
        push r:10, '_y'
        getMember
        push 0, r:8
        subtract
        lessThan
        not
        branchIfTrue label310
        push r:10, '_y', r:10, '_y'
        getMember
        push '*r'
        getVariable
        push '*OA'
        getMember
        push 2, r:8
        multiply
        add
        add
        setMember
       label310:
        branch label308
       label311:
      end // of function 

      setMember
      push r:1, '5hw(b'
      function2 () (r:1='this')
        push r:this, '=4H0'
        getMember
        push NULL
        equals
        not
        branchIfTrue label315
        push r:this, '=4H0', 0
        setMember
        push r:this, '1U;0', 0
        setMember
        push r:this, '(jEr5', 0
        setMember
        push 12, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label313
       label312:
        push r:3
        increment
        setRegister r:3
        pop
       label313:
        push r:3, r:2
        lessThan
        not
        branchIfTrue label315
        push 10, '),HaF(', 2, r:this, '(W3'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:4
        pop
        push r:4, '_x', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '*r'
        getVariable
        push '=OA'
        getMember
        multiply
        setMember
        push r:4, '_y', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '*r'
        getVariable
        push '*OA'
        getMember
        multiply
        setMember
        push r:4, 'size', 0.2, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.8
        multiply
        add
        setMember
        push r:4, '_xscale', 50, r:4, 'size'
        getMember
        push 100
        multiply
        add
        setMember
        push r:4, '_yscale', r:4, '_xscale'
        getMember
        setMember
        push r:3, 2
        modulo
        push 0
        equals
        not
        branchIfTrue label314
        push '2', 1, r:4, 'gotoAndPlay'
        callMethod
        pop
       label314:
        push r:4, 1, r:this, '{9yhS'
        getMember
        push 'push'
        callMethod
        pop
        branch label312
       label315:
      end // of function 

      setMember
      push r:1, '+aDob'
      function2 () (r:1='this')
        push 0, '*r'
        getVariable
        push '*OA'
        getMember
        push 0.5
        multiply
        push r:this, ',vZ9+'
        getMember
        push ')('
        getMember
        push '44{N'
        getVariable
        push ']I,YD('
        getMember
        add
        subtract
        push 0, '*r'
        getVariable
        push '*sd+;('
        getMember
        push '*r'
        getVariable
        push '*OA'
        getMember
        subtract
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        push r:this, '(KA'
        getMember
        push '_y'
        getMember
        subtract
        setRegister r:2
        pop
        push r:this, ' yFNA('
        getMember
        push r:2, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:3
        pop
        push r:this, '(KA'
        getMember
        push '_y', r:this, '(KA'
        getMember
        push '_y'
        getMember
        push r:3, r:2, 0.2
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        push 0, r:3
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
        push 0
        setRegister r:4
        pop
        branch label317
       label316:
        push r:4
        increment
        setRegister r:4
        pop
       label317:
        push r:4, r:this, '[-99'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label318
        push r:this, '[-99'
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push r:5, '_y', r:this, '(KA'
        getMember
        push '_y'
        getMember
        push r:5, '*'
        getMember
        multiply
        setMember
        branch label316
       label318:
      end // of function 

      setMember
      push r:1, '*af(*('
      function2 (r:2='((', r:3=')(') (r:1='this')
        push NULL, 1, '3ZAK'
        new
        setRegister r:4
        pop
        push r:4, '((', r:'(('
        setMember
        push r:4, ')(', r:')('
        setMember
        push r:4
        return
      end // of function 

      setMember
      push r:1, '77ldJ('
      function2 (r:2='((', r:3=')(') (r:1='this')
        push r:'((', 0
        lessThan
        dup
        branchIfTrue label319
        pop
        push r:'((', '*r'
        getVariable
        push '=OA'
        getMember
        lessThan
        not
       label319:
        dup
        branchIfTrue label320
        pop
        push r:')(', '*r'
        getVariable
        push '*sd+;('
        getMember
        lessThan
        not
       label320:
        not
        branchIfTrue label321
        push FALSE
        return
       label321:
        push '*r'
        getVariable
        push '2QF=}'
        getMember
        setRegister r:4
        pop
        push r:')('
        int
        push r:'(('
        int
        push 2, r:this, '1T='
        getMember
        push 'getPixel32'
        callMethod
        push 1, r:this, '},J2'
        callMethod
        return
      end // of function 

      setMember
      push r:1, '},J2'
      function2 (r:2='(v+') (r:1='this')
        push r:'(v+', 1, '*r'
        getVariable
        push '2ya 0('
        callMethod
        setRegister r:3
        pop
        push r:3, '('
        getMember
        push '44{N'
        getVariable
        push '72}8I('
        getMember
        greaterThan
        not
        return
      end // of function 

      setMember
      push r:1, '9t1r1'
      function2 () (r:1='this')
        push 'onKeyDown', ']668C(', r:this, 2, '3Wt'
        getVariable
        push '6{VYR'
        callMethod
        push 'onKeyUp', '=(D=5', r:this, 2, '3Wt'
        getVariable
        push '6{VYR'
        callMethod
        push 2
        initObject
        setRegister r:2
        pop
        push r:2, 1, 'Key'
        getVariable
        push 'addListener'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ']668C('
      function2 () (r:1='this')
        push 0, 'Key'
        getVariable
        push 'getCode'
        callMethod
        setRegister r:2
        pop
        push r:2, 96
        lessThan
        not
        dup
        not
        branchIfTrue label322
        pop
        push r:2, 107
        lessThan
       label322:
        not
        branchIfTrue label323
       label323:
        push r:2, 49
        lessThan
        not
        dup
        not
        branchIfTrue label324
        pop
        push r:2, 52
        lessThan
       label324:
        not
        branchIfTrue label325
       label325:
        push r:2, 52
        lessThan
        not
        dup
        not
        branchIfTrue label326
        pop
        push r:2, 55
        lessThan
       label326:
        not
        branchIfTrue label327
       label327:
        push r:2
        setRegister r:0
        push 'Key'
        getVariable
        push 'SPACE'
        getMember
        strictEquals
        branchIfTrue label328
        push r:0, 'Key'
        getVariable
        push 'ENTER'
        getMember
        strictEquals
        branchIfTrue label329
        branch label330
       label328:
        push 0, r:this, '4,01'
        getMember
        push ';8,PR'
        callMethod
        pop
        branch label330
       label329:
        branch label330
       label330:
      end // of function 

      setMember
      push r:1, '=(D=5'
      function2 () (r:1='this')
      end // of function 

      setMember
      push r:1, ']}ZkD('
      function2 () (r:1='this')
        push '((', '*r'
        getVariable
        push '2QF=}'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 2, '*r'
        getVariable
        push '2QF=}'
        getMember
        multiply
        subtract
        multiply
        add
        int
        push ')(', '*r'
        getVariable
        push '2QF=}'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '*r'
        getVariable
        push '*OA'
        getMember
        push 2, '*r'
        getVariable
        push '2QF=}'
        getMember
        multiply
        subtract
        multiply
        add
        int
        push 2
        initObject
        return
      end // of function 

      setMember
      push r:0, '[gqwG', 290
      setMember
      push r:0, '3{Htb', 0
      setMember
      push r:0, '4MvcB', 4
      setMember
      push r:0, ';C*X2', 5
      setMember
      push r:0, '7C-sb', 6
      setMember
      push r:0, '[j9fb', 7
      setMember
      push r:0, '{YJfb', 8
      setMember
      push r:0, '72}8I(', 30
      setMember
      push r:0, '=2AUB', FALSE
      setMember
      push r:0, ']I,YD(', -50
      setMember
      push '980Sb'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '}-B2'
      function2 (r:2='}J') (r:1='this')
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        not
        branchIfTrue label331
        push UNDEF
        return
       label331:
        push '980Sb'
        getVariable
        push ')2fr3', r:'}J'
        setMember
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        branchIfTrue label332
        push '980Sb'
        getVariable
        push 'mode', '980Sb'
        getVariable
        push ')2fr3'
        getMember
        push 1, '44{N'
        new
        setMember
       label332:
      end // of function 

      setMember
      push r:0, '0D 6'
      function2 () (r:1='this')
        push 0, '{-kxL'
        getVariable
        push '87vE7('
        callMethod
        pop
        push 0, '980Sb'
        getVariable
        push 'mode'
        getMember
        push '0D 6'
        callMethod
        pop
      end // of function 

      setMember
    end // of frame 0
  end // of defineMovieClip 116
  
  exportAssets
    116 as '90D*'
  end // of exportAssets
end
