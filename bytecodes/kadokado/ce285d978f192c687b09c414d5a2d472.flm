movie 'ce285d978f192c687b09c414d5a2d472.swf' compressed // flash 8, total frames: 1, frame rate: 40 fps, 700x480 px


  defineMovieClip 2 // total frames: 2
  end // of defineMovieClip 2

  defineMovieClip 3 // total frames: 7
  end // of defineMovieClip 3
  
  exportAssets
    3 as '8Fkv-('
  end // of exportAssets

  defineMovieClip 6 // total frames: 1
  end // of defineMovieClip 6

  defineMovieClip 8 // total frames: 1
  end // of defineMovieClip 8

  defineMovieClip 16 // total frames: 7
  end // of defineMovieClip 16
  
  exportAssets
    16 as '-DaCD'
  end // of exportAssets

  defineMovieClip 20 // total frames: 1
  end // of defineMovieClip 20
  
  exportAssets
    20 as '4tKKA('
  end // of exportAssets

  defineMovieClip 22 // total frames: 2
  end // of defineMovieClip 22
  
  exportAssets
    22 as '8T*RC'
  end // of exportAssets

  defineMovieClip 25 // total frames: 1
  end // of defineMovieClip 25

  defineMovieClip 26 // total frames: 1
  end // of defineMovieClip 26
  
  exportAssets
    26 as '-V3oG'
  end // of exportAssets

  defineMovieClip 28 // total frames: 1
  end // of defineMovieClip 28
  
  exportAssets
    28 as ']*u;C'
  end // of exportAssets

  defineMovieClip 31 // total frames: 1
  end // of defineMovieClip 31
  
  exportAssets
    31 as '0o*6'
  end // of exportAssets

  defineMovieClip 32 // total frames: 1

    frame 0
      constants 'flash', 'Object', '3[4k{', '{lN=R', '*r', '}-B2', ',ynX', 'length', '3n_49(', ';CYOh', '=', '0', ')', 'Color', 'ra', 'ga', 'ba', 'aa', 'rb', 'gb', 'bb', 'ab', 'setTransform', '2K', 'Math', 'max', 'min', ')GiA', '0Yj1', '=OA', '*OA', '-Wa[', '}lo41(', '*e[', '6UcJ[', ';ndCG', '-Q)9)', '0,cN[', '5=,xD', '[gGf{', ')[oy8(', '2+s]', '6,Ao=(', '}cl4B', ',i0 [', '-0]rl', '-iB=', '+KD', '+-(0', '7Qe;6', 'push', '((', ')(', '_x', '_y', 'prototype', '87vE7(', '9T54', 'removeMovieClip', 'remove', '4u=dZ', '}1A{_', 'sqrt', ')153L', 'atan2', '2sngh', '[j0D-', ',v0X', '+{eA+', '[b', ']b', '1Jr-,(', 'call', '(KpGn', '{-kxL', '-V;B', 'pow', ';zS4((', '*DzW', ',DBRf', '5DZk5', '3V[D(', '3BjX_', '_xscale', '_yscale', '4RW6x', '6b', '_rotation', '2VhU6', '849kV', '_alpha', '8I0t8(', '5b)bA(', '2u=W=', '+7U K', ')2fr3', '}Zms3', 'Array', ']1sj+', '-fC3a', '9oK', '7-,', ']bu40', '_name', 'swapDepths', '*=_p_', '3Wt', '7bSH*', '18wU*', '-4*l((', '(GbB}', '+2NA', 'getDepth', 'floor', '}oQA7', 'unshift', '08M8', 'clear', '9(K ;', ',}2X (', '4plQ5', 'getTimer', ';ILSy', '3R,QM', ';y}-6(', '-)Xd+', '[Ad;n', '6GI,F', 'fps', '(WBt)', ']}Ou;(', '3I0pG', '{;7F4', '8U(wu', '}[cpB', '9xv]A', '{yQ=Q', '+,W', '2y+dV', '(tBee', '3)i[=', ' J3IC', '[6jRc', ')8Fyj', '638J', ')EO', '*EO', '(v+i3', '4tKKA(', '(W3', '+Da3+', 'text', '(VKB', '8kN', '(', '2Z', '*fEFB', '}SYp5', ']*u;C', '32', ']CR-j', '}CL', '}C{Vp', '3dSYr', '34,QH(', 'cos', 'sin', '{FL', '}FL', ' 1qEn', ']78H', '[d9F', '*v9F', '2XNqK', '-Y9G', '6m9G', ']mAH', 'abs', '65aG1(', '44{N', '(KA', '-V3oG', '*svPM', 'color', '6x9p', '4y=T(', '5y=T(', '}}+ss', ';+', '0o*6', ')gv94', '17dU+', '1U;0', '{{,+x', '4pw(b', '4AH-', '-,=)', 'setMask', '5Hy6b', ';AH0', ')x9,4', '-DaCD', '{j)l', '0Ev2M', 'gotoAndStop', '9ptw', '=kIA', '-o=3,', ' eo6*', '(]SKI(', 'random', '_currentframe', '0D 6', '*zy{1(', '88rS(', '4B1W(', '3B(*', '-_X}5', '7T4cF(', '],lYS', 'splice', '-NJ', 'onPress', '==Uf7', '6{VYR', 'onRollOver', '{u+gg', 'onRollOut', '{-nK,(', 'onDragOut', 'useHandCursor', '7vdL6(', '8PJM1(', 'pop', 'RANDOM ID ERROR', ']{i', 'trace', '5R0', '{YJfb', '8Fkv-(', '0tJ', '8EN_z', '}FI;8', '7j3QZ', '[VjD-', '}5]*b', '980Sb', '(kJ+1(', '({B6'  
      push 'flash'
      getVariable
      not
      not
      branchIfTrue label1
      push 'flash', 0, 'Object'
      new
      setVariable
     label1:
      push 'flash'
      getVariable
      push '3[4k{'
      getMember
      not
      not
      branchIfTrue label2
      push 'flash'
      getVariable
      push '3[4k{', 0, 'Object'
      new
      setMember
     label2:
      push 'flash'
      getVariable
      push '3[4k{'
      getMember
      push '{lN=R'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setMember
      push '*r'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '}-B2'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label4
       label3:
        push r:2
        increment
        setRegister r:2
        pop
       label4:
        push r:2, '*r'
        getVariable
        push ',ynX'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label5
        push '*r'
        getVariable
        push '3n_49(', '*r'
        getVariable
        push '3n_49('
        getMember
        push '*r'
        getVariable
        push ',ynX'
        getMember
        push r:2
        getMember
        add
        setMember
        branch label3
       label5:
      end // of function 

      setMember
      push r:0, ';CYOh'
      function2 (r:2='}J', r:3='3GF', r:4='(v+') (r:1='this')
        push '=', r:'(v+', 16
        shiftRight
        push '0', r:'(v+', 8
        shiftRight
        push 255
        bitwiseAnd
        push ')', r:'(v+', 255
        bitwiseAnd
        push 3
        initObject
        setRegister r:5
        pop
        push r:'}J', 1, 'Color'
        new
        setRegister r:6
        pop
        push r:'3GF', 100
        divide
        setRegister r:7
        pop
        push 'ra', 100, r:'3GF'
        subtract
        int
        push 'ga', 100, r:'3GF'
        subtract
        int
        push 'ba', 100, r:'3GF'
        subtract
        int
        push 'aa', 100, 'rb', r:7, r:5, '='
        getMember
        multiply
        int
        push 'gb', r:7, r:5, '0'
        getMember
        multiply
        int
        push 'bb', r:7, r:5, ')'
        getMember
        multiply
        int
        push 'ab', 0, 8
        initObject
        setRegister r:8
        pop
        push r:8, 1, r:6, 'setTransform'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '2K'
      function2 (r:2='(', r:3=')', r:4='*') (r:1='this')
        push r:'*', r:')', r:'(', 2, 'Math'
        getVariable
        push 'max'
        callMethod
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        return
      end // of function 

      setMember
      push r:0, ')GiA'
      function2 (r:2='}', r:3='6lA') (r:1='this')
       label6:
        push r:'}', r:'6lA'
        lessThan
        not
        not
        branchIfTrue label7
        push r:'}', r:'6lA'
        subtract
        setRegister r:'}'
        pop
        branch label6
       label7:
        push r:'}', 0
        lessThan
        not
        branchIfTrue label8
        push r:'}', r:'6lA'
        add
        setRegister r:'}'
        pop
        branch label7
       label8:
        push r:'}'
        return
      end // of function 

      setMember
      push r:0, '0Yj1'
      function2 (r:2='}', r:3='6lA') (r:1='this')
       label9:
        push r:'}', r:'6lA'
        greaterThan
        not
        branchIfTrue label10
        push r:'}', r:'6lA', 2
        multiply
        subtract
        setRegister r:'}'
        pop
        branch label9
       label10:
        push r:'}', 0, r:'6lA'
        subtract
        lessThan
        not
        branchIfTrue label11
        push r:'}', r:'6lA', 2
        multiply
        add
        setRegister r:'}'
        pop
        branch label10
       label11:
        push r:'}'
        return
      end // of function 

      setMember
      push r:0, '=OA', 300
      setMember
      push r:0, '*OA', 300
      setMember
      push r:0, '-Wa[', 20
      setMember
      push r:0, '}lo41(', 15
      setMember
      push r:0, '*e[', 0, -1, 2
      initArray
      push -1, 0, 2
      initArray
      push 0, 1, 2
      initArray
      push 1, 0, 2
      initArray
      push 4
      initArray
      setMember
      push r:0, ',ynX', 10, 10, 10, 10, 10, 10, 10, 7
      initArray
      setMember
      push r:0, '6UcJ[', 2500, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '0,cN[', 750, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '5=,xD', 125, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '3n_49(', 0
      setMember
      push r:0, '[gGf{', 6
      setMember
      push r:0, ')[oy8(', 10
      setMember
      push r:0, '2+s]', 9, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '6,Ao=(', -1, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '}cl4B', 1000, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push ',i0 ['
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push '-0]rl'
      function2 (r:2='}J') (r:1='this')
        push r:this, '-iB=', r:'}J'
        setMember
        push r:this, '-iB='
        getMember
        push '+KD', r:this
        setMember
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '7Qe;6'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '((', 0
        setMember
        push r:this, ')(', 0
        setMember
        push r:this, '-iB='
        getMember
        push '_x', -1000
        setMember
        push r:this, '-iB='
        getMember
        push '_y', -1000
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this')
        push r:this, '-iB='
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '-iB='
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this')
        push 0, r:this, '-iB='
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '7Qe;6'
        getMember
        push 'remove'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '4u=dZ'
      function2 () (r:1='this')
        push r:this, '-iB='
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '-iB='
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '}1A{_'
      function2 (r:2='8') (r:1='this')
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:3
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:4
        pop
        push r:3, r:3
        multiply
        push r:4, r:4
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        return
      end // of function 

      setMember
      push r:1, ')153L'
      function2 (r:2='8') (r:1='this')
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:3
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:4
        pop
        push r:3, r:4, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        return
      end // of function 

      setMember
      push r:1, '2sngh'
      function2 (r:2='8', r:3='*', r:4='62=') (r:1='this')
        push r:'8', 1, r:this, ')153L'
        callMethod
        setRegister r:5
        pop
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:6
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:7
        pop
        push r:this, '((', r:this, '(('
        getMember
        push r:'62=', r:6, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push r:'62=', r:7, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
      end // of function 

      setMember
      push r:1, '[j0D-'
      function2 (r:2='6') (r:1='this')
        push r:this, '(('
        getMember
        push 0, r:'6'
        subtract
        lessThan
        dup
        branchIfTrue label12
        pop
        push r:this, '(('
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        push r:'6'
        add
        greaterThan
       label12:
        dup
        branchIfTrue label13
        pop
        push r:this, ')('
        getMember
        push 0, r:'6'
        subtract
        lessThan
       label13:
        dup
        branchIfTrue label14
        pop
        push r:this, ')('
        getMember
        push '*r'
        getVariable
        push '*OA'
        getMember
        push r:'6'
        add
        greaterThan
       label14:
        return
      end // of function 

      setMember
      push ',v0X'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '+{eA+', 0.95
        setMember
        push r:this, '[b', 0
        setMember
        push r:this, ']b', 0
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '-0]rl'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '1Jr-,('
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '(KpGn'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label15
        push r:this, ']b', r:this, ']b'
        getMember
        push r:this, '(KpGn'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label15:
        push r:this, '+{eA+'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label16
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push r:this, '+{eA+'
        getMember
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:3
        pop
        push r:this, '[b', r:this, '[b'
        getMember
        push r:3
        multiply
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:3
        multiply
        setMember
       label16:
        push r:this, '((', r:this, '(('
        getMember
        push r:this, '[b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push r:this, ']b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
      end // of function 

      setMember
      push r:1, ';zS4(('
      function2 (r:2='8', r:3='*', r:4='62=') (r:1='this')
        push r:'8', 1, r:this, ')153L'
        callMethod
        setRegister r:5
        pop
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:6
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:7
        pop
        push r:this, '[b', r:this, '[b'
        getMember
        push r:'62=', r:6, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:'62=', r:7, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
      end // of function 

      setMember
      push '1Jr-,(', '-0]rl'
      getVariable
      push 'prototype'
      getMember
      push '87vE7('
      getMember
      setVariable
      push '*DzW'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, ',DBRf', 10
        setMember
        push r:this, '5DZk5', 100
        setMember
        push r:this, '3V[D(', 1.2
        setMember
        push r:this, '-iB='
        getMember
        push '+KD', r:this
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '3BjX_'
      function2 (r:2='-X') (r:1='this')
        push r:this, '5DZk5', r:'-X'
        setMember
        push r:this, '-iB='
        getMember
        push '_xscale', r:'-X'
        setMember
        push r:this, '-iB='
        getMember
        push '_yscale', r:'-X'
        setMember
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '6b'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label17
        push r:this, '6b', r:this, '6b'
        getMember
        push r:this, '3V[D('
        getMember
        multiply
        setMember
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '-iB='
        getMember
        push '_rotation'
        getMember
        push r:this, '6b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label17:
        push r:this, '2VhU6'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label21
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '2VhU6'
        getMember
        push r:this, ',DBRf'
        getMember
        lessThan
        not
        branchIfTrue label21
        push r:this, '2VhU6'
        getMember
        push r:this, ',DBRf'
        getMember
        divide
        setRegister r:3
        pop
        push r:this, '849kV'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label18
        branch label19
       label18:
        push r:this, '-iB='
        getMember
        push '_xscale', r:this, '5DZk5'
        getMember
        push r:3
        multiply
        setMember
        push r:this, '-iB='
        getMember
        push '_yscale', r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        setMember
        branch label20
       label19:
        push r:this, '-iB='
        getMember
        push '_alpha', r:3, 100
        multiply
        setMember
        branch label20
       label20:
        push r:this, '2VhU6'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label21
        push 0, r:this, '9T54'
        callMethod
        pop
       label21:
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push r:this, '8I0t8('
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label22
        push r:this, '8I0t8('
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
       label22:
        push r:this, 1, '2u=W='
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push '2u=W=', '-0]rl'
      getVariable
      push 'prototype'
      getMember
      push '9T54'
      getMember
      setVariable
      push '4RW6x', ',v0X'
      getVariable
      push 'prototype'
      getMember
      push '87vE7('
      getMember
      setVariable
      push '+7U K'
      function2 (r:2='}J') (r:1='this')
        push r:this, ')2fr3', r:'}J'
        setMember
        push r:this, '}Zms3', 0, 'Array'
        new
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, ']1sj+'
      function2 () (r:1='this')
        push r:this, ')2fr3'
        getMember
        return
      end // of function 

      setMember
      push r:1, '-fC3a'
      function2 (r:2='59F') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'59F'
        getMember
        setRegister r:3
        pop
        push r:3, NULL
        equals
        not
        branchIfTrue label23
        push '9oK', 0, 'Array'
        new
        push '7-,', 0, 2
        initObject
        setRegister r:3
        pop
        push r:this, '}Zms3'
        getMember
        push r:'59F', r:3
        setMember
       label23:
        push r:3
        return
      end // of function 

      setMember
      push r:1, ']bu40'
      function2 (r:2='[-99') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'[-99'
        getMember
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:7
        pop
        push r:'[-99', 1000
        multiply
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label25
       label24:
        push r:6
        increment
        setRegister r:6
        pop
       label25:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label27
        push r:4, r:6
        getMember
        push '_name'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label26
        push r:8, r:7
        add
        push 1, r:4, r:6
        getMember
        push 'swapDepths'
        callMethod
        pop
        push r:4, r:7, r:4, r:6
        getMember
        setMember
        push r:7
        increment
        setRegister r:7
        pop
       label26:
        branch label24
       label27:
        push r:3, '7-,', r:7
        setMember
      end // of function 

      setMember
      push r:1, '*=_p_'
      function2 (r:2='*KB2', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label28
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'*KB2', 2, r:this, '*=_p_'
        callMethod
        return
       label28:
        push r:6, r:'[-99', 1000
        multiply
        add
        push r:'*KB2', r:this, ')2fr3'
        getMember
        push 3, '3Wt'
        getVariable
        push '7bSH*'
        callMethod
        setRegister r:7
        pop
        push r:5, r:6, r:7
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:7
        return
      end // of function 

      setMember
      push r:1, '18wU*'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push r:5, 1000
        equals
        not
        branchIfTrue label29
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', 1, r:this, '18wU*'
        callMethod
        return
       label29:
        push r:5, r:'[-99', 1000
        multiply
        add
        push r:this, ')2fr3'
        getMember
        push 2, '3Wt'
        getVariable
        push '-4*l(('
        callMethod
        setRegister r:6
        pop
        push r:4, r:5, r:6
        setMember
        push r:3, '7-,', r:3, '7-,'
        getMember
        increment
        setMember
        push r:6
        return
      end // of function 

      setMember
      push r:1, '(GbB}'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label30
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        return
       label30:
        push r:5, r:6, r:'}J'
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:6, r:'[-99', 1000
        multiply
        add
        return
      end // of function 

      setMember
      push r:1, '+2NA'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        push 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, r:'[-99'
        equals
        not
        branchIfTrue label31
        push UNDEF
        return
       label31:
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:5, '7-,'
        getMember
        setRegister r:7
        pop
        push 0
        setRegister r:8
        pop
        branch label33
       label32:
        push r:8
        increment
        setRegister r:8
        pop
       label33:
        push r:8, r:7
        lessThan
        not
        branchIfTrue label35
        push r:6, r:8
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label34
        push r:6, r:8, NULL
        setMember
        branch label35
       label34:
        branch label32
       label35:
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}oQA7'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label36
        push r:6, r:7, NULL
        setMember
        push r:'}J', 1, r:6, 'unshift'
        callMethod
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label36:
      end // of function 

      setMember
      push r:1, '08M8'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label38
        push r:6, r:7, NULL
        setMember
        push r:5, '7-,'
        getMember
        push 1000
        equals
        not
        branchIfTrue label37
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label37:
        push r:5, '7-,'
        getMember
        setRegister r:3
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:3, r:4, 1000
        multiply
        add
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
        push r:6, r:3, r:'}J'
        setMember
       label38:
      end // of function 

      setMember
      push r:1, 'clear'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:4
        pop
        branch label40
       label39:
        push r:4
        increment
        setRegister r:4
        pop
       label40:
        push r:4, r:3, '7-,'
        getMember
        lessThan
        not
        branchIfTrue label41
        push 0, r:5, r:4
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label39
       label41:
        push r:3, '7-,', 0
        setMember
      end // of function 

      setMember
      push r:1, '9(K ;'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push -99999999
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label43
       label42:
        push r:6
        increment
        setRegister r:6
        pop
       label43:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label51
        push r:4, r:6
        getMember
        setRegister r:9
        pop
        push r:9, '_y'
        getMember
        setRegister r:10
        pop
        push r:10, r:8
        lessThan
        not
        not
        branchIfTrue label44
        push r:10
        setRegister r:8
        pop
        branch label50
       label44:
        push r:6
        setRegister r:7
        pop
        branch label46
       label45:
        push r:7
        decrement
        setRegister r:7
        pop
       label46:
        push r:7, 0
        greaterThan
        not
        branchIfTrue label49
        push r:4, r:7, 1
        subtract
        getMember
        setRegister r:11
        pop
        push r:11, '_y'
        getMember
        push r:10
        greaterThan
        not
        branchIfTrue label47
        push r:4, r:7, r:11
        setMember
        push r:11, 1, r:9, 'swapDepths'
        callMethod
        pop
        branch label48
       label47:
        push r:4, r:7, r:9
        setMember
        branch label49
       label48:
        branch label45
       label49:
        push r:7, 0
        equals
        not
        branchIfTrue label50
        push r:4, 0, r:9
        setMember
       label50:
        branch label42
       label51:
      end // of function 

      setMember
      push r:1, ',}2X ('
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label53
       label52:
        push r:2
        increment
        setRegister r:2
        pop
       label53:
        push r:2, r:this, '}Zms3'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label54
        push r:2, 1, r:this, 'clear'
        callMethod
        pop
        branch label52
       label54:
      end // of function 

      setMember
      push '{-kxL'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '87vE7('
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '4plQ5', '{-kxL'
        getVariable
        push '4plQ5'
        getMember
        increment
        setMember
        push 0, '3Wt'
        getVariable
        push 'getTimer'
        callMethod
        setRegister r:2
        pop
        push '{-kxL'
        getVariable
        push ';ILSy', r:2, '{-kxL'
        getVariable
        push '3R,QM'
        getMember
        subtract
        push 1000.0
        divide
        setMember
        push '{-kxL'
        getVariable
        push '3R,QM', r:2
        setMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        push '{-kxL'
        getVariable
        push ';y}-6('
        getMember
        lessThan
        not
        branchIfTrue label55
        push '{-kxL'
        getVariable
        push '-)Xd+', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        push '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        multiply
        push 1, '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        subtract
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        multiply
        add
        setMember
        branch label56
       label55:
        push '{-kxL'
        getVariable
        push ';ILSy', 1, '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        divide
        setMember
       label56:
        push '{-kxL'
        getVariable
        push '-V;B', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        setMember
      end // of function 

      setMember
      push r:0, 'fps'
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        return
      end // of function 

      setMember
      push r:0, '6GI,F', 32
      setMember
      push r:0, ';y}-6(', 0.5
      setMember
      push r:0, '3R,QM', 0, '3Wt'
      getVariable
      push 'getTimer'
      callMethod
      setMember
      push r:0, '[Ad;n', 0.95
      setMember
      push r:0, '-)Xd+', 1
      setMember
      push r:0, '-V;B', 1
      setMember
      push r:0, ';ILSy', 1
      setMember
      push r:0, '4plQ5', 0
      setMember
      push '(WBt)'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ']}Ou;(', 1
      setMember
      push r:0, '3I0pG', 2
      setMember
      push r:0, '{;7F4', 3
      setMember
      push r:0, '8U(wu', 4
      setMember
      push r:0, '}[cpB', 5
      setMember
      push r:0, '9xv]A', 6
      setMember
      push r:0, '{yQ=Q', 7
      setMember
      push r:0, '+,W', 8
      setMember
      push r:0, '2y+dV', 9
      setMember
      push r:0, '(tBee', 10
      setMember
      push r:0, '3)i[=', 11
      setMember
      push r:0, ' J3IC', 12
      setMember
      push r:0, '[6jRc', 13
      setMember
      push r:0, ')8Fyj', 14
      setMember
      push '638J'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, ')EO', 0
        setMember
        push r:this, '*EO', 0
        setMember
        push r:this, '(v+i3', 4, '4tKKA(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '(W3'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '(v+i3'
        getMember
        push '+Da3+'
        getMember
        push 'text', '*r'
        getVariable
        push '+-(0'
        getMember
        push '(VKB'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        toString
        setMember
        push r:this, '(v+i3'
        getMember
        push '(', -2.8
        setMember
        push r:this, '(v+i3'
        getMember
        push '2Z', r:this, '(v+i3'
        getMember
        push '('
        getMember
        setMember
        push '638J'
        getVariable
        push '*fEFB'
        getMember
        not
        branchIfTrue label57
        push r:this, '}SYp5', 0, ']*u;C', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '(W3'
        getMember
        push '*=_p_'
        callMethod
        setMember
       label57:
        push r:this, '32', r:this, '-iB='
        getMember
        push 1, '+7U K'
        new
        setMember
        push r:this, ']CR-j', 0.5
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push 0.2, 0.1, r:this, '}CL'
        getMember
        push 3, r:this, ';zS4(('
        callMethod
        pop
        push 0, r:this, '}C{Vp'
        callMethod
        pop
        push 0, r:this, '3dSYr'
        callMethod
        pop
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
        push '638J'
        getVariable
        push '*fEFB'
        getMember
        not
        branchIfTrue label58
        push r:this, '}SYp5'
        getMember
        push '_x', r:this, '-iB='
        getMember
        push '_x'
        getMember
        setMember
        push r:this, '}SYp5'
        getMember
        push '_y', r:this, '-iB='
        getMember
        push '_y'
        getMember
        setMember
        push r:this, '}SYp5'
        getMember
        push '_xscale', r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        push '638J'
        getVariable
        push '34,QH('
        getMember
        push 2
        multiply
        add
        setMember
        push r:this, '}SYp5'
        getMember
        push '_yscale', r:this, '-iB='
        getMember
        push '_yscale'
        getMember
        push '638J'
        getVariable
        push '34,QH('
        getMember
        push 2
        multiply
        add
        setMember
       label58:
      end // of function 

      setMember
      push r:1, '3dSYr'
      function2 () (r:1='this')
        push r:this, '(('
        getMember
        push r:this, '(v+i3'
        getMember
        push '2Z'
        getMember
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        multiply
        push r:this, ']CR-j'
        getMember
        multiply
        add
        setRegister r:2
        pop
        push r:this, ')('
        getMember
        push r:this, '(v+i3'
        getMember
        push '2Z'
        getMember
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:this, '-iB='
        getMember
        push '_yscale'
        getMember
        multiply
        push r:this, ']CR-j'
        getMember
        multiply
        add
        setRegister r:3
        pop
        push 16
        setRegister r:4
        pop
        push 1, 0
        divide
        setRegister r:5
        pop
        push NULL
        setRegister r:6
        pop
        push 0
        setRegister r:7
        pop
        branch label60
       label59:
        push r:7
        increment
        setRegister r:7
        pop
       label60:
        push r:7, 2
        lessThan
        not
        branchIfTrue label68
        push r:7, 2
        multiply
        push 1
        subtract
        setRegister r:8
        pop
        push r:this, '(v+i3'
        getMember
        push '2Z'
        getMember
        setRegister r:9
        pop
        push r:2
        setRegister r:10
        pop
        push r:3
        setRegister r:11
        pop
        push 0
        setRegister r:12
        pop
       label61:
        push r:10, r:4
        lessThan
        dup
        branchIfTrue label62
        pop
        push r:10, '*r'
        getVariable
        push '=OA'
        getMember
        push r:4
        subtract
        greaterThan
       label62:
        dup
        branchIfTrue label63
        pop
        push r:11, r:4
        lessThan
       label63:
        dup
        branchIfTrue label64
        pop
        push r:11, '*r'
        getVariable
        push '*OA'
        getMember
        push r:4
        subtract
        greaterThan
       label64:
        not
        branchIfTrue label66
        push r:9, 0.0314, r:8
        multiply
        add
        setRegister r:9
        pop
        push r:this, '(('
        getMember
        push r:9, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        multiply
        push r:this, ']CR-j'
        getMember
        multiply
        add
        setRegister r:10
        pop
        push r:this, ')('
        getMember
        push r:9, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:this, '-iB='
        getMember
        push '_yscale'
        getMember
        multiply
        push r:this, ']CR-j'
        getMember
        multiply
        add
        setRegister r:11
        pop
        push r:12, r:12
        increment
        setRegister r:12
        pop
        push 200
        greaterThan
        not
        branchIfTrue label65
        branch label66
       label65:
        branch label61
       label66:
        push r:12, r:5
        lessThan
        not
        branchIfTrue label67
        push r:12
        setRegister r:5
        pop
        push r:9
        setRegister r:6
        pop
       label67:
        branch label59
       label68:
        push r:5, 200
        lessThan
        not
        branchIfTrue label69
        push r:this, '(v+i3'
        getMember
        push '2Z', r:6
        setMember
       label69:
        push 3.14, r:this, '(v+i3'
        getMember
        push '2Z'
        getMember
        push r:this, '(v+i3'
        getMember
        push '('
        getMember
        subtract
        push 2, '*r'
        getVariable
        push '0Yj1'
        callMethod
        setRegister r:13
        pop
        push r:this, '(v+i3'
        getMember
        push '(', r:this, '(v+i3'
        getMember
        push '('
        getMember
        push r:13, 0.2
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '(v+i3'
        getMember
        push '_x', r:this, '(('
        getMember
        push r:this, '(v+i3'
        getMember
        push '('
        getMember
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        multiply
        push r:this, ']CR-j'
        getMember
        multiply
        add
        setMember
        push r:this, '(v+i3'
        getMember
        push '_y', r:this, ')('
        getMember
        push r:this, '(v+i3'
        getMember
        push '('
        getMember
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:this, '-iB='
        getMember
        push '_yscale'
        getMember
        multiply
        push r:this, ']CR-j'
        getMember
        multiply
        add
        setMember
      end // of function 

      setMember
      push r:1, '}C{Vp'
      function2 () (r:1='this')
        push 3
        setRegister r:2
        pop
        push 0.12
        setRegister r:3
        pop
        push r:this, '{FL'
        getMember
        push r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        subtract
        setRegister r:4
        pop
        push r:this, ')EO', r:this, ')EO'
        getMember
        push r:2, r:4, r:3
        multiply
        push 0, r:2
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
        push r:this, '}FL'
        getMember
        push r:this, '-iB='
        getMember
        push '_yscale'
        getMember
        subtract
        setRegister r:5
        pop
        push r:this, '*EO', r:this, '*EO'
        getMember
        push r:2, r:5, r:3
        multiply
        push 0, r:2
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.85, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:6
        pop
        push r:this, ')EO', r:this, ')EO'
        getMember
        push r:6
        multiply
        setMember
        push r:this, '*EO', r:this, '*EO'
        getMember
        push r:6
        multiply
        setMember
        push r:this, '-iB='
        getMember
        push '_xscale', r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        push r:this, ')EO'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '-iB='
        getMember
        push '_yscale', r:this, '-iB='
        getMember
        push '_yscale'
        getMember
        push r:this, '*EO'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label70
        push r:this, '-iB='
        getMember
        push '_xscale', 0
        setMember
       label70:
        push r:this, '-iB='
        getMember
        push '_yscale'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label71
        push r:this, '-iB='
        getMember
        push '_yscale', 0
        setMember
       label71:
        push r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        push r:this, '-iB='
        getMember
        push '_yscale'
        getMember
        add
        push 2
        divide
        setRegister r:7
        pop
        push r:7, 50
        lessThan
        not
        branchIfTrue label72
        push r:this, '(v+i3'
        getMember
        push '_xscale', r:7, 2
        multiply
        setMember
        push r:this, '(v+i3'
        getMember
        push '_yscale', r:7, 2
        multiply
        setMember
       label72:
      end // of function 

      setMember
      push r:1, ' 1qEn'
      function2 () (r:1='this')
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push ']78H'
        getMember
        setRegister r:2
        pop
        push r:this, '{FL', r:2, '[d9F'
        getMember
        push r:2, '*v9F'
        getMember
        subtract
        push '638J'
        getVariable
        push '2XNqK'
        getMember
        add
        push '*r'
        getVariable
        push '-Wa['
        getMember
        multiply
        setMember
        push r:this, '}FL', r:2, '-Y9G'
        getMember
        push r:2, '6m9G'
        getMember
        subtract
        push '638J'
        getVariable
        push '2XNqK'
        getMember
        add
        push '*r'
        getVariable
        push '-Wa['
        getMember
        multiply
        setMember
        push r:this, '}CL', '((', r:2, '*v9F'
        getMember
        push r:2, '[d9F'
        getMember
        add
        push 0.5
        multiply
        push 0.5
        add
        push '*r'
        getVariable
        push '-Wa['
        getMember
        multiply
        push ')(', r:2, '6m9G'
        getMember
        push r:2, '-Y9G'
        getMember
        add
        push 0.5
        multiply
        push 0.5
        add
        push '*r'
        getVariable
        push '-Wa['
        getMember
        multiply
        push 2
        initObject
        setMember
        push r:this, '(('
        getMember
        setRegister r:3
        pop
        push r:this, ')('
        getMember
        setRegister r:4
        pop
        push r:this, '((', r:this, '}CL'
        getMember
        push '(('
        getMember
        setMember
        push r:this, ')(', r:this, '}CL'
        getMember
        push ')('
        getMember
        setMember
        push 5
        setRegister r:5
        pop
        push 0
        setRegister r:6
        pop
        branch label74
       label73:
        push r:6
        increment
        setRegister r:6
        pop
       label74:
        push r:6, '*r'
        getVariable
        push '+-(0'
        getMember
        push ']mAH'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label77
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push ']mAH'
        getMember
        push r:6
        getMember
        setRegister r:7
        pop
        push '((', r:7, '(('
        getMember
        push '*r'
        getVariable
        push '-Wa['
        getMember
        multiply
        push ')(', r:7, ')('
        getMember
        push '*r'
        getVariable
        push '-Wa['
        getMember
        multiply
        push 2
        initObject
        setRegister r:8
        pop
        push r:8, 1, r:this, '}1A{_'
        callMethod
        setRegister r:9
        pop
        push r:8, 1, r:this, ')153L'
        callMethod
        setRegister r:10
        pop
        push r:10, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:this, '{FL'
        getMember
        multiply
        push 0.5
        multiply
        setRegister r:11
        pop
        push r:10, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:this, '}FL'
        getMember
        multiply
        push 0.5
        multiply
        setRegister r:12
        pop
        push r:11, r:11
        multiply
        push r:12, r:12
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        setRegister r:13
        pop
       label75:
        push r:9, r:13, '638J'
        getVariable
        push '2XNqK'
        getMember
        push '*r'
        getVariable
        push '-Wa['
        getMember
        multiply
        subtract
        greaterThan
        not
        branchIfTrue label76
        push r:this, '{FL', r:this, '{FL'
        getMember
        push r:10, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:5
        multiply
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        add
        setMember
        push r:this, '}FL', r:this, '}FL'
        getMember
        push r:10, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:5
        multiply
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        add
        setMember
        push r:10, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:this, '{FL'
        getMember
        multiply
        push 0.5
        multiply
        setRegister r:11
        pop
        push r:10, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:this, '}FL'
        getMember
        multiply
        push 0.5
        multiply
        setRegister r:12
        pop
        push r:11, r:11
        multiply
        push r:12, r:12
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        setRegister r:13
        pop
        branch label75
       label76:
        branch label73
       label77:
        push r:this, '((', r:3
        setMember
        push r:this, ')(', r:4
        setMember
      end // of function 

      setMember
      push r:0, '2XNqK', 1.6
      setMember
      push r:0, '65aG1(', 10
      setMember
      push r:0, '34,QH(', 2
      setMember
      push r:0, '*fEFB', FALSE
      setMember
      push '44{N'
      function2 (r:2='}J') (r:1='this')
        push 0, '*r'
        getVariable
        push '}-B2'
        callMethod
        pop
        push '*r'
        getVariable
        push '+-(0', r:this
        setMember
        push r:this, '(W3', r:'}J', 1, '+7U K'
        new
        setMember
        push r:this, '(KA', 1, '-V3oG', 2, r:this, '(W3'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push 0, 'flash'
        getVariable
        push '3[4k{'
        getMember
        push '*svPM'
        newMethod
        setRegister r:3
        pop
        push r:3, 'color', 3767292
        setMember
        push r:3, '6x9p', 1
        setMember
        push r:3, '4y=T(', 30
        setMember
        push r:3, '5y=T(', 30
        setMember
        push r:3, '}}+ss', 1.5
        setMember
        push r:this, '(KA'
        getMember
        push '3[4k{', r:3, 1
        initArray
        setMember
        push r:this, '32', r:this, '(KA'
        getMember
        push 1, '+7U K'
        new
        setMember
        push r:this, ';+', 0, '0o*6', 2, r:this, '(W3'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '7Qe;6', 0, 'Array'
        new
        setMember
        push r:this, ')gv94', 0, 'Array'
        new
        setMember
        push r:this, '17dU+', 0, 'Array'
        new
        setMember
        push r:this, '1U;0', 0, 'Array'
        new
        setMember
        push r:this, ']mAH', 0, 'Array'
        new
        setMember
        push r:this, '{{,+x', 0
        setMember
        push 0, r:this, '4pw(b'
        callMethod
        pop
        push r:this, '(VKB', '*r'
        getVariable
        push '2+s]'
        getMember
        setMember
        push r:this, ']78H', '*v9F', 99, '6m9G', 99, '[d9F', -99, '-Y9G', -99, 4
        initObject
        setMember
        push '*r'
        getVariable
        push '}lo41('
        getMember
        push 0.5
        multiply
        int
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        push r:4, r:5
        subtract
        setRegister r:6
        pop
        branch label79
       label78:
        push r:6
        increment
        setRegister r:6
        pop
       label79:
        push r:6, r:4, r:5
        add
        greaterThan
        not
        not
        branchIfTrue label83
        push r:4, r:5
        subtract
        setRegister r:7
        pop
        branch label81
       label80:
        push r:7
        increment
        setRegister r:7
        pop
       label81:
        push r:7, r:4, r:5
        add
        greaterThan
        not
        not
        branchIfTrue label82
        push r:7, r:6, 2, r:this, '4AH-'
        callMethod
        pop
        branch label80
       label82:
        branch label78
       label83:
        push r:this, '-,=)', 3, ']*u;C', 2, r:this, '(W3'
        getMember
        push '*=_p_'
        callMethod
        push 1, '638J'
        new
        setMember
        push r:this, '-,=)'
        getMember
        push '((', r:4, 0.5
        add
        push '*r'
        getVariable
        push '-Wa['
        getMember
        multiply
        setMember
        push r:this, '-,=)'
        getMember
        push ')(', r:4, 0.5
        add
        push '*r'
        getVariable
        push '-Wa['
        getMember
        multiply
        setMember
        push 0, r:this, '-,=)'
        getMember
        push ' 1qEn'
        callMethod
        pop
        push r:this, '-,=)'
        getMember
        push '-iB='
        getMember
        push 1, r:this, '(KA'
        getMember
        push 'setMask'
        callMethod
        pop
        push 0, 1, r:this, '5Hy6b'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '4pw(b'
      function2 () (r:1='this')
        push r:this, ';AH0', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:2
        pop
        branch label85
       label84:
        push r:2
        increment
        setRegister r:2
        pop
       label85:
        push r:2, '*r'
        getVariable
        push '}lo41('
        getMember
        lessThan
        not
        branchIfTrue label89
        push r:this, ';AH0'
        getMember
        push r:2, 0, 'Array'
        new
        setMember
        push 0
        setRegister r:3
        pop
        branch label87
       label86:
        push r:3
        increment
        setRegister r:3
        pop
       label87:
        push r:3, '*r'
        getVariable
        push '}lo41('
        getMember
        lessThan
        not
        branchIfTrue label88
        push '44{N'
        getVariable
        push ')x9,4'
        getMember
        push '-DaCD', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:4
        pop
        push r:4, '_x', r:2, 0.5
        add
        push '*r'
        getVariable
        push '-Wa['
        getMember
        multiply
        setMember
        push r:4, '_y', r:3, 0.5
        add
        push '*r'
        getVariable
        push '-Wa['
        getMember
        multiply
        setMember
        push r:4, '{j)l', FALSE
        setMember
        push r:this, ';AH0'
        getMember
        push r:2
        getMember
        push r:3, r:4
        setMember
        push 0, r:this, '0Ev2M'
        callMethod
        setRegister r:5
        pop
        push r:5, 1
        add
        toString
        push 1, r:4, 'gotoAndStop'
        callMethod
        pop
        push r:4, '9ptw', TRUE
        setMember
        branch label86
       label88:
        branch label84
       label89:
      end // of function 

      setMember
      push r:1, '5Hy6b'
      function2 (r:2='[') (r:1='this')
        push r:this, '=kIA', r:'['
        setMember
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label90
        push r:0, 1
        strictEquals
        branchIfTrue label91
        push r:0, 2
        strictEquals
        branchIfTrue label92
        push r:0, 9
        strictEquals
        branchIfTrue label97
        branch label98
       label90:
        push 0, r:this, '-o=3,'
        callMethod
        pop
        branch label98
       label91:
        push r:this, '2VhU6', '*r'
        getVariable
        push '[gGf{'
        getMember
        setMember
        branch label98
       label92:
        push r:this, ' eo6*'
        getMember
        push 'length'
        getMember
        push 0
        equals
        not
        branchIfTrue label93
        push 0, 1, r:this, '5Hy6b'
        callMethod
        pop
        branch label98
        branch label96
       label93:
        push r:this, '2VhU6', '*r'
        getVariable
        push ')[oy8('
        getMember
        setMember
        push r:this, ' eo6*', 0, r:this, '(]SKI('
        callMethod
        setMember
        push 0
        setRegister r:3
        pop
        branch label95
       label94:
        push r:3
        increment
        setRegister r:3
        pop
       label95:
        push r:3, r:this, ' eo6*'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label96
        push r:this, ' eo6*'
        getMember
        push r:3
        getMember
        setRegister r:4
        pop
        push r:this, ';AH0'
        getMember
        push r:4, '(('
        getMember
        getMember
        push r:4, ')('
        getMember
        getMember
        setRegister r:5
        pop
        push 8, '-DaCD', 2, r:this, '(W3'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:6
        pop
        push r:6, '((', r:5, '_x'
        getMember
        setMember
        push r:6, ')(', r:5, '_y'
        getMember
        setMember
        push r:6, '(KpGn', 0.4, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.4
        multiply
        add
        setMember
        push r:5, '_currentframe'
        getMember
        toString
        push 1, r:6, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:4, ')('
        getMember
        push r:4, '(('
        getMember
        push 2, r:this, '4AH-'
        callMethod
        pop
        push r:6, 1, r:this, '17dU+'
        getMember
        push 'push'
        callMethod
        pop
        branch label94
       label96:
        branch label98
       label97:
        push r:this, '2VhU6', 4
        setMember
        push r:this, '-,=)'
        getMember
        push '{FL', 0
        setMember
        push r:this, '-,=)'
        getMember
        push '}FL', 0
        setMember
        branch label98
       label98:
      end // of function 

      setMember
      push r:1, '0D 6'
      function2 () (r:1='this')
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label99
        push r:0, 1
        strictEquals
        branchIfTrue label100
        push r:0, 2
        strictEquals
        branchIfTrue label108
        push r:0, 9
        strictEquals
        branchIfTrue label111
        branch label114
       label99:
        branch label114
       label100:
        push 1, r:this, '2VhU6'
        getMember
        push '*r'
        getVariable
        push '[gGf{'
        getMember
        divide
        subtract
        push 100
        multiply
        setRegister r:2
        pop
        push 0, 'Array'
        new
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        branch label102
       label101:
        push r:4
        increment
        setRegister r:4
        pop
       label102:
        push r:4, r:this, ' eo6*'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label105
        push r:this, ' eo6*'
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push r:this, ';AH0'
        getMember
        push r:5, '(('
        getMember
        getMember
        push r:5, ')('
        getMember
        getMember
        setRegister r:6
        pop
        push r:2, 100
        lessThan
        not
        branchIfTrue label103
        push 16777215, r:2, r:6, 3, '*r'
        getVariable
        push ';CYOh'
        callMethod
        pop
        push r:6, '_xscale', 100, r:2
        subtract
        setMember
        push r:6, '_yscale', 100, r:2
        subtract
        setMember
        branch label104
       label103:
        push r:3, r:5, ')('
        getMember
        push r:5, '(('
        getMember
        push 3, r:this, '*zy{1('
        callMethod
        pop
        push r:this, ';AH0'
        getMember
        push r:5, '(('
        getMember
        getMember
        push r:5, ')('
        getMember
        getMember
        setRegister r:7
        pop
        push r:7, 1, r:this, '88rS('
        callMethod
        pop
        push r:this, '4B1W('
        getMember
        push '*r'
        getVariable
        push '0,cN['
        getMember
        push 2, ';ndCG'
        getVariable
        push '3B(*'
        callMethod
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push r:5, ')('
        getMember
        push r:5, '(('
        getMember
        push 2, r:this, '4AH-'
        callMethod
        pop
       label104:
        branch label101
       label105:
        push r:this, '2VhU6'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label107
        push 0, r:this, '-,=)'
        getMember
        push ' 1qEn'
        callMethod
        pop
        push r:3, 'length'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label106
        push r:this, ' eo6*', r:3
        setMember
        push r:this, '4B1W(', r:this, '4B1W('
        getMember
        push '*r'
        getVariable
        push '5=,xD'
        getMember
        push 2, ';ndCG'
        getVariable
        push '3B(*'
        callMethod
        setMember
        push 1, 1, r:this, '5Hy6b'
        callMethod
        pop
        branch label107
       label106:
        push 2, 1, r:this, '5Hy6b'
        callMethod
        pop
       label107:
        branch label114
       label108:
        push r:this, '2VhU6'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label110
        push r:this, '(VKB'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        push 0
        greaterThan
        not
        branchIfTrue label109
        push 0, 1, r:this, '5Hy6b'
        callMethod
        pop
        branch label110
       label109:
        push 9, 1, r:this, '5Hy6b'
        callMethod
        pop
       label110:
        branch label114
       label111:
        push r:this, '2VhU6'
        getMember
        push 0
        lessThan
        dup
        not
        branchIfTrue label112
        pop
        push r:this, '17dU+'
        getMember
        push 'length'
        getMember
        push 0
        equals
       label112:
        not
        branchIfTrue label113
        push r:this, '-_X}5'
        getMember
        push 1, ';ndCG'
        getVariable
        push '7T4cF('
        callMethod
        pop
        push 10, 1, r:this, '5Hy6b'
        callMethod
        pop
       label113:
        branch label114
       label114:
        push 0, r:this, '7Qe;6'
        getMember
        push '],lYS'
        callMethod
        setRegister r:8
        pop
        push 0
        setRegister r:9
        pop
        branch label116
       label115:
        push r:9
        increment
        setRegister r:9
        pop
       label116:
        push r:9, r:8, 'length'
        getMember
        lessThan
        not
        branchIfTrue label117
        push 0, r:8, r:9
        getMember
        push '87vE7('
        callMethod
        pop
        branch label115
       label117:
        push 0
        setRegister r:10
        pop
        branch label119
       label118:
        push r:10
        increment
        setRegister r:10
        pop
       label119:
        push r:10, r:this, '17dU+'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label121
        push r:this, '17dU+'
        getMember
        push r:10
        getMember
        setRegister r:11
        pop
        push r:11, ')('
        getMember
        push '*r'
        getVariable
        push '*OA'
        getMember
        push '*r'
        getVariable
        push '-Wa['
        getMember
        add
        greaterThan
        not
        branchIfTrue label120
        push 0, r:11, '9T54'
        callMethod
        pop
        push 1, r:10, r:10
        decrement
        setRegister r:10
        pop
        push 2, r:this, '17dU+'
        getMember
        push 'splice'
        callMethod
        pop
        push '*r'
        getVariable
        push '6UcJ['
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
       label120:
        branch label118
       label121:
        push r:this, '{{,+x', r:this, '{{,+x'
        getMember
        push 47
        add
        push 628
        modulo
        setMember
        push 50, r:this, '{{,+x'
        getMember
        push 100
        divide
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push 30
        multiply
        add
        setRegister r:12
        pop
        push 0
        setRegister r:13
        pop
        branch label123
       label122:
        push r:13
        increment
        setRegister r:13
        pop
       label123:
        push r:13, r:this, '1U;0'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label124
        push r:this, '1U;0'
        getMember
        push r:13
        getMember
        setRegister r:14
        pop
        push 16777215, r:12, r:14, 3, '*r'
        getVariable
        push ';CYOh'
        callMethod
        pop
        branch label122
       label124:
      end // of function 

      setMember
      push r:1, '-o=3,'
      function2 () (r:1='this')
        push 0, 'Array'
        new
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label126
       label125:
        push r:3
        increment
        setRegister r:3
        pop
       label126:
        push r:3, '*r'
        getVariable
        push '}lo41('
        getMember
        lessThan
        not
        branchIfTrue label127
        push r:2, r:3, 0, 'Array'
        new
        setMember
        branch label125
       label127:
        push r:this, '-NJ', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:4
        pop
        branch label129
       label128:
        push r:4
        increment
        setRegister r:4
        pop
       label129:
        push r:4, 10
        lessThan
        not
        branchIfTrue label130
        push r:this, '-NJ'
        getMember
        push r:4, 0, 'Array'
        new
        setMember
        branch label128
       label130:
        push 0
        setRegister r:5
        pop
        branch label132
       label131:
        push r:5
        increment
        setRegister r:5
        pop
       label132:
        push r:5, r:this, ']mAH'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label137
        push r:this, ']mAH'
        getMember
        push r:5
        getMember
        setRegister r:6
        pop
        push 0
        setRegister r:7
        pop
        branch label134
       label133:
        push r:7
        increment
        setRegister r:7
        pop
       label134:
        push r:7, '*r'
        getVariable
        push '*e['
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label136
        push '*r'
        getVariable
        push '*e['
        getMember
        push r:7
        getMember
        setRegister r:8
        pop
        push r:8, 0
        getMember
        push r:6, '(('
        getMember
        add
        setRegister r:9
        pop
        push r:8, 1
        getMember
        push r:6, ')('
        getMember
        add
        setRegister r:10
        pop
        push r:2, r:9
        getMember
        push r:10
        getMember
        push NULL
        equals
        not
        branchIfTrue label135
        push r:2, r:9
        getMember
        push r:10, TRUE
        setMember
        push r:this, ';AH0'
        getMember
        push r:9
        getMember
        push r:10
        getMember
        setRegister r:11
        pop
        push r:11, NULL
        equals
        not
        not
        branchIfTrue label135
        push r:11, '_currentframe'
        getMember
        push 1
        subtract
        setRegister r:12
        pop
        push '((', r:9, ')(', r:10, 2
        initObject
        push 1, r:this, '-NJ'
        getMember
        push r:12
        getMember
        push 'push'
        callMethod
        pop
        push r:11, 'onPress', r:12, '==Uf7', r:this, 3, '3Wt'
        getVariable
        push '6{VYR'
        callMethod
        setMember
        push r:11, 'onRollOver', r:12, '{u+gg', r:this, 3, '3Wt'
        getVariable
        push '6{VYR'
        callMethod
        setMember
        push r:11, 'onRollOut', r:12, '{-nK,(', r:this, 3, '3Wt'
        getVariable
        push '6{VYR'
        callMethod
        setMember
        push r:11, 'onDragOut', r:12, '{-nK,(', r:this, 3, '3Wt'
        getVariable
        push '6{VYR'
        callMethod
        setMember
        push r:11, 'useHandCursor', TRUE
        setMember
        push r:11, 1, ';ndCG'
        getVariable
        push '7vdL6('
        callMethod
        pop
       label135:
        branch label133
       label136:
        branch label131
       label137:
      end // of function 

      setMember
      push r:1, '8PJM1('
      function2 () (r:1='this')
       label138:
        push r:this, '-NJ'
        getMember
        push 'length'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label141
        push 0, r:this, '-NJ'
        getMember
        push 'pop'
        callMethod
        setRegister r:2
        pop
       label139:
        push r:2, 'length'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label140
        push 0, r:2, 'pop'
        callMethod
        setRegister r:3
        pop
        push r:this, ';AH0'
        getMember
        push r:3, '(('
        getMember
        getMember
        push r:3, ')('
        getMember
        getMember
        setRegister r:4
        pop
        push r:4, 'onPress', NULL
        setMember
        push r:4, 'onRollOver', NULL
        setMember
        push r:4, 'onRollOut', NULL
        setMember
        push r:4, 'onDragOut', NULL
        setMember
        push r:4, 'useHandCursor', FALSE
        setMember
        push r:4, 1, ';ndCG'
        getVariable
        push '7vdL6('
        callMethod
        pop
        branch label139
       label140:
        branch label138
       label141:
        push r:this, '-NJ', 0, 'Array'
        new
        setMember
      end // of function 

      setMember
      push r:1, '==Uf7'
      function2 (r:2='*B') (r:1='this')
        push r:this, ' eo6*', 0, r:this, '-NJ'
        getMember
        push r:'*B'
        getMember
        push '],lYS'
        callMethod
        setMember
        push 0
        setRegister r:3
        pop
        branch label143
       label142:
        push r:3
        increment
        setRegister r:3
        pop
       label143:
        push r:3, r:this, ' eo6*'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label144
        push r:this, ' eo6*'
        getMember
        push r:3
        getMember
        setRegister r:4
        pop
        push r:this, ';AH0'
        getMember
        push r:4, '(('
        getMember
        getMember
        push r:4, ')('
        getMember
        getMember
        push '{j)l', TRUE
        setMember
        branch label142
       label144:
        push 0, r:this, '8PJM1('
        callMethod
        pop
        push r:this, '(VKB', '*r'
        getVariable
        push '6,Ao=('
        getMember
        push r:this, '(VKB'
        getMember
        push 2, ';ndCG'
        getVariable
        push '3B(*'
        callMethod
        setMember
        push r:this, '-,=)'
        getMember
        push '(v+i3'
        getMember
        push '+Da3+'
        getMember
        push 'text', r:this, '(VKB'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        toString
        setMember
        push r:this, '4B1W(', 0, 1, ';ndCG'
        getVariable
        push '-Q)9)'
        callMethod
        setMember
        push 1, 1, r:this, '5Hy6b'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '{u+gg'
      function2 (r:2='*B') (r:1='this')
        push r:this, '-NJ'
        getMember
        push r:'*B'
        getMember
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        branch label146
       label145:
        push r:4
        increment
        setRegister r:4
        pop
       label146:
        push r:4, r:3, 'length'
        getMember
        lessThan
        not
        branchIfTrue label147
        push r:3, r:4
        getMember
        setRegister r:5
        pop
        push r:this, ';AH0'
        getMember
        push r:5, '(('
        getMember
        getMember
        push r:5, ')('
        getMember
        getMember
        setRegister r:6
        pop
        push r:6, 1, r:this, '1U;0'
        getMember
        push 'push'
        callMethod
        pop
        branch label145
       label147:
      end // of function 

      setMember
      push r:1, '{-nK,('
      function2 (r:2='*B') (r:1='this')
        push 0
        setRegister r:3
        pop
        branch label149
       label148:
        push r:3
        increment
        setRegister r:3
        pop
       label149:
        push r:3, r:this, '1U;0'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label150
        push r:this, '1U;0'
        getMember
        push r:3
        getMember
        setRegister r:4
        pop
        push 16777215, 0, r:4, 3, '*r'
        getVariable
        push ';CYOh'
        callMethod
        pop
        push 1, r:3, r:3
        decrement
        setRegister r:3
        pop
        push 2, r:this, '1U;0'
        getMember
        push 'splice'
        callMethod
        pop
        branch label148
       label150:
      end // of function 

      setMember
      push r:1, '*zy{1('
      function2 (r:2='((', r:3=')(', r:4='list') (r:1='this')
        push r:this, ';AH0'
        getMember
        push r:'(('
        getMember
        push r:')('
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:6
        pop
        branch label152
       label151:
        push r:6
        increment
        setRegister r:6
        pop
       label152:
        push r:6, '*r'
        getVariable
        push '*e['
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label155
        push '*r'
        getVariable
        push '*e['
        getMember
        push r:6
        getMember
        setRegister r:7
        pop
        push r:'((', r:7, 0
        getMember
        add
        setRegister r:8
        pop
        push r:')(', r:7, 1
        getMember
        add
        setRegister r:9
        pop
        push r:this, ';AH0'
        getMember
        push r:8
        getMember
        push r:9
        getMember
        setRegister r:10
        pop
        push r:10, '_currentframe'
        getMember
        push r:5, '_currentframe'
        getMember
        equals
        dup
        not
        branchIfTrue label153
        pop
        push r:10, '{j)l'
        getMember
        not
       label153:
        not
        branchIfTrue label154
        push '((', r:8, ')(', r:9, 2
        initObject
        push 1, r:list, 'push'
        callMethod
        pop
        push r:10, '{j)l', TRUE
        setMember
       label154:
        branch label151
       label155:
      end // of function 

      setMember
      push r:1, '4AH-'
      function2 (r:2='((', r:3=')(') (r:1='this')
        push '((', r:'((', ')(', r:')(', 2
        initObject
        push 1, r:this, ']mAH'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, ']78H'
        getMember
        push '*v9F', r:'((', r:this, ']78H'
        getMember
        push '*v9F'
        getMember
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setMember
        push r:this, ']78H'
        getMember
        push '6m9G', r:')(', r:this, ']78H'
        getMember
        push '6m9G'
        getMember
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setMember
        push r:this, ']78H'
        getMember
        push '[d9F', r:'((', r:this, ']78H'
        getMember
        push '[d9F'
        getMember
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        setMember
        push r:this, ']78H'
        getMember
        push '-Y9G', r:')(', r:this, ']78H'
        getMember
        push '-Y9G'
        getMember
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        setMember
        push 0, r:this, ';AH0'
        getMember
        push r:'(('
        getMember
        push r:')('
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, ';AH0'
        getMember
        push r:'(('
        getMember
        push r:')(', NULL
        setMember
      end // of function 

      setMember
      push r:1, '0Ev2M'
      function2 () (r:1='this')
        push '*r'
        getVariable
        push '3n_49('
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        branch label157
       label156:
        push r:4
        increment
        setRegister r:4
        pop
       label157:
        push r:4, '*r'
        getVariable
        push ',ynX'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label159
        push r:3, '*r'
        getVariable
        push ',ynX'
        getMember
        push r:4
        getMember
        add
        setRegister r:3
        pop
        push r:3, r:2
        lessThan
        not
        not
        branchIfTrue label158
        push r:4
        return
       label158:
        branch label156
       label159:
        push 'RANDOM ID ERROR', 1, ']{i'
        getVariable
        push 'trace'
        callMethod
        pop
        push NULL
        return
      end // of function 

      setMember
      push r:1, '5R0'
      function2 (r:2='0o()') (r:1='this')
      end // of function 

      setMember
      push r:1, '88rS('
      function2 (r:2='0o()') (r:1='this')
        push 12, 60, r:this, ' eo6*'
        getMember
        push 'length'
        getMember
        divide
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        branch label161
       label160:
        push r:4
        increment
        setRegister r:4
        pop
       label161:
        push r:4, r:3
        lessThan
        not
        branchIfTrue label162
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push '8Fkv-(', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:5
        pop
        push r:'0o()', '_currentframe'
        getMember
        toString
        push 1, r:5, 'gotoAndStop'
        callMethod
        pop
        push r:5, 1, '*DzW'
        new
        setRegister r:6
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:7
        pop
        push 2, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 3
        multiply
        add
        setRegister r:8
        pop
        push r:6, '[b', r:7, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:8
        multiply
        setMember
        push r:6, ']b', r:7, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:8
        multiply
        setMember
        push r:6, '6b', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 30
        multiply
        setMember
        push r:6, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:6, '+{eA+', 0.92
        setMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        setRegister r:9
        pop
        push r:6, '-iB='
        getMember
        push '0tJ'
        getMember
        push '_x', r:9
        setMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:10
        pop
        push r:6, '-iB='
        getMember
        push '_rotation', r:10, 0.0174
        divide
        setMember
        push r:6, '((', r:'0o()', '_x'
        getMember
        push r:10, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:9
        multiply
        subtract
        setMember
        push r:6, ')(', r:'0o()', '_y'
        getMember
        push r:10, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:9
        multiply
        subtract
        setMember
        branch label160
       label162:
      end // of function 

      setMember
      push r:1, '(]SKI('
      function2 () (r:1='this')
        push 0, 'Array'
        new
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label164
       label163:
        push r:3
        increment
        setRegister r:3
        pop
       label164:
        push r:3, '*r'
        getVariable
        push '}lo41('
        getMember
        lessThan
        not
        branchIfTrue label173
        push r:2, r:3, 0, 'Array'
        new
        setMember
        push 0
        setRegister r:4
        pop
        branch label166
       label165:
        push r:4
        increment
        setRegister r:4
        pop
       label166:
        push r:4, '*r'
        getVariable
        push '}lo41('
        getMember
        lessThan
        not
        branchIfTrue label172
        push r:this, ';AH0'
        getMember
        push r:3
        getMember
        push r:4
        getMember
        push NULL
        equals
        not
        dup
        not
        branchIfTrue label169
        pop
        push r:3, 0
        equals
        dup
        branchIfTrue label167
        pop
        push r:3, '*r'
        getVariable
        push '}lo41('
        getMember
        push 1
        subtract
        equals
       label167:
        dup
        branchIfTrue label168
        pop
        push r:4, 0
        equals
       label168:
        dup
        branchIfTrue label169
        pop
        push r:4, '*r'
        getVariable
        push '}lo41('
        getMember
        push 1
        subtract
        equals
       label169:
        dup
        not
        branchIfTrue label170
        pop
        push r:this, ';AH0'
        getMember
        push r:3
        getMember
        push r:4
        getMember
        push NULL
        equals
        not
       label170:
        not
        branchIfTrue label171
        push r:2, r:3
        getMember
        push r:4, TRUE
        setMember
       label171:
        branch label165
       label172:
        branch label163
       label173:
        push 1
        setRegister r:5
        pop
        branch label175
       label174:
        push r:5
        increment
        setRegister r:5
        pop
       label175:
        push r:5, '*r'
        getVariable
        push '}lo41('
        getMember
        push 1
        subtract
        lessThan
        not
        branchIfTrue label182
        push 1
        setRegister r:6
        pop
        branch label177
       label176:
        push r:6
        increment
        setRegister r:6
        pop
       label177:
        push r:6, '*r'
        getVariable
        push '}lo41('
        getMember
        push 1
        subtract
        lessThan
        not
        branchIfTrue label181
        push r:2, r:5
        getMember
        push r:6
        getMember
        push NULL
        equals
        not
        branchIfTrue label180
        push 0
        initArray
        setRegister r:7
        pop
        push r:7, r:2, r:6, r:5, 4, r:this, '8EN_z'
        callMethod
        setRegister r:8
        pop
        push 0
        setRegister r:9
        pop
        branch label179
       label178:
        push r:9
        increment
        setRegister r:9
        pop
       label179:
        push r:9, r:7, 'length'
        getMember
        lessThan
        not
        branchIfTrue label180
        push r:7, r:9
        getMember
        setRegister r:10
        pop
        push r:2, r:10, '(('
        getMember
        getMember
        push r:10, ')('
        getMember
        push r:8
        setMember
        branch label178
       label180:
        branch label176
       label181:
        branch label174
       label182:
        push 0
        initArray
        setRegister r:11
        pop
        push 1
        setRegister r:12
        pop
        branch label184
       label183:
        push r:12
        increment
        setRegister r:12
        pop
       label184:
        push r:12, '*r'
        getVariable
        push '}lo41('
        getMember
        push 1
        subtract
        lessThan
        not
        branchIfTrue label189
        push 1
        setRegister r:13
        pop
        branch label186
       label185:
        push r:13
        increment
        setRegister r:13
        pop
       label186:
        push r:13, '*r'
        getVariable
        push '}lo41('
        getMember
        push 1
        subtract
        lessThan
        not
        branchIfTrue label188
        push r:2, r:12
        getMember
        push r:13
        getMember
        push FALSE
        equals
        not
        branchIfTrue label187
        push '((', r:12, ')(', r:13, 2
        initObject
        push 1, r:11, 'push'
        callMethod
        pop
       label187:
        branch label185
       label188:
        branch label183
       label189:
        push r:11
        return
      end // of function 

      setMember
      push r:1, '8EN_z'
      function2 (r:2='((', r:3=')(', r:4=']U}=', r:5='list') (r:1='this')
        push r:']U}=', r:'(('
        getMember
        push r:')('
        getMember
        setRegister r:6
        pop
        push r:6
        not
        branchIfTrue label190
        push TRUE
        return
       label190:
        push r:6, FALSE
        equals
        dup
        branchIfTrue label191
        pop
        push r:this, ';AH0'
        getMember
        push r:'(('
        getMember
        push r:')('
        getMember
        push NULL
        equals
       label191:
        not
        branchIfTrue label192
        push FALSE
        return
       label192:
        push 0
        setRegister r:7
        pop
        branch label194
       label193:
        push r:7
        increment
        setRegister r:7
        pop
       label194:
        push r:7, r:list, 'length'
        getMember
        lessThan
        not
        branchIfTrue label197
        push r:list, r:7
        getMember
        setRegister r:8
        pop
        push r:8, '(('
        getMember
        push r:'(('
        equals
        dup
        not
        branchIfTrue label195
        pop
        push r:8, ')('
        getMember
        push r:')('
        equals
       label195:
        not
        branchIfTrue label196
        push FALSE
        return
       label196:
        branch label193
       label197:
        push '((', r:'((', ')(', r:')(', 2
        initObject
        push 1, r:list, 'push'
        callMethod
        pop
        push 0
        setRegister r:9
        pop
        branch label199
       label198:
        push r:9
        increment
        setRegister r:9
        pop
       label199:
        push r:9, '*r'
        getVariable
        push '*e['
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label201
        push '*r'
        getVariable
        push '*e['
        getMember
        push r:9
        getMember
        setRegister r:10
        pop
        push r:'((', r:10, 0
        getMember
        add
        setRegister r:11
        pop
        push r:')(', r:10, 1
        getMember
        add
        setRegister r:12
        pop
        push r:list, r:']U}=', r:12, r:11, 4, r:this, '8EN_z'
        callMethod
        not
        branchIfTrue label200
        push TRUE
        return
       label200:
        branch label198
       label201:
        push FALSE
        return
      end // of function 

      setMember
      push r:0, ')x9,4', 2
      setMember
      push r:0, '{YJfb', 3
      setMember
      push r:0, '}FI;8', 6
      setMember
      push r:0, '7j3QZ', 20
      setMember
      push r:0, '[VjD-', 0.3
      setMember
      push r:0, '}5]*b', TRUE
      setMember
      push '980Sb'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '}-B2'
      function2 (r:2='}J') (r:1='this')
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        not
        branchIfTrue label202
        push UNDEF
        return
       label202:
        push '980Sb'
        getVariable
        push ')2fr3', r:'}J'
        setMember
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        branchIfTrue label203
        push '980Sb'
        getVariable
        push '({B6', '980Sb'
        getVariable
        push ')2fr3'
        getMember
        push 1, '44{N'
        new
        setMember
       label203:
      end // of function 

      setMember
      push r:0, '0D 6'
      function2 () (r:1='this')
        push 0, '{-kxL'
        getVariable
        push '87vE7('
        callMethod
        pop
        push 0, '980Sb'
        getVariable
        push '({B6'
        getMember
        push '0D 6'
        callMethod
        pop
      end // of function 

      setMember
    end // of frame 0
  end // of defineMovieClip 32
  
  exportAssets
    32 as '90D*'
  end // of exportAssets
end
