movie '67e4eb7e5895cb57a0c588a34f98047e.swf' compressed // flash 8, total frames: 1, frame rate: 40 fps, 700x480 px


  defineMovieClip 4 // total frames: 12
  end // of defineMovieClip 4

  defineMovieClip 11 // total frames: 1
  end // of defineMovieClip 11

  defineMovieClip 14 // total frames: 1
  end // of defineMovieClip 14

  defineMovieClip 16 // total frames: 33
  end // of defineMovieClip 16

  defineMovieClip 17 // total frames: 21
  end // of defineMovieClip 17
  
  exportAssets
    17 as ')7MgQ'
  end // of exportAssets

  defineMovieClip 19 // total frames: 1
  end // of defineMovieClip 19
  
  exportAssets
    19 as '7 B,7'
  end // of exportAssets

  defineMovieClip 24 // total frames: 5
  end // of defineMovieClip 24

  defineMovieClip 29 // total frames: 5
  end // of defineMovieClip 29

  defineMovieClip 34 // total frames: 5
  end // of defineMovieClip 34

  defineMovieClip 39 // total frames: 5
  end // of defineMovieClip 39

  defineMovieClip 44 // total frames: 5
  end // of defineMovieClip 44

  defineMovieClip 45 // total frames: 5
  end // of defineMovieClip 45
  
  exportAssets
    45 as '3,w8u'
  end // of exportAssets

  defineMovieClip 48 // total frames: 1
  end // of defineMovieClip 48

  defineMovieClip 49 // total frames: 1
  end // of defineMovieClip 49
  
  exportAssets
    49 as '0o*6'
  end // of exportAssets
  
  exportAssets
    49 as '0o*6'
  end // of exportAssets
  
  exportAssets
    45 as '3,w8u'
  end // of exportAssets
  
  exportAssets
    19 as '7 B,7'
  end // of exportAssets
  
  exportAssets
    17 as ')7MgQ'
  end // of exportAssets

  defineMovieClip 53 // total frames: 3
  end // of defineMovieClip 53
  
  exportAssets
    53 as ',+TFu'
  end // of exportAssets

  defineMovieClip 55 // total frames: 1
  end // of defineMovieClip 55
  
  exportAssets
    55 as ' r_qd'
  end // of exportAssets

  defineMovieClip 68 // total frames: 15

    frame 14
      push ''
      removeClip
    end // of frame 14
  end // of defineMovieClip 68
  
  exportAssets
    68 as '-O_ y'
  end // of exportAssets

  defineMovieClip 71 // total frames: 1
  end // of defineMovieClip 71

  defineMovieClip 72 // total frames: 20

    frame 10
      push '5t 9)', 20
      setVariable
    end // of frame 10

    frame 12
      constants '5t 9)', ''  
      push '5t 9)', '5t 9)'
      getVariable
      decrement
      setVariable
      push '5t 9)'
      getVariable
      push 0.0
      greaterThan
      not
      branchIfTrue label1
      push '', 4
      getProperty
      push 1
      subtract
      gotoAndPlay
     label1:
    end // of frame 12

    frame 19
      push ''
      removeClip
    end // of frame 19
  end // of defineMovieClip 72
  
  exportAssets
    72 as '9WJkh'
  end // of exportAssets

  defineMovieClip 74 // total frames: 1
  end // of defineMovieClip 74

  defineMovieClip 75 // total frames: 13

    frame 5
      push '5t 9)', 32
      setVariable
    end // of frame 5

    frame 7
      constants '5t 9)', ''  
      push '5t 9)', '5t 9)'
      getVariable
      decrement
      setVariable
      push '5t 9)'
      getVariable
      push 0.0
      greaterThan
      not
      branchIfTrue label1
      push '', 4
      getProperty
      push 1
      subtract
      gotoAndPlay
     label1:
    end // of frame 7

    frame 12
      push ''
      removeClip
    end // of frame 12
  end // of defineMovieClip 75
  
  exportAssets
    75 as '5a93H'
  end // of exportAssets

  defineMovieClip 76 // total frames: 13

    frame 12
      push 0.0, '+KD'
      getVariable
      push '9T54'
      callMethod
      pop
    end // of frame 12
  end // of defineMovieClip 76
  
  exportAssets
    76 as '1r[bZ'
  end // of exportAssets

  defineMovieClip 80 // total frames: 3
  end // of defineMovieClip 80
  
  exportAssets
    80 as '=MR4L('
  end // of exportAssets

  defineMovieClip 81 // total frames: 1
  end // of defineMovieClip 81

  defineMovieClip 82 // total frames: 28
  end // of defineMovieClip 82

  defineMovieClip 83 // total frames: 1
  end // of defineMovieClip 83
  
  exportAssets
    83 as '7LeMK('
  end // of exportAssets

  defineMovieClip 93 // total frames: 1
  end // of defineMovieClip 93

  defineMovieClip 102 // total frames: 26
  end // of defineMovieClip 102
  
  exportAssets
    102 as ',XnXA'
  end // of exportAssets

  defineMovieClip 104 // total frames: 1
  end // of defineMovieClip 104
  
  exportAssets
    104 as '),HaF('
  end // of exportAssets

  defineMovieClip 107 // total frames: 2
  end // of defineMovieClip 107

  defineMovieClip 109 // total frames: 1
  end // of defineMovieClip 109

  defineMovieClip 118 // total frames: 8
  end // of defineMovieClip 118

  defineMovieClip 122 // total frames: 3
  end // of defineMovieClip 122

  defineMovieClip 123 // total frames: 19

    frame 7
      gotoLabel '4MC5'
      play
    end // of frame 7

    frame 18
      push ''
      removeClip
    end // of frame 18
  end // of defineMovieClip 123
  
  exportAssets
    123 as ' w4Gn'
  end // of exportAssets

  defineMovieClip 125 // total frames: 1
  end // of defineMovieClip 125

  defineMovieClip 126 // total frames: 7

    frame 6
      push ''
      removeClip
    end // of frame 6
  end // of defineMovieClip 126
  
  exportAssets
    126 as ';)QoD'
  end // of exportAssets

  defineMovieClip 129 // total frames: 2
  end // of defineMovieClip 129
  
  exportAssets
    129 as '=,Y-r'
  end // of exportAssets

  defineMovieClip 131 // total frames: 1
  end // of defineMovieClip 131

  defineMovieClip 132 // total frames: 16

    frame 15
      push ''
      removeClip
    end // of frame 15
  end // of defineMovieClip 132
  
  exportAssets
    132 as ']fZWx'
  end // of exportAssets

  defineMovieClip 136 // total frames: 2
  end // of defineMovieClip 136
  
  exportAssets
    136 as '8CoU-'
  end // of exportAssets

  defineMovieClip 138 // total frames: 1
  end // of defineMovieClip 138

  defineMovieClip 139 // total frames: 5

    frame 4
      push ''
      removeClip
    end // of frame 4
  end // of defineMovieClip 139
  
  exportAssets
    139 as '{y6)2('
  end // of exportAssets

  defineMovieClip 143 // total frames: 1
  end // of defineMovieClip 143

  defineMovieClip 147 // total frames: 41
  end // of defineMovieClip 147

  defineMovieClip 153 // total frames: 6
  end // of defineMovieClip 153
  
  exportAssets
    153 as '8sfFC'
  end // of exportAssets

  defineMovieClip 162 // total frames: 9

    frame 8
      push ''
      removeClip
    end // of frame 8
  end // of defineMovieClip 162
  
  exportAssets
    162 as '8=Lw3('
  end // of exportAssets

  defineMovieClip 164 // total frames: 1
  end // of defineMovieClip 164

  defineMovieClip 165 // total frames: 19

    frame 18
      push ''
      removeClip
    end // of frame 18
  end // of defineMovieClip 165
  
  exportAssets
    165 as '=CN8-('
  end // of exportAssets

  defineMovieClip 167 // total frames: 1
  end // of defineMovieClip 167

  defineMovieClip 168 // total frames: 6

    frame 5
      push ''
      removeClip
    end // of frame 5
  end // of defineMovieClip 168
  
  exportAssets
    168 as '3=vLC'
  end // of exportAssets

  defineMovieClip 175 // total frames: 4
  end // of defineMovieClip 175

  defineMovieClip 181 // total frames: 6

    frame 1
      constants '5t 9)'  
      push '5t 9)', '5t 9)'
      getVariable
      decrement
      setVariable
      push '5t 9)'
      getVariable
      push 0.0
      greaterThan
      not
      branchIfTrue label1
      gotoFrame 0
      play
     label1:
    end // of frame 1

    frame 5
      stop
    end // of frame 5
  end // of defineMovieClip 181

  defineMovieClip 183 // total frames: 1
  end // of defineMovieClip 183

  defineMovieClip 190 // total frames: 8

    frame 7
      gotoLabel '4MC5'
      play
    end // of frame 7
  end // of defineMovieClip 190

  defineMovieClip 198 // total frames: 2
  end // of defineMovieClip 198

  defineMovieClip 203 // total frames: 13

    frame 6
      stop
    end // of frame 6

    frame 12
      push 0.0, '_parent'
      getVariable
      push '+KD'
      getMember
      push '9T54'
      callMethod
      pop
    end // of frame 12
  end // of defineMovieClip 203

  defineMovieClip 205 // total frames: 1
  end // of defineMovieClip 205

  defineMovieClip 206 // total frames: 10

    frame 9
      gotoFrame 0
      play
    end // of frame 9
  end // of defineMovieClip 206

  defineMovieClip 208 // total frames: 1
  end // of defineMovieClip 208

  defineMovieClip 209 // total frames: 23

    frame 21
      push 'stop'
      getVariable
      pop
    end // of frame 21
  end // of defineMovieClip 209

  defineMovieClip 210 // total frames: 26

    frame 25
      push 'stop'
      getVariable
      pop
    end // of frame 25
  end // of defineMovieClip 210

  defineMovieClip 211 // total frames: 29

    frame 28
      push 'stop'
      getVariable
      pop
    end // of frame 28
  end // of defineMovieClip 211

  defineMovieClip 212 // total frames: 32

    frame 30
      push 'stop'
      getVariable
      pop
    end // of frame 30
  end // of defineMovieClip 212

  defineMovieClip 213 // total frames: 39

    frame 37
      push 'stop'
      getVariable
      pop
    end // of frame 37
  end // of defineMovieClip 213

  defineMovieClip 216 // total frames: 2
  end // of defineMovieClip 216

  defineMovieClip 217 // total frames: 23

    frame 22
      stop
    end // of frame 22
  end // of defineMovieClip 217

  defineMovieClip 218 // total frames: 12
  end // of defineMovieClip 218
  
  exportAssets
    218 as '97mPC'
  end // of exportAssets

  defineMovieClip 222 // total frames: 1
  end // of defineMovieClip 222

  defineMovieClip 224 // total frames: 1
  end // of defineMovieClip 224

  defineMovieClip 227 // total frames: 14

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 227
  
  exportAssets
    227 as ')+jEC'
  end // of exportAssets
  
  exportAssets
    227 as ')+jEC'
  end // of exportAssets
  
  exportAssets
    218 as '97mPC'
  end // of exportAssets
  
  exportAssets
    168 as '3=vLC'
  end // of exportAssets
  
  exportAssets
    165 as '=CN8-('
  end // of exportAssets
  
  exportAssets
    162 as '8=Lw3('
  end // of exportAssets
  
  exportAssets
    153 as '8sfFC'
  end // of exportAssets
  
  exportAssets
    139 as '{y6)2('
  end // of exportAssets
  
  exportAssets
    136 as '8CoU-'
  end // of exportAssets
  
  exportAssets
    132 as ']fZWx'
  end // of exportAssets
  
  exportAssets
    129 as '=,Y-r'
  end // of exportAssets
  
  exportAssets
    126 as ';)QoD'
  end // of exportAssets
  
  exportAssets
    123 as ' w4Gn'
  end // of exportAssets
  
  exportAssets
    104 as '),HaF('
  end // of exportAssets
  
  exportAssets
    102 as ',XnXA'
  end // of exportAssets
  
  exportAssets
    83 as '7LeMK('
  end // of exportAssets
  
  exportAssets
    80 as '=MR4L('
  end // of exportAssets
  
  exportAssets
    76 as '1r[bZ'
  end // of exportAssets
  
  exportAssets
    75 as '5a93H'
  end // of exportAssets
  
  exportAssets
    72 as '9WJkh'
  end // of exportAssets
  
  exportAssets
    68 as '-O_ y'
  end // of exportAssets
  
  exportAssets
    55 as ' r_qd'
  end // of exportAssets

  defineMovieClip 228 // total frames: 1

    frame 0
      constants '{sRCQ', '9w+x0(', '5Gr1)', 'Array', 'prototype', 'insert', 'splice', 'call', 'length', 'pop', ']]*Q1(', 'push', '7EyYf', 'shift', '=dbLP', '0y)Lk', 'unshift', '(Ip9A', '36}9L(', '-0]rl', '-iB=', '+KD', '*r', '+-(0', '7Qe;6', '((', ')(', '_x', '_y', '87vE7(', '9T54', 'removeMovieClip', 'remove', '4u=dZ', '}1A{_', 'Math', 'sqrt', ')153L', 'atan2', '2sngh', '2K', '[j0D-', '=OA', '*OA', ',v0X', '[b', ']b', '1Jr-,(', '(KpGn', '{-kxL', '-V;B', '+{eA+', 'pow', '6b', '_rotation', '8J 3y', 'flash', 'min', ';CYOh', ';zS4((', ',l3O-', ']oH', ' DN1t', '-)Dz1', '44{N', '-4Nbg', '3=vLC', '32', '*=_p_', '_xscale', '_yscale', '}Wz87(', '8=Lw3(', '[VAGE(', '5;OW;', ')7MgQ', '*DzW', 'gotoAndStop', '0tJ', '_totalframes', 'random', 'cos', 'sin', '2VhU6', '849kV', '1ZjLt', '3Wt', '}P{I', '53RYu', '(Erk5', '[s', '69-', '-]A', '3fw=f', '4RW6x', '8J2Jt', '4,01', '4z7Sl', '8J1xN', ';-[;H', '{SxlZ', '7s', '*]Q5}', '565', '3=', '2Gr]U', ';ndCG', '5b)bA(', '-_X}5', '$k', '2u=W=', '8K()', 'Object', '=MS78', '  ZLW', '6TvCJ', '}Yax5', '[B;7C', ']Gu6y', '0cM,', 'type', '*({1A(', 'size', '-Wa[', '-Q)9)', '}ZnD;(', '4u57)', ' xeDq', '8Z=cb', ',XnXA', ' p3z=', ')MItb', '3,w8u', '+[3N=', 'init', 'max', '=', '0', ')', 'Color', 'ra', 'ga', 'ba', 'aa', 'rb', 'gb', 'bb', 'ab', 'setTransform', ')GiA', '0Yj1', '7Q=T,(', '5Q;ZC(', '}RXB3', ',PRRg', '-)sr;(', '*G6KR', ',i0 [', ')gv94', ',DBRf', 'scale', '3BjX_', '_alpha', ';={0[', '6,Ld)(', '+7U K', '*B', '0Ev2M', '[c4gL', '*g,kL', '2X}A', '7ll[K', '(ZcA(', ',+TFu', '$b', ')p5}4(', '}riE]', '{KJWL', '9WJkh', '[QL', '8kN', '[rKKB', '=MR4L(', '),HaF(', '{==W3(', ')eK7l', ')2fr3', '}Zms3', ']1sj+', '-fC3a', '9oK', '7-,', ']bu40', '_name', 'swapDepths', 'attachMC', '18wU*', 'createEmptyMC', '(GbB}', '+2NA', 'getDepth', 'floor', '}oQA7', '08M8', 'clear', '9(K ;', 'destroy', 'filters', '{lN=R', '4plQ5', 'getTimer', ';ILSy', '3R,QM', ';y}-6(', '-)Xd+', '[Ad;n', '6GI,F', 'fps', '=3+P', '(6x((', '(fc-d', '1V{f', '9O*r', '58Pa4(', '*VVp*(', '+2}gH', '5)tE0', '*sB-L(', ')m0vS', '4pUV8', '}J', '1f', '2)X6+', '88', '}CL', '0f', '78', '84g7x', '6{Qei', '5)*A_', ' j)lm', ';Wf{Z', '-h=lo', '5= as', '2LSq2', '1r[bZ', '505t0', ',VzQ6', 'Key', 'LEFT', 'isDown', '(VKB', 'RIGHT', 'UP', '8Qizc', '[=([7(', 'SPACE', '2)hi(', 'DOWN', 'CONTROL', '=cH(N', '-]e9-', 'abs', '8A1T3(', '{BxJE(', '86{p(', ']xii)', '0{lc4', '=CN8-(', '(', '+7', '{jXZ;(', '9-', '[a', ' r_qd', ' kTT6', '{y6)2(', '{p HX', '8CoU-', '+Y', ',Y', '[mD', ']mD', '4AF', ';)QoD', ' w4Gn', 'gotoAndPlay', ']fZWx', '=,Y-r', '8Ugi)', '97mPC', '2C0[', '*g;o', '8s]Xp', ';)bt5', '5t 9)', '61[s5', '7T4cF(', '7LeMK(', '(WBt)', ']}Ou;(', '3I0pG', '{;7F4', '8U(wu', '}[cpB', '9xv]A', '{yQ=Q', '+,W', '2y+dV', '(tBee', '3)i[=', ' J3IC', '[6jRc', ')8Fyj', 'stop', '2xEr8', '9Lq;O', ';IHn;', '}O', '08i_Z', ',43dZ', '4,U=3', '-O_ y', '22pr)(', '3U*}=(', ';+', '4MvcB', '0o*6', '-hCnb', ')+jEC', '4QvZJ', '=5haE', '1', 'draw', ',N)rb', '1T=', '5Hy6b', '9V[[2', '=11Rh', '9t1r1', 'onKeyDown', ']668C(', 'callback', 'onKeyUp', '=(D=5', 'addListener', 'getCode', '=kIA', '5a93H', 'secteur ', '2cou(', '-U_8Z', ' yFNA(', '9sd6g', '0D 6', 'duplicate', '8pnO6(', ']rvns', ')dQoA', '7 B,7', '+I;}1', '_width', ')S6', '8sfFC', '5SHU8', '980Sb', ']{i', 'setColor', '(kJ+1(', 'mode'  
      push '{sRCQ'
      function2 () (r:1='this', r:2='super')
        push 0, r:super, UNDEF
        callMethod
        pop
        push r:this, '9w+x0(', 0, 1
        initArray
        setMember
        push r:this, '5Gr1)', FALSE
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'Array'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, 'insert'
      function2 (r:2='4AF', r:3='((') (r:1='this')
        push r:'((', 0, r:'4AF', r:this, 4, 'Array'
        getVariable
        push 'prototype'
        getMember
        push 'splice'
        getMember
        push 'call'
        callMethod
        pop
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label1
        push r:this, '5Gr1)', TRUE
        setMember
       label1:
      end // of function 

      setMember
      push r:1, 'pop'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, ']]*Q1('
        getVariable
        push 'call'
        callMethod
        setRegister r:3
        pop
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label2
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        decrement
        push 1
        initArray
        setMember
       label2:
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label3
        push r:this, '5Gr1)', TRUE
        setMember
       label3:
        push r:3
        return
      end // of function 

      setMember
      push r:1, 'push'
      function2 (r:3='((') (r:1='this', r:2='super')
        push r:'((', r:this, 2, '7EyYf'
        getVariable
        push 'call'
        callMethod
        setRegister r:4
        pop
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label4
        push r:this, '5Gr1)', TRUE
        setMember
       label4:
        push r:4
        return
      end // of function 

      setMember
      push r:1, 'shift'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '=dbLP'
        getVariable
        push 'call'
        callMethod
        setRegister r:3
        pop
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label5
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        decrement
        push 1
        initArray
        setMember
       label5:
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label6
        push r:this, '5Gr1)', TRUE
        setMember
       label6:
        push r:3
        return
      end // of function 

      setMember
      push r:1, 'splice'
      function2 (r:3='4AF', r:4='; =') (r:1='this', r:2='super')
        push r:'; =', r:'4AF', r:this, 3, '0y)Lk'
        getVariable
        push 'call'
        callMethod
        setRegister r:5
        pop
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:5, 'length'
        getMember
        subtract
        push 1
        initArray
        setMember
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label7
        push r:this, '5Gr1)', TRUE
        setMember
       label7:
        push r:5
        return
      end // of function 

      setMember
      push r:1, 'unshift'
      function2 (r:3='((') (r:1='this', r:2='super')
        push r:'((', r:this, 2, '(Ip9A'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label8
        push r:this, '5Gr1)', TRUE
        setMember
       label8:
      end // of function 

      setMember
      push r:1, '36}9L('
      function2 () (r:1='this')
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label9
        push r:this, '5Gr1)', TRUE
        setMember
       label9:
        push r:this, '5Gr1)'
        getMember
        return
      end // of function 

      setMember
      push '0y)Lk', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 'splice'
      getMember
      setVariable
      push ']]*Q1(', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 'pop'
      getMember
      setVariable
      push '=dbLP', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 'shift'
      getMember
      setVariable
      push '(Ip9A', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 'unshift'
      getMember
      setVariable
      push '7EyYf', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 'push'
      getMember
      setVariable
      push '-0]rl'
      function2 (r:2='}J') (r:1='this')
        push r:this, '-iB=', r:'}J'
        setMember
        push r:this, '-iB='
        getMember
        push '+KD', r:this
        setMember
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '7Qe;6'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '((', 0
        setMember
        push r:this, ')(', 0
        setMember
        push r:this, '-iB='
        getMember
        push '_x', -100
        setMember
        push r:this, '-iB='
        getMember
        push '_y', -100
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this')
        push r:this, '-iB='
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '-iB='
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this')
        push 0, r:this, '-iB='
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '7Qe;6'
        getMember
        push 'remove'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '4u=dZ'
      function2 () (r:1='this')
        push r:this, '-iB='
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '-iB='
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '}1A{_'
      function2 (r:2='8') (r:1='this')
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:3
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:4
        pop
        push r:3, r:3
        multiply
        push r:4, r:4
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        return
      end // of function 

      setMember
      push r:1, ')153L'
      function2 (r:2='8') (r:1='this')
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:3
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:4
        pop
        push r:3, r:4, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        return
      end // of function 

      setMember
      push r:1, '2sngh'
      function2 (r:2='8', r:3='*', r:4='62=') (r:1='this')
        push r:'62=', NULL
        equals
        not
        branchIfTrue label10
        push 1, 0
        divide
        setRegister r:'62='
        pop
       label10:
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:5
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:6
        pop
        push r:this, '((', r:this, '(('
        getMember
        push r:'62=', r:5, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push r:'62=', r:6, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
      end // of function 

      setMember
      push r:1, '[j0D-'
      function2 (r:2='6') (r:1='this')
        push r:this, '(('
        getMember
        push 0, r:'6'
        subtract
        lessThan
        dup
        branchIfTrue label11
        pop
        push r:this, '(('
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        push r:'6'
        add
        greaterThan
       label11:
        dup
        branchIfTrue label12
        pop
        push r:this, ')('
        getMember
        push 0, r:'6'
        subtract
        lessThan
       label12:
        dup
        branchIfTrue label13
        pop
        push r:this, ')('
        getMember
        push '*r'
        getVariable
        push '*OA'
        getMember
        push r:'6'
        add
        greaterThan
       label13:
        return
      end // of function 

      setMember
      push ',v0X'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '[b', 0
        setMember
        push r:this, ']b', 0
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '-0]rl'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '1Jr-,('
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '(KpGn'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label14
        push r:this, ']b', r:this, ']b'
        getMember
        push r:this, '(KpGn'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label14:
        push r:this, '+{eA+'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label15
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push r:this, '+{eA+'
        getMember
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:3
        pop
        push r:this, '[b', r:this, '[b'
        getMember
        push r:3
        multiply
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:3
        multiply
        setMember
       label15:
        push r:this, '6b'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label17
        push r:this, '+{eA+'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label16
        push r:this, '6b', r:this, '6b'
        getMember
        push r:this, '+{eA+'
        getMember
        multiply
        setMember
       label16:
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '-iB='
        getMember
        push '_rotation'
        getMember
        push r:this, '6b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label17:
        push r:this, '((', r:this, '(('
        getMember
        push r:this, '[b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push r:this, ']b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
      end // of function 

      setMember
      push r:1, '8J 3y'
      function2 () (r:1='this')
        push r:this, 'flash'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label19
        push 100, r:this, 'flash'
        getMember
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:2
        pop
        push r:this, 'flash', r:this, 'flash'
        getMember
        push 0.6
        multiply
        setMember
        push r:this, 'flash'
        getMember
        push 2
        lessThan
        not
        branchIfTrue label18
        push r:this, 'flash', NULL
        setMember
        push 0
        setRegister r:2
        pop
       label18:
        push 16777215, r:2, r:this, '-iB='
        getMember
        push 3, '*r'
        getVariable
        push ';CYOh'
        callMethod
        pop
       label19:
      end // of function 

      setMember
      push r:1, ';zS4(('
      function2 (r:2='8', r:3='*', r:4='62=') (r:1='this')
        push r:'8', 1, r:this, ')153L'
        callMethod
        setRegister r:5
        pop
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:6
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:7
        pop
        push r:this, '[b', r:this, '[b'
        getMember
        push r:'62=', r:6, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:'62=', r:7, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
      end // of function 

      setMember
      push r:1, ',l3O-'
      function2 (r:2='[X') (r:1='this')
        push r:'[X', 1, r:this, '}1A{_'
        callMethod
        setRegister r:3
        pop
        push r:3, r:this, ']oH'
        getMember
        push r:'[X', ']oH'
        getMember
        add
        lessThan
        return
      end // of function 

      setMember
      push r:1, ' DN1t'
      function2 () (r:1='this')
        push r:this, '(('
        getMember
        push 0, r:this, ']oH'
        getMember
        subtract
        lessThan
        not
        branchIfTrue label20
        push r:this, '((', '*r'
        getVariable
        push '=OA'
        getMember
        push r:this, ']oH'
        getMember
        add
        setMember
       label20:
        push r:this, '(('
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        push r:this, ']oH'
        getMember
        add
        greaterThan
        not
        branchIfTrue label21
        push r:this, '((', 0, r:this, ']oH'
        getMember
        subtract
        setMember
       label21:
        push r:this, ')('
        getMember
        push 0, r:this, ']oH'
        getMember
        subtract
        lessThan
        not
        branchIfTrue label22
        push r:this, ')(', '*r'
        getVariable
        push '*OA'
        getMember
        push r:this, ']oH'
        getMember
        add
        setMember
       label22:
        push r:this, ')('
        getMember
        push '*r'
        getVariable
        push '*OA'
        getMember
        push r:this, ']oH'
        getMember
        add
        greaterThan
        not
        branchIfTrue label23
        push r:this, ')(', 0, r:this, ']oH'
        getMember
        subtract
        setMember
       label23:
      end // of function 

      setMember
      push r:1, '-)Dz1'
      function2 (r:2='-X') (r:1='this')
        push '44{N'
        getVariable
        push '-4Nbg'
        getMember
        push '3=vLC', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:3
        pop
        push r:3, '_x', r:this, '(('
        getMember
        setMember
        push r:3, '_y', r:this, ')('
        getMember
        setMember
        push r:3, '_xscale', r:'-X'
        setMember
        push r:3, '_yscale', r:'-X'
        setMember
      end // of function 

      setMember
      push r:1, '}Wz87('
      function2 (r:2='-X') (r:1='this')
        push '44{N'
        getVariable
        push '-4Nbg'
        getMember
        push '8=Lw3(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:3
        pop
        push r:3, '_x', r:this, '(('
        getMember
        setMember
        push r:3, '_y', r:this, ')('
        getMember
        setMember
        push r:3, '_xscale', r:'-X'
        setMember
        push r:3, '_yscale', r:'-X'
        setMember
      end // of function 

      setMember
      push r:1, '[VAGE('
      function2 (r:2=';d3', r:3='}2D*') (r:1='this')
        push r:'}2D*', NULL
        equals
        not
        branchIfTrue label24
        push 1
        setRegister r:'}2D*'
        pop
       label24:
        push 0
        setRegister r:4
        pop
       label25:
        push TRUE
        not
        branchIfTrue label27
        push r:4
        increment
        setRegister r:4
        pop
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push ')7MgQ', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:5
        pop
        push r:';d3'
        toString
        push 1, r:5, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:5, '-iB='
        getMember
        push '0tJ'
        getMember
        setRegister r:6
        pop
        push r:4
        toString
        push 1, r:6, 'gotoAndStop'
        callMethod
        pop
        push r:4, 1
        add
        push r:6, '_totalframes'
        getMember
        push r:'}2D*'
        multiply
        greaterThan
        setRegister r:7
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:8
        pop
        push r:8, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:9
        pop
        push r:8, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:10
        pop
        push 0.5, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.5
        multiply
        add
        setRegister r:11
        pop
        push 3
        setRegister r:12
        pop
        push r:5, '((', r:this, '(('
        getMember
        push r:9, r:11
        multiply
        push r:this, ']oH'
        getMember
        multiply
        add
        setMember
        push r:5, ')(', r:this, ')('
        getMember
        push r:10, r:11
        multiply
        push r:this, ']oH'
        getMember
        multiply
        add
        setMember
        push r:5, '[b', r:this, '[b'
        getMember
        push r:9, r:11
        multiply
        push r:12
        multiply
        add
        setMember
        push r:5, ']b', r:this, ']b'
        getMember
        push r:10, r:11
        multiply
        push r:12
        multiply
        add
        setMember
        push r:5, '6b', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 15
        multiply
        setMember
        push r:5, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:5, '849kV', 0
        setMember
        push r:5, '-iB='
        getMember
        push '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        push r:7
        not
        branchIfTrue label26
        branch label27
       label26:
        branch label25
       label27:
      end // of function 

      setMember
      push r:1, '1ZjLt'
      function2 (r:2=';d3') (r:1='this')
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push ')7MgQ', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:3
        pop
        push r:';d3'
        toString
        push 1, r:3, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:3, '-iB='
        getMember
        push '0tJ'
        getMember
        setRegister r:4
        pop
        push r:4, '_totalframes'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        add
        toString
        push 1, r:4, 'gotoAndStop'
        callMethod
        pop
        push r:3
        return
      end // of function 

      setMember
      push r:1, '1ZjLt'
      function2 (r:2=';d3') (r:1='this')
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push ')7MgQ', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:3
        pop
        push r:';d3'
        toString
        push 1, r:3, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:3, '-iB='
        getMember
        push '0tJ'
        getMember
        setRegister r:4
        pop
        push r:4, '_totalframes'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        add
        toString
        push 1, r:4, 'gotoAndStop'
        callMethod
        pop
        push r:3
        return
      end // of function 

      setMember
      push '1Jr-,(', '-0]rl'
      getVariable
      push 'prototype'
      getMember
      push '87vE7('
      getMember
      setVariable
      push '}P{I'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        push 'push'
        callMethod
        pop
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '(Erk5', '*r'
        getVariable
        push '[s'
        getMember
        setMember
        push r:this, '69-', 1
        setMember
        push r:this, '-]A', 0
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '3fw=f'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        push 4, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:3
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 2, r:this, ']oH'
        getMember
        multiply
        add
        multiply
        setRegister r:4
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '*r'
        getVariable
        push '*OA'
        getMember
        push 2, r:this, ']oH'
        getMember
        multiply
        add
        multiply
        setRegister r:5
        pop
        push r:3
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label28
        push r:0, 1
        strictEquals
        branchIfTrue label29
        push r:0, 2
        strictEquals
        branchIfTrue label30
        push r:0, 3
        strictEquals
        branchIfTrue label31
        branch label32
       label28:
        push r:this, '((', r:4
        setMember
        push r:this, ')(', 0, r:this, ']oH'
        getMember
        subtract
        setMember
        branch label32
       label29:
        push r:this, '((', r:4
        setMember
        push r:this, ')(', '*r'
        getVariable
        push '*OA'
        getMember
        push r:this, ']oH'
        getMember
        add
        setMember
        branch label32
       label30:
        push r:this, '((', 0, r:this, ']oH'
        getMember
        subtract
        setMember
        push r:this, ')(', r:5
        setMember
        branch label32
       label31:
        push r:this, '((', '*r'
        getVariable
        push '=OA'
        getMember
        push r:this, ']oH'
        getMember
        add
        setMember
        push r:this, ')(', r:5
        setMember
        branch label32
       label32:
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
        push 0, r:this, '8J2Jt'
        callMethod
        pop
        push 0, r:this, '8J 3y'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '8J2Jt'
      function2 () (r:1='this')
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push 1, r:this, '}1A{_'
        callMethod
        push r:this, ']oH'
        getMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push ']oH'
        getMember
        add
        lessThan
        not
        branchIfTrue label33
        push 0, r:this, '4z7Sl'
        callMethod
        pop
       label33:
      end // of function 

      setMember
      push r:1, '4z7Sl'
      function2 () (r:1='this')
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        setRegister r:2
        pop
        push r:2, '8J1xN'
        getMember
        not
        not
        branchIfTrue label34
        push 0, r:2, ';-[;H'
        callMethod
        pop
        branch label35
       label34:
        push r:2, '{SxlZ'
        getMember
        not
        branchIfTrue label35
        push r:2, 1, r:this, ')153L'
        callMethod
        setRegister r:3
        pop
        push r:2, '[b'
        getMember
        push r:2, '[b'
        getMember
        multiply
        push r:2, ']b'
        getMember
        push r:2, ']b'
        getMember
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        push r:this, '[b'
        getMember
        push r:this, '[b'
        getMember
        multiply
        push r:this, ']b'
        getMember
        push r:this, ']b'
        getMember
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        add
        push r:this, ']oH'
        getMember
        push 0.1
        multiply
        add
        setRegister r:4
        pop
        push r:2, '[b', r:3, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:4
        multiply
        setMember
        push r:2, ']b', r:3, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:4
        multiply
        setMember
       label35:
        push r:this, '(Erk5', '*r'
        getVariable
        push '7s'
        getMember
        setMember
        push 10, 1, r:this, '*]Q5}'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '565'
      function2 (r:2=')93A') (r:1='this')
        push r:')93A', '*]Q5}'
        getMember
        push 1, r:this, '*]Q5}'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '*]Q5}'
      function2 (r:2='7') (r:1='this')
        push r:this, 'flash', 100
        setMember
        push r:this, '3=', r:this, '3='
        getMember
        push r:'7'
        subtract
        setMember
        push r:this, '3='
        getMember
        push 0
        greaterThan
        not
        not
        branchIfTrue label36
        push r:this, '2Gr]U'
        getMember
        not
        not
        branchIfTrue label36
        push 0, r:this, ';-[;H'
        callMethod
        pop
       label36:
      end // of function 

      setMember
      push r:1, ';-[;H'
      function2 () (r:1='this')
        push r:this, '(Erk5'
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$k'
        getMember
        push r:this, '-]A'
        getMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$k'
        getMember
        push r:this, '-]A'
        getMember
        getMember
        increment
        setMember
        push 0, r:this, '9T54'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push r:this, '2Gr]U', TRUE
        setMember
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        push 'remove'
        callMethod
        pop
        push r:this, 1, '2u=W='
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push '2u=W=', '-0]rl'
      getVariable
      push 'prototype'
      getMember
      push '9T54'
      getMember
      setVariable
      push '4RW6x', ',v0X'
      getVariable
      push 'prototype'
      getMember
      push '87vE7('
      getMember
      setVariable
      push '8K()'
      getVariable
      not
      not
      branchIfTrue label37
      push '8K()', 0, 'Object'
      new
      setVariable
     label37:
      push '8K()'
      getVariable
      push '=MS78'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '  ZLW', 1
        setMember
        push r:this, '6TvCJ', 2
        setMember
        push r:this, '}Yax5', 1.5
        setMember
        push r:this, '3=', 1
        setMember
      end // of function 

      setRegister r:0
      setMember
      push r:0, '}P{I'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '3fw=f'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '[B;7C'
        getVariable
        push 'call'
        callMethod
        pop
        push 0.77, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 0.2
        multiply
        add
        push 4, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1.57
        multiply
        add
        setRegister r:3
        pop
        push r:this, '[b', r:3, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:this, '}Yax5'
        getMember
        multiply
        setMember
        push r:this, ']b', r:3, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:this, '}Yax5'
        getMember
        multiply
        setMember
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, ']Gu6y'
        getVariable
        push 'call'
        callMethod
        pop
        push 0, r:this, ' DN1t'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '565'
      function2 (r:3=')93A') (r:1='this', r:2='super')
        push r:')93A', r:this, 2, '0cM,'
        getVariable
        push 'call'
        callMethod
        pop
        push r:')93A', '(('
        getMember
        setRegister r:4
        pop
        push r:')93A', ')('
        getMember
        setRegister r:5
        pop
        push r:')93A', 1, r:this, ')153L'
        callMethod
        setRegister r:6
        pop
        push r:this, '3='
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label40
        push 0
        setRegister r:7
        pop
        branch label39
       label38:
        push r:7
        increment
        setRegister r:7
        pop
       label39:
        push r:7, 3
        lessThan
        not
        branchIfTrue label40
        push r:this, 'type'
        getMember
        push 1
        add
        push 1, r:this, '1ZjLt'
        callMethod
        setRegister r:8
        pop
        push r:6, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 1.57
        multiply
        add
        setRegister r:9
        pop
        push 0.5, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 3
        multiply
        add
        setRegister r:10
        pop
        push r:8, '((', r:4
        setMember
        push r:8, ')(', r:5
        setMember
        push r:8, '[b', r:this, '[b'
        getMember
        push r:9, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:10
        multiply
        add
        setMember
        push r:8, ']b', r:this, ']b'
        getMember
        push r:9, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:10
        multiply
        add
        setMember
        push r:8, '6b', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 15
        multiply
        setMember
        push r:8, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:8, '849kV', 0
        setMember
        push r:8, '-iB='
        getMember
        push '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        branch label38
       label40:
      end // of function 

      setMember
      push r:1, '*({1A('
      function2 (r:2=']', r:3='[') (r:1='this')
        push r:this, 'type', r:']'
        setMember
        push r:this, 'size', r:'['
        setMember
        push r:this, 'type'
        getMember
        push 1
        add
        toString
        push 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, 'size'
        getMember
        push 1
        add
        toString
        push 1, r:this, '-iB='
        getMember
        push '0tJ'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, ']oH', '8K()'
        getVariable
        push '=MS78'
        getMember
        push '-Wa['
        getMember
        push r:this, 'size'
        getMember
        getMember
        setMember
        push r:this, '3=', 1, r:this, 'size'
        getMember
        add
        setMember
        push r:this, 'type'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label41
        push r:0, 1
        strictEquals
        branchIfTrue label42
        push r:0, 2
        strictEquals
        branchIfTrue label43
        push r:0, 3
        strictEquals
        branchIfTrue label44
        push r:0, 4
        strictEquals
        branchIfTrue label45
        branch label46
       label41:
        push r:this, '3=', r:this, '3='
        getMember
        decrement
        setMember
        push r:this, '}Yax5', r:this, '}Yax5'
        getMember
        push 0.5
        multiply
        setMember
        branch label46
       label42:
        push r:this, '}Yax5', r:this, '}Yax5'
        getMember
        push 1.25
        multiply
        setMember
        push r:this, '  ZLW', 0
        setMember
        branch label46
       label43:
        push r:this, '}Yax5', r:this, '}Yax5'
        getMember
        push 3
        multiply
        setMember
        branch label46
       label44:
        push r:this, '3=', r:this, '3='
        getMember
        push 2
        multiply
        setMember
        push r:this, '}Yax5', r:this, '}Yax5'
        getMember
        push 1.5
        multiply
        setMember
        push r:this, '6TvCJ', 3
        setMember
        branch label46
       label45:
        push r:this, '}Yax5', r:this, '}Yax5'
        getMember
        push 1.5
        multiply
        setMember
        push r:this, '3=', r:this, '3='
        getMember
        push 4
        multiply
        setMember
        branch label46
       label46:
        push r:this, '69-', r:this, 'size'
        getMember
        push r:this, '6TvCJ'
        getMember
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        push r:this, '3='
        getMember
        push r:this, '}Yax5'
        getMember
        push 0.3
        multiply
        add
        multiply
        setMember
        push r:this, '(Erk5', r:this, 'size'
        getMember
        push 1, ';ndCG'
        getVariable
        push '-Q)9)'
        callMethod
        push '*r'
        getVariable
        push '}ZnD;('
        getMember
        push r:this, 'type'
        getMember
        getMember
        push 2, ';ndCG'
        getVariable
        push '4u57)'
        callMethod
        setMember
        push r:this, '6b', 10, r:this, 'size'
        getMember
        divide
        push 2
        add
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        multiply
        setMember
      end // of function 

      setMember
      push r:1, ';-[;H'
      function2 () (r:1='this', r:2='super')
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push ' xeDq'
        getMember
        dup
        not
        branchIfTrue label47
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        push 'length'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
       label47:
        dup
        branchIfTrue label48
        pop
        push 30, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
       label48:
        not
        branchIfTrue label49
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push ' xeDq', FALSE
        setMember
        push '44{N'
        getVariable
        push '8Z=cb'
        getMember
        push ',XnXA', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, ' p3z='
        new
        setRegister r:3
        pop
        push r:3, '((', r:this, '(('
        getMember
        setMember
        push r:3, ')(', r:this, ')('
        getMember
        setMember
       label49:
        push r:this, 'size'
        getMember
        push r:this, '  ZLW'
        getMember
        greaterThan
        not
        branchIfTrue label52
        push 0
        setRegister r:4
        pop
        branch label51
       label50:
        push r:4
        increment
        setRegister r:4
        pop
       label51:
        push r:4, 2
        lessThan
        not
        branchIfTrue label52
        push r:this, '[b'
        getMember
        push r:this, ']b'
        getMember
        push 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        push 1.57, r:4, 2
        multiply
        push 1
        subtract
        multiply
        add
        setRegister r:5
        pop
        push '44{N'
        getVariable
        push ')MItb'
        getMember
        push '3,w8u', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '8K()'
        getVariable
        push '=MS78'
        newMethod
        setRegister r:6
        pop
        push r:this, 'size'
        getMember
        push 1
        subtract
        push r:this, 'type'
        getMember
        push 2, r:6, '*({1A('
        callMethod
        pop
        push r:5, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:7
        pop
        push r:5, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:8
        pop
        push '8K()'
        getVariable
        push '=MS78'
        getMember
        push '-Wa['
        getMember
        push r:6, 'size'
        getMember
        getMember
        setRegister r:9
        pop
        push r:6, '((', r:this, '(('
        getMember
        push r:7, r:9
        multiply
        add
        setMember
        push r:6, ')(', r:this, ')('
        getMember
        push r:8, r:9
        multiply
        add
        setMember
        push r:6, '[b', r:7, r:6, '}Yax5'
        getMember
        multiply
        setMember
        push r:6, ']b', r:8, r:6, '}Yax5'
        getMember
        multiply
        setMember
        branch label50
       label52:
        push r:this, ']oH'
        getMember
        push 2
        multiply
        push 30
        add
        push 1, r:this, '-)Dz1'
        callMethod
        pop
        push r:this, 'size'
        getMember
        push 1
        add
        push 5
        divide
        push r:this, 'type'
        getMember
        push 1
        add
        push 2, r:this, '[VAGE('
        callMethod
        pop
        push r:this, 1, '+[3N='
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push '+[3N=', '}P{I'
      getVariable
      push 'prototype'
      getMember
      push ';-[;H'
      getMember
      setVariable
      push ']Gu6y', '}P{I'
      getVariable
      push 'prototype'
      getMember
      push '87vE7('
      getMember
      setVariable
      push '[B;7C', '}P{I'
      getVariable
      push 'prototype'
      getMember
      push '3fw=f'
      getMember
      setVariable
      push '0cM,', '}P{I'
      getVariable
      push 'prototype'
      getMember
      push '565'
      getMember
      setVariable
      push r:0, '-Wa[', 100, 50, 25, 12, 6, 5
      initArray
      setMember
      push '*r'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'init'
      function2 () (r:1='this')
      end // of function 

      setMember
      push r:0, '2K'
      function2 (r:2='(', r:3=')', r:4='*') (r:1='this')
        push r:'*', r:')', r:'(', 2, 'Math'
        getVariable
        push 'max'
        callMethod
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        return
      end // of function 

      setMember
      push r:0, ';CYOh'
      function2 (r:2='}J', r:3='3GF', r:4='(v+') (r:1='this')
        push '=', r:'(v+', 16
        shiftRight
        push '0', r:'(v+', 8
        shiftRight
        push 255
        bitwiseAnd
        push ')', r:'(v+', 255
        bitwiseAnd
        push 3
        initObject
        setRegister r:5
        pop
        push r:'}J', 1, 'Color'
        new
        setRegister r:6
        pop
        push r:'3GF', 100
        divide
        setRegister r:7
        pop
        push 'ra', 100, r:'3GF'
        subtract
        int
        push 'ga', 100, r:'3GF'
        subtract
        int
        push 'ba', 100, r:'3GF'
        subtract
        int
        push 'aa', 100, 'rb', r:7, r:5, '='
        getMember
        multiply
        int
        push 'gb', r:7, r:5, '0'
        getMember
        multiply
        int
        push 'bb', r:7, r:5, ')'
        getMember
        multiply
        int
        push 'ab', 0, 8
        initObject
        setRegister r:8
        pop
        push r:8, 1, r:6, 'setTransform'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, ')GiA'
      function2 (r:2='}', r:3='6lA') (r:1='this')
       label53:
        push r:'}', r:'6lA'
        lessThan
        not
        not
        branchIfTrue label54
        push r:'}', r:'6lA'
        subtract
        setRegister r:'}'
        pop
        branch label53
       label54:
        push r:'}', 0
        lessThan
        not
        branchIfTrue label55
        push r:'}', r:'6lA'
        add
        setRegister r:'}'
        pop
        branch label54
       label55:
        push r:'}'
        return
      end // of function 

      setMember
      push r:0, '0Yj1'
      function2 (r:2='}', r:3='6lA') (r:1='this')
       label56:
        push r:'}', r:'6lA'
        greaterThan
        not
        branchIfTrue label57
        push r:'}', r:'6lA', 2
        multiply
        subtract
        setRegister r:'}'
        pop
        branch label56
       label57:
        push r:'}', 0, r:'6lA'
        subtract
        lessThan
        not
        branchIfTrue label58
        push r:'}', r:'6lA', 2
        multiply
        add
        setRegister r:'}'
        pop
        branch label57
       label58:
        push r:'}'
        return
      end // of function 

      setMember
      push r:0, '=OA', 300
      setMember
      push r:0, '*OA', 300
      setMember
      push r:0, '7Q=T,(', 40
      setMember
      push r:0, '5Q;ZC(', 4
      setMember
      push r:0, '}RXB3', 4
      setMember
      push r:0, ',PRRg', 0.25
      setMember
      push r:0, '-)sr;(', 2.5
      setMember
      push r:0, '}ZnD;(', 300, 200, 150, 75, 50, 5
      initArray
      push 1, ';ndCG'
      getVariable
      push '*G6KR'
      callMethod
      setMember
      push r:0, '[s', 5, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '7s', 0, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push ',i0 ['
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push '*DzW'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push ')gv94'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, ',DBRf', 10
        setMember
        push r:this, 'scale', 100
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '3BjX_'
      function2 (r:2='-X') (r:1='this')
        push r:this, 'scale', r:'-X'
        setMember
        push r:this, '-iB='
        getMember
        push '_xscale', r:'-X'
        setMember
        push r:this, '-iB='
        getMember
        push '_yscale', r:'-X'
        setMember
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '2VhU6'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label63
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '2VhU6'
        getMember
        push r:this, ',DBRf'
        getMember
        lessThan
        not
        branchIfTrue label63
        push r:this, '2VhU6'
        getMember
        push r:this, ',DBRf'
        getMember
        divide
        setRegister r:3
        pop
        push r:this, '849kV'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label59
        push r:0, 1
        strictEquals
        branchIfTrue label60
        branch label61
       label59:
        push r:this, '-iB='
        getMember
        push '_xscale', r:this, 'scale'
        getMember
        push r:3
        multiply
        setMember
        push r:this, '-iB='
        getMember
        push '_yscale', r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        setMember
        branch label62
       label60:
        push r:this, '-iB='
        getMember
        push '_yscale', r:this, 'scale'
        getMember
        push r:3
        multiply
        setMember
        branch label62
       label61:
        push r:this, '-iB='
        getMember
        push '_alpha', r:3, 100
        multiply
        setMember
        branch label62
       label62:
        push r:this, '2VhU6'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label63
        push 0, r:this, '9T54'
        callMethod
        pop
       label63:
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push ')gv94'
        getMember
        push 'remove'
        callMethod
        pop
        push r:this, 1, '2u=W='
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push ' p3z='
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push ';={0['
        getMember
        push 'push'
        callMethod
        pop
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '6,Ld)(', 0
        setMember
        push r:this, ']oH', 15
        setMember
        push r:this, '32', r:this, '-iB='
        getMember
        push 1, '+7U K'
        new
        setMember
        push r:this, '*B', 0, r:this, '0Ev2M'
        callMethod
        setMember
        push 0.775, 4, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1.57
        multiply
        add
        setRegister r:4
        pop
        push r:this, '[b', r:4, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push ' p3z='
        getVariable
        push '[c4gL'
        getMember
        multiply
        setMember
        push r:this, ']b', r:4, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push ' p3z='
        getVariable
        push '[c4gL'
        getMember
        multiply
        setMember
        push r:this, '*B'
        getMember
        push 1
        add
        toString
        push 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '0Ev2M'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label65
       label64:
        push r:3
        increment
        setRegister r:3
        pop
       label65:
        push r:3, ' p3z='
        getVariable
        push '*g,kL'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label66
        push r:2, ' p3z='
        getVariable
        push '*g,kL'
        getMember
        push r:3
        getMember
        add
        setRegister r:2
        pop
        branch label64
       label66:
        push r:2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        push 0
        setRegister r:6
        pop
        branch label68
       label67:
        push r:6
        increment
        setRegister r:6
        pop
       label68:
        push r:6, ' p3z='
        getVariable
        push '*g,kL'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label70
        push r:5, ' p3z='
        getVariable
        push '*g,kL'
        getMember
        push r:6
        getMember
        add
        setRegister r:5
        pop
        push r:5, r:4
        greaterThan
        not
        branchIfTrue label69
        push r:6
        return
       label69:
        branch label67
       label70:
        push 0
        return
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push 1, r:this, ',l3O-'
        callMethod
        not
        branchIfTrue label71
        push 0, r:this, '2X}A'
        callMethod
        pop
       label71:
        push r:this, '6,Ld)('
        getMember
        push ' p3z='
        getVariable
        push '7ll[K'
        getMember
        lessThan
        not
        branchIfTrue label72
        push 0, r:this, '(ZcA('
        callMethod
        pop
        branch label73
       label72:
        push r:this, ']oH'
        getMember
        push 1, r:this, '[j0D-'
        callMethod
        not
        branchIfTrue label73
        push 0, r:this, '9T54'
        callMethod
        pop
       label73:
        push r:this, '*B'
        getMember
        push 15
        lessThan
        not
        dup
        not
        branchIfTrue label74
        pop
        push r:this, '*B'
        getMember
        push 17
        greaterThan
        not
       label74:
        not
        branchIfTrue label77
        push 0
        setRegister r:3
        pop
        branch label76
       label75:
        push r:3
        increment
        setRegister r:3
        pop
       label76:
        push r:3, 2
        lessThan
        not
        branchIfTrue label77
        push 1, ',+TFu', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:4
        pop
        push r:this, '*B'
        getMember
        push 14
        subtract
        toString
        push 1, r:4, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:4, '6b', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 10
        multiply
        setMember
        push r:4, '849kV', 1
        setMember
        push r:4, 'scale', 50, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 100
        multiply
        add
        setMember
        push r:4, '-iB='
        getMember
        push '_xscale', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 20
        multiply
        add
        setMember
        push r:4, '-iB='
        getMember
        push '_yscale', r:4, 'scale'
        getMember
        setMember
        push r:4, '-iB='
        getMember
        push '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        push r:4, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:4, '-iB='
        getMember
        push '_x', 0
        setMember
        push r:4, '-iB='
        getMember
        push '_y', 0
        setMember
        branch label75
       label77:
      end // of function 

      setMember
      push r:1, '2X}A'
      function2 () (r:1='this')
        push r:this, '*B'
        getMember
        push 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$b'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '*B'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label78
        push r:0, 1
        strictEquals
        branchIfTrue label78
        push r:0, 2
        strictEquals
        branchIfTrue label78
        push r:0, 3
        strictEquals
        branchIfTrue label78
        push r:0, 4
        strictEquals
        branchIfTrue label78
        push r:0, 5
        strictEquals
        branchIfTrue label79
        push r:0, 6
        strictEquals
        branchIfTrue label79
        push r:0, 7
        strictEquals
        branchIfTrue label79
        push r:0, 8
        strictEquals
        branchIfTrue label79
        push r:0, 9
        strictEquals
        branchIfTrue label79
        push r:0, 10
        strictEquals
        branchIfTrue label79
        push r:0, 11
        strictEquals
        branchIfTrue label79
        push r:0, 12
        strictEquals
        branchIfTrue label79
        push r:0, 13
        strictEquals
        branchIfTrue label79
        push r:0, 14
        strictEquals
        branchIfTrue label79
        push r:0, 15
        strictEquals
        branchIfTrue label80
        push r:0, 16
        strictEquals
        branchIfTrue label80
        push r:0, 17
        strictEquals
        branchIfTrue label80
        branch label81
       label78:
        push r:this, '*B'
        getMember
        push 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push ')p5}4('
        callMethod
        pop
        branch label81
       label79:
        push r:this, '*B'
        getMember
        push 5
        subtract
        push 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '}riE]'
        callMethod
        pop
        branch label81
       label80:
        push ' p3z='
        getVariable
        push '{KJWL'
        getMember
        push r:this, '*B'
        getMember
        push 15
        subtract
        getMember
        setRegister r:2
        pop
        push r:2, 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push '9WJkh', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:3
        pop
        push r:3, '[QL', r:2, 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        setMember
        push r:3, '_x', r:this, '(('
        getMember
        setMember
        push r:3, '_y', r:this, ')('
        getMember
        setMember
        push 0, r:this, '[rKKB'
        callMethod
        pop
        branch label81
       label81:
        push 0, r:this, '9T54'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '[rKKB'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label83
       label82:
        push r:2
        increment
        setRegister r:2
        pop
       label83:
        push r:2, 24
        lessThan
        not
        branchIfTrue label84
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push '=MR4L(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:3
        pop
        push r:this, '*B'
        getMember
        push 14
        subtract
        toString
        push 1, r:3, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:4
        pop
        push r:4, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:5
        pop
        push r:4, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:6
        pop
        push 5, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push r:this, ']oH'
        getMember
        multiply
        add
        setRegister r:7
        pop
        push 0.5, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        add
        setRegister r:8
        pop
        push r:3, '((', r:this, '(('
        getMember
        push r:5, r:7
        multiply
        add
        setMember
        push r:3, ')(', r:this, ')('
        getMember
        push r:6, r:7
        multiply
        add
        setMember
        push r:3, '[b', r:5, r:8
        multiply
        setMember
        push r:3, ']b', r:6, r:8
        multiply
        setMember
        push r:3, '6b', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 20
        multiply
        setMember
        push r:3, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 20
        multiply
        add
        setMember
        push 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 50
        multiply
        add
        push 1, r:3, '3BjX_'
        callMethod
        pop
        push r:3, '-iB='
        getMember
        push '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        push r:3, '849kV', 0
        setMember
        branch label82
       label84:
        push 0
        setRegister r:9
        pop
        branch label86
       label85:
        push r:9
        increment
        setRegister r:9
        pop
       label86:
        push r:9, 12
        lessThan
        not
        branchIfTrue label87
        push 1, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 3
        multiply
        add
        push r:this, ']oH'
        getMember
        push '),HaF(', 3, r:this, '{==W3('
        callMethod
        setRegister r:10
        pop
        push 50, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 100
        multiply
        add
        push 1, r:10, '3BjX_'
        callMethod
        pop
        branch label85
       label87:
      end // of function 

      setMember
      push r:1, '{==W3('
      function2 (r:2='5P55', r:3='=', r:4='[X') (r:1='this')
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push r:'5P55', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:5
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:6
        pop
        push r:6, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:7
        pop
        push r:6, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:8
        pop
        push r:5, '((', r:this, '(('
        getMember
        push r:7, r:'='
        multiply
        add
        setMember
        push r:5, ')(', r:this, ')('
        getMember
        push r:8, r:'='
        multiply
        add
        setMember
        push r:5, '[b', r:7, r:'[X'
        multiply
        setMember
        push r:5, ']b', r:8, r:'[X'
        multiply
        setMember
        push r:5, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:5, '849kV', 0
        setMember
        push r:5
        return
      end // of function 

      setMember
      push r:1, '(ZcA('
      function2 () (r:1='this')
        push r:this, '(('
        getMember
        push r:this, ']oH'
        getMember
        lessThan
        dup
        branchIfTrue label88
        pop
        push r:this, '(('
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        push r:this, ']oH'
        getMember
        subtract
        greaterThan
       label88:
        not
        branchIfTrue label89
        push r:this, '[b', r:this, '[b'
        getMember
        push -1
        multiply
        setMember
        push r:this, '((', '*r'
        getVariable
        push '=OA'
        getMember
        push r:this, ']oH'
        getMember
        subtract
        push r:this, '(('
        getMember
        push r:this, ']oH'
        getMember
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
        push r:this, '6,Ld)(', r:this, '6,Ld)('
        getMember
        increment
        setMember
       label89:
        push r:this, ')('
        getMember
        push r:this, ']oH'
        getMember
        lessThan
        dup
        branchIfTrue label90
        pop
        push r:this, ')('
        getMember
        push '*r'
        getVariable
        push '*OA'
        getMember
        push r:this, ']oH'
        getMember
        subtract
        greaterThan
       label90:
        not
        branchIfTrue label91
        push r:this, ']b', r:this, ']b'
        getMember
        push -1
        multiply
        setMember
        push r:this, ')(', '*r'
        getVariable
        push '*OA'
        getMember
        push r:this, ']oH'
        getMember
        subtract
        push r:this, ')('
        getMember
        push r:this, ']oH'
        getMember
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
        push r:this, '6,Ld)(', r:this, '6,Ld)('
        getMember
        increment
        setMember
       label91:
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push ';={0['
        getMember
        push 'remove'
        callMethod
        pop
        push r:this, 1, '2u=W='
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, ')eK7l', 4
      setMember
      push r:0, '7ll[K', 5
      setMember
      push r:0, '[c4gL', 3
      setMember
      push r:0, '{KJWL', 12000, 3000, 1000, 3
      initArray
      push 1, ';ndCG'
      getVariable
      push '*G6KR'
      callMethod
      setMember
      push r:0, '*g,kL', 5, 50, 300, 0, 0, 0, 0, 7, 20, 80, 70, 30, 70, 1, 80, 30, 100, 120, 18
      initArray
      setMember
      push '+7U K'
      function2 (r:2='}J') (r:1='this')
        push r:this, ')2fr3', r:'}J'
        setMember
        push r:this, '}Zms3', 0, 'Array'
        new
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, ']1sj+'
      function2 () (r:1='this')
        push r:this, ')2fr3'
        getMember
        return
      end // of function 

      setMember
      push r:1, '-fC3a'
      function2 (r:2='59F') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'59F'
        getMember
        setRegister r:3
        pop
        push r:3, NULL
        equals
        not
        branchIfTrue label92
        push '9oK', 0, 'Array'
        new
        push '7-,', 0, 2
        initObject
        setRegister r:3
        pop
        push r:this, '}Zms3'
        getMember
        push r:'59F', r:3
        setMember
       label92:
        push r:3
        return
      end // of function 

      setMember
      push r:1, ']bu40'
      function2 (r:2='[-99') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'[-99'
        getMember
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:7
        pop
        push r:'[-99', 1000
        multiply
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label94
       label93:
        push r:6
        increment
        setRegister r:6
        pop
       label94:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label96
        push r:4, r:6
        getMember
        push '_name'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label95
        push r:8, r:7
        add
        push 1, r:4, r:6
        getMember
        push 'swapDepths'
        callMethod
        pop
        push r:4, r:7, r:4, r:6
        getMember
        setMember
        push r:7
        increment
        setRegister r:7
        pop
       label95:
        branch label93
       label96:
        push r:3, '7-,', r:7
        setMember
      end // of function 

      setMember
      push r:1, '*=_p_'
      function2 (r:2='*KB2', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label97
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'*KB2', 2, r:this, '*=_p_'
        callMethod
        return
       label97:
        push r:6, r:'[-99', 1000
        multiply
        add
        push r:'*KB2', r:this, ')2fr3'
        getMember
        push 3, '3Wt'
        getVariable
        push 'attachMC'
        callMethod
        setRegister r:7
        pop
        push r:5, r:6, r:7
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:7
        return
      end // of function 

      setMember
      push r:1, '18wU*'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push r:5, 1000
        equals
        not
        branchIfTrue label98
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', 1, r:this, '18wU*'
        callMethod
        return
       label98:
        push r:5, r:'[-99', 1000
        multiply
        add
        push r:this, ')2fr3'
        getMember
        push 2, '3Wt'
        getVariable
        push 'createEmptyMC'
        callMethod
        setRegister r:6
        pop
        push r:4, r:5, r:6
        setMember
        push r:3, '7-,', r:3, '7-,'
        getMember
        increment
        setMember
        push r:6
        return
      end // of function 

      setMember
      push r:1, '(GbB}'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label99
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        return
       label99:
        push r:5, r:6, r:'}J'
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:6, r:'[-99', 1000
        multiply
        add
        return
      end // of function 

      setMember
      push r:1, '+2NA'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        push 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, r:'[-99'
        equals
        not
        branchIfTrue label100
        push UNDEF
        return
       label100:
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:5, '7-,'
        getMember
        setRegister r:7
        pop
        push 0
        setRegister r:8
        pop
        branch label102
       label101:
        push r:8
        increment
        setRegister r:8
        pop
       label102:
        push r:8, r:7
        lessThan
        not
        branchIfTrue label104
        push r:6, r:8
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label103
        push r:6, r:8, NULL
        setMember
        branch label104
       label103:
        branch label101
       label104:
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}oQA7'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label105
        push r:6, r:7, NULL
        setMember
        push r:'}J', 1, r:6, 'unshift'
        callMethod
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label105:
      end // of function 

      setMember
      push r:1, '08M8'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label107
        push r:6, r:7, NULL
        setMember
        push r:5, '7-,'
        getMember
        push 1000
        equals
        not
        branchIfTrue label106
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label106:
        push r:5, '7-,'
        getMember
        setRegister r:3
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:3, r:4, 1000
        multiply
        add
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
        push r:6, r:3, r:'}J'
        setMember
       label107:
      end // of function 

      setMember
      push r:1, 'clear'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:4
        pop
        branch label109
       label108:
        push r:4
        increment
        setRegister r:4
        pop
       label109:
        push r:4, r:3, '7-,'
        getMember
        lessThan
        not
        branchIfTrue label110
        push 0, r:5, r:4
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label108
       label110:
        push r:3, '7-,', 0
        setMember
      end // of function 

      setMember
      push r:1, '9(K ;'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push -99999999
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label112
       label111:
        push r:6
        increment
        setRegister r:6
        pop
       label112:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label120
        push r:4, r:6
        getMember
        setRegister r:9
        pop
        push r:9, '_y'
        getMember
        setRegister r:10
        pop
        push r:10, r:8
        lessThan
        not
        not
        branchIfTrue label113
        push r:10
        setRegister r:8
        pop
        branch label119
       label113:
        push r:6
        setRegister r:7
        pop
        branch label115
       label114:
        push r:7
        decrement
        setRegister r:7
        pop
       label115:
        push r:7, 0
        greaterThan
        not
        branchIfTrue label118
        push r:4, r:7, 1
        subtract
        getMember
        setRegister r:11
        pop
        push r:11, '_y'
        getMember
        push r:10
        greaterThan
        not
        branchIfTrue label116
        push r:4, r:7, r:11
        setMember
        push r:11, 1, r:9, 'swapDepths'
        callMethod
        pop
        branch label117
       label116:
        push r:4, r:7, r:9
        setMember
        branch label118
       label117:
        branch label114
       label118:
        push r:7, 0
        equals
        not
        branchIfTrue label119
        push r:4, 0, r:9
        setMember
       label119:
        branch label111
       label120:
      end // of function 

      setMember
      push r:1, 'destroy'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label122
       label121:
        push r:2
        increment
        setRegister r:2
        pop
       label122:
        push r:2, r:this, '}Zms3'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label123
        push r:2, 1, r:this, 'clear'
        callMethod
        pop
        branch label121
       label123:
      end // of function 

      setMember
      push 'flash'
      getVariable
      not
      not
      branchIfTrue label124
      push 'flash', 0, 'Object'
      new
      setVariable
     label124:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      not
      not
      branchIfTrue label125
      push 'flash'
      getVariable
      push 'filters', 0, 'Object'
      new
      setMember
     label125:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      push '{lN=R'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setMember
      push '{-kxL'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '87vE7('
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '4plQ5', '{-kxL'
        getVariable
        push '4plQ5'
        getMember
        increment
        setMember
        push 0, '3Wt'
        getVariable
        push 'getTimer'
        callMethod
        setRegister r:2
        pop
        push '{-kxL'
        getVariable
        push ';ILSy', r:2, '{-kxL'
        getVariable
        push '3R,QM'
        getMember
        subtract
        push 1000.0
        divide
        setMember
        push '{-kxL'
        getVariable
        push '3R,QM', r:2
        setMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        push '{-kxL'
        getVariable
        push ';y}-6('
        getMember
        lessThan
        not
        branchIfTrue label126
        push '{-kxL'
        getVariable
        push '-)Xd+', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        push '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        multiply
        push 1, '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        subtract
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        multiply
        add
        setMember
        branch label127
       label126:
        push '{-kxL'
        getVariable
        push ';ILSy', 1, '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        divide
        setMember
       label127:
        push '{-kxL'
        getVariable
        push '-V;B', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        setMember
      end // of function 

      setMember
      push r:0, 'fps'
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        return
      end // of function 

      setMember
      push r:0, '6GI,F', 32
      setMember
      push r:0, ';y}-6(', 0.5
      setMember
      push r:0, '3R,QM', 0, '3Wt'
      getVariable
      push 'getTimer'
      callMethod
      setMember
      push r:0, '[Ad;n', 0.95
      setMember
      push r:0, '-)Xd+', 1
      setMember
      push r:0, '-V;B', 1
      setMember
      push r:0, ';ILSy', 1
      setMember
      push r:0, '4plQ5', 0
      setMember
      push '=3+P'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '{SxlZ', TRUE
        setMember
        push r:this, '8J1xN', FALSE
        setMember
        push r:this, '(6x((', FALSE
        setMember
        push r:this, '(fc-d', 0.15
        setMember
        push r:this, '1V{f', 0.5
        setMember
        push r:this, ']oH', 10
        setMember
        push r:this, '9O*r', 0
        setMember
        push r:this, '+{eA+', 0.98
        setMember
        push r:this, '58Pa4(', 0, 1
        initArray
        setMember
        push r:this, '*VVp*(', 0, 1
        initArray
        setMember
        push r:this, '+2}gH', 0, '{sRCQ'
        new
        push 1
        initArray
        setMember
        push 0
        setRegister r:4
        pop
        branch label129
       label128:
        push r:4
        increment
        setRegister r:4
        pop
       label129:
        push r:4, 5
        lessThan
        not
        branchIfTrue label130
        push -1, 1, r:this, '+2}gH'
        getMember
        push 0
        getMember
        push 'push'
        callMethod
        pop
        branch label128
       label130:
        push r:this, '+2}gH'
        getMember
        push 0
        getMember
        push 0, 0
        setMember
        push r:this, '5)tE0', NULL, 1
        initArray
        setMember
        push r:this, '*sB-L(', 10, 1
        initArray
        setMember
        push r:this, ')m0vS', 0, 1
        initArray
        setMember
        push r:this, '32', r:this, '-iB='
        getMember
        push 1, '+7U K'
        new
        setMember
        push r:this, '-iB='
        getMember
        setRegister r:5
        pop
        push r:this, '4pUV8', '}J', r:5, '1f'
        getMember
        push '2)X6+', r:5, '88'
        getMember
        push '}CL', 0, 3
        initObject
        push '}J', r:5, '0f'
        getMember
        push '2)X6+', r:5, '78'
        getMember
        push '}CL', 0, 3
        initObject
        push 2
        initArray
        setMember
        push r:this, '84g7x', 0
        setMember
        push r:this, '6{Qei', 0
        setMember
        push r:this, '5)*A_', 0
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '(6x(('
        getMember
        not
        branchIfTrue label131
        push 0, r:this, ' DN1t'
        callMethod
        pop
        branch label132
       label131:
        push 0, r:this, '(ZcA('
        callMethod
        pop
       label132:
        push 0, r:this, ' j)lm'
        callMethod
        pop
        push r:this, '*VVp*(', r:this, '*VVp*('
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        push 1
        initArray
        setMember
        push r:this, ')m0vS', r:this, ')m0vS'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        push 1
        initArray
        setMember
        push 0, r:this, ';Wf{Z'
        callMethod
        pop
        push 0, r:this, '-h=lo'
        callMethod
        pop
        push 0, r:this, '5= as'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '5= as'
      function2 () (r:1='this')
        push r:this, '2LSq2'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label136
        push r:this, '2LSq2', r:this, '2LSq2'
        getMember
        push 0.05, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        setMember
        push 0
        setRegister r:2
        pop
        branch label134
       label133:
        push r:2
        increment
        setRegister r:2
        pop
       label134:
        push r:2, 5, r:this, '2LSq2'
        getMember
        multiply
        lessThan
        not
        branchIfTrue label136
        push '44{N'
        getVariable
        push '-4Nbg'
        getMember
        push '1r[bZ', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:3
        pop
        push r:3, '((', r:this, '(('
        getMember
        setMember
        push r:3, ')(', r:this, ')('
        getMember
        setMember
        push r:3, '[b', r:this, '[b'
        getMember
        setMember
        push r:3, ']b', r:this, ']b'
        getMember
        setMember
        push r:3, '-iB='
        getMember
        push '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        push r:this, '2LSq2'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label135
        push r:this, '2LSq2', NULL
        setMember
       label135:
        branch label133
       label136:
      end // of function 

      setMember
      push r:1, ' j)lm'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label138
       label137:
        push r:2
        increment
        setRegister r:2
        pop
       label138:
        push r:2, r:this, '4pUV8'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label139
        push r:this, '4pUV8'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3, '}CL'
        getMember
        push r:3, '}J'
        getMember
        push '_rotation'
        getMember
        subtract
        setRegister r:4
        pop
        push r:3, '}J'
        getMember
        push '_rotation', r:3, '}J'
        getMember
        push '_rotation'
        getMember
        push r:4, 0.5
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:2, 2
        multiply
        push 1
        subtract
        setRegister r:5
        pop
        push r:3, '2)X6+'
        getMember
        push '_xscale', 0, r:3, '}J'
        getMember
        push '_rotation'
        getMember
        subtract
        push r:5
        multiply
        push 4
        multiply
        setMember
        branch label137
       label139:
        push r:this, '6{Qei'
        getMember
        push r:this, '84g7x'
        getMember
        subtract
        setRegister r:6
        pop
        push r:this, '84g7x', r:this, '84g7x'
        getMember
        push r:6, 0.3
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '-iB='
        getMember
        push '2)X6+'
        getMember
        push '_xscale', r:this, '84g7x'
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '505t0'
      function2 () (r:1='this')
        push r:this, ',VzQ6'
        getMember
        push NULL
        equals
        not
        branchIfTrue label140
        push r:this, '8J1xN', FALSE
        setMember
       label140:
        push r:this, '4pUV8'
        getMember
        push 0
        getMember
        push '}CL', 0
        setMember
        push r:this, '4pUV8'
        getMember
        push 1
        getMember
        push '}CL', 0
        setMember
        push r:this, '6{Qei', 0
        setMember
        push 'Key'
        getVariable
        push 'LEFT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label141
        push -1, 1, r:this, '(VKB'
        callMethod
        pop
       label141:
        push 'Key'
        getVariable
        push 'RIGHT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label142
        push 1, 1, r:this, '(VKB'
        callMethod
        pop
       label142:
        push 'Key'
        getVariable
        push 'UP'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label143
        push 1, 0, 2, r:this, '8Qizc'
        callMethod
        pop
        push r:this, '6{Qei', 100
        setMember
        push 0, 2, 0, 3, r:this, '[=([7('
        callMethod
        pop
       label143:
        push 'Key'
        getVariable
        push 'SPACE'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label144
        push 0, r:this, '2)hi('
        callMethod
        pop
       label144:
        push 'Key'
        getVariable
        push 'DOWN'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        dup
        branchIfTrue label145
        pop
        push 'Key'
        getVariable
        push 'CONTROL'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
       label145:
        not
        branchIfTrue label146
        push 0, r:this, '=cH(N'
        callMethod
        pop
       label146:
      end // of function 

      setMember
      push r:1, '(VKB'
      function2 (r:2='6g,A') (r:1='this')
        push r:this, ',VzQ6'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label147
        push UNDEF
        return
       label147:
        push 45
        setRegister r:3
        pop
        push 'Key'
        getVariable
        push 'SPACE'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        dup
        not
        branchIfTrue label148
        pop
        push 1, 0
        equals
       label148:
        not
        branchIfTrue label149
        push 0.5, r:'6g,A', 1.57
        multiply
        push 2, r:this, '8Qizc'
        callMethod
        pop
        push 70
        setRegister r:3
        pop
        branch label150
       label149:
        push r:this, '9O*r', 3.14, r:this, '9O*r'
        getMember
        push r:'6g,A', r:this, '(fc-d'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 2, '*r'
        getVariable
        push '0Yj1'
        callMethod
        setMember
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '9O*r'
        getMember
        push 0.0174
        divide
        setMember
        push 0.25, r:'6g,A', 2, r:this, '8Qizc'
        callMethod
        pop
        push 0, 1, r:'6g,A', 0.95
        multiply
        push 3, r:this, '[=([7('
        callMethod
        pop
       label150:
        push 0, r:'6g,A'
        subtract
        push 1
        add
        push 0.5
        multiply
        int
        setRegister r:4
        pop
        push r:this, '4pUV8'
        getMember
        push r:4
        getMember
        push '}CL', r:3, r:'6g,A'
        multiply
        setMember
      end // of function 

      setMember
      push r:1, ')p5}4('
      function2 (r:2='*B') (r:1='this')
        push r:this, '+2}gH'
        getMember
        push 0
        getMember
        push r:'*B', '*r'
        getVariable
        push '5Q;ZC('
        getMember
        push r:this, '+2}gH'
        getMember
        push 0
        getMember
        push r:'*B'
        getMember
        push 1
        add
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setMember
        push r:this, '58Pa4(', r:'*B', 1
        initArray
        setMember
        push r:this, '2LSq2', 1
        setMember
      end // of function 

      setMember
      push r:1, '}riE]'
      function2 (r:2='*B') (r:1='this')
        push r:this, '*sB-L(', 100, 1
        initArray
        setMember
        push r:this, '5)tE0', r:'*B', 1
        initArray
        setMember
        push 0, '*r'
        getVariable
        push '+-(0'
        getMember
        push '-]e9-'
        getMember
        push '87vE7('
        callMethod
        pop
        push r:this, '2LSq2', 1
        setMember
      end // of function 

      setMember
      push r:1, '8Qizc'
      function2 (r:2=']J', r:3='+h9w3') (r:1='this')
        push r:this, '[b', r:this, '[b'
        getMember
        push r:this, '9O*r'
        getMember
        push r:']J'
        add
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:this, '1V{f'
        getMember
        multiply
        push r:'+h9w3'
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:this, '9O*r'
        getMember
        push r:']J'
        add
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:this, '1V{f'
        getMember
        multiply
        push r:'+h9w3'
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
      end // of function 

      setMember
      push r:1, '565'
      function2 (r:2=')93A') (r:1='this')
      end // of function 

      setMember
      push r:1, '2)hi('
      function2 () (r:1='this')
        push r:this, '*VVp*('
        getMember
        push 0
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label151
        push UNDEF
        return
       label151:
        push r:this, '58Pa4('
        getMember
        push 0
        getMember
        setRegister r:2
        pop
        push r:this, '+2}gH'
        getMember
        push 0
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        push r:2
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label152
        push r:0, 1
        strictEquals
        branchIfTrue label158
        push r:0, 2
        strictEquals
        branchIfTrue label159
        push r:0, 3
        strictEquals
        branchIfTrue label163
        push r:0, 4
        strictEquals
        branchIfTrue label167
        branch label174
       label152:
        push 1.5, 0.2, r:3, 0.2
        multiply
        add
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:5
        pop
        push r:3, 2
        multiply
        push 1
        add
        setRegister r:6
        pop
        push 0
        setRegister r:7
        pop
        branch label154
       label153:
        push r:7
        increment
        setRegister r:7
        pop
       label154:
        push r:7, r:6
        lessThan
        not
        branchIfTrue label157
        push r:5, r:7, r:6, 1
        subtract
        divide
        push 2
        multiply
        push 1
        subtract
        multiply
        setRegister r:8
        pop
        push r:6, 1
        equals
        not
        branchIfTrue label155
        push 0
        setRegister r:8
        pop
       label155:
        push 6
        setRegister r:9
        pop
        push 1
        setRegister r:10
        pop
        push 50
        setRegister r:11
        pop
        push r:8, 0
        equals
        not
        not
        branchIfTrue label156
        push 6, 1, r:8, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        add
        divide
        setRegister r:9
        pop
        push 2
        setRegister r:10
        pop
        push 38
        setRegister r:11
        pop
       label156:
        push r:this, ']oH'
        getMember
        push 15
        add
        push r:8, r:9, r:10, 4, r:this, '8A1T3('
        callMethod
        setRegister r:12
        pop
        push r:12, '*]Q5}', 1
        setMember
        push r:12, '2VhU6', r:11
        setMember
        push 0, r:12, '{BxJE('
        callMethod
        pop
        branch label153
       label157:
        push 18
        setRegister r:4
        pop
        branch label174
       label158:
        push r:this, ']oH'
        getMember
        push 8
        add
        push 0, 12, 4, 4, r:this, '8A1T3('
        callMethod
        setRegister r:13
        pop
        push r:13, '*]Q5}', 0.75
        setMember
        push r:13, '86{p(', 4, 1
        initArray
        setMember
        push r:13, ']xii)', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 628
        multiply
        setMember
        push r:13, '0{lc4', '=CN8-('
        setMember
        push r:13, '2VhU6', 50, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:13, '(', r:13, '('
        getMember
        push r:13, ']xii)'
        getMember
        push 100
        divide
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push 0.5
        multiply
        add
        setMember
        push 0, r:13, '{BxJE('
        callMethod
        pop
        push r:13, ']oH', 8
        setMember
        push 0, r:13, '4u=dZ'
        callMethod
        pop
        push 11, 2, r:3
        add
        divide
        setRegister r:4
        pop
        branch label174
       label159:
        push 0
        setRegister r:14
        pop
        branch label161
       label160:
        push r:14
        increment
        setRegister r:14
        pop
       label161:
        push r:14, 2
        lessThan
        not
        branchIfTrue label162
        push r:14, 2
        multiply
        push 1
        subtract
        setRegister r:15
        pop
        push r:this, ']oH'
        getMember
        push 8
        add
        push r:15, 0.5
        multiply
        push 8, 5, 4, r:this, '8A1T3('
        callMethod
        setRegister r:16
        pop
        push 0, r:16, '{BxJE('
        callMethod
        pop
        push r:16, '+7', 2
        setMember
        push r:16, '(6x((', TRUE
        setMember
        push r:16, '2VhU6', 32
        setMember
        push r:16, ']oH', 6, r:3, 3
        multiply
        add
        setMember
        push r:16, '-iB='
        getMember
        push '_yscale', 100, r:3, 50
        multiply
        add
        setMember
        push r:16, '{jXZ;(', TRUE
        setMember
        push r:16, '*]Q5}', 0.75, r:3, 0.75
        multiply
        add
        setMember
        push 12
        setRegister r:4
        pop
        branch label160
       label162:
        branch label174
       label163:
        push r:this, ']oH'
        getMember
        push 6
        add
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 0.2
        multiply
        push 7, 7, r:3
        add
        push 4, r:this, '8A1T3('
        callMethod
        setRegister r:17
        pop
        push 1
        setRegister r:18
        pop
        push r:17, '2VhU6', 12, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        push r:3, 5
        multiply
        add
        setMember
        push r:17, '((', r:17, '(('
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push r:18
        multiply
        add
        setMember
        push r:17, ')(', r:17, ')('
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push r:18
        multiply
        add
        setMember
        push r:17, '*]Q5}', 0.14, r:3, 0.08
        multiply
        add
        setMember
        push 0
        setRegister r:4
        pop
        push 0
        setRegister r:19
        pop
        branch label165
       label164:
        push r:19
        increment
        setRegister r:19
        pop
       label165:
        push r:19, r:3, 1
        add
        lessThan
        not
        branchIfTrue label166
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push '),HaF(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:20
        pop
        push r:this, '9O*r'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 0.2
        multiply
        add
        setRegister r:21
        pop
        push r:21, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:22
        pop
        push r:21, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:23
        pop
        push r:this, ']oH'
        getMember
        push 5
        add
        setRegister r:24
        pop
        push 2, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setRegister r:25
        pop
        push r:20, '((', r:this, '(('
        getMember
        push r:22, r:24
        multiply
        add
        setMember
        push r:20, ')(', r:this, ')('
        getMember
        push r:23, r:24
        multiply
        add
        setMember
        push r:20, '[b', r:22, r:25
        multiply
        setMember
        push r:20, ']b', r:23, r:25
        multiply
        setMember
        push r:20, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push 50, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 100
        multiply
        add
        push 1, r:20, '3BjX_'
        callMethod
        pop
        branch label164
       label166:
        branch label174
       label167:
        push r:this, ']oH'
        getMember
        push 16
        add
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 0.2
        multiply
        push 6, 12, 4, r:this, '8A1T3('
        callMethod
        setRegister r:26
        pop
        push r:26, '2VhU6', 36
        setMember
        push r:26, ']oH', 9
        setMember
        push r:26, '86{p(', 3, 1
        initArray
        setMember
        push r:26, '9-', 0.08
        setMember
        push r:26, '[a', 0.1
        setMember
        push r:26, '+7', 3
        setMember
        push 0, r:26, '{BxJE('
        callMethod
        pop
        push 8, r:3, 1
        add
        divide
        setRegister r:4
        pop
        push 0
        setRegister r:27
        pop
        branch label169
       label168:
        push r:27
        increment
        setRegister r:27
        pop
       label169:
        push r:27, 4
        lessThan
        not
        branchIfTrue label170
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push ' r_qd', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:28
        pop
        push r:this, '9O*r'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 0.4
        multiply
        add
        setRegister r:29
        pop
        push r:29, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:30
        pop
        push r:29, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:31
        pop
        push r:this, ']oH'
        getMember
        push 5
        add
        setRegister r:32
        pop
        push 1, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 5
        multiply
        add
        setRegister r:33
        pop
        push r:28, '((', r:this, '(('
        getMember
        push r:30, r:32
        multiply
        add
        setMember
        push r:28, ')(', r:this, ')('
        getMember
        push r:31, r:32
        multiply
        add
        setMember
        push r:28, '[b', r:30, r:33
        multiply
        setMember
        push r:28, ']b', r:31, r:33
        multiply
        setMember
        push r:28, '849kV', 0
        setMember
        push r:28, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 40
        multiply
        add
        push 1, r:28, '3BjX_'
        callMethod
        pop
        branch label168
       label170:
        push 0
        setRegister r:34
        pop
        branch label172
       label171:
        push r:34
        increment
        setRegister r:34
        pop
       label172:
        push r:34, 2
        lessThan
        not
        branchIfTrue label173
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push '),HaF(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:35
        pop
        push r:this, '9O*r'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 0.2
        multiply
        add
        setRegister r:36
        pop
        push r:36, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:37
        pop
        push r:36, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:38
        pop
        push r:this, ']oH'
        getMember
        push 5
        add
        setRegister r:39
        pop
        push 1, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 5
        multiply
        add
        setRegister r:40
        pop
        push r:35, '((', r:this, '(('
        getMember
        push r:37, r:39
        multiply
        add
        setMember
        push r:35, ')(', r:this, ')('
        getMember
        push r:38, r:39
        multiply
        add
        setMember
        push r:35, '[b', r:37, r:40
        multiply
        setMember
        push r:35, ']b', r:38, r:40
        multiply
        setMember
        push r:35, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push 50, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 100
        multiply
        add
        push 1, r:35, '3BjX_'
        callMethod
        pop
        branch label171
       label173:
        push r:this, '[b', r:this, '[b'
        getMember
        push r:26, '[b'
        getMember
        push 0.1
        multiply
        subtract
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:26, ']b'
        getMember
        push 0.1
        multiply
        subtract
        setMember
        branch label174
       label174:
        push r:this, '*VVp*(', r:4, 1
        initArray
        setMember
      end // of function 

      setMember
      push r:1, '=cH(N'
      function2 () (r:1='this')
        push r:this, ')m0vS'
        getMember
        push 0
        getMember
        push 0
        greaterThan
        dup
        branchIfTrue label175
        pop
        push r:this, '*sB-L('
        getMember
        push 0
        getMember
        push 0
        equals
       label175:
        not
        branchIfTrue label176
        push UNDEF
        return
       label176:
        push NULL
        setRegister r:2
        pop
        push NULL
        setRegister r:3
        pop
        push r:this, '5)tE0'
        getMember
        push 0
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label177
        push r:0, 1
        strictEquals
        branchIfTrue label184
        push r:0, 2
        strictEquals
        branchIfTrue label185
        push r:0, 3
        strictEquals
        branchIfTrue label189
        push r:0, 4
        strictEquals
        branchIfTrue label197
        push r:0, 5
        strictEquals
        branchIfTrue label198
        branch label199
       label177:
        push 0
        setRegister r:4
        pop
        branch label179
       label178:
        push r:4
        increment
        setRegister r:4
        pop
       label179:
        push r:4, 2
        lessThan
        not
        branchIfTrue label183
        push 0
        setRegister r:5
        pop
        branch label181
       label180:
        push r:5
        increment
        setRegister r:5
        pop
       label181:
        push r:5, 3
        greaterThan
        not
        not
        branchIfTrue label182
        push 12, r:5, 2
        multiply
        add
        push r:4, 2
        multiply
        push 1
        subtract
        push 1.5, r:5, 1.5
        multiply
        add
        push 3, r:this, ' kTT6'
        callMethod
        pop
        branch label180
       label182:
        branch label178
       label183:
        push 60
        setRegister r:2
        pop
        push 16.5
        setRegister r:3
        pop
        branch label199
       label184:
        push r:this, '8J1xN', TRUE
        setMember
        push 2, '{y6)2(', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:6
        pop
        push r:this, '5)*A_', r:this, '5)*A_'
        getMember
        push 63, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 628
        modulo
        setMember
        push r:this, '5)*A_'
        getMember
        push 100
        divide
        setRegister r:7
        pop
        push 16
        setRegister r:8
        pop
        push r:6, '_xscale', 100, r:7, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:8
        multiply
        add
        setMember
        push r:6, '_yscale', 100, r:7, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:8
        multiply
        add
        setMember
        push 0
        setRegister r:2
        pop
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        setRegister r:3
        pop
        branch label199
       label185:
        push r:this, '{p HX', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:9
        pop
        branch label187
       label186:
        push r:9
        increment
        setRegister r:9
        pop
       label187:
        push r:9, '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label188
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        push r:9
        getMember
        setRegister r:10
        pop
        push '44{N'
        getVariable
        push '8Z=cb'
        getMember
        push '8CoU-', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:11
        pop
        push r:11, '_x', r:this, '(('
        getMember
        setMember
        push r:11, '_y', r:this, ')('
        getMember
        setMember
        push '+Y', r:this, '(('
        getMember
        push ',Y', r:this, ')('
        getMember
        push '[mD', r:this, '(('
        getMember
        push ']mD', r:this, ')('
        getMember
        push '}J', r:11, '}CL', r:10, '4AF', 0, 'max', r:10, 1, r:this, '}1A{_'
        callMethod
        push 8
        initObject
        push 1, r:this, '{p HX'
        getMember
        push 'push'
        callMethod
        pop
        branch label186
       label188:
        push 50
        setRegister r:2
        pop
        push 34
        setRegister r:3
        pop
        branch label199
       label189:
        push '44{N'
        getVariable
        push '-4Nbg'
        getMember
        push ';)QoD', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:12
        pop
        push r:12, '_x', r:this, '(('
        getMember
        setMember
        push r:12, '_y', r:this, ')('
        getMember
        setMember
        push r:12, '_rotation', r:this, '-iB='
        getMember
        push '_rotation'
        getMember
        setMember
        push NULL
        setRegister r:13
        pop
        push NULL
        setRegister r:14
        pop
        push 0
        setRegister r:15
        pop
       label190:
        push TRUE
        not
        branchIfTrue label196
        push TRUE
        setRegister r:16
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '*r'
        getVariable
        push '=OA'
        getMember
        multiply
        setRegister r:13
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '*r'
        getVariable
        push '*OA'
        getMember
        multiply
        setRegister r:14
        pop
        push 0
        setRegister r:17
        pop
        branch label192
       label191:
        push r:17
        increment
        setRegister r:17
        pop
       label192:
        push r:17, '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label194
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        push r:17
        getMember
        setRegister r:18
        pop
        push '((', r:13, ')(', r:14, 2
        initObject
        push 1, r:18, '}1A{_'
        callMethod
        push 150, r:15, 2
        multiply
        subtract
        lessThan
        not
        branchIfTrue label193
        push FALSE
        setRegister r:16
        pop
        branch label194
       label193:
        branch label191
       label194:
        push r:16
        not
        branchIfTrue label195
        branch label196
       label195:
        push r:15
        increment
        setRegister r:15
        pop
        branch label190
       label196:
        push r:this, '((', r:13
        setMember
        push r:this, ')(', r:14
        setMember
        push 40
        setRegister r:2
        pop
        push 50
        setRegister r:3
        pop
        branch label199
       label197:
        push r:this, ',VzQ6', 60
        setMember
        push 26
        setRegister r:19
        pop
        push r:this, '[b', r:this, '9O*r'
        getMember
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:19
        multiply
        setMember
        push r:this, ']b', r:this, '9O*r'
        getMember
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:19
        multiply
        setMember
        push r:this, ' w4Gn', 1, ' w4Gn', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '8J1xN', TRUE
        setMember
        push r:this, '{SxlZ', FALSE
        setMember
        push r:this, '(6x((', TRUE
        setMember
        push r:this, ',VzQ6'
        getMember
        push 10
        add
        setRegister r:2
        pop
        push 25
        setRegister r:3
        pop
        branch label199
       label198:
        push r:this, ']oH'
        getMember
        push 10
        add
        push 0, 10, 6, 4, r:this, '8A1T3('
        callMethod
        setRegister r:20
        pop
        push r:20, '2VhU6', 100
        setMember
        push 5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        add
        toString
        push 1, r:20, '-iB='
        getMember
        push '0tJ'
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push 0
        setRegister r:2
        pop
        push 0.5
        setRegister r:3
        pop
        branch label199
       label199:
        push r:this, '*sB-L(', 0, r:this, '*sB-L('
        getMember
        push 0
        getMember
        push r:3
        subtract
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        push 1
        initArray
        setMember
        push r:this, ')m0vS', r:2, 1
        initArray
        setMember
        push 0, '*r'
        getVariable
        push '+-(0'
        getMember
        push '-]e9-'
        getMember
        push '87vE7('
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ';Wf{Z'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label201
       label200:
        push r:2
        increment
        setRegister r:2
        pop
       label201:
        push r:2, r:this, '{p HX'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label205
        push r:this, '{p HX'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3, '}CL'
        getMember
        push '(('
        getMember
        push r:3, '+Y'
        getMember
        subtract
        setRegister r:4
        pop
        push r:3, '}CL'
        getMember
        push ')('
        getMember
        push r:3, ',Y'
        getMember
        subtract
        setRegister r:5
        pop
        push r:3, '4AF', r:3, '4AF'
        getMember
        push 8, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:3, '4AF'
        getMember
        push r:3, 'max'
        getMember
        divide
        setRegister r:6
        pop
        push r:6, 1
        lessThan
        not
        branchIfTrue label203
        push r:3, '}J'
        getMember
        push '_x', r:3, '+Y'
        getMember
        push r:4, r:6
        multiply
        add
        setMember
        push r:3, '}J'
        getMember
        push '_y', r:3, ',Y'
        getMember
        push r:5, r:6
        multiply
        add
        push r:6, 3.14
        multiply
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push 60
        multiply
        subtract
        setMember
        push r:3, '}J'
        getMember
        push '_x'
        getMember
        push r:3, '[mD'
        getMember
        subtract
        setRegister r:7
        pop
        push r:3, '}J'
        getMember
        push '_y'
        getMember
        push r:3, ']mD'
        getMember
        subtract
        setRegister r:8
        pop
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push ']fZWx', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:9
        pop
        push r:9, '_x', r:3, '}J'
        getMember
        push '_x'
        getMember
        setMember
        push r:9, '_y', r:3, '}J'
        getMember
        push '_y'
        getMember
        setMember
        push r:9, '_xscale', r:7, r:7
        multiply
        push r:8, r:8
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        setMember
        push r:9, '_rotation', r:7, r:8, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        push 0.0174
        divide
        setMember
        push r:3, '[mD', r:3, '}J'
        getMember
        push '_x'
        getMember
        setMember
        push r:3, ']mD', r:3, '}J'
        getMember
        push '_y'
        getMember
        setMember
        push 2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label202
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push '=,Y-r', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:10
        pop
        push r:10, '((', r:3, '}J'
        getMember
        push '_x'
        getMember
        setMember
        push r:10, ')(', r:3, '}J'
        getMember
        push '_y'
        getMember
        setMember
        push 40, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 150
        multiply
        add
        push 1, r:10, '3BjX_'
        callMethod
        pop
        push r:10, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:10, '[b', r:7, 0.1
        multiply
        setMember
        push r:10, ']b', r:8, 0.1
        multiply
        setMember
        push r:10, '849kV', 0
        setMember
       label202:
        branch label204
       label203:
        push 0, r:3, '}CL'
        getMember
        push ';-[;H'
        callMethod
        pop
        push 1, r:2, r:2
        decrement
        setRegister r:2
        pop
        push 2, r:this, '{p HX'
        getMember
        push 'splice'
        callMethod
        pop
        push 0, r:3, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
       label204:
        branch label200
       label205:
      end // of function 

      setMember
      push r:1, '-h=lo'
      function2 () (r:1='this')
        push r:this, ',VzQ6'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label206
        push r:this, ',VzQ6', r:this, ',VzQ6'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, ',VzQ6'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label206
        push r:this, ',VzQ6', NULL
        setMember
        push '8Ugi)', 1, r:this, ' w4Gn'
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push r:this, '{SxlZ', TRUE
        setMember
        push r:this, '(6x((', FALSE
        setMember
       label206:
      end // of function 

      setMember
      push r:1, '8A1T3('
      function2 (r:2=' IWA+', r:3='}Yax5', r:4='3u(', r:5='5T6+') (r:1='this')
        push r:'3u(', NULL
        equals
        not
        branchIfTrue label207
        push 0
        setRegister r:'3u('
        pop
       label207:
        push r:'5T6+', NULL
        equals
        not
        branchIfTrue label208
        push r:this, ']oH'
        getMember
        setRegister r:'5T6+'
        pop
       label208:
        push '44{N'
        getVariable
        push '8Z=cb'
        getMember
        push '97mPC', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '2C0['
        new
        setRegister r:6
        pop
        push r:' IWA+'
        toString
        push 1, r:6, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '9O*r'
        getMember
        push r:'3u('
        add
        setRegister r:7
        pop
        push r:7, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:8
        pop
        push r:7, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:9
        pop
        push r:6, '((', r:this, '(('
        getMember
        push r:8, r:'5T6+'
        multiply
        add
        setMember
        push r:6, ')(', r:this, ')('
        getMember
        push r:9, r:'5T6+'
        multiply
        add
        setMember
        push r:6, '[b', r:8, r:'}Yax5'
        multiply
        setMember
        push r:6, ']b', r:9, r:'}Yax5'
        multiply
        setMember
        push r:6, '*g;o', TRUE
        setMember
        push r:6, '*]Q5}', 1
        setMember
        push r:6, '}Yax5', r:'}Yax5'
        setMember
        push r:6, '(', r:7
        setMember
        push r:6
        return
      end // of function 

      setMember
      push r:1, ' kTT6'
      function2 (r:2='}Yax5', r:3='*J4A', r:4=';)bt5') (r:1='this')
        push r:this, ']oH'
        getMember
        push r:'*J4A', 1.8
        multiply
        push r:'}Yax5', 3, 4, r:this, '8A1T3('
        callMethod
        setRegister r:5
        pop
        push r:5, '8s]Xp', '[b', r:this, '9O*r'
        getMember
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push 0.8
        multiply
        push ']b', r:this, '9O*r'
        getMember
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push 0.8
        multiply
        push ';)bt5', r:';)bt5', 3
        initObject
        setMember
        push r:5, '+{eA+', 0.95
        setMember
        push r:5, '*]Q5}', 1
        setMember
        push r:5, '-iB='
        getMember
        push '_rotation', r:this, '-iB='
        getMember
        push '_rotation'
        getMember
        setMember
        push r:5, ']oH', 8
        setMember
        push r:5, '2VhU6', 80, r:';)bt5'
        add
        setMember
        push r:5, '+7', 1
        setMember
        push r:5, '(6x((', TRUE
        setMember
        push r:5, '-iB='
        getMember
        push '0tJ'
        getMember
        push '5t 9)', 1, r:';)bt5'
        add
        setMember
        push r:5
        return
      end // of function 

      setMember
      push r:1, '61[s5'
      function2 () (r:1='this')
      end // of function 

      setMember
      push r:1, ';-[;H'
      function2 () (r:1='this')
        push r:this, ']oH'
        getMember
        push 2
        multiply
        push 20
        add
        push 1, r:this, '-)Dz1'
        callMethod
        pop
        push 1, 10, 2, r:this, '[VAGE('
        callMethod
        pop
        push 0, r:this, '9T54'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
       label209:
        push r:this, '{p HX'
        getMember
        push 'length'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label210
        push 0, 0, r:this, '{p HX'
        getMember
        push 'pop'
        callMethod
        push '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label209
       label210:
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01', NULL
        setMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push 1, ';ndCG'
        getVariable
        push '7T4cF('
        callMethod
        pop
        push r:this, 1, '2u=W='
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '(ZcA('
      function2 () (r:1='this')
        push -0.75
        setRegister r:2
        pop
        push r:this, '(('
        getMember
        push r:this, ']oH'
        getMember
        lessThan
        dup
        branchIfTrue label211
        pop
        push r:this, '(('
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        push r:this, ']oH'
        getMember
        subtract
        greaterThan
       label211:
        not
        branchIfTrue label212
        push r:this, '[b', r:this, '[b'
        getMember
        push r:2
        multiply
        setMember
        push r:this, '((', '*r'
        getVariable
        push '=OA'
        getMember
        push r:this, ']oH'
        getMember
        subtract
        push r:this, '(('
        getMember
        push r:this, ']oH'
        getMember
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
       label212:
        push r:this, ')('
        getMember
        push r:this, ']oH'
        getMember
        lessThan
        dup
        branchIfTrue label213
        pop
        push r:this, ')('
        getMember
        push '*r'
        getVariable
        push '*OA'
        getMember
        push r:this, ']oH'
        getMember
        subtract
        greaterThan
       label213:
        not
        branchIfTrue label214
        push r:this, ']b', r:this, ']b'
        getMember
        push r:2
        multiply
        setMember
        push r:this, ')(', '*r'
        getVariable
        push '*OA'
        getMember
        push r:this, ']oH'
        getMember
        subtract
        push r:this, ')('
        getMember
        push r:this, ']oH'
        getMember
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
       label214:
      end // of function 

      setMember
      push r:1, '[=([7('
      function2 (r:2='3u(', r:3='max', r:4=';KO') (r:1='this')
        push 0
        setRegister r:5
        pop
        branch label216
       label215:
        push r:5
        increment
        setRegister r:5
        pop
       label216:
        push r:5, r:max
        lessThan
        not
        branchIfTrue label217
        push '44{N'
        getVariable
        push '-4Nbg'
        getMember
        push '7LeMK(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:6
        pop
        push r:this, ']oH'
        getMember
        push 5
        add
        push r:5, 4
        multiply
        add
        setRegister r:7
        pop
        push r:this, '9O*r'
        getMember
        push 3.14
        subtract
        push r:'3u('
        add
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:8
        pop
        push r:this, '9O*r'
        getMember
        push 3.14
        subtract
        push r:'3u('
        add
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:9
        pop
        push r:6, '((', r:this, '(('
        getMember
        push r:8, r:7
        multiply
        add
        setMember
        push r:6, ')(', r:this, ')('
        getMember
        push r:9, r:7
        multiply
        add
        setMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:10
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 16
        multiply
        setRegister r:11
        pop
        push r:10, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:11
        multiply
        setRegister r:12
        pop
        push r:10, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:11
        multiply
        setRegister r:13
        pop
        push r:6, '((', r:6, '(('
        getMember
        push r:12
        add
        setMember
        push r:6, ')(', r:6, ')('
        getMember
        push r:13
        add
        setMember
        push r:6, '-iB='
        getMember
        push '0tJ'
        getMember
        push '_x', r:6, '-iB='
        getMember
        push '0tJ'
        getMember
        push '_x'
        getMember
        push r:12, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 2
        multiply
        add
        subtract
        setMember
        push r:6, '-iB='
        getMember
        push '0tJ'
        getMember
        push '_y', r:6, '-iB='
        getMember
        push '0tJ'
        getMember
        push '_y'
        getMember
        push r:13, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 2
        multiply
        add
        subtract
        setMember
        push r:6, '[b', r:8, 1.5
        multiply
        push r:max
        multiply
        setMember
        push r:6, ']b', r:9, 1.5
        multiply
        push r:max
        multiply
        setMember
        push r:6, '6b', 20, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        multiply
        setMember
        push r:6, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        branch label215
       label217:
      end // of function 

      setMember
      push '(WBt)'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ']}Ou;(', 1
      setMember
      push r:0, '3I0pG', 2
      setMember
      push r:0, '{;7F4', 3
      setMember
      push r:0, '8U(wu', 4
      setMember
      push r:0, '}[cpB', 5
      setMember
      push r:0, '9xv]A', 6
      setMember
      push r:0, '{yQ=Q', 7
      setMember
      push r:0, '+,W', 8
      setMember
      push r:0, '2y+dV', 9
      setMember
      push r:0, '(tBee', 10
      setMember
      push r:0, '3)i[=', 11
      setMember
      push r:0, ' J3IC', 12
      setMember
      push r:0, '[6jRc', 13
      setMember
      push r:0, ')8Fyj', 14
      setMember
      push '2C0['
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push 0, r:this, '-iB='
        getMember
        push 'stop'
        callMethod
        pop
        push r:this, '{jXZ;(', FALSE
        setMember
        push r:this, '8J1xN', FALSE
        setMember
        push r:this, ']oH', 4
        setMember
        push r:this, '*]Q5}', 0
        setMember
        push r:this, '+7', 0
        setMember
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '2xEr8'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '86{p(', 0, 'Array'
        new
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '(6x(('
        getMember
        not
        branchIfTrue label218
        push 0, r:this, ' DN1t'
        callMethod
        pop
       label218:
        push r:this, '2VhU6'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label225
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '2VhU6'
        getMember
        push 10
        lessThan
        not
        branchIfTrue label225
        push r:this, '+7'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label219
        push r:0, 3
        strictEquals
        branchIfTrue label220
        branch label221
       label219:
        push r:this, '-iB='
        getMember
        push '_alpha', 10, r:this, '2VhU6'
        getMember
        multiply
        setMember
        branch label221
       label220:
        push r:this, '-iB='
        getMember
        push '_xscale', 10, r:this, '2VhU6'
        getMember
        multiply
        setMember
        push r:this, '-iB='
        getMember
        push '_yscale', 10, r:this, '2VhU6'
        getMember
        multiply
        setMember
        branch label221
       label221:
        push r:this, '2VhU6'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label225
        push r:this, '2VhU6', NULL
        setMember
        push r:this, '+7'
        getMember
        setRegister r:0
        push 1
        strictEquals
        branchIfTrue label222
        push r:0, 2
        strictEquals
        branchIfTrue label223
        branch label224
       label222:
        push r:this, ']oH'
        getMember
        push 2
        multiply
        push 40
        add
        push 1, r:this, '-)Dz1'
        callMethod
        pop
        push r:this, ']oH'
        getMember
        push 2
        multiply
        push 20
        add
        push 1, r:this, '}Wz87('
        callMethod
        pop
        push 0, r:this, '9T54'
        callMethod
        pop
        branch label225
       label223:
        push '8Ugi)', 1, r:this, '-iB='
        getMember
        push '0tJ'
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        branch label225
       label224:
        push 0, r:this, '9T54'
        callMethod
        pop
        branch label225
       label225:
        push 0, r:this, '8J2Jt'
        callMethod
        pop
        push 0, r:this, '9Lq;O'
        callMethod
        pop
        push 100, 1, r:this, '[j0D-'
        callMethod
        not
        branchIfTrue label226
        push 0, r:this, '9T54'
        callMethod
        pop
       label226:
      end // of function 

      setMember
      push r:1, '4u=dZ'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, ';IHn;'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '}O', '((', r:this, '(('
        getMember
        push ')(', r:this, ')('
        getMember
        push 2
        initObject
        setMember
      end // of function 

      setMember
      push r:1, '9Lq;O'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label228
       label227:
        push r:2
        increment
        setRegister r:2
        pop
       label228:
        push r:2, r:this, '86{p('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label240
        push r:this, '86{p('
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label229
        push r:0, 3
        strictEquals
        branchIfTrue label230
        push r:0, 4
        strictEquals
        branchIfTrue label235
        push r:0, 5
        strictEquals
        branchIfTrue label236
        branch label239
       label229:
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '-iB='
        getMember
        push '_rotation'
        getMember
        push r:this, '6b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        branch label239
       label230:
        push 0, r:this, '08i_Z'
        callMethod
        pop
        push r:this, '}CL'
        getMember
        push NULL
        equals
        not
        branchIfTrue label231
        branch label239
       label231:
        push r:this, '}CL'
        getMember
        push 1, r:this, ')153L'
        callMethod
        push r:this, '('
        getMember
        subtract
        setRegister r:4
        pop
       label232:
        push r:4, 3.14
        greaterThan
        not
        branchIfTrue label233
        push r:4, 6.28
        subtract
        setRegister r:4
        pop
        branch label232
       label233:
        push r:4, -3.14
        lessThan
        not
        branchIfTrue label234
        push r:4, 6.28
        add
        setRegister r:4
        pop
        branch label233
       label234:
        push r:this, '(', r:this, '('
        getMember
        push r:this, '[a'
        getMember
        push r:4, r:this, '9-'
        getMember
        multiply
        push 0, r:this, '[a'
        getMember
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push 0, r:this, ',43dZ'
        callMethod
        pop
        branch label239
       label235:
        push r:this, ']xii)', r:this, ']xii)'
        getMember
        push 43, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 628
        modulo
        setMember
        push r:this, '(', r:this, '('
        getMember
        push r:this, ']xii)'
        getMember
        push 100
        divide
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push 0.2
        multiply
        add
        setMember
        push 0, r:this, ',43dZ'
        callMethod
        pop
        branch label239
       label236:
        push r:this, '[b'
        getMember
        push r:this, '[b'
        getMember
        multiply
        push r:this, ']b'
        getMember
        push r:this, ']b'
        getMember
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        push 3
        lessThan
        dup
        branchIfTrue label237
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        push 0.1
        lessThan
       label237:
        not
        branchIfTrue label238
        push r:this, '(', 4, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1.57
        multiply
        setMember
        push r:this, '[b', r:this, '('
        getMember
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:this, '}Yax5'
        getMember
        multiply
        setMember
        push r:this, ']b', r:this, '('
        getMember
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:this, '}Yax5'
        getMember
        multiply
        setMember
       label238:
        branch label239
       label239:
        branch label227
       label240:
        push r:this, '8s]Xp'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label242
        push r:this, '8s]Xp'
        getMember
        push ';)bt5'
        getMember
        push NULL
        equals
        not
        branchIfTrue label241
        push r:this, '[b', r:this, '[b'
        getMember
        push r:this, '8s]Xp'
        getMember
        push '[b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:this, '8s]Xp'
        getMember
        push ']b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        branch label242
       label241:
        push r:this, '8s]Xp'
        getMember
        push ';)bt5', r:this, '8s]Xp'
        getMember
        push ';)bt5'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '8s]Xp'
        getMember
        push ';)bt5'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label242
        push r:this, '8s]Xp'
        getMember
        push ';)bt5', NULL
        setMember
       label242:
        push r:this, '0{lc4'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label243
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push '=CN8-(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:5
        pop
        push r:5, '_rotation', 180, r:this, '}O'
        getMember
        push 1, r:this, ')153L'
        callMethod
        push 0.0174
        divide
        add
        setMember
        push r:5, '_xscale', r:this, '}O'
        getMember
        push 1, r:this, '}1A{_'
        callMethod
        setMember
        push r:5, '_x', r:this, '(('
        getMember
        setMember
        push r:5, '_y', r:this, ')('
        getMember
        setMember
        push r:this, '}O', '((', r:this, '(('
        getMember
        push ')(', r:this, ')('
        getMember
        push 2
        initObject
        setMember
       label243:
      end // of function 

      setMember
      push r:1, ',43dZ'
      function2 () (r:1='this')
        push r:this, '[b', r:this, '('
        getMember
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:this, '}Yax5'
        getMember
        multiply
        setMember
        push r:this, ']b', r:this, '('
        getMember
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:this, '}Yax5'
        getMember
        multiply
        setMember
        push 0, r:this, '{BxJE('
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '08i_Z'
      function2 () (r:1='this')
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        setRegister r:2
        pop
        push 1, 0
        divide
        setRegister r:3
        pop
        push r:this, '}CL', NULL
        setMember
        push 0
        setRegister r:4
        pop
        branch label245
       label244:
        push r:4
        increment
        setRegister r:4
        pop
       label245:
        push r:4, r:2, 'length'
        getMember
        lessThan
        not
        branchIfTrue label247
        push r:2, r:4
        getMember
        setRegister r:5
        pop
        push r:5, 1, r:this, '}1A{_'
        callMethod
        setRegister r:6
        pop
        push r:6, r:3
        lessThan
        not
        branchIfTrue label246
        push r:this, '}CL', r:5
        setMember
        push r:6
        setRegister r:3
        pop
       label246:
        branch label244
       label247:
        push r:2, 'length'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label248
        push r:this, '}CL', r:2, r:2, 'length'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        getMember
        setMember
        branch label249
       label248:
        push r:this, '}CL', NULL
        setMember
       label249:
      end // of function 

      setMember
      push r:1, '8J2Jt'
      function2 () (r:1='this')
        push r:this, '*g;o'
        getMember
        not
        branchIfTrue label256
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label251
       label250:
        push r:3
        increment
        setRegister r:3
        pop
       label251:
        push r:3, r:2, 'length'
        getMember
        lessThan
        not
        branchIfTrue label255
        push r:2, r:3
        getMember
        setRegister r:4
        pop
        push r:4, 1, r:this, '}1A{_'
        callMethod
        push r:this, ']oH'
        getMember
        push r:4, ']oH'
        getMember
        add
        lessThan
        not
        branchIfTrue label254
        push r:4, 1, r:this, '4,U=3'
        callMethod
        pop
        push r:4, '3='
        getMember
        setRegister r:5
        pop
        push r:this, 1, r:4, '565'
        callMethod
        pop
        push r:this, '8J1xN'
        getMember
        not
        not
        branchIfTrue label254
        push r:this, '{jXZ;('
        getMember
        dup
        not
        branchIfTrue label252
        pop
        push r:5, r:this, '*]Q5}'
        getMember
        lessThan
       label252:
        not
        branchIfTrue label253
        push r:this, '*]Q5}', r:this, '*]Q5}'
        getMember
        push r:5
        subtract
        setMember
        branch label254
       label253:
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push '-O_ y', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:6
        pop
        push r:6, '_x', r:this, '(('
        getMember
        setMember
        push r:6, '_y', r:this, ')('
        getMember
        setMember
        push 0, r:this, '9T54'
        callMethod
        pop
        push UNDEF
        return
       label254:
        branch label250
       label255:
        branch label257
       label256:
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        setRegister r:7
        pop
        push r:7, 1, r:this, '}1A{_'
        callMethod
        setRegister r:8
        pop
        push r:8, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push ']oH'
        getMember
        push r:this, ']oH'
        getMember
        add
        lessThan
        not
        branchIfTrue label257
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '565'
        callMethod
        pop
        push 0, r:this, '9T54'
        callMethod
        pop
       label257:
        push r:this, ']oH'
        getMember
        push 1, r:this, '[j0D-'
        callMethod
        not
        branchIfTrue label258
        push 0, r:this, '9T54'
        callMethod
        pop
       label258:
      end // of function 

      setMember
      push r:1, '4,U=3'
      function2 (r:2='6 *') (r:1='this')
        push 0
        setRegister r:3
        pop
        branch label260
       label259:
        push r:3
        increment
        setRegister r:3
        pop
       label260:
        push r:3, r:this, '86{p('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label267
        push r:this, '86{p('
        getMember
        push r:3
        getMember
        setRegister r:4
        pop
        push r:4
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label261
        branch label266
       label261:
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:6
        pop
        branch label263
       label262:
        push r:6
        increment
        setRegister r:6
        pop
       label263:
        push r:6, r:5, 'length'
        getMember
        lessThan
        not
        branchIfTrue label265
        push r:5, r:6
        getMember
        setRegister r:7
        pop
        push r:7, r:'6 *'
        equals
        not
        not
        branchIfTrue label264
        push r:7, 1, r:this, '}1A{_'
        callMethod
        push r:7, ']oH'
        getMember
        push r:this, ']oH'
        getMember
        add
        push 36
        add
        lessThan
        not
        branchIfTrue label264
        push r:this, 1, r:7, '565'
        callMethod
        pop
       label264:
        branch label262
       label265:
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push '22pr)(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:8
        pop
        push r:8, '((', r:this, '(('
        getMember
        setMember
        push r:8, ')(', r:this, ')('
        getMember
        setMember
        push r:8, '+{eA+', NULL
        setMember
        push 0, r:8, '4u=dZ'
        callMethod
        pop
        branch label266
       label266:
        branch label259
       label267:
      end // of function 

      setMember
      push r:1, '3U*}=('
      function2 (r:2='7') (r:1='this')
        push r:'7'
        toString
        push 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '{BxJE('
      function2 () (r:1='this')
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '[b'
        getMember
        push r:this, ']b'
        getMember
        push 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        push 0.0174
        divide
        setMember
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '2xEr8'
        getMember
        push 'remove'
        callMethod
        pop
        push r:this, 1, '2u=W='
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push ';IHn;', '-0]rl'
      getVariable
      push 'prototype'
      getMember
      push '4u=dZ'
      getMember
      setVariable
      push '44{N'
      function2 (r:2='}J') (r:1='this')
        push '*r'
        getVariable
        push '+-(0', r:this
        setMember
        push r:this, '32', r:'}J', 1, '+7U K'
        new
        setMember
        push r:this, '-iB=', r:'}J'
        setMember
        push r:this, '7Qe;6', 0, 'Array'
        new
        setMember
        push r:this, '2xEr8', 0, 'Array'
        new
        setMember
        push r:this, '53RYu', 0, 'Array'
        new
        setMember
        push r:this, ';={0[', 0, 'Array'
        new
        setMember
        push r:this, ';+', '44{N'
        getVariable
        push '4MvcB'
        getMember
        push '0o*6', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '4,01', '44{N'
        getVariable
        push '-hCnb'
        getMember
        push ')+jEC', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '=3+P'
        new
        setMember
        push r:this, '4,01'
        getMember
        push '((', '*r'
        getVariable
        push '=OA'
        getMember
        push 0.5
        multiply
        setMember
        push r:this, '4,01'
        getMember
        push ')(', '*r'
        getVariable
        push '*OA'
        getMember
        push 0.5
        multiply
        setMember
        push r:this, '-]e9-', '44{N'
        getVariable
        push '4QvZJ'
        getMember
        push 1, r:this, '32'
        getMember
        push '18wU*'
        callMethod
        push 1, '=5haE'
        new
        setMember
        push r:this, '-]e9-'
        getMember
        push '1', r:this, '4,01'
        getMember
        setMember
        push r:this, 'draw', '44{N'
        getVariable
        push ',N)rb'
        getMember
        push 1, r:this, '32'
        getMember
        push '18wU*'
        callMethod
        setMember
        push r:this, '-_X}5', '$k', 0, 0, 0, 0, 0, 5
        initArray
        push '$b', 0
        initArray
        push 2
        initObject
        setMember
        push r:this, '1T=', 1
        setMember
        push 1, 1, r:this, '5Hy6b'
        callMethod
        pop
        push '44{N'
        getVariable
        push '9V[[2'
        getMember
        not
        branchIfTrue label268
        push r:this, '=11Rh', TRUE
        setMember
        push 0, r:this, '9t1r1'
        callMethod
        pop
       label268:
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '9t1r1'
      function2 () (r:1='this')
        push 'onKeyDown', ']668C(', r:this, 2, '3Wt'
        getVariable
        push 'callback'
        callMethod
        push 'onKeyUp', '=(D=5', r:this, 2, '3Wt'
        getVariable
        push 'callback'
        callMethod
        push 2
        initObject
        setRegister r:2
        pop
        push r:2, 1, 'Key'
        getVariable
        push 'addListener'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ']668C('
      function2 () (r:1='this')
        push r:this, '=11Rh'
        getMember
        not
        branchIfTrue label274
        push 0, 'Key'
        getVariable
        push 'getCode'
        callMethod
        setRegister r:2
        pop
        push r:2, 96
        lessThan
        not
        dup
        not
        branchIfTrue label269
        pop
        push r:2, 107
        lessThan
       label269:
        not
        branchIfTrue label270
        push r:2, 96
        subtract
        push 1, r:this, '4,01'
        getMember
        push '}riE]'
        callMethod
        pop
       label270:
        push r:2, 49
        lessThan
        not
        dup
        not
        branchIfTrue label271
        pop
        push r:2, 54
        lessThan
       label271:
        not
        branchIfTrue label272
        push r:2, 49
        subtract
        push 1, r:this, '4,01'
        getMember
        push ')p5}4('
        callMethod
        pop
       label272:
        push r:2, 54
        lessThan
        not
        dup
        not
        branchIfTrue label273
        pop
        push r:2, 59
        lessThan
       label273:
        not
        branchIfTrue label274
        push r:2, 54
        subtract
        push 1, r:this, '4,01'
        getMember
        push '}riE]'
        callMethod
        pop
       label274:
        push r:this, '=11Rh', FALSE
        setMember
      end // of function 

      setMember
      push r:1, '=(D=5'
      function2 () (r:1='this')
        push r:this, '=11Rh', TRUE
        setMember
      end // of function 

      setMember
      push r:1, '5Hy6b'
      function2 (r:2='7') (r:1='this')
        push r:this, '=kIA', r:'7'
        setMember
        push r:'7'
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label275
        push r:0, 1
        strictEquals
        branchIfTrue label276
        push r:0, 2
        strictEquals
        branchIfTrue label277
        push r:0, 3
        strictEquals
        branchIfTrue label278
        branch label279
       label275:
        branch label279
       label276:
        push '44{N'
        getVariable
        push '4QvZJ'
        getMember
        push '5a93H', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:3
        pop
        push r:3, '[QL', 'secteur ', r:this, '1T='
        getMember
        add
        setMember
        push r:this, ' xeDq', TRUE
        setMember
        push 0, r:this, '2cou('
        callMethod
        pop
        branch label279
       label277:
        push r:this, '1T=', r:this, '1T='
        getMember
        increment
        setMember
        push r:this, '4,01'
        getMember
        push '4pUV8'
        getMember
        push 0
        getMember
        push '}CL', 0
        setMember
        push r:this, '4,01'
        getMember
        push '4pUV8'
        getMember
        push 1
        getMember
        push '}CL', 0
        setMember
        branch label279
       label278:
        push r:this, '-U_8Z', 0
        setMember
        push r:this, ' yFNA(', 0
        setMember
        push r:this, '9sd6g', 0, 'Array'
        new
        setMember
        branch label279
       label279:
      end // of function 

      setMember
      push r:1, '0D 6'
      function2 () (r:1='this')
        push 0, r:this, 'draw'
        getMember
        push 'clear'
        callMethod
        pop
        push 0, r:this, '7Qe;6'
        getMember
        push 'duplicate'
        callMethod
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label281
       label280:
        push r:3
        increment
        setRegister r:3
        pop
       label281:
        push r:3, r:2, 'length'
        getMember
        lessThan
        not
        branchIfTrue label282
        push 0, r:2, r:3
        getMember
        push '87vE7('
        callMethod
        pop
        branch label280
       label282:
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label283
        push r:0, 1
        strictEquals
        branchIfTrue label284
        push r:0, 2
        strictEquals
        branchIfTrue label287
        push r:0, 3
        strictEquals
        branchIfTrue label289
        push r:0, 4
        strictEquals
        branchIfTrue label291
        branch label293
       label283:
        branch label293
       label284:
        push 0, r:this, '4,01'
        getMember
        push '505t0'
        callMethod
        pop
        push r:this, '53RYu'
        getMember
        push 'length'
        getMember
        push 0
        equals
        dup
        not
        branchIfTrue label285
        pop
        push r:this, ';={0['
        getMember
        push 'length'
        getMember
        push 0
        equals
       label285:
        not
        branchIfTrue label286
        push 2, 1, r:this, '5Hy6b'
        callMethod
        pop
       label286:
        branch label293
       label287:
        push r:this, '2xEr8'
        getMember
        push 'length'
        getMember
        push 0
        equals
        not
        branchIfTrue label288
        push 3, 1, r:this, '5Hy6b'
        callMethod
        pop
       label288:
        branch label293
       label289:
        push 0.1
        setRegister r:4
        pop
        push r:this, '4,01'
        getMember
        push '9O*r', r:this, '4,01'
        getMember
        push '9O*r'
        getMember
        push r:4, r:this, '4,01'
        getMember
        push '9O*r'
        getMember
        push 0.2
        multiply
        push 0, r:4
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        subtract
        setMember
        push r:this, '4,01'
        getMember
        push '-iB='
        getMember
        push '_rotation', r:this, '4,01'
        getMember
        push '9O*r'
        getMember
        push 0.0174
        divide
        setMember
        push r:this, '4,01'
        getMember
        push '9O*r'
        getMember
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push 0, 2, 'Math'
        getVariable
        push 'max'
        callMethod
        setRegister r:5
        pop
        push r:this, '4,01'
        getMember
        push '6{Qei', r:5, 100
        multiply
        push 0, 2, 'Math'
        getVariable
        push 'max'
        callMethod
        setMember
        push '((', '*r'
        getVariable
        push '=OA'
        getMember
        push 0.5
        multiply
        push ')(', '*r'
        getVariable
        push '*OA'
        getMember
        push 0.5
        multiply
        push 2
        initObject
        setRegister r:6
        pop
        push 3, 0.1, r:6, 3, r:this, '4,01'
        getMember
        push '2sngh'
        callMethod
        pop
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.9, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:7
        pop
        push r:this, '4,01'
        getMember
        push '[b', r:this, '4,01'
        getMember
        push '[b'
        getMember
        push r:7
        multiply
        setMember
        push r:this, '4,01'
        getMember
        push ']b', r:this, '4,01'
        getMember
        push ']b'
        getMember
        push r:7
        multiply
        setMember
        push r:this, '-U_8Z', r:this, '-U_8Z'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        add
        setMember
        push r:this, ' yFNA(', r:5, 0, 20, r:6, 1, r:this, '4,01'
        getMember
        push '}1A{_'
        callMethod
        subtract
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        multiply
        push r:this, '-U_8Z'
        getMember
        add
        setMember
        push r:this, '-U_8Z'
        getMember
        push 100
        lessThan
        not
        not
        branchIfTrue label290
        push 4, 1, r:this, '5Hy6b'
        callMethod
        pop
       label290:
        push 0, r:this, '8pnO6('
        callMethod
        pop
        push 0, r:this, ']rvns'
        callMethod
        pop
        push r:this, ' yFNA('
        getMember
        push 0.1
        multiply
        push 5, r:this, ' yFNA('
        getMember
        push 0.1
        multiply
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        push 0, 3, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '[=([7('
        callMethod
        pop
        branch label293
       label291:
        push '((', '*r'
        getVariable
        push '=OA'
        getMember
        push 0.5
        multiply
        push ')(', '*r'
        getVariable
        push '*OA'
        getMember
        push 0.5
        multiply
        push 2
        initObject
        setRegister r:8
        pop
        push 3, 0.1, r:8, 3, r:this, '4,01'
        getMember
        push '2sngh'
        callMethod
        pop
        push r:this, ' yFNA(', r:this, ' yFNA('
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.95, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        setMember
        push 0, r:this, '8pnO6('
        callMethod
        pop
        push 0, r:this, ']rvns'
        callMethod
        pop
        push r:this, ' yFNA('
        getMember
        push 0.1
        multiply
        push 5, r:this, ' yFNA('
        getMember
        push 0.1
        multiply
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        push 0, 3, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '[=([7('
        callMethod
        pop
        push r:this, '9sd6g'
        getMember
        push 'length'
        getMember
        push 0
        equals
        not
        branchIfTrue label292
        push 1, 1, r:this, '5Hy6b'
        callMethod
        pop
       label292:
        branch label293
       label293:
      end // of function 

      setMember
      push r:1, '2cou('
      function2 () (r:1='this')
        push r:this, '1T='
        getMember
        push 14
        multiply
        push 8
        subtract
        setRegister r:2
        pop
       label294:
        push r:2, 0
        greaterThan
        not
        branchIfTrue label296
        push 2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label295
        push '44{N'
        getVariable
        push ')MItb'
        getMember
        push '3,w8u', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '8K()'
        getVariable
        push '=MS78'
        newMethod
        setRegister r:3
        pop
        push 4, r:this, '1T='
        getMember
        push 0.5
        multiply
        int
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        int
        setRegister r:4
        pop
        push 3, 0.5, r:this, '1T='
        getMember
        push r:4
        subtract
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:5
        pop
        push 2, r:5
        int
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        add
        setRegister r:6
        pop
        push r:6, r:4, 2, r:3, '*({1A('
        callMethod
        pop
        push 0, r:3, '3fw=f'
        callMethod
        pop
        push r:2, r:3, '69-'
        getMember
        subtract
        setRegister r:2
        pop
       label295:
        branch label294
       label296:
      end // of function 

      setMember
      push r:1, '8pnO6('
      function2 () (r:1='this')
        push r:this, ';+'
        getMember
        push '_x', r:this, ';+'
        getMember
        push '_x'
        getMember
        push r:this, ' yFNA('
        getMember
        subtract
        setMember
        push r:this, ';+'
        getMember
        push '_x'
        getMember
        push -900
        lessThan
        not
        branchIfTrue label297
        push r:this, ';+'
        getMember
        push '_x', r:this, ';+'
        getMember
        push '_x'
        getMember
        push 900
        add
        setMember
       label297:
      end // of function 

      setMember
      push r:1, ')dQoA'
      function2 () (r:1='this')
        push 2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label298
        push UNDEF
        return
       label298:
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push '7 B,7', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:2
        pop
        push r:2, '_x', '*r'
        getVariable
        push '=OA'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 100
        multiply
        add
        setMember
        push r:2, '_y', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '*r'
        getVariable
        push '*OA'
        getMember
        multiply
        setMember
        push r:2, '_yscale', 50, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 50
        multiply
        add
        setMember
        push r:2, '_xscale', r:2, '_yscale'
        getMember
        setMember
        push r:2, '+I;}1', 1, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 3
        multiply
        add
        setMember
        push r:2, 1, r:this, '9sd6g'
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ']rvns'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label300
       label299:
        push r:2
        increment
        setRegister r:2
        pop
       label300:
        push r:2, r:this, ' yFNA('
        getMember
        push 0.1
        multiply
        int
        lessThan
        not
        branchIfTrue label301
        push 0, r:this, ')dQoA'
        callMethod
        pop
        branch label299
       label301:
        push 0
        setRegister r:3
        pop
        branch label303
       label302:
        push r:3
        increment
        setRegister r:3
        pop
       label303:
        push r:3, r:this, '9sd6g'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label306
        push r:this, '9sd6g'
        getMember
        push r:3
        getMember
        setRegister r:4
        pop
        push r:4, '_x', r:4, '_x'
        getMember
        push r:this, ' yFNA('
        getMember
        push r:4, '_yscale'
        getMember
        push 100
        divide
        multiply
        subtract
        setMember
        push r:4, '_xscale', r:4, '_yscale'
        getMember
        push 0, r:this, ' yFNA('
        getMember
        push 30
        subtract
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        push 10
        multiply
        push r:4, '+I;}1'
        getMember
        multiply
        add
        setMember
        push r:4, '_alpha', r:4, '_alpha'
        getMember
        push 4, r:4, '_yscale'
        getMember
        push 100
        divide
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        setMember
        push r:4, '_x'
        getMember
        push 0, r:4, '_width'
        getMember
        subtract
        lessThan
        dup
        branchIfTrue label304
        pop
        push r:4, '_alpha'
        getMember
        push 3
        lessThan
       label304:
        not
        branchIfTrue label305
        push 0, r:4, 'removeMovieClip'
        callMethod
        pop
        push 1, r:3, r:3
        decrement
        setRegister r:3
        pop
        push 2, r:this, '9sd6g'
        getMember
        push 'splice'
        callMethod
        pop
       label305:
        branch label302
       label306:
      end // of function 

      setMember
      push r:0, '9V[[2', FALSE
      setMember
      push r:0, '4QvZJ', 12
      setMember
      push r:0, '8Z=cb', 10
      setMember
      push r:0, '5;OW;', 9
      setMember
      push r:0, ')MItb', 8
      setMember
      push r:0, '-hCnb', 7
      setMember
      push r:0, ',N)rb', 5
      setMember
      push r:0, '-4Nbg', 3
      setMember
      push r:0, '4MvcB', 3
      setMember
      push '=5haE'
      function2 (r:2='}J') (r:1='this')
        push r:this, '-iB=', r:'}J'
        setMember
        push r:this, '32', r:this, '-iB='
        getMember
        push 1, '+7U K'
        new
        setMember
        push r:this, '-iB='
        getMember
        push '_x', '*r'
        getVariable
        push '=OA'
        getMember
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this')
        push r:this, '1'
        getMember
        push '5)tE0'
        getMember
        push 0
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label310
        push r:this, ')S6'
        getMember
        push NULL
        equals
        not
        branchIfTrue label307
        push r:this, ')S6', 1, '8sfFC', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
       label307:
        push r:this, ')S6'
        getMember
        push '_alpha', r:this, '1'
        getMember
        push '*sB-L('
        getMember
        push 0
        getMember
        push 0
        equals
        not
        branchIfTrue label308
        push 50
        branch label309
       label308:
        push 100
       label309:
        setMember
        push r:this, '1'
        getMember
        push '5)tE0'
        getMember
        push 0
        getMember
        push 1
        add
        toString
        push 1, r:this, ')S6'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push 1, r:this, '1'
        getMember
        push '*sB-L('
        getMember
        push 0
        getMember
        push 100
        divide
        push 40
        multiply
        int
        add
        setRegister r:2
        pop
        push r:2
        toString
        push 1, r:this, ')S6'
        getMember
        push '5SHU8'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
       label310:
      end // of function 

      setMember
      push '980Sb'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'init'
      function2 (r:2='}J') (r:1='this')
        push 16777215, 1, ']{i'
        getVariable
        push 'setColor'
        callMethod
        pop
        push 0, '*r'
        getVariable
        push 'init'
        callMethod
        pop
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        not
        branchIfTrue label311
        push UNDEF
        return
       label311:
        push '980Sb'
        getVariable
        push ')2fr3', r:'}J'
        setMember
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        branchIfTrue label312
        push '980Sb'
        getVariable
        push 'mode', '980Sb'
        getVariable
        push ')2fr3'
        getMember
        push 1, '44{N'
        new
        setMember
       label312:
      end // of function 

      setMember
      push r:0, '0D 6'
      function2 () (r:1='this')
        push 0, '{-kxL'
        getVariable
        push '87vE7('
        callMethod
        pop
        push 0, '980Sb'
        getVariable
        push 'mode'
        getMember
        push '0D 6'
        callMethod
        pop
      end // of function 

      setMember
    end // of frame 0
  end // of defineMovieClip 228
  
  exportAssets
    228 as '90D*'
  end // of exportAssets
end
