movie 'bd6471b0c782cfdd828fd425ae8ee4c5.swf' compressed // flash 8, total frames: 1, frame rate: 40 fps, 700x480 px


  defineMovieClip 3 // total frames: 21

    frame 20
      gotoFrame 0
      play
    end // of frame 20
  end // of defineMovieClip 3

  defineMovieClip 13 // total frames: 15
  end // of defineMovieClip 13

  defineMovieClip 18 // total frames: 1
  end // of defineMovieClip 18

  defineMovieClip 21 // total frames: 8
  end // of defineMovieClip 21

  defineMovieClip 22 // total frames: 23

    frame 9
      stop
    end // of frame 9

    frame 22
      push ''
      removeClip
    end // of frame 22
  end // of defineMovieClip 22
  
  exportAssets
    22 as '4B1W('
  end // of exportAssets

  defineMovieClip 224 // total frames: 201
  end // of defineMovieClip 224
  
  exportAssets
    224 as '{ OAF('
  end // of exportAssets
  
  exportAssets
    224 as '{ OAF('
  end // of exportAssets
  
  exportAssets
    224 as '{ OAF('
  end // of exportAssets
  
  exportAssets
    224 as '{ OAF('
  end // of exportAssets
  
  exportAssets
    224 as '{ OAF('
  end // of exportAssets
  
  exportAssets
    224 as '{ OAF('
  end // of exportAssets
  
  exportAssets
    224 as '{ OAF('
  end // of exportAssets
  
  exportAssets
    224 as '{ OAF('
  end // of exportAssets
  
  exportAssets
    224 as '{ OAF('
  end // of exportAssets
  
  exportAssets
    224 as '{ OAF('
  end // of exportAssets
  
  exportAssets
    224 as '{ OAF('
  end // of exportAssets
  
  exportAssets
    224 as '{ OAF('
  end // of exportAssets
  
  exportAssets
    224 as '{ OAF('
  end // of exportAssets
  
  exportAssets
    224 as '{ OAF('
  end // of exportAssets
  
  exportAssets
    224 as '{ OAF('
  end // of exportAssets
  
  exportAssets
    224 as '{ OAF('
  end // of exportAssets
  
  exportAssets
    224 as '{ OAF('
  end // of exportAssets
  
  exportAssets
    224 as '{ OAF('
  end // of exportAssets
  
  exportAssets
    224 as '{ OAF('
  end // of exportAssets
  
  exportAssets
    224 as '{ OAF('
  end // of exportAssets
  
  exportAssets
    224 as '{ OAF('
  end // of exportAssets
  
  exportAssets
    224 as '{ OAF('
  end // of exportAssets
  
  exportAssets
    224 as '{ OAF('
  end // of exportAssets
  
  exportAssets
    224 as '{ OAF('
  end // of exportAssets

  defineMovieClip 225 // total frames: 24

    frame 9
      stop
    end // of frame 9

    frame 11
    end // of frame 11

    frame 22
      push ''
      removeClip
    end // of frame 22
  end // of defineMovieClip 225
  
  exportAssets
    225 as '5 xA+'
  end // of exportAssets

  defineMovieClip 227 // total frames: 1
  end // of defineMovieClip 227
  
  exportAssets
    227 as '+NX-J('
  end // of exportAssets

  defineMovieClip 229 // total frames: 1
  end // of defineMovieClip 229
  
  exportAssets
    229 as '3gy;1'
  end // of exportAssets

  defineMovieClip 261 // total frames: 41
  end // of defineMovieClip 261
  
  exportAssets
    261 as '=I9G(('
  end // of exportAssets

  defineMovieClip 264 // total frames: 1
  end // of defineMovieClip 264

  defineMovieClip 265 // total frames: 12

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 265

  defineMovieClip 267 // total frames: 1
  end // of defineMovieClip 267

  defineMovieClip 273 // total frames: 20

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 273
  
  exportAssets
    273 as '9k,B'
  end // of exportAssets

  defineMovieClip 275 // total frames: 1
  end // of defineMovieClip 275
  
  exportAssets
    275 as '74hWz'
  end // of exportAssets
  
  exportAssets
    224 as '{ OAF('
  end // of exportAssets

  defineMovieClip 279 // total frames: 1
  end // of defineMovieClip 279
  
  exportAssets
    279 as '=+lJE'
  end // of exportAssets

  defineMovieClip 282 // total frames: 1
  end // of defineMovieClip 282

  defineMovieClip 283 // total frames: 1
  end // of defineMovieClip 283
  
  exportAssets
    283 as ';+'
  end // of exportAssets
  
  exportAssets
    283 as ';+'
  end // of exportAssets
  
  exportAssets
    279 as '=+lJE'
  end // of exportAssets
  
  exportAssets
    275 as '74hWz'
  end // of exportAssets
  
  exportAssets
    224 as '{ OAF('
  end // of exportAssets
  
  exportAssets
    273 as '9k,B'
  end // of exportAssets
  
  exportAssets
    261 as '=I9G(('
  end // of exportAssets

  defineMovieClip 284 // total frames: 1

    frame 0
      constants ']ZBu1', '}J', '((', '_x', ')(', '_y', '*(', ')Bx7K', 'prototype', '(j;o7', '}SYp5', 'removeMovieClip', ') Kj', '}SC6', ']', '{-kxL', '-V;B', '}Yax5', '}(u_4', '[t)n[', ' 0kfP', '-clV-', '7zV+F(', '6zV+F(', '5MGl_', '_xscale', 'scale', '_yscale', '3qifA(', '6y{A3', '_visible', '(zlvD', '1a+gi', '3Wt', 'random', 'Math', 'PI', 'cos', 'sin', '[5(-', '7zGQ', '*B', '5U4B', ',*YV6', '87vE7(', ';ILSy', '7AM}o', 'gotoAndPlay', '=(,aA', '[MqDO', '*sd+;(', '-', 'getBounds', 'xMin', 'xMax', 'yMin', 'yMax', ',81W-(', 'left', 'top', 'right', 'bottom', ',}2X (', '(YzdC', '{a2bI', ']}lAm', '=eNhg', '[s', ';ndCG', '8kN', ',4+L', '6jZ', '8Z4L', '=lZ', ';+z4B', ' oZ', '-Gl7B', '3sZ', '*1l9B', '*c)L', '}[R4,(', '-Q)9)', '9vFRy', '5 xA+', '*=_p_', '6ot93', 'gotoAndStop', '-s9=N', '+-(0', '9sw8)', '9usfs', '}-NqE(', '{-NqE(', '+ndd+', 'Array', '7}ata', ' Iqt5', '3zq0Z', '+DFB8(', '=+lJE', '0SGTJ(', 'stop', 'push', ' I134(', 'length', 'shift', 'start', '4u57)', ']r3=3', '18wU*', '89A}+', '5b)bA(', '0D 6', '}TXJ5(', '981E((', '64,N3', '];7w6', '}Tg7W', '4Tn63', '}kas6', '(Cxdd', '6L(56(', '+A,]V', '7mdu]', '2]*hb', '{Yna0(', '1g=d+(', '}V3Vn', '-6cK;', ';lYg5', '=Po=', '7XmZ8(', '9DeDD(', '=tvTo', ' xKKC(', '{PzuS', '[r]x=', '[Ol6B', ',i0 [', ' p3z=', '2ufmm', '(rCc*', '0', '))Yv5', '; =', '[3r2L(', ';-[;H', '=HU11', '+UDgF(', '}w4Jd', '9==)', '1AAJE(', '0Lh]4(', '[zd+1(', '980Sb', '8KrCz', 'remove', '6LF', ']bJo*', '6buD-', '5y,6t', '7', '- u_k', 'draw', '+7U K', ')2fr3', '}Zms3', ']1sj+', '-fC3a', '9oK', '7-,', ']bu40', '_name', 'swapDepths', 'attachMC', 'createEmptyMC', '(GbB}', '+2NA', 'getDepth', 'floor', '}oQA7', 'unshift', '08M8', 'clear', '9(K ;', '7Z[GL', '}[3', '9k,B', ';96ZI', '0de1f', '0{lc4', '5M_T6', '(v+', 'getVar', '{2', '}2', '3u(', '5R0', '3BA=M', '70rI9(', '5T6+', ';NIYA', 'max', 'round', '7Q', 'play', '8Q', 'min', 'hitTest', '(kvTB(', '565', '_rotation', ' nV0G(', '+_B[k', '2', '1', 'moveTo', 'lineStyle', 'curveTo', 'lineTo', '=FzV=(', 'splice', 'reverse', 'atan2', ',4QHB(', '2', '+NX-J(', 'Color', 'setRGB', '_alpha', '9-,', 'flash', 'Object', 'filters', '{lN=R', '4plQ5', 'getTimer', '3R,QM', ';y}-6(', '-)Xd+', '[Ad;n', '6GI,F', 'fps', '(WBt)', ']}Ou;(', '3I0pG', '{;7F4', '8U(wu', '}[cpB', '9xv]A', '{yQ=Q', '+,W', '2y+dV', '(tBee', '3)i[=', ' J3IC', '[6jRc', ')8Fyj', '9YGH9', ']oA(;', '0Xx{3', ';z0(V', 'abs', ',qme;', '8(HR9', '4=anA', '2_TI7', '+_nS+(', '(K', ' tAUn', '7ba4D(', '}-B2', '=I9G((', '_width', ',_usv', '_height', '0vWVG', ',XwMD', ' 9l=4(', ')YJHO', '[6', '*lQ}C(', '-[m(M', '7g,ln', '4B1W(', '*, bp', '{8}XA(', '7eoE2', '44{N', ';+', '74hWz', 'setMask', '}EV}h', '=pE', '0', ']ln1*', '7MXeF(', '0ze*c', 'Key', 'LEFT', 'isDown', 'pow', 'RIGHT', 'UP', '$f', '$j2', '$j3', '}(Rc5', ',Hwi)', 'clearInterval', '16(VU', 'setInterval', '}wUHz', 'split', 'join', '', 'indexOf', 'slice', 'substring', '* I51', 'charCodeAt', ',JBe0', 'duplicate', '4UQ(1', '_parent', ' Ly7b', '4*fgv', 'sqrt', '16KA', '(', ')goHJ(', 'movieclip', '9ss9+', 'localToGlobal', '19{O', ',[A(', 'set', '-[A(', 'get', 'globalToLocal', '{Gq]-', '$r', '$h', '$w', '$y', '$x', '$box', '$matrixType', '$radial', '$linear', ']cY[2', 'beginGradientFill', ' (', '1', '=', '(kJ+1(', 'mode'  
      push ']ZBu1'
      function2 (r:2='}J') (r:1='this')
        push r:this, '}J', r:'}J'
        setMember
        push r:this, '((', r:'}J', '_x'
        getMember
        setMember
        push r:this, ')(', r:'}J', '_y'
        getMember
        setMember
        push r:this, '*(', 0
        setMember
        push r:this, ')Bx7K', FALSE
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '(j;o7'
      function2 (r:2='5R', r:3='6R') (r:1='this')
        push r:this, '((', r:'5R'
        setMember
        push r:this, ')(', r:'6R'
        setMember
        push r:this, '*(', 0
        setMember
        push r:this, ')Bx7K', FALSE
        setMember
        push r:this, '}J'
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '}J'
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
        push 0, r:this, '}SYp5'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, '}SYp5', NULL
        setMember
      end // of function 

      setMember
      push r:1, ') Kj'
      function2 () (r:1='this')
        push r:this, ')Bx7K'
        getMember
        return
      end // of function 

      setMember
      push r:1, '}SC6'
      function2 () (r:1='this')
        push r:this, ')Bx7K'
        getMember
        not
        branchIfTrue label4
        push r:this, ']', r:this, ']'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push r:this, '}Yax5'
        getMember
        multiply
        add
        setMember
        push r:this, ']'
        getMember
        push 1
        lessThan
        not
        not
        branchIfTrue label1
        push r:this, '((', r:this, '}(u_4'
        getMember
        setMember
        push r:this, ')(', r:this, '[t)n['
        getMember
        setMember
        push r:this, '*(', 0
        setMember
        push 0, r:this, '}SYp5'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, '}SYp5', NULL
        setMember
        push r:this, ')Bx7K', FALSE
        setMember
        branch label2
       label1:
        push r:this, '((', r:this, ' 0kfP'
        getMember
        push r:this, '}(u_4'
        getMember
        push r:this, ' 0kfP'
        getMember
        subtract
        push r:this, ']'
        getMember
        multiply
        add
        setMember
        push r:this, ')(', r:this, '-clV-'
        getMember
        push r:this, '[t)n['
        getMember
        push r:this, '-clV-'
        getMember
        subtract
        push r:this, ']'
        getMember
        multiply
        add
        setMember
        push r:this, '*(', r:this, '7zV+F('
        getMember
        push r:this, ']'
        getMember
        multiply
        push r:this, ']'
        getMember
        multiply
        push r:this, '6zV+F('
        getMember
        push r:this, ']'
        getMember
        multiply
        add
        push r:this, '5MGl_'
        getMember
        add
        setMember
       label2:
        push r:this, '*('
        getMember
        push 0
        equals
        not
        not
        branchIfTrue label3
        push r:this, '}SYp5'
        getMember
        push '_x', r:this, '(('
        getMember
        push r:this, '*('
        getMember
        push 4
        divide
        add
        setMember
        push r:this, '}SYp5'
        getMember
        push '_y', r:this, ')('
        getMember
        push r:this, '*('
        getMember
        push 3
        divide
        add
        setMember
        push r:this, '}SYp5'
        getMember
        push '_xscale', 100, r:this, '*('
        getMember
        push 2
        divide
        subtract
        push r:this, 'scale'
        getMember
        multiply
        setMember
        push r:this, '}SYp5'
        getMember
        push '_yscale', 100, r:this, '*('
        getMember
        push 2
        divide
        subtract
        push r:this, 'scale'
        getMember
        multiply
        setMember
       label3:
        push r:this, '}J'
        getMember
        push '_xscale', 100, r:this, '*('
        getMember
        add
        push r:this, 'scale'
        getMember
        multiply
        setMember
        push r:this, '}J'
        getMember
        push '_yscale', 100, r:this, '*('
        getMember
        add
        push r:this, 'scale'
        getMember
        multiply
        setMember
        push r:this, '}J'
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '}J'
        getMember
        push '_y', r:this, ')('
        getMember
        push r:this, '*('
        getMember
        subtract
        setMember
       label4:
      end // of function 

      setMember
      push r:1, '3qifA('
      function2 () (r:1='this')
        push r:this, '}SYp5'
        getMember
        push NULL
        equals
        not
        branchIfTrue label5
        push r:this, '}SYp5', 0, r:this, '6y{A3'
        callMethod
        setMember
       label5:
        push r:this, '}SYp5'
        getMember
        push '_visible', TRUE
        setMember
        push r:this, '}SYp5'
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
        push r:this, '}SYp5'
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '(zlvD'
      function2 (r:2=']oH', r:3='9P9H', r:4='}Yax5', r:5='21Ld)(') (r:1='this')
        push r:this, '}Yax5', r:'}Yax5'
        setMember
        push r:this, ' 0kfP', r:this, '(('
        getMember
        setMember
        push r:this, '-clV-', r:this, ')('
        getMember
        setMember
        push r:this, '5MGl_', r:this, '*('
        getMember
        setMember
        push r:this, ']', 0
        setMember
        push r:this, '6zV+F(', r:'9P9H', 4
        multiply
        push r:this, '*('
        getMember
        subtract
        setMember
        push r:this, '7zV+F(', 0, r:this, '6zV+F('
        getMember
        subtract
        push r:this, '*('
        getMember
        subtract
        setMember
        push 100
        setRegister r:6
        pop
        branch label8
       label6:
        push r:this, '[t)n['
        getMember
        push r:this, '}(u_4'
        getMember
        push 2, r:this, '1a+gi'
        callMethod
        not
        dup
        not
        branchIfTrue label7
        pop
        push r:6
        decrement
        setRegister r:0
        setRegister r:6
        pop
        push r:0, 0
        greaterThan
       label7:
        not
        branchIfTrue label9
       label8:
        push 360, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 'Math'
        getVariable
        push 'PI'
        getMember
        push 2
        multiply
        divide
        setRegister r:7
        pop
        push r:this, '}(u_4', r:this, '(('
        getMember
        push r:7, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:']oH'
        multiply
        add
        setMember
        push r:this, '[t)n[', r:this, ')('
        getMember
        push r:7, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:']oH'
        multiply
        add
        setMember
        branch label6
       label9:
        push 0, r:this, '3qifA('
        callMethod
        pop
        push r:this, ')Bx7K', TRUE
        setMember
      end // of function 

      setMember
      push r:1, '[5(-'
      function2 (r:2='}Yax5') (r:1='this')
        push r:this, '}Yax5', r:'}Yax5'
        setMember
        push r:this, '((', r:this, '}J'
        getMember
        push '_x'
        getMember
        setMember
        push r:this, ')(', r:this, '}J'
        getMember
        push '_y'
        getMember
        setMember
        push r:this, ' 0kfP', r:this, '(('
        getMember
        setMember
        push r:this, '-clV-', r:this, ')('
        getMember
        setMember
        push r:this, '5MGl_', r:this, '*('
        getMember
        setMember
        push r:this, '}(u_4', r:this, '(('
        getMember
        setMember
        push r:this, '[t)n[', r:this, ')('
        getMember
        setMember
        push r:this, ']', 0
        setMember
        push r:this, '7zV+F(', 5
        setMember
        push r:this, '6zV+F(', 0, r:this, '*('
        getMember
        subtract
        push r:this, '7zV+F('
        getMember
        subtract
        setMember
        push 0, r:this, '3qifA('
        callMethod
        pop
        push r:this, ')Bx7K', TRUE
        setMember
      end // of function 

      setMember
      push '7zGQ'
      function2 (r:3='*B', r:4='}J', r:5='5U4B') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '*B', r:'*B'
        setMember
        push r:this, '5U4B', r:'5U4B', 1
        initArray
        setMember
        push 0, r:this, ',*YV6'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ']ZBu1'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this')
        push 0, r:this, '}SC6'
        callMethod
        pop
        push 0, r:this, ') Kj'
        callMethod
        not
        not
        branchIfTrue label10
        push r:this, '5U4B', r:this, '5U4B'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        subtract
        push 1
        initArray
        setMember
       label10:
        push r:this, '5U4B'
        getMember
        push 0
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label11
        push TRUE
        return
       label11:
        push '7AM}o', 1, r:this, '}J'
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push FALSE
        return
      end // of function 

      setMember
      push r:1, ',*YV6'
      function2 () (r:1='this')
        push 200
        setRegister r:4
        pop
        branch label14
       label12:
        push r:3, r:2, 2, r:this, '1a+gi'
        callMethod
        not
        dup
        not
        branchIfTrue label13
        pop
        push r:4
        decrement
        setRegister r:0
        setRegister r:4
        pop
        push r:0, 0
        greaterThan
       label13:
        not
        branchIfTrue label15
       label14:
        push '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:2
        pop
        push '=(,aA'
        getVariable
        push '*sd+;('
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:3
        pop
        branch label12
       label15:
        push r:this, '}J'
        getMember
        push '_x', r:2
        setMember
        push r:this, '}J'
        getMember
        push '_y', r:3
        setMember
      end // of function 

      setMember
      push r:1, '1a+gi'
      function2 (r:2='((', r:3=')(') (r:1='this')
        push r:this, '}J'
        getMember
        push '-'
        getMember
        setRegister r:4
        pop
        push r:this, '}J'
        getMember
        push 1, r:4, 'getBounds'
        callMethod
        setRegister r:5
        pop
        push 100, r:4, '_xscale'
        getMember
        divide
        setRegister r:6
        pop
        push 100, r:4, '_yscale'
        getMember
        divide
        setRegister r:7
        pop
        push r:5, 'xMin', r:5, 'xMin'
        getMember
        push r:6
        multiply
        setMember
        push r:5, 'xMax', r:5, 'xMax'
        getMember
        push r:6
        multiply
        setMember
        push r:5, 'yMin', r:5, 'yMin'
        getMember
        push r:7
        multiply
        setMember
        push r:5, 'yMax', r:5, 'yMax'
        getMember
        push r:7
        multiply
        setMember
        push '=(,aA'
        getVariable
        push ',81W-('
        getMember
        setRegister r:8
        pop
        push r:'((', r:5, 'xMin'
        getMember
        add
        push r:8, 'left'
        getMember
        greaterThan
        dup
        not
        branchIfTrue label16
        pop
        push r:')(', r:5, 'yMin'
        getMember
        add
        push r:8, 'top'
        getMember
        greaterThan
       label16:
        dup
        not
        branchIfTrue label17
        pop
        push r:'((', r:5, 'xMax'
        getMember
        add
        push r:8, 'right'
        getMember
        lessThan
       label17:
        dup
        not
        branchIfTrue label18
        pop
        push r:')(', r:5, 'yMax'
        getMember
        add
        push r:8, 'bottom'
        getMember
        lessThan
       label18:
        return
      end // of function 

      setMember
      push r:1, ',}2X ('
      function2 () (r:1='this')
        push 0, r:this, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
      end // of function 

      setMember
      push '(YzdC'
      function2 (r:3='*B', r:4='}J', r:5='9w=+') (r:1='this', r:2='super')
        push 6, 200, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 100
        divide
        add
        push r:'}J', r:'*B', 3, r:super, UNDEF
        callMethod
        pop
        push r:this, 'scale', 0.75
        setMember
        push r:this, '{a2bI', TRUE
        setMember
        push r:this, ']}lAm', r:'9w=+'
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '7zGQ'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:0, '=eNhg'
      function2 (r:2='*B') (r:1='this')
        push r:'*B'
        increment
        setRegister r:'*B'
        pop
        push r:'*B', 25
        greaterThan
        not
        not
        branchIfTrue label19
        push r:'*B', '=(,aA'
        getVariable
        push '[s'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        multiply
        return
        branch label24
       label19:
        push r:'*B', 60
        greaterThan
        not
        not
        branchIfTrue label20
        push '=(,aA'
        getVariable
        push ',4+L'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        push r:'*B', 25
        subtract
        push '=(,aA'
        getVariable
        push '6jZ'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        multiply
        add
        return
        branch label24
       label20:
        push r:'*B', 100
        greaterThan
        not
        not
        branchIfTrue label21
        push '=(,aA'
        getVariable
        push '8Z4L'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        push r:'*B', 60
        subtract
        push '=(,aA'
        getVariable
        push '=lZ'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        multiply
        add
        return
        branch label24
       label21:
        push r:'*B', 145
        greaterThan
        not
        not
        branchIfTrue label22
        push '=(,aA'
        getVariable
        push ';+z4B'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        push r:'*B', 100
        subtract
        push '=(,aA'
        getVariable
        push ' oZ'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        multiply
        add
        return
        branch label24
       label22:
        push r:'*B', 170
        greaterThan
        not
        not
        branchIfTrue label23
        push '=(,aA'
        getVariable
        push '-Gl7B'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        push r:'*B', 145
        subtract
        push '=(,aA'
        getVariable
        push '3sZ'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        multiply
        add
        return
        branch label24
       label23:
        push '=(,aA'
        getVariable
        push '*1l9B'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        push r:'*B', 170
        subtract
        push '=(,aA'
        getVariable
        push '*c)L'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        multiply
        add
        return
       label24:
      end // of function 

      setMember
      push r:1, '}[R4,('
      function2 () (r:1='this')
        push r:this, '*B'
        getMember
        push 1, '(YzdC'
        getVariable
        push '=eNhg'
        callMethod
        push 1, ';ndCG'
        getVariable
        push '-Q)9)'
        callMethod
        return
      end // of function 

      setMember
      push r:1, '6y{A3'
      function2 () (r:1='this')
        push '=(,aA'
        getVariable
        push '9vFRy'
        getMember
        push '5 xA+', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:2
        pop
        push '6ot93', 1, r:2, 'gotoAndStop'
        callMethod
        pop
        push r:this, '*B'
        getMember
        push 1
        add
        push 1, r:2, '-'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:2
        return
      end // of function 

      setMember
      push '-s9=N'
      function2 (r:2='0') (r:1='this')
        push r:this, '+-(0', r:'0'
        setMember
        push r:this, '9sw8)', 0, 1
        initArray
        setMember
        push r:this, '9usfs', 0, 1
        initArray
        setMember
        push r:this, '}-NqE(', 0
        setMember
        push r:this, '{-NqE(', 0
        setMember
        push r:this, '+ndd+', 0, 'Array'
        new
        setMember
        push r:this, '7}ata', 0, 'Array'
        new
        setMember
        push r:this, ' Iqt5', 0, 'Array'
        new
        setMember
        push 0, r:this, '3zq0Z'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '3zq0Z'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label26
       label25:
        push r:2
        increment
        setRegister r:2
        pop
       label26:
        push r:2, 3
        lessThan
        not
        branchIfTrue label27
        push '=(,aA'
        getVariable
        push '+DFB8('
        getMember
        push '=+lJE', 2, r:this, '+-(0'
        getMember
        push '0SGTJ('
        getMember
        push '*=_p_'
        callMethod
        setRegister r:3
        pop
        push r:3, '_x', 110, r:2, 30
        multiply
        add
        setMember
        push r:3, '_y', 270
        setMember
        push r:3, '-'
        getMember
        setRegister r:4
        pop
        push 0, r:4, 'stop'
        callMethod
        pop
        push '}J', r:3, '5 xA+', r:4, '*B', 0, 3
        initObject
        push 1, r:this, ' Iqt5'
        getMember
        push 'push'
        callMethod
        pop
        branch label25
       label27:
      end // of function 

      setMember
      push r:1, ' I134('
      function2 (r:2='*B') (r:1='this')
        push r:'*B', 75
        equals
        not
        branchIfTrue label28
        push UNDEF
        return
       label28:
        push r:'*B', 1, r:this, '7}ata'
        getMember
        push 'push'
        callMethod
        pop
       label29:
        push r:this, '7}ata'
        getMember
        push 'length'
        getMember
        push 10
        greaterThan
        not
        branchIfTrue label30
        push 0, r:this, '7}ata'
        getMember
        push 'shift'
        callMethod
        pop
        branch label29
       label30:
      end // of function 

      setMember
      push r:1, 'start'
      function2 () (r:1='this')
        push r:this, '9usfs'
        getMember
        push 0
        getMember
        push 0
        greaterThan
        not
        not
        branchIfTrue label31
        push r:this, '9usfs', 100, 1
        initArray
        setMember
        branch label32
       label31:
        push r:this, '9sw8)', r:this, '9sw8)'
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
       label32:
      end // of function 

      setMember
      push r:1, '=+lJE'
      function2 (r:2='*B', r:3='3=*') (r:1='this')
        push r:'3=*'
        not
        branchIfTrue label33
        push '=(,aA'
        getVariable
        push '=lZ'
        getMember
        branch label34
       label33:
        push '=(,aA'
        getVariable
        push '[s'
        getMember
       label34:
        push r:'*B', 1, '(YzdC'
        getVariable
        push '=eNhg'
        callMethod
        push 1, ';ndCG'
        getVariable
        push '-Q)9)'
        callMethod
        push 2, ';ndCG'
        getVariable
        push '4u57)'
        callMethod
        setRegister r:4
        pop
        push '=(,aA'
        getVariable
        push ']r3=3'
        getMember
        push 1, r:this, '+-(0'
        getMember
        push '0SGTJ('
        getMember
        push '18wU*'
        callMethod
        push r:4, 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        push 285, 160, 4, '89A}+'
        new
        setRegister r:5
        pop
        push r:4, 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push r:'3=*'
        not
        branchIfTrue label35
        push r:this, '{-NqE(', r:this, '{-NqE('
        getMember
        increment
        setMember
        branch label36
       label35:
        push r:this, '}-NqE(', r:this, '}-NqE('
        getMember
        increment
        setMember
       label36:
      end // of function 

      setMember
      push r:1, '0D 6'
      function2 () (r:1='this')
        push r:this, '9usfs'
        getMember
        push 0
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label48
        push r:this, '9usfs', r:this, '9usfs'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        push 1
        initArray
        setMember
        push 0
        setRegister r:2
        pop
        branch label38
       label37:
        push r:2
        increment
        setRegister r:2
        pop
       label38:
        push r:2, 3
        lessThan
        not
        branchIfTrue label41
        push r:this, '9usfs'
        getMember
        push 0
        getMember
        push 2, r:2
        subtract
        push 30
        multiply
        greaterThan
        not
        branchIfTrue label39
        push r:this, ' Iqt5'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:this, '7}ata'
        getMember
        push r:this, '7}ata'
        getMember
        push 'length'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        getMember
        setRegister r:4
        pop
        push r:3, '*B', r:4
        setMember
        push r:4, 1
        add
        toString
        push 1, r:3, '5 xA+'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:3, '5 xA+'
        getMember
        push '_y', 30, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setMember
        branch label40
       label39:
        push r:this, ' Iqt5'
        getMember
        push r:2
        getMember
        push '5 xA+'
        getMember
        push '_y', 15
        setMember
       label40:
        branch label37
       label41:
        push r:this, '9usfs'
        getMember
        push 0
        getMember
        push 0
        greaterThan
        not
        not
        branchIfTrue label48
        push r:this, ' Iqt5'
        getMember
        push 0
        getMember
        push '*B'
        getMember
        push r:this, ' Iqt5'
        getMember
        push 1
        getMember
        push '*B'
        getMember
        equals
        setRegister r:5
        pop
        push r:this, ' Iqt5'
        getMember
        push 1
        getMember
        push '*B'
        getMember
        push r:this, ' Iqt5'
        getMember
        push 2
        getMember
        push '*B'
        getMember
        equals
        setRegister r:6
        pop
        push r:this, ' Iqt5'
        getMember
        push 0
        getMember
        push '*B'
        getMember
        push r:this, ' Iqt5'
        getMember
        push 2
        getMember
        push '*B'
        getMember
        equals
        setRegister r:7
        pop
        push r:5
        dup
        not
        branchIfTrue label42
        pop
        push r:6
       label42:
        dup
        not
        branchIfTrue label43
        pop
        push r:7
       label43:
        not
        branchIfTrue label44
        push TRUE, r:this, ' Iqt5'
        getMember
        push 0
        getMember
        push '*B'
        getMember
        push 2, r:this, '=+lJE'
        callMethod
        pop
        branch label47
       label44:
        push r:5
        dup
        branchIfTrue label45
        pop
        push r:7
       label45:
        not
        branchIfTrue label46
        push FALSE, r:this, ' Iqt5'
        getMember
        push 0
        getMember
        push '*B'
        getMember
        push 2, r:this, '=+lJE'
        callMethod
        pop
        branch label47
       label46:
        push r:6
        not
        branchIfTrue label47
        push FALSE, r:this, ' Iqt5'
        getMember
        push 1
        getMember
        push '*B'
        getMember
        push 2, r:this, '=+lJE'
        callMethod
        pop
       label47:
        push r:this, '9sw8)'
        getMember
        push 0
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label48
        push r:this, '9sw8)', r:this, '9sw8)'
        getMember
        push 0
        getMember
        decrement
        push 1
        initArray
        setMember
        push r:this, '9usfs', 100, 1
        initArray
        setMember
       label48:
      end // of function 

      setMember
      push '=(,aA'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '[MqDO', 300
      setMember
      push r:0, '*sd+;(', 300
      setMember
      push r:0, '}TXJ5(', 39168
      setMember
      push r:0, '981E((', 27648
      setMember
      push r:0, '64,N3', 9021109
      setMember
      push r:0, '];7w6', 6391450
      setMember
      push r:0, '9vFRy', 1
      setMember
      push r:0, '}Tg7W', 2
      setMember
      push r:0, '4Tn63', 3
      setMember
      push r:0, '}kas6', 4
      setMember
      push r:0, ']r3=3', 5
      setMember
      push r:0, '+DFB8(', 1
      setMember
      push r:0, '(Cxdd', 2.3
      setMember
      push r:0, '6L(56(', '=(,aA'
      getVariable
      push '(Cxdd'
      getMember
      push 2
      divide
      setMember
      push r:0, '+A,]V', 3
      setMember
      push r:0, '7mdu]', 0.125
      setMember
      push r:0, '2]*hb', 3
      setMember
      push r:0, '{Yna0(', 4
      setMember
      push r:0, '1g=d+(', 0.001
      setMember
      push r:0, '}V3Vn', 0.97
      setMember
      push r:0, '-6cK;', 500, 2, 20, 80, 8, 30, 40, 100, 8
      initArray
      setMember
      push r:0, ';lYg5', 250
      setMember
      push r:0, '=Po=', 7
      setMember
      push r:0, '7XmZ8(', 350
      setMember
      push r:0, '9DeDD(', 200
      setMember
      push r:0, '=tvTo', 150
      setMember
      push r:0, ' xKKC(', 20
      setMember
      push r:0, '{PzuS', -1.5
      setMember
      push r:0, '[r]x=', 2
      setMember
      push r:0, '[s', 5, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '6jZ', 10, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '=lZ', 20, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, ' oZ', 30, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '3sZ', 50, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '*c)L', 100, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, ',4+L', 200, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '8Z4L', 700, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, ';+z4B', 1900, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '[Ol6B', 3000, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '-Gl7B', 4000, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '*1l9B', 6000, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, ',81W-(', 'left', 3, 'top', 3, 'right', 297, 'bottom', 267, 4
      initObject
      setMember
      push ',i0 ['
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push ' p3z='
      function2 (r:3='*B', r:4='}J') (r:1='this', r:2='super')
        push 7, 300, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 100
        divide
        add
        push r:'}J', r:'*B', 3, r:super, UNDEF
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '7zGQ'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '2ufmm'
      function2 ('0') (r:1='this')
        push r:this, '}J'
        getMember
        push '_x'
        getMember
        setRegister r:2
        pop
        push r:this, '}J'
        getMember
        push '_y'
        getMember
        setRegister r:3
        pop
        push 0, r:this, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, '*B'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label49
        push r:0, 1
        strictEquals
        branchIfTrue label53
        push r:0, 2
        strictEquals
        branchIfTrue label57
        push r:0, 3
        strictEquals
        branchIfTrue label64
        push r:0, 4
        strictEquals
        branchIfTrue label65
        push r:0, 5
        strictEquals
        branchIfTrue label67
        push r:0, 6
        strictEquals
        branchIfTrue label69
        push r:0, 7
        strictEquals
        branchIfTrue label74
        branch label75
       label49:
        push 0
        setRegister r:4
        pop
        branch label51
       label50:
        push r:4
        increment
        setRegister r:4
        pop
       label51:
        push r:4, ' p3z='
        getVariable
        push '(rCc*'
        getMember
        lessThan
        not
        branchIfTrue label52
        push '0'
        getVariable
        push '))Yv5'
        getMember
        push '; ='
        getMember
        push 0
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label52
        push 0, '0'
        getVariable
        push '))Yv5'
        getMember
        push '[3r2L('
        callMethod
        push 1, '0'
        getVariable
        push '))Yv5'
        getMember
        push ';-[;H'
        callMethod
        pop
        branch label50
       label52:
        push ' p3z='
        getVariable
        push '(rCc*', ' p3z='
        getVariable
        push '(rCc*'
        getMember
        increment
        setMember
        branch label75
       label53:
        push 5, 5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        add
        setRegister r:5
        pop
        push 0
        setRegister r:4
        pop
        branch label55
       label54:
        push r:4
        increment
        setRegister r:4
        pop
       label55:
        push r:4, r:5
        lessThan
        not
        branchIfTrue label56
        push 0, '0'
        getVariable
        push '=HU11'
        getMember
        push '+UDgF('
        callMethod
        setRegister r:6
        pop
        push r:3, r:2, 2, r:6, '(j;o7'
        callMethod
        pop
        push r:6, '{a2bI', FALSE
        setMember
        push '=(,aA'
        getVariable
        push ',81W-('
        getMember
        push 0.05, 10, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 15
        add
        push 20, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 20
        add
        push 4, r:6, '(zlvD'
        callMethod
        pop
        branch label54
       label56:
        branch label75
       label57:
        push '5U4B', 15
        varEquals
        push ' p3z='
        getVariable
        push '}w4Jd', ' p3z='
        getVariable
        push '}w4Jd'
        getMember
        increment
        setMember
        push '0'
        getVariable
        push '))Yv5'
        getMember
        push '9==)', TRUE
        setMember
        push '0'
        getVariable
        push '))Yv5'
        getMember
        push '1AAJE(', TRUE
        setMember
        push '0Lh]4('
        var
        push '0Lh]4('
        function2 () (r:1='this')
          push '5U4B', '5U4B'
          getVariable
          push '{-kxL'
          getVariable
          push ';ILSy'
          getMember
          subtract
          setVariable
          push '5U4B'
          getVariable
          push 2
          lessThan
          dup
          not
          branchIfTrue label58
          pop
          push ' p3z='
          getVariable
          push '}w4Jd'
          getMember
          push 1
          equals
         label58:
          dup
          not
          branchIfTrue label59
          pop
          push '0'
          getVariable
          push '[zd+1('
          getMember
          push 0
          getMember
          push 2
          bitwiseAnd
          push 0
          equals
         label59:
          not
          branchIfTrue label60
          push '0'
          getVariable
          push '))Yv5'
          getMember
          push '1AAJE(', FALSE
          setMember
          branch label61
         label60:
          push '0'
          getVariable
          push '))Yv5'
          getMember
          push '1AAJE(', TRUE
          setMember
         label61:
          push '5U4B'
          getVariable
          push 0
          lessThan
          not
          branchIfTrue label63
          push ' p3z='
          getVariable
          push '}w4Jd', ' p3z='
          getVariable
          push '}w4Jd'
          getMember
          decrement
          setRegister r:0
          setMember
          push r:0, 0
          equals
          not
          branchIfTrue label62
          push '0'
          getVariable
          push '))Yv5'
          getMember
          push '9==)', FALSE
          setMember
         label62:
          push '0Lh]4('
          getVariable
          push 1, '980Sb'
          getVariable
          push '8KrCz'
          getMember
          push 'remove'
          callMethod
          pop
         label63:
        end // of function 

        setVariable
        push '0Lh]4('
        getVariable
        push 1, '980Sb'
        getVariable
        push '8KrCz'
        getMember
        push 'push'
        callMethod
        pop
        branch label75
       label64:
        push 0, '0'
        getVariable
        push '=HU11'
        getMember
        push '+UDgF('
        callMethod
        setRegister r:7
        pop
        push '6LF', '=(,aA'
        getVariable
        push '6jZ'
        getMember
        push 0, r:7, '}[R4,('
        callMethod
        push 2, ';ndCG'
        getVariable
        push '4u57)'
        callMethod
        varEquals
        push '=(,aA'
        getVariable
        push '*sd+;('
        getMember
        push 2
        divide
        push '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        push 2
        divide
        push 2, r:7, '(j;o7'
        callMethod
        pop
        push ']bJo*', 1, r:7, '}J'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:7, '*(', 100
        setMember
        push r:7, 'scale', r:7, 'scale'
        getMember
        push 2
        multiply
        setMember
        push 0.08, 1, r:7, '[5(-'
        callMethod
        pop
        push r:7, '}[R4,('
        function2 () (r:1='this')
          push '6LF'
          getVariable
          return
        end // of function 

        setMember
        branch label75
       label65:
        push '=(,aA'
        getVariable
        push ']r3=3'
        getMember
        push 1, '0'
        getVariable
        push ']}lAm'
        getMember
        push '18wU*'
        callMethod
        push 3000, r:3, r:2, 4, '89A}+'
        new
        setRegister r:8
        pop
        push '=(,aA'
        getVariable
        push '[Ol6B'
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push '0'
        getVariable
        push '6buD-', '0'
        getVariable
        push '6buD-'
        getMember
        push 0
        getMember
        push 10
        add
        push 1
        initArray
        setMember
        push '0'
        getVariable
        push '6buD-'
        getMember
        push 0
        getMember
        push '=(,aA'
        getVariable
        push '=tvTo'
        getMember
        greaterThan
        not
        branchIfTrue label66
        push '0'
        getVariable
        push '6buD-', '=(,aA'
        getVariable
        push '=tvTo'
        getMember
        push 1
        initArray
        setMember
       label66:
        branch label75
       label67:
        push '0'
        getVariable
        push '))Yv5'
        getMember
        push '}Yax5', '0'
        getVariable
        push '))Yv5'
        getMember
        push '}Yax5'
        getMember
        push 0
        getMember
        push 1.0
        subtract
        push 1
        initArray
        setMember
        push '0'
        getVariable
        push '))Yv5'
        getMember
        push '}Yax5'
        getMember
        push 0
        getMember
        push '=(,aA'
        getVariable
        push '6L(56('
        getMember
        lessThan
        not
        branchIfTrue label68
        push '0'
        getVariable
        push '))Yv5'
        getMember
        push '}Yax5', '=(,aA'
        getVariable
        push '6L(56('
        getMember
        push 1
        initArray
        setMember
       label68:
        branch label75
       label69:
        push '0'
        getVariable
        push '5y,6t'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label70
        push UNDEF
        return
       label70:
        push '7', '0'
        getVariable
        push '))Yv5'
        getMember
        push '; ='
        getMember
        push 0
        getMember
        varEquals
        push '0'
        getVariable
        push '5y,6t'
        function2 () (r:1='this')
          push '0'
          getVariable
          push '))Yv5'
          getMember
          push '; ='
          getMember
          push 0
          getMember
          push 0
          greaterThan
          not
          dup
          branchIfTrue label71
          pop
          push '7'
          getVariable
          push 0
          greaterThan
          not
         label71:
          not
          branchIfTrue label72
          push '0'
          getVariable
          push '5y,6t', NULL
          setMember
          push UNDEF
          return
         label72:
          push 0, 1, '0'
          getVariable
          push '))Yv5'
          getMember
          push '- u_k'
          callMethod
          setRegister r:2
          pop
          push '0'
          getVariable
          push '))Yv5'
          getMember
          push '; ='
          getMember
          push 0
          getMember
          push 2
          modulo
          push 0
          equals
          not
          branchIfTrue label73
          push 0, '0'
          getVariable
          push '=HU11'
          getMember
          push '+UDgF('
          callMethod
          setRegister r:3
          pop
          push r:3, '*B', 75
          setMember
          push r:3, '}J'
          getMember
          push '_x', r:2, '(('
          getMember
          setMember
          push r:3, '}J'
          getMember
          push '_y', r:2, ')('
          getMember
          setMember
          push 76, 1, r:3, '}J'
          getMember
          push '-'
          getMember
          push 'gotoAndStop'
          callMethod
          pop
         label73:
          push 0, '0'
          getVariable
          push '))Yv5'
          getMember
          push '[3r2L('
          callMethod
          push 1, '0'
          getVariable
          push '))Yv5'
          getMember
          push ';-[;H'
          callMethod
          pop
          push 0, '0'
          getVariable
          push '))Yv5'
          getMember
          push 'draw'
          callMethod
          pop
          push '7', '7'
          getVariable
          decrement
          setVariable
        end // of function 

        setMember
        branch label75
       label74:
        push 0, '0'
        getVariable
        push '=+lJE'
        getMember
        push 'start'
        callMethod
        pop
        branch label75
       label75:
      end // of function 

      setMember
      push r:0, '(rCc*', 1
      setMember
      push r:0, '}w4Jd', 0
      setMember
      push '+7U K'
      function2 (r:2='}J') (r:1='this')
        push r:this, ')2fr3', r:'}J'
        setMember
        push r:this, '}Zms3', 0, 'Array'
        new
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, ']1sj+'
      function2 () (r:1='this')
        push r:this, ')2fr3'
        getMember
        return
      end // of function 

      setMember
      push r:1, '-fC3a'
      function2 (r:2='59F') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'59F'
        getMember
        setRegister r:3
        pop
        push r:3, NULL
        equals
        not
        branchIfTrue label76
        push '9oK', 0, 'Array'
        new
        push '7-,', 0, 2
        initObject
        setRegister r:3
        pop
        push r:this, '}Zms3'
        getMember
        push r:'59F', r:3
        setMember
       label76:
        push r:3
        return
      end // of function 

      setMember
      push r:1, ']bu40'
      function2 (r:2='[-99') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'[-99'
        getMember
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:7
        pop
        push r:'[-99', 1000
        multiply
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label78
       label77:
        push r:6
        increment
        setRegister r:6
        pop
       label78:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label80
        push r:4, r:6
        getMember
        push '_name'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label79
        push r:8, r:7
        add
        push 1, r:4, r:6
        getMember
        push 'swapDepths'
        callMethod
        pop
        push r:4, r:7, r:4, r:6
        getMember
        setMember
        push r:7
        increment
        setRegister r:7
        pop
       label79:
        branch label77
       label80:
        push r:3, '7-,', r:7
        setMember
      end // of function 

      setMember
      push r:1, '*=_p_'
      function2 (r:2='*KB2', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label81
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'*KB2', 2, r:this, '*=_p_'
        callMethod
        return
       label81:
        push r:6, r:'[-99', 1000
        multiply
        add
        push r:'*KB2', r:this, ')2fr3'
        getMember
        push 3, '3Wt'
        getVariable
        push 'attachMC'
        callMethod
        setRegister r:7
        pop
        push r:5, r:6, r:7
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:7
        return
      end // of function 

      setMember
      push r:1, '18wU*'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push r:5, 1000
        equals
        not
        branchIfTrue label82
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', 1, r:this, '18wU*'
        callMethod
        return
       label82:
        push r:5, r:'[-99', 1000
        multiply
        add
        push r:this, ')2fr3'
        getMember
        push 2, '3Wt'
        getVariable
        push 'createEmptyMC'
        callMethod
        setRegister r:6
        pop
        push r:4, r:5, r:6
        setMember
        push r:3, '7-,', r:3, '7-,'
        getMember
        increment
        setMember
        push r:6
        return
      end // of function 

      setMember
      push r:1, '(GbB}'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label83
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        return
       label83:
        push r:5, r:6, r:'}J'
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:6, r:'[-99', 1000
        multiply
        add
        return
      end // of function 

      setMember
      push r:1, '+2NA'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        push 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, r:'[-99'
        equals
        not
        branchIfTrue label84
        push UNDEF
        return
       label84:
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:5, '7-,'
        getMember
        setRegister r:7
        pop
        push 0
        setRegister r:8
        pop
        branch label86
       label85:
        push r:8
        increment
        setRegister r:8
        pop
       label86:
        push r:8, r:7
        lessThan
        not
        branchIfTrue label88
        push r:6, r:8
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label87
        push r:6, r:8, NULL
        setMember
        branch label88
       label87:
        branch label85
       label88:
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}oQA7'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label89
        push r:6, r:7, NULL
        setMember
        push r:'}J', 1, r:6, 'unshift'
        callMethod
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label89:
      end // of function 

      setMember
      push r:1, '08M8'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label91
        push r:6, r:7, NULL
        setMember
        push r:5, '7-,'
        getMember
        push 1000
        equals
        not
        branchIfTrue label90
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label90:
        push r:5, '7-,'
        getMember
        setRegister r:3
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:3, r:4, 1000
        multiply
        add
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
        push r:6, r:3, r:'}J'
        setMember
       label91:
      end // of function 

      setMember
      push r:1, 'clear'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:4
        pop
        branch label93
       label92:
        push r:4
        increment
        setRegister r:4
        pop
       label93:
        push r:4, r:3, '7-,'
        getMember
        lessThan
        not
        branchIfTrue label94
        push 0, r:5, r:4
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label92
       label94:
        push r:3, '7-,', 0
        setMember
      end // of function 

      setMember
      push r:1, '9(K ;'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push -99999999
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label96
       label95:
        push r:6
        increment
        setRegister r:6
        pop
       label96:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label104
        push r:4, r:6
        getMember
        setRegister r:9
        pop
        push r:9, '_y'
        getMember
        setRegister r:10
        pop
        push r:10, r:8
        lessThan
        not
        not
        branchIfTrue label97
        push r:10
        setRegister r:8
        pop
        branch label103
       label97:
        push r:6
        setRegister r:7
        pop
        branch label99
       label98:
        push r:7
        decrement
        setRegister r:7
        pop
       label99:
        push r:7, 0
        greaterThan
        not
        branchIfTrue label102
        push r:4, r:7, 1
        subtract
        getMember
        setRegister r:11
        pop
        push r:11, '_y'
        getMember
        push r:10
        greaterThan
        not
        branchIfTrue label100
        push r:4, r:7, r:11
        setMember
        push r:11, 1, r:9, 'swapDepths'
        callMethod
        pop
        branch label101
       label100:
        push r:4, r:7, r:9
        setMember
        branch label102
       label101:
        branch label98
       label102:
        push r:7, 0
        equals
        not
        branchIfTrue label103
        push r:4, 0, r:9
        setMember
       label103:
        branch label95
       label104:
      end // of function 

      setMember
      push r:1, ',}2X ('
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label106
       label105:
        push r:2
        increment
        setRegister r:2
        pop
       label106:
        push r:2, r:this, '}Zms3'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label107
        push r:2, 1, r:this, 'clear'
        callMethod
        pop
        branch label105
       label107:
      end // of function 

      setMember
      push '7Z[GL'
      function2 (r:2='9w=+', r:3='4AF') (r:1='this')
        push r:this, ']}lAm', r:'9w=+'
        setMember
        push r:this, '}SYp5', '=(,aA'
        getVariable
        push '}Tg7W'
        getMember
        push 1, r:'9w=+', '18wU*'
        callMethod
        setMember
        push r:this, '}[3', '=(,aA'
        getVariable
        push '}Tg7W'
        getMember
        push 1, r:'9w=+', '18wU*'
        callMethod
        setMember
        push r:this, '9k,B', '=(,aA'
        getVariable
        push '}Tg7W'
        getMember
        push '9k,B', 2, r:'9w=+', '*=_p_'
        callMethod
        setMember
        push r:this, ';96ZI', 1, 1
        initArray
        setMember
        push r:this, '0de1f', 1
        setMember
        push r:this, '0{lc4', 0, 'Array'
        new
        setMember
        push r:this, '5M_T6', '(v+', r:this, '9k,B'
        getMember
        push 2, '3Wt'
        getVariable
        push 'getVar'
        callMethod
        setMember
        push r:this, '5M_T6'
        getMember
        push '_visible', FALSE
        setMember
        push r:this, '((', r:'4AF', '(('
        getMember
        setMember
        push r:this, ')(', r:'4AF', ')('
        getMember
        setMember
        push r:this, '{2', 0
        setMember
        push r:this, '}2', 0
        setMember
        push r:this, '3u(', 0
        setMember
        push r:this, '5R0', 0
        setMember
        push r:this, '3BA=M', -100
        setMember
        push r:this, '70rI9(', '=(,aA'
        getVariable
        push '7mdu]'
        getMember
        setMember
        push r:this, '}Yax5', '=(,aA'
        getVariable
        push '(Cxdd'
        getMember
        push 1
        initArray
        setMember
        push r:this, '; =', '=(,aA'
        getVariable
        push '2]*hb'
        getMember
        push 1
        initArray
        setMember
        push r:this, '5T6+', 0
        setMember
        push r:this, ';NIYA', TRUE
        setMember
        push 0
        setRegister r:4
        pop
        branch label109
       label108:
        push r:4
        increment
        setRegister r:4
        pop
       label109:
        push r:4, 50
        lessThan
        not
        branchIfTrue label110
        push r:'4AF', 1, r:this, '0{lc4'
        getMember
        push 'push'
        callMethod
        pop
        branch label108
       label110:
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '- u_k'
      function2 (r:2='0twi)') (r:1='this')
        push r:this, '0{lc4'
        getMember
        push r:this, '0{lc4'
        getMember
        push 'length'
        getMember
        push r:this, '; ='
        getMember
        push 0
        getMember
        push '=(,aA'
        getVariable
        push '{Yna0('
        getMember
        multiply
        subtract
        push r:'0twi)'
        add
        push 0, 2, 'Math'
        getVariable
        push 'max'
        callMethod
        int
        getMember
        return
      end // of function 

      setMember
      push r:1, '}SC6'
      function2 (r:2='21Ld)(') (r:1='this')
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        setRegister r:3
        pop
        push FALSE
        setRegister r:4
        pop
        push 100, r:3
        divide
        push 1, 'Math'
        getVariable
        push 'round'
        callMethod
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label111
        push 0, r:this, '9k,B'
        getMember
        push '7Q'
        getMember
        push 'play'
        callMethod
        pop
        push 0, r:this, '9k,B'
        getMember
        push '8Q'
        getMember
        push 'play'
        callMethod
        pop
       label111:
        push r:this, '5R0'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label112
        push r:this, '5R0', r:this, '5R0'
        getMember
        push r:this, '0de1f'
        getMember
        push r:3
        multiply
        push 2
        divide
        subtract
        setMember
        push r:this, ';NIYA', TRUE
        setMember
       label112:
        push r:this, '3BA=M'
        getMember
        push r:this, '3u('
        getMember
        equals
        not
        not
        branchIfTrue label113
        push r:this, '3u(', r:this, '3u('
        getMember
        push r:this, '3u('
        getMember
        push 'Math'
        getVariable
        push 'PI'
        getMember
        push 2
        multiply
        divide
        int
        push 'Math'
        getVariable
        push 'PI'
        getMember
        multiply
        push 2
        multiply
        subtract
        setMember
        push r:this, '3BA=M', r:this, '3u('
        getMember
        setMember
        push r:this, '{2', r:this, '3u('
        getMember
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setMember
        push r:this, '}2', r:this, '3u('
        getMember
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setMember
       label113:
        push r:this, '}Yax5'
        getMember
        push 0
        getMember
        push r:3
        multiply
        push r:this, ';96ZI'
        getMember
        push 0
        getMember
        multiply
        setRegister r:5
        pop
        push '=(,aA'
        getVariable
        push '{Yna0('
        getMember
        setRegister r:6
        pop
        push 3, r:6
        multiply
        push r:6, 1.5
        multiply
        push r:this, '; ='
        getMember
        push 0
        getMember
        add
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:7
        pop
        push '((', r:this, '(('
        getMember
        push r:this, '{2'
        getMember
        push r:7
        multiply
        add
        push ')(', r:this, ')('
        getMember
        push r:this, '}2'
        getMember
        push r:7
        multiply
        add
        push 2
        initObject
        setRegister r:8
        pop
        push r:5, r:6
        divide
        int
        push 1
        add
        setRegister r:9
        pop
       label114:
        push r:9, 0
        greaterThan
        not
        branchIfTrue label119
        push r:9
        decrement
        setRegister r:9
        pop
        push r:9, 0
        greaterThan
        not
        branchIfTrue label115
        push r:6
        branch label116
       label115:
        push r:5, r:6
        modulo
       label116:
        setRegister r:10
        pop
        push r:8, '((', r:8, '(('
        getMember
        push r:this, '{2'
        getMember
        push r:10
        multiply
        add
        setMember
        push r:8, ')(', r:8, ')('
        getMember
        push r:this, '}2'
        getMember
        push r:10
        multiply
        add
        setMember
        push r:this, '9==)'
        getMember
        not
        dup
        not
        branchIfTrue label117
        pop
        push TRUE, r:8, ')('
        getMember
        push r:8, '(('
        getMember
        push 3, r:this, '}[3'
        getMember
        push 'hitTest'
        callMethod
       label117:
        not
        branchIfTrue label118
        push r:this, '5R0', 0
        setMember
        push TRUE
        setRegister r:4
        pop
        branch label119
       label118:
        branch label114
       label119:
        push r:this, '((', r:this, '(('
        getMember
        push r:this, '{2'
        getMember
        push r:5
        multiply
        add
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push r:this, '}2'
        getMember
        push r:5
        multiply
        add
        setMember
        push r:this, '5T6+', r:this, '5T6+'
        getMember
        push r:5, r:6
        divide
        add
        setMember
        push '((', r:this, '(('
        getMember
        push ')(', r:this, ')('
        getMember
        push 2
        initObject
        setRegister r:11
        pop
       label120:
        push r:this, '5T6+'
        getMember
        push 1
        lessThan
        not
        not
        branchIfTrue label121
        push r:this, '5T6+', r:this, '5T6+'
        getMember
        decrement
        setMember
        push r:11, 1, r:this, '0{lc4'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, ';NIYA', TRUE
        setMember
        branch label120
       label121:
        push r:8, '(('
        getMember
        setRegister r:12
        pop
        push r:8, ')('
        getMember
        setRegister r:13
        pop
        push r:12, r:'21Ld)(', 'left'
        getMember
        lessThan
        dup
        branchIfTrue label122
        pop
        push r:13, r:'21Ld)(', 'top'
        getMember
        lessThan
       label122:
        dup
        branchIfTrue label123
        pop
        push r:12, r:'21Ld)(', 'right'
        getMember
        greaterThan
       label123:
        dup
        branchIfTrue label124
        pop
        push r:13, r:'21Ld)(', 'bottom'
        getMember
        greaterThan
       label124:
        not
        branchIfTrue label125
        push r:this, '5R0', 0
        setMember
        push TRUE
        setRegister r:4
        pop
       label125:
        push r:this, '(kvTB(', r:8
        setMember
        push r:4
        return
      end // of function 

      setMember
      push r:1, '565'
      function2 (r:2='1R') (r:1='this')
        push TRUE, r:'1R', ')('
        getMember
        push r:'1R', '(('
        getMember
        push 3, r:this, '}[3'
        getMember
        push 'hitTest'
        callMethod
        dup
        branchIfTrue label126
        pop
        push TRUE, r:'1R', ')('
        getMember
        push r:'1R', '(('
        getMember
        push 3, r:this, '9k,B'
        getMember
        push 'hitTest'
        callMethod
       label126:
        return
      end // of function 

      setMember
      push r:1, 'draw'
      function2 () (r:1='this')
        push r:this, '; ='
        getMember
        push 0
        getMember
        push 3
        add
        push 10, 2, 'Math'
        getVariable
        push 'min'
        callMethod
        push 20
        divide
        setRegister r:2
        pop
        push r:this, '9k,B'
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '9k,B'
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
        push r:this, '9k,B'
        getMember
        push '_rotation', r:this, '3u('
        getMember
        push 180
        multiply
        push 'Math'
        getVariable
        push 'PI'
        getMember
        divide
        setMember
        push r:this, '9k,B'
        getMember
        push '_xscale', 30, 70, r:2
        multiply
        add
        setMember
        push r:this, '9k,B'
        getMember
        push '_yscale', 30, 70, r:2
        multiply
        add
        setMember
        push r:this, ';NIYA'
        getMember
        not
        not
        branchIfTrue label127
        push UNDEF
        return
       label127:
        push r:this, ';NIYA', FALSE
        setMember
        push 0, r:this, '}[3'
        getMember
        push 'clear'
        callMethod
        pop
        push 0, r:this, '}SYp5'
        getMember
        push 'clear'
        callMethod
        pop
        push r:this, '}[3'
        getMember
        setRegister r:3
        pop
        push r:this, '}[3', r:this, '}SYp5'
        getMember
        setMember
        push 4, 8, 12054396, r:2, 4, r:this, ' nV0G('
        callMethod
        pop
        push r:this, '}[3', r:3
        setMember
        push 0, 8, 0, r:this, '+_B[k'
        callMethod
        push r:2, 4, r:this, ' nV0G('
        callMethod
        pop
        push 0, 5, 0, r:this, '[3r2L('
        callMethod
        push r:2, 4, r:this, ' nV0G('
        callMethod
        pop
        push r:this, '9==)'
        getMember
        dup
        not
        branchIfTrue label128
        pop
        push r:this, '1AAJE('
        getMember
       label128:
        not
        branchIfTrue label129
        push '2', 1, r:this, '9k,B'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        branch label130
       label129:
        push '1', 1, r:this, '9k,B'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
       label130:
      end // of function 

      setMember
      push r:1, '[3r2L('
      function2 () (r:1='this')
        push r:this, '9==)'
        getMember
        dup
        not
        branchIfTrue label131
        pop
        push r:this, '1AAJE('
        getMember
       label131:
        not
        branchIfTrue label132
        push '=(,aA'
        getVariable
        push '64,N3'
        getMember
        return
       label132:
        push '=(,aA'
        getVariable
        push '}TXJ5('
        getMember
        return
      end // of function 

      setMember
      push r:1, '+_B[k'
      function2 () (r:1='this')
        push r:this, '9==)'
        getMember
        dup
        not
        branchIfTrue label133
        pop
        push r:this, '1AAJE('
        getMember
       label133:
        not
        branchIfTrue label134
        push '=(,aA'
        getVariable
        push '];7w6'
        getMember
        return
       label134:
        push '=(,aA'
        getVariable
        push '981E(('
        getMember
        return
      end // of function 

      setMember
      push r:1, ' nV0G('
      function2 (r:2='scale', r:3='color', r:4=' *AD1', r:5='}2') (r:1='this')
        push r:this, '0{lc4'
        getMember
        push 'length'
        getMember
        push 1
        subtract
        setRegister r:6
        pop
        push r:this, '0{lc4'
        getMember
        push r:6
        getMember
        setRegister r:7
        pop
        push r:scale, 15
        multiply
        push r:this, '; ='
        getMember
        push 0
        getMember
        divide
        setRegister r:10
        pop
        push r:this, '5R0'
        getMember
        push 0
        greaterThan
        setRegister r:12
        pop
        push '=(,aA'
        getVariable
        push '{Yna0('
        getMember
        setRegister r:15
        pop
        push r:15, 2
        divide
        int
        setRegister r:16
        pop
        push r:7, ')('
        getMember
        push r:'}2'
        add
        push r:7, '(('
        getMember
        push 2, r:this, '}[3'
        getMember
        push 'moveTo'
        callMethod
        pop
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 1.7
        lessThan
        not
        branchIfTrue label140
        push r:this, '; ='
        getMember
        push 0
        getMember
        setRegister r:9
        pop
        branch label136
       label135:
        push r:9
        decrement
        setRegister r:9
        pop
       label136:
        push r:9, 0
        greaterThan
        not
        branchIfTrue label139
        push r:this, '0{lc4'
        getMember
        push r:6, r:15
        subtract
        getMember
        setRegister r:7
        pop
        push r:this, '0{lc4'
        getMember
        push r:6, r:16
        subtract
        getMember
        setRegister r:8
        pop
        push r:12
        not
        branchIfTrue label137
        push 2, r:9, r:this, '5R0'
        getMember
        subtract
        push r:9, r:this, '5R0'
        getMember
        subtract
        multiply
        push 2
        divide
        subtract
        push 1, 2, 'Math'
        getVariable
        push 'max'
        callMethod
        setRegister r:11
        pop
        branch label138
       label137:
        push 1
        setRegister r:11
        pop
       label138:
        push 100, r:color, r:9, r:10
        multiply
        push r:11
        multiply
        push r:' *AD1'
        add
        push 3, r:this, '}[3'
        getMember
        push 'lineStyle'
        callMethod
        pop
        push r:7, ')('
        getMember
        push r:'}2'
        add
        push r:7, '(('
        getMember
        push r:8, ')('
        getMember
        push r:'}2'
        add
        push r:8, '(('
        getMember
        push 4, r:this, '}[3'
        getMember
        push 'curveTo'
        callMethod
        pop
        push r:6, r:15
        subtract
        setRegister r:6
        pop
        branch label135
       label139:
        branch label145
       label140:
        push r:this, '; ='
        getMember
        push 0
        getMember
        setRegister r:9
        pop
        branch label142
       label141:
        push r:9
        decrement
        setRegister r:9
        pop
       label142:
        push r:9, 0
        greaterThan
        not
        branchIfTrue label145
        push r:6, r:15
        subtract
        setRegister r:6
        pop
        push r:this, '0{lc4'
        getMember
        push r:6
        getMember
        setRegister r:7
        pop
        push r:12
        not
        branchIfTrue label143
        push 2, r:9, r:this, '5R0'
        getMember
        subtract
        push r:9, r:this, '5R0'
        getMember
        subtract
        multiply
        push 2
        divide
        subtract
        push 1, 2, 'Math'
        getVariable
        push 'max'
        callMethod
        setRegister r:11
        pop
        branch label144
       label143:
        push 1
        setRegister r:11
        pop
       label144:
        push 100, r:color, r:9, r:10
        multiply
        push r:11
        multiply
        push r:' *AD1'
        add
        push 3, r:this, '}[3'
        getMember
        push 'lineStyle'
        callMethod
        pop
        push r:7, ')('
        getMember
        push r:'}2'
        add
        push r:7, '(('
        getMember
        push 2, r:this, '}[3'
        getMember
        push 'lineTo'
        callMethod
        pop
        branch label141
       label145:
      end // of function 

      setMember
      push r:1, '=FzV=('
      function2 () (r:1='this')
        push r:this, '0{lc4'
        getMember
        push 'length'
        getMember
        push r:this, '; ='
        getMember
        push 0
        getMember
        push '=(,aA'
        getVariable
        push '{Yna0('
        getMember
        multiply
        subtract
        push 1
        subtract
        push 0, 2, 'Math'
        getVariable
        push 'max'
        callMethod
        int
        push 0, 2, r:this, '0{lc4'
        getMember
        push 'splice'
        callMethod
        pop
        push r:this, '0{lc4'
        getMember
        push 0
        getMember
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label147
       label146:
        push r:3
        increment
        setRegister r:3
        pop
       label147:
        push r:3, 10
        lessThan
        not
        branchIfTrue label148
        push r:2, 1, r:this, '0{lc4'
        getMember
        push 'unshift'
        callMethod
        pop
        branch label146
       label148:
        push r:this, '; =', r:this, '; ='
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push r:this, ';NIYA', TRUE
        setMember
        push r:this, '5R0', r:this, '; ='
        getMember
        push 0
        getMember
        push 1
        subtract
        int
        setMember
      end // of function 

      setMember
      push r:1, 'reverse'
      function2 () (r:1='this')
        push -1
        setRegister r:2
        pop
        push r:2, 1, r:this, '- u_k'
        callMethod
        setRegister r:3
        pop
        branch label151
       label149:
        push r:3, r:4
        equals
        dup
        not
        branchIfTrue label150
        pop
        push r:2, 20
        lessThan
       label150:
        not
        branchIfTrue label152
       label151:
        push r:2, r:2
        increment
        setRegister r:2
        pop
        push 1, r:this, '- u_k'
        callMethod
        setRegister r:4
        pop
        branch label149
       label152:
        push r:this, '0{lc4'
        getMember
        push 'length'
        getMember
        push r:this, '; ='
        getMember
        push 0
        getMember
        push '=(,aA'
        getVariable
        push '{Yna0('
        getMember
        multiply
        subtract
        push 1
        subtract
        push 0, 2, 'Math'
        getVariable
        push 'max'
        callMethod
        int
        push 0, 2, r:this, '0{lc4'
        getMember
        push 'splice'
        callMethod
        pop
        push r:this, '0{lc4'
        getMember
        push 'length'
        getMember
        setRegister r:6
        pop
        push 0
        setRegister r:5
        pop
        branch label154
       label153:
        push r:5
        increment
        setRegister r:5
        pop
       label154:
        push r:5, r:6, 2
        divide
        int
        lessThan
        not
        branchIfTrue label155
        push r:this, '0{lc4'
        getMember
        push r:5
        getMember
        setRegister r:7
        pop
        push r:this, '0{lc4'
        getMember
        push r:5, r:this, '0{lc4'
        getMember
        push r:6, r:5
        subtract
        push 1
        subtract
        getMember
        setMember
        push r:this, '0{lc4'
        getMember
        push r:6, r:5
        subtract
        push 1
        subtract
        push r:7
        setMember
        branch label153
       label155:
        push r:this, '3u(', r:3, '(('
        getMember
        push r:4, '(('
        getMember
        subtract
        push r:3, ')('
        getMember
        push r:4, ')('
        getMember
        subtract
        push 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        setMember
        push r:this, '((', r:3, '(('
        getMember
        setMember
        push r:this, ')(', r:3, ')('
        getMember
        setMember
        push r:this, ';NIYA', TRUE
        setMember
      end // of function 

      setMember
      push r:1, ';-[;H'
      function2 (r:2='rgb') (r:1='this')
        push r:this, '0{lc4'
        getMember
        push r:this, '0{lc4'
        getMember
        push 'length'
        getMember
        push r:this, '; ='
        getMember
        push 0
        getMember
        push '=(,aA'
        getVariable
        push '{Yna0('
        getMember
        multiply
        subtract
        getMember
        setRegister r:3
        pop
        push r:this, '; =', r:this, '; ='
        getMember
        push 0
        getMember
        decrement
        push 1
        initArray
        setMember
        push ',4QHB(', 0, 'Array'
        new
        varEquals
        push '2'
        var
        push '2', 0
        setVariable
        branch label157
       label156:
        push '2', '2'
        getVariable
        increment
        setVariable
       label157:
        push '2'
        getVariable
        push 10
        lessThan
        not
        branchIfTrue label158
        push '=(,aA'
        getVariable
        push '}kas6'
        getMember
        push '+NX-J(', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:4
        pop
        push 180, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 'Math'
        getVariable
        push 'PI'
        getMember
        divide
        setRegister r:5
        pop
        push 1, 100, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 100
        divide
        add
        setRegister r:6
        pop
        push r:4, 1, 'Color'
        new
        setRegister r:7
        pop
        push r:rgb, 1, r:7, 'setRGB'
        callMethod
        pop
        push r:4, '_xscale', r:this, '9k,B'
        getMember
        push '_xscale'
        getMember
        setMember
        push r:4, '_yscale', r:this, '9k,B'
        getMember
        push '_yscale'
        getMember
        setMember
        push r:4, '_x', r:3, '(('
        getMember
        setMember
        push r:4, '_y', r:3, ')('
        getMember
        setMember
        push '}J', r:4, '3u(', r:5, '}Yax5', r:6, 3
        initObject
        push 1, ',4QHB('
        getVariable
        push 'push'
        callMethod
        pop
        branch label156
       label158:
        push '0Lh]4('
        var
        push '0Lh]4('
        function2 () (r:1='this')
          push '2', 0
          setVariable
          branch label160
         label159:
          push '2', '2'
          getVariable
          increment
          setVariable
         label160:
          push '2'
          getVariable
          push ',4QHB('
          getVariable
          push 'length'
          getMember
          lessThan
          not
          branchIfTrue label162
          push ',4QHB('
          getVariable
          push '2'
          getVariable
          getMember
          setRegister r:2
          pop
          push r:2, '}Yax5'
          getMember
          push '{-kxL'
          getVariable
          push '-V;B'
          getMember
          multiply
          setRegister r:3
          pop
          push r:2, '}J'
          getMember
          push '_x', r:2, '}J'
          getMember
          push '_x'
          getMember
          push r:2, '3u('
          getMember
          push 1, 'Math'
          getVariable
          push 'cos'
          callMethod
          push r:3
          multiply
          add
          setMember
          push r:2, '}J'
          getMember
          push '_y', r:2, '}J'
          getMember
          push '_y'
          getMember
          push r:2, '3u('
          getMember
          push 1, 'Math'
          getVariable
          push 'sin'
          callMethod
          push r:3
          multiply
          add
          setMember
          push r:2, '}J'
          getMember
          push '_rotation', r:2, '}J'
          getMember
          push '_rotation'
          getMember
          push r:3, 10
          multiply
          add
          setMember
          push r:2, '}J'
          getMember
          push '_alpha', r:2, '}J'
          getMember
          push '_alpha'
          getMember
          push r:3, 10
          multiply
          subtract
          setMember
          push r:2, '}J'
          getMember
          push '_alpha'
          getMember
          push 0
          greaterThan
          not
          not
          branchIfTrue label161
          push 0, r:2, '}J'
          getMember
          push 'removeMovieClip'
          callMethod
          pop
          push r:2, 1, ',4QHB('
          getVariable
          push 'remove'
          callMethod
          pop
          push '2', '2'
          getVariable
          decrement
          setVariable
         label161:
          branch label159
         label162:
          push ',4QHB('
          getVariable
          push 'length'
          getMember
          push 0
          equals
          not
          branchIfTrue label163
          push '0Lh]4('
          getVariable
          push 1, '980Sb'
          getVariable
          push '8KrCz'
          getMember
          push 'remove'
          callMethod
          pop
         label163:
        end // of function 

        setVariable
        push '0Lh]4('
        getVariable
        push 1, '980Sb'
        getVariable
        push '8KrCz'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, ';NIYA', TRUE
        setMember
      end // of function 

      setMember
      push r:1, '9-,'
      function2 (r:2=']GD;') (r:1='this')
        push r:this, '; =', r:this, '; ='
        getMember
        push 0
        getMember
        push r:']GD;'
        subtract
        push 1
        initArray
        setMember
        push r:this, ';NIYA', TRUE
        setMember
      end // of function 

      setMember
      push r:1, ',}2X ('
      function2 () (r:1='this')
        push 0, r:this, '9k,B'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push 0, r:this, '}[3'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
      end // of function 

      setMember
      push 'flash'
      getVariable
      not
      not
      branchIfTrue label164
      push 'flash', 0, 'Object'
      new
      setVariable
     label164:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      not
      not
      branchIfTrue label165
      push 'flash'
      getVariable
      push 'filters', 0, 'Object'
      new
      setMember
     label165:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      push '{lN=R'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setMember
      push '{-kxL'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '87vE7('
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '4plQ5', '{-kxL'
        getVariable
        push '4plQ5'
        getMember
        increment
        setMember
        push 0, '3Wt'
        getVariable
        push 'getTimer'
        callMethod
        setRegister r:2
        pop
        push '{-kxL'
        getVariable
        push ';ILSy', r:2, '{-kxL'
        getVariable
        push '3R,QM'
        getMember
        subtract
        push 1000.0
        divide
        setMember
        push '{-kxL'
        getVariable
        push '3R,QM', r:2
        setMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        push '{-kxL'
        getVariable
        push ';y}-6('
        getMember
        lessThan
        not
        branchIfTrue label166
        push '{-kxL'
        getVariable
        push '-)Xd+', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        push '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        multiply
        push 1, '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        subtract
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        multiply
        add
        setMember
        branch label167
       label166:
        push '{-kxL'
        getVariable
        push ';ILSy', 1, '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        divide
        setMember
       label167:
        push '{-kxL'
        getVariable
        push '-V;B', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        setMember
      end // of function 

      setMember
      push r:0, 'fps'
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        return
      end // of function 

      setMember
      push r:0, '6GI,F', 32
      setMember
      push r:0, ';y}-6(', 0.5
      setMember
      push r:0, '3R,QM', 0, '3Wt'
      getVariable
      push 'getTimer'
      callMethod
      setMember
      push r:0, '[Ad;n', 0.95
      setMember
      push r:0, '-)Xd+', 1
      setMember
      push r:0, '-V;B', 1
      setMember
      push r:0, ';ILSy', 1
      setMember
      push r:0, '4plQ5', 0
      setMember
      push '(WBt)'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ']}Ou;(', 1
      setMember
      push r:0, '3I0pG', 2
      setMember
      push r:0, '{;7F4', 3
      setMember
      push r:0, '8U(wu', 4
      setMember
      push r:0, '}[cpB', 5
      setMember
      push r:0, '9xv]A', 6
      setMember
      push r:0, '{yQ=Q', 7
      setMember
      push r:0, '+,W', 8
      setMember
      push r:0, '2y+dV', 9
      setMember
      push r:0, '(tBee', 10
      setMember
      push r:0, '3)i[=', 11
      setMember
      push r:0, ' J3IC', 12
      setMember
      push r:0, '[6jRc', 13
      setMember
      push r:0, ')8Fyj', 14
      setMember
      push '89A}+'
      function2 (r:2='((', r:3=')(', r:4='7', r:5='}J') (r:1='this')
        push r:'}J', '_x', r:'(('
        setMember
        push r:'}J', '_y', r:')('
        setMember
        push r:'}J', '_xscale', 0
        setMember
        push r:'}J', '_yscale', 0
        setMember
        push r:this, '9YGH9', 0
        setMember
        push r:this, ']oA(;', 0
        setMember
        push r:this, '0Xx{3', 1
        setMember
        push r:this, ';z0(V', 25, r:'7', 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push 100
        divide
        add
        setMember
        push r:this, ';z0(V', 70, r:this, ';z0(V'
        getMember
        push 40, 2, 'Math'
        getVariable
        push 'max'
        callMethod
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setMember
        push r:this, ',qme;', 4
        setMember
        push r:this, '8(HR9', 4
        setMember
        push r:this, '4=anA', TRUE
        setMember
        push r:this, '2_TI7', TRUE
        setMember
        push r:this, '+_nS+(', FALSE
        setMember
        push '(K', r:this
        varEquals
        push r:this, '0Lh]4('
        function2 () (r:1='this')
          push 0, '(K'
          getVariable
          push '87vE7('
          callMethod
          pop
        end // of function 

        setMember
        push r:this, '0Lh]4('
        getMember
        push 1, '980Sb'
        getVariable
        push '8KrCz'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '}J', r:'}J'
        setMember
        push r:this, ' tAUn', TRUE
        setMember
        push r:this, '7ba4D(', TRUE
        setMember
        push r:'7', 1, r:this, '}-B2'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '}-B2'
      function2 (r:2='}') (r:1='this')
        push 0, r:this, 'clear'
        callMethod
        pop
        push 0
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        push '=I9G(('
        setRegister r:5
        pop
        push r:'}', 0
        equals
        not
        branchIfTrue label168
        push r:3, r:5, r:this, '}J'
        getMember
        push 3, '3Wt'
        getVariable
        push 'attachMC'
        callMethod
        setRegister r:6
        pop
        push 1
        toString
        push 1, r:6, 'gotoAndStop'
        callMethod
        pop
        push r:4, 0, r:6, '_width'
        getMember
        subtract
        subtract
        setRegister r:4
        pop
        push r:6, '_x', 0, r:4
        subtract
        setMember
        push r:6, 1, r:this, ',_usv'
        getMember
        push 'push'
        callMethod
        pop
        branch label169
       label168:
        push r:'}', 0
        greaterThan
        not
        branchIfTrue label169
        push r:3, r:3
        increment
        setRegister r:3
        pop
        push r:5, r:this, '}J'
        getMember
        push 3, '3Wt'
        getVariable
        push 'attachMC'
        callMethod
        setRegister r:7
        pop
        push 1, r:'}', 10
        modulo
        add
        toString
        push 1, r:7, 'gotoAndStop'
        callMethod
        pop
        push r:4, r:7, '_width'
        getMember
        subtract
        setRegister r:4
        pop
        push r:7, '_x', r:4
        setMember
        push r:7, 1, r:this, ',_usv'
        getMember
        push 'push'
        callMethod
        pop
        push r:'}', 10
        divide
        int
        setRegister r:'}'
        pop
        branch label168
       label169:
        push r:this, ' tAUn'
        getMember
        not
        branchIfTrue label174
        push r:4, 2
        divide
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        setRegister r:4
        pop
        push 0
        setRegister r:3
        pop
        branch label171
       label170:
        push r:3
        increment
        setRegister r:3
        pop
       label171:
        push r:3, r:this, ',_usv'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label172
        push r:this, ',_usv'
        getMember
        push r:3
        getMember
        push '_x', r:this, ',_usv'
        getMember
        push r:3
        getMember
        push '_x'
        getMember
        push r:4
        add
        setMember
        branch label170
       label172:
        push r:4, r:this, ';z0(V'
        getMember
        push 100
        divide
        multiply
        setRegister r:4
        pop
        push r:this, '}J'
        getMember
        push '_x'
        getMember
        push r:4
        subtract
        push 10
        lessThan
        not
        branchIfTrue label173
        push r:this, '}J'
        getMember
        push '_x', 10, r:4
        add
        setMember
       label173:
        push r:this, '}J'
        getMember
        push '_x'
        getMember
        push r:4
        add
        push 290
        greaterThan
        not
        branchIfTrue label174
        push r:this, '}J'
        getMember
        push '_x', 290, r:4
        subtract
        setMember
       label174:
        push r:this, '7ba4D('
        getMember
        not
        branchIfTrue label177
        push r:this, ',_usv'
        getMember
        push 0
        getMember
        push '_height'
        getMember
        push 2
        divide
        setRegister r:8
        pop
        push 0
        setRegister r:3
        pop
        branch label176
       label175:
        push r:3
        increment
        setRegister r:3
        pop
       label176:
        push r:3, r:this, ',_usv'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label177
        push r:this, ',_usv'
        getMember
        push r:3
        getMember
        push '_y', r:this, ',_usv'
        getMember
        push r:3
        getMember
        push '_y'
        getMember
        push r:8
        subtract
        setMember
        branch label175
       label177:
      end // of function 

      setMember
      push r:1, 'clear'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label179
       label178:
        push r:2
        increment
        setRegister r:2
        pop
       label179:
        push r:2, r:this, ',_usv'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label180
        push 0, r:this, ',_usv'
        getMember
        push r:2
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label178
       label180:
        push r:this, ',_usv', 0, 'Array'
        new
        setMember
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this')
        push r:this, '+_nS+('
        getMember
        not
        branchIfTrue label182
        push r:this, '0Xx{3', r:this, '0Xx{3'
        getMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        subtract
        setMember
        push r:this, '0Xx{3'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label181
        push r:this, '4=anA', TRUE
        setMember
        push r:this, '2_TI7', TRUE
        setMember
        push r:this, '+_nS+(', FALSE
        setMember
        branch label182
       label181:
        push UNDEF
        return
       label182:
        push r:this, '4=anA'
        getMember
        not
        branchIfTrue label183
        push r:this, '9YGH9', r:this, '9YGH9'
        getMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        push r:this, ',qme;'
        getMember
        multiply
        add
        setMember
       label183:
        push r:this, '2_TI7'
        getMember
        not
        branchIfTrue label184
        push r:this, ']oA(;', r:this, ']oA(;'
        getMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        push r:this, '8(HR9'
        getMember
        multiply
        add
        setMember
       label184:
        push r:this, '}J'
        getMember
        push '_xscale', r:this, '9YGH9'
        getMember
        push r:this, ';z0(V'
        getMember
        multiply
        setMember
        push r:this, '}J'
        getMember
        push '_yscale', r:this, ']oA(;'
        getMember
        push r:this, ';z0(V'
        getMember
        multiply
        setMember
        push r:this, '0Xx{3'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label190
        push r:this, '4=anA'
        getMember
        dup
        not
        branchIfTrue label185
        pop
        push r:this, '9YGH9'
        getMember
        push 1
        greaterThan
       label185:
        not
        branchIfTrue label187
        push r:this, '4=anA', FALSE
        setMember
        push r:this, '2_TI7'
        getMember
        not
        not
        branchIfTrue label186
        push r:this, '+_nS+(', TRUE
        setMember
       label186:
        push r:this, ',qme;', r:this, ',qme;'
        getMember
        push -1
        multiply
        setMember
       label187:
        push r:this, '2_TI7'
        getMember
        dup
        not
        branchIfTrue label188
        pop
        push r:this, ']oA(;'
        getMember
        push 1
        greaterThan
       label188:
        not
        branchIfTrue label190
        push r:this, '2_TI7', FALSE
        setMember
        push r:this, '4=anA'
        getMember
        not
        not
        branchIfTrue label189
        push r:this, '+_nS+(', TRUE
        setMember
       label189:
        push r:this, '8(HR9', r:this, '8(HR9'
        getMember
        push -1
        multiply
        setMember
       label190:
        push r:this, ',qme;'
        getMember
        push 0
        lessThan
        dup
        not
        branchIfTrue label191
        pop
        push r:this, '9YGH9'
        getMember
        push 0.3
        greaterThan
        not
       label191:
        dup
        branchIfTrue label192
        pop
        push r:this, '8(HR9'
        getMember
        push 0
        lessThan
        dup
        not
        branchIfTrue label192
        pop
        push r:this, ']oA(;'
        getMember
        push 0.3
        greaterThan
        not
       label192:
        not
        branchIfTrue label193
        push r:this, '0Lh]4('
        getMember
        push 1, '980Sb'
        getVariable
        push '8KrCz'
        getMember
        push 'remove'
        callMethod
        pop
        push 0, r:this, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
       label193:
      end // of function 

      setMember
      push '0vWVG'
      function2 (r:2='0') (r:1='this')
        push r:this, '+-(0', r:'0'
        setMember
        push r:this, ',XwMD', 0
        setMember
        push r:this, ' 9l=4(', 0
        setMember
        push r:this, '+ndd+', 0, 'Array'
        new
        setMember
        push r:this, ')YJHO', 0, 'Array'
        new
        setMember
        push r:this, '[6', 0, 1
        initArray
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '+UDgF('
      function2 () (r:1='this')
        push r:this, '+-(0'
        getMember
        push '6buD-'
        getMember
        push 0
        getMember
        push 3
        divide
        int
        setRegister r:2
        pop
        push r:this, '+-(0'
        getMember
        push '6buD-'
        getMember
        push 0
        getMember
        push '=(,aA'
        getVariable
        push '9DeDD('
        getMember
        push r:2
        subtract
        push 1
        add
        multiply
        push '=(,aA'
        getVariable
        push '=tvTo'
        getMember
        divide
        push 1, 'Math'
        getVariable
        push 'round'
        callMethod
        setRegister r:3
        pop
        push r:2, r:3, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        add
        setRegister r:4
        pop
        push '=(,aA'
        getVariable
        push '4Tn63'
        getMember
        push '5 xA+', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:5
        pop
        push r:5, '_xscale', 75
        setMember
        push r:5, '_yscale', 75
        setMember
        push r:4, 1
        add
        toString
        push 1, r:5, '-'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push r:5, r:4, 3, '(YzdC'
        new
        setRegister r:6
        pop
        push r:6, 1, r:this, '+ndd+'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '[6', r:this, '[6'
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push r:6
        return
      end // of function 

      setMember
      push r:1, '*lQ}C('
      function2 () (r:1='this')
        branch label196
       label194:
        push r:this, '+-(0'
        getMember
        push '=+lJE'
        getMember
        push '7}ata'
        getMember
        push 'length'
        getMember
        push 5
        lessThan
        dup
        not
        branchIfTrue label195
        pop
        push r:2, 7
        equals
       label195:
        not
        branchIfTrue label197
       label196:
        push '=(,aA'
        getVariable
        push '-6cK;'
        getMember
        push 1, '-[m(M'
        getVariable
        push '7g,ln'
        callMethod
        setRegister r:2
        pop
        branch label194
       label197:
        push '=(,aA'
        getVariable
        push '4Tn63'
        getMember
        push '4B1W(', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:3
        pop
        push r:3, '_xscale', 75
        setMember
        push r:3, '_yscale', 75
        setMember
        push r:2, 1
        add
        toString
        push 1, r:3, '-'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:3, r:2, 2, ' p3z='
        new
        push 1, r:this, ')YJHO'
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '0D 6'
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        setRegister r:2
        pop
        push r:this, '+-(0'
        getMember
        push '*, bp'
        getMember
        not
        not
        branchIfTrue label201
        push '=(,aA'
        getVariable
        push '7XmZ8('
        getMember
        push r:this, '+ndd+'
        getMember
        push 'length'
        getMember
        multiply
        push r:2
        divide
        push 1, 'Math'
        getVariable
        push 'round'
        callMethod
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label198
        push 0, r:this, '+UDgF('
        callMethod
        pop
       label198:
        push r:this, ' 9l=4('
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label199
        push r:this, ' 9l=4(', r:this, ' 9l=4('
        getMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        subtract
        setMember
        push r:this, ',XwMD', 0
        setMember
        branch label201
       label199:
        push '=(,aA'
        getVariable
        push ';lYg5'
        getMember
        push 0, ';ndCG'
        getVariable
        push '{8}XA('
        callMethod
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        push 10000
        divide
        add
        push r:this, ')YJHO'
        getMember
        push 'length'
        getMember
        push 1
        add
        multiply
        push r:2
        divide
        push r:this, ',XwMD'
        getMember
        push 6
        divide
        subtract
        push 1, 'Math'
        getVariable
        push 'round'
        callMethod
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label200
        push r:this, ',XwMD', 0
        setMember
        push 0, r:this, '*lQ}C('
        callMethod
        pop
        branch label201
       label200:
        push r:this, ',XwMD', r:this, ',XwMD'
        getMember
        push r:2
        add
        setMember
       label201:
        push r:this, '+-(0'
        getMember
        push '))Yv5'
        getMember
        push '5M_T6'
        getMember
        setRegister r:4
        pop
        push 0
        setRegister r:3
        pop
        branch label203
       label202:
        push r:3
        increment
        setRegister r:3
        pop
       label203:
        push r:3, r:this, '+ndd+'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label209
        push r:this, '+ndd+'
        getMember
        push r:3
        getMember
        setRegister r:5
        pop
        push 0, r:5, '87vE7('
        callMethod
        not
        not
        branchIfTrue label205
        push r:this, ' 9l=4(', r:this, ' 9l=4('
        getMember
        push 6
        add
        setMember
        push r:this, '+-(0'
        getMember
        push '6buD-', r:this, '+-(0'
        getMember
        push '6buD-'
        getMember
        push 0
        getMember
        push '=(,aA'
        getVariable
        push '{PzuS'
        getMember
        add
        push 1
        initArray
        setMember
        push r:this, '+-(0'
        getMember
        push '6buD-'
        getMember
        push 0
        getMember
        push 0
        lessThan
        not
        branchIfTrue label204
        push r:this, '+-(0'
        getMember
        push '6buD-', 0, 1
        initArray
        setMember
       label204:
        push r:5, 1, r:this, '+ndd+'
        getMember
        push 'remove'
        callMethod
        pop
        push r:this, '[6', r:this, '[6'
        getMember
        push 0
        getMember
        decrement
        push 1
        initArray
        setMember
        push r:3
        decrement
        setRegister r:3
        pop
        branch label208
       label205:
        push r:this, '+-(0'
        getMember
        push '*, bp'
        getMember
        not
        dup
        not
        branchIfTrue label206
        pop
        push r:5, '}J'
        getMember
        push r:4, 2, '3Wt'
        getVariable
        push 'hitTest'
        callMethod
       label206:
        dup
        not
        branchIfTrue label207
        pop
        push r:5, 1, r:this, '+-(0'
        getMember
        push '7eoE2'
        callMethod
       label207:
        not
        branchIfTrue label208
        push r:5, 1, r:this, '+ndd+'
        getMember
        push 'remove'
        callMethod
        pop
        push r:this, '[6', r:this, '[6'
        getMember
        push 0
        getMember
        decrement
        push 1
        initArray
        setMember
        push r:3
        decrement
        setRegister r:3
        pop
       label208:
        branch label202
       label209:
        push 0
        setRegister r:3
        pop
        branch label211
       label210:
        push r:3
        increment
        setRegister r:3
        pop
       label211:
        push r:3, r:this, ')YJHO'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label215
        push r:this, ')YJHO'
        getMember
        push r:3
        getMember
        setRegister r:6
        pop
        push 0, r:6, '87vE7('
        callMethod
        not
        not
        branchIfTrue label212
        push r:6, 1, r:this, ')YJHO'
        getMember
        push 'remove'
        callMethod
        pop
        push r:3
        decrement
        setRegister r:3
        pop
        branch label214
       label212:
        push r:this, '+-(0'
        getMember
        push '*, bp'
        getMember
        not
        dup
        not
        branchIfTrue label213
        pop
        push r:6, '}J'
        getMember
        push r:4, 2, '3Wt'
        getVariable
        push 'hitTest'
        callMethod
       label213:
        not
        branchIfTrue label214
        push r:this, '+-(0'
        getMember
        push 1, r:6, '2ufmm'
        callMethod
        pop
        push r:6, 1, r:this, ')YJHO'
        getMember
        push 'remove'
        callMethod
        pop
        push r:3
        decrement
        setRegister r:3
        pop
       label214:
        branch label210
       label215:
      end // of function 

      setMember
      push '44{N'
      function2 (r:2='}J') (r:1='this')
        push r:this, ';+', 0, ';+', r:'}J', 3, '3Wt'
        getVariable
        push 'attachMC'
        callMethod
        setMember
        push r:this, ']}lAm', 1, r:'}J', 2, '3Wt'
        getVariable
        push 'createEmptyMC'
        callMethod
        push 1, '+7U K'
        new
        setMember
        push r:this, '0SGTJ(', 2, r:'}J', 2, '3Wt'
        getVariable
        push 'createEmptyMC'
        callMethod
        push 1, '+7U K'
        new
        setMember
        push 3, '74hWz', r:'}J', 3, '3Wt'
        getVariable
        push 'attachMC'
        callMethod
        setRegister r:3
        pop
        push r:3, '_x', 5
        setMember
        push r:3, '_y', 5
        setMember
        push r:3, 1, 0, r:this, ']}lAm'
        getMember
        push ']1sj+'
        callMethod
        push 'setMask'
        callMethod
        pop
        push r:this, '=HU11', r:this, 1, '0vWVG'
        new
        setMember
        push r:this, '=+lJE', r:this, 1, '-s9=N'
        new
        setMember
        push r:this, '))Yv5', '((', 0, ')(', 0, 2
        initObject
        push r:this, ']}lAm'
        getMember
        push 2, '7Z[GL'
        new
        setMember
        push r:this, '))Yv5'
        getMember
        push '3u(', 'Math'
        getVariable
        push 'PI'
        getMember
        push 4
        divide
        setMember
        push r:this, '[zd+1(', 0, 1
        initArray
        setMember
        push r:this, '6buD-', 0, 1
        initArray
        setMember
        push r:this, '}EV}h', 0, 1
        initArray
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '=pE'
      function2 (r:2='[', r:3='7') (r:1='this')
       label216:
        push r:'[', 'length'
        getMember
        push r:'7'
        lessThan
        not
        branchIfTrue label217
        push '0', r:'['
        add
        setRegister r:'['
        pop
        branch label216
       label217:
        push r:'['
        return
      end // of function 

      setMember
      push r:1, '0D 6'
      function2 () (r:1='this')
        push r:this, '[zd+1(', r:this, '[zd+1('
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push r:this, '*, bp'
        getMember
        not
        branchIfTrue label218
        push 0, r:this, ']ln1*'
        callMethod
        pop
        push UNDEF
        return
       label218:
        push 0, r:this, '7MXeF('
        callMethod
        pop
        push r:this, '=HU11'
        getMember
        push '[6'
        getMember
        push 0
        getMember
        push r:this, '=HU11'
        getMember
        push '+ndd+'
        getMember
        push 'length'
        getMember
        equals
        not
        not
        branchIfTrue label219
        push 0, ';ndCG'
        getVariable
        push '0ze*c'
        callMethod
        pop
       label219:
      end // of function 

      setMember
      push r:1, '7eoE2'
      function2 (r:2='-') (r:1='this')
        push 0, r:'-', ') Kj'
        callMethod
        not
        branchIfTrue label220
        push FALSE
        return
       label220:
        push 0, r:'-', '}[R4,('
        callMethod
        setRegister r:3
        pop
        push '=(,aA'
        getVariable
        push ']r3=3'
        getMember
        push 1, r:this, ']}lAm'
        getMember
        push '18wU*'
        callMethod
        push r:3, 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        push r:'-', '}J'
        getMember
        push '_y'
        getMember
        push r:'-', '}J'
        getMember
        push '_x'
        getMember
        push 4, '89A}+'
        new
        setRegister r:4
        pop
        push r:'-', '*B'
        getMember
        push 1, r:this, '=+lJE'
        getMember
        push ' I134('
        callMethod
        pop
        push r:'-', '{a2bI'
        getMember
        not
        branchIfTrue label221
        push 0, r:this, '))Yv5'
        getMember
        push '=FzV=('
        callMethod
        pop
       label221:
        push 0, r:'-', ',}2X ('
        callMethod
        pop
        push r:this, '}EV}h', r:this, '}EV}h'
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push r:3, 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push r:this, '6buD-', r:this, '6buD-'
        getMember
        push 0
        getMember
        push '=(,aA'
        getVariable
        push '[r]x='
        getMember
        add
        push 1
        initArray
        setMember
        push r:this, '6buD-'
        getMember
        push 0
        getMember
        push '=(,aA'
        getVariable
        push '=tvTo'
        getMember
        greaterThan
        not
        branchIfTrue label222
        push r:this, '6buD-', '=(,aA'
        getVariable
        push '=tvTo'
        getMember
        push 1
        initArray
        setMember
       label222:
        push TRUE
        return
      end // of function 

      setMember
      push r:1, '7MXeF('
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        setRegister r:2
        pop
        push 'Key'
        getVariable
        push 'LEFT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label223
        push r:this, '))Yv5'
        getMember
        push '3u(', r:this, '))Yv5'
        getMember
        push '3u('
        getMember
        push r:this, '))Yv5'
        getMember
        push '70rI9('
        getMember
        push 0.5, r:this, '))Yv5'
        getMember
        push '}Yax5'
        getMember
        push 0
        getMember
        push '=(,aA'
        getVariable
        push '(Cxdd'
        getMember
        divide
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        push r:2
        multiply
        subtract
        setMember
       label223:
        push 'Key'
        getVariable
        push 'RIGHT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label224
        push r:this, '))Yv5'
        getMember
        push '3u(', r:this, '))Yv5'
        getMember
        push '3u('
        getMember
        push r:this, '))Yv5'
        getMember
        push '70rI9('
        getMember
        push 0.5, r:this, '))Yv5'
        getMember
        push '}Yax5'
        getMember
        push 0
        getMember
        push '=(,aA'
        getVariable
        push '(Cxdd'
        getMember
        divide
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        push r:2
        multiply
        add
        setMember
       label224:
        push r:this, '))Yv5'
        getMember
        push ';96ZI', r:this, '))Yv5'
        getMember
        push ';96ZI'
        getMember
        push 0
        getMember
        push r:2, '=(,aA'
        getVariable
        push '}V3Vn'
        getMember
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        push 1
        initArray
        setMember
        push 'Key'
        getVariable
        push 'UP'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label225
        push r:this, '))Yv5'
        getMember
        push ';96ZI', '=(,aA'
        getVariable
        push '+A,]V'
        getMember
        push 1
        initArray
        setMember
       label225:
        push r:this, '))Yv5'
        getMember
        push ';96ZI'
        getMember
        push 0
        getMember
        push 1
        lessThan
        not
        branchIfTrue label226
        push r:this, '))Yv5'
        getMember
        push ';96ZI', 1, 1
        initArray
        setMember
       label226:
        push 0, r:this, '5y,6t'
        callMethod
        pop
        push '=(,aA'
        getVariable
        push ',81W-('
        getMember
        push 1, r:this, '))Yv5'
        getMember
        push '}SC6'
        callMethod
        setRegister r:3
        pop
        push r:3
        not
        branchIfTrue label227
        push r:this, '*, bp', TRUE
        setMember
       label227:
        push r:this, '))Yv5'
        getMember
        push '}Yax5', r:this, '))Yv5'
        getMember
        push '}Yax5'
        getMember
        push 0
        getMember
        push '=(,aA'
        getVariable
        push '1g=d+('
        getMember
        push r:2
        multiply
        add
        push 1
        initArray
        setMember
        push 0, r:this, '=HU11'
        getMember
        push '0D 6'
        callMethod
        pop
        push 0, r:this, '=+lJE'
        getMember
        push '0D 6'
        callMethod
        pop
        push 0, r:this, '))Yv5'
        getMember
        push 'draw'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ']ln1*'
      function2 () (r:1='this')
        push r:this, '))Yv5'
        getMember
        push '; ='
        getMember
        push 0
        getMember
        push 0
        lessThan
        not
        not
        branchIfTrue label232
        push 4
        setRegister r:2
        pop
        push r:this, '))Yv5'
        getMember
        push '; ='
        getMember
        push 0
        getMember
        push 10
        greaterThan
        not
        branchIfTrue label228
        push 3
        setRegister r:2
        pop
       label228:
        push r:this, '))Yv5'
        getMember
        push '; ='
        getMember
        push 0
        getMember
        push 50
        greaterThan
        not
        branchIfTrue label229
        push 2
        setRegister r:2
        pop
       label229:
        push r:this, '))Yv5'
        getMember
        push '; ='
        getMember
        push 0
        getMember
        push 100
        greaterThan
        not
        branchIfTrue label230
        push 1
        setRegister r:2
        pop
       label230:
        push r:this, '[zd+1('
        getMember
        push 0
        getMember
        push r:2, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        int
        push 1, 2, 'Math'
        getVariable
        push 'max'
        callMethod
        modulo
        push 0
        equals
        not
        branchIfTrue label231
        push 0, r:this, '))Yv5'
        getMember
        push '[3r2L('
        callMethod
        push 1, r:this, '))Yv5'
        getMember
        push ';-[;H'
        callMethod
        pop
       label231:
        push 0, r:this, '))Yv5'
        getMember
        push 'draw'
        callMethod
        pop
        branch label233
       label232:
        push r:this, '))Yv5'
        getMember
        push '9k,B'
        getMember
        push '_visible', FALSE
        setMember
        push '$f', r:this, '}EV}h'
        getMember
        push 0
        getMember
        push '$j2', r:this, '=+lJE'
        getMember
        push '}-NqE('
        getMember
        push '$j3', r:this, '=+lJE'
        getMember
        push '{-NqE('
        getMember
        push 3
        initObject
        push 1, ';ndCG'
        getVariable
        push '}(Rc5'
        callMethod
        pop
       label233:
        push 0, r:this, '=HU11'
        getMember
        push '0D 6'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ',}2X ('
      function2 () (r:1='this')
        push 0, r:this, ']}lAm'
        getMember
        push ',}2X ('
        callMethod
        pop
      end // of function 

      setMember
      push '-[m(M'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',Hwi)'
      function2 ('-', r:2='5U4B') (r:1='this')
        push '*B'
        var
        push '*B', r:'5U4B'
        function2 () (r:1='this')
          push '*B'
          getVariable
          push 1, 'clearInterval', 1, '3Wt'
          getVariable
          push '16(VU'
          callMethod
          push UNDEF
          callMethod
          pop
          push 0, '-'
          callFunction
          pop
        end // of function 

        push 2, 'setInterval', 1, '3Wt'
        getVariable
        push '16(VU'
        callMethod
        push UNDEF
        callMethod
        setVariable
      end // of function 

      setMember
      push r:0, '}wUHz'
      function2 (r:2='=rJ', r:3='7olX7', r:4='}wUHz') (r:1='this')
        push r:'=rJ', NULL
        equals
        not
        branchIfTrue label234
        push NULL
        return
       label234:
        push r:'7olX7', 'length'
        getMember
        setRegister r:5
        pop
        push r:5, 1
        equals
        not
        branchIfTrue label235
        push r:'}wUHz', 1, r:'7olX7', 1, r:'=rJ', 'split'
        callMethod
        push 'join'
        callMethod
        return
       label235:
        push 0
        setRegister r:7
        pop
        push ''
        setRegister r:8
        pop
       label236:
        push TRUE
        not
        branchIfTrue label238
        push r:7, r:'7olX7', 2, r:'=rJ', 'indexOf'
        callMethod
        setRegister r:6
        pop
        push r:6, -1
        equals
        not
        branchIfTrue label237
        branch label238
       label237:
        push r:8, r:6, r:7, 2, r:'=rJ', 'slice'
        callMethod
        push r:'}wUHz'
        add
        add
        setRegister r:8
        pop
        push r:6, r:5
        add
        setRegister r:7
        pop
        branch label236
       label238:
        push r:8, r:7, 1, r:'=rJ', 'substring'
        callMethod
        add
        return
      end // of function 

      setMember
      push r:0, '* I51'
      function2 (r:2='=rJ') (r:1='this')
        push 0, 'Array'
        new
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        push r:'=rJ', 'length'
        getMember
        setRegister r:6
        pop
        push 0
        setRegister r:3
        pop
        branch label240
       label239:
        push r:3
        increment
        setRegister r:3
        pop
       label240:
        push r:3, r:6
        lessThan
        not
        branchIfTrue label245
        push r:3, 1, r:'=rJ', 'charCodeAt'
        callMethod
        setRegister r:7
        pop
        push r:7, 10
        equals
        dup
        branchIfTrue label241
        pop
        push r:7, 13
        equals
       label241:
        not
        branchIfTrue label244
        push r:3, r:5, 2, r:'=rJ', 'slice'
        callMethod
        push 1, r:4, 'push'
        callMethod
        pop
        push r:7, 13
        equals
        dup
        not
        branchIfTrue label242
        pop
        push r:3, 1
        add
        push 1, r:'=rJ', 'charCodeAt'
        callMethod
        push 10
        equals
       label242:
        not
        branchIfTrue label243
        push r:3
        increment
        setRegister r:3
        pop
       label243:
        push r:3, 1
        add
        setRegister r:5
        pop
       label244:
        branch label239
       label245:
        push r:3, r:5, 2, r:'=rJ', 'slice'
        callMethod
        push 1, r:4, 'push'
        callMethod
        pop
        push r:4
        return
      end // of function 

      setMember
      push r:0, ',JBe0'
      function2 (r:2=';p(') (r:1='this')
        push 0, r:';p(', 'duplicate'
        callMethod
        setRegister r:4
        pop
        push r:4, 'length'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:3
        pop
        branch label247
       label246:
        push r:3
        increment
        setRegister r:3
        pop
       label247:
        push r:3, r:5
        lessThan
        not
        branchIfTrue label248
        push r:5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:6
        pop
        push r:5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:7
        pop
        push r:4, r:6
        getMember
        setRegister r:8
        pop
        push r:4, r:6, r:4, r:7
        getMember
        setMember
        push r:4, r:7, r:8
        setMember
        branch label246
       label248:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '4UQ(1'
      function2 (r:2='}J') (r:1='this')
        push 0
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
       label249:
        push r:'}J', '_parent'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label250
        push r:3, r:'}J', '_x'
        getMember
        add
        setRegister r:3
        pop
        push r:4, r:'}J', '_y'
        getMember
        add
        setRegister r:4
        pop
        push r:'}J', '_parent'
        getMember
        setRegister r:'}J'
        pop
        branch label249
       label250:
        push '{2', r:3, '}2', r:4, 2
        initObject
        return
      end // of function 

      setMember
      push r:0, ' Ly7b'
      function2 (r:2='((', r:3='{nq3-(') (r:1='this')
        push r:'(('
        toString
        setRegister r:4
        pop
       label251:
        push r:4, 'length'
        getMember
        push r:'{nq3-('
        lessThan
        not
        branchIfTrue label252
        push '0', r:4
        add
        setRegister r:4
        pop
        branch label251
       label252:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '7g,ln'
      function2 (r:2='(') (r:1='this')
        push 0
        setRegister r:3
        pop
        push r:'(', 'length'
        getMember
        push 1
        subtract
        setRegister r:4
        pop
        branch label254
       label253:
        push r:4
        decrement
        setRegister r:4
        pop
       label254:
        push r:4, 0
        lessThan
        not
        not
        branchIfTrue label255
        push r:3, r:'(', r:4
        getMember
        add
        setRegister r:3
        pop
        branch label253
       label255:
        push r:3, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
       label256:
        push r:3, r:'(', r:4
        getMember
        lessThan
        not
        not
        branchIfTrue label257
        push r:3, r:'(', r:4
        getMember
        subtract
        setRegister r:3
        pop
        push r:4
        increment
        setRegister r:4
        pop
        branch label256
       label257:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '4*fgv'
      function2 (r:2='*QA', r:3='+QA') (r:1='this')
        push r:'*QA', 1, r:'*QA', 'getBounds'
        callMethod
        setRegister r:4
        pop
        push r:'*QA', 1, r:'+QA', 'getBounds'
        callMethod
        setRegister r:5
        pop
        push r:4, 'xMin'
        getMember
        push r:4, 'xMax'
        getMember
        add
        push 2
        divide
        push r:5, 'xMin'
        getMember
        push r:5, 'xMax'
        getMember
        add
        push 2
        divide
        subtract
        setRegister r:6
        pop
        push r:4, 'yMin'
        getMember
        push r:4, 'yMax'
        getMember
        add
        push 2
        divide
        push r:5, 'yMin'
        getMember
        push r:5, 'yMax'
        getMember
        add
        push 2
        divide
        subtract
        setRegister r:7
        pop
        push r:6, r:6
        multiply
        push r:7, r:7
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        return
      end // of function 

      setMember
      push r:0, '16KA'
      function2 ('}J') (r:1='this')
        push '(', 0, 'Array'
        new
        varEquals
        function2 (r:2='4') (r:1='this')
          push '}J'
          getVariable
          push r:'4'
          getMember
          setRegister r:3
          pop
          push r:3, 1, '3Wt'
          getVariable
          push ')goHJ('
          callMethod
          push 'movieclip'
          equals
          dup
          not
          branchIfTrue label258
          pop
          push r:3, '_parent'
          getMember
          push '}J'
          getVariable
          equals
         label258:
          not
          branchIfTrue label259
          push r:3, 1, '('
          getVariable
          push 'push'
          callMethod
          pop
         label259:
        end // of function 

        push '}J'
        getVariable
        push 2, '3Wt'
        getVariable
        push '9ss9+'
        callMethod
        pop
        push '('
        getVariable
        return
      end // of function 

      setMember
      push r:0, 'localToGlobal'
      function2 (r:2='}J', r:3='((', r:4=')(') (r:1='this')
        push 0, '19{O'
        new
        setRegister r:5
        pop
        push r:'((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:5, 1, r:'}J', 'localToGlobal'
        callMethod
        pop
        push '((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push ')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push 2
        initObject
        return
      end // of function 

      setMember
      push r:0, 'globalToLocal'
      function2 (r:2='}J', r:3='((', r:4=')(') (r:1='this')
        push 0, '19{O'
        new
        setRegister r:5
        pop
        push r:'((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:5, 1, r:'}J', 'globalToLocal'
        callMethod
        pop
        push '((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push ')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push 2
        initObject
        return
      end // of function 

      setMember
      push r:0, '{Gq]-'
      function2 () (r:1='this')
        push '$r', '$h', '$w', '$y', '$x', '$box', '$matrixType', '$radial', '$linear', 9
        initArray
        setRegister r:2
        pop
        push '-[m(M'
        getVariable
        push ']cY[2', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:3
        pop
        branch label261
       label260:
        push r:3
        increment
        setRegister r:3
        pop
       label261:
        push r:3, r:2, 'length'
        getMember
        lessThan
        not
        branchIfTrue label262
        push r:2, r:3
        getMember
        setRegister r:4
        pop
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push r:3, 1, 1, r:4, 'substring'
        callMethod
        setMember
        branch label260
       label262:
      end // of function 

      setMember
      push r:0, 'beginGradientFill'
      function2 (r:2='}J', r:3=' Wo02', r:4='=cKzE(', r:5='8)JNX', r:6='7eq8)', r:7='matrix') (r:1='this')
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push NULL
        equals
        not
        branchIfTrue label263
        push 0, '-[m(M'
        getVariable
        push '{Gq]-'
        callMethod
        pop
       label263:
        push 0, '19{O'
        new
        setRegister r:8
        pop
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 3
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 2
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, '(('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 4
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, ')('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 5
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, ' ('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 6
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, '1'
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 7
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, '='
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 8
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:8, r:'7eq8)', r:'8)JNX', r:'=cKzE(', r:' Wo02'
        not
        branchIfTrue label264
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 0
        getMember
        branch label265
       label264:
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 1
        getMember
       label265:
        push 5, r:'}J', 'beginGradientFill'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, ',[A(', 1, 1, '$x', 'substring'
      callMethod
      setMember
      push r:0, '-[A(', 1, 1, '$y', 'substring'
      callMethod
      setMember
      push r:0, ']cY[2', NULL
      setMember
      push '980Sb'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '}-B2'
      function2 (r:2='}J') (r:1='this')
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        not
        branchIfTrue label266
        push UNDEF
        return
       label266:
        push '980Sb'
        getVariable
        push '8KrCz', 0, 'Array'
        new
        setMember
        push '980Sb'
        getVariable
        push ')2fr3', r:'}J'
        setMember
        push '980Sb'
        getVariable
        push 'mode', r:'}J', 1, '44{N'
        new
        setMember
      end // of function 

      setMember
      push r:0, '0D 6'
      function2 () (r:1='this')
        push 0, '{-kxL'
        getVariable
        push '87vE7('
        callMethod
        pop
        push 0, '980Sb'
        getVariable
        push 'mode'
        getMember
        push '0D 6'
        callMethod
        pop
        push 0
        setRegister r:2
        pop
        branch label268
       label267:
        push r:2
        increment
        setRegister r:2
        pop
       label268:
        push r:2, '980Sb'
        getVariable
        push '8KrCz'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label269
        push 0, '980Sb'
        getVariable
        push '8KrCz'
        getMember
        push r:2
        callMethod
        pop
        branch label267
       label269:
      end // of function 

      setMember
    end // of frame 0
  end // of defineMovieClip 284
  
  exportAssets
    284 as '90D*'
  end // of exportAssets
end
