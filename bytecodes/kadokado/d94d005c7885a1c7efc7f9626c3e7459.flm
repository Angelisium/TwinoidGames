movie 'd94d005c7885a1c7efc7f9626c3e7459.swf' compressed // flash 8, total frames: 1, frame rate: 40 fps, 700x480 px


  defineMovieClip 5 // total frames: 12

    frame 11
      push ''
      removeClip
    end // of frame 11
  end // of defineMovieClip 5
  
  exportAssets
    5 as '6u4iJ('
  end // of exportAssets

  defineMovieClip 10 // total frames: 2
  end // of defineMovieClip 10

  defineMovieClip 11 // total frames: 22

    frame 9
      push '5t 9)', 30
      setVariable
    end // of frame 9

    frame 11
      constants '5t 9)', ''  
      push '5t 9)'
      getVariable
      push '5t 9)', '5t 9)'
      getVariable
      decrement
      setVariable
      push 0.0
      greaterThan
      not
      branchIfTrue label1
      push '', 4
      getProperty
      push 1
      subtract
      gotoAndPlay
     label1:
    end // of frame 11

    frame 21
      push ''
      removeClip
    end // of frame 21
  end // of defineMovieClip 11
  
  exportAssets
    11 as '=ZXmL'
  end // of exportAssets

  defineMovieClip 18 // total frames: 1
  end // of defineMovieClip 18

  defineMovieClip 19 // total frames: 21
  end // of defineMovieClip 19
  
  exportAssets
    19 as '8}9dy'
  end // of exportAssets

  defineMovieClip 21 // total frames: 1
  end // of defineMovieClip 21

  defineMovieClip 22 // total frames: 21

    frame 20
      push ']', 0.0
      setVariable
    end // of frame 20
  end // of defineMovieClip 22
  
  exportAssets
    22 as '+Jv3J('
  end // of exportAssets

  defineMovieClip 26 // total frames: 3
  end // of defineMovieClip 26
  
  exportAssets
    26 as '-E9Fu'
  end // of exportAssets

  defineMovieClip 28 // total frames: 1
  end // of defineMovieClip 28

  defineMovieClip 30 // total frames: 1
  end // of defineMovieClip 30

  defineMovieClip 31 // total frames: 1
  end // of defineMovieClip 31
  
  exportAssets
    31 as '*B3aD'
  end // of exportAssets

  defineMovieClip 33 // total frames: 3
  end // of defineMovieClip 33
  
  exportAssets
    33 as '),HaF('
  end // of exportAssets

  defineMovieClip 35 // total frames: 1
  end // of defineMovieClip 35
  
  exportAssets
    35 as ']]Ce-('
  end // of exportAssets

  defineMovieClip 39 // total frames: 2
  end // of defineMovieClip 39

  defineMovieClip 40 // total frames: 1
  end // of defineMovieClip 40
  
  exportAssets
    40 as ' 5;fT'
  end // of exportAssets

  defineMovieClip 57 // total frames: 18
  end // of defineMovieClip 57
  
  exportAssets
    40 as ' 5;fT'
  end // of exportAssets
  
  exportAssets
    40 as ' 5;fT'
  end // of exportAssets
  
  exportAssets
    40 as ' 5;fT'
  end // of exportAssets
  
  exportAssets
    40 as ' 5;fT'
  end // of exportAssets
  
  exportAssets
    40 as ' 5;fT'
  end // of exportAssets

  defineMovieClip 60 // total frames: 8
  end // of defineMovieClip 60
  
  exportAssets
    60 as '=zL*'
  end // of exportAssets

  defineMovieClip 62 // total frames: 1
  end // of defineMovieClip 62
  
  exportAssets
    62 as ';]Kv1'
  end // of exportAssets

  defineMovieClip 67 // total frames: 1
  end // of defineMovieClip 67

  defineMovieClip 71 // total frames: 1
  end // of defineMovieClip 71

  defineMovieClip 74 // total frames: 166
  end // of defineMovieClip 74

  defineMovieClip 75 // total frames: 1
  end // of defineMovieClip 75

  defineMovieClip 76 // total frames: 16

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 76
  
  exportAssets
    76 as ';+'
  end // of exportAssets
  
  exportAssets
    76 as ';+'
  end // of exportAssets
  
  exportAssets
    62 as ';]Kv1'
  end // of exportAssets
  
  exportAssets
    62 as ';]Kv1'
  end // of exportAssets
  
  exportAssets
    62 as ';]Kv1'
  end // of exportAssets
  
  exportAssets
    62 as ';]Kv1'
  end // of exportAssets
  
  exportAssets
    62 as ';]Kv1'
  end // of exportAssets
  
  exportAssets
    62 as ';]Kv1'
  end // of exportAssets
  
  exportAssets
    62 as ';]Kv1'
  end // of exportAssets
  
  exportAssets
    62 as ';]Kv1'
  end // of exportAssets
  
  exportAssets
    62 as ';]Kv1'
  end // of exportAssets
  
  exportAssets
    60 as '=zL*'
  end // of exportAssets
  
  exportAssets
    35 as ']]Ce-('
  end // of exportAssets
  
  exportAssets
    33 as '),HaF('
  end // of exportAssets
  
  exportAssets
    31 as '*B3aD'
  end // of exportAssets
  
  exportAssets
    26 as '-E9Fu'
  end // of exportAssets
  
  exportAssets
    22 as '+Jv3J('
  end // of exportAssets
  
  exportAssets
    19 as '8}9dy'
  end // of exportAssets
  
  exportAssets
    11 as '=ZXmL'
  end // of exportAssets
  
  exportAssets
    5 as '6u4iJ('
  end // of exportAssets

  defineMovieClip 77 // total frames: 1

    frame 0
      constants 'flash', 'Object', 'filters', '{lN=R', '*r', ';CYOh', '=', '0', ')', 'Color', 'ra', 'ga', 'ba', 'aa', 'rb', 'gb', 'bb', 'ab', 'setTransform', ';_]M{', 'onRollOut', '1', 'gotoAndStop', '3Wt', 'callback', 'onRollOver', '2', 'onPress', '3', 'onRelease', 'onReleaseOutside', 'onDragOver', 'onDragOut', 'stop', '=OA', '*OA', '0qQaf', '}qU(6(', ']_C8C', '=Jd-3(', '9q}4O', '3qOa*(', '*c)L', ';ndCG', '-Q)9)', ',i0 [', '44{N', '32', '+7U K', '-iB=', ';+', '4MvcB', '*=_p_', '5(,lT', '(h4SU', '18wU*', ';AH0', 'Array', ' B5JT', '4Smmb', '-mxYp', ')gv94', '*5sA=', '=T(iB(', '1F=(I', '-{EVI', '1ri80', '6eH7A', '8bVqn', '-_X}5', '$p', '$c', '4wC-a', 'prototype', '(K', 'onMouseDown', ';o p_', 'onMouseUp', 'onMouseWheel', 'onMouseMove', 'Mouse', 'addListener', '0D 6', '=} 1', '_x', '980Sb', ')2fr3', '_xmouse', '_y', '_ymouse', '4fYp5', 'Math', 'random', ']dfo7(', 'Key', 'SPACE', 'isDown', ';Q rX', '{-kxL', '-V;B', '4UZ{*', '=;', ']y T(', 'cos', '7T4cF(', 'length', '3GF', 'splice', '}J', '7=Y8q', '45M,F(', '5CMYr', ')oG*C(', '5udA5', '9T54', ']oH', '8}9dy', '_alpha', '7bJ', ']KUcb', '7vdL6(', '_visible', ']', '[g*xg', '((', ')(', '_xscale', '_yscale', '),HaF(', '{==W3(', '[b', ']b', 'sin', 'scale', '+7', '_currentframe', 'atan2', '(mwVa', '+{eA+', 'push', 'removeMovieClip', 'max', 'min', 'abs', '=5xyy', '2T1Ya', '7', '[', ';GT8b', '51vAJ', '(t}](', '-Wa[', '9Q[dO', '*e[', 'list', '[=gL8(', 'remove', '0e}f8', ']Mfep', '}mInb', '+-(0', '5955', '{2', 'floor', '}2', '(i6S)(', '[NF', 'CONTROL', '5[}4t', '6lmAd', '}Spf3(', '26D-', '(GmgN', '(S6_(', '7;4ZA', '6u4iJ(', 'round', '=zL*', 'attachMC', '0tJ', 'destroy', '46{(c', '-hxUv', '-5I]{', 'sqrt', '2yV,j', 'pow', '8kN', '5b)bA(', '*B3aD', '(Erk5', '2X', '$s', '$m', '$t', '=ZXmL', '(KpGn', '+Jv3J(', '_rotation', '5;OW;', '9Y*17', 'init', '(kJ+1(', 'mode', '87vE7(', '}Zms3', ']1sj+', '-fC3a', '9oK', 'cur', ']bu40', '_name', 'swapDepths', 'createEmptyMC', '(GbB}', '+2NA', 'getDepth', '}oQA7', 'unshift', '08M8', 'clear', '9(K ;', '+kY', ']]Ce-(', '(WBt)', ']}Ou;(', '3I0pG', '{;7F4', '8U(wu', '}[cpB', '9xv]A', '{yQ=Q', '+,W', '2y+dV', '(tBee', '3)i[=', ' J3IC', '[6jRc', ')8Fyj', '4plQ5', 'getTimer', ';ILSy', '3R,QM', ';y}-6(', '-)Xd+', '[Ad;n', '6GI,F', 'fps'  
      push 'flash'
      getVariable
      not
      not
      branchIfTrue label1
      push 'flash', 0, 'Object'
      new
      setVariable
     label1:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      not
      not
      branchIfTrue label2
      push 'flash'
      getVariable
      push 'filters', 0, 'Object'
      new
      setMember
     label2:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      push '{lN=R'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setMember
      push '*r'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ';CYOh'
      function2 (r:2='}J', r:3='3GF', r:4='(v+') (r:1='this')
        push '=', r:'(v+', 16
        shiftRight
        push '0', r:'(v+', 8
        shiftRight
        push 255
        bitwiseAnd
        push ')', r:'(v+', 255
        bitwiseAnd
        push 3
        initObject
        setRegister r:5
        pop
        push r:'}J', 1, 'Color'
        new
        setRegister r:6
        pop
        push r:'3GF', 100
        divide
        setRegister r:7
        pop
        push 'ra', 100, r:'3GF'
        subtract
        int
        push 'ga', 100, r:'3GF'
        subtract
        int
        push 'ba', 100, r:'3GF'
        subtract
        int
        push 'aa', 100, 'rb', r:7, r:5, '='
        getMember
        multiply
        int
        push 'gb', r:7, r:5, '0'
        getMember
        multiply
        int
        push 'bb', r:7, r:5, ')'
        getMember
        multiply
        int
        push 'ab', 0, 8
        initObject
        setRegister r:8
        pop
        push r:8, 1, r:6, 'setTransform'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, ';_]M{'
      function2 (r:2='}J') (r:1='this')
        push r:'}J', 'onRollOut', '1', 'gotoAndStop', r:'}J', 3, '3Wt'
        getVariable
        push 'callback'
        callMethod
        setMember
        push r:'}J', 'onRollOver', '2', 'gotoAndStop', r:'}J', 3, '3Wt'
        getVariable
        push 'callback'
        callMethod
        setMember
        push r:'}J', 'onPress', '3', 'gotoAndStop', r:'}J', 3, '3Wt'
        getVariable
        push 'callback'
        callMethod
        setMember
        push r:'}J', 'onRelease', r:'}J', 'onRollOver'
        getMember
        setMember
        push r:'}J', 'onReleaseOutside', r:'}J', 'onRollOut'
        getMember
        setMember
        push r:'}J', 'onDragOver', r:'}J', 'onRollOver'
        getMember
        setMember
        push r:'}J', 'onDragOut', r:'}J', 'onRollOut'
        getMember
        setMember
        push 0, r:'}J', 'stop'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '=OA', 300
      setMember
      push r:0, '*OA', 300
      setMember
      push r:0, '0qQaf', 5
      setMember
      push r:0, '}qU(6(', 4
      setMember
      push r:0, ']_C8C', 3
      setMember
      push r:0, '=Jd-3(', 5
      setMember
      push r:0, '9q}4O', 80
      setMember
      push r:0, '3qOa*(', 5000
      setMember
      push r:0, '*c)L', 100, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push ',i0 ['
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push '44{N'
      function2 (r:2='}J') (r:1='this')
        push r:this, '32', r:'}J', 1, '+7U K'
        new
        setMember
        push r:this, '-iB=', r:'}J'
        setMember
        push r:this, ';+', '44{N'
        getVariable
        push '4MvcB'
        getMember
        push ';+', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '5(,lT', '44{N'
        getVariable
        push '(h4SU'
        getMember
        push 1, r:this, '32'
        getMember
        push '18wU*'
        callMethod
        setMember
        push r:this, ';AH0', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:3
        pop
        branch label4
       label3:
        push r:3
        increment
        setRegister r:3
        pop
       label4:
        push r:3, 20
        lessThan
        not
        branchIfTrue label8
        push r:this, ';AH0'
        getMember
        push r:3, 0, 'Array'
        new
        setMember
        push 0
        setRegister r:4
        pop
        branch label6
       label5:
        push r:4
        increment
        setRegister r:4
        pop
       label6:
        push r:4, 20
        lessThan
        not
        branchIfTrue label7
        push r:this, ';AH0'
        getMember
        push r:3
        getMember
        push r:4, NULL
        setMember
        branch label5
       label7:
        branch label3
       label8:
        push r:this, ' B5JT', 0, 'Array'
        new
        setMember
        push r:this, '4Smmb', 0, 'Array'
        new
        setMember
        push r:this, '-mxYp', 0, 'Array'
        new
        setMember
        push r:this, ')gv94', 0, 'Array'
        new
        setMember
        push r:this, '*5sA=', 0, 'Array'
        new
        setMember
        push r:this, '=T(iB(', 0, 'Array'
        new
        setMember
        push r:this, '1F=(I', FALSE
        setMember
        push r:this, '-{EVI', FALSE
        setMember
        push r:this, '1ri80', 0, 1
        initArray
        setMember
        push r:this, '6eH7A', 30, 1
        initArray
        setMember
        push r:this, '8bVqn', '*r'
        getVariable
        push '3qOa*('
        getMember
        push 1
        initArray
        setMember
        push r:this, '-_X}5', '$p', 0, '$c', 0
        initArray
        push 2
        initObject
        setMember
        push 0, r:this, '4wC-a'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '4wC-a'
      function2 () (r:1='this')
        push '(K', r:this
        varEquals
        push 'onMouseDown'
        function2 () (r:1='this')
          push '(K'
          getVariable
          push ';o p_', TRUE
          setMember
        end // of function 

        push 'onMouseUp'
        function2 () (r:1='this')
          push '(K'
          getVariable
          push ';o p_', FALSE
          setMember
        end // of function 

        push 'onMouseWheel', NULL, 'onMouseMove', NULL, 4
        initObject
        setRegister r:2
        pop
        push r:2, 1, 'Mouse'
        getVariable
        push 'addListener'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '0D 6'
      function2 () (r:1='this')
        push r:this, '=} 1'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label13
        push r:this, '=} 1'
        getMember
        push '-iB='
        getMember
        push '_x', '980Sb'
        getVariable
        push ')2fr3'
        getMember
        push '_xmouse'
        getMember
        setMember
        push r:this, '=} 1'
        getMember
        push '-iB='
        getMember
        push '_y', '980Sb'
        getVariable
        push ')2fr3'
        getMember
        push '_ymouse'
        getMember
        setMember
        push r:this, '4fYp5'
        getMember
        push 0
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label9
        push r:this, '4fYp5', r:this, '4fYp5'
        getMember
        push 0
        getMember
        push 0.7
        multiply
        push 1
        initArray
        setMember
        push r:this, '=} 1'
        getMember
        push '-iB='
        getMember
        push '_x', r:this, '=} 1'
        getMember
        push '-iB='
        getMember
        push '_x'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push r:this, '4fYp5'
        getMember
        push 0
        getMember
        multiply
        add
        setMember
        push r:this, '=} 1'
        getMember
        push '-iB='
        getMember
        push '_y', r:this, '=} 1'
        getMember
        push '-iB='
        getMember
        push '_y'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push r:this, '4fYp5'
        getMember
        push 0
        getMember
        multiply
        add
        setMember
        push r:this, '4fYp5'
        getMember
        push 0
        getMember
        push 0.5
        lessThan
        not
        branchIfTrue label9
        push r:this, '4fYp5', NULL, 1
        initArray
        setMember
       label9:
        push r:this, ';o p_'
        getMember
        not
        branchIfTrue label10
        push 0, r:this, ']dfo7('
        callMethod
        pop
       label10:
        push 'Key'
        getVariable
        push 'SPACE'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label12
        push r:this, '-{EVI'
        getMember
        not
        branchIfTrue label11
        push 0, r:this, ';Q rX'
        callMethod
        pop
       label11:
        push r:this, '-{EVI', FALSE
        setMember
        branch label13
       label12:
        push r:this, '-{EVI', TRUE
        setMember
       label13:
        push r:this, '1F=(I'
        getMember
        not
        not
        branchIfTrue label16
        push r:this, '8bVqn', r:this, '8bVqn'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        push 1
        initArray
        setMember
        push r:this, '8bVqn'
        getMember
        push 0
        getMember
        push '*r'
        getVariable
        push '3qOa*('
        getMember
        divide
        setRegister r:2
        pop
        push 166, r:2, 165
        multiply
        subtract
        int
        setRegister r:3
        pop
        push r:3
        toString
        push 1, r:this, ';+'
        getMember
        push '4UZ{*'
        getMember
        push '=;'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:2, 0.15
        lessThan
        not
        branchIfTrue label15
        push r:this, ']y T('
        getMember
        push 0
        getMember
        push NULL
        equals
        not
        branchIfTrue label14
        push r:this, ']y T(', 0, 1
        initArray
        setMember
       label14:
        push r:this, ']y T(', r:this, ']y T('
        getMember
        push 0
        getMember
        push 67
        add
        push 628
        modulo
        push 1
        initArray
        setMember
        push 16711680, r:this, ']y T('
        getMember
        push 0
        getMember
        push 100
        divide
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push 1
        add
        push 30
        multiply
        push r:this, ';+'
        getMember
        push '4UZ{*'
        getMember
        push '=;'
        getMember
        push 3, '*r'
        getVariable
        push ';CYOh'
        callMethod
        pop
       label15:
        push r:2, 0
        lessThan
        not
        branchIfTrue label16
        push 0, r:this, '7T4cF('
        callMethod
        pop
       label16:
        push 0
        setRegister r:4
        pop
        branch label18
       label17:
        push r:4
        increment
        setRegister r:4
        pop
       label18:
        push r:4, r:this, '=T(iB('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label20
        push r:this, '=T(iB('
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push r:5, '3GF'
        getMember
        setRegister r:6
        pop
        push r:5, '3GF', r:5, '3GF'
        getMember
        push 0.9
        multiply
        setMember
        push r:5, '3GF'
        getMember
        push 1
        lessThan
        not
        branchIfTrue label19
        push 1, r:4, r:4
        decrement
        setRegister r:4
        pop
        push 2, r:this, '=T(iB('
        getMember
        push 'splice'
        callMethod
        pop
        push 0
        setRegister r:6
        pop
       label19:
        push 16777215, r:6, r:5, '}J'
        getMember
        push 3, '*r'
        getVariable
        push ';CYOh'
        callMethod
        pop
        branch label17
       label20:
        push 0, r:this, '7=Y8q'
        callMethod
        pop
        push 0, r:this, '45M,F('
        callMethod
        pop
        push 0, r:this, '5CMYr'
        callMethod
        pop
        push 0, r:this, ')oG*C('
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '7=Y8q'
      function2 () (r:1='this')
        push r:this, '1ri80', r:this, '1ri80'
        getMember
        push 0
        getMember
        push r:this, '6eH7A'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        push 1
        initArray
        setMember
        push r:this, '1ri80'
        getMember
        push 0
        getMember
        push 0
        lessThan
        dup
        not
        branchIfTrue label21
        pop
        push r:this, '1F=(I'
        getMember
        not
       label21:
        not
        branchIfTrue label22
        push r:this, '1ri80', r:this, '1ri80'
        getMember
        push 0
        getMember
        push '*r'
        getVariable
        push '9q}4O'
        getMember
        add
        push 1
        initArray
        setMember
        push 0, r:this, '5udA5'
        callMethod
        pop
       label22:
        push 0
        setRegister r:2
        pop
        branch label24
       label23:
        push r:2
        increment
        setRegister r:2
        pop
       label24:
        push r:2, r:this, '4Smmb'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label26
        push r:this, '4Smmb'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3, '-iB='
        getMember
        push '_x', r:3, '-iB='
        getMember
        push '_x'
        getMember
        push r:this, '6eH7A'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        setMember
        push r:3, '-iB='
        getMember
        push '_x'
        getMember
        push -40
        lessThan
        not
        branchIfTrue label25
        push 0, r:3, '9T54'
        callMethod
        pop
        push 1, r:2, r:2
        decrement
        setRegister r:2
        pop
        push 2, r:this, '4Smmb'
        getMember
        push 'splice'
        callMethod
        pop
       label25:
        branch label23
       label26:
        push r:this, ';+'
        getMember
        push ']oH'
        getMember
        push '_x', r:this, ';+'
        getMember
        push ']oH'
        getMember
        push '_x'
        getMember
        push r:this, '6eH7A'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        setMember
       label27:
        push r:this, ';+'
        getMember
        push ']oH'
        getMember
        push '_x'
        getMember
        push -20
        lessThan
        not
        branchIfTrue label28
        push r:this, ';+'
        getMember
        push ']oH'
        getMember
        push '_x', r:this, ';+'
        getMember
        push ']oH'
        getMember
        push '_x'
        getMember
        push 20
        add
        setMember
        branch label27
       label28:
        push '*r'
        getVariable
        push '=Jd-3('
        getMember
        push r:this, '4Smmb'
        getMember
        push 'length'
        getMember
        push 1
        add
        divide
        push r:this, '6eH7A'
        getMember
        push 0
        getMember
        subtract
        setRegister r:4
        pop
        push r:this, '6eH7A', r:this, '6eH7A'
        getMember
        push 0
        getMember
        push r:4, 0.1
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 1
        initArray
        setMember
        push r:this, '1F=(I'
        getMember
        dup
        not
        branchIfTrue label29
        pop
        push r:this, '4Smmb'
        getMember
        push 'length'
        getMember
        push 0
        equals
       label29:
        not
        branchIfTrue label32
        push r:this, '8}9dy'
        getMember
        push NULL
        equals
        not
        branchIfTrue label30
        push r:this, '8}9dy', 4, '8}9dy', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '8}9dy'
        getMember
        push '_alpha', 0
        setMember
        push r:this, '8}9dy'
        getMember
        push '7bJ'
        getMember
        push 1, '*r'
        getVariable
        push ';_]M{'
        callMethod
        pop
        push r:this, '8}9dy'
        getMember
        push '7bJ'
        getMember
        push 'onPress', ']KUcb', r:this, 2, '3Wt'
        getVariable
        push 'callback'
        callMethod
        setMember
        push r:this, '8}9dy'
        getMember
        push '7bJ'
        getMember
        push 1, ';ndCG'
        getVariable
        push '7vdL6('
        callMethod
        pop
        branch label31
       label30:
        push r:this, '8}9dy'
        getMember
        push '_alpha'
        getMember
        push 100
        lessThan
        not
        branchIfTrue label31
        push r:this, '8}9dy'
        getMember
        push '_alpha', r:this, '8}9dy'
        getMember
        push '_alpha'
        getMember
        push 1
        add
        setMember
       label31:
        push r:this, ';+'
        getMember
        push ']oH'
        getMember
        push '_visible'
        getMember
        not
        branchIfTrue label32
        push r:this, ';+'
        getMember
        push ']oH'
        getMember
        push '_alpha', r:this, ';+'
        getMember
        push ']oH'
        getMember
        push '_alpha'
        getMember
        push 0.01
        subtract
        setMember
       label32:
      end // of function 

      setMember
      push r:1, '45M,F('
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label34
       label33:
        push r:2
        increment
        setRegister r:2
        pop
       label34:
        push r:2, r:this, '-mxYp'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label41
        push r:this, '-mxYp'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3, ']', r:3, ']'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:3, ']'
        getMember
        push '44{N'
        getVariable
        push '[g*xg'
        getMember
        greaterThan
        not
        not
        branchIfTrue label40
        push r:this, ';AH0'
        getMember
        push r:3, '(('
        getMember
        getMember
        push r:3, ')('
        getMember
        getMember
        setRegister r:4
        pop
        push r:4, '_xscale', r:3, ']'
        getMember
        push 100, '44{N'
        getVariable
        push '[g*xg'
        getMember
        divide
        multiply
        setMember
        push r:4, '_yscale', r:4, '_xscale'
        getMember
        setMember
        push r:3, ']'
        getMember
        push '44{N'
        getVariable
        push '[g*xg'
        getMember
        push 0.5
        multiply
        greaterThan
        not
        not
        branchIfTrue label37
        push 0
        setRegister r:5
        pop
        branch label36
       label35:
        push r:5
        increment
        setRegister r:5
        pop
       label36:
        push r:5, 1
        lessThan
        not
        branchIfTrue label37
        push '),HaF(', 1, r:this, '{==W3('
        callMethod
        setRegister r:6
        pop
        push r:6, '_x', r:4, '_x'
        getMember
        setMember
        push r:6, '_y', r:4, '_y'
        getMember
        setMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:7
        pop
        push 0.2, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2.5
        multiply
        add
        setRegister r:8
        pop
        push r:6, '[b', r:7, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:8
        multiply
        setMember
        push r:6, ']b', r:7, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:8
        multiply
        setMember
        push r:6, ']', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:6, 'scale', 50, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 100
        multiply
        add
        setMember
        push r:6, '_xscale', r:6, 'scale'
        getMember
        setMember
        push r:6, '_yscale', r:6, 'scale'
        getMember
        setMember
        push r:6, '+7', 0
        setMember
        branch label35
       label37:
        push r:3, ']'
        getMember
        push 0
        greaterThan
        not
        not
        branchIfTrue label40
        push r:4, '_currentframe'
        getMember
        push 3
        greaterThan
        dup
        not
        branchIfTrue label38
        pop
        push r:this, '1F=(I'
        getMember
        not
       label38:
        not
        branchIfTrue label39
        push '),HaF(', 1, r:this, '{==W3('
        callMethod
        setRegister r:9
        pop
        push r:9, '_x', r:4, '_x'
        getMember
        setMember
        push r:9, '_y', r:4, '_y'
        getMember
        setMember
        push r:9, '_x'
        getMember
        push r:this, ';+'
        getMember
        push '4UZ{*'
        getMember
        push '_x'
        getMember
        subtract
        setRegister r:10
        pop
        push r:9, '_y'
        getMember
        push r:this, ';+'
        getMember
        push '4UZ{*'
        getMember
        push '_y'
        getMember
        subtract
        setRegister r:11
        pop
        push r:10, r:11, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        setRegister r:12
        pop
        push 4, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setRegister r:13
        pop
        push r:9, '[b', r:12, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:13
        multiply
        setMember
        push r:9, ']b', r:12, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:13
        multiply
        setMember
        push r:9, 'scale', 200
        setMember
        push r:9, '_xscale', r:9, 'scale'
        getMember
        setMember
        push r:9, '_yscale', r:9, 'scale'
        getMember
        setMember
        push r:9, '(mwVa', TRUE
        setMember
        push r:9, '+{eA+', 0.9
        setMember
        push r:9, 1, r:this, '*5sA='
        getMember
        push 'push'
        callMethod
        pop
       label39:
        push 0, r:4, 'removeMovieClip'
        callMethod
        pop
        push 1, r:2, r:2
        decrement
        setRegister r:2
        pop
        push 2, r:this, '-mxYp'
        getMember
        push 'splice'
        callMethod
        pop
        push r:this, ';AH0'
        getMember
        push r:3, '(('
        getMember
        getMember
        push r:3, ')('
        getMember
        push NULL
        setMember
       label40:
        branch label33
       label41:
      end // of function 

      setMember
      push r:1, ')oG*C('
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label43
       label42:
        push r:2
        increment
        setRegister r:2
        pop
       label43:
        push r:2, r:this, '*5sA='
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label51
        push r:this, '*5sA='
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:this, ';+'
        getMember
        push '4UZ{*'
        getMember
        push '_x'
        getMember
        push r:3, '_x'
        getMember
        subtract
        setRegister r:4
        pop
        push r:this, ';+'
        getMember
        push '4UZ{*'
        getMember
        push '_y'
        getMember
        push r:3, '_y'
        getMember
        subtract
        setRegister r:5
        pop
        push 1.5
        setRegister r:6
        pop
        push 0.1
        setRegister r:7
        pop
        push r:3, '[b', r:3, '[b'
        getMember
        push r:6, r:4, r:7
        multiply
        push 0, r:6
        subtract
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        add
        setMember
        push r:3, ']b', r:3, ']b'
        getMember
        push r:6, r:5, r:7
        multiply
        push 0, r:6
        subtract
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        add
        setMember
        push r:4, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:5, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        add
        push 20
        lessThan
        dup
        not
        branchIfTrue label44
        pop
        push r:this, '1F=(I'
        getMember
        not
       label44:
        not
        branchIfTrue label48
        push r:3, ']', 0
        setMember
        push 0
        setRegister r:8
        pop
        branch label46
       label45:
        push r:8
        increment
        setRegister r:8
        pop
       label46:
        push r:8, 10
        lessThan
        not
        branchIfTrue label47
        push '),HaF(', 1, r:this, '{==W3('
        callMethod
        setRegister r:9
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:10
        pop
        push 6
        setRegister r:11
        pop
        push 2, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 5
        multiply
        add
        setRegister r:12
        pop
        push r:9, '_x', r:3, '_x'
        getMember
        push r:10, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:11
        multiply
        add
        setMember
        push r:9, '_y', r:3, '_y'
        getMember
        push r:10, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:11
        multiply
        add
        setMember
        push r:9, '[b', r:10, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:12
        multiply
        setMember
        push r:9, ']b', r:10, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:12
        multiply
        setMember
        push r:9, ']', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:9, '+{eA+', 0.92
        setMember
        branch label45
       label47:
        push r:this, '8bVqn', '*r'
        getVariable
        push '3qOa*('
        getMember
        push r:this, '8bVqn'
        getMember
        push 0
        getMember
        push 400
        add
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        push 1
        initArray
        setMember
        push r:this, '=5xyy', 80, 1
        initArray
        setMember
       label48:
        push r:this, '1F=(I'
        getMember
        dup
        not
        branchIfTrue label49
        pop
        push r:3, ']'
        getMember
        push NULL
        equals
       label49:
        not
        branchIfTrue label50
        push r:3, ']', 10
        setMember
       label50:
        branch label42
       label51:
        push r:this, '=5xyy'
        getMember
        push 0
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label52
        push r:this, ';+'
        getMember
        push '4UZ{*'
        getMember
        push '_alpha', 20, r:this, '=5xyy'
        getMember
        push 0
        getMember
        add
        setMember
        push r:this, '=5xyy', r:this, '=5xyy'
        getMember
        push 0
        getMember
        push 0.6
        multiply
        push 1
        initArray
        setMember
        push r:this, '=5xyy'
        getMember
        push 0
        getMember
        push 1
        lessThan
        not
        branchIfTrue label52
        push r:this, '=5xyy', NULL, 1
        initArray
        setMember
        push r:this, ';+'
        getMember
        push '4UZ{*'
        getMember
        push '_alpha', 20
        setMember
       label52:
      end // of function 

      setMember
      push r:1, '5udA5'
      function2 () (r:1='this')
        push r:this, '-_X}5'
        getMember
        push '$p', r:this, '-_X}5'
        getMember
        push '$p'
        getMember
        increment
        setMember
        push 0, r:this, '2T1Ya'
        callMethod
        setRegister r:2
        pop
        push 0, 'Array'
        new
        setRegister r:3
        pop
        push 3, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        branch label54
       label53:
        push r:5
        increment
        setRegister r:5
        pop
       label54:
        push r:5, r:2, 'length'
        getMember
        lessThan
        not
        branchIfTrue label56
        push r:2, r:5
        getMember
        setRegister r:6
        pop
        push '((', r:6, 0
        getMember
        push ')(', r:6, 1
        getMember
        push '7', r:4, '[', NULL, '}J', NULL, 5
        initObject
        setRegister r:7
        pop
        push 30, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label55
        push r:7, '7', r:7, '7'
        getMember
        push 3
        add
        setMember
       label55:
        push r:7, 1, r:3, 'push'
        callMethod
        pop
        branch label53
       label56:
        push r:3, '44{N'
        getVariable
        push ';GT8b'
        getMember
        push 1, r:this, '32'
        getMember
        push '18wU*'
        callMethod
        push 2, '51vAJ'
        new
        setRegister r:8
        pop
        push TRUE, 1, r:8, '(t}]('
        callMethod
        pop
        push r:8, '-iB='
        getMember
        push '_x', '*r'
        getVariable
        push '=OA'
        getMember
        push 50
        add
        setMember
        push r:8, '-iB='
        getMember
        push '_y', '44{N'
        getVariable
        push '-Wa['
        getMember
        push 2.5
        multiply
        setMember
        push r:8, '-iB='
        getMember
        push 'onPress', r:8, '9Q[dO', r:this, 3, '3Wt'
        getVariable
        push 'callback'
        callMethod
        setMember
        push r:8, '-iB='
        getMember
        push 1, ';ndCG'
        getVariable
        push '7vdL6('
        callMethod
        pop
        push r:8, 1, r:this, '4Smmb'
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '2T1Ya'
      function2 () (r:1='this')
        push 0, 'Array'
        new
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label58
       label57:
        push r:3
        increment
        setRegister r:3
        pop
       label58:
        push r:3, '*r'
        getVariable
        push '}qU(6('
        getMember
        lessThan
        not
        branchIfTrue label62
        push r:2, r:3, 0, 'Array'
        new
        setMember
        push 0
        setRegister r:4
        pop
        branch label60
       label59:
        push r:4
        increment
        setRegister r:4
        pop
       label60:
        push r:4, '*r'
        getVariable
        push '}qU(6('
        getMember
        lessThan
        not
        branchIfTrue label61
        push r:2, r:3
        getMember
        push r:4, FALSE
        setMember
        branch label59
       label61:
        branch label57
       label62:
        push '*r'
        getVariable
        push '0qQaf'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:5
        pop
        push 0
        setRegister r:6
        pop
        push 0
        setRegister r:7
        pop
        push r:2, r:6
        getMember
        push r:7, TRUE
        setMember
       label63:
        push r:5, 0
        greaterThan
        not
        branchIfTrue label65
        push '44{N'
        getVariable
        push '*e['
        getMember
        push '44{N'
        getVariable
        push '*e['
        getMember
        push 'length'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        getMember
        setRegister r:8
        pop
        push r:6, r:8, '(('
        getMember
        add
        setRegister r:9
        pop
        push r:7, r:8, ')('
        getMember
        add
        setRegister r:10
        pop
        push r:2, r:9
        getMember
        push r:10
        getMember
        push FALSE
        equals
        not
        branchIfTrue label64
        push r:2, r:9
        getMember
        push r:10, TRUE
        setMember
        push r:5
        decrement
        setRegister r:5
        pop
        push r:9
        setRegister r:6
        pop
        push r:10
        setRegister r:7
        pop
       label64:
        branch label63
       label65:
        push 0, 'Array'
        new
        setRegister r:11
        pop
        push 0
        setRegister r:12
        pop
        branch label67
       label66:
        push r:12
        increment
        setRegister r:12
        pop
       label67:
        push r:12, '*r'
        getVariable
        push '}qU(6('
        getMember
        lessThan
        not
        branchIfTrue label72
        push 0
        setRegister r:13
        pop
        branch label69
       label68:
        push r:13
        increment
        setRegister r:13
        pop
       label69:
        push r:13, '*r'
        getVariable
        push '}qU(6('
        getMember
        lessThan
        not
        branchIfTrue label71
        push r:2, r:12
        getMember
        push r:13
        getMember
        not
        branchIfTrue label70
        push r:13, r:12, 2
        initArray
        push 1, r:11, 'push'
        callMethod
        pop
       label70:
        branch label68
       label71:
        branch label66
       label72:
        push r:11
        return
      end // of function 

      setMember
      push r:1, '9Q[dO'
      function2 (r:2='9') (r:1='this')
        push r:this, '=} 1'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label73
        push UNDEF
        return
       label73:
        push r:this, ';o p_', FALSE
        setMember
        push r:'9', 'list'
        getMember
        push 1, r:this, '[=gL8('
        callMethod
        pop
        push 0, r:'9', '9T54'
        callMethod
        pop
        push r:'9', 1, r:this, '4Smmb'
        getMember
        push 'remove'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '0e}f8'
      function2 (r:2='26D-') (r:1='this')
        push r:this, '=} 1'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label74
        push UNDEF
        return
       label74:
        push r:this, ';o p_', FALSE
        setMember
        push r:'26D-', 1, r:this, ']Mfep'
        callMethod
        pop
        push r:'26D-', 'list'
        getMember
        push 1, r:this, '[=gL8('
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '[=gL8('
      function2 (r:2='list') (r:1='this')
        push r:this, '=} 1', r:list, '44{N'
        getVariable
        push '}mInb'
        getMember
        push 1, r:this, '32'
        getMember
        push '18wU*'
        callMethod
        push 2, '51vAJ'
        new
        setMember
        push FALSE, 1, r:this, '=} 1'
        getMember
        push '(t}]('
        callMethod
        pop
        push r:this, '=} 1'
        getMember
        push '-iB='
        getMember
        push '_x', '980Sb'
        getVariable
        push ')2fr3'
        getMember
        push '_xmouse'
        getMember
        setMember
        push r:this, '=} 1'
        getMember
        push '-iB='
        getMember
        push '_y', '980Sb'
        getVariable
        push ')2fr3'
        getMember
        push '_ymouse'
        getMember
        setMember
        push r:this, '=} 1'
        getMember
        push '+-(0', r:this
        setMember
        push r:this, '5955', 5, 1
        initArray
        setMember
      end // of function 

      setMember
      push r:1, ']dfo7('
      function2 () (r:1='this')
        push r:this, ';o p_', FALSE
        setMember
        push r:this, '=} 1'
        getMember
        push '-iB='
        getMember
        push '_x'
        getMember
        push '44{N'
        getVariable
        push '-Wa['
        getMember
        divide
        push r:this, '=} 1'
        getMember
        push '{2'
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:2
        pop
        push r:this, '=} 1'
        getMember
        push '-iB='
        getMember
        push '_y'
        getMember
        push '44{N'
        getVariable
        push '-Wa['
        getMember
        divide
        push r:this, '=} 1'
        getMember
        push '}2'
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:3
        pop
        push r:this, '=} 1'
        getMember
        push 'list'
        getMember
        push r:3, r:2, 3, r:this, '(i6S)('
        callMethod
        not
        branchIfTrue label75
        push r:3, r:2, 2, r:this, '[NF'
        callMethod
        pop
        branch label85
       label75:
        push 'Key'
        getVariable
        push 'CONTROL'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label80
        push r:this, '=} 1'
        getMember
        push 'list'
        getMember
        push r:3, r:2, 3, r:this, '5[}4t'
        callMethod
        setRegister r:4
        pop
        push r:4, NULL
        equals
        not
        not
        branchIfTrue label79
        push r:this, '=} 1'
        getMember
        push 'list'
        getMember
        setRegister r:5
        pop
        push 0, r:this, '6lmAd'
        callMethod
        pop
        push r:4, 1, r:this, '0e}f8'
        callMethod
        pop
        push '((', r:2, ')(', r:3, 'list', r:5, 3
        initObject
        setRegister r:6
        pop
        push 0
        setRegister r:7
        pop
        branch label77
       label76:
        push r:7
        increment
        setRegister r:7
        pop
       label77:
        push r:7, r:5, 'length'
        getMember
        lessThan
        not
        branchIfTrue label78
        push r:5, r:7
        getMember
        setRegister r:8
        pop
        push r:8, '}J', r:8, '['
        getMember
        push r:8, '7'
        getMember
        push r:8, ')('
        getMember
        push r:3
        add
        push r:8, '(('
        getMember
        push r:2
        add
        push 4, r:this, '}Spf3('
        callMethod
        setMember
        push r:8, '}J'
        getMember
        push 'onPress', r:6, '0e}f8', r:this, 3, '3Wt'
        getVariable
        push 'callback'
        callMethod
        setMember
        push r:8, '}J'
        getMember
        push 1, ';ndCG'
        getVariable
        push '7vdL6('
        callMethod
        pop
        push r:8, '}J'
        getMember
        push '26D-', r:6
        setMember
        branch label76
       label78:
        push r:6, 1, r:this, ' B5JT'
        getMember
        push 'push'
        callMethod
        pop
        push 0, r:this, '(GmgN'
        callMethod
        pop
       label79:
        branch label85
       label80:
        push 0
        setRegister r:9
        pop
        branch label82
       label81:
        push r:9
        increment
        setRegister r:9
        pop
       label82:
        push r:9, 4
        lessThan
        not
        branchIfTrue label84
        push '44{N'
        getVariable
        push '*e['
        getMember
        push r:9
        getMember
        setRegister r:10
        pop
        push r:2, r:10, '(('
        getMember
        add
        setRegister r:11
        pop
        push r:3, r:10, ')('
        getMember
        add
        setRegister r:12
        pop
        push r:this, '=} 1'
        getMember
        push 'list'
        getMember
        push r:12, r:11, 3, r:this, '(i6S)('
        callMethod
        not
        branchIfTrue label83
        push r:12, r:11, 2, r:this, '[NF'
        callMethod
        pop
        branch label84
       label83:
        branch label81
       label84:
        push r:this, '4fYp5', 10, 1
        initArray
        setMember
        push r:this, '5955', r:this, '5955'
        getMember
        push 0
        getMember
        decrement
        push 1
        initArray
        setMember
        push r:this, '5955'
        getMember
        push 0
        getMember
        push 0
        equals
        not
        branchIfTrue label85
        push 0, r:this, '=} 1'
        getMember
        push '(S6_('
        callMethod
        pop
        push 0, r:this, '6lmAd'
        callMethod
        pop
       label85:
      end // of function 

      setMember
      push r:1, '[NF'
      function2 (r:2='((', r:3=')(') (r:1='this')
        push '44{N'
        getVariable
        push '7;4ZA'
        getMember
        push '6u4iJ(', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:4
        pop
        push r:4, '_x', r:this, '=} 1'
        getMember
        push '-iB='
        getMember
        push '_x'
        getMember
        push '44{N'
        getVariable
        push '-Wa['
        getMember
        divide
        push 1, 'Math'
        getVariable
        push 'round'
        callMethod
        push '44{N'
        getVariable
        push '-Wa['
        getMember
        multiply
        setMember
        push r:4, '_y', r:this, '=} 1'
        getMember
        push '-iB='
        getMember
        push '_y'
        getMember
        push '44{N'
        getVariable
        push '-Wa['
        getMember
        divide
        push 1, 'Math'
        getVariable
        push 'round'
        callMethod
        push '44{N'
        getVariable
        push '-Wa['
        getMember
        multiply
        setMember
        push r:4, '_alpha', 50
        setMember
        push '((', r:'((', ')(', r:')(', 'list', r:this, '=} 1'
        getMember
        push 'list'
        getMember
        push 3
        initObject
        setRegister r:5
        pop
        push 0
        setRegister r:6
        pop
        branch label87
       label86:
        push r:6
        increment
        setRegister r:6
        pop
       label87:
        push r:6, r:this, '=} 1'
        getMember
        push 'list'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label88
        push r:this, '=} 1'
        getMember
        push 'list'
        getMember
        push r:6
        getMember
        setRegister r:7
        pop
        push r:7, '}J', r:7, '['
        getMember
        push r:7, '7'
        getMember
        push r:7, ')('
        getMember
        push r:')('
        add
        push r:7, '(('
        getMember
        push r:'(('
        add
        push 4, r:this, '}Spf3('
        callMethod
        setMember
        push r:7, '}J'
        getMember
        push 'onPress', r:5, '0e}f8', r:this, 3, '3Wt'
        getVariable
        push 'callback'
        callMethod
        setMember
        push r:7, '}J'
        getMember
        push 1, ';ndCG'
        getVariable
        push '7vdL6('
        callMethod
        pop
        push r:7, '}J'
        getMember
        push '26D-', r:5
        setMember
        branch label86
       label88:
        push r:5, 1, r:this, ' B5JT'
        getMember
        push 'push'
        callMethod
        pop
        push 0, r:this, '6lmAd'
        callMethod
        pop
        push 0, r:this, '(GmgN'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '6lmAd'
      function2 () (r:1='this')
        push 0, r:this, '=} 1'
        getMember
        push '9T54'
        callMethod
        pop
        push r:this, '=} 1', NULL
        setMember
      end // of function 

      setMember
      push r:1, '}Spf3('
      function2 (r:2='((', r:3=')(', r:4='7', r:5='[') (r:1='this')
        push r:'((', 100
        multiply
        push r:')('
        add
        setRegister r:6
        pop
        push r:6, '=zL*', r:this, '5(,lT'
        getMember
        push 3, '3Wt'
        getVariable
        push 'attachMC'
        callMethod
        setRegister r:7
        pop
        push r:7, '_x', r:'((', 0.5
        add
        push '44{N'
        getVariable
        push '-Wa['
        getMember
        multiply
        setMember
        push r:7, '_y', r:')(', 0.5
        add
        push '44{N'
        getVariable
        push '-Wa['
        getMember
        multiply
        setMember
        push r:this, ';AH0'
        getMember
        push r:'(('
        getMember
        push r:')(', r:7
        setMember
        push r:'7', 1
        add
        toString
        push 1, r:7, 'gotoAndStop'
        callMethod
        pop
        push r:'[', 1, r:7, '0tJ'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push '}J', r:7, '3GF', 100, 2
        initObject
        push 1, r:this, '=T(iB('
        getMember
        push 'push'
        callMethod
        pop
        push r:7
        return
      end // of function 

      setMember
      push r:1, '(i6S)('
      function2 (r:2='((', r:3=')(', r:4='list') (r:1='this')
        push 0
        setRegister r:5
        pop
        branch label90
       label89:
        push r:5
        increment
        setRegister r:5
        pop
       label90:
        push r:5, r:list, 'length'
        getMember
        lessThan
        not
        branchIfTrue label96
        push r:list, r:5
        getMember
        setRegister r:6
        pop
        push r:'((', r:6, '(('
        getMember
        add
        setRegister r:7
        pop
        push r:')(', r:6, ')('
        getMember
        add
        setRegister r:8
        pop
        push 1
        setRegister r:9
        pop
        push r:8, 5, r:9
        add
        lessThan
        dup
        branchIfTrue label91
        pop
        push r:8, 19, r:9
        subtract
        greaterThan
       label91:
        dup
        branchIfTrue label92
        pop
        push r:7, r:9
        lessThan
       label92:
        dup
        branchIfTrue label93
        pop
        push r:7, 19, r:9
        subtract
        greaterThan
       label93:
        dup
        branchIfTrue label94
        pop
        push r:this, ';AH0'
        getMember
        push r:7
        getMember
        push r:8
        getMember
        push NULL
        equals
        not
       label94:
        not
        branchIfTrue label95
        push FALSE
        return
       label95:
        branch label89
       label96:
        push TRUE
        return
      end // of function 

      setMember
      push r:1, '5[}4t'
      function2 (r:2='((', r:3=')(', r:4='list') (r:1='this')
        push NULL
        setRegister r:5
        pop
        push 0
        setRegister r:6
        pop
        branch label98
       label97:
        push r:6
        increment
        setRegister r:6
        pop
       label98:
        push r:6, r:list, 'length'
        getMember
        lessThan
        not
        branchIfTrue label101
        push r:list, r:6
        getMember
        setRegister r:7
        pop
        push r:'((', r:7, '(('
        getMember
        add
        setRegister r:8
        pop
        push r:')(', r:7, ')('
        getMember
        add
        setRegister r:9
        pop
        push 1
        setRegister r:10
        pop
        push r:this, ';AH0'
        getMember
        push r:8
        getMember
        push r:9
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label100
        push r:this, ';AH0'
        getMember
        push r:8
        getMember
        push r:9
        getMember
        push '26D-'
        getMember
        setRegister r:11
        pop
        push r:5, NULL
        equals
        not
        branchIfTrue label99
        push r:11
        setRegister r:5
        pop
        branch label100
       label99:
        push r:5, r:11
        equals
        not
        not
        branchIfTrue label100
        push NULL
        return
       label100:
        branch label97
       label101:
        push r:5
        return
      end // of function 

      setMember
      push r:1, ';Q rX'
      function2 () (r:1='this')
        push 0, r:this, '=} 1'
        getMember
        push 'destroy'
        callMethod
        pop
        push 9999
        setRegister r:2
        pop
        push 9999
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        branch label103
       label102:
        push r:4
        increment
        setRegister r:4
        pop
       label103:
        push r:4, r:this, '=} 1'
        getMember
        push 'list'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label104
        push r:this, '=} 1'
        getMember
        push 'list'
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push r:5, '(('
        getMember
        setRegister r:6
        pop
        push r:5, ')('
        getMember
        setRegister r:7
        pop
        push r:5, '((', 0, r:7
        subtract
        setMember
        push r:5, ')(', r:6
        setMember
        push r:2, r:5, '(('
        getMember
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        int
        setRegister r:2
        pop
        push r:3, r:5, ')('
        getMember
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        int
        setRegister r:3
        pop
        branch label102
       label104:
        push 0
        setRegister r:8
        pop
        branch label106
       label105:
        push r:8
        increment
        setRegister r:8
        pop
       label106:
        push r:8, r:this, '=} 1'
        getMember
        push 'list'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label107
        push r:this, '=} 1'
        getMember
        push 'list'
        getMember
        push r:8
        getMember
        setRegister r:9
        pop
        push r:9, '((', r:9, '(('
        getMember
        push r:2
        subtract
        setMember
        push r:9, ')(', r:9, ')('
        getMember
        push r:3
        subtract
        setMember
        branch label105
       label107:
        push 0, r:this, '=} 1'
        getMember
        push '46{(c'
        callMethod
        pop
        push FALSE, 1, r:this, '=} 1'
        getMember
        push '(t}]('
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ']Mfep'
      function2 (r:2='26D-') (r:1='this')
        push 0
        setRegister r:3
        pop
        branch label109
       label108:
        push r:3
        increment
        setRegister r:3
        pop
       label109:
        push r:3, r:'26D-', 'list'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label110
        push r:'26D-', 'list'
        getMember
        push r:3
        getMember
        setRegister r:4
        pop
        push 0, r:4, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, ';AH0'
        getMember
        push r:'26D-', '(('
        getMember
        push r:4, '(('
        getMember
        add
        getMember
        push r:'26D-', ')('
        getMember
        push r:4, ')('
        getMember
        add
        push NULL
        setMember
        branch label108
       label110:
        push r:'26D-', 1, r:this, ' B5JT'
        getMember
        push 'remove'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '-hxUv'
      function2 (r:2=') B2') (r:1='this')
        push 5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:3
        pop
        push r:') B2', '(('
        getMember
        setRegister r:4
        pop
        branch label112
       label111:
        push r:4
        increment
        setRegister r:4
        pop
       label112:
        push r:4, r:') B2', '(('
        getMember
        push r:') B2', 'max'
        getMember
        add
        lessThan
        not
        branchIfTrue label116
        push r:') B2', ')('
        getMember
        setRegister r:5
        pop
        branch label114
       label113:
        push r:5
        increment
        setRegister r:5
        pop
       label114:
        push r:5, r:') B2', ')('
        getMember
        push r:') B2', 'max'
        getMember
        add
        lessThan
        not
        branchIfTrue label115
        push '((', r:4, ')(', r:5, ']', r:') B2', 'max'
        getMember
        push r:5, r:') B2', ')('
        getMember
        subtract
        push r:4, r:') B2', '(('
        getMember
        subtract
        push r:3, 4, r:this, '-5I]{'
        callMethod
        push 3
        initObject
        setRegister r:6
        pop
        push r:6, 1, r:this, '-mxYp'
        getMember
        push 'push'
        callMethod
        pop
        branch label113
       label115:
        branch label111
       label116:
      end // of function 

      setMember
      push r:1, '-5I]{'
      function2 (r:2='*B', r:3='((', r:4=')(', r:5='max') (r:1='this')
        push r:'*B'
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label117
        push r:0, 1
        strictEquals
        branchIfTrue label118
        push r:0, 2
        strictEquals
        branchIfTrue label119
        push r:0, 3
        strictEquals
        branchIfTrue label120
        push r:0, 4
        strictEquals
        branchIfTrue label121
        branch label122
       label117:
        push r:max, 1
        subtract
        push 0.5
        multiply
        push r:'(('
        subtract
        setRegister r:6
        pop
        push r:max, 1
        subtract
        push 0.5
        multiply
        push r:')('
        subtract
        setRegister r:7
        pop
        push '44{N'
        getVariable
        push '[g*xg'
        getMember
        push r:6, r:6
        multiply
        push r:7, r:7
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        push 5
        multiply
        add
        return
       label118:
        push '44{N'
        getVariable
        push '[g*xg'
        getMember
        push r:'((', r:')('
        add
        push 3
        multiply
        add
        return
       label119:
        push r:max, 1
        subtract
        push 0.5
        multiply
        setRegister r:8
        pop
        push r:max, 1
        subtract
        push 0.5
        multiply
        setRegister r:9
        pop
        push '44{N'
        getVariable
        push '[g*xg'
        getMember
        push r:8, r:'(('
        subtract
        push r:9, r:')('
        subtract
        push 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        push 1
        add
        push 5
        multiply
        add
        return
       label120:
        push '44{N'
        getVariable
        push '[g*xg'
        getMember
        push r:'((', r:max
        multiply
        add
        push r:')('
        add
        return
       label121:
        push '44{N'
        getVariable
        push '[g*xg'
        getMember
        push r:')(', r:max
        multiply
        add
        push r:'(('
        add
        return
       label122:
        push 12
        return
      end // of function 

      setMember
      push r:1, '(GmgN'
      function2 () (r:1='this')
        push 0, 'Array'
        new
        setRegister r:2
        pop
        push NULL
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        branch label124
       label123:
        push r:4
        increment
        setRegister r:4
        pop
       label124:
        push r:4, r:this, ' B5JT'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label130
        push r:this, ' B5JT'
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push r:5, '(('
        getMember
        push r:5, 'list'
        getMember
        push 0
        getMember
        push '(('
        getMember
        add
        setRegister r:6
        pop
        push r:5, ')('
        getMember
        push r:5, 'list'
        getMember
        push 0
        getMember
        push ')('
        getMember
        add
        setRegister r:7
        pop
        push '*r'
        getVariable
        push ']_C8C'
        getMember
        setRegister r:8
        pop
        branch label126
       label125:
        push r:8
        increment
        setRegister r:8
        pop
       label126:
        push r:8, 15
        lessThan
        not
        branchIfTrue label129
        push r:8, r:7, r:6, 3, r:this, '2yV,j'
        callMethod
        setRegister r:9
        pop
        push r:9, NULL
        equals
        not
        dup
        not
        branchIfTrue label127
        pop
        push r:9, 'length'
        getMember
        push r:2, 'length'
        getMember
        greaterThan
       label127:
        not
        branchIfTrue label128
        push r:9
        setRegister r:2
        pop
        push '((', r:6, ')(', r:7, 'max', r:8, 3
        initObject
        setRegister r:3
        pop
       label128:
        branch label125
       label129:
        branch label123
       label130:
        push r:2, 'length'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label139
        push 0, 0, 0, 3
        initArray
        setRegister r:10
        pop
        push 0
        setRegister r:11
        pop
        branch label132
       label131:
        push r:11
        increment
        setRegister r:11
        pop
       label132:
        push r:11, r:2, 'length'
        getMember
        lessThan
        not
        branchIfTrue label134
        push r:2, r:11
        getMember
        setRegister r:12
        pop
        push r:12, 'list'
        getMember
        push 0
        getMember
        push '7'
        getMember
        setRegister r:13
        pop
        push r:13, 2
        greaterThan
        not
        branchIfTrue label133
        push r:13, 3
        subtract
        setRegister r:13
        pop
       label133:
        push r:10, r:13, r:10, r:13
        getMember
        increment
        setMember
        push r:12, 1, r:this, ' B5JT'
        getMember
        push 'remove'
        callMethod
        pop
        branch label131
       label134:
        push r:3, 1, r:this, '-hxUv'
        callMethod
        pop
        push 1
        setRegister r:14
        pop
        push 0
        setRegister r:15
        pop
        branch label136
       label135:
        push r:15
        increment
        setRegister r:15
        pop
       label136:
        push r:15, r:10, 'length'
        getMember
        lessThan
        not
        branchIfTrue label138
        push r:10, r:15
        getMember
        push 0
        equals
        not
        branchIfTrue label137
        push r:14
        increment
        setRegister r:14
        pop
       label137:
        branch label135
       label138:
        push 2.5, r:3, 'max'
        getMember
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        push 0.1
        multiply
        push 1, 'Math'
        getVariable
        push 'round'
        callMethod
        push '*r'
        getVariable
        push '*c)L'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        multiply
        setRegister r:16
        pop
        push r:16, r:14
        multiply
        push 1, ';ndCG'
        getVariable
        push '-Q)9)'
        callMethod
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push '44{N'
        getVariable
        push '7;4ZA'
        getMember
        push '*B3aD', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:17
        pop
        push r:17, '_x', r:3, '(('
        getMember
        push '44{N'
        getVariable
        push '-Wa['
        getMember
        multiply
        setMember
        push r:17, '_y', r:3, ')('
        getMember
        push '44{N'
        getVariable
        push '-Wa['
        getMember
        multiply
        setMember
        push r:17, '[b', 0
        setMember
        push r:17, ']b', 0
        setMember
        push r:17
        setRegister r:18
        pop
        push r:18, ';+'
        getMember
        push '_xscale', r:3, 'max'
        getMember
        push '44{N'
        getVariable
        push '-Wa['
        getMember
        multiply
        setMember
        push r:18, ';+'
        getMember
        push '_yscale', r:3, 'max'
        getMember
        push '44{N'
        getVariable
        push '-Wa['
        getMember
        multiply
        setMember
        push r:18, '(Erk5', r:16, r:14
        multiply
        setMember
        push r:18, '2X'
        getMember
        push '_x', r:3, 'max'
        getMember
        push '44{N'
        getVariable
        push '-Wa['
        getMember
        multiply
        push 0.5
        multiply
        setMember
        push r:18, '2X'
        getMember
        push '_y', r:3, 'max'
        getMember
        push '44{N'
        getVariable
        push '-Wa['
        getMember
        multiply
        push 0.5
        multiply
        setMember
        push r:18, '2X'
        getMember
        push '_xscale', 100, r:3, 'max'
        getMember
        push 20
        multiply
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setMember
        push r:18, '2X'
        getMember
        push '_yscale', r:18, '2X'
        getMember
        push '_xscale'
        getMember
        setMember
        push r:17, ']', 100
        setMember
        push r:17, 1, r:this, ')gv94'
        getMember
        push 'push'
        callMethod
        pop
        push '$s', r:16, '$m', r:14, '$t', r:this, '8bVqn'
        getMember
        push 0
        getMember
        push '*r'
        getVariable
        push '3qOa*('
        getMember
        divide
        push 100
        multiply
        push 1, 'Math'
        getVariable
        push 'round'
        callMethod
        push 3
        initObject
        push 1, r:this, '-_X}5'
        getMember
        push '$c'
        getMember
        push 'push'
        callMethod
        pop
        push r:14, 1
        greaterThan
        not
        branchIfTrue label139
        push '44{N'
        getVariable
        push '}mInb'
        getMember
        push '=ZXmL', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:19
        pop
        push r:19, '_x', '*r'
        getVariable
        push '=OA'
        getMember
        setMember
        push r:19, '_y', '*r'
        getVariable
        push '*OA'
        getMember
        setMember
        push r:14, 1
        subtract
        toString
        push 1, r:19, '(Erk5'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
       label139:
      end // of function 

      setMember
      push r:1, '2yV,j'
      function2 (r:2='+Y', r:3=',Y', r:4='max') (r:1='this')
        push r:'+Y'
        setRegister r:5
        pop
        branch label141
       label140:
        push r:5
        increment
        setRegister r:5
        pop
       label141:
        push r:5, r:'+Y', r:max
        add
        lessThan
        not
        branchIfTrue label146
        push r:',Y'
        setRegister r:6
        pop
        branch label143
       label142:
        push r:6
        increment
        setRegister r:6
        pop
       label143:
        push r:6, r:',Y', r:max
        add
        lessThan
        not
        branchIfTrue label145
        push r:this, ';AH0'
        getMember
        push r:5
        getMember
        push r:6
        getMember
        push NULL
        equals
        not
        branchIfTrue label144
        push NULL
        return
       label144:
        branch label142
       label145:
        branch label140
       label146:
        push 0, 'Array'
        new
        setRegister r:7
        pop
        push 0
        setRegister r:8
        pop
        branch label148
       label147:
        push r:8
        increment
        setRegister r:8
        pop
       label148:
        push r:8, r:this, ' B5JT'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label160
        push r:this, ' B5JT'
        getMember
        push r:8
        getMember
        setRegister r:9
        pop
        push NULL
        setRegister r:10
        pop
        push 0
        setRegister r:11
        pop
        branch label150
       label149:
        push r:11
        increment
        setRegister r:11
        pop
       label150:
        push r:11, r:9, 'list'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label158
        push r:9, 'list'
        getMember
        push r:11
        getMember
        setRegister r:12
        pop
        push r:9, '(('
        getMember
        push r:12, '(('
        getMember
        add
        setRegister r:13
        pop
        push r:9, ')('
        getMember
        push r:12, ')('
        getMember
        add
        setRegister r:14
        pop
        push r:13, r:'+Y'
        lessThan
        not
        dup
        not
        branchIfTrue label151
        pop
        push r:13, r:'+Y', r:max
        add
        lessThan
       label151:
        dup
        not
        branchIfTrue label152
        pop
        push r:14, r:',Y'
        lessThan
        not
       label152:
        dup
        not
        branchIfTrue label153
        pop
        push r:14, r:',Y', r:max
        add
        lessThan
       label153:
        not
        branchIfTrue label155
        push r:10, TRUE
        equals
        not
        branchIfTrue label154
        push NULL
        return
       label154:
        push FALSE
        setRegister r:10
        pop
        branch label157
       label155:
        push r:10, FALSE
        equals
        not
        branchIfTrue label156
        push NULL
        return
       label156:
        push TRUE
        setRegister r:10
        pop
       label157:
        branch label149
       label158:
        push r:10
        not
        not
        branchIfTrue label159
        push r:9, 1, r:7, 'push'
        callMethod
        pop
       label159:
        branch label147
       label160:
        push r:7
        return
      end // of function 

      setMember
      push r:1, ']KUcb'
      function2 () (r:1='this')
        push 0
        initObject
        push 1, ';ndCG'
        getVariable
        push '7T4cF('
        callMethod
        pop
        push 0, r:this, '8}9dy'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '5CMYr'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label162
       label161:
        push r:2
        increment
        setRegister r:2
        pop
       label162:
        push r:2, r:this, ')gv94'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label170
        push r:this, ')gv94'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3, '(KpGn'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label163
        push r:3, ']b', r:3, ']b'
        getMember
        push r:3, '(KpGn'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label163:
        push r:3, '+{eA+'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label164
        push r:3, '[b', r:3, '[b'
        getMember
        push r:3, '+{eA+'
        getMember
        multiply
        setMember
        push r:3, ']b', r:3, ']b'
        getMember
        push r:3, '+{eA+'
        getMember
        multiply
        setMember
       label164:
        push r:3, '_x'
        getMember
        setRegister r:4
        pop
        push r:3, '_y'
        getMember
        setRegister r:5
        pop
        push r:3, '_x', r:3, '_x'
        getMember
        push r:3, '[b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:3, '_y', r:3, '_y'
        getMember
        push r:3, ']b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:3, '(mwVa'
        getMember
        not
        branchIfTrue label165
        push r:4, r:3, '_x'
        getMember
        subtract
        setRegister r:6
        pop
        push r:5, r:3, '_y'
        getMember
        subtract
        setRegister r:7
        pop
        push r:6, r:7, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        setRegister r:8
        pop
        push r:6, r:6
        multiply
        push r:7, r:7
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        setRegister r:9
        pop
        push '+Jv3J(', 1, r:this, '{==W3('
        callMethod
        setRegister r:10
        pop
        push r:10, '_x', r:3, '_x'
        getMember
        setMember
        push r:10, '_y', r:3, '_y'
        getMember
        setMember
        push r:10, '_rotation', r:8, 0.0174
        divide
        setMember
        push r:10, '_xscale', r:9
        setMember
       label165:
        push r:3, ']'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label169
        push r:3, ']', r:3, ']'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:3, ']'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label166
        push 0, r:3, 'removeMovieClip'
        callMethod
        pop
        push 1, r:2, r:2
        decrement
        setRegister r:2
        pop
        push 2, r:this, ')gv94'
        getMember
        push 'splice'
        callMethod
        pop
        branch label169
       label166:
        push r:3, ']'
        getMember
        push 10
        lessThan
        not
        branchIfTrue label169
        push r:3, '+7'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label167
        branch label168
       label167:
        push r:3, '_xscale', r:3, 'scale'
        getMember
        push r:3, ']'
        getMember
        push 10
        divide
        multiply
        setMember
        push r:3, '_yscale', r:3, '_xscale'
        getMember
        setMember
        branch label169
       label168:
        push r:3, '_alpha', r:3, ']'
        getMember
        push 10
        multiply
        setMember
        branch label169
       label169:
        branch label161
       label170:
      end // of function 

      setMember
      push r:1, '{==W3('
      function2 (r:2='5P55') (r:1='this')
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push r:'5P55', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:3
        pop
        push r:3, '[b', 0
        setMember
        push r:3, ']b', 0
        setMember
        push r:3, '+{eA+', 0.95
        setMember
        push r:3, 'scale', 100
        setMember
        push r:3, 1, r:this, ')gv94'
        getMember
        push 'push'
        callMethod
        pop
        push r:3
        return
      end // of function 

      setMember
      push r:1, '7T4cF('
      function2 () (r:1='this')
        push r:this, '1F=(I', TRUE
        setMember
      end // of function 

      setMember
      push r:0, '4MvcB', 1
      setMember
      push r:0, '7;4ZA', 2
      setMember
      push r:0, '(h4SU', 3
      setMember
      push r:0, ';GT8b', 5
      setMember
      push r:0, '5;OW;', 6
      setMember
      push r:0, '}mInb', 8
      setMember
      push r:0, '-Wa[', 15
      setMember
      push r:0, '*e[', '((', 0, ')(', -1, 2
      initObject
      push '((', -1, ')(', 0, 2
      initObject
      push '((', 0, ')(', 1, 2
      initObject
      push '((', 1, ')(', 0, 2
      initObject
      push 4
      initArray
      setMember
      push r:0, '[g*xg', 8
      setMember
      push r:0, '9Y*17', 0, 1, 2
      initArray
      push 0, 0, 2
      initArray
      push 0, -1, 2
      initArray
      push 3
      initArray
      push 1, 0, 2
      initArray
      push 0, 0, 2
      initArray
      push -1, 0, 2
      initArray
      push 3
      initArray
      push 0, 1, 2
      initArray
      push 0, 0, 2
      initArray
      push 2
      initArray
      push 1, 0, 2
      initArray
      push 0, 0, 2
      initArray
      push 2
      initArray
      push 1, 1, 2
      initArray
      push 0, 1, 2
      initArray
      push 1, 0, 2
      initArray
      push 0, 0, 2
      initArray
      push 4
      initArray
      push 5
      initArray
      setMember
      push '980Sb'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'init'
      function2 (r:2='}J') (r:1='this')
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        not
        branchIfTrue label171
        push UNDEF
        return
       label171:
        push '980Sb'
        getVariable
        push ')2fr3', r:'}J'
        setMember
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        branchIfTrue label172
        push '980Sb'
        getVariable
        push 'mode', '980Sb'
        getVariable
        push ')2fr3'
        getMember
        push 1, '44{N'
        new
        setMember
       label172:
      end // of function 

      setMember
      push r:0, '0D 6'
      function2 () (r:1='this')
        push 0, '{-kxL'
        getVariable
        push '87vE7('
        callMethod
        pop
        push 0, '980Sb'
        getVariable
        push 'mode'
        getMember
        push '0D 6'
        callMethod
        pop
      end // of function 

      setMember
      push '+7U K'
      function2 (r:2='}J') (r:1='this')
        push r:this, ')2fr3', r:'}J'
        setMember
        push r:this, '}Zms3', 0, 'Array'
        new
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, ']1sj+'
      function2 () (r:1='this')
        push r:this, ')2fr3'
        getMember
        return
      end // of function 

      setMember
      push r:1, '-fC3a'
      function2 (r:2='59F') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'59F'
        getMember
        setRegister r:3
        pop
        push r:3, NULL
        equals
        not
        branchIfTrue label173
        push '9oK', 0, 'Array'
        new
        push 'cur', 0, 2
        initObject
        setRegister r:3
        pop
        push r:this, '}Zms3'
        getMember
        push r:'59F', r:3
        setMember
       label173:
        push r:3
        return
      end // of function 

      setMember
      push r:1, ']bu40'
      function2 (r:2='[-99') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'[-99'
        getMember
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, 'cur'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:7
        pop
        push r:'[-99', 1000
        multiply
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label175
       label174:
        push r:6
        increment
        setRegister r:6
        pop
       label175:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label177
        push r:4, r:6
        getMember
        push '_name'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label176
        push r:8, r:7
        add
        push 1, r:4, r:6
        getMember
        push 'swapDepths'
        callMethod
        pop
        push r:4, r:7, r:4, r:6
        getMember
        setMember
        push r:7
        increment
        setRegister r:7
        pop
       label176:
        branch label174
       label177:
        push r:3, 'cur', r:7
        setMember
      end // of function 

      setMember
      push r:1, '*=_p_'
      function2 (r:2='*KB2', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, 'cur'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label178
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'*KB2', 2, r:this, '*=_p_'
        callMethod
        return
       label178:
        push r:6, r:'[-99', 1000
        multiply
        add
        push r:'*KB2', r:this, ')2fr3'
        getMember
        push 3, '3Wt'
        getVariable
        push 'attachMC'
        callMethod
        setRegister r:7
        pop
        push r:5, r:6, r:7
        setMember
        push r:4, 'cur', r:4, 'cur'
        getMember
        increment
        setMember
        push r:7
        return
      end // of function 

      setMember
      push r:1, '18wU*'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, 'cur'
        getMember
        setRegister r:5
        pop
        push r:5, 1000
        equals
        not
        branchIfTrue label179
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', 1, r:this, '18wU*'
        callMethod
        return
       label179:
        push r:5, r:'[-99', 1000
        multiply
        add
        push r:this, ')2fr3'
        getMember
        push 2, '3Wt'
        getVariable
        push 'createEmptyMC'
        callMethod
        setRegister r:6
        pop
        push r:4, r:5, r:6
        setMember
        push r:3, 'cur', r:3, 'cur'
        getMember
        increment
        setMember
        push r:6
        return
      end // of function 

      setMember
      push r:1, '(GbB}'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, 'cur'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label180
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        return
       label180:
        push r:5, r:6, r:'}J'
        setMember
        push r:4, 'cur', r:4, 'cur'
        getMember
        increment
        setMember
        push r:6, r:'[-99', 1000
        multiply
        add
        return
      end // of function 

      setMember
      push r:1, '+2NA'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        push 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, r:'[-99'
        equals
        not
        branchIfTrue label181
        push UNDEF
        return
       label181:
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:5, 'cur'
        getMember
        setRegister r:7
        pop
        push 0
        setRegister r:8
        pop
        branch label183
       label182:
        push r:8
        increment
        setRegister r:8
        pop
       label183:
        push r:8, r:7
        lessThan
        not
        branchIfTrue label185
        push r:6, r:8
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label184
        push r:6, r:8, NULL
        setMember
        branch label185
       label184:
        branch label182
       label185:
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}oQA7'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label186
        push r:6, r:7, NULL
        setMember
        push r:'}J', 1, r:6, 'unshift'
        callMethod
        pop
        push r:5, 'cur', r:5, 'cur'
        getMember
        increment
        setMember
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label186:
      end // of function 

      setMember
      push r:1, '08M8'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label188
        push r:6, r:7, NULL
        setMember
        push r:5, 'cur'
        getMember
        push 1000
        equals
        not
        branchIfTrue label187
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label187:
        push r:5, 'cur'
        getMember
        setRegister r:3
        pop
        push r:5, 'cur', r:5, 'cur'
        getMember
        increment
        setMember
        push r:3, r:4, 1000
        multiply
        add
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
        push r:6, r:3, r:'}J'
        setMember
       label188:
      end // of function 

      setMember
      push r:1, 'clear'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:4
        pop
        branch label190
       label189:
        push r:4
        increment
        setRegister r:4
        pop
       label190:
        push r:4, r:3, 'cur'
        getMember
        lessThan
        not
        branchIfTrue label191
        push 0, r:5, r:4
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label189
       label191:
        push r:3, 'cur', 0
        setMember
      end // of function 

      setMember
      push r:1, '9(K ;'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, 'cur'
        getMember
        setRegister r:5
        pop
        push -99999999
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label193
       label192:
        push r:6
        increment
        setRegister r:6
        pop
       label193:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label201
        push r:4, r:6
        getMember
        setRegister r:9
        pop
        push r:9, '_y'
        getMember
        setRegister r:10
        pop
        push r:10, r:8
        lessThan
        not
        not
        branchIfTrue label194
        push r:10
        setRegister r:8
        pop
        branch label200
       label194:
        push r:6
        setRegister r:7
        pop
        branch label196
       label195:
        push r:7
        decrement
        setRegister r:7
        pop
       label196:
        push r:7, 0
        greaterThan
        not
        branchIfTrue label199
        push r:4, r:7, 1
        subtract
        getMember
        setRegister r:11
        pop
        push r:11, '_y'
        getMember
        push r:10
        greaterThan
        not
        branchIfTrue label197
        push r:4, r:7, r:11
        setMember
        push r:11, 1, r:9, 'swapDepths'
        callMethod
        pop
        branch label198
       label197:
        push r:4, r:7, r:9
        setMember
        branch label199
       label198:
        branch label195
       label199:
        push r:7, 0
        equals
        not
        branchIfTrue label200
        push r:4, 0, r:9
        setMember
       label200:
        branch label192
       label201:
      end // of function 

      setMember
      push r:1, 'destroy'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label203
       label202:
        push r:2
        increment
        setRegister r:2
        pop
       label203:
        push r:2, r:this, '}Zms3'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label204
        push r:2, 1, r:this, 'clear'
        callMethod
        pop
        branch label202
       label204:
      end // of function 

      setMember
      push '+kY'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push '51vAJ'
      function2 (r:2='}J', r:3='(N=') (r:1='this')
        push r:this, '-iB=', r:'}J'
        setMember
        push r:this, '32', r:this, '-iB='
        getMember
        push 1, '+7U K'
        new
        setMember
        push r:this, 'list', r:'(N='
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '(t}]('
      function2 (r:2='( 47+') (r:1='this')
        push 0, 'Array'
        new
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        branch label206
       label205:
        push r:4
        increment
        setRegister r:4
        pop
       label206:
        push r:4, '*r'
        getVariable
        push '}qU(6('
        getMember
        lessThan
        not
        branchIfTrue label210
        push r:3, r:4, 0, 'Array'
        new
        setMember
        push 0
        setRegister r:5
        pop
        branch label208
       label207:
        push r:5
        increment
        setRegister r:5
        pop
       label208:
        push r:5, '*r'
        getVariable
        push '}qU(6('
        getMember
        lessThan
        not
        branchIfTrue label209
        push r:3, r:4
        getMember
        push r:5, FALSE
        setMember
        branch label207
       label209:
        branch label205
       label210:
        push 0
        setRegister r:6
        pop
        push 0
        setRegister r:7
        pop
        push 0
        setRegister r:8
        pop
        branch label212
       label211:
        push r:8
        increment
        setRegister r:8
        pop
       label212:
        push r:8, r:this, 'list'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label213
        push r:this, 'list'
        getMember
        push r:8
        getMember
        setRegister r:9
        pop
        push r:3, r:9, '(('
        getMember
        getMember
        push r:9, ')('
        getMember
        push TRUE
        setMember
        push r:9, '(('
        getMember
        push r:6, 2, 'Math'
        getVariable
        push 'max'
        callMethod
        setRegister r:6
        pop
        push r:9, ')('
        getMember
        push r:7, 2, 'Math'
        getVariable
        push 'max'
        callMethod
        setRegister r:7
        pop
        branch label211
       label213:
        push r:this, '{2', r:6, 0.5
        multiply
        setMember
        push r:this, '}2', r:7, 0.5
        multiply
        setMember
        push 0
        setRegister r:10
        pop
        branch label215
       label214:
        push r:10
        increment
        setRegister r:10
        pop
       label215:
        push r:10, r:this, 'list'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label221
        push r:this, 'list'
        getMember
        push r:10
        getMember
        setRegister r:11
        pop
        push 1, '=zL*', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:12
        pop
        push r:12, '_x', r:11, '(('
        getMember
        push r:this, '{2'
        getMember
        subtract
        push '44{N'
        getVariable
        push '-Wa['
        getMember
        multiply
        setMember
        push r:12, '_y', r:11, ')('
        getMember
        push r:this, '}2'
        getMember
        subtract
        push '44{N'
        getVariable
        push '-Wa['
        getMember
        multiply
        setMember
        push r:11, '7'
        getMember
        push 1
        add
        toString
        push 1, r:12, 'gotoAndStop'
        callMethod
        pop
        push r:11, '}J', r:12
        setMember
        push 1
        setRegister r:13
        pop
        push 0
        setRegister r:14
        pop
        branch label217
       label216:
        push r:14
        increment
        setRegister r:14
        pop
       label217:
        push r:14, 4
        lessThan
        not
        branchIfTrue label219
        push '44{N'
        getVariable
        push '*e['
        getMember
        push r:14
        getMember
        setRegister r:15
        pop
        push r:11, '(('
        getMember
        push r:15, '(('
        getMember
        add
        setRegister r:16
        pop
        push r:11, ')('
        getMember
        push r:15, ')('
        getMember
        add
        setRegister r:17
        pop
        push r:3, r:16
        getMember
        push r:17
        getMember
        not
        branchIfTrue label218
        push r:13, r:14, 2, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        add
        setRegister r:13
        pop
       label218:
        branch label216
       label219:
        push r:11, '[', r:13
        int
        setMember
        push r:13, 1, r:12, '0tJ'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:'( 47+'
        not
        branchIfTrue label220
        push 1, ']]Ce-(', r:12, 3, '3Wt'
        getVariable
        push 'attachMC'
        callMethod
        setRegister r:18
        pop
        push r:18, '_alpha', 0
        setMember
       label220:
        branch label214
       label221:
      end // of function 

      setMember
      push r:1, 'destroy'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label223
       label222:
        push r:2
        increment
        setRegister r:2
        pop
       label223:
        push r:2, r:this, 'list'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label225
        push r:this, 'list'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3, '[', NULL
        setMember
        push 0, r:3, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:3, '}J'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label224
       label224:
        branch label222
       label225:
      end // of function 

      setMember
      push r:1, '46{(c'
      function2 () (r:1='this')
       label226:
        push TRUE
        not
        branchIfTrue label232
        push FALSE
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label228
       label227:
        push r:3
        increment
        setRegister r:3
        pop
       label228:
        push r:3, r:this, 'list'
        getMember
        push 'length'
        getMember
        push 1
        subtract
        lessThan
        not
        branchIfTrue label230
        push r:this, 'list'
        getMember
        push r:3
        getMember
        setRegister r:4
        pop
        push r:this, 'list'
        getMember
        push r:3, 1
        add
        getMember
        setRegister r:5
        pop
        push r:4, '(('
        getMember
        push r:4, ')('
        getMember
        add
        push r:5, '(('
        getMember
        push r:5, ')('
        getMember
        add
        greaterThan
        not
        branchIfTrue label229
        push r:this, 'list'
        getMember
        push r:3, 1
        add
        push r:4
        setMember
        push r:this, 'list'
        getMember
        push r:3, r:5
        setMember
        push TRUE
        setRegister r:2
        pop
       label229:
        branch label227
       label230:
        push r:2
        not
        not
        branchIfTrue label231
        branch label232
       label231:
        branch label226
       label232:
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this')
        push 0, r:this, '-iB='
        getMember
        push 'removeMovieClip'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '(S6_('
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label234
       label233:
        push r:2
        increment
        setRegister r:2
        pop
       label234:
        push r:2, r:this, 'list'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label238
        push r:this, 'list'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        branch label236
       label235:
        push r:4
        increment
        setRegister r:4
        pop
       label236:
        push r:4, 10
        lessThan
        not
        branchIfTrue label237
        push '),HaF(', 1, r:this, '+-(0'
        getMember
        push '{==W3('
        callMethod
        setRegister r:5
        pop
        push r:5, '_x', r:this, '-iB='
        getMember
        push '_x'
        getMember
        push r:3, '(('
        getMember
        push 0.5
        subtract
        push '44{N'
        getVariable
        push '-Wa['
        getMember
        multiply
        add
        push r:this, '{2'
        getMember
        subtract
        setMember
        push r:5, '_y', r:this, '-iB='
        getMember
        push '_y'
        getMember
        push r:3, ')('
        getMember
        push 0.5
        subtract
        push '44{N'
        getVariable
        push '-Wa['
        getMember
        multiply
        add
        push r:this, '}2'
        getMember
        subtract
        setMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:6
        pop
        push 0.1, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 1
        multiply
        add
        setRegister r:7
        pop
        push r:5, '[b', r:6, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:7
        multiply
        setMember
        push r:5, ']b', r:6, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:7
        multiply
        setMember
        push r:5, ']', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:5, 'scale', 50, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 100
        multiply
        add
        setMember
        push r:5, '_xscale', r:5, 'scale'
        getMember
        setMember
        push r:5, '_yscale', r:5, 'scale'
        getMember
        setMember
        push r:5, '+7', 0
        setMember
        branch label235
       label237:
        branch label233
       label238:
      end // of function 

      setMember
      push '(WBt)'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ']}Ou;(', 1
      setMember
      push r:0, '3I0pG', 2
      setMember
      push r:0, '{;7F4', 3
      setMember
      push r:0, '8U(wu', 4
      setMember
      push r:0, '}[cpB', 5
      setMember
      push r:0, '9xv]A', 6
      setMember
      push r:0, '{yQ=Q', 7
      setMember
      push r:0, '+,W', 8
      setMember
      push r:0, '2y+dV', 9
      setMember
      push r:0, '(tBee', 10
      setMember
      push r:0, '3)i[=', 11
      setMember
      push r:0, ' J3IC', 12
      setMember
      push r:0, '[6jRc', 13
      setMember
      push r:0, ')8Fyj', 14
      setMember
      push '{-kxL'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '87vE7('
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '4plQ5', '{-kxL'
        getVariable
        push '4plQ5'
        getMember
        increment
        setMember
        push 0, '3Wt'
        getVariable
        push 'getTimer'
        callMethod
        setRegister r:2
        pop
        push '{-kxL'
        getVariable
        push ';ILSy', r:2, '{-kxL'
        getVariable
        push '3R,QM'
        getMember
        subtract
        push 1000.0
        divide
        setMember
        push '{-kxL'
        getVariable
        push '3R,QM', r:2
        setMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        push '{-kxL'
        getVariable
        push ';y}-6('
        getMember
        lessThan
        not
        branchIfTrue label239
        push '{-kxL'
        getVariable
        push '-)Xd+', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        push '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        multiply
        push 1, '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        subtract
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        multiply
        add
        setMember
        branch label240
       label239:
        push '{-kxL'
        getVariable
        push ';ILSy', 1, '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        divide
        setMember
       label240:
        push '{-kxL'
        getVariable
        push '-V;B', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        setMember
      end // of function 

      setMember
      push r:0, 'fps'
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        return
      end // of function 

      setMember
      push r:0, '6GI,F', 32
      setMember
      push r:0, ';y}-6(', 0.5
      setMember
      push r:0, '3R,QM', 0, '3Wt'
      getVariable
      push 'getTimer'
      callMethod
      setMember
      push r:0, '[Ad;n', 0.95
      setMember
      push r:0, '-)Xd+', 1
      setMember
      push r:0, '-V;B', 1
      setMember
      push r:0, ';ILSy', 1
      setMember
      push r:0, '4plQ5', 0
      setMember
    end // of frame 0
  end // of defineMovieClip 77
  
  exportAssets
    77 as '90D*'
  end // of exportAssets
end
