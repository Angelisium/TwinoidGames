movie '1b231b4ad4c7e00ab5ebb9524ac1036a.swf' compressed // flash 8, total frames: 1, frame rate: 40 fps, 700x480 px


  defineMovieClip 5 // total frames: 1
  end // of defineMovieClip 5

  defineMovieClip 6 // total frames: 41
  end // of defineMovieClip 6
  
  exportAssets
    6 as ',S{sw'
  end // of exportAssets

  defineMovieClip 8 // total frames: 1
  end // of defineMovieClip 8

  defineMovieClip 9 // total frames: 6

    frame 5
      push ''
      removeClip
    end // of frame 5
  end // of defineMovieClip 9
  
  exportAssets
    9 as '3=vLC'
  end // of exportAssets

  defineMovieClip 11 // total frames: 1
  end // of defineMovieClip 11
  
  exportAssets
    11 as '5b,-,('
  end // of exportAssets

  defineMovieClip 15 // total frames: 1
  end // of defineMovieClip 15

  defineMovieClip 21 // total frames: 6
  end // of defineMovieClip 21
  
  exportAssets
    21 as '8sfFC'
  end // of exportAssets

  defineMovieClip 23 // total frames: 1
  end // of defineMovieClip 23

  defineMovieClip 24 // total frames: 9

    frame 8
      constants '*', '(', 'Math', 'random', '+', '', 'cos', 'sin'  
      push '*'
      getVariable
      push NULL
      equals
      not
      branchIfTrue label1
      push '*', 1
      setVariable
      branch label2
     label1:
      push '*', '*'
      getVariable
      push 0.75
      multiply
      setVariable
     label2:
      push '(', 0.0, 'Math'
      getVariable
      push 'random'
      callMethod
      push 6.28
      multiply
      setVariable
      push '+', 16
      random
      setVariable
      push '', 0.0, '('
      getVariable
      push 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push '+'
      getVariable
      multiply
      setProperty
      push '', 1, '('
      getVariable
      push 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push '+'
      getVariable
      multiply
      setProperty
      push '', 2, '', 3, 100, '+'
      getVariable
      push 4
      multiply
      subtract
      push '*'
      getVariable
      multiply
      setRegister r:0
      setProperty
      push r:0
      setProperty
    end // of frame 8
  end // of defineMovieClip 24

  defineMovieClip 25 // total frames: 60

    frame 59
      push 0.0, '_parent'
      getVariable
      push 'removeMovieClip'
      callMethod
      pop
    end // of frame 59
  end // of defineMovieClip 25

  defineMovieClip 26 // total frames: 1
  end // of defineMovieClip 26
  
  exportAssets
    26 as ');=0I'
  end // of exportAssets

  defineMovieClip 29 // total frames: 1
  end // of defineMovieClip 29

  defineMovieClip 31 // total frames: 1
  end // of defineMovieClip 31

  defineMovieClip 32 // total frames: 1
  end // of defineMovieClip 32

  defineMovieClip 33 // total frames: 20
  end // of defineMovieClip 33

  defineMovieClip 35 // total frames: 1
  end // of defineMovieClip 35

  defineMovieClip 36 // total frames: 20
  end // of defineMovieClip 36

  defineMovieClip 38 // total frames: 1
  end // of defineMovieClip 38

  defineMovieClip 39 // total frames: 20
  end // of defineMovieClip 39

  defineMovieClip 46 // total frames: 1
  end // of defineMovieClip 46

  defineMovieClip 48 // total frames: 7
  end // of defineMovieClip 48

  defineMovieClip 49 // total frames: 1
  end // of defineMovieClip 49

  defineMovieClip 56 // total frames: 26
  end // of defineMovieClip 56
  
  exportAssets
    56 as '4B1W('
  end // of exportAssets

  defineMovieClip 58 // total frames: 1
  end // of defineMovieClip 58

  defineMovieClip 61 // total frames: 1
  end // of defineMovieClip 61

  defineMovieClip 65 // total frames: 1
  end // of defineMovieClip 65

  defineMovieClip 66 // total frames: 1

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 66
  
  exportAssets
    66 as '9,sMC'
  end // of exportAssets

  defineMovieClip 81 // total frames: 7
  end // of defineMovieClip 81
  
  exportAssets
    81 as '2=*6c'
  end // of exportAssets

  defineMovieClip 84 // total frames: 1
  end // of defineMovieClip 84
  
  exportAssets
    84 as '31lvX'
  end // of exportAssets

  defineMovieClip 93 // total frames: 8
  end // of defineMovieClip 93
  
  exportAssets
    93 as '=vyS['
  end // of exportAssets

  defineMovieClip 96 // total frames: 1
  end // of defineMovieClip 96
  
  exportAssets
    96 as '0o*6'
  end // of exportAssets

  defineMovieClip 106 // total frames: 5
  end // of defineMovieClip 106
  
  exportAssets
    106 as '3,sMC'
  end // of exportAssets

  defineMovieClip 111 // total frames: 1
  end // of defineMovieClip 111

  defineMovieClip 112 // total frames: 41
  end // of defineMovieClip 112
  
  exportAssets
    112 as ',S{sw'
  end // of exportAssets

  defineMovieClip 113 // total frames: 60

    frame 59
      push 0.0, '_parent'
      getVariable
      push 'removeMovieClip'
      callMethod
      pop
    end // of frame 59
  end // of defineMovieClip 113

  defineMovieClip 114 // total frames: 3
  end // of defineMovieClip 114
  
  exportAssets
    114 as ');=0I'
  end // of exportAssets

  defineMovieClip 121 // total frames: 13
  end // of defineMovieClip 121
  
  exportAssets
    121 as ';WvSz'
  end // of exportAssets

  defineMovieClip 128 // total frames: 6
  end // of defineMovieClip 128

  defineMovieClip 131 // total frames: 1
  end // of defineMovieClip 131

  defineMovieClip 133 // total frames: 1
  end // of defineMovieClip 133

  defineMovieClip 134 // total frames: 65
  end // of defineMovieClip 134

  defineMovieClip 135 // total frames: 14
  end // of defineMovieClip 135
  
  exportAssets
    135 as '[5(-'
  end // of exportAssets

  defineMovieClip 139 // total frames: 4
  end // of defineMovieClip 139
  
  exportAssets
    139 as '9*{6g'
  end // of exportAssets

  defineMovieClip 141 // total frames: 1
  end // of defineMovieClip 141

  defineMovieClip 144 // total frames: 1
  end // of defineMovieClip 144

  defineMovieClip 145 // total frames: 1
  end // of defineMovieClip 145
  
  exportAssets
    145 as '9d1xH'
  end // of exportAssets

  defineMovieClip 151 // total frames: 3
  end // of defineMovieClip 151

  defineMovieClip 156 // total frames: 3
  end // of defineMovieClip 156

  defineMovieClip 157 // total frames: 2
  end // of defineMovieClip 157
  
  exportAssets
    157 as ']GM*S'
  end // of exportAssets

  defineMovieClip 191 // total frames: 33

    frame 0
      push '', 5
      getProperty
      random
      push 1
      add
      gotoAndPlay
    end // of frame 0

    frame 32
      gotoFrame 1
      play
    end // of frame 32
  end // of defineMovieClip 191

  defineMovieClip 193 // total frames: 1
  end // of defineMovieClip 193

  defineMovieClip 195 // total frames: 1
  end // of defineMovieClip 195

  defineMovieClip 197 // total frames: 1

    frame 0
      push '_parent'
      getVariable
      push ' Lw;i', 'this'
      getVariable
      setMember
    end // of frame 0
  end // of defineMovieClip 197

  defineMovieClip 199 // total frames: 1
  end // of defineMovieClip 199

  defineMovieClip 201 // total frames: 1
  end // of defineMovieClip 201

  defineMovieClip 203 // total frames: 1
  end // of defineMovieClip 203

  defineMovieClip 205 // total frames: 1
  end // of defineMovieClip 205

  defineMovieClip 207 // total frames: 1
  end // of defineMovieClip 207

  defineMovieClip 209 // total frames: 1
  end // of defineMovieClip 209

  defineMovieClip 211 // total frames: 1
  end // of defineMovieClip 211

  defineMovieClip 213 // total frames: 1
  end // of defineMovieClip 213

  defineMovieClip 215 // total frames: 1
  end // of defineMovieClip 215

  defineMovieClip 216 // total frames: 41

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 216
  
  exportAssets
    216 as '(3q]7('
  end // of exportAssets

  defineMovieClip 218 // total frames: 1
  end // of defineMovieClip 218
  
  exportAssets
    218 as ';R{K,('
  end // of exportAssets

  defineMovieClip 220 // total frames: 1
  end // of defineMovieClip 220

  defineMovieClip 222 // total frames: 1
  end // of defineMovieClip 222

  defineMovieClip 224 // total frames: 1
  end // of defineMovieClip 224

  defineMovieClip 226 // total frames: 1
  end // of defineMovieClip 226

  defineMovieClip 228 // total frames: 1
  end // of defineMovieClip 228

  defineMovieClip 230 // total frames: 1
  end // of defineMovieClip 230

  defineMovieClip 231 // total frames: 44

    frame 0
      push '', 5
      getProperty
      push 2
      add
      random
      push 3
      subtract
      gotoAndPlay
    end // of frame 0

    frame 43
      gotoLabel '4MC5'
      play
    end // of frame 43
  end // of defineMovieClip 231

  defineMovieClip 232 // total frames: 66

    frame 0
      push '', 5
      getProperty
      push 2
      add
      random
      push 3
      subtract
      gotoAndPlay
    end // of frame 0

    frame 65
      gotoLabel '4MC5'
      play
    end // of frame 65
  end // of defineMovieClip 232

  defineMovieClip 233 // total frames: 62

    frame 0
      push '', 5
      getProperty
      push 2
      add
      random
      push 3
      subtract
      gotoAndPlay
    end // of frame 0

    frame 61
      gotoLabel '4MC5'
      play
    end // of frame 61
  end // of defineMovieClip 233

  defineMovieClip 234 // total frames: 72

    frame 0
      push '', 5
      getProperty
      push 2
      add
      random
      push 3
      subtract
      gotoAndPlay
    end // of frame 0

    frame 71
      gotoLabel '4MC5'
      play
    end // of frame 71
  end // of defineMovieClip 234

  defineMovieClip 235 // total frames: 57

    frame 0
      push '', 5
      getProperty
      push 2
      add
      random
      push 3
      subtract
      gotoAndPlay
    end // of frame 0

    frame 56
      gotoLabel '4MC5'
      play
    end // of frame 56
  end // of defineMovieClip 235

  defineMovieClip 236 // total frames: 50
  end // of defineMovieClip 236

  defineMovieClip 237 // total frames: 2

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 237

  defineMovieClip 238 // total frames: 1
  end // of defineMovieClip 238
  
  exportAssets
    238 as '2bWj1'
  end // of exportAssets

  defineMovieClip 240 // total frames: 1
  end // of defineMovieClip 240

  defineMovieClip 242 // total frames: 1
  end // of defineMovieClip 242
  
  exportAssets
    242 as '}Q_xM'
  end // of exportAssets

  defineMovieClip 248 // total frames: 5
  end // of defineMovieClip 248
  
  exportAssets
    248 as ';jf;B'
  end // of exportAssets

  defineMovieClip 250 // total frames: 2
  end // of defineMovieClip 250

  defineMovieClip 251 // total frames: 4

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 251

  defineMovieClip 253 // total frames: 1
  end // of defineMovieClip 253

  defineMovieClip 255 // total frames: 1
  end // of defineMovieClip 255

  defineMovieClip 257 // total frames: 1
  end // of defineMovieClip 257

  defineMovieClip 259 // total frames: 1
  end // of defineMovieClip 259

  defineMovieClip 261 // total frames: 1
  end // of defineMovieClip 261

  defineMovieClip 263 // total frames: 1
  end // of defineMovieClip 263

  defineMovieClip 264 // total frames: 2

    frame 0
      constants '4', '_xscale', '_parent'  
      push '4'
      getVariable
      push '_xscale', '_parent'
      getVariable
      push '_xscale'
      getMember
      setMember
    end // of frame 0

    frame 1
      push '', 4
      getProperty
      push 1
      subtract
      gotoAndPlay
    end // of frame 1
  end // of defineMovieClip 264

  defineMovieClip 268 // total frames: 1
  end // of defineMovieClip 268

  defineMovieClip 269 // total frames: 9

    frame 8
      gotoLabel '4MC5'
      play
    end // of frame 8
  end // of defineMovieClip 269

  defineMovieClip 271 // total frames: 1
  end // of defineMovieClip 271

  defineMovieClip 272 // total frames: 1
  end // of defineMovieClip 272

  defineMovieClip 273 // total frames: 1
  end // of defineMovieClip 273

  defineMovieClip 274 // total frames: 1
  end // of defineMovieClip 274

  defineMovieClip 275 // total frames: 1
  end // of defineMovieClip 275

  defineMovieClip 279 // total frames: 180

    frame 25
      gotoLabel '{5}D'
      play
    end // of frame 25

    frame 35
      gotoLabel '9ybyE('
      play
    end // of frame 35

    frame 61
      stop
    end // of frame 61

    frame 69
      stop
    end // of frame 69

    frame 90
      stop
    end // of frame 90

    frame 102
      gotoLabel '{5}D'
      play
    end // of frame 102

    frame 112
      stop
    end // of frame 112

    frame 117
      stop
    end // of frame 117

    frame 139
      gotoLabel '9k5KD('
      play
    end // of frame 139

    frame 144
      stop
    end // of frame 144

    frame 152
      stop
    end // of frame 152

    frame 163
      stop
    end // of frame 163

    frame 174
      gotoLabel '{5}D'
      play
    end // of frame 174
  end // of defineMovieClip 279
  
  exportAssets
    279 as ')+jEC'
  end // of exportAssets

  defineMovieClip 280 // total frames: 1
  end // of defineMovieClip 280

  defineMovieClip 281 // total frames: 20
  end // of defineMovieClip 281

  defineMovieClip 283 // total frames: 1
  end // of defineMovieClip 283

  defineMovieClip 284 // total frames: 21
  end // of defineMovieClip 284
  
  exportAssets
    284 as ']7vdC('
  end // of exportAssets

  defineMovieClip 288 // total frames: 1
  end // of defineMovieClip 288
  
  exportAssets
    288 as '=IfIB('
  end // of exportAssets

  defineMovieClip 292 // total frames: 1
  end // of defineMovieClip 292

  defineMovieClip 293 // total frames: 1
  end // of defineMovieClip 293
  
  exportAssets
    293 as '{42,0'
  end // of exportAssets

  defineMovieClip 294 // total frames: 1
  end // of defineMovieClip 294
  
  exportAssets
    294 as '1j8N1'
  end // of exportAssets

  defineMovieClip 296 // total frames: 1
  end // of defineMovieClip 296
  
  exportAssets
    296 as '6x);-'
  end // of exportAssets

  defineMovieClip 316 // total frames: 20

    frame 19
      stop
    end // of frame 19
  end // of defineMovieClip 316
  
  exportAssets
    316 as '2KhC(('
  end // of exportAssets

  defineMovieClip 321 // total frames: 5

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 321

  defineMovieClip 323 // total frames: 1
  end // of defineMovieClip 323

  defineMovieClip 324 // total frames: 1
  end // of defineMovieClip 324

  defineMovieClip 326 // total frames: 3

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 326

  defineMovieClip 329 // total frames: 1
  end // of defineMovieClip 329

  defineMovieClip 334 // total frames: 3

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 334

  defineMovieClip 336 // total frames: 1
  end // of defineMovieClip 336

  defineMovieClip 338 // total frames: 1
  end // of defineMovieClip 338

  defineMovieClip 344 // total frames: 3

    frame 0
      push '_parent'
      getVariable
      push 'b1'
      getMember
      push '_currentframe'
      getMember
      gotoAndStop
    end // of frame 0
  end // of defineMovieClip 344

  defineMovieClip 345 // total frames: 161

    frame 16
      gotoLabel '9k5KD('
      play
    end // of frame 16

    frame 35
      stop
    end // of frame 35

    frame 64
      stop
    end // of frame 64

    frame 71
      stop
    end // of frame 71

    frame 85
      stop
    end // of frame 85

    frame 94
      stop
    end // of frame 94

    frame 125
      push ''
      removeClip
    end // of frame 125

    frame 140
      stop
    end // of frame 140

    frame 149
      gotoLabel '9k5KD('
      play
    end // of frame 149
  end // of defineMovieClip 345
  
  exportAssets
    345 as '5{Qn(('
  end // of exportAssets

  defineMovieClip 348 // total frames: 1
  end // of defineMovieClip 348
  
  exportAssets
    348 as '=ZXmL'
  end // of exportAssets

  defineMovieClip 353 // total frames: 34
  end // of defineMovieClip 353

  defineMovieClip 358 // total frames: 8
  end // of defineMovieClip 358

  defineMovieClip 359 // total frames: 1
  end // of defineMovieClip 359

  defineMovieClip 372 // total frames: 1
  end // of defineMovieClip 372

  defineMovieClip 375 // total frames: 4
  end // of defineMovieClip 375

  defineMovieClip 383 // total frames: 4
  end // of defineMovieClip 383

  defineMovieClip 392 // total frames: 1
  end // of defineMovieClip 392

  defineMovieClip 393 // total frames: 65
  end // of defineMovieClip 393

  defineMovieClip 394 // total frames: 14
  end // of defineMovieClip 394

  defineMovieClip 397 // total frames: 1
  end // of defineMovieClip 397

  defineMovieClip 398 // total frames: 8
  end // of defineMovieClip 398

  defineMovieClip 401 // total frames: 1
  end // of defineMovieClip 401

  defineMovieClip 404 // total frames: 6
  end // of defineMovieClip 404

  defineMovieClip 419 // total frames: 1
  end // of defineMovieClip 419

  defineMovieClip 421 // total frames: 1
  end // of defineMovieClip 421

  defineMovieClip 423 // total frames: 1
  end // of defineMovieClip 423

  defineMovieClip 429 // total frames: 4
  end // of defineMovieClip 429

  defineMovieClip 437 // total frames: 177

    frame 25
      gotoFrame 6
      play
    end // of frame 25

    frame 35
      gotoLabel '9ybyE('
      play
    end // of frame 35

    frame 61
      stop
    end // of frame 61

    frame 69
      stop
    end // of frame 69

    frame 90
      stop
    end // of frame 90

    frame 102
      gotoLabel '{5}D'
      play
    end // of frame 102

    frame 112
      stop
    end // of frame 112

    frame 117
      stop
    end // of frame 117

    frame 139
      gotoLabel '9k5KD('
      play
    end // of frame 139

    frame 143
      stop
    end // of frame 143

    frame 151
      stop
    end // of frame 151

    frame 163
      stop
    end // of frame 163

    frame 174
      gotoLabel '{5}D'
      play
    end // of frame 174
  end // of defineMovieClip 437
  
  exportAssets
    437 as '++TlB'
  end // of exportAssets

  defineMovieClip 440 // total frames: 2
  end // of defineMovieClip 440
  
  exportAssets
    440 as '),HaF('
  end // of exportAssets

  defineMovieClip 459 // total frames: 19

    frame 18
      push ']', 0.0
      setVariable
    end // of frame 18
  end // of defineMovieClip 459
  
  exportAssets
    459 as ';IzJK('
  end // of exportAssets

  defineMovieClip 462 // total frames: 2

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 462
  
  exportAssets
    462 as '7X1dG'
  end // of exportAssets

  defineMovieClip 465 // total frames: 2

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 465
  
  exportAssets
    465 as '*1Q1,('
  end // of exportAssets

  defineMovieClip 467 // total frames: 1
  end // of defineMovieClip 467
  
  exportAssets
    467 as '6-6 t'
  end // of exportAssets

  defineMovieClip 470 // total frames: 3

    frame 0
      push '', 10, 360
      setProperty
    end // of frame 0

    frame 1
      constants ''  
      push '', 2, '', 2
      getProperty
      push 6
      subtract
      setProperty
      push '', 3, '', 2
      getProperty
      setProperty
    end // of frame 1

    frame 2
      gotoFrame 1
      play
    end // of frame 2
  end // of defineMovieClip 470

  defineMovieClip 473 // total frames: 6

    frame 0
      push '', 5
      getProperty
      push 1
      subtract
      random
      push 2
      add
      gotoAndPlay
    end // of frame 0

    frame 5
      gotoFrame 1
      play
    end // of frame 5
  end // of defineMovieClip 473
  
  exportAssets
    473 as '7LeMK('
  end // of exportAssets

  defineMovieClip 474 // total frames: 10
  end // of defineMovieClip 474

  defineMovieClip 475 // total frames: 2
  end // of defineMovieClip 475
  
  exportAssets
    475 as '1D}{*'
  end // of exportAssets

  defineMovieClip 476 // total frames: 1

    frame 0
      constants 'flash', 'Object', 'filters', '{lN=R', '-0]rl', '-iB=', '+KD', '*r', '+-(0', '7Qe;6', 'push', '((', ')(', '_x', '_y', 'prototype', '87vE7(', '9T54', 'removeMovieClip', 'remove', '4u=dZ', '}1A{_', 'Math', 'sqrt', ')153L', 'atan2', '2sngh', '2K', '[j0D-', '(KA', '=OA', '*OA', ',v0X', '+{eA+', '[b', ']b', '6b', '_rotation', '{-kxL', '-V;B', '(KpGn', 'pow', '-fRSr', '{BxJE(', '1Jr-,(', 'call', ';H_ J', ']oH', '106*]', 'length', ' (', '5W 5', '_xscale', ';zS4((', '{28l*', '6y392', '2Urnb', '3=', '(Erk5', '7s', '}Yax5', '=e]}F', '*B', '6j07+', '5Hy6b', '8D5}=(', '=kIA', '+A}D', 'gotoAndPlay', '7{Qr,', ')099', 'random', '2(hH;', '4RW6x', '_visible', '6g,A', '8J 3y', '4,01', '=3+P', '+u', '3U*}=(', '[c,j*', ' oZ', ' +CD (', '*c)L', ',4+L', 'b1', 'gotoAndStop', '2', 'b3', 'b4', 'b5', ';CYOh', '565', '6jZ', ';ndCG', '5b)bA(', '*]Q5}', '(2(1', '=JpT6', '9-,', '3sZ', '8Ugi)', '9KN{_', '5ggDk', '44{N', '5;OW;', '{U0ib', ']GM*S', '6QA', '*=_p_', '*DzW', '2VhU6', '7bJ', '9YFAA', '()XG}', '-_X}5', '$bads', 'cos', 'sin', 'min', '3Wt', '2u=W=', '=', '0', ')', 'Color', 'ra', 'ga', 'ba', 'aa', 'rb', 'gb', 'bb', 'ab', 'setTransform', 'max', '2ya 0(', '(', '1U;0', 'GlowFilter', 'blurX', 'blurY', 'color', 'strength', ')GiA', '4bfMH(', '-Q)9)', '[s', '6g)L', '0a,L', '}cl4B', '99l8B', ' tk=B', ',i0 [', '256X', '}[3', '*w()A(', '1Z 6', '*9NtE(', 'text', ';-[;H', '*1Q1,(', '{==W3(', '3BjX_', '849kV', '8f5fb', '18wU*', '+7U K', '9,sMC', '5)H0', '2qA4z', '-ja', ',DBRf', 'scale', '6x9p', '3V[D(', '3GWsN', '_yscale', '4vK_Q', '_alpha', '{5}D', '7b', '+)_)a', '9I*', 'dispose', '8I0t8(', ' p3z=', ';={0[', '5U4B', ' (zm5', ';7=6u', '2X}A', '066O(', '2bevt', '=CF1', '}; ya', '}OcqB(', '3vx;w', '[c4gL', '7LeMK(', '6-6 t', '),HaF(', '4u57)', '$opt', ']qsu4(', ')2fr3', '}Zms3', 'Array', ']1sj+', '-fC3a', '9oK', '7-,', ']bu40', '_name', 'swapDepths', '7bSH*', '-4*l((', '(GbB}', '+2NA', 'getDepth', 'floor', '}oQA7', 'unshift', '08M8', 'clear', '9(K ;', ',}2X (', '4plQ5', 'getTimer', ';ILSy', '3R,QM', ';y}-6(', '-)Xd+', '[Ad;n', '6GI,F', 'fps', '3Izi', '2Gr]U', '(G37+', '4eyD,', ';}12E', ' ze,C(', '[xnrB', '}rbe', '03}12', '3ya+7', 'onMouseDown', '*Ri*3(', '6{VYR', 'onMouseUp', 'onMouseWheel', 'onMouseMove', 'Mouse', 'addListener', '{+Sn=', '}MNA=(', '5];UB', ')1khy', '897h', ')X6+W', '{}+mG', ')j LD(', ',9', '5}w((', '7T4cF(', '6uYK', '(laS', ',4,hs', '505t0', '+f2W(', '8C-7N', '[VeKO', '2(pBQ', '0j0-n', ';357+', '6zOsz', '+jQpe', ']NoIC', 'lineStyle', 'moveTo', 'lineTo', '6()', '0Y-1', '4F-5', '5F-5', '=Gq8n', '=QK+A(', '( C7C', '3s5q3', 'Key', 'LEFT', 'isDown', 'RIGHT', 'DOWN', '=xChd', 'UP', ';s072', '7{zg9', '9TL3', ')_()', '[jB=', ';Xtqo', '9=54', '(x)Xm', '8xaUB(', '1VZCH(', 'SPACE', 'CONTROL', '1=v6,(', ',cqp5', '-N;ZY', 'abs', '*eC,U', ',vtjI', '-hCnb', '7X1dG', '[0EO', ',S)x=(', '(BXD3', ';Yd4v', '2Zrn+', '[BC6', '5T6+', '8(jzF(', '6', '+', '(Rm7F', ')SYt5', '{U5my', '8Z=cb', '1D}{*', '0hF[', 'stop', '55*', '1', ';jqS(', ')Y;K4(', ',beI[', '{)1db', '3=vLC', '-lH+', '8=1p*(', '{[XZ]', '+N]Is', '}mJ*S', 'attachBitmap', 'width', 'height', 'display', 'BitmapData', 'geom', 'Matrix', 'rotate', 'translate', 'draw', '++TlB', ';jf;B', '_totalframes', '_currentframe', ')+jEC', ',PDs0', '=IfIB(', '[V{(6', '32', '+Da3+', '{42,0', 'pop', '8sfFC', '+QTJ_', '_xmouse', '_ymouse', 'insert', '(WBt)', ']}Ou;(', '3I0pG', '{;7F4', '8U(wu', '}[cpB', '9xv]A', '{yQ=Q', '+,W', '2y+dV', '(tBee', '3)i[=', ' J3IC', '[6jRc', ')8Fyj', '8)yt', ';+', '4MvcB', '0o*6', ')gv94', '-SjAs', '(l23,', ' yFNA(', '69-', ')9 9', ';2H=)', ';nv08(', '$dif', ']4h9;(', '5 drP', '47i1Z', ',vZ9+', '0Gti1(', '3O*F2', '*', '3,sMC', '_width', 'type', '31lvX', ';C*X2', '}r', '4sqY0', ';qo-J(', '70*', 'knockout', ',VfSD(', 'getCode', '0D 6', ']{i', '(H5 S', '0,8 W', '+aDob', '48Uky', '],lYS', '2kyAD', ',hO;2(', ',0tJP', 'scroll', ',i4aE', '}2', 'splice', ']s_TM', '3OhJj', 'hitTest', '=vyS[', '{_b]6(', 'sort', '2=*6c', 'Rectangle', 'fillRect', 'ceil', '5{Qn((', 'MONSTER POS ERROR !!! ', 'trace', '6x);-', 'blendMode', '001Dk', '77ldJ(', 'getPixel32', ' [v[O', '+{A i', '}Q_xM', '8y,7', '(3q]7(', '5N{ZO', '8OItb', '2bWj1', '$b', '6{X3L', '$ab', '1', '$h', '9;I', ';R{K,(', '841,4', '6}_lW', '-[m(M', 'globalToLocal', ' pyb5', '(yX{2', 'localToGlobal', ' Lw;i', '5b,-,(', 'show', '(8LH1', '4B1W(', '=ZXmL', '8kN', ',Hwi)', 'clearInterval', '16(VU', '-', 'setInterval', '}wUHz', 'split', 'join', '', 'indexOf', 'slice', 'substring', '* I51', 'charCodeAt', ',JBe0', '4UQ(1', '_parent', '{2', ' Ly7b', '0', '7g,ln', '4*fgv', 'getBounds', 'xMin', 'xMax', 'yMin', 'yMax', '16KA', '}J', ')goHJ(', 'movieclip', '9ss9+', '19{O', ',[A(', 'set', '-[A(', 'get', '{Gq]-', '$r', '$w', '$y', '$x', '$box', '$matrixType', '$radial', '$linear', ']cY[2', 'beginGradientFill', '1MK(H', '(w0dj', 'hide', '9d1xH', '=4PV0', ']7vdC(', '980Sb', '}-B2', '(kJ+1(', 'mode'  
      push 'flash'
      getVariable
      not
      not
      branchIfTrue label1
      push 'flash', 0, 'Object'
      new
      setVariable
     label1:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      not
      not
      branchIfTrue label2
      push 'flash'
      getVariable
      push 'filters', 0, 'Object'
      new
      setMember
     label2:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      push '{lN=R'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setMember
      push '-0]rl'
      function2 (r:2='}J') (r:1='this')
        push r:this, '-iB=', r:'}J'
        setMember
        push r:this, '-iB='
        getMember
        push '+KD', r:this
        setMember
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '7Qe;6'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '((', 0
        setMember
        push r:this, ')(', 0
        setMember
        push r:this, '-iB='
        getMember
        push '_x', -1000
        setMember
        push r:this, '-iB='
        getMember
        push '_y', -1000
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this')
        push r:this, '-iB='
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '-iB='
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this')
        push 0, r:this, '-iB='
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '7Qe;6'
        getMember
        push 'remove'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '4u=dZ'
      function2 () (r:1='this')
        push r:this, '-iB='
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '-iB='
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '}1A{_'
      function2 (r:2='8') (r:1='this')
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:3
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:4
        pop
        push r:3, r:3
        multiply
        push r:4, r:4
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        return
      end // of function 

      setMember
      push r:1, ')153L'
      function2 (r:2='8') (r:1='this')
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:3
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:4
        pop
        push r:3, r:4, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        return
      end // of function 

      setMember
      push r:1, '2sngh'
      function2 (r:2='8', r:3='*', r:4='62=') (r:1='this')
        push r:'8', 1, r:this, ')153L'
        callMethod
        setRegister r:5
        pop
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:6
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:7
        pop
        push r:this, '((', r:this, '(('
        getMember
        push r:'62=', r:6, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push r:'62=', r:7, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
      end // of function 

      setMember
      push r:1, '[j0D-'
      function2 (r:2='6') (r:1='this')
        push r:this, '(('
        getMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '(KA'
        getMember
        push '_x'
        getMember
        add
        setRegister r:3
        pop
        push r:this, ')('
        getMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '(KA'
        getMember
        push '_y'
        getMember
        add
        setRegister r:4
        pop
        push r:3, 0, r:'6'
        subtract
        lessThan
        dup
        branchIfTrue label3
        pop
        push r:3, '*r'
        getVariable
        push '=OA'
        getMember
        push r:'6'
        add
        greaterThan
       label3:
        dup
        branchIfTrue label4
        pop
        push r:4, 0, r:'6'
        subtract
        lessThan
       label4:
        dup
        branchIfTrue label5
        pop
        push r:4, '*r'
        getVariable
        push '*OA'
        getMember
        push r:'6'
        add
        greaterThan
       label5:
        return
      end // of function 

      setMember
      push ',v0X'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '+{eA+', 0.95
        setMember
        push r:this, '[b', 0
        setMember
        push r:this, ']b', 0
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '-0]rl'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, '6b'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label6
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '-iB='
        getMember
        push '_rotation'
        getMember
        push r:this, '6b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label6:
        push r:this, '(KpGn'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label7
        push r:this, ']b', r:this, ']b'
        getMember
        push r:this, '(KpGn'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label7:
        push r:this, '+{eA+'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label8
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push r:this, '+{eA+'
        getMember
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:3
        pop
        push r:this, '[b', r:this, '[b'
        getMember
        push r:3
        multiply
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:3
        multiply
        setMember
       label8:
        push r:this, '((', r:this, '(('
        getMember
        push r:this, '[b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push r:this, ']b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '-fRSr'
        getMember
        not
        branchIfTrue label9
        push 0, r:this, '{BxJE('
        callMethod
        pop
       label9:
        push r:this, 1, '1Jr-,('
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ';H_ J'
      function2 () (r:1='this')
        push r:this, ']b'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label16
        push r:this, ')('
        getMember
        push r:this, ']oH'
        getMember
        add
        setRegister r:2
        pop
        push r:2, r:this, ']b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        branch label11
       label10:
        push r:4
        increment
        setRegister r:4
        pop
       label11:
        push r:4, '*r'
        getVariable
        push '+-(0'
        getMember
        push '106*]'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label16
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '106*]'
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push r:3, r:5, ')('
        getMember
        lessThan
        dup
        not
        branchIfTrue label12
        pop
        push r:2, r:5, ')('
        getMember
        greaterThan
       label12:
        dup
        not
        branchIfTrue label13
        pop
        push r:this, '(('
        getMember
        push r:5, '(('
        getMember
        greaterThan
       label13:
        dup
        not
        branchIfTrue label14
        pop
        push r:this, '(('
        getMember
        push r:5, '(('
        getMember
        push r:5, ' ('
        getMember
        add
        lessThan
       label14:
        not
        branchIfTrue label15
        push r:this, ')(', r:5, ')('
        getMember
        push r:this, ']oH'
        getMember
        subtract
        setMember
        push r:5, 1, r:this, '5W 5'
        callMethod
        pop
        branch label16
       label15:
        branch label10
       label16:
      end // of function 

      setMember
      push r:1, '5W 5'
      function2 (r:2=')099') (r:1='this')
      end // of function 

      setMember
      push r:1, '{BxJE('
      function2 () (r:1='this')
        push 1
        setRegister r:2
        pop
        push r:this, '[b'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label17
        push -1
        setRegister r:2
        pop
       label17:
        push r:this, '-iB='
        getMember
        push '_xscale', r:2, 100
        multiply
        setMember
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '[b'
        getMember
        push r:this, ']b'
        getMember
        push 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        push 0.0174
        divide
        setMember
        push r:this, '[b'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label18
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '-iB='
        getMember
        push '_rotation'
        getMember
        push 180
        add
        setMember
       label18:
      end // of function 

      setMember
      push r:1, ';zS4(('
      function2 (r:2='8', r:3='*', r:4='62=') (r:1='this')
        push r:'8', 1, r:this, ')153L'
        callMethod
        setRegister r:5
        pop
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:6
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:7
        pop
        push r:this, '[b', r:this, '[b'
        getMember
        push r:'62=', r:6, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:'62=', r:7, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
      end // of function 

      setMember
      push '1Jr-,(', '-0]rl'
      getVariable
      push 'prototype'
      getMember
      push '87vE7('
      getMember
      setVariable
      push '{28l*'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6y392'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, ']oH', 10
        setMember
        push r:this, '2Urnb', FALSE
        setMember
        push r:this, '3=', 10
        setMember
        push r:this, '(Erk5', '*r'
        getVariable
        push '7s'
        getMember
        setMember
        push r:this, '}Yax5', 3
        setMember
        push r:this, '=e]}F', ' (', 1, '*B', 3, 2
        initObject
        push ' (', 20, '*B', 2, 2
        initObject
        push ' (', 100, '*B', 1, 2
        initObject
        push 3
        initArray
        setMember
        push r:this, '6j07+', TRUE
        setMember
        push 0, 1, r:this, '5Hy6b'
        callMethod
        pop
        push -1, 1, r:this, '8D5}=('
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '5Hy6b'
      function2 (r:2='7') (r:1='this')
        push r:this, '=kIA', r:'7'
        setMember
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label19
        push r:0, 1
        strictEquals
        branchIfTrue label20
        push r:0, 2
        strictEquals
        branchIfTrue label21
        branch label22
       label19:
        push '+A}D', 1, r:this, '-iB='
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push r:this, '(KpGn', 0
        setMember
        push r:this, '[b', 0
        setMember
        push r:this, ']b', 0
        setMember
        branch label22
       label20:
        push r:this, '(KpGn', '{28l*'
        getVariable
        push '7{Qr,'
        getMember
        setMember
        push r:this, ')099', NULL
        setMember
        branch label22
       label21:
        push r:this, '(KpGn', '{28l*'
        getVariable
        push '7{Qr,'
        getMember
        setMember
        push r:this, ')099', NULL
        setMember
        push r:this, ']b', 0, 4, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 5
        multiply
        add
        subtract
        setMember
        push r:this, '6b', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 18
        multiply
        setMember
        branch label22
       label22:
      end // of function 

      setMember
      push r:1, '2(hH;'
      function2 () (r:1='this')
        push 2, 1, r:this, '5Hy6b'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label23
        push r:0, 1
        strictEquals
        branchIfTrue label26
        branch label27
       label23:
        push r:this, ')099'
        getMember
        push '-iB='
        getMember
        push '_visible'
        getMember
        push TRUE
        equals
        not
        not
        branchIfTrue label24
        push 2, 1, r:this, '5Hy6b'
        callMethod
        pop
        branch label27
       label24:
        push r:this, '(('
        getMember
        push 1, r:this, ')099'
        getMember
        push '[j0D-'
        callMethod
        not
        branchIfTrue label25
        push r:this, '((', r:this, ')099'
        getMember
        push '(('
        getMember
        push r:this, ')099'
        getMember
        push ' ('
        getMember
        add
        push r:this, '(('
        getMember
        push r:this, ')099'
        getMember
        push '(('
        getMember
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
        push 0, r:this, '6g,A'
        getMember
        subtract
        push 1, r:this, '8D5}=('
        callMethod
        pop
       label25:
        push r:this, '[b', r:this, '}Yax5'
        getMember
        push r:this, '6g,A'
        getMember
        multiply
        setMember
        branch label27
       label26:
        push 0, r:this, ';H_ J'
        callMethod
        pop
        branch label27
       label27:
        push 0, r:this, '8J 3y'
        callMethod
        pop
        push r:this, ')('
        getMember
        push 600
        greaterThan
        dup
        not
        branchIfTrue label28
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push ')('
        getMember
        push '=3+P'
        getVariable
        push '+u'
        getMember
        lessThan
       label28:
        not
        branchIfTrue label29
        push 0, r:this, '9T54'
        callMethod
        pop
       label29:
      end // of function 

      setMember
      push r:1, '3U*}=('
      function2 (r:2='7') (r:1='this')
        push r:this, '[c,j*', r:'7'
        setMember
        push r:this, '[c,j*'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label30
        push r:0, 1
        strictEquals
        branchIfTrue label31
        push r:0, 2
        strictEquals
        branchIfTrue label32
        branch label33
       label30:
        push r:this, '3=', 10
        setMember
        push r:this, '(Erk5', '*r'
        getVariable
        push ' oZ'
        getMember
        setMember
        push r:this, '}Yax5', 2
        setMember
        push 0, r:this, ' +CD ('
        callMethod
        pop
        push ' (', 70, '*B', 4, 2
        initObject
        push 1, r:this, '=e]}F'
        getMember
        push 'push'
        callMethod
        pop
        push ' (', 4, '*B', 6, 2
        initObject
        push 1, r:this, '=e]}F'
        getMember
        push 'push'
        callMethod
        pop
        push ' (', 1, '*B', 8, 2
        initObject
        push 1, r:this, '=e]}F'
        getMember
        push 'push'
        callMethod
        pop
        branch label33
       label31:
        push r:this, '3=', 30
        setMember
        push r:this, '(Erk5', '*r'
        getVariable
        push '*c)L'
        getMember
        setMember
        push r:this, '}Yax5', 3
        setMember
        push 0, r:this, ' +CD ('
        callMethod
        pop
        push ' (', 40, '*B', 4, 2
        initObject
        push 1, r:this, '=e]}F'
        getMember
        push 'push'
        callMethod
        pop
        push ' (', 30, '*B', 5, 2
        initObject
        push 1, r:this, '=e]}F'
        getMember
        push 'push'
        callMethod
        pop
        push ' (', 15, '*B', 6, 2
        initObject
        push 1, r:this, '=e]}F'
        getMember
        push 'push'
        callMethod
        pop
        push ' (', 15, '*B', 8, 2
        initObject
        push 1, r:this, '=e]}F'
        getMember
        push 'push'
        callMethod
        pop
        push ' (', 10, '*B', 24, 2
        initObject
        push 1, r:this, '=e]}F'
        getMember
        push 'push'
        callMethod
        pop
        push ' (', 10, '*B', 25, 2
        initObject
        push 1, r:this, '=e]}F'
        getMember
        push 'push'
        callMethod
        pop
        push ' (', 3, '*B', 20, 2
        initObject
        push 1, r:this, '=e]}F'
        getMember
        push 'push'
        callMethod
        pop
        push ' (', 3, '*B', 21, 2
        initObject
        push 1, r:this, '=e]}F'
        getMember
        push 'push'
        callMethod
        pop
        push ' (', 1, '*B', 23, 2
        initObject
        push 1, r:this, '=e]}F'
        getMember
        push 'push'
        callMethod
        pop
        branch label33
       label32:
        push r:this, '3=', 60
        setMember
        push r:this, '(Erk5', '*r'
        getVariable
        push ',4+L'
        getMember
        setMember
        push r:this, '}Yax5', 4
        setMember
        push r:this, '2Urnb', TRUE
        setMember
        push ' (', 40, '*B', 5, 2
        initObject
        push 1, r:this, '=e]}F'
        getMember
        push 'push'
        callMethod
        pop
        push ' (', 20, '*B', 20, 2
        initObject
        push 1, r:this, '=e]}F'
        getMember
        push 'push'
        callMethod
        pop
        push ' (', 20, '*B', 21, 2
        initObject
        push 1, r:this, '=e]}F'
        getMember
        push 'push'
        callMethod
        pop
        push ' (', 20, '*B', 25, 2
        initObject
        push 1, r:this, '=e]}F'
        getMember
        push 'push'
        callMethod
        pop
        push ' (', 10, '*B', 7, 2
        initObject
        push 1, r:this, '=e]}F'
        getMember
        push 'push'
        callMethod
        pop
        push ' (', 5, '*B', 23, 2
        initObject
        push 1, r:this, '=e]}F'
        getMember
        push 'push'
        callMethod
        pop
        branch label33
       label33:
        push r:this, '[c,j*'
        getMember
        push 1
        add
        toString
        push 1, r:this, '-iB='
        getMember
        push 'b1'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ' +CD ('
      function2 () (r:1='this')
        push r:this, '-iB='
        getMember
        setRegister r:2
        pop
        push '2', 1, r:2, 'b3'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push '2', 1, r:2, 'b4'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push '2', 1, r:2, 'b5'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '5W 5'
      function2 (r:2=' R') (r:1='this')
        push r:this, ')099', r:' R'
        setMember
        push 0, 1, r:this, '5Hy6b'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '8J 3y'
      function2 () (r:1='this')
        push r:this, 'flash'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label35
        push r:this, 'flash'
        getMember
        setRegister r:2
        pop
        push r:this, 'flash', r:this, 'flash'
        getMember
        push 0.7
        multiply
        setMember
        push r:this, 'flash'
        getMember
        push 1
        lessThan
        not
        branchIfTrue label34
        push r:this, 'flash', NULL
        setMember
        push 0
        setRegister r:2
        pop
       label34:
        push 16777215, r:2, r:this, '-iB='
        getMember
        push 3, '*r'
        getVariable
        push ';CYOh'
        callMethod
        pop
       label35:
      end // of function 

      setMember
      push r:1, '565'
      function2 (r:2=')93A') (r:1='this')
        push '*r'
        getVariable
        push '6jZ'
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push FALSE, r:')93A', '*]Q5}'
        getMember
        push 2, r:this, '(2(1'
        callMethod
        pop
        push 2, r:')93A', '[b'
        getMember
        push r:')93A', ']b'
        getMember
        push 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        push 2, r:this, '=JpT6'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '9-,'
      function2 (r:2='7') (r:1='this')
        push '*r'
        getVariable
        push '3sZ'
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push TRUE, r:'7', 2, r:this, '(2(1'
        callMethod
        pop
        push 10, 1.57, 1.57, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '6g,A'
        getMember
        multiply
        subtract
        push 2, r:this, '=JpT6'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '(2(1'
      function2 (r:2='7', r:3='[Dgjb') (r:1='this')
        push r:this, '3=', r:this, '3='
        getMember
        push r:'7'
        subtract
        setMember
        push r:this, '3='
        getMember
        push 0
        lessThan
        not
        branchIfTrue label36
        push r:'[Dgjb', 1, r:this, '8Ugi)'
        callMethod
        pop
        branch label37
       label36:
        push r:this, 'flash', 100
        setMember
       label37:
      end // of function 

      setMember
      push r:1, '8Ugi)'
      function2 (r:2='[Dgjb') (r:1='this')
        push 0, r:this, '9KN{_'
        callMethod
        push r:this, '-iB='
        getMember
        push '_y'
        getMember
        push r:this, '-iB='
        getMember
        push '_x'
        getMember
        push 3, '*r'
        getVariable
        push '+-(0'
        getMember
        push '5ggDk'
        callMethod
        pop
        push 16777215, 0, r:this, '-iB='
        getMember
        push 3, '*r'
        getVariable
        push ';CYOh'
        callMethod
        pop
        push r:'[Dgjb'
        not
        branchIfTrue label41
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push '44{N'
        getVariable
        push '{U0ib'
        getMember
        push 2
        initArray
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        branch label39
       label38:
        push r:4
        increment
        setRegister r:4
        pop
       label39:
        push r:4, 2
        lessThan
        not
        branchIfTrue label40
        push r:3, r:4
        getMember
        push ']GM*S', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:5
        pop
        push r:5, '((', r:this, '(('
        getMember
        setMember
        push r:5, ')(', r:this, ')('
        getMember
        setMember
        push r:5, '[b', r:this, '[b'
        getMember
        push r:4, 2
        multiply
        push 1
        subtract
        push 2
        multiply
        subtract
        setMember
        push r:5, ']b', r:this, ']b'
        getMember
        push 2.5, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        add
        subtract
        setMember
        push r:5, '6b', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 2
        multiply
        setMember
        push r:5, '2VhU6', 40, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:5, '(KpGn', 0.3
        setMember
        push 2, r:4
        subtract
        toString
        push 1, r:5, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '[c,j*'
        getMember
        push 1
        add
        toString
        push 1, r:5, '-iB='
        getMember
        push '7bJ'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:5, '9YFAA', TRUE
        setMember
        push r:5, ']oH', 6
        setMember
        push r:5, '-iB='
        getMember
        push '_xscale', 100, r:this, '6g,A'
        getMember
        multiply
        setMember
        branch label38
       label40:
        branch label42
       label41:
        push r:this, '-iB='
        getMember
        push 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '()XG}'
        callMethod
        pop
        push '8Ugi)', 1, r:this, '-iB='
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push r:this, '-iB=', NULL
        setMember
       label42:
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$bads'
        getMember
        push r:this, '[c,j*'
        getMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$bads'
        getMember
        push r:this, '[c,j*'
        getMember
        getMember
        increment
        setMember
        push r:this, '(Erk5'
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push 0, r:this, '9T54'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '=JpT6'
      function2 (r:2='(', r:3='9') (r:1='this')
        push r:'(', 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:'9'
        multiply
        setRegister r:4
        pop
        push r:'(', 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:'9'
        multiply
        push 3
        subtract
        setRegister r:5
        pop
        push r:this, '=kIA'
        getMember
        push 0
        equals
        not
        branchIfTrue label44
        push r:5, 0, 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:5
        pop
        push r:5, -2
        lessThan
        not
        branchIfTrue label43
        push 1, 1, r:this, '5Hy6b'
        callMethod
        pop
        branch label44
       label43:
        push UNDEF
        return
       label44:
        push r:this, '[b', r:this, '[b'
        getMember
        push r:4
        add
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:5
        add
        setMember
      end // of function 

      setMember
      push r:1, '8D5}=('
      function2 (r:2='7') (r:1='this')
        push r:this, '6g,A', r:'7'
        setMember
        push r:this, '-iB='
        getMember
        push '_xscale', r:'7', 100
        multiply
        setMember
      end // of function 

      setMember
      push r:1, '9KN{_'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label46
       label45:
        push r:3
        increment
        setRegister r:3
        pop
       label46:
        push r:3, r:this, '=e]}F'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label47
        push r:2, r:this, '=e]}F'
        getMember
        push r:3
        getMember
        push ' ('
        getMember
        add
        setRegister r:2
        pop
        branch label45
       label47:
        push r:2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:4
        pop
        push 0
        setRegister r:2
        pop
        push 0
        setRegister r:5
        pop
        branch label49
       label48:
        push r:5
        increment
        setRegister r:5
        pop
       label49:
        push r:5, r:this, '=e]}F'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label51
        push r:2, r:this, '=e]}F'
        getMember
        push r:5
        getMember
        push ' ('
        getMember
        add
        setRegister r:2
        pop
        push r:2, r:4
        greaterThan
        not
        branchIfTrue label50
        push r:this, '=e]}F'
        getMember
        push r:5
        getMember
        push '*B'
        getMember
        return
       label50:
        branch label48
       label51:
        push 0
        return
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6y392'
        getMember
        push 'remove'
        callMethod
        pop
        push r:this, 1, '2u=W='
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push '2u=W=', '-0]rl'
      getVariable
      push 'prototype'
      getMember
      push '9T54'
      getMember
      setVariable
      push '4RW6x', ',v0X'
      getVariable
      push 'prototype'
      getMember
      push '87vE7('
      getMember
      setVariable
      push r:0, '7{Qr,', 1
      setMember
      push '*r'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ';CYOh'
      function2 (r:2='}J', r:3='3GF', r:4='(v+') (r:1='this')
        push '=', r:'(v+', 16
        shiftRight
        push '0', r:'(v+', 8
        shiftRight
        push 255
        bitwiseAnd
        push ')', r:'(v+', 255
        bitwiseAnd
        push 3
        initObject
        setRegister r:5
        pop
        push r:'}J', 1, 'Color'
        new
        setRegister r:6
        pop
        push r:'3GF', 100
        divide
        setRegister r:7
        pop
        push 'ra', 100, r:'3GF'
        subtract
        int
        push 'ga', 100, r:'3GF'
        subtract
        int
        push 'ba', 100, r:'3GF'
        subtract
        int
        push 'aa', 100, 'rb', r:7, r:5, '='
        getMember
        multiply
        int
        push 'gb', r:7, r:5, '0'
        getMember
        multiply
        int
        push 'bb', r:7, r:5, ')'
        getMember
        multiply
        int
        push 'ab', 0, 8
        initObject
        setRegister r:8
        pop
        push r:8, 1, r:6, 'setTransform'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '2K'
      function2 (r:2='(', r:3=')', r:4='*') (r:1='this')
        push r:'*', r:')', r:'(', 2, 'Math'
        getVariable
        push 'max'
        callMethod
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        return
      end // of function 

      setMember
      push r:0, '2ya 0('
      function2 (r:2='(v+') (r:1='this')
        push '(', r:'(v+', 24
        shiftRight2
        push '=', r:'(v+', 16
        shiftRight
        push 255
        bitwiseAnd
        push '0', r:'(v+', 8
        shiftRight
        push 255
        bitwiseAnd
        push ')', r:'(v+', 255
        bitwiseAnd
        push 4
        initObject
        return
      end // of function 

      setMember
      push r:0, '1U;0'
      function2 (r:2='}J', r:3='+', r:4='[', r:5='(v+') (r:1='this')
        push 0, 'flash'
        getVariable
        push 'filters'
        getMember
        push 'GlowFilter'
        newMethod
        setRegister r:6
        pop
        push r:6, 'blurX', r:'+'
        setMember
        push r:6, 'blurY', r:'+'
        setMember
        push r:6, 'color', r:'(v+'
        setMember
        push r:6, 'strength', r:'['
        setMember
        push r:'}J', 'filters'
        getMember
        setRegister r:7
        pop
        push r:6, 1, r:7, 'push'
        callMethod
        pop
        push r:'}J', 'filters', r:7
        setMember
      end // of function 

      setMember
      push r:0, ')GiA'
      function2 (r:2='7', r:3='6lA') (r:1='this')
        push r:'7', r:'6lA'
        lessThan
        not
        not
        branchIfTrue label52
        push r:'7', r:'6lA'
        subtract
        setRegister r:'7'
        pop
       label52:
        push r:'7', 0
        lessThan
        not
        branchIfTrue label53
        push r:'7', r:'6lA'
        add
        setRegister r:'7'
        pop
       label53:
        push r:'7'
        return
      end // of function 

      setMember
      push r:0, '4bfMH('
      function2 (r:2='8') (r:1='this')
        push r:'8', '='
        getMember
        push 16
        shiftLeft
        push r:'8', '0'
        getMember
        push 8
        shiftLeft
        bitwiseOr
        push r:'8', ')'
        getMember
        bitwiseOr
        return
      end // of function 

      setMember
      push r:0, '=OA', 300
      setMember
      push r:0, '*OA', 300
      setMember
      push r:0, '7s', 0, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '[s', 5, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '6jZ', 10, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, ' oZ', 30, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '3sZ', 50, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '*c)L', 100, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '6g)L', 120, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, ',4+L', 200, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '0a,L', 300, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '}cl4B', 1000, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '99l8B', 5000, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, ' tk=B', 8000, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push ',i0 ['
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push '256X'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '106*]'
        getMember
        push 'push'
        callMethod
        pop
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '}[3', r:'}J'
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '-0]rl'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '*w()A('
      function2 (r:2=')N', r:3='*N', r:4='(N') (r:1='this')
        push r:')N', r:this, '(('
        getMember
        subtract
        setRegister r:5
        pop
        push r:this, '((', r:')N'
        setMember
        push r:this, ')(', r:'*N'
        setMember
        push r:this, ' (', r:'(N'
        setMember
        push r:this, '}[3'
        getMember
        push '1Z 6'
        getMember
        push '_xscale', r:this, ' ('
        getMember
        push 38
        subtract
        setMember
        push r:this, '}[3'
        getMember
        push '*9NtE('
        getMember
        push '_x', r:this, ' ('
        getMember
        push 19
        subtract
        setMember
        push r:this, '}[3'
        getMember
        push 'text'
        getMember
        push '_x', r:this, '}[3'
        getMember
        push 'text'
        getMember
        push '_x'
        getMember
        push r:5
        subtract
        setMember
        push 0, r:this, '4u=dZ'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '1Jr-,('
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ';-[;H'
      function2 (r:2='+Y') (r:1='this')
        push FALSE
        setRegister r:3
        pop
        push r:'+Y', r:this, '(('
        getMember
        subtract
        setRegister r:4
        pop
        push r:this, ' ('
        getMember
        push r:4
        subtract
        push 100
        lessThan
        not
        branchIfTrue label54
        push TRUE
        setRegister r:3
        pop
        push r:this, ' ('
        getMember
        setRegister r:4
        pop
       label54:
        push r:'+Y', '*r'
        getVariable
        push '+-(0'
        getMember
        push '(KA'
        getMember
        push '_x'
        getMember
        add
        push 0
        greaterThan
        not
        branchIfTrue label66
        push 0
        setRegister r:5
        pop
        branch label56
       label55:
        push r:5
        increment
        setRegister r:5
        pop
       label56:
        push r:5, r:4, 0.1
        multiply
        lessThan
        not
        branchIfTrue label57
        push '*1Q1,(', 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '{==W3('
        callMethod
        setRegister r:6
        pop
        push r:6, '((', r:this, '(('
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push r:4
        multiply
        add
        setMember
        push r:6, ')(', r:this, ')('
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 8
        multiply
        add
        setMember
        push 100, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 100
        multiply
        add
        push 1, r:6, '3BjX_'
        callMethod
        pop
        push r:6, '(KpGn', 0.1, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.3
        multiply
        add
        setMember
        push r:6, '2VhU6', 20, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:6, '849kV', 0
        setMember
        branch label55
       label57:
        push r:4
        setRegister r:7
        pop
        push r:this, '(('
        getMember
        setRegister r:8
        pop
       label58:
        push r:7, 30
        greaterThan
        not
        branchIfTrue label59
        push 100, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push r:7
        multiply
        push 30, 3, '*r'
        getVariable
        push '2K'
        callMethod
        setRegister r:9
        pop
        push '44{N'
        getVariable
        push '8f5fb'
        getMember
        push 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6QA'
        getMember
        push '18wU*'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:10
        pop
        push r:10, '((', r:8, r:9, 0.5
        multiply
        add
        setMember
        push r:10, ')(', r:this, ')('
        getMember
        push 5
        add
        setMember
        push r:10, '-iB='
        getMember
        push 1, '+7U K'
        new
        setRegister r:11
        pop
        push 0, '9,sMC', 2, r:11, '*=_p_'
        callMethod
        push 1, '256X'
        new
        setRegister r:12
        pop
        push r:12, '((', 0, r:9
        subtract
        push 0.5
        multiply
        setMember
        push r:9, -5, r:12, '(('
        getMember
        push 3, r:12, '*w()A('
        callMethod
        pop
        push r:12, '-iB=', NULL
        setMember
        push 0, r:12, '9T54'
        callMethod
        pop
        push r:10, '(KpGn', 0.2, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.2
        multiply
        add
        setMember
        push r:10, '6b', 2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 0.5, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0, 4, r:9, 0.05
        multiply
        subtract
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        multiply
        add
        multiply
        setMember
        push r:10, '2VhU6', 30, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:8, r:9
        add
        setRegister r:8
        pop
        push r:7, r:9
        subtract
        setRegister r:7
        pop
        branch label58
       label59:
        push 0
        setRegister r:13
        pop
        branch label61
       label60:
        push r:13
        increment
        setRegister r:13
        pop
       label61:
        push r:13, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6y392'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label64
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '6y392'
        getMember
        push r:13
        getMember
        setRegister r:14
        pop
        push r:14, ')099'
        getMember
        push r:this
        equals
        dup
        not
        branchIfTrue label62
        pop
        push r:'+Y', r:14, '(('
        getMember
        greaterThan
        dup
        branchIfTrue label62
        pop
        push r:3
       label62:
        not
        branchIfTrue label63
        push 2, 1, r:14, '5Hy6b'
        callMethod
        pop
       label63:
        branch label60
       label64:
        push r:this, '5)H0'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label66
        push r:'+Y', r:this, '5)H0'
        getMember
        push '(('
        getMember
        greaterThan
        dup
        branchIfTrue label65
        pop
        push r:3
       label65:
        not
        branchIfTrue label66
        push 0, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '2qA4z'
        callMethod
        pop
       label66:
        push r:3
        not
        branchIfTrue label68
        push r:this, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push ')099'
        getMember
        equals
        not
        branchIfTrue label67
        push '=3+P'
        getVariable
        push '-ja'
        getMember
        push 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '5Hy6b'
        callMethod
        pop
       label67:
        push 0, r:this, '9T54'
        callMethod
        pop
        branch label69
       label68:
        push r:this, ' ('
        getMember
        push r:4
        subtract
        push r:this, ')('
        getMember
        push r:this, '(('
        getMember
        push r:4
        add
        push 3, r:this, '*w()A('
        callMethod
        pop
       label69:
      end // of function 

      setMember
      push r:1, '[j0D-'
      function2 (r:2='2[') (r:1='this')
        push r:'2[', r:this, '(('
        getMember
        lessThan
        dup
        branchIfTrue label70
        pop
        push r:'2[', r:this, '(('
        getMember
        push r:this, ' ('
        getMember
        add
        greaterThan
       label70:
        return
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '106*]'
        getMember
        push 'remove'
        callMethod
        pop
        push r:this, 1, '2u=W='
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push '*DzW'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, ',DBRf', 10
        setMember
        push r:this, 'scale', 100
        setMember
        push r:this, '6x9p', 100
        setMember
        push r:this, '3V[D(', 1
        setMember
        push r:this, '3GWsN', 1
        setMember
        push r:this, '-iB='
        getMember
        push '+KD', r:this
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '3BjX_'
      function2 (r:2='-X') (r:1='this')
        push r:this, 'scale', r:'-X'
        setMember
        push r:this, '-iB='
        getMember
        push '_xscale', r:'-X'
        setMember
        push r:this, '-iB='
        getMember
        push '_yscale', r:'-X'
        setMember
      end // of function 

      setMember
      push r:1, '4vK_Q'
      function2 (r:2='7') (r:1='this')
        push r:this, '6x9p', r:'7'
        setMember
        push r:this, '-iB='
        getMember
        push '_alpha', r:this, '6x9p'
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, '{5}D'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label71
        push r:this, '{5}D', r:this, '{5}D'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push UNDEF
        return
       label71:
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '6b'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label72
        push r:this, '6b', r:this, '6b'
        getMember
        push r:this, '3V[D('
        getMember
        multiply
        setMember
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '-iB='
        getMember
        push '_rotation'
        getMember
        push r:this, '6b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label72:
        push r:this, '2VhU6'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label76
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '2VhU6'
        getMember
        push r:this, ',DBRf'
        getMember
        lessThan
        not
        branchIfTrue label76
        push r:this, '2VhU6'
        getMember
        push r:this, ',DBRf'
        getMember
        divide
        setRegister r:3
        pop
        push r:this, '849kV'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label73
        branch label74
       label73:
        push r:this, '-iB='
        getMember
        push '_xscale', r:this, 'scale'
        getMember
        push r:3
        multiply
        setMember
        push r:this, '-iB='
        getMember
        push '_yscale', r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        setMember
        branch label75
       label74:
        push r:this, '-iB='
        getMember
        push '_alpha', r:3, r:this, '6x9p'
        getMember
        multiply
        setMember
        branch label75
       label75:
        push r:this, '2VhU6'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label76
        push 0, r:this, '9T54'
        callMethod
        pop
       label76:
        push r:this, '7b'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label77
        push r:this, '7b', r:this, '7b'
        getMember
        push r:this, '3GWsN'
        getMember
        multiply
        setMember
        push r:this, 'scale', r:this, 'scale'
        getMember
        push r:this, '7b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, 'scale'
        getMember
        push 1, r:this, '3BjX_'
        callMethod
        pop
       label77:
        push r:this, '+)_)a'
        getMember
        push NULL
        equals
        not
        dup
        not
        branchIfTrue label78
        pop
        push r:this, '+)_)a'
        getMember
        push 1, r:this, '[j0D-'
        callMethod
       label78:
        not
        branchIfTrue label79
        push 0, r:this, '9T54'
        callMethod
        pop
       label79:
        push r:this, '9YFAA'
        getMember
        not
        branchIfTrue label80
        push 0, r:this, ';H_ J'
        callMethod
        pop
       label80:
      end // of function 

      setMember
      push r:1, '5W 5'
      function2 (r:2=' R') (r:1='this')
        push r:this, ']b', r:this, ']b'
        getMember
        push -1
        multiply
        setMember
        push r:this, '6b', r:this, '6b'
        getMember
        push 0, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        subtract
        push 1.5
        multiply
        multiply
        setMember
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push r:this, '9I*'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label81
        push 0, r:this, '9I*'
        getMember
        push 'dispose'
        callMethod
        pop
       label81:
        push r:this, '8I0t8('
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label82
        push r:this, '8I0t8('
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
       label82:
        push r:this, 1, '2u=W='
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push ' p3z='
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push ';={0['
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '5U4B', 300
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '-0]rl'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, '5U4B', r:this, '5U4B'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '5U4B'
        getMember
        push 10
        lessThan
        not
        branchIfTrue label83
        push r:this, '-iB='
        getMember
        push '_alpha', r:this, '5U4B'
        getMember
        push 10
        multiply
        setMember
        push r:this, '5U4B'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label83
        push 0, r:this, '9T54'
        callMethod
        pop
       label83:
        push r:this, 1, '1Jr-,('
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ' (zm5'
      function2 (r:2='7') (r:1='this')
        push r:'7', 25
        equals
        dup
        branchIfTrue label84
        pop
        push r:'7', 8
        equals
       label84:
        not
        branchIfTrue label86
        push ' p3z='
        getVariable
        push ';7=6u'
        getMember
        push NULL
        equals
        not
        branchIfTrue label85
        push ' p3z='
        getVariable
        push ';7=6u', r:'7'
        setMember
        branch label86
       label85:
        push ' p3z='
        getVariable
        push ';7=6u'
        getMember
        setRegister r:'7'
        pop
       label86:
        push r:this, '*B', r:'7'
        setMember
        push r:this, '*B'
        getMember
        toString
        push 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '2X}A'
      function2 () (r:1='this')
        push NULL
        setRegister r:2
        pop
        push NULL
        setRegister r:3
        pop
        push r:this, '*B'
        getMember
        setRegister r:0
        push 1
        strictEquals
        branchIfTrue label87
        push r:0, 2
        strictEquals
        branchIfTrue label88
        push r:0, 3
        strictEquals
        branchIfTrue label89
        push r:0, 4
        strictEquals
        branchIfTrue label90
        push r:0, 5
        strictEquals
        branchIfTrue label91
        push r:0, 6
        strictEquals
        branchIfTrue label92
        push r:0, 7
        strictEquals
        branchIfTrue label93
        push r:0, 8
        strictEquals
        branchIfTrue label94
        branch label95
       label87:
        push '*r'
        getVariable
        push ',4+L'
        getMember
        setRegister r:3
        pop
        push 0
        setRegister r:2
        pop
        branch label97
       label88:
        push '*r'
        getVariable
        push '}cl4B'
        getMember
        setRegister r:3
        pop
        push 0
        setRegister r:2
        pop
        branch label97
       label89:
        push '*r'
        getVariable
        push '99l8B'
        getMember
        setRegister r:3
        pop
        push 0
        setRegister r:2
        pop
       label90:
        push 20, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '066O('
        callMethod
        pop
        push 1
        setRegister r:2
        pop
        branch label97
       label91:
        push 50, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '066O('
        callMethod
        pop
        push 1
        setRegister r:2
        pop
        branch label97
       label92:
        push 1, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '2bevt'
        callMethod
        pop
        push 1
        setRegister r:2
        pop
        branch label97
       label93:
        push 0, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '=CF1'
        callMethod
        pop
        push 1
        setRegister r:2
        pop
        branch label97
       label94:
        push 0, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '}; ya'
        callMethod
        pop
        push 1
        setRegister r:2
        pop
        branch label97
       label95:
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '}OcqB('
        getMember
        push r:this, '*B'
        getMember
        push 20
        subtract
        push TRUE
        setMember
        push 0, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '3vx;w'
        callMethod
        pop
        push 1
        setRegister r:2
        pop
        push r:this, '*B'
        getMember
        push 24
        equals
        not
        branchIfTrue label96
        push '=3+P'
        getVariable
        push '[c4gL', '=3+P'
        getVariable
        push '[c4gL'
        getMember
        push 1.5
        multiply
        setMember
       label96:
        branch label97
       label97:
        push r:2
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label98
        push r:0, 1
        strictEquals
        branchIfTrue label102
        push r:0, 2
        strictEquals
        branchIfTrue label106
        branch label113
       label98:
        push 0
        setRegister r:4
        pop
        branch label100
       label99:
        push r:4
        increment
        setRegister r:4
        pop
       label100:
        push r:4, 12
        lessThan
        not
        branchIfTrue label101
        push '7LeMK(', 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '{==W3('
        callMethod
        setRegister r:5
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:6
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6, 18, 1, r:4, 24
        divide
        subtract
        multiply
        add
        multiply
        setRegister r:7
        pop
        push r:5, '((', r:this, '-iB='
        getMember
        push '_x'
        getMember
        push r:6, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:7
        multiply
        add
        setMember
        push r:5, ')(', r:this, '-iB='
        getMember
        push '_y'
        getMember
        push r:6, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:7
        multiply
        add
        setMember
        push r:5, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:5, '{5}D', 0.5, r:4, 30
        multiply
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        push 8
        subtract
        push 0, 2, 'Math'
        getVariable
        push 'max'
        callMethod
        setMember
        push 30, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 100
        multiply
        add
        push r:5, '{5}D'
        getMember
        push 2
        multiply
        subtract
        push 1, r:5, '3BjX_'
        callMethod
        pop
        branch label99
       label101:
        branch label113
       label102:
        push 0
        setRegister r:8
        pop
        branch label104
       label103:
        push r:8
        increment
        setRegister r:8
        pop
       label104:
        push r:8, 3
        lessThan
        not
        branchIfTrue label105
        push '6-6 t', 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '{==W3('
        callMethod
        setRegister r:9
        pop
        push r:9, '((', r:this, '-iB='
        getMember
        push '_x'
        getMember
        setMember
        push r:9, ')(', r:this, '-iB='
        getMember
        push '_y'
        getMember
        setMember
        push r:9, '-iB='
        getMember
        push '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        push r:9, '2VhU6', 18, r:8, 3
        multiply
        subtract
        setMember
        push r:9, '7b', 6, r:8, 8
        multiply
        add
        setMember
        push r:9, '6b', 8, r:8, 12
        multiply
        add
        setMember
        branch label103
       label105:
        branch label113
       label106:
        push 8
        setRegister r:10
        pop
        push 0
        setRegister r:11
        pop
        branch label108
       label107:
        push r:11
        increment
        setRegister r:11
        pop
       label108:
        push r:11, r:10
        lessThan
        not
        branchIfTrue label112
        push 0
        setRegister r:12
        pop
        branch label110
       label109:
        push r:12
        increment
        setRegister r:12
        pop
       label110:
        push r:12, 2
        lessThan
        not
        branchIfTrue label111
        push '),HaF(', 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '{==W3('
        callMethod
        setRegister r:13
        pop
        push r:13, '((', r:this, '-iB='
        getMember
        push '_x'
        getMember
        setMember
        push r:13, ')(', r:this, '-iB='
        getMember
        push '_y'
        getMember
        setMember
        push r:11, 0.5, r:12
        multiply
        add
        push r:10
        divide
        push 6.28
        multiply
        setRegister r:14
        pop
        push 3, r:12, 2
        multiply
        add
        setRegister r:15
        pop
        push r:13, '[b', r:13, '[b'
        getMember
        push r:14, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:15
        multiply
        add
        setMember
        push r:13, ']b', r:13, ']b'
        getMember
        push r:14, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:15
        multiply
        add
        setMember
        push r:13, '2VhU6', 26, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 4
        multiply
        add
        push r:12, 10
        multiply
        subtract
        setMember
        push r:13, '+{eA+', 0.9
        setMember
        branch label109
       label111:
        branch label107
       label112:
        branch label113
       label113:
        push r:3, NULL
        equals
        not
        not
        branchIfTrue label115
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '}OcqB('
        getMember
        push 3
        getMember
        not
        branchIfTrue label114
        push 2, 1, ';ndCG'
        getVariable
        push '-Q)9)'
        callMethod
        push r:3, 2, ';ndCG'
        getVariable
        push '4u57)'
        callMethod
        setRegister r:3
        pop
       label114:
        push r:3, 1, r:this, '5b)bA('
        callMethod
        pop
       label115:
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$opt'
        getMember
        push r:this, '*B'
        getMember
        push 1
        subtract
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$opt'
        getMember
        push r:this, '*B'
        getMember
        push 1
        subtract
        getMember
        increment
        setMember
        push 0, r:this, '9T54'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '5b)bA('
      function2 (r:2='7') (r:1='this')
        push r:'7', r:this, '-iB='
        getMember
        push '_y'
        getMember
        push r:this, '-iB='
        getMember
        push '_x'
        getMember
        push 3, '*r'
        getVariable
        push '+-(0'
        getMember
        push ']qsu4('
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this')
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push ';={0['
        getMember
        push 'remove'
        callMethod
        pop
        push 0, r:this, '-iB='
        getMember
        push 'removeMovieClip'
        callMethod
        pop
      end // of function 

      setMember
      push '+7U K'
      function2 (r:2='}J') (r:1='this')
        push r:this, ')2fr3', r:'}J'
        setMember
        push r:this, '}Zms3', 0, 'Array'
        new
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, ']1sj+'
      function2 () (r:1='this')
        push r:this, ')2fr3'
        getMember
        return
      end // of function 

      setMember
      push r:1, '-fC3a'
      function2 (r:2='59F') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'59F'
        getMember
        setRegister r:3
        pop
        push r:3, NULL
        equals
        not
        branchIfTrue label116
        push '9oK', 0, 'Array'
        new
        push '7-,', 0, 2
        initObject
        setRegister r:3
        pop
        push r:this, '}Zms3'
        getMember
        push r:'59F', r:3
        setMember
       label116:
        push r:3
        return
      end // of function 

      setMember
      push r:1, ']bu40'
      function2 (r:2='[-99') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'[-99'
        getMember
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:7
        pop
        push r:'[-99', 1000
        multiply
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label118
       label117:
        push r:6
        increment
        setRegister r:6
        pop
       label118:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label120
        push r:4, r:6
        getMember
        push '_name'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label119
        push r:8, r:7
        add
        push 1, r:4, r:6
        getMember
        push 'swapDepths'
        callMethod
        pop
        push r:4, r:7, r:4, r:6
        getMember
        setMember
        push r:7
        increment
        setRegister r:7
        pop
       label119:
        branch label117
       label120:
        push r:3, '7-,', r:7
        setMember
      end // of function 

      setMember
      push r:1, '*=_p_'
      function2 (r:2='*KB2', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label121
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'*KB2', 2, r:this, '*=_p_'
        callMethod
        return
       label121:
        push r:6, r:'[-99', 1000
        multiply
        add
        push r:'*KB2', r:this, ')2fr3'
        getMember
        push 3, '3Wt'
        getVariable
        push '7bSH*'
        callMethod
        setRegister r:7
        pop
        push r:5, r:6, r:7
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:7
        return
      end // of function 

      setMember
      push r:1, '18wU*'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push r:5, 1000
        equals
        not
        branchIfTrue label122
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', 1, r:this, '18wU*'
        callMethod
        return
       label122:
        push r:5, r:'[-99', 1000
        multiply
        add
        push r:this, ')2fr3'
        getMember
        push 2, '3Wt'
        getVariable
        push '-4*l(('
        callMethod
        setRegister r:6
        pop
        push r:4, r:5, r:6
        setMember
        push r:3, '7-,', r:3, '7-,'
        getMember
        increment
        setMember
        push r:6
        return
      end // of function 

      setMember
      push r:1, '(GbB}'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label123
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        return
       label123:
        push r:5, r:6, r:'}J'
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:6, r:'[-99', 1000
        multiply
        add
        return
      end // of function 

      setMember
      push r:1, '+2NA'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        push 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, r:'[-99'
        equals
        not
        branchIfTrue label124
        push UNDEF
        return
       label124:
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:5, '7-,'
        getMember
        setRegister r:7
        pop
        push 0
        setRegister r:8
        pop
        branch label126
       label125:
        push r:8
        increment
        setRegister r:8
        pop
       label126:
        push r:8, r:7
        lessThan
        not
        branchIfTrue label128
        push r:6, r:8
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label127
        push r:6, r:8, NULL
        setMember
        branch label128
       label127:
        branch label125
       label128:
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}oQA7'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label129
        push r:6, r:7, NULL
        setMember
        push r:'}J', 1, r:6, 'unshift'
        callMethod
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label129:
      end // of function 

      setMember
      push r:1, '08M8'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label131
        push r:6, r:7, NULL
        setMember
        push r:5, '7-,'
        getMember
        push 1000
        equals
        not
        branchIfTrue label130
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label130:
        push r:5, '7-,'
        getMember
        setRegister r:3
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:3, r:4, 1000
        multiply
        add
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
        push r:6, r:3, r:'}J'
        setMember
       label131:
      end // of function 

      setMember
      push r:1, 'clear'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:4
        pop
        branch label133
       label132:
        push r:4
        increment
        setRegister r:4
        pop
       label133:
        push r:4, r:3, '7-,'
        getMember
        lessThan
        not
        branchIfTrue label134
        push 0, r:5, r:4
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label132
       label134:
        push r:3, '7-,', 0
        setMember
      end // of function 

      setMember
      push r:1, '9(K ;'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push -99999999
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label136
       label135:
        push r:6
        increment
        setRegister r:6
        pop
       label136:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label144
        push r:4, r:6
        getMember
        setRegister r:9
        pop
        push r:9, '_y'
        getMember
        setRegister r:10
        pop
        push r:10, r:8
        lessThan
        not
        not
        branchIfTrue label137
        push r:10
        setRegister r:8
        pop
        branch label143
       label137:
        push r:6
        setRegister r:7
        pop
        branch label139
       label138:
        push r:7
        decrement
        setRegister r:7
        pop
       label139:
        push r:7, 0
        greaterThan
        not
        branchIfTrue label142
        push r:4, r:7, 1
        subtract
        getMember
        setRegister r:11
        pop
        push r:11, '_y'
        getMember
        push r:10
        greaterThan
        not
        branchIfTrue label140
        push r:4, r:7, r:11
        setMember
        push r:11, 1, r:9, 'swapDepths'
        callMethod
        pop
        branch label141
       label140:
        push r:4, r:7, r:9
        setMember
        branch label142
       label141:
        branch label138
       label142:
        push r:7, 0
        equals
        not
        branchIfTrue label143
        push r:4, 0, r:9
        setMember
       label143:
        branch label135
       label144:
      end // of function 

      setMember
      push r:1, ',}2X ('
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label146
       label145:
        push r:2
        increment
        setRegister r:2
        pop
       label146:
        push r:2, r:this, '}Zms3'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label147
        push r:2, 1, r:this, 'clear'
        callMethod
        pop
        branch label145
       label147:
      end // of function 

      setMember
      push '{-kxL'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '87vE7('
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '4plQ5', '{-kxL'
        getVariable
        push '4plQ5'
        getMember
        increment
        setMember
        push 0, '3Wt'
        getVariable
        push 'getTimer'
        callMethod
        setRegister r:2
        pop
        push '{-kxL'
        getVariable
        push ';ILSy', r:2, '{-kxL'
        getVariable
        push '3R,QM'
        getMember
        subtract
        push 1000.0
        divide
        setMember
        push '{-kxL'
        getVariable
        push '3R,QM', r:2
        setMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        push '{-kxL'
        getVariable
        push ';y}-6('
        getMember
        lessThan
        not
        branchIfTrue label148
        push '{-kxL'
        getVariable
        push '-)Xd+', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        push '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        multiply
        push 1, '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        subtract
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        multiply
        add
        setMember
        branch label149
       label148:
        push '{-kxL'
        getVariable
        push ';ILSy', 1, '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        divide
        setMember
       label149:
        push '{-kxL'
        getVariable
        push '-V;B', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        setMember
      end // of function 

      setMember
      push r:0, 'fps'
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        return
      end // of function 

      setMember
      push r:0, '6GI,F', 32
      setMember
      push r:0, ';y}-6(', 0.5
      setMember
      push r:0, '3R,QM', 0, '3Wt'
      getVariable
      push 'getTimer'
      callMethod
      setMember
      push r:0, '[Ad;n', 0.95
      setMember
      push r:0, '-)Xd+', 1
      setMember
      push r:0, '-V;B', 1
      setMember
      push r:0, ';ILSy', 1
      setMember
      push r:0, '4plQ5', 0
      setMember
      push '=3+P'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '+{eA+', 0.99
        setMember
        push r:this, '((', '*r'
        getVariable
        push '=OA'
        getMember
        push 0.5
        multiply
        setMember
        push r:this, ')(', '*r'
        getVariable
        push '*OA'
        getMember
        push 0.5
        multiply
        setMember
        push r:this, '3Izi', FALSE
        setMember
        push r:this, '2Gr]U', FALSE
        setMember
        push r:this, '(G37+', FALSE
        setMember
        push r:this, ']oH', 12
        setMember
        push r:this, '4eyD,', 0
        setMember
        push r:this, ';}12E', 3, 1
        initArray
        setMember
        push r:this, ' ze,C(', r:this, ';}12E'
        getMember
        push 0
        getMember
        push 1
        initArray
        setMember
        push r:this, '3=', 1, 1
        initArray
        setMember
        push r:this, '[xnrB', 200, 1
        initArray
        setMember
        push r:this, '}rbe', 30, 1
        initArray
        setMember
        push r:this, '}OcqB(', FALSE, FALSE, FALSE, FALSE, FALSE, 5
        initArray
        setMember
        push r:this, '03}12', 0
        initArray
        setMember
        push '=3+P'
        getVariable
        push '-ja'
        getMember
        push 1, r:this, '5Hy6b'
        callMethod
        pop
        push 1, 1, r:this, '8D5}=('
        callMethod
        pop
        push '=3+P'
        getVariable
        push '3ya+7'
        getMember
        not
        branchIfTrue label150
        push 'onMouseDown', '*Ri*3(', r:this, 2, '3Wt'
        getVariable
        push '6{VYR'
        callMethod
        push 'onMouseUp', NULL, 'onMouseWheel', NULL, 'onMouseMove', NULL, 4
        initObject
        setRegister r:4
        pop
        push r:4, 1, 'Mouse'
        getVariable
        push 'addListener'
        callMethod
        pop
       label150:
        push 0, r:this, '{+Sn='
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '5Hy6b'
      function2 (r:2='7') (r:1='this')
        push r:this, '=kIA', r:'7'
        setMember
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push '=3+P'
        getVariable
        push '-ja'
        getMember
        strictEquals
        branchIfTrue label151
        push r:0, '=3+P'
        getVariable
        push '}MNA=('
        getMember
        strictEquals
        branchIfTrue label154
        push r:0, '=3+P'
        getVariable
        push '5];UB'
        getMember
        strictEquals
        branchIfTrue label157
        branch label158
       label151:
        push r:this, ']b'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label152
        push r:this, ')1khy', '897h'
        setMember
        push r:this, ')X6+W', TRUE
        setMember
        branch label153
       label152:
        push r:this, ')1khy', '{}+mG'
        setMember
        push r:this, ')X6+W', FALSE
        setMember
       label153:
        push r:this, '(KpGn', '=3+P'
        getVariable
        push '7{Qr,'
        getMember
        setMember
        push r:this, '3Izi', FALSE
        setMember
        branch label158
       label154:
        push 0, r:this, ')j LD('
        callMethod
        pop
        push r:this, '[b', 0
        setMember
        push r:this, ']b', 0
        setMember
        push r:this, '(KpGn', 0
        setMember
        push r:this, ')1khy'
        getMember
        push NULL
        equals
        not
        branchIfTrue label155
        push r:this, ')1khy', '5W 5'
        setMember
       label155:
        push r:this, ',9'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label156
        push 0, r:this, '2qA4z'
        callMethod
        pop
       label156:
        push r:this, '5}w((', FALSE
        setMember
        branch label158
       label157:
        push r:this, '(KpGn', '=3+P'
        getVariable
        push '7{Qr,'
        getMember
        setMember
        push r:this, '2Gr]U', TRUE
        setMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push 1, ';ndCG'
        getVariable
        push '7T4cF('
        callMethod
        pop
        push r:this, ')1khy', '8Ugi)'
        setMember
        branch label158
       label158:
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, ')('
        getMember
        push '=3+P'
        getVariable
        push '6uYK'
        getMember
        lessThan
        not
        branchIfTrue label159
        push r:this, ')(', '=3+P'
        getVariable
        push '6uYK'
        getMember
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push 0.5
        multiply
        setMember
       label159:
        push r:this, '2Gr]U'
        getMember
        not
        branchIfTrue label160
        push UNDEF
        return
       label160:
        push r:this, '=kIA'
        getMember
        push '=3+P'
        getVariable
        push '(laS'
        getMember
        equals
        not
        not
        branchIfTrue label161
        push r:this, '-iB='
        getMember
        push '_rotation', 0
        setMember
       label161:
        push 0, r:this, ',4,hs'
        callMethod
        pop
        push r:this, '(G37+'
        getMember
        not
        not
        branchIfTrue label162
        push 0, r:this, '505t0'
        callMethod
        pop
       label162:
        push r:this, '+f2W('
        getMember
        push 0
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label163
        push r:this, '+f2W(', r:this, '+f2W('
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.7, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        push 1
        initArray
        setMember
        push r:this, '+f2W('
        getMember
        push 0
        getMember
        push 0.1
        lessThan
        not
        branchIfTrue label163
        push r:this, '+f2W(', NULL, 1
        initArray
        setMember
       label163:
        push 0, r:this, '8C-7N'
        callMethod
        pop
        push 0, r:this, '[VeKO'
        callMethod
        pop
        push r:this, '2(pBQ'
        getMember
        push 0
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label164
        push 0, r:this, '0j0-n'
        callMethod
        pop
       label164:
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push '=3+P'
        getVariable
        push '-ja'
        getMember
        strictEquals
        branchIfTrue label165
        push r:0, '=3+P'
        getVariable
        push '}MNA=('
        getMember
        strictEquals
        branchIfTrue label176
        push r:0, '=3+P'
        getVariable
        push '(laS'
        getMember
        strictEquals
        branchIfTrue label179
        branch label180
       label165:
        push r:this, '2Gr]U'
        getMember
        not
        branchIfTrue label166
        push UNDEF
        return
       label166:
        push r:this, ')('
        getMember
        push '=3+P'
        getVariable
        push '+u'
        getMember
        greaterThan
        not
        branchIfTrue label167
        push r:this, '2Gr]U', TRUE
        setMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push 1, ';ndCG'
        getVariable
        push '7T4cF('
        callMethod
        pop
        push 0, r:this, '2qA4z'
        callMethod
        pop
        push r:this, '*Ri*3(', NULL
        setMember
        push r:this, ')1khy', '{}+mG'
        setMember
       label167:
        push r:this, ',9'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label172
        push r:this, ',9'
        getMember
        push ';357+'
        getMember
        not
        not
        branchIfTrue label172
        push r:this, ',9'
        getMember
        push 1, r:this, '}1A{_'
        callMethod
        setRegister r:3
        pop
        push r:this, ',9'
        getMember
        push 1, r:this, ')153L'
        callMethod
        setRegister r:4
        pop
        push r:3, '=3+P'
        getVariable
        push '6zOsz'
        getMember
        greaterThan
        not
        branchIfTrue label168
        push r:3, '=3+P'
        getVariable
        push '6zOsz'
        getMember
        subtract
        push '=3+P'
        getVariable
        push '6zOsz'
        getMember
        divide
        setRegister r:5
        pop
        push r:this, '[b', r:this, '[b'
        getMember
        push r:4, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:5
        multiply
        push '=3+P'
        getVariable
        push '+jQpe'
        getMember
        multiply
        push 1.5
        multiply
        add
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:4, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:5
        multiply
        push '=3+P'
        getVariable
        push '+jQpe'
        getMember
        multiply
        add
        setMember
       label168:
        push 16689803, 2, 2
        initArray
        push 8266497, 4, 2
        initArray
        push 2
        initArray
        setRegister r:6
        pop
        push 0
        setRegister r:7
        pop
        branch label170
       label169:
        push r:7
        increment
        setRegister r:7
        pop
       label170:
        push r:7, 2
        lessThan
        not
        branchIfTrue label171
        push 100, r:6, r:7
        getMember
        push 1
        getMember
        push r:6, r:7
        getMember
        push 0
        getMember
        push 3, '*r'
        getVariable
        push '+-(0'
        getMember
        push ']NoIC'
        getMember
        push 'lineStyle'
        callMethod
        pop
        push r:this, ')('
        getMember
        push 15
        subtract
        push r:this, '(('
        getMember
        push 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push ']NoIC'
        getMember
        push 'moveTo'
        callMethod
        pop
        push r:this, ',9'
        getMember
        push ')('
        getMember
        push r:this, ',9'
        getMember
        push '(('
        getMember
        push 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push ']NoIC'
        getMember
        push 'lineTo'
        callMethod
        pop
        branch label169
       label171:
        push r:this, ',9'
        getMember
        push '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:8
        pop
        push r:this, ',9'
        getMember
        push ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:9
        pop
        push r:8, r:this, '6g,A'
        getMember
        multiply
        push r:9, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        setRegister r:10
        pop
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '[b'
        getMember
        push 0.5
        multiply
        setMember
        push r:this, '-iB='
        getMember
        setRegister r:11
        pop
        push r:11, '6()'
        getMember
        push '_rotation', r:10, 0.0174
        divide
        push r:this, '-iB='
        getMember
        push '_rotation'
        getMember
        subtract
        setMember
        push 30
        setRegister r:12
        pop
        push r:11, '0Y-1'
        getMember
        push '_rotation', r:12, r:this, ']b'
        getMember
        push 0, r:12
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
        push 50
        setRegister r:12
        pop
        push r:11, '4F-5'
        getMember
        push '_rotation', r:12, r:this, '[b'
        getMember
        push 4
        multiply
        push r:this, '6g,A'
        getMember
        multiply
        push 0, r:12
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
        push r:11, '5F-5'
        getMember
        push '_rotation', r:12, r:this, '[b'
        getMember
        push 4
        multiply
        push r:this, '6g,A'
        getMember
        multiply
        push 0, r:12
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
       label172:
        push 0, r:this, ';H_ J'
        callMethod
        pop
        push r:this, ')X6+W'
        getMember
        dup
        not
        branchIfTrue label173
        pop
        push r:this, ']b'
        getMember
        push 0
        greaterThan
       label173:
        not
        branchIfTrue label175
        push r:this, ')1khy'
        getMember
        push NULL
        equals
        not
        branchIfTrue label174
        push r:this, ')1khy', '{}+mG'
        setMember
       label174:
        push r:this, ')X6+W', FALSE
        setMember
       label175:
        branch label180
       label176:
        push r:this, '(('
        getMember
        push r:this, ')099'
        getMember
        push '(('
        getMember
        lessThan
        dup
        branchIfTrue label177
        pop
        push r:this, '(('
        getMember
        push r:this, ')099'
        getMember
        push '(('
        getMember
        push r:this, ')099'
        getMember
        push ' ('
        getMember
        add
        greaterThan
       label177:
        not
        branchIfTrue label178
        push '=3+P'
        getVariable
        push '-ja'
        getMember
        push 1, r:this, '5Hy6b'
        callMethod
        pop
        push r:this, ']b', -2
        setMember
        push r:this, ')099', NULL
        setMember
       label178:
        branch label180
       label179:
        push 0, r:this, ';H_ J'
        callMethod
        pop
        push 0, r:this, '=Gq8n'
        callMethod
        pop
        branch label180
       label180:
        push r:this, '(('
        getMember
        push 13, '*r'
        getVariable
        push '+-(0'
        getMember
        push '=QK+A('
        getMember
        push 0
        getMember
        subtract
        lessThan
        not
        branchIfTrue label181
        push r:this, '((', 13, '*r'
        getVariable
        push '+-(0'
        getMember
        push '=QK+A('
        getMember
        push 0
        getMember
        subtract
        setMember
       label181:
        push r:this, ')1khy'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label182
        push r:this, ')1khy'
        getMember
        push 1, r:this, '-iB='
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push r:this, ')1khy', NULL
        setMember
       label182:
      end // of function 

      setMember
      push r:1, '505t0'
      function2 () (r:1='this')
        push r:this, '4eyD,'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label183
        push r:this, '4eyD,', r:this, '4eyD,'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
       label183:
        push r:this, '( C7C'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label185
        push r:this, '( C7C', r:this, '( C7C'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '( C7C'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label184
        push r:this, '( C7C', NULL
        setMember
       label184:
        push UNDEF
        return
       label185:
        push r:this, '3s5q3', 0
        setMember
        push 'Key'
        getVariable
        push 'LEFT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label186
        push r:this, '3s5q3', -1
        setMember
       label186:
        push 'Key'
        getVariable
        push 'RIGHT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label187
        push r:this, '3s5q3', 1
        setMember
       label187:
        push r:this, '3s5q3'
        getMember
        push 0
        equals
        not
        dup
        not
        branchIfTrue label188
        pop
        push r:this, '3s5q3'
        getMember
        push r:this, '6g,A'
        getMember
        equals
        not
       label188:
        dup
        not
        branchIfTrue label189
        pop
        push r:this, '=kIA'
        getMember
        push '=3+P'
        getVariable
        push '(laS'
        getMember
        equals
        not
       label189:
        not
        branchIfTrue label190
        push r:this, '3s5q3'
        getMember
        push 1, r:this, '8D5}=('
        callMethod
        pop
       label190:
        push FALSE
        setRegister r:2
        pop
        push 'Key'
        getVariable
        push 'DOWN'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label192
        push r:this, '=xChd'
        getMember
        not
        branchIfTrue label191
        push TRUE
        setRegister r:2
        pop
       label191:
        branch label193
       label192:
        push r:this, '=xChd', TRUE
        setMember
       label193:
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push '=3+P'
        getVariable
        push '-ja'
        getMember
        strictEquals
        branchIfTrue label194
        push r:0, '=3+P'
        getVariable
        push '}MNA=('
        getMember
        strictEquals
        branchIfTrue label204
        branch label213
       label194:
        push r:this, '3Izi'
        getMember
        not
        not
        branchIfTrue label195
        push '=3+P'
        getVariable
        push '[c4gL'
        getMember
        push r:this, '3s5q3'
        getMember
        multiply
        push r:this, '[b'
        getMember
        subtract
        setRegister r:3
        pop
        push 0.5
        setRegister r:4
        pop
        push 0.1
        setRegister r:5
        pop
        push r:this, '[b', r:this, '[b'
        getMember
        push r:4, r:3, r:5
        multiply
        push 0, r:4
        subtract
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        add
        setMember
       label195:
        push 'Key'
        getVariable
        push 'UP'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label200
        push r:this, ';s072'
        getMember
        not
        branchIfTrue label198
        push r:this, '7{zg9'
        getMember
        push 0
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label196
        push 0, r:this, '9TL3'
        callMethod
        pop
        push r:this, '[b', '=3+P'
        getVariable
        push '[c4gL'
        getMember
        push r:this, '3s5q3'
        getMember
        multiply
        setMember
        push r:this, '3Izi', TRUE
        setMember
        push r:this, ')1khy', ')_()'
        setMember
        push r:this, '7{zg9', r:this, '7{zg9'
        getMember
        push 0
        getMember
        decrement
        push 1
        initArray
        setMember
        branch label197
       label196:
        push 0, r:this, '[jB='
        callMethod
        pop
       label197:
        push r:this, ';s072', FALSE
        setMember
        branch label199
       label198:
        push r:this, '+f2W('
        getMember
        push 0
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label199
        push r:this, ']b', r:this, ']b'
        getMember
        push '=3+P'
        getVariable
        push ';Xtqo'
        getMember
        push r:this, '+f2W('
        getMember
        push 0
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        setMember
       label199:
        branch label201
       label200:
        push r:this, ';s072', TRUE
        setMember
       label201:
        push r:2
        not
        branchIfTrue label203
        push r:this, ',9'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label202
        push 0, r:this, '[jB='
        callMethod
        pop
        branch label203
       label202:
        push 0, r:this, '9=54'
        callMethod
        pop
       label203:
        branch label213
       label204:
        push r:this, '3s5q3'
        getMember
        push 0
        equals
        not
        not
        branchIfTrue label207
        push r:this, '6g,A'
        getMember
        push r:this, '3s5q3'
        getMember
        equals
        not
        not
        branchIfTrue label205
        push r:this, '3s5q3'
        getMember
        push 1, r:this, '8D5}=('
        callMethod
        pop
       label205:
        push r:this, '[b', '=3+P'
        getVariable
        push '[c4gL'
        getMember
        push r:this, '3s5q3'
        getMember
        multiply
        setMember
        push r:this, '5}w(('
        getMember
        not
        not
        branchIfTrue label206
        push r:this, ')1khy', '+A}D'
        setMember
        push r:this, '(x)Xm', 0
        setMember
        push r:this, '5}w((', TRUE
        setMember
       label206:
        branch label208
       label207:
        push r:this, '[b', 0
        setMember
        push r:this, '5}w(('
        getMember
        not
        branchIfTrue label208
        push r:this, ')1khy', '{5}D'
        setMember
        push r:this, '5}w((', FALSE
        setMember
       label208:
        push r:this, '5}w(('
        getMember
        not
        branchIfTrue label209
        push r:this, '(x)Xm', r:this, '(x)Xm'
        getMember
        push '=3+P'
        getVariable
        push '[c4gL'
        getMember
        push 7
        divide
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 11
        modulo
        setMember
        push r:this, ')1khy', 128, r:this, '(x)Xm'
        getMember
        int
        add
        toString
        setMember
       label209:
        push 'Key'
        getVariable
        push 'UP'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label211
        push '=3+P'
        getVariable
        push '8xaUB('
        getMember
        not
        branchIfTrue label210
        push r:this, '7{zg9', 1, 1
        initArray
        setMember
       label210:
        push 0, r:this, '9TL3'
        callMethod
        pop
       label211:
        push r:2
        not
        branchIfTrue label212
        push 0, r:this, '9TL3'
        callMethod
        pop
        push r:this, ']b', -2.5
        setMember
        push r:this, '+f2W(', 0, 1
        initArray
        setMember
        push r:this, '1VZCH(', 16
        setMember
       label212:
        branch label213
       label213:
        push 'Key'
        getVariable
        push 'SPACE'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        dup
        branchIfTrue label214
        pop
        push 'Key'
        getVariable
        push 'CONTROL'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
       label214:
        not
        branchIfTrue label217
        push r:this, '1=v6,('
        getMember
        dup
        not
        branchIfTrue label215
        pop
        push r:this, '4eyD,'
        getMember
        push 0
        greaterThan
        not
       label215:
        not
        branchIfTrue label216
        push 0, r:this, ',cqp5'
        callMethod
        pop
       label216:
        push r:this, '1=v6,(', FALSE
        setMember
        branch label218
       label217:
        push r:this, '1=v6,(', TRUE
        setMember
       label218:
      end // of function 

      setMember
      push r:1, ',4,hs'
      function2 () (r:1='this')
        push r:this, '-N;ZY'
        getMember
        push NULL
        equals
        not
        branchIfTrue label219
        push UNDEF
        return
       label219:
        push r:this, '-N;ZY', r:this, '-N;ZY'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push 50, r:this, '-N;ZY'
        getMember
        push 100
        multiply
        push 628
        modulo
        push 0.01
        multiply
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push 50
        multiply
        add
        setRegister r:2
        pop
        push r:this, '-N;ZY'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label220
        push r:this, '-N;ZY', NULL
        setMember
        push 0
        setRegister r:2
        pop
       label220:
        push 16777215, r:2, r:this, '-iB='
        getMember
        push 3, '*r'
        getVariable
        push ';CYOh'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '8C-7N'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label222
       label221:
        push r:2
        increment
        setRegister r:2
        pop
       label222:
        push r:2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6y392'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label229
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '6y392'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3, 1, r:this, '}1A{_'
        callMethod
        setRegister r:4
        pop
        push r:3, '6j07+'
        getMember
        dup
        not
        branchIfTrue label223
        pop
        push r:4, 26
        lessThan
       label223:
        not
        branchIfTrue label228
        push r:this, '2(pBQ'
        getMember
        push 0
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label224
        push 0, r:3, '2(hH;'
        callMethod
        pop
        push r:3, '[b', r:this, '[b'
        getMember
        push 2
        multiply
        setMember
        push r:3, ']b', 0, 7, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 4
        multiply
        add
        subtract
        setMember
        push r:3, '6j07+', FALSE
        setMember
        push '*r'
        getVariable
        push ',4+L'
        getMember
        push r:3, ')('
        getMember
        push r:3, '(('
        getMember
        push 3, '*r'
        getVariable
        push '+-(0'
        getMember
        push ']qsu4('
        callMethod
        pop
        push UNDEF
        return
       label224:
        push r:3, '2Urnb'
        getMember
        not
        not
        branchIfTrue label226
        push r:this, ']b'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label226
        push r:this, ']b', -7
        setMember
        push r:this, ')(', r:3, ')('
        getMember
        push 20
        subtract
        setMember
        push FALSE, 21, 2, r:3, '(2(1'
        callMethod
        pop
        push 0, r:this, ')j LD('
        callMethod
        pop
        push r:this, '=kIA'
        getMember
        push '=3+P'
        getVariable
        push '(laS'
        getMember
        equals
        not
        branchIfTrue label225
        push r:this, '[b', r:this, '[b'
        getMember
        push 0.4
        multiply
        setMember
        push r:this, '=kIA', '=3+P'
        getVariable
        push '-ja'
        getMember
        setMember
        push r:this, ')1khy', '897h'
        setMember
        push r:this, '[b'
        getMember
        push r:this, '[b'
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        divide
        int
        push 1, r:this, '8D5}=('
        callMethod
        pop
       label225:
        push UNDEF
        return
       label226:
        push r:this, '-N;ZY'
        getMember
        push NULL
        equals
        dup
        not
        branchIfTrue label227
        pop
        push r:4, 18
        lessThan
       label227:
        not
        branchIfTrue label228
        push 0, r:this, '(2(1'
        callMethod
        pop
       label228:
        branch label221
       label229:
      end // of function 

      setMember
      push r:1, '[VeKO'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label231
       label230:
        push r:2
        increment
        setRegister r:2
        pop
       label231:
        push r:2, '*r'
        getVariable
        push '+-(0'
        getMember
        push ';={0['
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label233
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push ';={0['
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3, 1, r:this, '}1A{_'
        callMethod
        push 20
        lessThan
        not
        branchIfTrue label232
        push 0, r:3, '2X}A'
        callMethod
        pop
        push r:2
        decrement
        setRegister r:2
        pop
       label232:
        branch label230
       label233:
      end // of function 

      setMember
      push r:1, ';H_ J'
      function2 () (r:1='this', r:2='super')
        push r:this, '1VZCH('
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label235
        push r:this, '1VZCH(', r:this, '1VZCH('
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '1VZCH('
        getMember
        push 0
        lessThan
        not
        branchIfTrue label234
        push r:this, '1VZCH(', NULL
        setMember
       label234:
        push UNDEF
        return
       label235:
        push r:this, 1, '*eC,U'
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '5W 5'
      function2 (r:2=' R') (r:1='this')
        push '=3+P'
        getVariable
        push '}MNA=('
        getMember
        push 1, r:this, '5Hy6b'
        callMethod
        pop
        push r:this, ')099', r:' R'
        setMember
        push 0
        setRegister r:3
        pop
        branch label237
       label236:
        push r:3
        increment
        setRegister r:3
        pop
       label237:
        push r:3, 3
        lessThan
        not
        branchIfTrue label238
        push '*1Q1,(', 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '{==W3('
        callMethod
        setRegister r:4
        pop
        push r:4, '((', r:this, '(('
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 14
        multiply
        add
        setMember
        push r:4, ')(', r:this, ')('
        getMember
        push 12
        add
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 24
        multiply
        add
        setMember
        push r:4, '(KpGn', 0.1, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.3
        multiply
        add
        setMember
        push 50, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 70
        multiply
        add
        push 1, r:4, '3BjX_'
        callMethod
        pop
        push r:4, '2VhU6', 20, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        branch label236
       label238:
      end // of function 

      setMember
      push r:1, '*Ri*3('
      function2 () (r:1='this')
        push UNDEF
        return
        push 0, r:this, ',cqp5'
        callMethod
        pop
        push UNDEF
        return
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push '=3+P'
        getVariable
        push '-ja'
        getMember
        strictEquals
        branchIfTrue label239
        push r:0, '=3+P'
        getVariable
        push '}MNA=('
        getMember
        strictEquals
        branchIfTrue label244
        branch label245
       label239:
        push r:this, ',9'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label241
        push 0, r:this, '2qA4z'
        callMethod
        pop
        push r:this, ']b'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label240
        push r:this, ')1khy', ')_()'
        setMember
       label240:
        branch label243
       label241:
        push -1.57, r:this, '3s5q3'
        getMember
        push 0.7
        multiply
        add
        setRegister r:2
        pop
        push '=3+P'
        getVariable
        push '3ya+7'
        getMember
        not
        branchIfTrue label242
        push 0.3, 1, r:this, ',vtjI'
        callMethod
        setRegister r:2
        pop
       label242:
        push r:this, ',9', '44{N'
        getVariable
        push '-hCnb'
        getMember
        push '7X1dG', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, '[0EO'
        new
        setMember
        push r:this, ',9'
        getMember
        push '((', r:this, '(('
        getMember
        setMember
        push r:this, ',9'
        getMember
        push ')(', r:this, ')('
        getMember
        setMember
        push r:this, ',9'
        getMember
        push '[b', r:2, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:this, '[b'
        getMember
        push 0.05
        multiply
        add
        setMember
        push r:this, ',9'
        getMember
        push ']b', r:2, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setMember
        push r:this, ',9'
        getMember
        push '}Yax5', '=3+P'
        getVariable
        push ',S)x=('
        getMember
        setMember
        push r:this, ',9'
        getMember
        push ';357+', TRUE
        setMember
        push 0, r:this, ',9'
        getMember
        push '{BxJE('
        callMethod
        pop
       label243:
        branch label245
       label244:
        branch label245
       label245:
      end // of function 

      setMember
      push r:1, '9TL3'
      function2 () (r:1='this')
        push r:this, '+f2W(', 1, 1
        initArray
        setMember
        push r:this, ']b', 0, '=3+P'
        getVariable
        push '(BXD3'
        getMember
        subtract
        setMember
        push r:this, ';s072', FALSE
        setMember
        push '=3+P'
        getVariable
        push '-ja'
        getMember
        push 1, r:this, '5Hy6b'
        callMethod
        pop
        push r:this, ')1khy', '897h'
        setMember
      end // of function 

      setMember
      push r:1, '[jB='
      function2 () (r:1='this')
        push r:this, ',9'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label247
        push 0, r:this, '2qA4z'
        callMethod
        pop
        push r:this, ']b'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label246
        push r:this, ')1khy', ')_()'
        setMember
       label246:
        branch label250
       label247:
        push r:this, ' ze,C('
        getMember
        push 0
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label249
        push r:this, ' ze,C(', r:this, ' ze,C('
        getMember
        push 0
        getMember
        decrement
        push 1
        initArray
        setMember
        push -1.57, r:this, '3s5q3'
        getMember
        push 0.7
        multiply
        add
        setRegister r:2
        pop
        push '=3+P'
        getVariable
        push '3ya+7'
        getMember
        not
        branchIfTrue label248
        push 0.3, 1, r:this, ',vtjI'
        callMethod
        setRegister r:2
        pop
       label248:
        push r:this, ',9', '44{N'
        getVariable
        push '-hCnb'
        getMember
        push '7X1dG', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, '[0EO'
        new
        setMember
        push r:this, ',9'
        getMember
        push '((', r:this, '(('
        getMember
        setMember
        push r:this, ',9'
        getMember
        push ')(', r:this, ')('
        getMember
        setMember
        push r:this, ',9'
        getMember
        push '[b', r:2, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:this, '[b'
        getMember
        push 0.05
        multiply
        add
        setMember
        push r:this, ',9'
        getMember
        push ']b', r:2, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setMember
        push r:this, ',9'
        getMember
        push '}Yax5', '=3+P'
        getVariable
        push ',S)x=('
        getMember
        setMember
        push r:this, ',9'
        getMember
        push ';357+', TRUE
        setMember
        push 0, r:this, ',9'
        getMember
        push '{BxJE('
        callMethod
        pop
       label249:
        push 0, r:this, ';Yd4v'
        callMethod
        pop
       label250:
      end // of function 

      setMember
      push r:1, '5)H0'
      function2 () (r:1='this')
        push r:this, ')1khy', '[jB='
        setMember
      end // of function 

      setMember
      push r:1, ',cqp5'
      function2 () (r:1='this')
        push 0, r:this, '2Zrn+'
        callMethod
        setRegister r:2
        pop
        push 16
        setRegister r:3
        pop
        push r:this, '6g,A'
        getMember
        push 1.57
        multiply
        push 1.57
        subtract
        setRegister r:4
        pop
        push r:2, NULL
        equals
        not
        not
        branchIfTrue label252
        push '((', r:2, '[BC6'
        getMember
        push '(('
        getMember
        push ')(', r:2, '[BC6'
        getMember
        push ')('
        getMember
        push 2
        initObject
        setRegister r:5
        pop
        push r:2, '[BC6'
        getMember
        push '[b'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label251
        push r:5, 1, r:this, '}1A{_'
        callMethod
        setRegister r:6
        pop
        push r:6, r:3
        divide
        setRegister r:7
        pop
        push r:5, '((', r:5, '(('
        getMember
        push r:2, '[BC6'
        getMember
        push '[b'
        getMember
        push r:7
        multiply
        add
        setMember
        push r:5, ')(', r:5, ')('
        getMember
        push r:2, '[BC6'
        getMember
        push ']b'
        getMember
        push r:7
        multiply
        add
        setMember
       label251:
        push r:5, 1, r:this, ')153L'
        callMethod
        setRegister r:4
        pop
       label252:
        push 60
        setRegister r:8
        pop
        push r:this, '=kIA'
        getMember
        push '=3+P'
        getVariable
        push '}MNA=('
        getMember
        equals
        dup
        not
        branchIfTrue label253
        pop
        push r:2, '5T6+'
        getMember
        push r:8
        lessThan
       label253:
        not
        branchIfTrue label258
        push 0, r:this, '8(jzF('
        callMethod
        setRegister r:9
        pop
        push r:2, '[BC6'
        getMember
        push '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:10
        pop
        push r:10, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:10
        divide
        setRegister r:11
        pop
        push 0
        setRegister r:12
        pop
        branch label255
       label254:
        push r:12
        increment
        setRegister r:12
        pop
       label255:
        push r:12, r:9, 'length'
        getMember
        lessThan
        not
        branchIfTrue label258
        push r:9, r:12
        getMember
        setRegister r:13
        pop
        push r:13, '6'
        getMember
        push '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        push r:11
        multiply
        push 0
        lessThan
        dup
        not
        branchIfTrue label256
        pop
        push r:13, '+'
        getMember
        push r:8
        lessThan
       label256:
        not
        branchIfTrue label257
        push r:13, '6'
        getMember
        push r:2, '[BC6'
        getMember
        push 2
        initArray
        push 1, r:this, '(Rm7F'
        callMethod
        pop
        push UNDEF
        return
       label257:
        branch label254
       label258:
        push r:2, '5T6+'
        getMember
        push r:this, '}OcqB('
        getMember
        push 0
        getMember
        not
        branchIfTrue label259
        push 76
        branch label260
       label259:
        push 52
       label260:
        lessThan
        setRegister r:14
        pop
        push r:14
        dup
        branchIfTrue label261
        pop
        push r:this, '}rbe'
        getMember
        push 0
        getMember
        push 0
        equals
       label261:
        not
        branchIfTrue label262
        push r:14, r:2, '[BC6'
        getMember
        push 2, r:this, ')SYt5'
        callMethod
        pop
        push UNDEF
        return
       label262:
        push -1, 1, r:this, '066O('
        callMethod
        pop
        push 0, r:this, '{U5my'
        callMethod
        pop
        push '44{N'
        getVariable
        push '8Z=cb'
        getMember
        push '1D}{*', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, '0hF['
        new
        setRegister r:15
        pop
        push r:15, '((', r:this, '(('
        getMember
        setMember
        push r:15, ')(', r:this, ')('
        getMember
        setMember
        push r:15, '[b', r:4, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:3
        multiply
        setMember
        push r:15, ']b', r:4, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:3
        multiply
        setMember
        push r:this, '}OcqB('
        getMember
        push 1
        getMember
        not
        branchIfTrue label263
        push r:15, '*]Q5}', r:15, '*]Q5}'
        getMember
        push 2
        multiply
        setMember
        push '2', 1, r:15, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        branch label264
       label263:
        push 0, r:15, '-iB='
        getMember
        push 'stop'
        callMethod
        pop
       label264:
        push r:15, '+{eA+', 1
        setMember
        push r:this, '4eyD,', 2
        setMember
      end // of function 

      setMember
      push r:1, ')SYt5'
      function2 (r:2='}CL', r:3=']a(v') (r:1='this')
        push r:this, '4eyD,', 8
        setMember
        push '2', 1, r:this, '-iB='
        getMember
        push '55*'
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push '1'
        setRegister r:4
        pop
        push r:this, '}OcqB('
        getMember
        push 0
        getMember
        not
        branchIfTrue label265
        push '2'
        setRegister r:4
        pop
       label265:
        push r:4, 1, r:this, '-iB='
        getMember
        push '55*'
        getMember
        push ';jqS('
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:']a(v'
        not
        branchIfTrue label267
        push r:'}CL', 1, r:this, ')153L'
        callMethod
        setRegister r:5
        pop
        push r:'}CL', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        push r:this, '6g,A'
        getMember
        multiply
        push 0
        lessThan
        not
        branchIfTrue label266
        push 0, r:this, '6g,A'
        getMember
        subtract
        push 1, r:this, '8D5}=('
        callMethod
        pop
       label266:
        push 21, 1, r:'}CL', '9-,'
        callMethod
        pop
        push r:'}CL', '3='
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label267
        push r:this, '[b', -5, r:this, '6g,A'
        getMember
        multiply
        setMember
       label267:
      end // of function 

      setMember
      push r:1, '9=54'
      function2 () (r:1='this')
        push r:this, '}OcqB('
        getMember
        push 5
        getMember
        not
        not
        branchIfTrue label268
        push UNDEF
        return
       label268:
        push r:this, '=xChd', FALSE
        setMember
        push 9999
        setRegister r:2
        pop
        push NULL
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        branch label270
       label269:
        push r:4
        increment
        setRegister r:4
        pop
       label270:
        push r:4, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6y392'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label274
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '6y392'
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push r:5, '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:6
        pop
        push r:5, ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:7
        pop
        push r:7, 20
        greaterThan
        dup
        not
        branchIfTrue label271
        pop
        push r:7, 220
        lessThan
       label271:
        dup
        not
        branchIfTrue label272
        pop
        push r:6, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push 80
        lessThan
       label272:
        not
        branchIfTrue label273
        push r:6, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:7, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        add
        setRegister r:8
        pop
        push r:8, r:2
        lessThan
        not
        branchIfTrue label273
        push r:5
        setRegister r:3
        pop
        push r:8
        setRegister r:2
        pop
       label273:
        branch label269
       label274:
        push r:3, NULL
        equals
        not
        not
        branchIfTrue label278
        push '((', r:3, '(('
        getMember
        push ')(', r:3, ')('
        getMember
        push 2
        initObject
        setRegister r:9
        pop
        push 16
        setRegister r:10
        pop
        push r:3, ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:11
        pop
        push r:11, r:10
        divide
        setRegister r:12
        pop
        push r:3, '(('
        getMember
        push r:3, '[b'
        getMember
        push r:12
        multiply
        add
        setRegister r:13
        pop
        push r:13, r:this, '(('
        getMember
        subtract
        setRegister r:14
        pop
        push r:this, '[b', r:14, r:12
        divide
        setMember
        push r:this, ']b', r:10
        setMember
        push r:this, '=kIA', '=3+P'
        getVariable
        push '(laS'
        getMember
        setMember
        push '9=54', 1, r:this, '-iB='
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push r:this, ')1khy', '9=54'
        setMember
        push 1, 1, r:this, '8D5}=('
        callMethod
        pop
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '[b'
        getMember
        push r:this, ']b'
        getMember
        push 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        push 0.0174
        divide
        push r:this, '6g,A'
        getMember
        push -1
        equals
        not
        branchIfTrue label275
        push 180
        branch label276
       label275:
        push 0
       label276:
        add
        setMember
        push r:this, ')Y;K4('
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label277
        push 0, r:this, ')Y;K4('
        getMember
        push 'dispose'
        callMethod
        pop
       label277:
        push r:this, ')Y;K4(', 60, 1, r:this, ',beI['
        callMethod
        setMember
       label278:
      end // of function 

      setMember
      push r:1, '(Rm7F'
      function2 (r:2='(') (r:1='this')
        push 0
        setRegister r:3
        pop
        branch label280
       label279:
        push r:3
        increment
        setRegister r:3
        pop
       label280:
        push r:3, r:'(', 'length'
        getMember
        lessThan
        not
        branchIfTrue label281
        push r:'(', r:3
        getMember
        setRegister r:4
        pop
        push FALSE, 100, 2, r:4, '(2(1'
        callMethod
        pop
        push r:this, ')1khy', '(Rm7F'
        setMember
        push '(Rm7F', 1, r:this, '-iB='
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        branch label279
       label281:
        push r:this, '( C7C', 5
        setMember
        push r:this, '[b', 0
        setMember
        push '44{N'
        getVariable
        push '{)1db'
        getMember
        push '3=vLC', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6QA'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:5
        pop
        push r:5, '_x', r:this, '(('
        getMember
        setMember
        push r:5, '_y', r:this, ')('
        getMember
        setMember
        push r:5, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '()XG}'
        callMethod
        pop
        push '*r'
        getVariable
        push '}cl4B'
        getMember
        push r:this, ')('
        getMember
        push 25
        subtract
        push r:this, '(('
        getMember
        push 3, '*r'
        getVariable
        push '+-(0'
        getMember
        push ']qsu4('
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '2qA4z'
      function2 () (r:1='this')
        push r:this, ')X6+W'
        getMember
        dup
        not
        branchIfTrue label282
        pop
        push r:this, ']b'
        getMember
        push 0
        greaterThan
       label282:
        not
        branchIfTrue label284
        push r:this, ')1khy'
        getMember
        push NULL
        equals
        not
        branchIfTrue label283
        push r:this, ')1khy', '{}+mG'
        setMember
       label283:
        push r:this, ')X6+W', FALSE
        setMember
       label284:
        push r:this, ')X6+W'
        getMember
        not
        dup
        not
        branchIfTrue label285
        pop
        push r:this, ']b'
        getMember
        push 0
        lessThan
       label285:
        not
        branchIfTrue label287
        push r:this, ')1khy'
        getMember
        push NULL
        equals
        not
        branchIfTrue label286
        push r:this, ')1khy', '897h'
        setMember
       label286:
        push r:this, ')X6+W', TRUE
        setMember
       label287:
        push 0, r:this, ',9'
        getMember
        push '-lH+'
        callMethod
        pop
        push r:this, ',9', NULL
        setMember
      end // of function 

      setMember
      push r:1, '}; ya'
      function2 () (r:1='this')
        push r:this, '2(pBQ', 500, 1
        initArray
        setMember
        push r:this, '8=1p*(', 0, 0, 255, 3
        initArray
        setMember
        push r:this, '{[XZ]', 1
        setMember
        push r:this, '+N]Is', 1
        setMember
        push r:this, '}mJ*S', 0, 1
        initArray
        setMember
      end // of function 

      setMember
      push r:1, '0j0-n'
      function2 () (r:1='this')
        push r:this, '2(pBQ', r:this, '2(pBQ'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        push 1
        initArray
        setMember
        push r:this, '2(pBQ'
        getMember
        push 0
        getMember
        push 0
        lessThan
        not
        branchIfTrue label288
        push r:this, '2(pBQ', NULL, 1
        initArray
        setMember
       label288:
        push r:this, '2(pBQ'
        getMember
        push 0
        getMember
        push 20
        greaterThan
        not
        branchIfTrue label292
        push r:this, '}mJ*S'
        getMember
        push 0
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label289
        push r:this, '}mJ*S', r:this, '}mJ*S'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        push 1
        initArray
        setMember
        push UNDEF
        return
       label289:
        push 70, 1, r:this, ',beI['
        callMethod
        setRegister r:2
        pop
        push '44{N'
        getVariable
        push '{)1db'
        getMember
        push 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6QA'
        getMember
        push '18wU*'
        callMethod
        setRegister r:3
        pop
        push 0, r:2, 2, r:3, 'attachBitmap'
        callMethod
        pop
        push r:3, 1, '*DzW'
        new
        setRegister r:4
        pop
        push r:4, '((', r:this, '(('
        getMember
        push r:2, 'width'
        getMember
        push 0.5
        multiply
        subtract
        setMember
        push r:4, ')(', r:this, ')('
        getMember
        push r:2, 'height'
        getMember
        push 0.5
        multiply
        subtract
        setMember
        push r:4, '2VhU6', 1500
        setMember
        push r:4, '9I*', r:2
        setMember
        push 0, r:4, '4u=dZ'
        callMethod
        pop
        push r:4, '2VhU6', 15
        setMember
        push r:this, '8=1p*('
        getMember
        push r:this, '{[XZ]'
        getMember
        push 255, r:this, '8=1p*('
        getMember
        push r:this, '{[XZ]'
        getMember
        getMember
        push r:this, '+N]Is'
        getMember
        push 50
        multiply
        add
        push 0, 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
        push r:this, '8=1p*('
        getMember
        push r:this, '{[XZ]'
        getMember
        getMember
        push 255
        equals
        not
        branchIfTrue label290
        push r:this, '{[XZ]', 2, r:this, '{[XZ]'
        getMember
        push 1
        subtract
        push 2, '*r'
        getVariable
        push ')GiA'
        callMethod
        setMember
        push r:this, '+N]Is', -1
        setMember
        branch label291
       label290:
        push r:this, '8=1p*('
        getMember
        push r:this, '{[XZ]'
        getMember
        getMember
        push 0
        equals
        not
        branchIfTrue label291
        push r:this, '{[XZ]', 2, r:this, '{[XZ]'
        getMember
        push 2
        add
        push 2, '*r'
        getVariable
        push ')GiA'
        callMethod
        setMember
        push r:this, '+N]Is', 1
        setMember
       label291:
        push '=', r:this, '8=1p*('
        getMember
        push 0
        getMember
        push '0', r:this, '8=1p*('
        getMember
        push 1
        getMember
        push ')', r:this, '8=1p*('
        getMember
        push 2
        getMember
        push 3
        initObject
        setRegister r:5
        pop
        push r:5, 1, '*r'
        getVariable
        push '4bfMH('
        callMethod
        push 30, r:4, '-iB='
        getMember
        push 3, '*r'
        getVariable
        push ';CYOh'
        callMethod
        pop
        push 16777215, 4, 4, r:4, '-iB='
        getMember
        push 4, '*r'
        getVariable
        push '1U;0'
        callMethod
        pop
        push r:5, 1, '*r'
        getVariable
        push '4bfMH('
        callMethod
        push 1, 20, r:4, '-iB='
        getMember
        push 4, '*r'
        getVariable
        push '1U;0'
        callMethod
        pop
       label292:
      end // of function 

      setMember
      push r:1, ',beI['
      function2 (r:2='size') (r:1='this')
        push 0, TRUE, r:size, r:size, 4, 'flash'
        getVariable
        push 'display'
        getMember
        push 'BitmapData'
        newMethod
        setRegister r:3
        pop
        push 0, 'flash'
        getVariable
        push 'geom'
        getMember
        push 'Matrix'
        newMethod
        setRegister r:4
        pop
        push r:this, '-iB='
        getMember
        push '_yscale'
        getMember
        push 100
        divide
        push r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        push 100
        divide
        push 2, r:4, 'scale'
        callMethod
        pop
        push r:this, '-iB='
        getMember
        push '_rotation'
        getMember
        push 0.0174
        multiply
        push 1, r:4, 'rotate'
        callMethod
        pop
        push r:size, 0.5
        multiply
        push r:size, 0.5
        multiply
        push 2, r:4, 'translate'
        callMethod
        pop
        push NULL, NULL, NULL, NULL, r:4, r:this, '-iB='
        getMember
        push 6, r:3, 'draw'
        callMethod
        pop
        push r:3
        return
      end // of function 

      setMember
      push r:1, '=Gq8n'
      function2 () (r:1='this')
        push 1, 1, r:this, '8D5}=('
        callMethod
        pop
        push r:this, ')Y;K4('
        getMember
        setRegister r:2
        pop
        push '44{N'
        getVariable
        push '{U0ib'
        getMember
        push 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6QA'
        getMember
        push '18wU*'
        callMethod
        setRegister r:3
        pop
        push 0, r:2, 2, r:3, 'attachBitmap'
        callMethod
        pop
        push r:3, 1, '*DzW'
        new
        setRegister r:4
        pop
        push r:4, '((', r:this, '(('
        getMember
        push r:2, 'width'
        getMember
        push 0.5
        multiply
        subtract
        setMember
        push r:4, ')(', r:this, ')('
        getMember
        push r:2, 'height'
        getMember
        push 0.5
        multiply
        subtract
        setMember
        push r:4, '2VhU6', 10
        setMember
        push r:4, ',DBRf', 6
        setMember
        push 0, r:4, '4u=dZ'
        callMethod
        pop
        push 16711935, 100, r:4, '-iB='
        getMember
        push 3, '*r'
        getVariable
        push ';CYOh'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '(2(1'
      function2 () (r:1='this')
        push r:this, '3='
        getMember
        push 0
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label297
        push r:this, '3=', r:this, '3='
        getMember
        push 0
        getMember
        decrement
        push 1
        initArray
        setMember
        push 0, r:this, '2qA4z'
        callMethod
        pop
        push 0, r:this, '-iB='
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, '-iB=', '44{N'
        getVariable
        push '-hCnb'
        getMember
        push '++TlB', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6QA'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push 0, r:this, '4u=dZ'
        callMethod
        pop
        push r:this, '6g,A'
        getMember
        push 1, r:this, '8D5}=('
        callMethod
        pop
        push 6693376, 2, 3, r:this, '-iB='
        getMember
        push 4, '*r'
        getVariable
        push '1U;0'
        callMethod
        pop
        push r:this, '-N;ZY', 70
        setMember
        push '=3+P'
        getVariable
        push '-ja'
        getMember
        push 1, r:this, '5Hy6b'
        callMethod
        pop
        push 0
        setRegister r:2
        pop
        branch label294
       label293:
        push r:2
        increment
        setRegister r:2
        pop
       label294:
        push r:2, 50
        lessThan
        not
        branchIfTrue label296
        push ';jf;B', 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '{==W3('
        callMethod
        setRegister r:3
        pop
        push r:3, '((', r:this, '(('
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 4
        multiply
        add
        setMember
        push r:3, ')(', r:this, ')('
        getMember
        push 10
        add
        push r:2, 4
        multiply
        subtract
        setMember
        push r:3, '[b', r:this, '[b'
        getMember
        push 1.2, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.8
        multiply
        add
        multiply
        setMember
        push r:3, ']b', r:this, ']b'
        getMember
        push 1.2, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.8
        multiply
        add
        multiply
        push 2, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 7
        multiply
        add
        subtract
        setMember
        push r:3, '2VhU6', 50, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:3, '(KpGn', 0.1, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.2
        multiply
        add
        setMember
        push r:3, '6b', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 6
        multiply
        setMember
        push r:2, 1
        add
        toString
        push 1, r:3, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:2, 1
        add
        push r:3, '-iB='
        getMember
        push '_totalframes'
        getMember
        equals
        not
        branchIfTrue label295
        push r:3, '9YFAA', TRUE
        setMember
        push r:3, ']oH', 10
        setMember
        push r:3, '6b', r:3, '6b'
        getMember
        push 3
        multiply
        setMember
        branch label296
       label295:
        branch label293
       label296:
        branch label298
       label297:
        push '=3+P'
        getVariable
        push '5];UB'
        getMember
        push 1, r:this, '5Hy6b'
        callMethod
        pop
       label298:
        push r:this, ']b', r:this, ']b'
        getMember
        push 5
        subtract
        setMember
        push r:this, '[b', r:this, '[b'
        getMember
        push 3
        subtract
        setMember
      end // of function 

      setMember
      push r:1, '=CF1'
      function2 () (r:1='this')
        push r:this, '3=', 1, 1
        initArray
        setMember
        push r:this, '-iB='
        getMember
        push '_currentframe'
        getMember
        setRegister r:2
        pop
        push 0, r:this, '-iB='
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, '-iB=', '44{N'
        getVariable
        push '-hCnb'
        getMember
        push ')+jEC', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6QA'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:2
        toString
        push 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push 0, r:this, '4u=dZ'
        callMethod
        pop
        push r:this, '6g,A'
        getMember
        push 1, r:this, '8D5}=('
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '{+Sn='
      function2 () (r:1='this')
        push r:this, ',PDs0', 0
        initArray
        setMember
        push r:this, '=IfIB(', '44{N'
        getVariable
        push '[V{(6'
        getMember
        push '=IfIB(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push 0, 2, 2, r:this, '=IfIB('
        getMember
        push '+Da3+'
        getMember
        push 4, '*r'
        getVariable
        push '1U;0'
        callMethod
        pop
        push 0, r:this, ';Yd4v'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ';Yd4v'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label300
       label299:
        push r:2
        increment
        setRegister r:2
        pop
       label300:
        push r:2, r:this, ';}12E'
        getMember
        push 0
        getMember
        lessThan
        not
        branchIfTrue label304
        push r:this, ',PDs0'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3, NULL
        equals
        not
        branchIfTrue label301
        push r:this, ',PDs0'
        getMember
        push r:2, '44{N'
        getVariable
        push '[V{(6'
        getMember
        push '{42,0', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, ',PDs0'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3, '_x', r:2, 12
        multiply
        setMember
       label301:
        push r:3, '7bJ'
        getMember
        push '_alpha', r:this, ' ze,C('
        getMember
        push 0
        getMember
        push r:2
        greaterThan
        not
        branchIfTrue label302
        push 100
        branch label303
       label302:
        push 10
       label303:
        setMember
        branch label299
       label304:
        push r:this, '=IfIB('
        getMember
        push '_x', r:this, ';}12E'
        getMember
        push 0
        getMember
        push 12
        multiply
        push 2
        add
        setMember
        push 0, r:this, '{U5my'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '{U5my'
      function2 () (r:1='this')
        push r:this, '=IfIB('
        getMember
        push '+Da3+'
        getMember
        push 'text', r:this, '}rbe'
        getMember
        push 0
        getMember
        toString
        setMember
      end // of function 

      setMember
      push r:1, '3vx;w'
      function2 () (r:1='this')
       label305:
        push r:this, '03}12'
        getMember
        push 'length'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label306
        push 0, 0, r:this, '03}12'
        getMember
        push 'pop'
        callMethod
        push 'removeMovieClip'
        callMethod
        pop
        branch label305
       label306:
        push '*r'
        getVariable
        push '=OA'
        getMember
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label308
       label307:
        push r:3
        increment
        setRegister r:3
        pop
       label308:
        push r:3, r:this, '}OcqB('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label310
        push r:this, '}OcqB('
        getMember
        push r:3
        getMember
        not
        branchIfTrue label309
        push '44{N'
        getVariable
        push '[V{(6'
        getMember
        push '8sfFC', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:4
        pop
        push r:3, 1
        add
        toString
        push 1, r:4, 'gotoAndStop'
        callMethod
        pop
        push r:4, '_x', r:2
        setMember
        push r:2, 20
        subtract
        setRegister r:2
        pop
        push r:4, 1, r:this, '03}12'
        getMember
        push 'push'
        callMethod
        pop
       label309:
        branch label307
       label310:
      end // of function 

      setMember
      push r:1, ')j LD('
      function2 () (r:1='this')
        push r:this, ' ze,C(', r:this, ';}12E'
        getMember
        push 0
        getMember
        push 1
        initArray
        setMember
        push 0, r:this, ';Yd4v'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '066O('
      function2 (r:2='7') (r:1='this')
        push r:this, '}rbe', r:this, '[xnrB'
        getMember
        push 0
        getMember
        push r:this, '}rbe'
        getMember
        push 0
        getMember
        push r:'7'
        add
        push 0, 3, '*r'
        getVariable
        push '2K'
        callMethod
        int
        push 1
        initArray
        setMember
        push 0, r:this, '{U5my'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '2bevt'
      function2 (r:2='7') (r:1='this')
        push r:this, ';}12E', r:this, ';}12E'
        getMember
        push 0
        getMember
        push r:'7'
        add
        push 1
        initArray
        setMember
        push 0, r:this, ')j LD('
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '8D5}=('
      function2 (r:2='7') (r:1='this')
        push r:this, '6g,A', r:'7'
        setMember
        push r:this, '-iB='
        getMember
        push '_xscale', r:'7', 100
        multiply
        setMember
      end // of function 

      setMember
      push r:1, '2Zrn+'
      function2 () (r:1='this')
        push 250
        setRegister r:2
        pop
        push NULL
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        branch label312
       label311:
        push r:4
        increment
        setRegister r:4
        pop
       label312:
        push r:4, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6y392'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label314
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '6y392'
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push r:5, '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:5, ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        add
        setRegister r:6
        pop
        push r:6, r:2
        lessThan
        not
        branchIfTrue label313
        push r:6
        setRegister r:2
        pop
        push r:5
        setRegister r:3
        pop
       label313:
        branch label311
       label314:
        push r:3, NULL
        equals
        not
        not
        branchIfTrue label315
        push '[BC6', r:3, '5T6+', r:2, 2
        initObject
        return
       label315:
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '+QTJ_'
        getMember
        not
        dup
        not
        branchIfTrue label316
        pop
        push r:3, NULL
        equals
       label316:
        not
        branchIfTrue label318
        push '((', '*r'
        getVariable
        push '+-(0'
        getMember
        push '(KA'
        getMember
        push '_xmouse'
        getMember
        push 7
        add
        push ')(', '*r'
        getVariable
        push '+-(0'
        getMember
        push '(KA'
        getMember
        push '_ymouse'
        getMember
        push 7
        add
        push 2
        initObject
        setRegister r:7
        pop
        push r:7, 1, r:this, '}1A{_'
        callMethod
        setRegister r:8
        pop
        push r:8, 140
        lessThan
        dup
        not
        branchIfTrue label317
        pop
        push r:8, 50
        greaterThan
       label317:
        not
        branchIfTrue label318
        push '[BC6', r:7, '5T6+', r:8, 2
        initObject
        return
       label318:
        push NULL
        return
      end // of function 

      setMember
      push r:1, '8(jzF('
      function2 () (r:1='this')
        push 0
        initArray
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label320
       label319:
        push r:3
        increment
        setRegister r:3
        pop
       label320:
        push r:3, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6y392'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label325
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '6y392'
        getMember
        push r:3
        getMember
        setRegister r:4
        pop
        push r:4, '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:4, ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        add
        setRegister r:5
        pop
        push 0
        setRegister r:6
        pop
        branch label322
       label321:
        push r:6, r:2, 'length'
        getMember
        lessThan
        not
        branchIfTrue label324
       label322:
        push r:2, r:6
        getMember
        push '+'
        getMember
        push r:5
        greaterThan
        not
        branchIfTrue label323
        branch label324
       label323:
        push r:6
        increment
        setRegister r:6
        pop
        branch label321
       label324:
        push '6', r:4, '+', r:5, 2
        initObject
        push r:6, 2, r:2, 'insert'
        callMethod
        pop
        branch label319
       label325:
        push r:2
        return
      end // of function 

      setMember
      push r:1, ',vtjI'
      function2 (r:2=']J') (r:1='this')
        push '((', '*r'
        getVariable
        push '+-(0'
        getMember
        push '(KA'
        getMember
        push '_xmouse'
        getMember
        push ')(', '*r'
        getVariable
        push '+-(0'
        getMember
        push '(KA'
        getMember
        push '_ymouse'
        getMember
        push 2
        initObject
        setRegister r:3
        pop
        push 0, r:']J'
        subtract
        push r:3, 1, r:this, ')153L'
        callMethod
        push -3.14, r:']J'
        add
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        return
      end // of function 

      setMember
      push '*eC,U', ',v0X'
      getVariable
      push 'prototype'
      getMember
      push ';H_ J'
      getMember
      setVariable
      push r:0, '-ja', 0
      setMember
      push r:0, '}MNA=(', 1
      setMember
      push r:0, '5];UB', 2
      setMember
      push r:0, '(laS', 3
      setMember
      push r:0, '+u', 560
      setMember
      push r:0, '6uYK', 30
      setMember
      push r:0, '7{Qr,', 0.5
      setMember
      push r:0, '[c4gL', 6
      setMember
      push r:0, ';Xtqo', 3
      setMember
      push r:0, '(BXD3', 6
      setMember
      push r:0, ',S)x=(', 40
      setMember
      push r:0, '6zOsz', 30
      setMember
      push r:0, '+jQpe', 0.6
      setMember
      push r:0, '3ya+7', FALSE
      setMember
      push r:0, '8xaUB(', FALSE
      setMember
      push '(WBt)'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ']}Ou;(', 1
      setMember
      push r:0, '3I0pG', 2
      setMember
      push r:0, '{;7F4', 3
      setMember
      push r:0, '8U(wu', 4
      setMember
      push r:0, '}[cpB', 5
      setMember
      push r:0, '9xv]A', 6
      setMember
      push r:0, '{yQ=Q', 7
      setMember
      push r:0, '+,W', 8
      setMember
      push r:0, '2y+dV', 9
      setMember
      push r:0, '(tBee', 10
      setMember
      push r:0, '3)i[=', 11
      setMember
      push r:0, ' J3IC', 12
      setMember
      push r:0, '[6jRc', 13
      setMember
      push r:0, ')8Fyj', 14
      setMember
      push '[0EO'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '8)yt', TRUE
        setMember
        push r:this, ';357+', TRUE
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '-0]rl'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '1Jr-,('
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, ';357+'
        getMember
        not
        branchIfTrue label340
        push 0
        setRegister r:3
        pop
        branch label327
       label326:
        push r:3
        increment
        setRegister r:3
        pop
       label327:
        push r:3, r:this, '}Yax5'
        getMember
        lessThan
        not
        branchIfTrue label337
        push r:this, ')('
        getMember
        setRegister r:4
        pop
        push r:this, '((', r:this, '(('
        getMember
        push r:this, '[b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push r:this, ']b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, ')('
        getMember
        push 10
        lessThan
        setRegister r:5
        pop
        push 0
        setRegister r:6
        pop
        branch label329
       label328:
        push r:6
        increment
        setRegister r:6
        pop
       label329:
        push r:6, '*r'
        getVariable
        push '+-(0'
        getMember
        push '106*]'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label334
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '106*]'
        getMember
        push r:6
        getMember
        setRegister r:7
        pop
        push r:7, ')('
        getMember
        push 12
        add
        push r:4
        lessThan
        dup
        not
        branchIfTrue label330
        pop
        push r:7, ')('
        getMember
        push 12
        add
        push r:this, ')('
        getMember
        greaterThan
       label330:
        dup
        not
        branchIfTrue label331
        pop
        push r:this, '(('
        getMember
        push r:7, '(('
        getMember
        greaterThan
       label331:
        dup
        not
        branchIfTrue label332
        pop
        push r:this, '(('
        getMember
        push r:7, '(('
        getMember
        push r:7, ' ('
        getMember
        add
        lessThan
       label332:
        not
        branchIfTrue label333
        push TRUE
        setRegister r:5
        pop
        push r:7, '5)H0', r:this
        setMember
        branch label334
       label333:
        branch label328
       label334:
        push r:5
        not
        branchIfTrue label336
        push r:this, ';357+', FALSE
        setMember
        push r:this, '[b'
        getMember
        push r:this, ']b'
        getMember
        push 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        setRegister r:8
        pop
        push 12
        setRegister r:9
        pop
        push r:this, '((', r:this, '(('
        getMember
        push r:8, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:9
        multiply
        subtract
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push r:8, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:9
        multiply
        subtract
        setMember
        push 2
        toString
        push 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '8)yt'
        getMember
        not
        branchIfTrue label335
        push 0, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '5)H0'
        callMethod
        pop
       label335:
        push 0, r:this, '4u=dZ'
        callMethod
        pop
       label336:
        branch label326
       label337:
        push r:this, ')('
        getMember
        push 0
        lessThan
        not
        branchIfTrue label339
        push r:this, '8)yt'
        getMember
        not
        branchIfTrue label338
        push 0, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '2qA4z'
        callMethod
        pop
       label338:
        push 0, r:this, '9T54'
        callMethod
        pop
       label339:
        branch label341
       label340:
        push r:this, '8)yt'
        getMember
        not
        not
        branchIfTrue label341
        push 0, r:this, '9T54'
        callMethod
        pop
       label341:
      end // of function 

      setMember
      push r:1, '{BxJE('
      function2 () (r:1='this')
        push 1
        setRegister r:2
        pop
        push r:this, '[b'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label342
        push -1
        setRegister r:2
        pop
       label342:
        push r:this, '-iB='
        getMember
        push '_xscale', r:2, 100
        multiply
        setMember
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '[b'
        getMember
        push r:this, ']b'
        getMember
        push 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        push 0.0174
        divide
        setMember
        push r:this, '[b'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label343
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '-iB='
        getMember
        push '_rotation'
        getMember
        push 180
        add
        setMember
       label343:
      end // of function 

      setMember
      push r:1, '-lH+'
      function2 () (r:1='this')
        push r:this, '8)yt', FALSE
        setMember
      end // of function 

      setMember
      push '44{N'
      function2 (r:2='}J') (r:1='this')
        push '*r'
        getVariable
        push '+-(0', r:this
        setMember
        push r:this, '32', r:'}J', 1, '+7U K'
        new
        setMember
        push r:this, '-iB=', r:'}J'
        setMember
        push r:this, ';+', '44{N'
        getVariable
        push '4MvcB'
        getMember
        push '0o*6', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push 0, r:this, ';+'
        getMember
        push 'stop'
        callMethod
        pop
        push r:this, '7Qe;6', 0, 'Array'
        new
        setMember
        push r:this, '6y392', 0, 'Array'
        new
        setMember
        push r:this, ')gv94', 0, 'Array'
        new
        setMember
        push r:this, '-SjAs', 0, 'Array'
        new
        setMember
        push r:this, '106*]', 0, 'Array'
        new
        setMember
        push r:this, ';={0[', 0, 'Array'
        new
        setMember
        push 0, r:this, '(l23,'
        callMethod
        pop
        push r:this, '+QTJ_', FALSE
        setMember
        push r:this, ' yFNA(', 0.5, 1
        initArray
        setMember
        push r:this, '69-', 0, 1
        initArray
        setMember
        push r:this, ')9 9', 0, 1
        initArray
        setMember
        push r:this, ';2H=)', 10
        setMember
        push r:this, ';nv08(', 0, 1
        initArray
        setMember
        push r:this, '-_X}5', '$opt', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26
        initArray
        push '$bads', 0, 0, 0, 3
        initArray
        push '$dif', NULL, 3
        initObject
        setMember
        push r:this, '=QK+A(', r:this, '(KA'
        getMember
        push '_x'
        getMember
        push 300
        add
        push 1
        initArray
        setMember
        push r:this, '4,01', '44{N'
        getVariable
        push '-hCnb'
        getMember
        push ')+jEC', 2, r:this, '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, '=3+P'
        new
        setMember
        push 0, r:this, ']4h9;('
        callMethod
        pop
        push 'onMouseDown', NULL, 'onMouseUp', NULL, 'onMouseWheel', NULL, 'onMouseMove', '5 drP', r:this, 2, '3Wt'
        getVariable
        push '6{VYR'
        callMethod
        push 4
        initObject
        setRegister r:3
        pop
        push r:3, 1, 'Mouse'
        getVariable
        push 'addListener'
        callMethod
        pop
        push 1000, 270, 0, 3, r:this, '47i1Z'
        callMethod
        pop
        push 1000, 200, '*r'
        getVariable
        push '=OA'
        getMember
        push 2
        multiply
        push 3, r:this, '47i1Z'
        callMethod
        pop
        push r:this, ',vZ9+', r:this, '4,01'
        getMember
        setMember
        push '44{N'
        getVariable
        push '0Gti1('
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label344
        push r:this, '-iB='
        getMember
        push '_xscale', '44{N'
        getVariable
        push '0Gti1('
        getMember
        setMember
        push r:this, '-iB='
        getMember
        push '_yscale', r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        setMember
        push r:this, '-iB='
        getMember
        push '_x', r:this, '-iB='
        getMember
        push '_x'
        getMember
        push 100
        add
        setMember
       label344:
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '(l23,'
      function2 () (r:1='this')
        push r:this, '}Zms3', 0
        initArray
        setMember
        push 1.5, 1, 0.8, 0.4, 0.1, 5
        initArray
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label346
       label345:
        push r:3
        increment
        setRegister r:3
        pop
       label346:
        push r:3, r:2, 'length'
        getMember
        lessThan
        not
        branchIfTrue label351
        push r:2, r:3
        getMember
        setRegister r:4
        pop
        push r:4, 1
        equals
        not
        branchIfTrue label347
        push r:this, '(KA', '44{N'
        getVariable
        push '3O*F2'
        getMember
        push 1, r:this, '32'
        getMember
        push '18wU*'
        callMethod
        setMember
        push r:this, '(KA'
        getMember
        push '*', 1
        setMember
        push r:this, '6QA', r:this, '(KA'
        getMember
        push 1, '+7U K'
        new
        setMember
        branch label350
       label347:
        push 0
        setRegister r:5
        pop
        branch label349
       label348:
        push r:5
        increment
        setRegister r:5
        pop
       label349:
        push r:5, 2
        lessThan
        not
        branchIfTrue label350
        push '44{N'
        getVariable
        push '3O*F2'
        getMember
        push '3,sMC', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:6
        pop
        push r:3, 1
        add
        toString
        push 1, r:6, 'gotoAndStop'
        callMethod
        pop
        push r:6, ' (', r:6, '_width'
        getMember
        setMember
        push r:6, '((', r:6, ' ('
        getMember
        push r:5
        multiply
        setMember
        push r:6, ')(', 0
        setMember
        push r:6, '*', r:4
        setMember
        push r:6, 'type', 0
        setMember
        push r:6, 1, r:this, '}Zms3'
        getMember
        push 'push'
        callMethod
        pop
        branch label348
       label350:
        branch label345
       label351:
        push r:this, '31lvX', '44{N'
        getVariable
        push ';C*X2'
        getMember
        push 1, r:this, '6QA'
        getMember
        push '18wU*'
        callMethod
        setMember
        push r:this, '31lvX'
        getMember
        push '9I*', 0, TRUE, '44{N'
        getVariable
        push '}r'
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 4
        multiply
        push 4, 'flash'
        getVariable
        push 'display'
        getMember
        push 'BitmapData'
        newMethod
        setMember
        push 0, r:this, '31lvX'
        getMember
        push '9I*'
        getMember
        push 2, r:this, '31lvX'
        getMember
        push 'attachBitmap'
        callMethod
        pop
        push 0, 1, r:this, '4sqY0'
        callMethod
        pop
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 1, r:this, '4sqY0'
        callMethod
        pop
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 2
        multiply
        push 1, r:this, '4sqY0'
        callMethod
        pop
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 3
        multiply
        push 1, r:this, '4sqY0'
        callMethod
        pop
        push r:this, ']NoIC', '44{N'
        getVariable
        push '{)1db'
        getMember
        push 1, r:this, '6QA'
        getMember
        push '18wU*'
        callMethod
        setMember
        push '44{N'
        getVariable
        push ';qo-J('
        getMember
        not
        branchIfTrue label352
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push 1, r:this, '6QA'
        getMember
        push '18wU*'
        callMethod
        setRegister r:7
        pop
        push r:this, '70*', r:7, 1, '+7U K'
        new
        setMember
        push 0, 'flash'
        getVariable
        push 'filters'
        getMember
        push 'GlowFilter'
        newMethod
        setRegister r:8
        pop
        push r:8, 'blurX', 8
        setMember
        push r:8, 'blurY', 8
        setMember
        push r:8, 'strength', 4
        setMember
        push r:8, 'color', 16777215
        setMember
        push r:8, 'knockout', TRUE
        setMember
        push r:7, 'filters', r:8, 1
        initArray
        setMember
       label352:
      end // of function 

      setMember
      push r:1, ',VfSD('
      function2 () (r:1='this')
        push 0, 'Key'
        getVariable
        push 'getCode'
        callMethod
        setRegister r:2
        pop
      end // of function 

      setMember
      push r:1, '0D 6'
      function2 () (r:1='this')
        push 16777215, 1, ']{i'
        getVariable
        push '(H5 S'
        callMethod
        pop
        push 0, r:this, ']NoIC'
        getMember
        push 'clear'
        callMethod
        pop
        push r:this, '69-', r:this, '69-'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        add
        push 1
        initArray
        setMember
        push r:this, '-_X}5'
        getMember
        push '$dif', r:this, '69-'
        getMember
        push 0
        getMember
        int
        setMember
        push r:this, ';+'
        getMember
        push '_y', r:this, '(KA'
        getMember
        push '_y'
        getMember
        push 0.5
        multiply
        setMember
        push 0, r:this, '0,8 W'
        callMethod
        pop
        push 0, r:this, '+aDob'
        callMethod
        pop
        push 0, r:this, '48Uky'
        callMethod
        pop
        push 0, r:this, '7Qe;6'
        getMember
        push '],lYS'
        callMethod
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label354
       label353:
        push r:3
        increment
        setRegister r:3
        pop
       label354:
        push r:3, r:2, 'length'
        getMember
        lessThan
        not
        branchIfTrue label355
        push 0, r:2, r:3
        getMember
        push '87vE7('
        callMethod
        pop
        branch label353
       label355:
      end // of function 

      setMember
      push r:1, '+aDob'
      function2 () (r:1='this')
        push r:this, ',vZ9+'
        getMember
        setRegister r:2
        pop
        push r:this, '4,01'
        getMember
        push '(G37+'
        getMember
        not
        branchIfTrue label356
        push 0.9
        setRegister r:3
        pop
        push '((', r:this, ',vZ9+'
        getMember
        push '(('
        getMember
        push r:3
        multiply
        push r:this, '2kyAD'
        getMember
        push '(('
        getMember
        push 1, r:3
        subtract
        multiply
        add
        push ')(', r:this, ',vZ9+'
        getMember
        push ')('
        getMember
        push r:3
        multiply
        push r:this, '2kyAD'
        getMember
        push ')('
        getMember
        push 1, r:3
        subtract
        multiply
        add
        push 2
        initObject
        setRegister r:2
        pop
       label356:
        push 300
        setRegister r:4
        pop
        push r:this, '=QK+A(', r:this, '(KA'
        getMember
        push '_x'
        getMember
        push r:4
        add
        push r:this, '=QK+A('
        getMember
        push 0
        getMember
        push r:this, ' yFNA('
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        push 1
        initArray
        setMember
        push r:this, ' yFNA(', r:this, ' yFNA('
        getMember
        push 0
        getMember
        push 0.001, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 1
        initArray
        setMember
        push r:this, '(KA'
        getMember
        push '_x'
        getMember
        setRegister r:5
        pop
        push r:this, '(KA'
        getMember
        push '_x', '*r'
        getVariable
        push '=OA'
        getMember
        push 0.5
        multiply
        push r:2, '(('
        getMember
        subtract
        setMember
        push r:this, '(KA'
        getMember
        push '_y', 0, '*r'
        getVariable
        push '=OA'
        getMember
        push 0.5
        multiply
        push r:2, ')('
        getMember
        subtract
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setMember
        push r:this, '(KA'
        getMember
        push '_x'
        getMember
        push r:5
        subtract
        push 1, r:this, ',hO;2('
        callMethod
        pop
        push r:this, '(KA'
        getMember
        push '_x'
        getMember
        push 0, '*r'
        getVariable
        push '=OA'
        getMember
        subtract
        push 2
        multiply
        lessThan
        not
        branchIfTrue label357
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 1, r:this, ',0tJP'
        callMethod
        pop
       label357:
        push 0
        setRegister r:6
        pop
        branch label359
       label358:
        push r:6
        increment
        setRegister r:6
        pop
       label359:
        push r:6, r:this, '106*]'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label361
        push r:this, '106*]'
        getMember
        push r:6
        getMember
        setRegister r:7
        pop
        push r:7, '(('
        getMember
        push r:7, ' ('
        getMember
        add
        push 0, r:this, '=QK+A('
        getMember
        push 0
        getMember
        subtract
        lessThan
        not
        branchIfTrue label360
        push 0, r:7, '9T54'
        callMethod
        pop
        push r:6
        decrement
        setRegister r:6
        pop
       label360:
        branch label358
       label361:
      end // of function 

      setMember
      push r:1, ',0tJP'
      function2 (r:2='6') (r:1='this')
        push r:this, '=QK+A(', r:this, '=QK+A('
        getMember
        push 0
        getMember
        push r:'6'
        add
        push 1
        initArray
        setMember
        push r:this, '(KA'
        getMember
        push '_x', r:this, '(KA'
        getMember
        push '_x'
        getMember
        push r:'6'
        add
        setMember
        push 0
        setRegister r:3
        pop
        branch label363
       label362:
        push r:3
        increment
        setRegister r:3
        pop
       label363:
        push r:3, r:this, '7Qe;6'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label364
        push r:this, '7Qe;6'
        getMember
        push r:3
        getMember
        setRegister r:4
        pop
        push r:4, '((', r:4, '(('
        getMember
        push r:'6'
        subtract
        setMember
        push r:4, '-iB='
        getMember
        push '_x', r:4, '(('
        getMember
        setMember
        branch label362
       label364:
        push 0, 0, r:'6'
        subtract
        push 2, r:this, '31lvX'
        getMember
        push '9I*'
        getMember
        push 'scroll'
        callMethod
        pop
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 3
        multiply
        push 1, r:this, ',i4aE'
        callMethod
        pop
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 3
        multiply
        push 1, r:this, '4sqY0'
        callMethod
        pop
        push 0.24, r:this, '69-'
        getMember
        push 0
        getMember
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        push r:this, ';2H=)'
        getMember
        multiply
        int
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 40
        lessThan
        not
        branchIfTrue label365
        push r:this, ';2H=)', 10
        setMember
        push NULL, NULL, NULL, 3, r:this, '47i1Z'
        callMethod
        pop
        branch label366
       label365:
        push r:this, ';2H=)', r:this, ';2H=)'
        getMember
        push 3
        subtract
        setMember
       label366:
      end // of function 

      setMember
      push r:1, ',hO;2('
      function2 (r:2='[b') (r:1='this')
        push r:this, ';nv08(', r:this, ';nv08('
        getMember
        push 0
        getMember
        push r:'[b'
        subtract
        push 1
        initArray
        setMember
        push 20
        setRegister r:3
        pop
       label367:
        push r:this, ';nv08('
        getMember
        push 0
        getMember
        push r:3
        greaterThan
        not
        branchIfTrue label368
        push r:this, ';nv08(', r:this, ';nv08('
        getMember
        push 0
        getMember
        push r:3
        subtract
        push 1
        initArray
        setMember
        push '*r'
        getVariable
        push '6jZ'
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        branch label367
       label368:
        push r:this, ')9 9', r:this, ')9 9'
        getMember
        push 0
        getMember
        push r:'[b'
        subtract
        push 1
        initArray
        setMember
        push 0
        setRegister r:4
        pop
        branch label370
       label369:
        push r:4
        increment
        setRegister r:4
        pop
       label370:
        push r:4, r:this, '}Zms3'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label377
        push r:this, '}Zms3'
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push r:5, '((', r:5, '(('
        getMember
        push r:5, '*'
        getMember
        push r:'[b'
        multiply
        add
        setMember
        push r:5, ')(', r:this, '(KA'
        getMember
        push '_y'
        getMember
        push 0.5, r:5, '*'
        getMember
        push 0.5
        multiply
        add
        multiply
        setMember
        push r:5, 'type'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label371
        push r:0, 1
        strictEquals
        branchIfTrue label374
        branch label376
       label371:
        push r:5, '(('
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        greaterThan
        not
        branchIfTrue label372
        push r:5, '((', r:5, '(('
        getMember
        push r:5, ' ('
        getMember
        push 2
        multiply
        subtract
        setMember
       label372:
        push r:5, '(('
        getMember
        push r:5, ' ('
        getMember
        add
        push 0
        lessThan
        not
        branchIfTrue label373
        push r:5, '((', r:5, '(('
        getMember
        push r:5, ' ('
        getMember
        push 2
        multiply
        add
        setMember
       label373:
        branch label376
       label374:
        push r:5, ')(', r:5, ')('
        getMember
        push r:5, '}2'
        getMember
        add
        setMember
        push r:5, '(('
        getMember
        push 0, r:5, ' ('
        getMember
        subtract
        push 0.5
        multiply
        lessThan
        not
        branchIfTrue label375
        push 0, r:5, 'removeMovieClip'
        callMethod
        pop
        push 1, r:4, r:4
        decrement
        setRegister r:4
        pop
        push 2, r:this, '}Zms3'
        getMember
        push 'splice'
        callMethod
        pop
       label375:
        branch label376
       label376:
        push r:5, '_x', r:5, '(('
        getMember
        setMember
        push r:5, '_y', r:5, ')('
        getMember
        setMember
        branch label369
       label377:
        push 50
        setRegister r:6
        pop
       label378:
        push r:this, '}Zms3'
        getMember
        push 'length'
        getMember
        push 20
        lessThan
        dup
        not
        branchIfTrue label379
        pop
        push r:this, ')9 9'
        getMember
        push 0
        getMember
        push r:6
        greaterThan
       label379:
        not
        branchIfTrue label380
        push r:this, ')9 9', r:this, ')9 9'
        getMember
        push 0
        getMember
        push r:6
        subtract
        push 1
        initArray
        setMember
        push 0, r:this, ']s_TM'
        callMethod
        pop
        branch label378
       label380:
        push '44{N'
        getVariable
        push '3OhJj'
        getMember
        push 0
        equals
        not
        branchIfTrue label381
        push UNDEF
        return
       label381:
        push 0
        setRegister r:7
        pop
        branch label383
       label382:
        push r:7
        increment
        setRegister r:7
        pop
       label383:
        push r:7, r:this, '}Zms3'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label387
        push r:this, '}Zms3'
        getMember
        push r:7
        getMember
        setRegister r:8
        pop
        push r:8, 'type'
        getMember
        push 1
        equals
        dup
        not
        branchIfTrue label384
        pop
        push r:8, '*'
        getMember
        push 1
        greaterThan
       label384:
        not
        branchIfTrue label386
        push TRUE, r:this, '4,01'
        getMember
        push ')('
        getMember
        push r:this, '(KA'
        getMember
        push '_y'
        getMember
        add
        push r:this, '4,01'
        getMember
        push '(('
        getMember
        push r:this, '(KA'
        getMember
        push '_x'
        getMember
        add
        push 3, r:8, 'hitTest'
        callMethod
        not
        branchIfTrue label385
        push r:8, '_alpha', r:8, '_alpha'
        getMember
        push 20, r:8, '_alpha'
        getMember
        subtract
        push 0.5
        multiply
        add
        setMember
        branch label386
       label385:
        push r:8, '_alpha', r:8, '_alpha'
        getMember
        push 100, r:8, '_alpha'
        getMember
        subtract
        push 0.5
        multiply
        add
        setMember
       label386:
        branch label382
       label387:
      end // of function 

      setMember
      push r:1, ']s_TM'
      function2 () (r:1='this')
        push '44{N'
        getVariable
        push '3O*F2'
        getMember
        push '=vyS[', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:2
        pop
        push r:2, '_totalframes'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        add
        toString
        push 1, r:2, 'gotoAndStop'
        callMethod
        pop
        push r:2, '*', 0.1, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 1.2
        multiply
        add
        setMember
        push r:2, '_xscale', 0.3, r:2, '*'
        getMember
        push 0.7
        multiply
        add
        push 100
        multiply
        setMember
        push r:2, '_yscale', r:2, '_xscale'
        getMember
        setMember
        push r:2, '_xscale', r:2, '_xscale'
        getMember
        push 2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        multiply
        setMember
        push r:2, ' (', r:2, '_width'
        getMember
        setMember
        push r:2, '((', '*r'
        getVariable
        push '=OA'
        getMember
        push r:2, ' ('
        getMember
        push 0.5
        multiply
        add
        setMember
        push r:2, ')(', 0
        setMember
        push r:2, '}2', 1, r:2, '*'
        getMember
        subtract
        push 50
        multiply
        setMember
        push r:2, 'type', 1
        setMember
        push r:2, '_x', r:2, '(('
        getMember
        setMember
        push 9981553, 1, r:2, '*'
        getMember
        subtract
        push 70
        multiply
        push r:2, 3, '*r'
        getVariable
        push ';CYOh'
        callMethod
        pop
        push r:2, 1, r:this, '}Zms3'
        getMember
        push 'push'
        callMethod
        pop
        push 0, r:this, '{_b]6('
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '{_b]6('
      function2 () (r:1='this')
        function2 (r:2='(', r:3=')') (r:1='this')
          push r:'(', '*'
          getMember
          push r:')', '*'
          getMember
          lessThan
          not
          branchIfTrue label388
          push -1
          return
         label388:
          push 1
          return
        end // of function 

        setRegister r:2
        pop
        push 0, r:this, '}Zms3'
        getMember
        push '],lYS'
        callMethod
        setRegister r:3
        pop
        push r:this, '(KA'
        getMember
        push 1, r:3, 'push'
        callMethod
        pop
        push r:2, 1, r:3, 'sort'
        callMethod
        pop
        push 0
        setRegister r:4
        pop
        branch label390
       label389:
        push r:4
        increment
        setRegister r:4
        pop
       label390:
        push r:4, r:3, 'length'
        getMember
        lessThan
        not
        branchIfTrue label391
        push r:3, r:4
        getMember
        push 1, r:this, '32'
        getMember
        push '08M8'
        callMethod
        pop
        branch label389
       label391:
      end // of function 

      setMember
      push r:1, '4sqY0'
      function2 (r:2='((') (r:1='this')
        push '44{N'
        getVariable
        push '4MvcB'
        getMember
        push '31lvX', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:3
        pop
        push 0, 'flash'
        getVariable
        push 'geom'
        getMember
        push 'Matrix'
        newMethod
        setRegister r:4
        pop
        push 0, r:'((', 2, r:4, 'translate'
        callMethod
        pop
        push NULL, NULL, NULL, NULL, r:4, r:3, 6, r:this, '31lvX'
        getMember
        push '9I*'
        getMember
        push 'draw'
        callMethod
        pop
        push 0, r:3, 'removeMovieClip'
        callMethod
        pop
        push '44{N'
        getVariable
        push '4MvcB'
        getMember
        push '2=*6c', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:5
        pop
        push 0
        setRegister r:6
        pop
        branch label393
       label392:
        push r:6
        increment
        setRegister r:6
        pop
       label393:
        push r:6, 5
        lessThan
        not
        branchIfTrue label394
        push r:5, '_totalframes'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        add
        toString
        push 1, r:5, 'gotoAndStop'
        callMethod
        pop
        push 0, 'flash'
        getVariable
        push 'geom'
        getMember
        push 'Matrix'
        newMethod
        setRegister r:7
        pop
        push r:'((', r:5, '_width'
        getMember
        push 0.5
        multiply
        add
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '*r'
        getVariable
        push '=OA'
        getMember
        push r:5, '_width'
        getMember
        subtract
        multiply
        add
        setRegister r:8
        pop
        push 10, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:9
        pop
        push r:9, r:8, 2, r:7, 'translate'
        callMethod
        pop
        push NULL, NULL, NULL, NULL, r:7, r:5, 6, r:this, '31lvX'
        getMember
        push '9I*'
        getMember
        push 'draw'
        callMethod
        pop
        branch label392
       label394:
        push 0, r:5, 'removeMovieClip'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ',i4aE'
      function2 (r:2='((') (r:1='this')
        push 0, '44{N'
        getVariable
        push '}r'
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 0, r:'((', 4, 'flash'
        getVariable
        push 'geom'
        getMember
        push 'Rectangle'
        newMethod
        push 2, r:this, '31lvX'
        getMember
        push '9I*'
        getMember
        push 'fillRect'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '47i1Z'
      function2 (r:2='((', r:3=')(', r:4=' (') (r:1='this')
        push r:'((', NULL
        equals
        not
        branchIfTrue label395
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 3
        multiply
        push 8
        add
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 100
        multiply
        add
        setRegister r:'(('
        pop
       label395:
        push r:')(', NULL
        equals
        not
        branchIfTrue label396
        push 140, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 150
        multiply
        add
        setRegister r:')('
        pop
       label396:
        push r:' (', NULL
        equals
        not
        branchIfTrue label397
        push 800, r:this, '69-'
        getMember
        push 0
        getMember
        push 0.25
        multiply
        subtract
        push 60, 2, 'Math'
        getVariable
        push 'max'
        callMethod
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 200
        multiply
        add
        setRegister r:' ('
        pop
       label397:
        push 0
        setRegister r:5
        pop
       label398:
        push TRUE
        not
        branchIfTrue label406
        push TRUE
        setRegister r:6
        pop
        push 0
        setRegister r:7
        pop
        branch label400
       label399:
        push r:7
        increment
        setRegister r:7
        pop
       label400:
        push r:7, r:this, '106*]'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label403
        push r:this, '106*]'
        getMember
        push r:7
        getMember
        setRegister r:8
        pop
        push r:8, '(('
        getMember
        push r:8, ' ('
        getMember
        add
        push r:'(('
        greaterThan
        dup
        not
        branchIfTrue label401
        pop
        push r:')(', r:8, ')('
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push 60
        lessThan
       label401:
        not
        branchIfTrue label402
        push FALSE
        setRegister r:6
        pop
       label402:
        branch label399
       label403:
        push r:6
        not
        branchIfTrue label404
        branch label406
       label404:
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 2
        multiply
        push 8
        add
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 100
        multiply
        add
        setRegister r:'(('
        pop
        push 140, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 150
        multiply
        add
        setRegister r:')('
        pop
        push r:5, r:5
        increment
        setRegister r:5
        pop
        push 20
        greaterThan
        not
        branchIfTrue label405
        push UNDEF
        return
       label405:
        branch label398
       label406:
        push '44{N'
        getVariable
        push '8f5fb'
        getMember
        push '9,sMC', 2, r:this, '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, '256X'
        new
        setRegister r:9
        pop
        push r:9, '((', r:'(('
        setMember
        push r:' (', r:')(', r:'((', 3, r:9, '*w()A('
        callMethod
        pop
        push 0.2, r:this, '69-'
        getMember
        push 0
        getMember
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        int
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:10
        pop
        push r:10, r:9, ' ('
        getMember
        push 0.02
        multiply
        push 1, 'Math'
        getVariable
        push 'ceil'
        callMethod
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:11
        pop
        push r:11, 0
        equals
        dup
        not
        branchIfTrue label407
        pop
        push r:9, ' ('
        getMember
        push 160
        greaterThan
       label407:
        not
        branchIfTrue label408
        push r:11
        increment
        setRegister r:11
        pop
       label408:
        push 0
        initArray
        setRegister r:12
        pop
        push 0
        setRegister r:5
        pop
        push 0
        setRegister r:13
        pop
        branch label410
       label409:
        push r:13
        increment
        setRegister r:13
        pop
       label410:
        push r:13, r:11
        lessThan
        not
        branchIfTrue label424
        push '44{N'
        getVariable
        push '{U0ib'
        getMember
        push '5{Qn((', 2, r:this, '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, '{28l*'
        new
        setRegister r:14
        pop
        push NULL
        setRegister r:15
        pop
        branch label412
       label411:
        push TRUE
        not
        branchIfTrue label419
       label412:
        push r:9, '(('
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push r:9, ' ('
        getMember
        multiply
        add
        setRegister r:15
        pop
        push TRUE
        setRegister r:16
        pop
        push 0
        setRegister r:17
        pop
        branch label414
       label413:
        push r:17
        increment
        setRegister r:17
        pop
       label414:
        push r:17, r:12, 'length'
        getMember
        lessThan
        not
        branchIfTrue label416
        push r:12, r:17
        getMember
        push r:15
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push 20
        lessThan
        not
        branchIfTrue label415
        push FALSE
        setRegister r:16
        pop
        branch label416
       label415:
        branch label413
       label416:
        push r:16
        not
        branchIfTrue label417
        branch label419
       label417:
        push r:5, r:5
        increment
        setRegister r:5
        pop
        push 200
        greaterThan
        not
        branchIfTrue label418
        push 'MONSTER POS ERROR !!! ', 1, ']{i'
        getVariable
        push 'trace'
        callMethod
        pop
        branch label419
       label418:
        branch label411
       label419:
        push r:11, 1
        equals
        dup
        not
        branchIfTrue label420
        pop
        push r:this, '106*]'
        getMember
        push 'length'
        getMember
        push 1
        equals
       label420:
        not
        branchIfTrue label421
        push r:9, '(('
        getMember
        push r:9, ' ('
        getMember
        add
        push 10
        subtract
        setRegister r:15
        pop
       label421:
        push r:15, 1, r:12, 'push'
        callMethod
        pop
        push r:14, '((', r:15
        setMember
        push r:14, ')(', r:9, ')('
        getMember
        push r:14, ']oH'
        getMember
        subtract
        setMember
        push r:14, ')099', r:9
        setMember
        push 1
        setRegister r:18
        pop
        push r:this, '69-'
        getMember
        push 0
        getMember
        push 1000
        greaterThan
        not
        branchIfTrue label422
        push r:18
        increment
        setRegister r:18
        pop
       label422:
        push r:this, '69-'
        getMember
        push 0
        getMember
        push 2800
        greaterThan
        not
        branchIfTrue label423
        push r:18
        increment
        setRegister r:18
        pop
       label423:
        push r:11, r:13
        subtract
        push r:18, 2, 'Math'
        getVariable
        push 'min'
        callMethod
        int
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:19
        pop
        push r:19, 1, r:14, '3U*}=('
        callMethod
        pop
        push r:11, r:19
        subtract
        setRegister r:11
        pop
        branch label409
       label424:
      end // of function 

      setMember
      push r:1, '48Uky'
      function2 () (r:1='this')
        push r:this, '4,01'
        getMember
        push ')('
        getMember
        push '*r'
        getVariable
        push '*OA'
        getMember
        greaterThan
        not
        branchIfTrue label425
        push r:this, '4,01'
        getMember
        push ')('
        getMember
        push '*r'
        getVariable
        push '*OA'
        getMember
        subtract
        push '*r'
        getVariable
        push '*OA'
        getMember
        divide
        setRegister r:2
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push r:2
        multiply
        push 0.2
        greaterThan
        not
        branchIfTrue label425
        push '6x);-', 1, r:this, '{==W3('
        callMethod
        setRegister r:3
        pop
        push r:3, '((', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '*r'
        getVariable
        push '=OA'
        getMember
        multiply
        push 0, r:this, '(KA'
        getMember
        push '_x'
        getMember
        subtract
        add
        setMember
        push r:3, ')(', '*r'
        getVariable
        push '*OA'
        getMember
        push 10
        add
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 20
        multiply
        add
        push r:this, '(KA'
        getMember
        push '_y'
        getMember
        subtract
        setMember
        push r:3, ']b', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6
        multiply
        setMember
        push r:3, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:3, '849kV', 0
        setMember
        push 100, r:this, '4,01'
        getMember
        push ')('
        getMember
        push 0.2
        multiply
        add
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 100
        multiply
        add
        push 1, r:3, '3BjX_'
        callMethod
        pop
        push r:3, '-iB='
        getMember
        push 'blendMode', '(WBt)'
        getVariable
        push '+,W'
        getMember
        setMember
       label425:
        push r:this, '001Dk'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label426
        push r:this, '001Dk', r:this, '001Dk'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
       label426:
        push r:this, '4,01'
        getMember
        push '2Gr]U'
        getMember
        not
        branchIfTrue label427
        push r:this, '=QK+A(', r:this, '=QK+A('
        getMember
        push 0
        getMember
        push 13
        subtract
        push 1
        initArray
        setMember
       label427:
      end // of function 

      setMember
      push r:1, '77ldJ('
      function2 (r:2='((', r:3=')(') (r:1='this')
        push r:')(', r:'((', 2, r:this, '31lvX'
        getMember
        push '9I*'
        getMember
        push 'getPixel32'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, '*r'
        getVariable
        push '2ya 0('
        callMethod
        setRegister r:5
        pop
        push r:5, '('
        getMember
        push 30
        lessThan
        return
      end // of function 

      setMember
      push r:1, ']4h9;('
      function2 () (r:1='this')
        push r:this, ' [v[O', '44{N'
        getVariable
        push '+{A i'
        getMember
        push '}Q_xM', 2, r:this, '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, ',v0X'
        new
        setMember
        push r:this, ' [v[O'
        getMember
        push '((', -2000
        setMember
        push r:this, ' [v[O'
        getMember
        push '8y,7', r:this, ' [v[O'
        getMember
        push '-iB='
        getMember
        push '8y,7'
        getMember
        setMember
        push r:this, '2kyAD', '44{N'
        getVariable
        push '+{A i'
        getMember
        push '(3q]7(', 2, r:this, '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, ',v0X'
        new
        setMember
        push r:this, '2kyAD'
        getMember
        push '-iB='
        getMember
        push '_visible', FALSE
        setMember
        push r:this, '2kyAD'
        getMember
        push '((', 0, r:this, '=QK+A('
        getMember
        push 0
        getMember
        subtract
        setMember
        push r:this, '2kyAD'
        getMember
        push '0Y-1', r:this, '2kyAD'
        getMember
        push '-iB='
        getMember
        setMember
        push r:this, '5N{ZO', 0
        initArray
        setMember
        push '44{N'
        getVariable
        push '8Z=cb'
        getMember
        push '44{N'
        getVariable
        push '8OItb'
        getMember
        push 2
        initArray
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label429
       label428:
        push r:3
        increment
        setRegister r:3
        pop
       label429:
        push r:3, 2
        lessThan
        not
        branchIfTrue label431
        push r:2, r:3
        getMember
        push '2bWj1', 2, r:this, '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, ',v0X'
        new
        setRegister r:4
        pop
        push r:4, '((', r:this, ' [v[O'
        getMember
        push '(('
        getMember
        setMember
        push r:4, ')(', r:this, ' [v[O'
        getMember
        push ')('
        getMember
        setMember
        push r:4, ')', '$b', r:4, '-iB='
        getMember
        push 2, '3Wt'
        getVariable
        push '6{X3L'
        callMethod
        setMember
        push r:4, 'ab', '$ab', r:4, '-iB='
        getMember
        push 2, '3Wt'
        getVariable
        push '6{X3L'
        callMethod
        setMember
        push r:4, '1', '$h', r:4, '-iB='
        getMember
        push 2, '3Wt'
        getVariable
        push '6{X3L'
        callMethod
        setMember
        push r:4, ')'
        getMember
        push '6b', 0
        setMember
        push r:4, ')'
        getMember
        push '9;I', 0
        setMember
        push r:4, 'ab'
        getMember
        push '6b', 0
        setMember
        push r:4, 'ab'
        getMember
        push '9;I', 0
        setMember
        push r:4, 1, r:this, '5N{ZO'
        getMember
        push 'push'
        callMethod
        pop
        push r:3, 0
        equals
        not
        branchIfTrue label430
        push 10296977, 50, r:4, '-iB='
        getMember
        push 3, '*r'
        getVariable
        push ';CYOh'
        callMethod
        pop
       label430:
        branch label428
       label431:
        push r:this, ';R{K,(', '44{N'
        getVariable
        push '841,4'
        getMember
        push ';R{K,(', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, ';R{K,('
        getMember
        push 'blendMode', '(WBt)'
        getVariable
        push '+,W'
        getMember
        setMember
        push r:this, ';R{K,('
        getMember
        push '_alpha', 0
        setMember
        push r:this, ';R{K,('
        getMember
        push '_y', '*r'
        getVariable
        push '*OA'
        getMember
        push 0.5
        multiply
        setMember
      end // of function 

      setMember
      push r:1, '0,8 W'
      function2 () (r:1='this')
        push r:this, ';R{K,('
        getMember
        push '_x', r:this, '2kyAD'
        getMember
        push '(('
        getMember
        push r:this, '(KA'
        getMember
        push '_x'
        getMember
        add
        setMember
        push r:this, ';R{K,('
        getMember
        push '_y', r:this, '2kyAD'
        getMember
        push ')('
        getMember
        push r:this, '(KA'
        getMember
        push '_y'
        getMember
        add
        setMember
        push r:this, '4,01'
        getMember
        push '(G37+'
        getMember
        not
        branchIfTrue label434
        push r:this, '2kyAD'
        getMember
        push '[b', r:this, '2kyAD'
        getMember
        push '[b'
        getMember
        push 2, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '2kyAD'
        getMember
        push ']b', r:this, '2kyAD'
        getMember
        push ']b'
        getMember
        push 1.5, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '2kyAD'
        getMember
        push '0Y-1'
        getMember
        push '_currentframe'
        getMember
        push 3
        subtract
        push 1, 2, 'Math'
        getVariable
        push 'max'
        callMethod
        setRegister r:2
        pop
        push r:2
        toString
        push 1, r:this, '2kyAD'
        getMember
        push '0Y-1'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '2kyAD'
        getMember
        push '0Y-1'
        getMember
        push '_rotation', r:this, '2kyAD'
        getMember
        push '0Y-1'
        getMember
        push '_rotation'
        getMember
        push 1
        add
        setMember
        push 166, r:this, '2kyAD'
        getMember
        push '0Y-1'
        getMember
        push '_currentframe'
        getMember
        push 30
        divide
        multiply
        setRegister r:3
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push ')('
        getMember
        push r:3
        greaterThan
        dup
        not
        branchIfTrue label432
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push ']b'
        getMember
        push 0
        greaterThan
       label432:
        not
        branchIfTrue label433
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push ')(', 166
        setMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push ']b', '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push ']b'
        getMember
        push -0.5
        multiply
        setMember
       label433:
        branch label440
       label434:
        push 300
        setRegister r:4
        pop
        push r:this, '=QK+A('
        getMember
        push 0
        getMember
        push r:this, '4,01'
        getMember
        push '(('
        getMember
        add
        setRegister r:5
        pop
        push r:5, r:4
        divide
        setRegister r:6
        pop
        push r:this, '4,01'
        getMember
        push ')('
        getMember
        push r:this, '4,01'
        getMember
        push ']b'
        getMember
        push 2
        multiply
        add
        push 1, r:6
        subtract
        push 180
        multiply
        subtract
        setRegister r:7
        pop
        push r:this, ';R{K,('
        getMember
        push '_alpha', 100, r:6, 100
        multiply
        subtract
        setMember
        push r:this, ';R{K,('
        getMember
        push '_xscale', 500, r:6, 200
        multiply
        subtract
        setMember
        push r:this, ';R{K,('
        getMember
        push '_yscale', r:this, ';R{K,('
        getMember
        push '_xscale'
        getMember
        setMember
        push r:this, '2kyAD'
        getMember
        push '((', 0, r:this, '=QK+A('
        getMember
        push 0
        getMember
        subtract
        setMember
        push 2
        setRegister r:8
        pop
        push r:7, r:this, '2kyAD'
        getMember
        push ')('
        getMember
        subtract
        setRegister r:9
        pop
        push r:this, '2kyAD'
        getMember
        push ']b', r:this, '2kyAD'
        getMember
        push ']b'
        getMember
        push r:8, r:9, 0.15
        multiply
        push 0, r:8
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
        push r:5, r:4
        greaterThan
        not
        branchIfTrue label435
        push r:this, '2kyAD'
        getMember
        push '-iB='
        getMember
        push '_visible', FALSE
        setMember
        push r:this, ';R{K,('
        getMember
        push '_visible', FALSE
        setMember
        push r:this, ' [v[O'
        getMember
        push '-iB='
        getMember
        push '_visible', FALSE
        setMember
        branch label440
       label435:
        push r:this, '2kyAD'
        getMember
        push '-iB='
        getMember
        push '_visible'
        getMember
        not
        not
        branchIfTrue label436
        push r:this, '2kyAD'
        getMember
        push ')(', r:7
        setMember
        push r:this, '2kyAD'
        getMember
        push '-iB='
        getMember
        push '_visible', TRUE
        setMember
        push r:this, ';R{K,('
        getMember
        push '_visible', TRUE
        setMember
        push r:this, ' [v[O'
        getMember
        push '-iB='
        getMember
        push '_visible', TRUE
        setMember
       label436:
        push r:6, 0.7
        lessThan
        not
        branchIfTrue label437
        push 1, 1, r:6, 0.7
        divide
        subtract
        push 40
        multiply
        int
        add
        setRegister r:10
        pop
        push r:10
        toString
        push 1, r:this, '2kyAD'
        getMember
        push '0Y-1'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
       label437:
        push r:this, '2kyAD'
        getMember
        push '0Y-1'
        getMember
        push '_rotation', r:9, 0.1
        multiply
        push r:this, '2kyAD'
        getMember
        push ']b'
        getMember
        push 0.5
        multiply
        add
        setMember
        push r:6, 0.5
        lessThan
        not
        branchIfTrue label438
        push r:6, 0.5
        divide
        push 0.1
        multiply
        setRegister r:11
        pop
        push r:this, '2kyAD'
        getMember
        push ')(', r:this, '2kyAD'
        getMember
        push ')('
        getMember
        push r:9, r:11
        multiply
        add
        setMember
       label438:
        push r:6, 0.33
        lessThan
        not
        branchIfTrue label440
        push r:this, ',vZ9+', '((', r:this, '4,01'
        getMember
        push '(('
        getMember
        push ')(', r:this, '4,01'
        getMember
        push ')('
        getMember
        push 2
        initObject
        setMember
        push r:this, '2kyAD'
        getMember
        push '0Y-1'
        getMember
        push '6}_lW'
        getMember
        push 1, '+7U K'
        new
        setRegister r:12
        pop
        push ')+jEC'
        setRegister r:13
        pop
        push r:this, '4,01'
        getMember
        push '3='
        getMember
        push 0
        getMember
        push 0
        equals
        not
        branchIfTrue label439
        push '++TlB'
        setRegister r:13
        pop
       label439:
        push 0, r:13, 2, r:12, '*=_p_'
        callMethod
        setRegister r:14
        pop
        push r:this, '4,01'
        getMember
        push '-iB='
        getMember
        push '_currentframe'
        getMember
        toString
        push 1, r:14, 'gotoAndPlay'
        callMethod
        pop
        push 0, r:this, '4,01'
        getMember
        push '-iB='
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, '4,01'
        getMember
        push '-iB=', r:14
        setMember
        push r:this, '4,01'
        getMember
        push '(G37+', TRUE
        setMember
        push 0, r:this, '4,01'
        getMember
        push '2qA4z'
        callMethod
        pop
        push r:this, '4,01'
        getMember
        push '6g,A'
        getMember
        push 1, r:this, '4,01'
        getMember
        push '8D5}=('
        callMethod
        pop
        push '=3+P'
        getVariable
        push '-ja'
        getMember
        push 1, r:this, '4,01'
        getMember
        push '5Hy6b'
        callMethod
        pop
        push r:this, '4,01'
        getMember
        push '[b', -6
        setMember
        push r:this, '4,01'
        getMember
        push ']b', r:this, '4,01'
        getMember
        push ']b'
        getMember
        push r:this, '2kyAD'
        getMember
        push ']b'
        getMember
        subtract
        setMember
        push r:this, '4,01'
        getMember
        push '(KpGn', -4
        setMember
        push r:this, '4,01'
        getMember
        push '(('
        getMember
        push r:this, '(KA'
        getMember
        push '_x'
        getMember
        add
        setRegister r:15
        pop
        push r:this, '4,01'
        getMember
        push ')('
        getMember
        push r:this, '(KA'
        getMember
        push '_y'
        getMember
        add
        setRegister r:16
        pop
        push r:16, r:15, r:this, '2kyAD'
        getMember
        push '0Y-1'
        getMember
        push '6}_lW'
        getMember
        push 3, '-[m(M'
        getVariable
        push 'globalToLocal'
        callMethod
        setRegister r:17
        pop
        push r:this, '4,01'
        getMember
        push '((', r:17, '(('
        getMember
        setMember
        push r:this, '4,01'
        getMember
        push ')(', r:17, ')('
        getMember
        setMember
        push 0, r:this, '4,01'
        getMember
        push '4u=dZ'
        callMethod
        pop
        push r:this, '-_X}5'
        getMember
        push 1, ';ndCG'
        getVariable
        push '7T4cF('
        callMethod
        pop
       label440:
        push '((', r:this, '2kyAD'
        getMember
        push '(('
        getMember
        push 40
        subtract
        push ')(', r:this, '2kyAD'
        getMember
        push ')('
        getMember
        push 50
        add
        push 2
        initObject
        setRegister r:18
        pop
        push 100, 0.2, r:18, 3, r:this, ' [v[O'
        getMember
        push '2sngh'
        callMethod
        pop
        push r:this, '2kyAD'
        getMember
        push 1, r:this, ' [v[O'
        getMember
        push ')153L'
        callMethod
        setRegister r:19
        pop
        push r:this, '2kyAD'
        getMember
        push 1, r:this, ' [v[O'
        getMember
        push '}1A{_'
        callMethod
        setRegister r:20
        pop
        push r:this, ' [v[O'
        getMember
        push '8y,7'
        getMember
        push '_rotation', r:19, 0.0174
        divide
        push r:this, ' [v[O'
        getMember
        push '-iB='
        getMember
        push '_rotation'
        getMember
        subtract
        setMember
        push r:this, ' [v[O'
        getMember
        push '8y,7'
        getMember
        push '_xscale', r:20
        setMember
        push r:this, ' [v[O'
        getMember
        push '-iB='
        getMember
        push '_rotation', r:this, ' [v[O'
        getMember
        push '8y,7'
        getMember
        push '_rotation'
        getMember
        push 45
        add
        push 0.5
        multiply
        setMember
        push 0
        setRegister r:21
        pop
        branch label442
       label441:
        push r:21
        increment
        setRegister r:21
        pop
       label442:
        push r:21, r:this, '5N{ZO'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label454
        push r:this, '5N{ZO'
        getMember
        push r:21
        getMember
        setRegister r:22
        pop
        push r:22, '((', r:this, ' [v[O'
        getMember
        push '(('
        getMember
        setMember
        push r:22, ')(', r:this, ' [v[O'
        getMember
        push ')('
        getMember
        setMember
        push r:22, ')'
        getMember
        push 1, r:this, ' pyb5'
        callMethod
        pop
        push r:22, 'ab'
        getMember
        push 1, r:this, ' pyb5'
        callMethod
        pop
        push 1.57, 255, r:22, ')'
        getMember
        push r:22, 'ab'
        getMember
        push 4, r:this, '(yX{2'
        callMethod
        pop
        push 0, 240, r:22, 'ab'
        getMember
        push r:22, '1'
        getMember
        push 4, r:this, '(yX{2'
        callMethod
        pop
        push r:22, '1'
        getMember
        push '_y'
        getMember
        push r:22, '1'
        getMember
        push '_x'
        getMember
        push r:22, '-iB='
        getMember
        push 3, '-[m(M'
        getVariable
        push 'localToGlobal'
        callMethod
        setRegister r:23
        pop
        push r:23, ')('
        getMember
        push '*r'
        getVariable
        push '*OA'
        getMember
        lessThan
        dup
        not
        branchIfTrue label443
        pop
        push r:22, '1'
        getMember
        push '_currentframe'
        getMember
        push 1
        equals
       label443:
        not
        branchIfTrue label444
        push '2', 1, r:22, '1'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
       label444:
        push r:23, ')('
        getMember
        push '*r'
        getVariable
        push '*OA'
        getMember
        greaterThan
        dup
        not
        branchIfTrue label445
        pop
        push r:22, '1'
        getMember
        push '_currentframe'
        getMember
        push 2
        equals
       label445:
        not
        branchIfTrue label446
        push '1', 1, r:22, '1'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
       label446:
        push r:23, '((', r:23, '(('
        getMember
        push 70, r:this, '(KA'
        getMember
        push '_x'
        getMember
        subtract
        add
        setMember
        push r:23, ')(', r:23, ')('
        getMember
        push 70, r:this, '(KA'
        getMember
        push '_y'
        getMember
        subtract
        add
        setMember
        push r:23, '(('
        getMember
        push r:this, '(KA'
        getMember
        push '_x'
        getMember
        add
        push 0
        greaterThan
        dup
        not
        branchIfTrue label447
        pop
        push r:23, ')('
        getMember
        push r:this, '(KA'
        getMember
        push '_y'
        getMember
        add
        push '*r'
        getVariable
        push '=OA'
        getMember
        lessThan
       label447:
        not
        branchIfTrue label453
        push 0
        setRegister r:24
        pop
        branch label449
       label448:
        push r:24
        increment
        setRegister r:24
        pop
       label449:
        push r:24, r:this, '106*]'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label453
        push r:this, '106*]'
        getMember
        push r:24
        getMember
        setRegister r:25
        pop
        push r:23, '(('
        getMember
        push r:25, '(('
        getMember
        greaterThan
        dup
        not
        branchIfTrue label450
        pop
        push r:23, '(('
        getMember
        push r:25, '(('
        getMember
        push r:25, ' ('
        getMember
        add
        lessThan
       label450:
        dup
        not
        branchIfTrue label451
        pop
        push r:23, ')('
        getMember
        push r:25, ')('
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push 16
        lessThan
       label451:
        not
        branchIfTrue label452
        push r:22, ')'
        getMember
        push '6b', r:22, ')'
        getMember
        push '6b'
        getMember
        push 6
        subtract
        setMember
        push r:23, '(('
        getMember
        push 1, r:25, ';-[;H'
        callMethod
        pop
        branch label453
       label452:
        branch label448
       label453:
        branch label441
       label454:
        push r:this, '2kyAD'
        getMember
        push '-iB='
        getMember
        push '_visible'
        getMember
        push TRUE
        equals
        not
        not
        branchIfTrue label455
        push UNDEF
        return
       label455:
        push 120
        setRegister r:26
        pop
        push 0
        setRegister r:27
        pop
        branch label457
       label456:
        push r:27
        increment
        setRegister r:27
        pop
       label457:
        push r:27, r:this, '106*]'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label461
        push r:this, '106*]'
        getMember
        push r:27
        getMember
        setRegister r:28
        pop
        push r:this, '2kyAD'
        getMember
        push '(('
        getMember
        push r:26
        add
        push r:28, '(('
        getMember
        greaterThan
        dup
        not
        branchIfTrue label458
        pop
        push r:this, '2kyAD'
        getMember
        push '(('
        getMember
        push r:26
        subtract
        push r:28, '(('
        getMember
        push r:28, ' ('
        getMember
        add
        lessThan
       label458:
        dup
        not
        branchIfTrue label459
        pop
        push r:this, '2kyAD'
        getMember
        push ')('
        getMember
        push r:28, ')('
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:26, 1.2
        multiply
        lessThan
       label459:
        not
        branchIfTrue label460
        push r:this, '2kyAD'
        getMember
        push '(('
        getMember
        push r:26
        add
        push 30
        add
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 50
        multiply
        add
        push 1, r:28, ';-[;H'
        callMethod
        pop
       label460:
        branch label456
       label461:
        push r:this, '2kyAD'
        getMember
        push ')('
        getMember
        push 80
        lessThan
        not
        branchIfTrue label465
        push 0
        setRegister r:29
        pop
        branch label463
       label462:
        push r:29
        increment
        setRegister r:29
        pop
       label463:
        push r:29, 0, r:this, '2kyAD'
        getMember
        push ']b'
        getMember
        subtract
        lessThan
        not
        branchIfTrue label464
        push '*1Q1,(', 1, r:this, '{==W3('
        callMethod
        setRegister r:30
        pop
        push r:30, '((', r:this, '2kyAD'
        getMember
        push '(('
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 120
        multiply
        add
        setMember
        push r:30, ')(', 16
        setMember
        push r:30, '(KpGn', 0.2, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.3
        multiply
        add
        setMember
        push r:30, '[b', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 6
        multiply
        setMember
        push r:30, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 30
        multiply
        add
        setMember
        push r:30, '849kV', 0
        setMember
        branch label462
       label464:
        push r:this, '2kyAD'
        getMember
        push ')(', 80
        setMember
        push r:this, '2kyAD'
        getMember
        push ']b', 0
        setMember
       label465:
        push '44{N'
        getVariable
        push ';qo-J('
        getMember
        dup
        not
        branchIfTrue label466
        pop
        push r:this, '2kyAD'
        getMember
        push '(('
        getMember
        push r:this, '(KA'
        getMember
        push '_x'
        getMember
        add
        push 100
        add
        push 0
        greaterThan
       label466:
        not
        branchIfTrue label467
        push 43, 90, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 30
        multiply
        add
        push r:this, '2kyAD'
        getMember
        push '-iB='
        getMember
        push ' Lw;i'
        getMember
        push 3, '-[m(M'
        getVariable
        push 'localToGlobal'
        callMethod
        setRegister r:31
        pop
        push r:31, '((', r:31, '(('
        getMember
        push 0, r:this, '(KA'
        getMember
        push '_x'
        getMember
        subtract
        add
        setMember
        push r:31, ')(', r:31, ')('
        getMember
        push 0, r:this, '(KA'
        getMember
        push '_y'
        getMember
        subtract
        add
        setMember
        push 0, '5b,-,(', 2, r:this, '70*'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:32
        pop
        push r:32, '((', r:31, '(('
        getMember
        setMember
        push r:32, ')(', r:31, ')('
        getMember
        setMember
        push r:32, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:32, '849kV', 0
        setMember
        push r:32, '(KpGn', 0.3, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.6
        multiply
        add
        setMember
        push r:32, '[b', r:this, '2kyAD'
        getMember
        push '[b'
        getMember
        push 0.5
        multiply
        setMember
        push r:32, ']b', r:this, '2kyAD'
        getMember
        push ']b'
        getMember
        push 0.5
        multiply
        setMember
       label467:
      end // of function 

      setMember
      push r:1, ' pyb5'
      function2 (r:2='6') (r:1='this')
        push r:'6', '6b', r:'6', '6b'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 0.8
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:'6', '6b', r:'6', '6b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.9, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        setMember
        push r:'6', '9;I', r:'6', '9;I'
        getMember
        push r:'6', '6b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:'6', '9;I', r:'6', '9;I'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.98, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        setMember
        push r:'6', '_rotation', r:'6', '9;I'
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '(yX{2'
      function2 (r:2='}J', r:3='+QA', r:4='+', r:5='ba') (r:1='this')
        push r:'+QA', '_rotation'
        getMember
        push 0.0174
        multiply
        push r:ba
        add
        setRegister r:6
        pop
        push r:'}J', '_x', r:'+QA', '_x'
        getMember
        push r:6, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:'+'
        multiply
        add
        setMember
        push r:'}J', '_y', r:'+QA', '_y'
        getMember
        push r:6, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:'+'
        multiply
        add
        setMember
      end // of function 

      setMember
      push r:1, '5 drP'
      function2 () (r:1='this')
        push r:this, '+QTJ_'
        getMember
        dup
        not
        branchIfTrue label468
        pop
        push r:this, '001Dk'
        getMember
        push 0
        greaterThan
        not
       label468:
        not
        branchIfTrue label469
        push 0, 'Mouse'
        getVariable
        push 'show'
        callMethod
        pop
        push r:this, '+QTJ_', FALSE
        setMember
       label469:
      end // of function 

      setMember
      push r:1, '{==W3('
      function2 (r:2='5P55') (r:1='this')
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push r:'5P55', 2, r:this, '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:3
        pop
        push r:3
        return
      end // of function 

      setMember
      push r:1, '()XG}'
      function2 (r:2='}J') (r:1='this')
        push r:'}J', '_x'
        getMember
        setRegister r:3
        pop
        push r:'}J', '_y'
        getMember
        setRegister r:4
        pop
        push r:'}J', 1, '-0]rl'
        new
        setRegister r:5
        pop
        push r:5, '((', r:3
        setMember
        push r:5, ')(', r:4
        setMember
        push 0, r:5, '4u=dZ'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '5ggDk'
      function2 (r:2='((', r:3=')(', r:4='*B') (r:1='this')
        push r:'*B', 0
        equals
        not
        branchIfTrue label470
        push UNDEF
        return
       label470:
        push r:'*B', 20
        lessThan
        not
        dup
        not
        branchIfTrue label471
        pop
        push r:this, '4,01'
        getMember
        push '}OcqB('
        getMember
        push r:'*B', 20
        subtract
        getMember
       label471:
        dup
        branchIfTrue label472
        pop
        push r:'*B', 7
        equals
        dup
        not
        branchIfTrue label472
        pop
        push r:this, '4,01'
        getMember
        push '3='
        getMember
        push 0
        getMember
        push 0
        greaterThan
       label472:
        not
        branchIfTrue label473
        push 1
        setRegister r:'*B'
        pop
       label473:
        push r:this, '69-'
        getMember
        push 0
        getMember
        push 500
        lessThan
        dup
        not
        branchIfTrue label474
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '3='
        getMember
        push 0
        getMember
        push 0
        equals
       label474:
        dup
        not
        branchIfTrue label475
        pop
        push 4, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
       label475:
        not
        branchIfTrue label476
        push 7
        setRegister r:'*B'
        pop
       label476:
        push '44{N'
        getVariable
        push '(8LH1'
        getMember
        push '4B1W(', 2, r:this, '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, ' p3z='
        new
        setRegister r:5
        pop
        push r:5, '((', r:'(('
        setMember
        push r:5, ')(', r:')('
        setMember
        push r:'*B', 1, r:5, ' (zm5'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ']qsu4('
      function2 (r:2='((', r:3=')(', r:4='-X') (r:1='this')
        push r:'-X', 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push '=ZXmL', 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '{==W3('
        callMethod
        setRegister r:5
        pop
        push r:5, '((', r:'(('
        setMember
        push r:5, ')(', r:')('
        setMember
        push r:5, ']b', -1
        setMember
        push r:5, '2VhU6', 24
        setMember
        push r:5, '-iB='
        getMember
        push '+Da3+'
        getMember
        push 'text', r:'-X', 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        toString
        setMember
        push 0, 2, 4, r:5, '-iB='
        getMember
        push '+Da3+'
        getMember
        push 4, '*r'
        getVariable
        push '1U;0'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '0Gti1(', NULL
      setMember
      push r:0, '3OhJj', 0
      setMember
      push r:0, ';qo-J(', FALSE
      setMember
      push r:0, '4MvcB', 1
      setMember
      push r:0, '3O*F2', 2
      setMember
      push r:0, '841,4', 3
      setMember
      push r:0, '[V{(6', 4
      setMember
      push r:0, '8OItb', 2
      setMember
      push r:0, '8f5fb', 2
      setMember
      push r:0, '{)1db', 3
      setMember
      push r:0, '{U0ib', 4
      setMember
      push r:0, '-hCnb', 5
      setMember
      push r:0, '(8LH1', 6
      setMember
      push r:0, '+{A i', 7
      setMember
      push r:0, '8Z=cb', 8
      setMember
      push r:0, '5;OW;', 9
      setMember
      push r:0, ';C*X2', 10
      setMember
      push r:0, '}r', 60
      setMember
      push '-[m(M'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',Hwi)'
      function2 ('-', r:2='5U4B') (r:1='this')
        push '*B'
        var
        push '*B', r:'5U4B'
        function2 () (r:1='this')
          push '*B'
          getVariable
          push 1, 'clearInterval', 1, '3Wt'
          getVariable
          push '16(VU'
          callMethod
          push UNDEF
          callMethod
          pop
          push 0, '-'
          callFunction
          pop
        end // of function 

        push 2, 'setInterval', 1, '3Wt'
        getVariable
        push '16(VU'
        callMethod
        push UNDEF
        callMethod
        setVariable
      end // of function 

      setMember
      push r:0, '}wUHz'
      function2 (r:2='=rJ', r:3='7olX7', r:4='}wUHz') (r:1='this')
        push r:'=rJ', NULL
        equals
        not
        branchIfTrue label477
        push NULL
        return
       label477:
        push r:'7olX7', 'length'
        getMember
        setRegister r:5
        pop
        push r:5, 1
        equals
        not
        branchIfTrue label478
        push r:'}wUHz', 1, r:'7olX7', 1, r:'=rJ', 'split'
        callMethod
        push 'join'
        callMethod
        return
       label478:
        push 0
        setRegister r:7
        pop
        push ''
        setRegister r:8
        pop
       label479:
        push TRUE
        not
        branchIfTrue label481
        push r:7, r:'7olX7', 2, r:'=rJ', 'indexOf'
        callMethod
        setRegister r:6
        pop
        push r:6, -1
        equals
        not
        branchIfTrue label480
        branch label481
       label480:
        push r:8, r:6, r:7, 2, r:'=rJ', 'slice'
        callMethod
        push r:'}wUHz'
        add
        add
        setRegister r:8
        pop
        push r:6, r:5
        add
        setRegister r:7
        pop
        branch label479
       label481:
        push r:8, r:7, 1, r:'=rJ', 'substring'
        callMethod
        add
        return
      end // of function 

      setMember
      push r:0, '* I51'
      function2 (r:2='=rJ') (r:1='this')
        push 0, 'Array'
        new
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        push r:'=rJ', 'length'
        getMember
        setRegister r:6
        pop
        push 0
        setRegister r:3
        pop
        branch label483
       label482:
        push r:3
        increment
        setRegister r:3
        pop
       label483:
        push r:3, r:6
        lessThan
        not
        branchIfTrue label488
        push r:3, 1, r:'=rJ', 'charCodeAt'
        callMethod
        setRegister r:7
        pop
        push r:7, 10
        equals
        dup
        branchIfTrue label484
        pop
        push r:7, 13
        equals
       label484:
        not
        branchIfTrue label487
        push r:3, r:5, 2, r:'=rJ', 'slice'
        callMethod
        push 1, r:4, 'push'
        callMethod
        pop
        push r:7, 13
        equals
        dup
        not
        branchIfTrue label485
        pop
        push r:3, 1
        add
        push 1, r:'=rJ', 'charCodeAt'
        callMethod
        push 10
        equals
       label485:
        not
        branchIfTrue label486
        push r:3
        increment
        setRegister r:3
        pop
       label486:
        push r:3, 1
        add
        setRegister r:5
        pop
       label487:
        branch label482
       label488:
        push r:3, r:5, 2, r:'=rJ', 'slice'
        callMethod
        push 1, r:4, 'push'
        callMethod
        pop
        push r:4
        return
      end // of function 

      setMember
      push r:0, ',JBe0'
      function2 (r:2=';p(') (r:1='this')
        push 0, r:';p(', '],lYS'
        callMethod
        setRegister r:4
        pop
        push r:4, 'length'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:3
        pop
        branch label490
       label489:
        push r:3
        increment
        setRegister r:3
        pop
       label490:
        push r:3, r:5
        lessThan
        not
        branchIfTrue label491
        push r:5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:6
        pop
        push r:5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:7
        pop
        push r:4, r:6
        getMember
        setRegister r:8
        pop
        push r:4, r:6, r:4, r:7
        getMember
        setMember
        push r:4, r:7, r:8
        setMember
        branch label489
       label491:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '4UQ(1'
      function2 (r:2='}J') (r:1='this')
        push 0
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
       label492:
        push r:'}J', '_parent'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label493
        push r:3, r:'}J', '_x'
        getMember
        add
        setRegister r:3
        pop
        push r:4, r:'}J', '_y'
        getMember
        add
        setRegister r:4
        pop
        push r:'}J', '_parent'
        getMember
        setRegister r:'}J'
        pop
        branch label492
       label493:
        push '{2', r:3, '}2', r:4, 2
        initObject
        return
      end // of function 

      setMember
      push r:0, ' Ly7b'
      function2 (r:2='((', r:3='{nq3-(') (r:1='this')
        push r:'(('
        toString
        setRegister r:4
        pop
       label494:
        push r:4, 'length'
        getMember
        push r:'{nq3-('
        lessThan
        not
        branchIfTrue label495
        push '0', r:4
        add
        setRegister r:4
        pop
        branch label494
       label495:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '7g,ln'
      function2 (r:2='(') (r:1='this')
        push 0
        setRegister r:3
        pop
        push r:'(', 'length'
        getMember
        push 1
        subtract
        setRegister r:4
        pop
        branch label497
       label496:
        push r:4
        decrement
        setRegister r:4
        pop
       label497:
        push r:4, 0
        lessThan
        not
        not
        branchIfTrue label498
        push r:3, r:'(', r:4
        getMember
        add
        setRegister r:3
        pop
        branch label496
       label498:
        push r:3, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
       label499:
        push r:3, r:'(', r:4
        getMember
        lessThan
        not
        not
        branchIfTrue label500
        push r:3, r:'(', r:4
        getMember
        subtract
        setRegister r:3
        pop
        push r:4
        increment
        setRegister r:4
        pop
        branch label499
       label500:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '4*fgv'
      function2 (r:2='*QA', r:3='+QA') (r:1='this')
        push r:'*QA', 1, r:'*QA', 'getBounds'
        callMethod
        setRegister r:4
        pop
        push r:'*QA', 1, r:'+QA', 'getBounds'
        callMethod
        setRegister r:5
        pop
        push r:4, 'xMin'
        getMember
        push r:4, 'xMax'
        getMember
        add
        push 2
        divide
        push r:5, 'xMin'
        getMember
        push r:5, 'xMax'
        getMember
        add
        push 2
        divide
        subtract
        setRegister r:6
        pop
        push r:4, 'yMin'
        getMember
        push r:4, 'yMax'
        getMember
        add
        push 2
        divide
        push r:5, 'yMin'
        getMember
        push r:5, 'yMax'
        getMember
        add
        push 2
        divide
        subtract
        setRegister r:7
        pop
        push r:6, r:6
        multiply
        push r:7, r:7
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        return
      end // of function 

      setMember
      push r:0, '16KA'
      function2 ('}J') (r:1='this')
        push '(', 0, 'Array'
        new
        varEquals
        function2 (r:2='4') (r:1='this')
          push '}J'
          getVariable
          push r:'4'
          getMember
          setRegister r:3
          pop
          push r:3, 1, '3Wt'
          getVariable
          push ')goHJ('
          callMethod
          push 'movieclip'
          equals
          dup
          not
          branchIfTrue label501
          pop
          push r:3, '_parent'
          getMember
          push '}J'
          getVariable
          equals
         label501:
          not
          branchIfTrue label502
          push r:3, 1, '('
          getVariable
          push 'push'
          callMethod
          pop
         label502:
        end // of function 

        push '}J'
        getVariable
        push 2, '3Wt'
        getVariable
        push '9ss9+'
        callMethod
        pop
        push '('
        getVariable
        return
      end // of function 

      setMember
      push r:0, 'localToGlobal'
      function2 (r:2='}J', r:3='((', r:4=')(') (r:1='this')
        push 0, '19{O'
        new
        setRegister r:5
        pop
        push r:'((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:5, 1, r:'}J', 'localToGlobal'
        callMethod
        pop
        push '((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push ')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push 2
        initObject
        return
      end // of function 

      setMember
      push r:0, 'globalToLocal'
      function2 (r:2='}J', r:3='((', r:4=')(') (r:1='this')
        push 0, '19{O'
        new
        setRegister r:5
        pop
        push r:'((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:5, 1, r:'}J', 'globalToLocal'
        callMethod
        pop
        push '((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push ')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push 2
        initObject
        return
      end // of function 

      setMember
      push r:0, '{Gq]-'
      function2 () (r:1='this')
        push '$r', '$h', '$w', '$y', '$x', '$box', '$matrixType', '$radial', '$linear', 9
        initArray
        setRegister r:2
        pop
        push '-[m(M'
        getVariable
        push ']cY[2', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:3
        pop
        branch label504
       label503:
        push r:3
        increment
        setRegister r:3
        pop
       label504:
        push r:3, r:2, 'length'
        getMember
        lessThan
        not
        branchIfTrue label505
        push r:2, r:3
        getMember
        setRegister r:4
        pop
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push r:3, 1, 1, r:4, 'substring'
        callMethod
        setMember
        branch label503
       label505:
      end // of function 

      setMember
      push r:0, 'beginGradientFill'
      function2 (r:2='}J', r:3=' Wo02', r:4='=cKzE(', r:5='8)JNX', r:6='7eq8)', r:7='matrix') (r:1='this')
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push NULL
        equals
        not
        branchIfTrue label506
        push 0, '-[m(M'
        getVariable
        push '{Gq]-'
        callMethod
        pop
       label506:
        push 0, '19{O'
        new
        setRegister r:8
        pop
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 3
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 2
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, '(('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 4
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, ')('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 5
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, ' ('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 6
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, '1'
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 7
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, '='
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 8
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:8, r:'7eq8)', r:'8)JNX', r:'=cKzE(', r:' Wo02'
        not
        branchIfTrue label507
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 0
        getMember
        branch label508
       label507:
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 1
        getMember
       label508:
        push 5, r:'}J', 'beginGradientFill'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, ',[A(', 1, 1, '$x', 'substring'
      callMethod
      setMember
      push r:0, '-[A(', 1, 1, '$y', 'substring'
      callMethod
      setMember
      push r:0, ']cY[2', NULL
      setMember
      push '0hF['
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '-SjAs'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '*]Q5}', 5
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
        push 0
        setRegister r:3
        pop
        branch label510
       label509:
        push r:3
        increment
        setRegister r:3
        pop
       label510:
        push r:3, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6y392'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label512
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '6y392'
        getMember
        push r:3
        getMember
        setRegister r:4
        pop
        push r:4, '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:4, ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        add
        push 20
        lessThan
        not
        branchIfTrue label511
        push r:this, 1, r:4, '565'
        callMethod
        pop
        push 0, r:this, '9T54'
        callMethod
        pop
        branch label512
       label511:
        branch label509
       label512:
        push 0, r:this, '1MK(H'
        callMethod
        pop
        push 0, r:this, '(w0dj'
        callMethod
        pop
        push 40, 1, r:this, '[j0D-'
        callMethod
        not
        branchIfTrue label513
        push 0, r:this, '9T54'
        callMethod
        pop
       label513:
      end // of function 

      setMember
      push r:1, '1MK(H'
      function2 () (r:1='this')
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '+QTJ_'
        getMember
        not
        not
        branchIfTrue label514
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '(KA'
        getMember
        push '_xmouse'
        getMember
        push 8
        add
        setRegister r:2
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '(KA'
        getMember
        push '_ymouse'
        getMember
        push 8
        add
        setRegister r:3
        pop
        push r:this, '(('
        getMember
        push r:2
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:this, ')('
        getMember
        push r:3
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        add
        push 15
        lessThan
        not
        branchIfTrue label514
        push 0, 'Mouse'
        getVariable
        push 'hide'
        callMethod
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '+QTJ_', TRUE
        setMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '001Dk', 50
        setMember
        push '9d1xH', 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '{==W3('
        callMethod
        setRegister r:4
        pop
        push r:4, '((', r:2, 8
        add
        setMember
        push r:4, ')(', r:3, 8
        add
        setMember
        push r:4, ']b', -4
        setMember
        push r:4, '[b', r:this, '[b'
        getMember
        push 0.5
        multiply
        setMember
        push r:4, '6b', 8, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:4, '2VhU6', 30, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:4, '849kV', 0
        setMember
        push r:4, '(KpGn', 0.6
        setMember
        push r:4, '9YFAA', TRUE
        setMember
        push r:4, ']oH', 8
        setMember
        push 0, r:this, '9T54'
        callMethod
        pop
        push UNDEF
        return
       label514:
      end // of function 

      setMember
      push r:1, '(w0dj'
      function2 () (r:1='this')
        push r:this, '[b'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label515
        push TRUE, r:this, ')('
        getMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '(KA'
        getMember
        push '_y'
        getMember
        add
        push r:this, '(('
        getMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '(KA'
        getMember
        push '_x'
        getMember
        add
        push 3, '*r'
        getVariable
        push '+-(0'
        getMember
        push '2kyAD'
        getMember
        push '-iB='
        getMember
        push 'hitTest'
        callMethod
        not
        branchIfTrue label515
        push 0, r:this, '=4PV0'
        callMethod
        pop
       label515:
      end // of function 

      setMember
      push r:1, '=4PV0'
      function2 () (r:1='this')
        push 0, r:this, '[b'
        getMember
        subtract
        push 0, r:this, ']b'
        getMember
        subtract
        push 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 0.4
        multiply
        add
        setRegister r:2
        pop
        push r:this, '[b'
        getMember
        push r:this, '[b'
        getMember
        multiply
        push r:this, ']b'
        getMember
        push r:this, ']b'
        getMember
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        push 0.5
        multiply
        setRegister r:3
        pop
        push ']7vdC(', 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '{==W3('
        callMethod
        setRegister r:4
        pop
        push r:4, '((', r:this, '(('
        getMember
        setMember
        push r:4, ')(', r:this, ')('
        getMember
        setMember
        push r:4, '[b', r:2, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:3
        multiply
        setMember
        push r:4, ']b', r:2, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:3
        multiply
        setMember
        push r:4, '6b', 8, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:4, '2VhU6', 30, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:4, '849kV', 0
        setMember
        push r:4, '(KpGn', 0.6
        setMember
        push 0, r:this, '9T54'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '2u=W='
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '-SjAs'
        getMember
        push 'remove'
        callMethod
        pop
      end // of function 

      setMember
      push '980Sb'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '}-B2'
      function2 (r:2='}J') (r:1='this')
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        not
        branchIfTrue label516
        push UNDEF
        return
       label516:
        push '980Sb'
        getVariable
        push ')2fr3', r:'}J'
        setMember
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        branchIfTrue label517
        push '980Sb'
        getVariable
        push 'mode', '980Sb'
        getVariable
        push ')2fr3'
        getMember
        push 1, '44{N'
        new
        setMember
       label517:
      end // of function 

      setMember
      push r:0, '0D 6'
      function2 () (r:1='this')
        push 0, '{-kxL'
        getVariable
        push '87vE7('
        callMethod
        pop
        push 0, '980Sb'
        getVariable
        push 'mode'
        getMember
        push '0D 6'
        callMethod
        pop
      end // of function 

      setMember
    end // of frame 0
  end // of defineMovieClip 476
  
  exportAssets
    476 as '90D*'
  end // of exportAssets
end
