movie 'e89904ef7f70967ce0cb5bff92ea4c50.swf' compressed // flash 8, total frames: 1, frame rate: 40 fps, 700x480 px


  defineMovieClip 2 // total frames: 1
  end // of defineMovieClip 2
  
  exportAssets
    2 as ';+'
  end // of exportAssets

  defineMovieClip 4 // total frames: 1
  end // of defineMovieClip 4
  
  exportAssets
    4 as ';VcJC'
  end // of exportAssets

  defineMovieClip 6 // total frames: 1
  end // of defineMovieClip 6
  
  exportAssets
    6 as ',tiXV'
  end // of exportAssets

  defineMovieClip 7 // total frames: 1
  end // of defineMovieClip 7
  
  exportAssets
    7 as '(aVB+'
  end // of exportAssets

  defineMovieClip 8 // total frames: 1
  end // of defineMovieClip 8
  
  exportAssets
    8 as ' t6cM'
  end // of exportAssets

  defineMovieClip 10 // total frames: 13
  end // of defineMovieClip 10
  
  exportAssets
    10 as '(v7VD('
  end // of exportAssets

  defineMovieClip 12 // total frames: 1
  end // of defineMovieClip 12
  
  exportAssets
    12 as '}XcJC'
  end // of exportAssets

  defineMovieClip 14 // total frames: 1
  end // of defineMovieClip 14

  defineMovieClip 80 // total frames: 72

    frame 71
      push ''
      removeClip
    end // of frame 71
  end // of defineMovieClip 80
  
  exportAssets
    80 as '=ksaA'
  end // of exportAssets

  defineMovieClip 84 // total frames: 1
  end // of defineMovieClip 84
  
  exportAssets
    84 as '6M0U-('
  end // of exportAssets

  defineMovieClip 86 // total frames: 1
  end // of defineMovieClip 86

  defineMovieClip 89 // total frames: 1
  end // of defineMovieClip 89

  defineMovieClip 91 // total frames: 1
  end // of defineMovieClip 91

  defineMovieClip 93 // total frames: 1
  end // of defineMovieClip 93

  defineMovieClip 95 // total frames: 1
  end // of defineMovieClip 95

  defineMovieClip 97 // total frames: 1
  end // of defineMovieClip 97

  defineMovieClip 99 // total frames: 18

    frame 17
      gotoFrame 0
      play
    end // of frame 17
  end // of defineMovieClip 99
  
  exportAssets
    99 as '5(oMC'
  end // of exportAssets

  defineMovieClip 101 // total frames: 1
  end // of defineMovieClip 101

  defineMovieClip 102 // total frames: 1
  end // of defineMovieClip 102

  defineMovieClip 104 // total frames: 100
  end // of defineMovieClip 104
  
  exportAssets
    104 as '[N]0p'
  end // of exportAssets

  defineMovieClip 106 // total frames: 1
  end // of defineMovieClip 106

  defineMovieClip 107 // total frames: 9

    frame 8
      push 0.0, '+KD'
      getVariable
      push '9T54'
      callMethod
      pop
    end // of frame 8
  end // of defineMovieClip 107
  
  exportAssets
    107 as '7LeMK('
  end // of exportAssets

  defineMovieClip 109 // total frames: 2
  end // of defineMovieClip 109
  
  exportAssets
    109 as '-Ms=u'
  end // of exportAssets

  defineMovieClip 113 // total frames: 3
  end // of defineMovieClip 113
  
  exportAssets
    113 as '*NdbB('
  end // of exportAssets

  defineMovieClip 115 // total frames: 1
  end // of defineMovieClip 115
  
  exportAssets
    115 as '-O_ y'
  end // of exportAssets

  defineMovieClip 117 // total frames: 1
  end // of defineMovieClip 117

  defineMovieClip 118 // total frames: 1
  end // of defineMovieClip 118
  
  exportAssets
    118 as '*hCfw'
  end // of exportAssets

  defineMovieClip 121 // total frames: 1
  end // of defineMovieClip 121

  defineMovieClip 122 // total frames: 1
  end // of defineMovieClip 122
  
  exportAssets
    122 as '-3[5D'
  end // of exportAssets

  defineMovieClip 124 // total frames: 1
  end // of defineMovieClip 124

  defineMovieClip 128 // total frames: 1
  end // of defineMovieClip 128

  defineMovieClip 129 // total frames: 1
  end // of defineMovieClip 129
  
  exportAssets
    129 as ' uK=F'
  end // of exportAssets

  defineMovieClip 137 // total frames: 7
  end // of defineMovieClip 137
  
  exportAssets
    137 as ']{kRA'
  end // of exportAssets

  defineMovieClip 165 // total frames: 27

    frame 0
      push '', 5
      getProperty
      push 1
      subtract
      random
      push 2
      add
      gotoAndPlay
    end // of frame 0
  end // of defineMovieClip 165

  defineMovieClip 166 // total frames: 26
  end // of defineMovieClip 166

  defineMovieClip 168 // total frames: 17
  end // of defineMovieClip 168

  defineMovieClip 169 // total frames: 5
  end // of defineMovieClip 169
  
  exportAssets
    169 as '{n{]q'
  end // of exportAssets

  defineMovieClip 170 // total frames: 1
  end // of defineMovieClip 170
  
  exportAssets
    170 as '[shQC'
  end // of exportAssets

  defineMovieClip 192 // total frames: 21
  end // of defineMovieClip 192
  
  exportAssets
    192 as '{md;C'
  end // of exportAssets

  defineMovieClip 194 // total frames: 1
  end // of defineMovieClip 194
  
  exportAssets
    194 as '5a93H'
  end // of exportAssets

  defineMovieClip 196 // total frames: 1
  end // of defineMovieClip 196
  
  exportAssets
    196 as '9[d;C'
  end // of exportAssets

  defineMovieClip 197 // total frames: 1

    frame 0
      constants '-0]rl', '-iB=', '+KD', '*r', '+-(0', '7Qe;6', 'push', '((', ')(', '_x', '_y', 'prototype', '87vE7(', '9T54', 'removeMovieClip', 'remove', '4u=dZ', '}1A{_', 'Math', 'sqrt', ')153L', 'atan2', '2sngh', '2K', '[j0D-', '=OA', '*OA', ',v0X', '+{eA+', '[b', ']b', '6b', '_rotation', '{-kxL', '-V;B', '(KpGn', '22+0', '-jI0', 'pow', '1o8jJ', '-fRSr', '1Jr-,(', 'call', ';zS4((', '8A1t=', '44{N', '[j9fb', ']{kRA', '32', '*=_p_', '86{p(', '(6IbI(', '{Cs', '[7qyn', '09uM1(', '3Wt', 'callback', '9O*r', '=kIA', ']9xe=(', '_totalframes', 'random', '(H5 S', '0Suis', '[X', '8o*DE(', '2VhU6', ')_()', '{*Kuf', ',KSpS', '_currentframe', '3WUPC(', '0 5 }', '-Ms=u', '{==W3(', '3BjX_', '849kV', '4RW6x', '0Yj1', '2+s]', 'cos', 'sin', 'abs', '2u=W=', 'gotoAndStop', '7{Qr,', 'flash', 'Object', 'filters', '{lN=R', '}-B2', ';CYOh', '=', '0', ')', 'Color', 'ra', 'ga', 'ba', 'aa', 'rb', 'gb', 'bb', 'ab', 'setTransform', 'max', 'min', ')GiA', '],pz1(', 'length', '*Fgc (', 'BlurFilter', 'blurX', 'blurY', '2ya 0(', '(', '{mMU7(', '4CDwp', 'geom', 'Matrix', '_yscale', '_xscale', 'scale', 'rotate', 'translate', '_alpha', 'ColorTransform', 'blendMode', 'draw', '5tjEm', '=iw,6(', 'Rectangle', 'display', 'BitmapData', 'height', 'width', 'Point', 'copyPixels', 'dispose', '3iRpS', '2QF=}', ',ETFH', ';ndCG', '-Q)9)', '5=,xD', '*G6KR', '[=-gL', '+++F7', ',VkV5', '6YA3F', ')sbN[', '*e[', '8R6wa', ',i0 [', '*DzW', ',DBRf', '3V[D(', '3GWsN', '7b', '8I0t8(', '5b)bA(', '+7U K', ')2fr3', '}Zms3', 'Array', ']1sj+', '-fC3a', '9oK', '7-,', ']bu40', '_name', 'swapDepths', 'attachMC', '18wU*', 'createEmptyMC', '(GbB}', '+2NA', 'getDepth', 'floor', '}oQA7', 'unshift', '08M8', 'clear', '9(K ;', ',}2X (', '] ktA', '5R', '6R', '0P', '1P', '(j;o7', ')9 9', '77ldJ(', '*YT,T', '1HwWD', '4plQ5', 'getTimer', ';ILSy', '3R,QM', ';y}-6(', '-)Xd+', '[Ad;n', '6GI,F', 'fps', '(WBt)', ']}Ou;(', '3I0pG', '{;7F4', '8U(wu', '}[cpB', '9xv]A', '{yQ=Q', '+,W', '2y+dV', '(tBee', '3)i[=', ' J3IC', '[6jRc', ')8Fyj', '-5;Q', ';ZA(', '-=4q', '0=4q', 'identity', '$tx', 'substring', '$ty', '9)DM2', '*B', '+xiq*', '=VJ', ',p]X)', ',l3O-', '4600', '{DfiG', ';-[;H', '=Pc9E(', '2e{I', '6xtJ', '*NdbB(', '7LeMK(', ')lMLM', '{n{]q', '0tJ', '*TlKy', '6y392', ')gv94', 'shift', 'decal error!', ']{i', 'print', 'ox: ', 'oy: ', 'Oh mon dieu, c\'est affreux!', 'trace', '=)0hg', '}Q)0u', '6,Ld)(', '=Ua)Z', '-w2c;(', ' Sk9H(', '(VKB', ']1dV=', '{YJfb', '0co;I', '6LkQ1', ';VcJC', '(W3', '*6nO6(', '(KA', '-X', '[a', '3UE]s', '5Hy6b', '*tHy-(', 'ceil', '*hCfw', ';+', 'attachBitmap', '+st4Z', '1T=', '2t*({', '9;I', '[wBA,', '[N]0p', '-p3G*', '4gWwY', ' uK=F', '+(*', '60-', ']e9J,', '[shQC', ';C*X2', '=C{N,', '0D 6', '*n9Y9(', '{)59', '1d', '-X9I(', '_height', '{5(=D(', 'duplicate', '*=K+A(', '=ksaA', 'GlowFilter', 'color', '-_X}5', '7T4cF(', '{_7eI(', '*CgqK(', 'Key', 'LEFT', 'isDown', 'RIGHT', 'PI', '_xmouse', '_ymouse', '=2AUB', 'DOWN', 'UP', '6BiO)', ' 3e_O', '23c;]', 'getPixel32', '},J2', '(aVB+', '6M0U-(', '1Z 6', '}XcJC', 'setMask', '7bJ', '_width', '(v7VD(', '72}8I(', ')ZB3a', 'splice', '[6l9t', 'list', '-[m(M', 'localToGlobal', 'globalToLocal', 'getBounds', 'xMin', 'xMax', 'yMin', 'yMax', 'hitTest', '3{Htb', '{md;C', '8(=l', '-3[5D', '$a', 'getVar', '_visible', '9t1r1', 'onKeyDown', ']668C(', 'onKeyUp', '=(D=5', 'addListener', 'getCode', 'SPACE', 'ENTER', ']}ZkD(', ')Q;,A(', '=rV+L(', '{eSu)', 'First : ', ', ', '4MvcB', '5(oMC', ']MM75(', '-jFD', '}1=G9', '2EGlI(', '+h9IY', ' t6cM', '=CL', '3GF', '-O_ y', '88rS(', ',tiXV', '4EUbv', ',Hwi)', 'clearInterval', 'getGlobal', '-', 'setInterval', '}wUHz', 'split', 'join', '', 'indexOf', 'slice', '* I51', 'charCodeAt', ',JBe0', '4UQ(1', '_parent', '{2', '}2', ' Ly7b', '0', '7g,ln', '4*fgv', '16KA', '}J', '_typeof', 'movieclip', 'forin', '19{O', ',[A(', 'set', '-[A(', 'get', '{Gq]-', '$r', '$h', '$w', '$y', '$x', '$box', '$matrixType', '$radial', '$linear', ']cY[2', 'beginGradientFill', ' (', '1', '980Sb', '(kJ+1(', 'mode'  
      push '-0]rl'
      function2 (r:2='}J') (r:1='this')
        push r:this, '-iB=', r:'}J'
        setMember
        push r:this, '-iB='
        getMember
        push '+KD', r:this
        setMember
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '7Qe;6'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '((', 0
        setMember
        push r:this, ')(', 0
        setMember
        push r:this, '-iB='
        getMember
        push '_x', -1000
        setMember
        push r:this, '-iB='
        getMember
        push '_y', -1000
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this')
        push r:this, '-iB='
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '-iB='
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this')
        push 0, r:this, '-iB='
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '7Qe;6'
        getMember
        push 'remove'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '4u=dZ'
      function2 () (r:1='this')
        push r:this, '-iB='
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '-iB='
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '}1A{_'
      function2 (r:2='8') (r:1='this')
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:3
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:4
        pop
        push r:3, r:3
        multiply
        push r:4, r:4
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        return
      end // of function 

      setMember
      push r:1, ')153L'
      function2 (r:2='8') (r:1='this')
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:3
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:4
        pop
        push r:3, r:4, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        return
      end // of function 

      setMember
      push r:1, '2sngh'
      function2 (r:2='8', r:3='*', r:4='62=') (r:1='this')
        push r:'8', 1, r:this, ')153L'
        callMethod
        setRegister r:5
        pop
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:6
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:7
        pop
        push r:this, '((', r:this, '(('
        getMember
        push r:'62=', r:6, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push r:'62=', r:7, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
      end // of function 

      setMember
      push r:1, '[j0D-'
      function2 (r:2='6') (r:1='this')
        push r:this, '(('
        getMember
        push 0, r:'6'
        subtract
        lessThan
        dup
        branchIfTrue label1
        pop
        push r:this, '(('
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        push r:'6'
        add
        greaterThan
       label1:
        dup
        branchIfTrue label2
        pop
        push r:this, ')('
        getMember
        push 0, r:'6'
        subtract
        lessThan
       label2:
        dup
        branchIfTrue label3
        pop
        push r:this, ')('
        getMember
        push '*r'
        getVariable
        push '*OA'
        getMember
        push r:'6'
        add
        greaterThan
       label3:
        return
      end // of function 

      setMember
      push ',v0X'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '+{eA+', 0.95
        setMember
        push r:this, '[b', 0
        setMember
        push r:this, ']b', 0
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '-0]rl'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, '6b'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label4
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '-iB='
        getMember
        push '_rotation'
        getMember
        push r:this, '6b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label4:
        push r:this, '(KpGn'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label5
        push r:this, '[b', r:this, '[b'
        getMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '22+0'
        getMember
        push r:this, '(KpGn'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '-jI0'
        getMember
        push r:this, '(KpGn'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label5:
        push r:this, '+{eA+'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label6
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push r:this, '+{eA+'
        getMember
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:3
        pop
        push r:this, '[b', r:this, '[b'
        getMember
        push r:3
        multiply
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:3
        multiply
        setMember
       label6:
        push r:this, '1o8jJ'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label7
        push 0, r:this, '1o8jJ'
        getMember
        push '87vE7('
        callMethod
        pop
        branch label8
       label7:
        push r:this, '((', r:this, '(('
        getMember
        push r:this, '[b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push r:this, ']b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label8:
        push r:this, '-fRSr'
        getMember
        not
        branchIfTrue label9
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '[b'
        getMember
        push r:this, ']b'
        getMember
        push 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        push 0.0174
        divide
        setMember
       label9:
        push r:this, 1, '1Jr-,('
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ';zS4(('
      function2 (r:2='8', r:3='*', r:4='62=') (r:1='this')
        push r:'8', 1, r:this, ')153L'
        callMethod
        setRegister r:5
        pop
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:6
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:7
        pop
        push r:this, '[b', r:this, '[b'
        getMember
        push r:'62=', r:6, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:'62=', r:7, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
      end // of function 

      setMember
      push '1Jr-,(', '-0]rl'
      getVariable
      push 'prototype'
      getMember
      push '87vE7('
      getMember
      setVariable
      push '8A1t='
      function2 (r:3='}J') (r:1='this', r:2='super')
        push '44{N'
        getVariable
        push '[j9fb'
        getMember
        push ']{kRA', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:'}J'
        pop
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '+{eA+', 0.98
        setMember
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '86{p('
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '1o8jJ', r:this, 1, '(6IbI('
        new
        setMember
        push r:this, '1o8jJ'
        getMember
        push '+{eA+', 0.5
        setMember
        push 4, '8A1t='
        getVariable
        push '{Cs'
        getMember
        push 2, r:this, '1o8jJ'
        getMember
        push '[7qyn'
        callMethod
        pop
        push r:this, '1o8jJ'
        getMember
        push '09uM1(', '09uM1(', r:this, 2, '3Wt'
        getVariable
        push 'callback'
        callMethod
        setMember
        push r:this, '9O*r', 0
        setMember
        push r:this, '=kIA', 1
        setMember
        push 30, 5, 2, r:this, ']9xe=('
        callMethod
        pop
        push r:this, '-iB='
        getMember
        push '_totalframes'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        add
        push 1, r:this, '(H5 S'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '0Suis'
      function2 () (r:1='this')
        push r:this, '=kIA', 2
        setMember
        push r:this, '+{eA+', 0.95
        setMember
        push r:this, '[X', 0.4, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.5
        multiply
        add
        setMember
        push r:this, '8o*DE(', 200
        setMember
        push r:this, '2VhU6', 0
        setMember
        push 15, 15, 2, r:this, ']9xe=('
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push 1
        strictEquals
        branchIfTrue label10
        push r:0, 2
        strictEquals
        branchIfTrue label12
        branch label16
       label10:
        push r:this, '[X', 0.6
        setMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push ')_()'
        getMember
        push 1, r:this, '{*Kuf'
        callMethod
        pop
        push '((', '*r'
        getVariable
        push ',KSpS'
        getMember
        push 0.5
        multiply
        push ')(', '*r'
        getVariable
        push ',KSpS'
        getMember
        push 0.5
        multiply
        push 2
        initObject
        push 1, r:this, '}1A{_'
        callMethod
        push 100
        lessThan
        not
        branchIfTrue label11
        push 0, r:this, '0Suis'
        callMethod
        pop
        push r:this, '-iB='
        getMember
        push '_currentframe'
        getMember
        push 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '3WUPC('
        getMember
        push 'push'
        callMethod
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '0 5 }'
        getMember
        not
        not
        branchIfTrue label11
        push 0, r:this, '9T54'
        callMethod
        pop
       label11:
        branch label16
       label12:
        push '((', '*r'
        getVariable
        push ',KSpS'
        getMember
        push 0.5
        multiply
        push ')(', '*r'
        getVariable
        push ',KSpS'
        getMember
        push 0.5
        multiply
        push 2
        initObject
        setRegister r:3
        pop
        push r:3, 1, r:this, '{*Kuf'
        callMethod
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.2
        lessThan
        dup
        not
        branchIfTrue label13
        pop
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 1.4
        lessThan
       label13:
        not
        branchIfTrue label14
        push '-Ms=u', 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '{==W3('
        callMethod
        setRegister r:4
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.5
        multiply
        setRegister r:5
        pop
        push r:4, '((', r:this, '(('
        getMember
        setMember
        push r:4, ')(', r:this, ')('
        getMember
        setMember
        push r:4, '[b', r:this, '[b'
        getMember
        push r:5
        multiply
        setMember
        push r:4, ']b', r:this, ']b'
        getMember
        push r:5
        multiply
        setMember
        push 100, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 100
        multiply
        add
        push 1, r:4, '3BjX_'
        callMethod
        pop
        push r:4, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:4, '849kV', 0
        setMember
       label14:
        push r:this, '8o*DE('
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label15
        push r:this, '8o*DE(', r:this, '8o*DE('
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '8o*DE('
        getMember
        push 0
        lessThan
        not
        branchIfTrue label15
        push r:this, '8o*DE(', NULL
        setMember
        push r:this, '1o8jJ', NULL
        setMember
       label15:
        branch label16
       label16:
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '{*Kuf'
      function2 (r:2='}CL') (r:1='this')
        push 3.14, r:'}CL', 1, r:this, ')153L'
        callMethod
        push r:this, '9O*r'
        getMember
        subtract
        push 2, '*r'
        getVariable
        push '0Yj1'
        callMethod
        setRegister r:3
        pop
        push r:this, '9O*r', r:this, '9O*r'
        getMember
        push '8A1t='
        getVariable
        push '2+s]'
        getMember
        push r:3, 0.2
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        push 0, '8A1t='
        getVariable
        push '2+s]'
        getMember
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
        push r:this, '[b', r:this, '[b'
        getMember
        push r:this, '9O*r'
        getMember
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:this, '[X'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:this, '9O*r'
        getMember
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:this, '[X'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
      end // of function 

      setMember
      push r:1, '09uM1('
      function2 (r:2='((', r:3=')(') (r:1='this')
        push r:this, '[b'
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:this, ']b'
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        add
        push 7
        greaterThan
        not
        branchIfTrue label17
        push 10, r:this, '[b'
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        add
        push r:this, ']b'
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push 3
        multiply
        add
        push 5, 2, r:this, ']9xe=('
        callMethod
        pop
       label17:
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '86{p('
        getMember
        push 'remove'
        callMethod
        pop
        push r:this, 1, '2u=W='
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ']9xe=('
      function2 (r:2='0o()', r:3='}m6') (r:1='this')
        push r:this, '6b', r:'0o()', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push r:'}m6'
        multiply
        add
        push 2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        multiply
        setMember
      end // of function 

      setMember
      push r:1, '(H5 S'
      function2 (r:2=')7') (r:1='this')
        push r:')7'
        toString
        push 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
      end // of function 

      setMember
      push '2u=W=', '-0]rl'
      getVariable
      push 'prototype'
      getMember
      push '9T54'
      getMember
      setVariable
      push '4RW6x', ',v0X'
      getVariable
      push 'prototype'
      getMember
      push '87vE7('
      getMember
      setVariable
      push r:0, '2+s]', 0.4
      setMember
      push r:0, '{Cs', 5
      setMember
      push r:0, '7{Qr,', 0.5
      setMember
      push 'flash'
      getVariable
      not
      not
      branchIfTrue label18
      push 'flash', 0, 'Object'
      new
      setVariable
     label18:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      not
      not
      branchIfTrue label19
      push 'flash'
      getVariable
      push 'filters', 0, 'Object'
      new
      setMember
     label19:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      push '{lN=R'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setMember
      push '*r'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '}-B2'
      function2 () (r:1='this')
      end // of function 

      setMember
      push r:0, ';CYOh'
      function2 (r:2='}J', r:3='3GF', r:4='(v+') (r:1='this')
        push '=', r:'(v+', 16
        shiftRight
        push '0', r:'(v+', 8
        shiftRight
        push 255
        bitwiseAnd
        push ')', r:'(v+', 255
        bitwiseAnd
        push 3
        initObject
        setRegister r:5
        pop
        push r:'}J', 1, 'Color'
        new
        setRegister r:6
        pop
        push r:'3GF', 100
        divide
        setRegister r:7
        pop
        push 'ra', 100, r:'3GF'
        subtract
        int
        push 'ga', 100, r:'3GF'
        subtract
        int
        push 'ba', 100, r:'3GF'
        subtract
        int
        push 'aa', 100, 'rb', r:7, r:5, '='
        getMember
        multiply
        int
        push 'gb', r:7, r:5, '0'
        getMember
        multiply
        int
        push 'bb', r:7, r:5, ')'
        getMember
        multiply
        int
        push 'ab', 0, 8
        initObject
        setRegister r:8
        pop
        push r:8, 1, r:6, 'setTransform'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '2K'
      function2 (r:2='(', r:3=')', r:4='*') (r:1='this')
        push r:'*', r:')', r:'(', 2, 'Math'
        getVariable
        push 'max'
        callMethod
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        return
      end // of function 

      setMember
      push r:0, ')GiA'
      function2 (r:2='}', r:3='6lA') (r:1='this')
       label20:
        push r:'}', r:'6lA'
        lessThan
        not
        not
        branchIfTrue label21
        push r:'}', r:'6lA'
        subtract
        setRegister r:'}'
        pop
        branch label20
       label21:
        push r:'}', 0
        lessThan
        not
        branchIfTrue label22
        push r:'}', r:'6lA'
        add
        setRegister r:'}'
        pop
        branch label21
       label22:
        push r:'}'
        return
      end // of function 

      setMember
      push r:0, '0Yj1'
      function2 (r:2='}', r:3='6lA') (r:1='this')
       label23:
        push r:'}', r:'6lA'
        greaterThan
        not
        branchIfTrue label24
        push r:'}', r:'6lA', 2
        multiply
        subtract
        setRegister r:'}'
        pop
        branch label23
       label24:
        push r:'}', 0, r:'6lA'
        subtract
        lessThan
        not
        branchIfTrue label25
        push r:'}', r:'6lA', 2
        multiply
        add
        setRegister r:'}'
        pop
        branch label24
       label25:
        push r:'}'
        return
      end // of function 

      setMember
      push r:0, '}1A{_'
      function2 (r:2='8', r:3='8Q') (r:1='this')
        push r:'8Q', '(('
        getMember
        push r:'8', '(('
        getMember
        subtract
        setRegister r:4
        pop
        push r:'8Q', ')('
        getMember
        push r:'8', ')('
        getMember
        subtract
        setRegister r:5
        pop
        push r:4, r:4
        multiply
        push r:5, r:5
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        return
      end // of function 

      setMember
      push r:0, '],pz1('
      function2 (r:2='list', r:3='6lA') (r:1='this')
        push 0
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        branch label27
       label26:
        push r:5
        increment
        setRegister r:5
        pop
       label27:
        push r:5, r:list, 'length'
        getMember
        lessThan
        not
        branchIfTrue label28
        push r:4, r:list, r:5
        getMember
        push r:list, 'length'
        getMember
        divide
        add
        setRegister r:4
        pop
        branch label26
       label28:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '*Fgc ('
      function2 (r:2='}J', r:3='+') (r:1='this')
        push 0, 'flash'
        getVariable
        push 'filters'
        getMember
        push 'BlurFilter'
        newMethod
        setRegister r:4
        pop
        push r:4, 'blurX', r:'+'
        setMember
        push r:4, 'blurY', r:'+'
        setMember
        push r:'}J', 'filters', r:4, 1
        initArray
        setMember
      end // of function 

      setMember
      push r:0, '(H5 S'
      function2 (r:2='}J', r:3='(v+', r:4='60-') (r:1='this')
        push r:'60-', NULL
        equals
        not
        branchIfTrue label29
        push -255
        setRegister r:'60-'
        pop
       label29:
        push r:'(v+', 1, '*r'
        getVariable
        push '2ya 0('
        callMethod
        setRegister r:5
        pop
        push r:'}J', 1, 'Color'
        new
        setRegister r:6
        pop
        push 'ra', 100, 'ga', 100, 'ba', 100, 'aa', 100, 'rb', r:5, '='
        getMember
        push r:'60-'
        add
        push 'gb', r:5, '0'
        getMember
        push r:'60-'
        add
        push 'bb', r:5, ')'
        getMember
        push r:'60-'
        add
        push 'ab', 0, 8
        initObject
        setRegister r:7
        pop
        push r:7, 1, r:6, 'setTransform'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '2ya 0('
      function2 (r:2='(v+') (r:1='this')
        push '(', r:'(v+', 24
        shiftRight2
        push '=', r:'(v+', 16
        shiftRight
        push 255
        bitwiseAnd
        push '0', r:'(v+', 8
        shiftRight
        push 255
        bitwiseAnd
        push ')', r:'(v+', 255
        bitwiseAnd
        push 4
        initObject
        return
      end // of function 

      setMember
      push r:0, '{mMU7('
      function2 (r:2='8') (r:1='this')
        push r:'8', '('
        getMember
        push 24
        shiftLeft
        push r:'8', '='
        getMember
        push 16
        shiftLeft
        bitwiseOr
        push r:'8', '0'
        getMember
        push 8
        shiftLeft
        bitwiseOr
        push r:'8', ')'
        getMember
        bitwiseOr
        return
      end // of function 

      setMember
      push r:0, '4CDwp'
      function2 (r:2='9I*', r:3='}J') (r:1='this')
        push 0, 'flash'
        getVariable
        push 'geom'
        getMember
        push 'Matrix'
        newMethod
        setRegister r:4
        pop
        push r:'}J', '_yscale'
        getMember
        push 100
        divide
        push r:'}J', '_xscale'
        getMember
        push 100
        divide
        push 2, r:4, 'scale'
        callMethod
        pop
        push r:'}J', '_rotation'
        getMember
        push 0.0174
        multiply
        push 1, r:4, 'rotate'
        callMethod
        pop
        push r:'}J', '_y'
        getMember
        push r:'}J', '_x'
        getMember
        push 2, r:4, 'translate'
        callMethod
        pop
        push -255, r:'}J', '_alpha'
        getMember
        push 2.55
        multiply
        add
        push 0, 0, 0, 1, 1, 1, 1, 8, 'flash'
        getVariable
        push 'geom'
        getMember
        push 'ColorTransform'
        newMethod
        setRegister r:5
        pop
        push r:'}J', 'blendMode'
        getMember
        setRegister r:6
        pop
        push NULL, NULL, r:6, r:5, r:4, r:'}J', 6, r:'9I*', 'draw'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '5tjEm'
      function2 (r:2='9I*', r:3='}J', r:4='((', r:5=')(') (r:1='this')
        push 0, 'flash'
        getVariable
        push 'geom'
        getMember
        push 'Matrix'
        newMethod
        setRegister r:6
        pop
        push r:')(', r:'((', 2, r:6, 'translate'
        callMethod
        pop
        push NULL, NULL, NULL, NULL, r:6, r:'}J', 6, r:'9I*', 'draw'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '=iw,6('
      function2 (r:2='1Z 6', r:3='5P55', r:4='+[') (r:1='this')
        push r:'+[', r:'+[', 0, 0, 4, 'flash'
        getVariable
        push 'geom'
        getMember
        push 'Rectangle'
        newMethod
        setRegister r:5
        pop
        push 1342177280, TRUE, r:'+[', r:'+[', 4, 'flash'
        getVariable
        push 'display'
        getMember
        push 'BitmapData'
        newMethod
        setRegister r:6
        pop
        push 0, r:'5P55', 2, '*r'
        getVariable
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:7
        pop
        push 0, 0, r:7, 3, r:6, '4CDwp'
        callMethod
        pop
        push 0, r:7, 'removeMovieClip'
        callMethod
        pop
        push 0, TRUE, r:'1Z 6', 'height'
        getMember
        push r:'1Z 6', 'width'
        getMember
        push 4, 'flash'
        getVariable
        push 'display'
        getMember
        push 'BitmapData'
        newMethod
        setRegister r:8
        pop
        push 0
        setRegister r:9
        pop
        branch label31
       label30:
        push r:9, r:'+['
        add
        setRegister r:9
        pop
       label31:
        push r:9, r:'1Z 6', 'width'
        getMember
        lessThan
        not
        branchIfTrue label35
        push 0
        setRegister r:10
        pop
        branch label33
       label32:
        push r:10, r:'+['
        add
        setRegister r:10
        pop
       label33:
        push r:10, r:'1Z 6', 'height'
        getMember
        lessThan
        not
        branchIfTrue label34
        push NULL, NULL, NULL, r:10, r:9, 2, 'flash'
        getVariable
        push 'geom'
        getMember
        push 'Point'
        newMethod
        push r:5, r:6, 6, r:8, 'copyPixels'
        callMethod
        pop
        branch label32
       label34:
        branch label30
       label35:
        push 0, TRUE, r:'1Z 6', 'height'
        getMember
        push r:'1Z 6', 'width'
        getMember
        push 4, 'flash'
        getVariable
        push 'display'
        getMember
        push 'BitmapData'
        newMethod
        setRegister r:11
        pop
        push TRUE, NULL, r:'1Z 6', 0, 0, 2, 'flash'
        getVariable
        push 'geom'
        getMember
        push 'Point'
        newMethod
        push r:'1Z 6', 'height'
        getMember
        push r:'1Z 6', 'width'
        getMember
        push 0, 0, 4, 'flash'
        getVariable
        push 'geom'
        getMember
        push 'Rectangle'
        newMethod
        push r:8, 6, r:11, 'copyPixels'
        callMethod
        pop
        push 0, r:'1Z 6', 'dispose'
        callMethod
        pop
        push 0, r:6, 'dispose'
        callMethod
        pop
        push 0, r:8, 'dispose'
        callMethod
        pop
        push r:11
        return
      end // of function 

      setMember
      push r:0, '=OA', 300
      setMember
      push r:0, '*OA', 300
      setMember
      push r:0, ',KSpS', 1600
      setMember
      push r:0, '3iRpS', 100
      setMember
      push r:0, '2QF=}', 0
      setMember
      push r:0, ',ETFH', 1000, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '5=,xD', 8000, 4000, 1500, 3
      initArray
      push 1, ';ndCG'
      getVariable
      push '*G6KR'
      callMethod
      setMember
      push r:0, '[=-gL', 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 2, 1, 1, 0, 0, 0, 0, 0, 26
      initArray
      setMember
      push r:0, '+++F7', 3600
      setMember
      push r:0, ',VkV5', 1000
      setMember
      push r:0, '6YA3F', 2
      setMember
      push r:0, ')sbN[', 3, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '*e[', '((', 0, ')(', -1, 2
      initObject
      push '((', -1, ')(', 0, 2
      initObject
      push '((', 0, ')(', 1, 2
      initObject
      push '((', 1, ')(', 0, 2
      initObject
      push 4
      initArray
      setMember
      push r:0, '8R6wa', FALSE
      setMember
      push ',i0 ['
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push '*DzW'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, ',DBRf', 10
        setMember
        push r:this, 'scale', 100
        setMember
        push r:this, '3V[D(', 1
        setMember
        push r:this, '3GWsN', 1
        setMember
        push r:this, '-iB='
        getMember
        push '+KD', r:this
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '3BjX_'
      function2 (r:2='-X') (r:1='this')
        push r:this, 'scale', r:'-X'
        setMember
        push r:this, '-iB='
        getMember
        push '_xscale', r:'-X'
        setMember
        push r:this, '-iB='
        getMember
        push '_yscale', r:'-X'
        setMember
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '6b'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label36
        push r:this, '6b', r:this, '6b'
        getMember
        push r:this, '3V[D('
        getMember
        multiply
        setMember
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '-iB='
        getMember
        push '_rotation'
        getMember
        push r:this, '6b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label36:
        push r:this, '2VhU6'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label40
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '2VhU6'
        getMember
        push r:this, ',DBRf'
        getMember
        lessThan
        not
        branchIfTrue label40
        push r:this, '2VhU6'
        getMember
        push r:this, ',DBRf'
        getMember
        divide
        setRegister r:3
        pop
        push r:this, '849kV'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label37
        branch label38
       label37:
        push r:this, '-iB='
        getMember
        push '_xscale', r:this, 'scale'
        getMember
        push r:3
        multiply
        setMember
        push r:this, '-iB='
        getMember
        push '_yscale', r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        setMember
        branch label39
       label38:
        push r:this, '-iB='
        getMember
        push '_alpha', r:3, 100
        multiply
        setMember
        branch label39
       label39:
        push r:this, '2VhU6'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label40
        push 0, r:this, '9T54'
        callMethod
        pop
       label40:
        push r:this, '7b'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label41
        push r:this, '7b', r:this, '7b'
        getMember
        push r:this, '3GWsN'
        getMember
        multiply
        setMember
        push r:this, 'scale', r:this, 'scale'
        getMember
        push r:this, '7b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, 'scale'
        getMember
        push 1, r:this, '3BjX_'
        callMethod
        pop
       label41:
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push r:this, '8I0t8('
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label42
        push r:this, '8I0t8('
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
       label42:
        push r:this, 1, '2u=W='
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push '+7U K'
      function2 (r:2='}J') (r:1='this')
        push r:this, ')2fr3', r:'}J'
        setMember
        push r:this, '}Zms3', 0, 'Array'
        new
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, ']1sj+'
      function2 () (r:1='this')
        push r:this, ')2fr3'
        getMember
        return
      end // of function 

      setMember
      push r:1, '-fC3a'
      function2 (r:2='59F') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'59F'
        getMember
        setRegister r:3
        pop
        push r:3, NULL
        equals
        not
        branchIfTrue label43
        push '9oK', 0, 'Array'
        new
        push '7-,', 0, 2
        initObject
        setRegister r:3
        pop
        push r:this, '}Zms3'
        getMember
        push r:'59F', r:3
        setMember
       label43:
        push r:3
        return
      end // of function 

      setMember
      push r:1, ']bu40'
      function2 (r:2='[-99') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'[-99'
        getMember
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:7
        pop
        push r:'[-99', 1000
        multiply
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label45
       label44:
        push r:6
        increment
        setRegister r:6
        pop
       label45:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label47
        push r:4, r:6
        getMember
        push '_name'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label46
        push r:8, r:7
        add
        push 1, r:4, r:6
        getMember
        push 'swapDepths'
        callMethod
        pop
        push r:4, r:7, r:4, r:6
        getMember
        setMember
        push r:7
        increment
        setRegister r:7
        pop
       label46:
        branch label44
       label47:
        push r:3, '7-,', r:7
        setMember
      end // of function 

      setMember
      push r:1, '*=_p_'
      function2 (r:2='*KB2', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label48
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'*KB2', 2, r:this, '*=_p_'
        callMethod
        return
       label48:
        push r:6, r:'[-99', 1000
        multiply
        add
        push r:'*KB2', r:this, ')2fr3'
        getMember
        push 3, '3Wt'
        getVariable
        push 'attachMC'
        callMethod
        setRegister r:7
        pop
        push r:5, r:6, r:7
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:7
        return
      end // of function 

      setMember
      push r:1, '18wU*'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push r:5, 1000
        equals
        not
        branchIfTrue label49
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', 1, r:this, '18wU*'
        callMethod
        return
       label49:
        push r:5, r:'[-99', 1000
        multiply
        add
        push r:this, ')2fr3'
        getMember
        push 2, '3Wt'
        getVariable
        push 'createEmptyMC'
        callMethod
        setRegister r:6
        pop
        push r:4, r:5, r:6
        setMember
        push r:3, '7-,', r:3, '7-,'
        getMember
        increment
        setMember
        push r:6
        return
      end // of function 

      setMember
      push r:1, '(GbB}'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label50
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        return
       label50:
        push r:5, r:6, r:'}J'
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:6, r:'[-99', 1000
        multiply
        add
        return
      end // of function 

      setMember
      push r:1, '+2NA'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        push 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, r:'[-99'
        equals
        not
        branchIfTrue label51
        push UNDEF
        return
       label51:
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:5, '7-,'
        getMember
        setRegister r:7
        pop
        push 0
        setRegister r:8
        pop
        branch label53
       label52:
        push r:8
        increment
        setRegister r:8
        pop
       label53:
        push r:8, r:7
        lessThan
        not
        branchIfTrue label55
        push r:6, r:8
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label54
        push r:6, r:8, NULL
        setMember
        branch label55
       label54:
        branch label52
       label55:
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}oQA7'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label56
        push r:6, r:7, NULL
        setMember
        push r:'}J', 1, r:6, 'unshift'
        callMethod
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label56:
      end // of function 

      setMember
      push r:1, '08M8'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label58
        push r:6, r:7, NULL
        setMember
        push r:5, '7-,'
        getMember
        push 1000
        equals
        not
        branchIfTrue label57
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label57:
        push r:5, '7-,'
        getMember
        setRegister r:3
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:3, r:4, 1000
        multiply
        add
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
        push r:6, r:3, r:'}J'
        setMember
       label58:
      end // of function 

      setMember
      push r:1, 'clear'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:4
        pop
        branch label60
       label59:
        push r:4
        increment
        setRegister r:4
        pop
       label60:
        push r:4, r:3, '7-,'
        getMember
        lessThan
        not
        branchIfTrue label61
        push 0, r:5, r:4
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label59
       label61:
        push r:3, '7-,', 0
        setMember
      end // of function 

      setMember
      push r:1, '9(K ;'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push -99999999
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label63
       label62:
        push r:6
        increment
        setRegister r:6
        pop
       label63:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label71
        push r:4, r:6
        getMember
        setRegister r:9
        pop
        push r:9, '_y'
        getMember
        setRegister r:10
        pop
        push r:10, r:8
        lessThan
        not
        not
        branchIfTrue label64
        push r:10
        setRegister r:8
        pop
        branch label70
       label64:
        push r:6
        setRegister r:7
        pop
        branch label66
       label65:
        push r:7
        decrement
        setRegister r:7
        pop
       label66:
        push r:7, 0
        greaterThan
        not
        branchIfTrue label69
        push r:4, r:7, 1
        subtract
        getMember
        setRegister r:11
        pop
        push r:11, '_y'
        getMember
        push r:10
        greaterThan
        not
        branchIfTrue label67
        push r:4, r:7, r:11
        setMember
        push r:11, 1, r:9, 'swapDepths'
        callMethod
        pop
        branch label68
       label67:
        push r:4, r:7, r:9
        setMember
        branch label69
       label68:
        branch label65
       label69:
        push r:7, 0
        equals
        not
        branchIfTrue label70
        push r:4, 0, r:9
        setMember
       label70:
        branch label62
       label71:
      end // of function 

      setMember
      push r:1, ',}2X ('
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label73
       label72:
        push r:2
        increment
        setRegister r:2
        pop
       label73:
        push r:2, r:this, '}Zms3'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label74
        push r:2, 1, r:this, 'clear'
        callMethod
        pop
        branch label72
       label74:
      end // of function 

      setMember
      push '] ktA'
      function2 (r:2='9lj4D') (r:1='this')
        push r:this, '[X', r:'9lj4D'
        setMember
        push r:this, '5R', r:this, '[X'
        getMember
        push '(('
        getMember
        int
        setMember
        push r:this, '6R', r:this, '[X'
        getMember
        push ')('
        getMember
        int
        setMember
        push r:this, '0P', 0.5
        setMember
        push r:this, '1P', 0.5
        setMember
        push r:this, '+{eA+', 1
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '(j;o7'
      function2 (r:2='((', r:3=')(') (r:1='this')
        push r:this, '5R', r:'(('
        int
        setMember
        push r:this, '6R', r:')('
        int
        setMember
        push r:this, '[X'
        getMember
        push '((', r:'(('
        setMember
        push r:this, '[X'
        getMember
        push ')(', r:')('
        setMember
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this')
        push r:this, ')9 9', 1
        setMember
        push 0
        setRegister r:2
        pop
        push r:this, '[X'
        getMember
        push '[b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        setRegister r:3
        pop
        push r:this, '[X'
        getMember
        push ']b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        setRegister r:4
        pop
       label75:
        push r:this, ')9 9'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label89
        push NULL
        setRegister r:5
        pop
        push NULL
        setRegister r:6
        pop
        push r:3, 0
        greaterThan
        not
        branchIfTrue label76
        push 1, r:this, '0P'
        getMember
        subtract
        push r:3
        divide
        setRegister r:5
        pop
        branch label78
       label76:
        push r:3, 0
        lessThan
        not
        branchIfTrue label77
        push r:this, '0P'
        getMember
        push r:3
        divide
        setRegister r:5
        pop
        branch label78
       label77:
        push 1
        setRegister r:5
        pop
       label78:
        push r:4, 0
        greaterThan
        not
        branchIfTrue label79
        push 1, r:this, '1P'
        getMember
        subtract
        push r:4
        divide
        setRegister r:6
        pop
        branch label81
       label79:
        push r:4, 0
        lessThan
        not
        branchIfTrue label80
        push r:this, '1P'
        getMember
        push r:4
        divide
        setRegister r:6
        pop
        branch label81
       label80:
        push 1
        setRegister r:6
        pop
       label81:
        push NULL
        setRegister r:7
        pop
        push NULL
        setRegister r:8
        pop
        push NULL
        setRegister r:9
        pop
        push r:5, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:6, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        lessThan
        not
        branchIfTrue label82
        push r:5, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        setRegister r:7
        pop
        push r:5, r:7
        divide
        int
        setRegister r:8
        pop
        branch label83
       label82:
        push r:6, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        setRegister r:7
        pop
        push r:6, r:7
        divide
        int
        setRegister r:9
        pop
       label83:
        push TRUE
        setRegister r:10
        pop
        push r:7, r:this, ')9 9'
        getMember
        greaterThan
        not
        branchIfTrue label84
        push r:this, ')9 9'
        getMember
        setRegister r:7
        pop
        push FALSE
        setRegister r:10
        pop
       label84:
        push r:this, '0P', r:this, '0P'
        getMember
        push r:3, r:7
        multiply
        add
        setMember
        push r:this, '1P', r:this, '1P'
        getMember
        push r:4, r:7
        multiply
        add
        setMember
        push r:this, ')9 9', r:this, ')9 9'
        getMember
        push r:7
        subtract
        setMember
        push r:10
        not
        branchIfTrue label88
        push r:8, NULL
        equals
        not
        not
        branchIfTrue label86
        push r:this, '6R'
        getMember
        push r:this, '5R'
        getMember
        push r:8
        add
        push 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '77ldJ('
        callMethod
        not
        branchIfTrue label85
        push r:this, '5R', r:this, '5R'
        getMember
        push r:8
        add
        setMember
        push r:this, '0P', r:this, '0P'
        getMember
        push r:8
        subtract
        setMember
        branch label86
       label85:
        push 0, r:this, '[X'
        getMember
        push '[b'
        getMember
        push r:this, '[X'
        getMember
        push '[b'
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        divide
        push 2, r:this, '09uM1('
        callMethod
        pop
        push r:3, 0, r:this, '+{eA+'
        getMember
        subtract
        multiply
        setRegister r:3
        pop
        push r:this, '[X'
        getMember
        push '[b', r:this, '[X'
        getMember
        push '[b'
        getMember
        push 0, r:this, '+{eA+'
        getMember
        subtract
        multiply
        setMember
       label86:
        push r:9, NULL
        equals
        not
        not
        branchIfTrue label88
        push r:this, '6R'
        getMember
        push r:9
        add
        push r:this, '5R'
        getMember
        push 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '77ldJ('
        callMethod
        not
        branchIfTrue label87
        push r:this, '6R', r:this, '6R'
        getMember
        push r:9
        add
        setMember
        push r:this, '1P', r:this, '1P'
        getMember
        push r:9
        subtract
        setMember
        branch label88
       label87:
        push r:this, '[X'
        getMember
        push ']b'
        getMember
        push r:this, '[X'
        getMember
        push ']b'
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        divide
        push 0, 2, r:this, '09uM1('
        callMethod
        pop
        push r:4, 0, r:this, '+{eA+'
        getMember
        subtract
        multiply
        setRegister r:4
        pop
        push r:this, '[X'
        getMember
        push ']b', r:this, '[X'
        getMember
        push ']b'
        getMember
        push 0, r:this, '+{eA+'
        getMember
        subtract
        multiply
        setMember
       label88:
        branch label75
       label89:
        push r:this, '[X'
        getMember
        push '((', r:this, '5R'
        getMember
        push r:this, '0P'
        getMember
        add
        setMember
        push r:this, '[X'
        getMember
        push ')(', r:this, '6R'
        getMember
        push r:this, '1P'
        getMember
        add
        setMember
      end // of function 

      setMember
      push r:1, '09uM1('
      function2 (r:2='[b', r:3=']b') (r:1='this')
      end // of function 

      setMember
      push r:1, '*YT,T'
      function2 (r:2='(') (r:1='this')
      end // of function 

      setMember
      push r:1, '1HwWD'
      function2 () (r:1='this')
      end // of function 

      setMember
      push '{-kxL'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '87vE7('
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '4plQ5', '{-kxL'
        getVariable
        push '4plQ5'
        getMember
        increment
        setMember
        push 0, '3Wt'
        getVariable
        push 'getTimer'
        callMethod
        setRegister r:2
        pop
        push '{-kxL'
        getVariable
        push ';ILSy', r:2, '{-kxL'
        getVariable
        push '3R,QM'
        getMember
        subtract
        push 1000.0
        divide
        setMember
        push '{-kxL'
        getVariable
        push '3R,QM', r:2
        setMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        push '{-kxL'
        getVariable
        push ';y}-6('
        getMember
        lessThan
        not
        branchIfTrue label90
        push '{-kxL'
        getVariable
        push '-)Xd+', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        push '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        multiply
        push 1, '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        subtract
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        multiply
        add
        setMember
        branch label91
       label90:
        push '{-kxL'
        getVariable
        push ';ILSy', 1, '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        divide
        setMember
       label91:
        push '{-kxL'
        getVariable
        push '-V;B', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        setMember
      end // of function 

      setMember
      push r:0, 'fps'
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        return
      end // of function 

      setMember
      push r:0, '6GI,F', 32
      setMember
      push r:0, ';y}-6(', 0.5
      setMember
      push r:0, '3R,QM', 0, '3Wt'
      getVariable
      push 'getTimer'
      callMethod
      setMember
      push r:0, '[Ad;n', 0.95
      setMember
      push r:0, '-)Xd+', 1
      setMember
      push r:0, '-V;B', 1
      setMember
      push r:0, ';ILSy', 1
      setMember
      push r:0, '4plQ5', 0
      setMember
      push '(WBt)'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ']}Ou;(', 1
      setMember
      push r:0, '3I0pG', 2
      setMember
      push r:0, '{;7F4', 3
      setMember
      push r:0, '8U(wu', 4
      setMember
      push r:0, '}[cpB', 5
      setMember
      push r:0, '9xv]A', 6
      setMember
      push r:0, '{yQ=Q', 7
      setMember
      push r:0, '+,W', 8
      setMember
      push r:0, '2y+dV', 9
      setMember
      push r:0, '(tBee', 10
      setMember
      push r:0, '3)i[=', 11
      setMember
      push r:0, ' J3IC', 12
      setMember
      push r:0, '[6jRc', 13
      setMember
      push r:0, ')8Fyj', 14
      setMember
      push 'flash'
      getVariable
      not
      not
      branchIfTrue label92
      push 'flash', 0, 'Object'
      new
      setVariable
     label92:
      push 'flash'
      getVariable
      push '-5;Q'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setMember
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '4CDwp'
      function2 (r:2='}J', r:3='((', r:4=')(') (r:1='this')
        push 'flash'
        getVariable
        push '-5;Q'
        getMember
        push ';ZA('
        getMember
        push 'flash'
        getVariable
        push '-5;Q'
        getMember
        push '-=4q'
        getMember
        push r:'(('
        setMember
        push 'flash'
        getVariable
        push '-5;Q'
        getMember
        push ';ZA('
        getMember
        push 'flash'
        getVariable
        push '-5;Q'
        getMember
        push '0=4q'
        getMember
        push r:')('
        setMember
        push 'flash'
        getVariable
        push '-5;Q'
        getMember
        push ';ZA('
        getMember
        push r:'}J', 2, r:this, 'draw'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '}-B2'
      function2 () (r:1='this')
        push 0, 'flash'
        getVariable
        push '-5;Q'
        getMember
        push ';ZA('
        getMember
        push 'identity'
        callMethod
        pop
        push 'flash'
        getVariable
        push 'display'
        getMember
        push 'BitmapData'
        getMember
        push 'prototype'
        getMember
        push '4CDwp', 'flash'
        getVariable
        push '-5;Q'
        getMember
        push 'prototype'
        getMember
        push '4CDwp'
        getMember
        setMember
      end // of function 

      setMember
      push r:0, ';ZA(', 0, 'flash'
      getVariable
      push 'geom'
      getMember
      push 'Matrix'
      newMethod
      setMember
      push r:0, '-=4q', 1, 1, '$tx', 'substring'
      callMethod
      setMember
      push r:0, '0=4q', 1, 1, '$ty', 'substring'
      callMethod
      setMember
      push '9)DM2'
      function2 (r:2='5R', r:3='6R', r:4='5,F') (r:1='this')
        push r:this, '((', r:'5R'
        setMember
        push r:this, ')(', r:'6R'
        setMember
        push r:this, '*B', r:'5,F'
        setMember
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '+xiq*'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '*B'
        getMember
        push 4
        equals
        not
        branchIfTrue label93
        push r:this, '=VJ', 7, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setMember
       label93:
        push r:this, ',p]X)', FALSE
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this')
      end // of function 

      setMember
      push r:1, ',l3O-'
      function2 (r:2=')_()') (r:1='this')
        push r:this, '*B'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label94
        push r:0, 1
        strictEquals
        branchIfTrue label94
        push r:0, 2
        strictEquals
        branchIfTrue label94
        push r:0, 3
        strictEquals
        branchIfTrue label95
        push r:0, 4
        strictEquals
        branchIfTrue label96
        push r:0, 5
        strictEquals
        branchIfTrue label97
        push r:0, 6
        strictEquals
        branchIfTrue label98
        branch label99
       label94:
        push '*r'
        getVariable
        push '5=,xD'
        getMember
        push r:this, '*B'
        getMember
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push 16, 1, r:this, '4600'
        callMethod
        pop
        push 0, r:this, '9T54'
        callMethod
        pop
        branch label99
       label95:
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '{DfiG', '*r'
        getVariable
        push '+++F7'
        getMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '{DfiG'
        getMember
        push 0
        getMember
        push '*r'
        getVariable
        push ',VkV5'
        getMember
        add
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        push 1
        initArray
        setMember
        push 16, 1, r:this, ';-[;H'
        callMethod
        pop
        push 0, r:this, '9T54'
        callMethod
        pop
        branch label99
       label96:
        push r:this, ')('
        getMember
        push r:this, '(('
        getMember
        push 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '=Pc9E('
        callMethod
        setRegister r:3
        pop
        push r:this, '=VJ'
        getMember
        push 1
        add
        push 1, r:3, '(H5 S'
        callMethod
        pop
        push 0, r:this, '9T54'
        callMethod
        pop
        branch label99
       label97:
        branch label99
       label98:
        push r:')_()', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:4
        pop
        push r:')_()', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:5
        pop
        push '9)DM2'
        getVariable
        push '{Cs'
        getMember
        push '2e{I'
        getVariable
        push '{Cs'
        getMember
        add
        push r:5, r:5
        multiply
        push r:4, r:4
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        subtract
        setRegister r:6
        pop
        push r:4, r:5, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        setRegister r:7
        pop
        push r:7, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:8
        pop
        push r:7, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:9
        pop
        push r:')_()', '((', r:')_()', '(('
        getMember
        push r:8, r:6
        multiply
        add
        setMember
        push r:')_()', ')(', r:')_()', ')('
        getMember
        push r:9, r:6
        multiply
        add
        setMember
        push r:')_()', '[b', r:')_()', '[b'
        getMember
        push r:8, '9)DM2'
        getVariable
        push '6xtJ'
        getMember
        multiply
        add
        setMember
        push r:')_()', ']b', r:')_()', ']b'
        getMember
        push r:9, '9)DM2'
        getVariable
        push '6xtJ'
        getMember
        multiply
        add
        setMember
        branch label99
       label99:
      end // of function 

      setMember
      push r:1, ';-[;H'
      function2 (r:2='max') (r:1='this')
        push 0
        setRegister r:3
        pop
        branch label101
       label100:
        push r:3
        increment
        setRegister r:3
        pop
       label101:
        push r:3, r:max
        lessThan
        not
        branchIfTrue label102
        push '-Ms=u', 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '{==W3('
        callMethod
        setRegister r:4
        pop
        push r:3, r:max
        divide
        push 6.28
        multiply
        setRegister r:5
        pop
        push r:5, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:6
        pop
        push r:5, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:7
        pop
        push 1, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 4
        multiply
        add
        setRegister r:8
        pop
        push 10
        setRegister r:9
        pop
        push r:4, '((', r:this, '(('
        getMember
        push r:6, r:9
        multiply
        add
        setMember
        push r:4, ')(', r:this, ')('
        getMember
        push r:7, r:9
        multiply
        add
        setMember
        push r:4, '[b', r:6, r:8
        multiply
        setMember
        push r:4, ']b', r:7, r:8
        multiply
        setMember
        push r:4, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 120
        multiply
        add
        setMember
        push r:4, '849kV', 0
        setMember
        push r:4, '(KpGn', 0.1, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.3
        multiply
        add
        setMember
        push r:4, '1o8jJ', r:4, 1, '] ktA'
        new
        setMember
        branch label100
       label102:
      end // of function 

      setMember
      push r:1, '4600'
      function2 (r:2='max') (r:1='this')
        push 0
        setRegister r:3
        pop
        branch label104
       label103:
        push r:3
        increment
        setRegister r:3
        pop
       label104:
        push r:3, r:max
        lessThan
        not
        branchIfTrue label105
        push '*NdbB(', 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '{==W3('
        callMethod
        setRegister r:4
        pop
        push r:3, r:max
        divide
        push 6.28
        multiply
        setRegister r:5
        pop
        push r:5, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:6
        pop
        push r:5, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:7
        pop
        push 0.5, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 3
        multiply
        add
        setRegister r:8
        pop
        push 4
        setRegister r:9
        pop
        push r:4, '((', r:this, '(('
        getMember
        push r:6, r:9
        multiply
        add
        setMember
        push r:4, ')(', r:this, ')('
        getMember
        push r:7, r:9
        multiply
        add
        setMember
        push r:4, '[b', r:6, r:8
        multiply
        setMember
        push r:4, ']b', r:7, r:8
        multiply
        setMember
        push r:4, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 15
        multiply
        add
        setMember
        push r:4, '849kV', 0
        setMember
        push 30, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 50
        multiply
        add
        push 1, r:4, '3BjX_'
        callMethod
        pop
        push r:this, '*B'
        getMember
        push 1
        add
        toString
        push 1, r:4, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:4, '1o8jJ', r:4, 1, '] ktA'
        new
        setMember
        branch label103
       label105:
        push '7LeMK(', 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '{==W3('
        callMethod
        setRegister r:10
        pop
        push r:10, '((', r:this, '(('
        getMember
        setMember
        push r:10, ')(', r:this, ')('
        getMember
        setMember
        push 150, 1, r:10, '3BjX_'
        callMethod
        pop
        push 0, r:10, '4u=dZ'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this')
        push 0, r:this, '-iB='
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '+xiq*'
        getMember
        push 'remove'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '*=_p_'
      function2 () (r:1='this')
        push r:this, '-iB=', '44{N'
        getVariable
        push ')lMLM'
        getMember
        push '{n{]q', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '-iB='
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '-iB='
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
        push r:this, '*B'
        getMember
        push 1
        add
        toString
        push 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '*B'
        getMember
        push 4
        equals
        not
        branchIfTrue label106
        push r:this, '=VJ'
        getMember
        push 1
        add
        toString
        push 1, r:this, '-iB='
        getMember
        push '0tJ'
        getMember
        push '0tJ'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
       label106:
        push r:this, ',p]X)', TRUE
        setMember
      end // of function 

      setMember
      push r:1, '*TlKy'
      function2 () (r:1='this')
        push r:this, ',p]X)', FALSE
        setMember
        push 0, r:this, '-iB='
        getMember
        push 'removeMovieClip'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '{Cs', 12
      setMember
      push r:0, '6xtJ', 8
      setMember
      push '(6IbI('
      function2 (r:3='9lj4D') (r:1='this', r:2='super')
        push r:'9lj4D', 1, r:super, UNDEF
        callMethod
        pop
        push '(6IbI('
        getVariable
        push '6y392'
        getMember
        push NULL
        equals
        not
        branchIfTrue label107
        push '(6IbI('
        getVariable
        push '6y392', 0, 'Array'
        new
        setMember
       label107:
        push r:this, ')gv94', '((', 0, ')(', 0, 2
        initObject
        push 1
        initArray
        setMember
        push r:this, '+{eA+', 0.3
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '] ktA'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '[7qyn'
      function2 (r:2=']oH', r:3='max') (r:1='this')
        push r:this, ')gv94', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:4
        pop
        branch label109
       label108:
        push r:4
        increment
        setRegister r:4
        pop
       label109:
        push r:4, r:max
        lessThan
        not
        branchIfTrue label110
        push r:4, r:max
        divide
        push 6.28
        multiply
        setRegister r:5
        pop
        push r:5, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:6
        pop
        push r:5, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:7
        pop
        push '((', r:6, r:']oH'
        multiply
        int
        push ')(', r:7, r:']oH'
        multiply
        int
        push 2
        initObject
        push 1, r:this, ')gv94'
        getMember
        push 'push'
        callMethod
        pop
        branch label108
       label110:
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this')
       label111:
        push '(6IbI('
        getVariable
        push '6y392'
        getMember
        push 'length'
        getMember
        push 100
        greaterThan
        not
        branchIfTrue label112
        push 0, 0, '(6IbI('
        getVariable
        push '6y392'
        getMember
        push 'shift'
        callMethod
        push 'removeMovieClip'
        callMethod
        pop
        branch label111
       label112:
        push r:this, ')9 9', 1
        setMember
        push 0
        setRegister r:2
        pop
       label113:
        push r:this, ')9 9'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label132
        push r:this, '0P'
        getMember
        push 0
        lessThan
        dup
        branchIfTrue label114
        pop
        push r:this, '0P'
        getMember
        push 1
        greaterThan
       label114:
        dup
        branchIfTrue label115
        pop
        push r:this, '1P'
        getMember
        push 0
        lessThan
       label115:
        dup
        branchIfTrue label116
        pop
        push r:this, '1P'
        getMember
        push 1
        greaterThan
       label116:
        not
        branchIfTrue label117
        push 'decal error!', 1, ']{i'
        getVariable
        push 'print'
        callMethod
        pop
        push 'ox: ', r:this, '0P'
        getMember
        add
        push 1, ']{i'
        getVariable
        push 'print'
        callMethod
        pop
        push 'oy: ', r:this, '1P'
        getMember
        add
        push 1, ']{i'
        getVariable
        push 'print'
        callMethod
        pop
        push UNDEF
        return
       label117:
        push NULL
        setRegister r:3
        pop
        push NULL
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        push 0
        setRegister r:6
        pop
        push r:this, '[X'
        getMember
        push '[b'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label118
        push 1, r:this, '0P'
        getMember
        subtract
        push r:this, '[X'
        getMember
        push '[b'
        getMember
        divide
        setRegister r:3
        pop
        push 1
        setRegister r:5
        pop
        branch label120
       label118:
        push r:this, '[X'
        getMember
        push '[b'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label119
        push r:this, '0P'
        getMember
        push r:this, '[X'
        getMember
        push '[b'
        getMember
        divide
        setRegister r:3
        pop
        push -1
        setRegister r:5
        pop
        branch label120
       label119:
        push 1
        setRegister r:3
        pop
       label120:
        push r:this, '[X'
        getMember
        push ']b'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label121
        push 1, r:this, '1P'
        getMember
        subtract
        push r:this, '[X'
        getMember
        push ']b'
        getMember
        divide
        setRegister r:4
        pop
        push 1
        setRegister r:6
        pop
        branch label123
       label121:
        push r:this, '[X'
        getMember
        push ']b'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label122
        push r:this, '1P'
        getMember
        push r:this, '[X'
        getMember
        push ']b'
        getMember
        divide
        setRegister r:4
        pop
        push -1
        setRegister r:6
        pop
        branch label123
       label122:
        push 1
        setRegister r:4
        pop
       label123:
        push NULL
        setRegister r:7
        pop
        push r:3, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        setRegister r:8
        pop
        push r:4, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        setRegister r:9
        pop
        push TRUE
        setRegister r:10
        pop
        push r:8, r:9
        lessThan
        not
        branchIfTrue label124
        push r:8
        setRegister r:7
        pop
        push 0
        setRegister r:6
        pop
        branch label125
       label124:
        push r:9
        setRegister r:7
        pop
        push 0
        setRegister r:5
        pop
       label125:
        push r:7, r:this, ')9 9'
        getMember
        lessThan
        not
        not
        branchIfTrue label126
        push r:this, ')9 9'
        getMember
        setRegister r:7
        pop
        push FALSE
        setRegister r:10
        pop
       label126:
        push r:this, '0P', 1, r:this, '0P'
        getMember
        push r:this, '[X'
        getMember
        push '[b'
        getMember
        push r:7
        multiply
        add
        push 0, 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
        push r:this, '1P', 1, r:this, '1P'
        getMember
        push r:this, '[X'
        getMember
        push ']b'
        getMember
        push r:7
        multiply
        add
        push 0, 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
        push r:this, ')9 9', r:this, ')9 9'
        getMember
        push r:7
        subtract
        setMember
        push r:10
        not
        branchIfTrue label131
        push r:5, 0
        equals
        dup
        not
        branchIfTrue label127
        pop
        push r:6, 0
        equals
       label127:
        not
        branchIfTrue label128
        push 'Oh mon dieu, c\'est affreux!', 1, ']{i'
        getVariable
        push 'trace'
        callMethod
        pop
       label128:
        push r:this, '6R'
        getMember
        push r:6
        add
        push r:this, '5R'
        getMember
        push r:5
        add
        push 2, r:this, '=)0hg'
        callMethod
        setRegister r:11
        pop
        push r:11, NULL
        equals
        setRegister r:12
        pop
        push r:12
        not
        not
        branchIfTrue label130
        push r:this, '[X'
        getMember
        push '[b'
        getMember
        push r:this, '[X'
        getMember
        push ']b'
        getMember
        push 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        setRegister r:13
        pop
        push '(6IbI('
        getVariable
        push '{Cs'
        getMember
        push '((', r:5, ')(', r:6, 2
        initObject
        push r:11, ')('
        getMember
        push r:11, '(('
        getMember
        push 4, r:this, '}Q)0u'
        callMethod
        setRegister r:14
        pop
        push 3.14, r:14, r:13
        subtract
        push 2, '*r'
        getVariable
        push '0Yj1'
        callMethod
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        setRegister r:15
        pop
        push r:15, 1.57
        greaterThan
        not
        branchIfTrue label129
        push TRUE
        setRegister r:12
        pop
        branch label130
       label129:
        push r:14, r:13, 2, r:this, '6,Ld)('
        callMethod
        pop
        push r:11, 1, r:this, '=Ua)Z'
        callMethod
        pop
        push 1, r:15, 1.57
        divide
        push 0.8
        multiply
        push 0.5
        add
        subtract
        push 0, 2, 'Math'
        getVariable
        push 'max'
        callMethod
        setRegister r:16
        pop
        push r:16, r:this, '+{eA+'
        getMember
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:17
        pop
        push r:this, '[X'
        getMember
        push '[b', r:this, '[X'
        getMember
        push '[b'
        getMember
        push r:17
        multiply
        setMember
        push r:this, '[X'
        getMember
        push ']b', r:this, '[X'
        getMember
        push ']b'
        getMember
        push r:17
        multiply
        setMember
       label130:
        push r:12
        not
        branchIfTrue label131
        push 0, r:this, '-w2c;('
        callMethod
        pop
        push r:this, '5R', r:this, '5R'
        getMember
        push r:5
        add
        setMember
        push r:this, '6R', r:this, '6R'
        getMember
        push r:6
        add
        setMember
        push r:this, '0P', 1, r:this, '0P'
        getMember
        push r:5
        subtract
        push 0, 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
        push r:this, '1P', 1, r:this, '1P'
        getMember
        push r:6
        subtract
        push 0, 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
       label131:
        branch label113
       label132:
        push r:this, '[X'
        getMember
        push '((', r:this, '5R'
        getMember
        push r:this, '0P'
        getMember
        add
        setMember
        push r:this, '[X'
        getMember
        push ')(', r:this, '6R'
        getMember
        push r:this, '1P'
        getMember
        add
        setMember
      end // of function 

      setMember
      push r:1, '6,Ld)('
      function2 (r:2='(', r:3='7') (r:1='this')
        push r:this, '[X'
        getMember
        push ']b'
        getMember
        push r:this, '[X'
        getMember
        push '[b'
        getMember
        push 2, r:this, '09uM1('
        callMethod
        pop
        push r:this, '[X'
        getMember
        push '[b'
        getMember
        push r:this, '[X'
        getMember
        push '[b'
        getMember
        multiply
        push r:this, '[X'
        getMember
        push ']b'
        getMember
        push r:this, '[X'
        getMember
        push ']b'
        getMember
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        setRegister r:4
        pop
        push r:'7', r:'(', 2, r:this, ' Sk9H('
        callMethod
        setRegister r:'('
        pop
        push r:'(', 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:5
        pop
        push r:'(', 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:6
        pop
        push r:this, '[X'
        getMember
        push '[b', r:5, r:4
        multiply
        setMember
        push r:this, '[X'
        getMember
        push ']b', r:6, r:4
        multiply
        setMember
      end // of function 

      setMember
      push r:1, '}Q)0u'
      function2 (r:2='4,', r:3='5,', r:4='}},)', r:5=']oH') (r:1='this')
        push r:'}},)', ')('
        getMember
        push r:'}},)', '(('
        getMember
        push 2
        initArray
        push 1
        initArray
        setRegister r:6
        pop
        push 0
        setRegister r:7
        pop
        branch label134
       label133:
        push r:7
        increment
        setRegister r:7
        pop
       label134:
        push r:7, 2
        lessThan
        not
        branchIfTrue label141
        push r:'4,'
        setRegister r:8
        pop
        push r:'5,'
        setRegister r:9
        pop
        push '((', r:'}},)', '(('
        getMember
        push ')(', r:'}},)', ')('
        getMember
        push 2
        initObject
        setRegister r:10
        pop
        push r:7, 2
        multiply
        push 1
        subtract
        setRegister r:11
        pop
        push 0
        setRegister r:12
        pop
        branch label136
       label135:
        push r:12
        increment
        setRegister r:12
        pop
       label136:
        push r:12, r:']oH'
        lessThan
        not
        branchIfTrue label140
        push r:11, r:10, 2, r:this, '(VKB'
        callMethod
        setRegister r:13
        pop
        push r:8, r:13, '(('
        getMember
        add
        setRegister r:14
        pop
        push r:9, r:13, ')('
        getMember
        add
        setRegister r:15
        pop
        push r:15, r:14, 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '77ldJ('
        callMethod
        not
        not
        branchIfTrue label137
        push r:13
        setRegister r:10
        pop
        branch label139
       label137:
        push r:15, r:10, ')('
        getMember
        add
        push r:14, r:10, '(('
        getMember
        add
        push 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '77ldJ('
        callMethod
        not
        branchIfTrue label138
        push r:14, r:10, '(('
        getMember
        add
        setRegister r:8
        pop
        push r:15, r:10, ')('
        getMember
        add
        setRegister r:9
        pop
        push 0, r:11
        subtract
        push r:10, 2, r:this, '(VKB'
        callMethod
        setRegister r:10
        pop
        branch label139
       label138:
        push r:14
        setRegister r:8
        pop
        push r:15
        setRegister r:9
        pop
       label139:
        push r:10, ')('
        getMember
        push r:10, '(('
        getMember
        push 2
        initArray
        push 1, r:6, 'push'
        callMethod
        pop
        branch label135
       label140:
        branch label133
       label141:
        push 0
        setRegister r:16
        pop
        push 0
        setRegister r:17
        pop
        push 0
        setRegister r:18
        pop
        branch label143
       label142:
        push r:18
        increment
        setRegister r:18
        pop
       label143:
        push r:18, r:6, 'length'
        getMember
        lessThan
        not
        branchIfTrue label144
        push r:6, r:18
        getMember
        setRegister r:19
        pop
        push r:16, r:19, 0
        getMember
        add
        setRegister r:16
        pop
        push r:17, r:19, 1
        getMember
        add
        setRegister r:17
        pop
        branch label142
       label144:
        push r:16, r:17, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        return
      end // of function 

      setMember
      push r:1, ' Sk9H('
      function2 (r:2='(', r:3='7') (r:1='this')
        push 3.14, r:'7', r:'('
        subtract
        push 2, '*r'
        getVariable
        push '0Yj1'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:5
        pop
        push r:4, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:6
        pop
        push 0, r:5
        subtract
        push r:6, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        setRegister r:7
        pop
        push 3.14, r:'7', r:7
        subtract
        push 2, '*r'
        getVariable
        push '0Yj1'
        callMethod
        return
      end // of function 

      setMember
      push r:1, '(VKB'
      function2 (r:2='+', r:3='6g,A') (r:1='this')
        push '((', 0, r:'+', ')('
        getMember
        subtract
        push r:'6g,A'
        multiply
        push ')(', r:'+', '(('
        getMember
        push r:'6g,A'
        multiply
        push 2
        initObject
        return
      end // of function 

      setMember
      push r:1, '=)0hg'
      function2 (r:2='((', r:3=')(') (r:1='this')
        push 0
        setRegister r:4
        pop
        branch label146
       label145:
        push r:4
        increment
        setRegister r:4
        pop
       label146:
        push r:4, r:this, ')gv94'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label148
        push r:this, ')gv94'
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push '((', r:'((', r:5, '(('
        getMember
        add
        push ')(', r:')(', r:5, ')('
        getMember
        add
        push 2
        initObject
        setRegister r:6
        pop
        push r:6, ')('
        getMember
        push r:6, '(('
        getMember
        push 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '77ldJ('
        callMethod
        not
        not
        branchIfTrue label147
        push r:6
        return
       label147:
        branch label145
       label148:
        push NULL
        return
      end // of function 

      setMember
      push r:1, '-w2c;('
      function2 () (r:1='this')
      end // of function 

      setMember
      push r:1, '=Ua)Z'
      function2 (r:2='9') (r:1='this')
      end // of function 

      setMember
      push r:1, ']1dV='
      function2 (r:2='(') (r:1='this')
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push '0co;I', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:3
        pop
        push r:3, '_x', r:this, '5R'
        getMember
        push r:this, '0P'
        getMember
        add
        setMember
        push r:3, '_y', r:this, '6R'
        getMember
        push r:this, '1P'
        getMember
        add
        setMember
        push r:3, '_rotation', r:'(', 0.0174
        divide
        setMember
        push r:3, 1, '(6IbI('
        getVariable
        push '6y392'
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '6LkQ1'
      function2 (r:2='((', r:3=')(') (r:1='this')
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push ';VcJC', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:4
        pop
        push r:4, '_x', r:'(('
        setMember
        push r:4, '_y', r:')('
        setMember
        push r:4, 1, '(6IbI('
        getVariable
        push '6y392'
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '{Cs', 4
      setMember
      push '44{N'
      function2 (r:2='}J') (r:1='this')
        push 0, 'flash'
        getVariable
        push '-5;Q'
        getMember
        push '}-B2'
        callMethod
        pop
        push 0, '*r'
        getVariable
        push '}-B2'
        callMethod
        pop
        push '*r'
        getVariable
        push '+-(0', r:this
        setMember
        push r:this, '(W3', r:'}J', 1, '+7U K'
        new
        setMember
        push '*r'
        getVariable
        push '32', r:this, '(W3'
        getMember
        setMember
        push r:this, '*6nO6(', 2, 1, r:this, '(W3'
        getMember
        push '18wU*'
        callMethod
        setMember
        push r:this, '(KA', 0, r:this, '*6nO6('
        getMember
        push 2, '3Wt'
        getVariable
        push 'createEmptyMC'
        callMethod
        setMember
        push r:this, '32', r:this, '(KA'
        getMember
        push 1, '+7U K'
        new
        setMember
        push r:this, '7Qe;6', 0, 'Array'
        new
        setMember
        push r:this, '+xiq*', 0, 'Array'
        new
        setMember
        push r:this, '-X', 1
        setMember
        push r:this, '9O*r', 0
        setMember
        push r:this, '[a', 0
        setMember
        push r:this, '22+0', 0
        setMember
        push r:this, '-jI0', 0
        setMember
        push r:this, '3WUPC(', 0, 'Array'
        new
        setMember
        push r:this, '3UE]s', 0, 1
        initArray
        setMember
        push r:this, '0 5 }', FALSE
        setMember
        push 0, 1, r:this, '5Hy6b'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '*tHy-('
      function2 () (r:1='this')
        push 128
        setRegister r:2
        pop
        push '*r'
        getVariable
        push '=OA'
        getMember
        push r:2
        divide
        push 1, 'Math'
        getVariable
        push 'ceil'
        callMethod
        push 2
        add
        push r:2
        multiply
        setRegister r:3
        pop
        push -16777216, TRUE, r:3, r:3, 4, 'flash'
        getVariable
        push 'display'
        getMember
        push 'BitmapData'
        newMethod
        setRegister r:4
        pop
        push r:2, '*hCfw', r:4, 3, '*r'
        getVariable
        push '=iw,6('
        callMethod
        setRegister r:5
        pop
        push r:this, ';+', 1, 1, r:this, '(W3'
        getMember
        push '18wU*'
        callMethod
        setMember
        push r:this, ';+'
        getMember
        push '-X', 0, ';+', r:this, ';+'
        getMember
        push 3, '3Wt'
        getVariable
        push 'attachMC'
        callMethod
        setMember
        push 0, r:5, 2, r:this, ';+'
        getMember
        push '-X'
        getMember
        push 'attachBitmap'
        callMethod
        pop
        push r:this, ';+'
        getMember
        push '((', 0
        setMember
        push r:this, ';+'
        getMember
        push ')(', 0
        setMember
        push r:this, ';+'
        getMember
        push '_x', '*r'
        getVariable
        push '=OA'
        getMember
        push 0.5
        multiply
        setMember
        push r:this, ';+'
        getMember
        push '_y', '*r'
        getVariable
        push '=OA'
        getMember
        push 0.5
        multiply
        setMember
      end // of function 

      setMember
      push r:1, '5Hy6b'
      function2 (r:2='[') (r:1='this')
        push r:this, '=kIA', r:'['
        setMember
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label149
        push r:0, 1
        strictEquals
        branchIfTrue label150
        push r:0, 9
        strictEquals
        branchIfTrue label155
        branch label156
       label149:
        push r:this, '+st4Z', 0
        setMember
        push r:this, '1T=', -1, TRUE, '*r'
        getVariable
        push ',KSpS'
        getMember
        push '*r'
        getVariable
        push ',KSpS'
        getMember
        push 4, 'flash'
        getVariable
        push 'display'
        getMember
        push 'BitmapData'
        newMethod
        setMember
        push r:this, '2t*({', '((', '*r'
        getVariable
        push ',KSpS'
        getMember
        push 0.5
        multiply
        push ')(', '*r'
        getVariable
        push ',KSpS'
        getMember
        push 0.5
        multiply
        push '9;I', 0, 3
        initObject
        push 1
        initArray
        setMember
        push r:this, '[wBA,', 10, '[N]0p', 2, r:this, '(W3'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '[wBA,'
        getMember
        push '_x', '*r'
        getVariable
        push '=OA'
        getMember
        push 0.5
        multiply
        setMember
        push r:this, '[wBA,'
        getMember
        push '_y', '*r'
        getVariable
        push '*OA'
        getMember
        push 0.5
        multiply
        setMember
        push TRUE, 1, ';ndCG'
        getVariable
        push '-p3G*'
        callMethod
        pop
        branch label156
       label150:
        push FALSE, 1, ';ndCG'
        getVariable
        push '-p3G*'
        callMethod
        pop
        push r:this, '86{p(', 0, 'Array'
        new
        setMember
        push r:this, ')_()', '*r'
        getVariable
        push ',KSpS'
        getMember
        push 0.5
        multiply
        push '*r'
        getVariable
        push ',KSpS'
        getMember
        push 0.5
        multiply
        push 2, r:this, '4gWwY'
        callMethod
        setMember
        push r:this, '{DfiG', '*r'
        getVariable
        push '+++F7'
        getMember
        push 1
        initArray
        setMember
        push r:this, ' uK=F', 3, ' uK=F', 2, r:this, '(W3'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, ' uK=F'
        getMember
        push '+(*'
        getMember
        push '_alpha', 50
        setMember
        push r:this, ' uK=F'
        getMember
        push '_x', '*r'
        getVariable
        push '=OA'
        getMember
        setMember
        push r:this, ' uK=F'
        getMember
        push '60-', 0
        setMember
        push 48
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        branch label152
       label151:
        push r:4
        increment
        setRegister r:4
        pop
       label152:
        push r:4, r:3
        lessThan
        not
        branchIfTrue label154
        push '-Ms=u', 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '{==W3('
        callMethod
        setRegister r:5
        pop
        push r:4, r:3
        divide
        push 6.28
        multiply
        setRegister r:6
        pop
        push r:6, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:7
        pop
        push r:6, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:8
        pop
        push 1, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        add
        setRegister r:9
        pop
        push 100
        setRegister r:10
        pop
        push r:5, '((', '*r'
        getVariable
        push ',KSpS'
        getMember
        push 0.5
        multiply
        push r:7, r:10
        multiply
        add
        setMember
        push r:5, ')(', '*r'
        getVariable
        push ',KSpS'
        getMember
        push 0.5
        multiply
        push r:8, r:10
        multiply
        add
        setMember
        push r:5, '[b', r:7, r:9
        multiply
        setMember
        push r:5, ']b', r:8, r:9
        multiply
        setMember
        push r:5, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push 3, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label153
        push r:5, '2VhU6', r:5, '2VhU6'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 100
        multiply
        add
        setMember
       label153:
        push r:5, '849kV', 0
        setMember
        push r:5, '(KpGn', 0.1, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.3
        multiply
        add
        setMember
        push r:5, '1o8jJ', r:5, 1, '] ktA'
        new
        setMember
        push 100, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 100
        multiply
        add
        push 1, r:5, '3BjX_'
        callMethod
        pop
        branch label151
       label154:
        branch label156
       label155:
        branch label156
       label156:
      end // of function 

      setMember
      push r:1, '4gWwY'
      function2 (r:2='((', r:3=')(') (r:1='this')
        push NULL, 1, '2e{I'
        new
        setRegister r:4
        pop
        push r:')(', r:'((', 2, r:4, '1o8jJ'
        getMember
        push '(j;o7'
        callMethod
        pop
        push r:4
        return
      end // of function 

      setMember
      push r:1, '=Pc9E('
      function2 (r:2='((', r:3=')(') (r:1='this')
        push NULL, 1, '8A1t='
        new
        setRegister r:4
        pop
        push r:')(', r:'((', 2, r:4, '1o8jJ'
        getMember
        push '(j;o7'
        callMethod
        pop
        push r:4
        return
      end // of function 

      setMember
      push r:1, ']e9J,'
      function2 () (r:1='this')
        push 0, r:this, '*tHy-('
        callMethod
        pop
        push 0
        setRegister r:2
        pop
        branch label158
       label157:
        push r:2
        increment
        setRegister r:2
        pop
       label158:
        push r:2, r:this, '2t*({'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label159
        push r:this, '2t*({'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push '*r'
        getVariable
        push '[=-gL'
        getMember
        push '*r'
        getVariable
        push '[=-gL'
        getMember
        push 'length'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        getMember
        push r:3, ')('
        getMember
        push r:3, '(('
        getMember
        push 3, '9)DM2'
        new
        setRegister r:4
        pop
        branch label157
       label159:
        push 128, '[shQC', r:this, '1T='
        getMember
        push 3, '*r'
        getVariable
        push '=iw,6('
        callMethod
        setRegister r:5
        pop
        push r:this, '1T=', r:5
        setMember
        push 0, r:this, '1T='
        getMember
        push 2, '44{N'
        getVariable
        push ';C*X2'
        getMember
        push 1, r:this, '32'
        getMember
        push '18wU*'
        callMethod
        push 'attachBitmap'
        callMethod
        pop
        push 0, r:this, '=C{N,'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '0D 6'
      function2 () (r:1='this')
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        push 1
        initArray
        setMember
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label160
        push r:0, 1
        strictEquals
        branchIfTrue label162
        push r:0, 9
        strictEquals
        branchIfTrue label181
        push r:0, 10
        strictEquals
        branchIfTrue label183
        branch label184
       label160:
        push 0, r:this, '*n9Y9('
        callMethod
        pop
        push r:this, '+st4Z', r:this, '+st4Z'
        getMember
        increment
        setMember
        push r:this, '+st4Z'
        getMember
        push '*r'
        getVariable
        push '3iRpS'
        getMember
        lessThan
        not
        not
        branchIfTrue label161
        push 0, r:this, ']e9J,'
        callMethod
        pop
        push 0, r:this, '[wBA,'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push 1, 1, r:this, '5Hy6b'
        callMethod
        pop
       label161:
        push r:this, '[wBA,'
        getMember
        push '{)59'
        getMember
        push '_rotation', r:this, '[wBA,'
        getMember
        push '{)59'
        getMember
        push '_rotation'
        getMember
        push 15, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '[wBA,'
        getMember
        push '1d'
        getMember
        push '_rotation', r:this, '[wBA,'
        getMember
        push '1d'
        getMember
        push '_rotation'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '+st4Z'
        getMember
        push '*r'
        getVariable
        push '3iRpS'
        getMember
        divide
        push 100
        multiply
        int
        push 1
        add
        toString
        push 1, r:this, '[wBA,'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        branch label184
       label162:
        push r:this, '{DfiG'
        getMember
        push 0
        getMember
        push '*r'
        getVariable
        push '+++F7'
        getMember
        divide
        push 100
        multiply
        setRegister r:2
        pop
        push r:this, ' uK=F'
        getMember
        push '+(*'
        getMember
        push '_yscale', r:this, ' uK=F'
        getMember
        push '+(*'
        getMember
        push '_yscale'
        getMember
        push 0.7
        multiply
        push r:2, 0.3
        multiply
        add
        setMember
        push r:this, ' uK=F'
        getMember
        push '-X9I('
        getMember
        push '_y', 295, r:this, ' uK=F'
        getMember
        push '+(*'
        getMember
        push '_height'
        getMember
        subtract
        setMember
        push r:this, '3UE]s', r:this, '3UE]s'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        push 1
        initArray
        setMember
       label163:
        push r:this, '3UE]s'
        getMember
        push 0
        getMember
        push 0
        lessThan
        not
        branchIfTrue label167
        push r:this, '3UE]s', r:this, '3UE]s'
        getMember
        push 0
        getMember
        push '*r'
        getVariable
        push '6YA3F'
        getMember
        add
        push 1
        initArray
        setMember
        push 0
        setRegister r:3
        pop
        branch label165
       label164:
        push r:3
        increment
        setRegister r:3
        pop
       label165:
        push r:3, r:this, '3WUPC('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label166
        push '*r'
        getVariable
        push ')sbN['
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        branch label164
       label166:
        branch label163
       label167:
        push '((', '*r'
        getVariable
        push ',KSpS'
        getMember
        push 0.5
        multiply
        push ')(', '*r'
        getVariable
        push ',KSpS'
        getMember
        push 0.5
        multiply
        push 2
        initObject
        push 1, r:this, ')_()'
        getMember
        push '}1A{_'
        callMethod
        setRegister r:4
        pop
        push '*r'
        getVariable
        push '=OA'
        getMember
        setRegister r:5
        pop
        push r:this, '0 5 }'
        getMember
        dup
        not
        branchIfTrue label168
        pop
        push r:4, r:5
        lessThan
        not
       label168:
        dup
        branchIfTrue label169
        pop
        push r:this, '0 5 }'
        getMember
        not
        dup
        not
        branchIfTrue label169
        pop
        push r:4, r:5
        lessThan
       label169:
        not
        branchIfTrue label170
        push 0, r:this, '{5(=D('
        callMethod
        pop
       label170:
        push 0, r:this, '7Qe;6'
        getMember
        push 'duplicate'
        callMethod
        setRegister r:6
        pop
        push 0
        setRegister r:7
        pop
        branch label172
       label171:
        push r:7
        increment
        setRegister r:7
        pop
       label172:
        push r:7, r:6, 'length'
        getMember
        lessThan
        not
        branchIfTrue label173
        push 0, r:6, r:7
        getMember
        push '87vE7('
        callMethod
        pop
        branch label171
       label173:
        push 0, r:this, '*=K+A('
        callMethod
        pop
        push r:this, '{DfiG', r:this, '{DfiG'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        push 1
        initArray
        setMember
        push -20
        setRegister r:8
        pop
        push r:this, ')_()'
        getMember
        push '(('
        getMember
        push r:8
        lessThan
        dup
        branchIfTrue label174
        pop
        push r:this, ')_()'
        getMember
        push '(('
        getMember
        push '*r'
        getVariable
        push ',KSpS'
        getMember
        push r:8
        subtract
        greaterThan
       label174:
        dup
        branchIfTrue label175
        pop
        push r:this, ')_()'
        getMember
        push ')('
        getMember
        push r:8
        lessThan
       label175:
        dup
        branchIfTrue label176
        pop
        push r:this, ')_()'
        getMember
        push ')('
        getMember
        push '*r'
        getVariable
        push ',KSpS'
        getMember
        push r:8
        subtract
        greaterThan
       label176:
        not
        branchIfTrue label177
        push r:this, '{DfiG', 20, r:this, '{DfiG'
        getMember
        push 0
        getMember
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        push 1
        initArray
        setMember
       label177:
        push r:this, '{DfiG'
        getMember
        push 0
        getMember
        push 0
        lessThan
        not
        branchIfTrue label178
        push 10, '=ksaA', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '(W3'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:9
        pop
        push r:9, '_x', '*r'
        getVariable
        push '=OA'
        getMember
        push 6
        subtract
        setMember
        push r:9, '_y', '*r'
        getVariable
        push '*OA'
        getMember
        push 6
        subtract
        setMember
        push 0, r:this, ' uK=F'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, '2VhU6', 8, 1
        initArray
        setMember
        push 9, 1, r:this, '5Hy6b'
        callMethod
        pop
       label178:
        push r:this, '{DfiG'
        getMember
        push 0
        getMember
        push 400
        lessThan
        not
        branchIfTrue label179
        push 0, 'flash'
        getVariable
        push 'filters'
        getMember
        push 'GlowFilter'
        newMethod
        setRegister r:10
        pop
        push r:this, ' uK=F'
        getMember
        push '60-', r:this, ' uK=F'
        getMember
        push '60-'
        getMember
        push 23, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 628
        modulo
        setMember
        push r:this, ' uK=F'
        getMember
        push '60-'
        getMember
        push 100
        divide
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push 10
        multiply
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        setRegister r:11
        pop
        push r:10, 'blurX', r:11
        setMember
        push r:10, 'blurY', r:11
        setMember
        push r:10, 'color', 16777215
        setMember
        push r:this, ' uK=F'
        getMember
        push 'filters', r:10, 1
        initArray
        setMember
        push 16777215, r:11, 4
        multiply
        push r:this, ' uK=F'
        getMember
        push 3, '*r'
        getVariable
        push ';CYOh'
        callMethod
        pop
        branch label180
       label179:
        push r:this, ' uK=F'
        getMember
        push 'filters'
        getMember
        push 'length'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label180
        push r:this, ' uK=F'
        getMember
        push 'filters', NULL
        setMember
        push 16777215, 0, r:this, ' uK=F'
        getMember
        push 3, '*r'
        getVariable
        push ';CYOh'
        callMethod
        pop
       label180:
        branch label184
       label181:
        push r:this, '2VhU6'
        getMember
        push 0
        getMember
        push 0
        lessThan
        not
        branchIfTrue label182
        push r:this, '-_X}5'
        getMember
        push 1, ';ndCG'
        getVariable
        push '7T4cF('
        callMethod
        pop
        push r:this, '[a', 0
        setMember
        push 10, 1, r:this, '5Hy6b'
        callMethod
        pop
       label182:
        branch label184
       label183:
        push r:this, '[a', r:this, '[a'
        getMember
        push 0.4, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '*6nO6('
        getMember
        push '_rotation', r:this, '*6nO6('
        getMember
        push '_rotation'
        getMember
        push r:this, '[a'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, ')_()'
        getMember
        push '-iB='
        getMember
        push '_rotation', 0, r:this, '*6nO6('
        getMember
        push '_rotation'
        getMember
        subtract
        setMember
        branch label184
       label184:
        push r:this, '0 5 }'
        getMember
        not
        branchIfTrue label185
        push r:this, '{_7eI('
        getMember
        push '_rotation', r:this, '{_7eI('
        getMember
        push '_rotation'
        getMember
        push 0.6, r:this, '3WUPC('
        getMember
        push 'length'
        getMember
        push 0.2
        multiply
        add
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label185:
      end // of function 

      setMember
      push r:1, '*=K+A('
      function2 () (r:1='this')
        push '44{N'
        getVariable
        push '*CgqK('
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label186
        push r:0, 1
        strictEquals
        branchIfTrue label189
        branch label190
       label186:
        push 0.07000000000000001
        setRegister r:2
        pop
        push 'Key'
        getVariable
        push 'LEFT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label187
        push r:this, '[a', r:this, '[a'
        getMember
        push r:2, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        setMember
       label187:
        push 'Key'
        getVariable
        push 'RIGHT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label188
        push r:this, '[a', r:this, '[a'
        getMember
        push r:2, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label188:
        push r:this, '[a', r:this, '[a'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.6, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        setMember
        push r:this, '9O*r', 'Math'
        getVariable
        push 'PI'
        getMember
        push r:this, '9O*r'
        getMember
        push r:this, '[a'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 2, '*r'
        getVariable
        push '0Yj1'
        callMethod
        setMember
        branch label190
       label189:
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 0.5
        multiply
        push r:this, '(W3'
        getMember
        push ')2fr3'
        getMember
        push '_xmouse'
        getMember
        subtract
        setRegister r:3
        pop
        push '*r'
        getVariable
        push '*OA'
        getMember
        push 0.5
        multiply
        push r:this, '(W3'
        getMember
        push ')2fr3'
        getMember
        push '_ymouse'
        getMember
        subtract
        setRegister r:4
        pop
        push r:3, r:4, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        setRegister r:5
        pop
        push r:this, '9O*r', 0, r:5
        subtract
        setMember
        branch label190
       label190:
        push 0, r:this, '9O*r'
        getMember
        subtract
        push 1.57
        add
        setRegister r:6
        pop
        push r:this, '22+0', r:6, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setMember
        push r:this, '-jI0', r:6, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setMember
        push 0, r:this, ')_()'
        getMember
        push '-iB='
        getMember
        push '_x'
        getMember
        subtract
        push r:this, '(KA'
        getMember
        push '_x'
        getMember
        subtract
        setRegister r:7
        pop
        push 0, r:this, ')_()'
        getMember
        push '-iB='
        getMember
        push '_y'
        getMember
        subtract
        push r:this, '(KA'
        getMember
        push '_y'
        getMember
        subtract
        setRegister r:8
        pop
        push r:this, '(KA'
        getMember
        push '_x', r:this, '(KA'
        getMember
        push '_x'
        getMember
        push r:7
        add
        setMember
        push r:this, '(KA'
        getMember
        push '_y', r:this, '(KA'
        getMember
        push '_y'
        getMember
        push r:8
        add
        setMember
        push r:this, '*6nO6('
        getMember
        push '_x', '*r'
        getVariable
        push '=OA'
        getMember
        push 0.5
        multiply
        setMember
        push r:this, '*6nO6('
        getMember
        push '_y', '*r'
        getVariable
        push '*OA'
        getMember
        push 0.5
        multiply
        setMember
        push r:this, '*6nO6('
        getMember
        push '_rotation', r:this, '9O*r'
        getMember
        push 'Math'
        getVariable
        push 'PI'
        getMember
        push 180
        divide
        divide
        setMember
        push '44{N'
        getVariable
        push '=2AUB'
        getMember
        not
        branchIfTrue label193
        push 'Key'
        getVariable
        push 'DOWN'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label191
        push r:this, '-X', r:this, '-X'
        getMember
        push 0.97
        multiply
        setMember
       label191:
        push 'Key'
        getVariable
        push 'UP'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label192
        push r:this, '-X', r:this, '-X'
        getMember
        push 1.025
        multiply
        setMember
       label192:
        push r:this, '*6nO6('
        getMember
        push '_xscale', r:this, '-X'
        getMember
        push 100
        multiply
        setMember
        push r:this, '*6nO6('
        getMember
        push '_yscale', r:this, '-X'
        getMember
        push 100
        multiply
        setMember
       label193:
        push r:this, '6BiO)'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label194
        push 0, r:this, ' 3e_O'
        callMethod
        pop
       label194:
        push 0.1
        setRegister r:9
        pop
        push r:this, ';+'
        getMember
        push '((', 128, r:this, ';+'
        getMember
        push '(('
        getMember
        push r:7, r:9
        multiply
        add
        push 2, '*r'
        getVariable
        push ')GiA'
        callMethod
        setMember
        push r:this, ';+'
        getMember
        push ')(', 128, r:this, ';+'
        getMember
        push ')('
        getMember
        push r:8, r:9
        multiply
        add
        push 2, '*r'
        getVariable
        push ')GiA'
        callMethod
        setMember
        push r:this, ';+'
        getMember
        push '-X'
        getMember
        push '_x', r:this, ';+'
        getMember
        push '(('
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 0.5
        multiply
        push 256
        add
        subtract
        setMember
        push r:this, ';+'
        getMember
        push '-X'
        getMember
        push '_y', r:this, ';+'
        getMember
        push ')('
        getMember
        push '*r'
        getVariable
        push '*OA'
        getMember
        push 0.5
        multiply
        push 256
        add
        subtract
        setMember
        push r:this, ';+'
        getMember
        push '_rotation', r:this, '*6nO6('
        getMember
        push '_rotation'
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '{==W3('
      function2 (r:2='5P55') (r:1='this')
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push r:'5P55', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:3
        pop
        push r:3
        return
      end // of function 

      setMember
      push r:1, '23c;]'
      function2 (r:2='((', r:3=')(') (r:1='this')
        push r:')('
        int
        push r:'(('
        int
        push 2, r:this, '1T='
        getMember
        push 'getPixel32'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '},J2'
        callMethod
        not
        not
        branchIfTrue label195
        push '(aVB+', 1, r:this, '{==W3('
        callMethod
        setRegister r:5
        pop
        push r:5, '((', r:'(('
        setMember
        push r:5, ')(', r:')('
        setMember
        push 50, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 80
        multiply
        add
        push 1, r:5, '3BjX_'
        callMethod
        pop
        push r:5, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:5, '849kV', 0
        setMember
        push r:5, '(KpGn', 0.1, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.1
        multiply
        add
        setMember
        push r:5, '+{eA+', 0.98
        setMember
        push -255, r:4, r:5, '-iB='
        getMember
        push 3, '*r'
        getVariable
        push '(H5 S'
        callMethod
        pop
        push r:5
        return
       label195:
        push NULL
        return
      end // of function 

      setMember
      push r:1, '{5(=D('
      function2 () (r:1='this')
        push r:this, '0 5 }', r:this, '0 5 }'
        getMember
        not
        setMember
        push r:this, '0 5 }'
        getMember
        not
        branchIfTrue label199
        push r:this, '{_7eI(', '44{N'
        getVariable
        push ';C*X2'
        getMember
        push '6M0U-(', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '{_7eI('
        getMember
        push '_alpha', 50
        setMember
        push r:this, '{_7eI('
        getMember
        push '_x', '*r'
        getVariable
        push ',KSpS'
        getMember
        push 0.5
        multiply
        setMember
        push r:this, '{_7eI('
        getMember
        push '_y', '*r'
        getVariable
        push ',KSpS'
        getMember
        push 0.5
        multiply
        setMember
        push 0
        setRegister r:2
        pop
        branch label197
       label196:
        push r:2
        increment
        setRegister r:2
        pop
       label197:
        push r:2, r:this, '3WUPC('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label198
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:3
        pop
        push 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 80
        multiply
        add
        setRegister r:4
        pop
        push r:this, '{_7eI('
        getMember
        push '_y'
        getMember
        push r:3, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:4
        multiply
        add
        push r:this, '{_7eI('
        getMember
        push '_x'
        getMember
        push r:3, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:4
        multiply
        add
        push 2, r:this, '=Pc9E('
        callMethod
        setRegister r:5
        pop
        push 0, r:5, '0Suis'
        callMethod
        pop
        push r:5, '8o*DE(', NULL
        setMember
        push r:5, '1o8jJ', NULL
        setMember
        push r:this, '3WUPC('
        getMember
        push r:2
        getMember
        push 1, r:5, '(H5 S'
        callMethod
        pop
        branch label196
       label198:
        branch label203
       label199:
        push 0, r:this, '{_7eI('
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push 0
        setRegister r:6
        pop
        branch label201
       label200:
        push r:6
        increment
        setRegister r:6
        pop
       label201:
        push r:6, r:this, '86{p('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label203
        push r:this, '86{p('
        getMember
        push r:6
        getMember
        setRegister r:7
        pop
        push r:7, '=kIA'
        getMember
        push 2
        equals
        not
        branchIfTrue label202
        push 0, r:7, '9T54'
        callMethod
        pop
        push r:6
        decrement
        setRegister r:6
        pop
       label202:
        branch label200
       label203:
      end // of function 

      setMember
      push r:1, '=C{N,'
      function2 () (r:1='this')
        push 4
        setRegister r:2
        pop
        push 80
        setRegister r:3
        pop
        push 10
        setRegister r:4
        pop
        push r:this, '6BiO)', 5, 1, r:this, '(W3'
        getMember
        push '18wU*'
        callMethod
        setMember
        push r:this, '6BiO)'
        getMember
        push 1, '+7U K'
        new
        setRegister r:5
        pop
        push r:this, '6BiO)'
        getMember
        push '_x', r:2
        setMember
        push r:this, '6BiO)'
        getMember
        push '_y', '*r'
        getVariable
        push '*OA'
        getMember
        push r:3, r:2
        add
        subtract
        setMember
        push r:this, '6BiO)'
        getMember
        push '(KA', 0, 1, r:5, '18wU*'
        callMethod
        setMember
        push r:this, '6BiO)'
        getMember
        push '(KA'
        getMember
        push '_x', r:3, 0.5
        multiply
        setMember
        push r:this, '6BiO)'
        getMember
        push '(KA'
        getMember
        push '_y', r:3, 0.5
        multiply
        setMember
        push r:this, '6BiO)'
        getMember
        push '1Z 6', 0, '}XcJC', 2, r:5, '*=_p_'
        callMethod
        setMember
        push r:this, '6BiO)'
        getMember
        push '1Z 6'
        getMember
        push '_xscale', r:3
        setMember
        push r:this, '6BiO)'
        getMember
        push '1Z 6'
        getMember
        push '_yscale', r:3
        setMember
        push r:this, '6BiO)'
        getMember
        push '1Z 6'
        getMember
        push 1, r:this, '6BiO)'
        getMember
        push '(KA'
        getMember
        push 'setMask'
        callMethod
        pop
        push r:this, '6BiO)'
        getMember
        push '(KA'
        getMember
        push '7bJ', 0, 1, r:this, '6BiO)'
        getMember
        push '(KA'
        getMember
        push 1, '+7U K'
        new
        push '18wU*'
        callMethod
        setMember
        push 0, r:this, '1T='
        getMember
        push 2, r:this, '6BiO)'
        getMember
        push '(KA'
        getMember
        push '7bJ'
        getMember
        push 'attachBitmap'
        callMethod
        pop
        push r:this, '6BiO)'
        getMember
        push '(KA'
        getMember
        push '7bJ'
        getMember
        push '_xscale', r:4
        setMember
        push r:this, '6BiO)'
        getMember
        push '(KA'
        getMember
        push '7bJ'
        getMember
        push '_yscale', r:4
        setMember
        push r:this, '6BiO)'
        getMember
        push '(KA'
        getMember
        push '7bJ'
        getMember
        push '_x', 0, r:this, '6BiO)'
        getMember
        push '(KA'
        getMember
        push '7bJ'
        getMember
        push '_width'
        getMember
        subtract
        push 0.5
        multiply
        setMember
        push r:this, '6BiO)'
        getMember
        push '(KA'
        getMember
        push '7bJ'
        getMember
        push '_y', 0, r:this, '6BiO)'
        getMember
        push '(KA'
        getMember
        push '7bJ'
        getMember
        push '_height'
        getMember
        subtract
        push 0.5
        multiply
        setMember
        push 0, '(v7VD(', 2, r:5, '*=_p_'
        callMethod
        setRegister r:6
        pop
        push r:6, '_x', r:3, 0.5
        multiply
        setMember
        push r:6, '_y', r:3, 0.5
        multiply
        setMember
        push 16777215, 100, r:this, '6BiO)'
        getMember
        push '(KA'
        getMember
        push 3, '*r'
        getVariable
        push ';CYOh'
        callMethod
        pop
        push r:this, '6BiO)'
        getMember
        push '(KA'
        getMember
        push '_alpha', 50
        setMember
      end // of function 

      setMember
      push r:1, ' 3e_O'
      function2 () (r:1='this')
        push r:this, '6BiO)'
        getMember
        push '(KA'
        getMember
        push '7bJ'
        getMember
        push '_xscale'
        getMember
        push 0.01
        multiply
        setRegister r:2
        pop
        push r:this, '6BiO)'
        getMember
        push '(KA'
        getMember
        push '_rotation', r:this, '*6nO6('
        getMember
        push '_rotation'
        getMember
        setMember
        push r:this, '6BiO)'
        getMember
        push '(KA'
        getMember
        push '7bJ'
        getMember
        push '_x', r:this, '(KA'
        getMember
        push '_x'
        getMember
        push r:2
        multiply
        setMember
        push r:this, '6BiO)'
        getMember
        push '(KA'
        getMember
        push '7bJ'
        getMember
        push '_y', r:this, '(KA'
        getMember
        push '_y'
        getMember
        push r:2
        multiply
        setMember
      end // of function 

      setMember
      push r:1, '77ldJ('
      function2 (r:2='((', r:3=')(') (r:1='this')
        push '*r'
        getVariable
        push '2QF=}'
        getMember
        setRegister r:4
        pop
        push r:')('
        int
        push r:'(('
        int
        push 2, r:this, '1T='
        getMember
        push 'getPixel32'
        callMethod
        push 1, r:this, '},J2'
        callMethod
        return
      end // of function 

      setMember
      push r:1, '},J2'
      function2 (r:2='(v+') (r:1='this')
        push r:'(v+', 1, '*r'
        getVariable
        push '2ya 0('
        callMethod
        setRegister r:3
        pop
        push r:3, '('
        getMember
        push '44{N'
        getVariable
        push '72}8I('
        getMember
        greaterThan
        not
        return
      end // of function 

      setMember
      push r:1, '*n9Y9('
      function2 () (r:1='this')
        push r:this, '2t*({'
        getMember
        push 'length'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:2
        pop
        push r:this, '2t*({'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3, '9;I'
        getMember
        push r:3, ')('
        getMember
        push r:3, '(('
        getMember
        push 3, r:this, ')ZB3a'
        callMethod
        setRegister r:4
        pop
        push r:4, NULL
        equals
        not
        not
        branchIfTrue label207
        push 0
        setRegister r:5
        pop
        branch label205
       label204:
        push r:5
        increment
        setRegister r:5
        pop
       label205:
        push r:5, r:4, 'length'
        getMember
        lessThan
        not
        branchIfTrue label206
        push r:4, r:5
        getMember
        push 1, r:this, '2t*({'
        getMember
        push 'push'
        callMethod
        pop
        branch label204
       label206:
        push 1, r:2, 2, r:this, '2t*({'
        getMember
        push 'splice'
        callMethod
        pop
       label207:
      end // of function 

      setMember
      push r:1, ')ZB3a'
      function2 (r:2='((', r:3=')(', r:4='9;I') (r:1='this')
        push r:'9;I', r:')(', r:'((', 3, r:this, '[6l9t'
        callMethod
        setRegister r:5
        pop
        push 0, 'Array'
        new
        setRegister r:6
        pop
        push 0
        setRegister r:7
        pop
        branch label209
       label208:
        push r:7
        increment
        setRegister r:7
        pop
       label209:
        push r:7, r:5, 'list'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label211
        push r:5, 'list'
        getMember
        push r:7
        getMember
        setRegister r:8
        pop
        push r:8, '_y'
        getMember
        push r:8, '_x'
        getMember
        push r:5, 3, '-[m(M'
        getVariable
        push 'localToGlobal'
        callMethod
        setRegister r:9
        pop
        push r:9, ')('
        getMember
        push r:9, '(('
        getMember
        push r:this, '(KA'
        getMember
        push 3, '-[m(M'
        getVariable
        push 'globalToLocal'
        callMethod
        setRegister r:10
        pop
        push r:10, ')('
        getMember
        push r:10, '(('
        getMember
        push 2, r:this, '77ldJ('
        callMethod
        not
        branchIfTrue label210
        push 0, r:5, 'removeMovieClip'
        callMethod
        pop
        push NULL
        return
       label210:
        push '((', r:10, '(('
        getMember
        push ')(', r:10, ')('
        getMember
        push '9;I', 180, r:5, '_rotation'
        getMember
        push r:8, '_rotation'
        getMember
        add
        push 2, '*r'
        getVariable
        push '0Yj1'
        callMethod
        push 3
        initObject
        push 1, r:6, 'push'
        callMethod
        pop
        branch label208
       label211:
        push r:this, '(KA'
        getMember
        push 1, r:5, 'getBounds'
        callMethod
        setRegister r:11
        pop
        push 0
        setRegister r:12
        pop
        branch label213
       label212:
        push r:12
        increment
        setRegister r:12
        pop
       label213:
        push r:12, 1500
        lessThan
        not
        branchIfTrue label215
        push r:11, 'xMin'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push r:11, 'xMax'
        getMember
        push r:11, 'xMin'
        getMember
        subtract
        multiply
        add
        int
        setRegister r:13
        pop
        push r:11, 'yMin'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push r:11, 'yMax'
        getMember
        push r:11, 'yMin'
        getMember
        subtract
        multiply
        add
        int
        setRegister r:14
        pop
        push TRUE, r:14, r:13, 3, r:5, 'hitTest'
        callMethod
        not
        branchIfTrue label214
        push r:14, r:13, 2, r:this, '77ldJ('
        callMethod
        not
        branchIfTrue label214
        push '((', r:'((', ')(', r:')(', 2
        initObject
        push '((', r:13, ')(', r:14, 2
        initObject
        push 2, '*r'
        getVariable
        push '}1A{_'
        callMethod
        push 40
        greaterThan
        not
        branchIfTrue label214
        push 0, r:5, 'removeMovieClip'
        callMethod
        pop
        push NULL
        return
       label214:
        branch label212
       label215:
        push r:5, 'blendMode', '(WBt)'
        getVariable
        push ' J3IC'
        getMember
        setMember
        push r:5, r:this, '1T='
        getMember
        push 2, '*r'
        getVariable
        push '4CDwp'
        callMethod
        pop
        push 0, r:5, 'removeMovieClip'
        callMethod
        pop
        push r:6
        return
      end // of function 

      setMember
      push r:1, '[6l9t'
      function2 (r:2='((', r:3=')(', r:4='9;I') (r:1='this')
        push '44{N'
        getVariable
        push '3{Htb'
        getMember
        push '{md;C', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:5
        pop
        push r:this, '8(=l'
        getMember
        push TRUE
        equals
        not
        not
        branchIfTrue label216
        push 0, r:5, 'removeMovieClip'
        callMethod
        pop
        push '44{N'
        getVariable
        push '3{Htb'
        getMember
        push '-3[5D', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:5
        pop
       label216:
        push r:5, '_totalframes'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        add
        toString
        setRegister r:6
        pop
        push r:6, 1, r:5, 'gotoAndStop'
        callMethod
        pop
        push r:5, 'list', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:7
        pop
        branch label218
       label217:
        push r:7
        increment
        setRegister r:7
        pop
       label218:
        push r:7, 7
        lessThan
        not
        branchIfTrue label220
        push '$a', r:7
        add
        push r:5, 2, '3Wt'
        getVariable
        push 'getVar'
        callMethod
        setRegister r:8
        pop
        push r:8, NULL
        equals
        not
        branchIfTrue label219
        branch label220
       label219:
        push r:8, 1, r:5, 'list'
        getMember
        push 'push'
        callMethod
        pop
        push r:8, '_visible', FALSE
        setMember
        branch label217
       label220:
        push r:5, 'list'
        getMember
        push 'length'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:9
        pop
        push r:this, '8(=l'
        getMember
        push TRUE
        equals
        not
        not
        branchIfTrue label221
        push 0
        setRegister r:9
        pop
       label221:
        push r:5, 'list'
        getMember
        push r:9
        getMember
        setRegister r:10
        pop
        push r:10, '_x'
        getMember
        push r:10, '_y'
        getMember
        push 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        setRegister r:11
        pop
        push r:'9;I', 180, r:10, '_rotation'
        getMember
        add
        subtract
        setRegister r:'9;I'
        pop
        push 3.14, r:11, r:'9;I', 0.0174
        multiply
        add
        push 2, '*r'
        getVariable
        push '0Yj1'
        callMethod
        setRegister r:12
        pop
        push r:10, '_x'
        getMember
        push r:10, '_x'
        getMember
        multiply
        push r:10, '_y'
        getMember
        push r:10, '_y'
        getMember
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        setRegister r:13
        pop
        push r:5, '_x', r:'((', r:12, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:13
        multiply
        subtract
        setMember
        push r:5, '_y', r:')(', r:12, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:13
        multiply
        subtract
        setMember
        push r:5, '_rotation', r:'9;I'
        setMember
        push r:10, 1, r:5, 'list'
        getMember
        push 'remove'
        callMethod
        pop
        push r:this, '8(=l', TRUE
        setMember
        push r:5
        return
      end // of function 

      setMember
      push r:1, '9t1r1'
      function2 () (r:1='this')
        push 'onKeyDown', ']668C(', r:this, 2, '3Wt'
        getVariable
        push 'callback'
        callMethod
        push 'onKeyUp', '=(D=5', r:this, 2, '3Wt'
        getVariable
        push 'callback'
        callMethod
        push 2
        initObject
        setRegister r:2
        pop
        push r:2, 1, 'Key'
        getVariable
        push 'addListener'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ']668C('
      function2 () (r:1='this')
        push 0, 'Key'
        getVariable
        push 'getCode'
        callMethod
        setRegister r:2
        pop
        push r:2, 96
        lessThan
        not
        dup
        not
        branchIfTrue label222
        pop
        push r:2, 107
        lessThan
       label222:
        not
        branchIfTrue label223
       label223:
        push r:2, 49
        lessThan
        not
        dup
        not
        branchIfTrue label224
        pop
        push r:2, 52
        lessThan
       label224:
        not
        branchIfTrue label225
       label225:
        push r:2, 52
        lessThan
        not
        dup
        not
        branchIfTrue label226
        pop
        push r:2, 55
        lessThan
       label226:
        not
        branchIfTrue label227
       label227:
        push r:2
        setRegister r:0
        push 'Key'
        getVariable
        push 'SPACE'
        getMember
        strictEquals
        branchIfTrue label228
        push r:0, 'Key'
        getVariable
        push 'ENTER'
        getMember
        strictEquals
        branchIfTrue label229
        branch label230
       label228:
        branch label230
       label229:
        push r:this, '{DfiG', r:this, '{DfiG'
        getMember
        push 0
        getMember
        push 100
        subtract
        push 1
        initArray
        setMember
        branch label230
       label230:
      end // of function 

      setMember
      push r:1, '=(D=5'
      function2 () (r:1='this')
      end // of function 

      setMember
      push r:1, ']}ZkD('
      function2 () (r:1='this')
        push '((', '*r'
        getVariable
        push '2QF=}'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 2, '*r'
        getVariable
        push '2QF=}'
        getMember
        multiply
        subtract
        multiply
        add
        int
        push ')(', '*r'
        getVariable
        push '2QF=}'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '*r'
        getVariable
        push '*OA'
        getMember
        push 2, '*r'
        getVariable
        push '2QF=}'
        getMember
        multiply
        subtract
        multiply
        add
        int
        push 2
        initObject
        return
      end // of function 

      setMember
      push r:1, ')Q;,A('
      function2 (r:2='((', r:3=')(', r:4='(') (r:1='this')
        push '44{N'
        getVariable
        push '{YJfb'
        getMember
        push ';VcJC', 2, r:this, '(W3'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:5
        pop
        push r:5, '_x', r:'(('
        setMember
        push r:5, '_y', r:')('
        setMember
        push r:5, '_rotation', r:'(', 0.0174
        divide
        setMember
      end // of function 

      setMember
      push r:1, '=rV+L('
      function2 (r:2='9I*') (r:1='this')
        push 0, 'Array'
        new
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        push 0
        setRegister r:6
        pop
        branch label232
       label231:
        push r:6
        increment
        setRegister r:6
        pop
       label232:
        push r:6, r:'9I*', '_width'
        getMember
        lessThan
        not
        branchIfTrue label237
        push 0
        setRegister r:7
        pop
        branch label234
       label233:
        push r:7
        increment
        setRegister r:7
        pop
       label234:
        push r:7, r:'9I*', '_height'
        getMember
        lessThan
        not
        branchIfTrue label236
        push r:7, r:6, r:'9I*', 3, r:this, '{eSu)'
        callMethod
        not
        not
        branchIfTrue label235
        push 0
        setRegister r:4
        pop
        push r:7, 1
        subtract
        setRegister r:5
        pop
        branch label236
       label235:
        branch label233
       label236:
        branch label231
       label237:
        push 'First : ', r:4
        add
        push ', '
        add
        push r:5
        add
        push 1, ']{i'
        getVariable
        push 'trace'
        callMethod
        pop
        push '((', r:4, ')(', r:5, 2
        initObject
        setRegister r:8
        pop
        push r:8, 1
        initArray
        setRegister r:3
        pop
        push '((', 0, ')(', 1, 2
        initObject
        setRegister r:9
        pop
        push 0
        setRegister r:10
        pop
       label238:
        push TRUE
        not
        branchIfTrue label245
        push 1, r:9, 2, r:this, '(VKB'
        callMethod
        setRegister r:11
        pop
        push r:4, r:11, '(('
        getMember
        add
        setRegister r:12
        pop
        push r:5, r:11, ')('
        getMember
        add
        setRegister r:13
        pop
        push r:13, r:12, r:'9I*', 3, r:this, '{eSu)'
        callMethod
        not
        not
        branchIfTrue label239
        push r:11
        setRegister r:9
        pop
        branch label244
       label239:
        push r:13, r:9, ')('
        getMember
        add
        push r:12, r:9, '(('
        getMember
        add
        push r:'9I*', 3, r:this, '{eSu)'
        callMethod
        not
        branchIfTrue label240
        push r:12, r:9, '(('
        getMember
        add
        setRegister r:4
        pop
        push r:13, r:9, ')('
        getMember
        add
        setRegister r:5
        pop
        push -1, r:9, 2, r:this, '(VKB'
        callMethod
        setRegister r:9
        pop
        branch label241
       label240:
        push r:12
        setRegister r:4
        pop
        push r:13
        setRegister r:5
        pop
       label241:
        push r:4, r:8, '(('
        getMember
        equals
        not
        dup
        not
        branchIfTrue label242
        pop
        push r:5, r:8, ')('
        getMember
        equals
        not
       label242:
        not
        branchIfTrue label243
        push '((', r:4, ')(', r:5, 2
        initObject
        push 1, r:3, 'push'
        callMethod
        pop
        branch label244
       label243:
        branch label245
       label244:
        branch label238
       label245:
        push r:3
        return
      end // of function 

      setMember
      push r:1, '{eSu)'
      function2 (r:2='}J', r:3='((', r:4=')(') (r:1='this')
        push TRUE, r:')(', r:'((', 3, r:'}J', 'hitTest'
        callMethod
        not
        return
      end // of function 

      setMember
      push r:1, '(VKB'
      function2 (r:2='+', r:3='6g,A') (r:1='this')
        push '((', 0, r:'+', ')('
        getMember
        subtract
        push r:'6g,A'
        multiply
        push ')(', r:'+', '(('
        getMember
        push r:'6g,A'
        multiply
        push 2
        initObject
        return
      end // of function 

      setMember
      push r:0, '=2AUB', FALSE
      setMember
      push r:0, '3{Htb', 0
      setMember
      push r:0, '4MvcB', 4
      setMember
      push r:0, ';C*X2', 5
      setMember
      push r:0, ')lMLM', 6
      setMember
      push r:0, '[j9fb', 7
      setMember
      push r:0, '{YJfb', 8
      setMember
      push r:0, '72}8I(', 60
      setMember
      push r:0, '*CgqK(', 0
      setMember
      push '2e{I'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push '44{N'
        getVariable
        push '[j9fb'
        getMember
        push '5(oMC', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:'}J'
        pop
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '+{eA+', 0.98
        setMember
        push r:this, '(KpGn', 0.5
        setMember
        push r:this, ']MM75(', FALSE
        setMember
        push r:this, '-jFD', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 20
        multiply
        setMember
        push r:this, '-iB='
        getMember
        push '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        push r:this, '-iB='
        getMember
        push '_xscale', 135
        setMember
        push r:this, '-iB='
        getMember
        push '_yscale', r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        setMember
        push r:this, '1o8jJ', r:this, 1, '(6IbI('
        new
        setMember
        push r:this, '1o8jJ'
        getMember
        push '+{eA+', 0.5
        setMember
        push 16, '2e{I'
        getVariable
        push '{Cs'
        getMember
        push 2, r:this, '1o8jJ'
        getMember
        push '[7qyn'
        callMethod
        pop
        push r:this, '1o8jJ'
        getMember
        push '-w2c;(', '}1=G9', r:this, 2, '3Wt'
        getVariable
        push 'callback'
        callMethod
        setMember
        push r:this, '1o8jJ'
        getMember
        push '=Ua)Z', '2EGlI(', r:this, 2, '3Wt'
        getVariable
        push 'callback'
        callMethod
        setMember
        push 0, r:this, '+h9IY'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '+h9IY'
      function2 () (r:1='this')
        push '44{N'
        getVariable
        push '3{Htb'
        getMember
        push ' t6cM', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:2
        pop
        push r:this, '=CL', 0, TRUE, '2e{I'
        getVariable
        push '{Cs'
        getMember
        push 2
        multiply
        push '2e{I'
        getVariable
        push '{Cs'
        getMember
        push 2
        multiply
        push 4, 'flash'
        getVariable
        push 'display'
        getMember
        push 'BitmapData'
        newMethod
        setMember
        push r:2, r:this, '=CL'
        getMember
        push 2, '*r'
        getVariable
        push '4CDwp'
        callMethod
        pop
        push 0, r:2, 'removeMovieClip'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push 0
        setRegister r:3
        pop
        branch label247
       label246:
        push r:3
        increment
        setRegister r:3
        pop
       label247:
        push r:3, '*r'
        getVariable
        push '+-(0'
        getMember
        push '+xiq*'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label253
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '+xiq*'
        getMember
        push r:3
        getMember
        setRegister r:4
        pop
        push r:this, '(('
        getMember
        push r:4, '(('
        getMember
        subtract
        setRegister r:5
        pop
        push r:this, ')('
        getMember
        push r:4, ')('
        getMember
        subtract
        setRegister r:6
        pop
        push 280
        setRegister r:7
        pop
        push r:5, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:7
        lessThan
        dup
        not
        branchIfTrue label248
        pop
        push r:6, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:7
        lessThan
       label248:
        not
        branchIfTrue label251
        push r:4, ',p]X)'
        getMember
        not
        not
        branchIfTrue label249
        push 0, r:4, '*=_p_'
        callMethod
        pop
       label249:
        push r:4, 1, r:this, '}1A{_'
        callMethod
        push '2e{I'
        getVariable
        push '{Cs'
        getMember
        push '9)DM2'
        getVariable
        push '{Cs'
        getMember
        add
        lessThan
        not
        branchIfTrue label250
        push r:this, 1, r:4, ',l3O-'
        callMethod
        pop
       label250:
        branch label252
       label251:
        push r:4, ',p]X)'
        getMember
        not
        branchIfTrue label252
        push 0, r:4, '*TlKy'
        callMethod
        pop
       label252:
        branch label246
       label253:
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '-iB='
        getMember
        push '_rotation'
        getMember
        push r:this, '-jFD'
        getMember
        add
        setMember
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}1=G9'
      function2 () (r:1='this')
        push '2e{I'
        getVariable
        push '{Cs'
        getMember
        push 2
        multiply
        push '2e{I'
        getVariable
        push '{Cs'
        getMember
        push 2
        multiply
        push 0, 0, 4, 'flash'
        getVariable
        push 'geom'
        getMember
        push 'Rectangle'
        newMethod
        setRegister r:2
        pop
        push r:this, '1o8jJ'
        getMember
        push '5R'
        getMember
        push r:this, '1o8jJ'
        getMember
        push '0P'
        getMember
        add
        push '2e{I'
        getVariable
        push '{Cs'
        getMember
        subtract
        setRegister r:3
        pop
        push r:this, '1o8jJ'
        getMember
        push '6R'
        getMember
        push r:this, '1o8jJ'
        getMember
        push '1P'
        getMember
        add
        push '2e{I'
        getVariable
        push '{Cs'
        getMember
        subtract
        setRegister r:4
        pop
        push r:4, r:3, 2, 'flash'
        getVariable
        push 'geom'
        getMember
        push 'Point'
        newMethod
        setRegister r:5
        pop
        push TRUE, NULL, r:this, '=CL'
        getMember
        push r:5, r:2, r:this, '=CL'
        getMember
        push 6, '*r'
        getVariable
        push '+-(0'
        getMember
        push '3GF'
        getMember
        push 'copyPixels'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '2EGlI('
      function2 (r:2='10') (r:1='this')
        push 8, r:this, '[b'
        getMember
        push r:this, '[b'
        getMember
        multiply
        push r:this, ']b'
        getMember
        push r:this, ']b'
        getMember
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        push 0.5
        multiply
        push 3
        subtract
        push 0, 3, '*r'
        getVariable
        push '2K'
        callMethod
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        branch label255
       label254:
        push r:4
        increment
        setRegister r:4
        pop
       label255:
        push r:4, r:3
        lessThan
        not
        branchIfTrue label256
        push '-O_ y', 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '{==W3('
        callMethod
        setRegister r:5
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:6
        pop
        push 0.5, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push r:3
        multiply
        push 2
        multiply
        add
        setRegister r:7
        pop
        push r:5, '((', r:'10', '(('
        getMember
        setMember
        push r:5, ')(', r:'10', ')('
        getMember
        setMember
        push r:5, '[b', r:6, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:7
        multiply
        setMember
        push r:5, ']b', r:6, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:7
        multiply
        setMember
        push r:5, '6b', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 20
        multiply
        setMember
        push r:5, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:5, '849kV', 0
        setMember
        push 50, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 80
        multiply
        add
        push 1, r:5, '3BjX_'
        callMethod
        pop
        push r:5, '-iB='
        getMember
        push '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        push r:5, '1o8jJ', r:5, 1, '] ktA'
        new
        setMember
        branch label254
       label256:
        push r:this, '-jFD', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 10, r:3, 2
        multiply
        add
        multiply
        setMember
      end // of function 

      setMember
      push r:1, '88rS('
      function2 (r:2='}2D*') (r:1='this')
        push '44{N'
        getVariable
        push '3{Htb'
        getMember
        push ',tiXV', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:3
        pop
        push r:3, 'blendMode', '(WBt)'
        getVariable
        push ' J3IC'
        getMember
        setMember
        push r:3, '_x', r:this, '(('
        getMember
        setMember
        push r:3, '_y', r:this, ')('
        getMember
        setMember
        push r:3, '_xscale', r:'}2D*', 100
        multiply
        setMember
        push r:3, '_yscale', r:'}2D*', 100
        multiply
        setMember
        push 0
        setRegister r:4
        pop
        branch label258
       label257:
        push r:4
        increment
        setRegister r:4
        pop
       label258:
        push r:4, 10, r:'}2D*'
        add
        lessThan
        not
        branchIfTrue label259
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '2e{I'
        getVariable
        push '{Cs'
        getMember
        push r:'}2D*'
        multiply
        multiply
        setRegister r:5
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:6
        pop
        push r:this, '(('
        getMember
        push r:6, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:5
        multiply
        add
        setRegister r:7
        pop
        push r:this, ')('
        getMember
        push r:6, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:5
        multiply
        add
        setRegister r:8
        pop
        push r:8, r:7, 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '23c;]'
        callMethod
        setRegister r:9
        pop
        push r:9, '1o8jJ', r:9, 1, '] ktA'
        new
        setMember
        push r:9, '2VhU6', r:9, '2VhU6'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 50
        multiply
        add
        setMember
        branch label257
       label259:
        push r:3, '*r'
        getVariable
        push '+-(0'
        getMember
        push '1T='
        getMember
        push 2, '*r'
        getVariable
        push '4CDwp'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '{Cs', 8
      setMember
      push r:0, '7{Qr,', 0.5
      setMember
      push r:0, '4EUbv', 60
      setMember
      push '-[m(M'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',Hwi)'
      function2 ('-', r:2='5U4B') (r:1='this')
        push '*B'
        var
        push '*B', r:'5U4B'
        function2 () (r:1='this')
          push '*B'
          getVariable
          push 1, 'clearInterval', 1, '3Wt'
          getVariable
          push 'getGlobal'
          callMethod
          push UNDEF
          callMethod
          pop
          push 0, '-'
          callFunction
          pop
        end // of function 

        push 2, 'setInterval', 1, '3Wt'
        getVariable
        push 'getGlobal'
        callMethod
        push UNDEF
        callMethod
        setVariable
      end // of function 

      setMember
      push r:0, '}wUHz'
      function2 (r:2='=rJ', r:3='7olX7', r:4='}wUHz') (r:1='this')
        push r:'=rJ', NULL
        equals
        not
        branchIfTrue label260
        push NULL
        return
       label260:
        push r:'7olX7', 'length'
        getMember
        setRegister r:5
        pop
        push r:5, 1
        equals
        not
        branchIfTrue label261
        push r:'}wUHz', 1, r:'7olX7', 1, r:'=rJ', 'split'
        callMethod
        push 'join'
        callMethod
        return
       label261:
        push 0
        setRegister r:7
        pop
        push ''
        setRegister r:8
        pop
       label262:
        push TRUE
        not
        branchIfTrue label264
        push r:7, r:'7olX7', 2, r:'=rJ', 'indexOf'
        callMethod
        setRegister r:6
        pop
        push r:6, -1
        equals
        not
        branchIfTrue label263
        branch label264
       label263:
        push r:8, r:6, r:7, 2, r:'=rJ', 'slice'
        callMethod
        push r:'}wUHz'
        add
        add
        setRegister r:8
        pop
        push r:6, r:5
        add
        setRegister r:7
        pop
        branch label262
       label264:
        push r:8, r:7, 1, r:'=rJ', 'substring'
        callMethod
        add
        return
      end // of function 

      setMember
      push r:0, '* I51'
      function2 (r:2='=rJ') (r:1='this')
        push 0, 'Array'
        new
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        push r:'=rJ', 'length'
        getMember
        setRegister r:6
        pop
        push 0
        setRegister r:3
        pop
        branch label266
       label265:
        push r:3
        increment
        setRegister r:3
        pop
       label266:
        push r:3, r:6
        lessThan
        not
        branchIfTrue label271
        push r:3, 1, r:'=rJ', 'charCodeAt'
        callMethod
        setRegister r:7
        pop
        push r:7, 10
        equals
        dup
        branchIfTrue label267
        pop
        push r:7, 13
        equals
       label267:
        not
        branchIfTrue label270
        push r:3, r:5, 2, r:'=rJ', 'slice'
        callMethod
        push 1, r:4, 'push'
        callMethod
        pop
        push r:7, 13
        equals
        dup
        not
        branchIfTrue label268
        pop
        push r:3, 1
        add
        push 1, r:'=rJ', 'charCodeAt'
        callMethod
        push 10
        equals
       label268:
        not
        branchIfTrue label269
        push r:3
        increment
        setRegister r:3
        pop
       label269:
        push r:3, 1
        add
        setRegister r:5
        pop
       label270:
        branch label265
       label271:
        push r:3, r:5, 2, r:'=rJ', 'slice'
        callMethod
        push 1, r:4, 'push'
        callMethod
        pop
        push r:4
        return
      end // of function 

      setMember
      push r:0, ',JBe0'
      function2 (r:2=';p(') (r:1='this')
        push 0, r:';p(', 'duplicate'
        callMethod
        setRegister r:4
        pop
        push r:4, 'length'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:3
        pop
        branch label273
       label272:
        push r:3
        increment
        setRegister r:3
        pop
       label273:
        push r:3, r:5
        lessThan
        not
        branchIfTrue label274
        push r:5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:6
        pop
        push r:5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:7
        pop
        push r:4, r:6
        getMember
        setRegister r:8
        pop
        push r:4, r:6, r:4, r:7
        getMember
        setMember
        push r:4, r:7, r:8
        setMember
        branch label272
       label274:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '4UQ(1'
      function2 (r:2='}J') (r:1='this')
        push 0
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
       label275:
        push r:'}J', '_parent'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label276
        push r:3, r:'}J', '_x'
        getMember
        add
        setRegister r:3
        pop
        push r:4, r:'}J', '_y'
        getMember
        add
        setRegister r:4
        pop
        push r:'}J', '_parent'
        getMember
        setRegister r:'}J'
        pop
        branch label275
       label276:
        push '{2', r:3, '}2', r:4, 2
        initObject
        return
      end // of function 

      setMember
      push r:0, ' Ly7b'
      function2 (r:2='((', r:3='{nq3-(') (r:1='this')
        push r:'(('
        toString
        setRegister r:4
        pop
       label277:
        push r:4, 'length'
        getMember
        push r:'{nq3-('
        lessThan
        not
        branchIfTrue label278
        push '0', r:4
        add
        setRegister r:4
        pop
        branch label277
       label278:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '7g,ln'
      function2 (r:2='(') (r:1='this')
        push 0
        setRegister r:3
        pop
        push r:'(', 'length'
        getMember
        push 1
        subtract
        setRegister r:4
        pop
        branch label280
       label279:
        push r:4
        decrement
        setRegister r:4
        pop
       label280:
        push r:4, 0
        lessThan
        not
        not
        branchIfTrue label281
        push r:3, r:'(', r:4
        getMember
        add
        setRegister r:3
        pop
        branch label279
       label281:
        push r:3, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
       label282:
        push r:3, r:'(', r:4
        getMember
        lessThan
        not
        not
        branchIfTrue label283
        push r:3, r:'(', r:4
        getMember
        subtract
        setRegister r:3
        pop
        push r:4
        increment
        setRegister r:4
        pop
        branch label282
       label283:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '4*fgv'
      function2 (r:2='*QA', r:3='+QA') (r:1='this')
        push r:'*QA', 1, r:'*QA', 'getBounds'
        callMethod
        setRegister r:4
        pop
        push r:'*QA', 1, r:'+QA', 'getBounds'
        callMethod
        setRegister r:5
        pop
        push r:4, 'xMin'
        getMember
        push r:4, 'xMax'
        getMember
        add
        push 2
        divide
        push r:5, 'xMin'
        getMember
        push r:5, 'xMax'
        getMember
        add
        push 2
        divide
        subtract
        setRegister r:6
        pop
        push r:4, 'yMin'
        getMember
        push r:4, 'yMax'
        getMember
        add
        push 2
        divide
        push r:5, 'yMin'
        getMember
        push r:5, 'yMax'
        getMember
        add
        push 2
        divide
        subtract
        setRegister r:7
        pop
        push r:6, r:6
        multiply
        push r:7, r:7
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        return
      end // of function 

      setMember
      push r:0, '16KA'
      function2 ('}J') (r:1='this')
        push '(', 0, 'Array'
        new
        varEquals
        function2 (r:2='4') (r:1='this')
          push '}J'
          getVariable
          push r:'4'
          getMember
          setRegister r:3
          pop
          push r:3, 1, '3Wt'
          getVariable
          push '_typeof'
          callMethod
          push 'movieclip'
          equals
          dup
          not
          branchIfTrue label284
          pop
          push r:3, '_parent'
          getMember
          push '}J'
          getVariable
          equals
         label284:
          not
          branchIfTrue label285
          push r:3, 1, '('
          getVariable
          push 'push'
          callMethod
          pop
         label285:
        end // of function 

        push '}J'
        getVariable
        push 2, '3Wt'
        getVariable
        push 'forin'
        callMethod
        pop
        push '('
        getVariable
        return
      end // of function 

      setMember
      push r:0, 'localToGlobal'
      function2 (r:2='}J', r:3='((', r:4=')(') (r:1='this')
        push 0, '19{O'
        new
        setRegister r:5
        pop
        push r:'((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:5, 1, r:'}J', 'localToGlobal'
        callMethod
        pop
        push '((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push ')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push 2
        initObject
        return
      end // of function 

      setMember
      push r:0, 'globalToLocal'
      function2 (r:2='}J', r:3='((', r:4=')(') (r:1='this')
        push 0, '19{O'
        new
        setRegister r:5
        pop
        push r:'((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:5, 1, r:'}J', 'globalToLocal'
        callMethod
        pop
        push '((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push ')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push 2
        initObject
        return
      end // of function 

      setMember
      push r:0, '{Gq]-'
      function2 () (r:1='this')
        push '$r', '$h', '$w', '$y', '$x', '$box', '$matrixType', '$radial', '$linear', 9
        initArray
        setRegister r:2
        pop
        push '-[m(M'
        getVariable
        push ']cY[2', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:3
        pop
        branch label287
       label286:
        push r:3
        increment
        setRegister r:3
        pop
       label287:
        push r:3, r:2, 'length'
        getMember
        lessThan
        not
        branchIfTrue label288
        push r:2, r:3
        getMember
        setRegister r:4
        pop
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push r:3, 1, 1, r:4, 'substring'
        callMethod
        setMember
        branch label286
       label288:
      end // of function 

      setMember
      push r:0, 'beginGradientFill'
      function2 (r:2='}J', r:3=' Wo02', r:4='=cKzE(', r:5='8)JNX', r:6='7eq8)', r:7='matrix') (r:1='this')
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push NULL
        equals
        not
        branchIfTrue label289
        push 0, '-[m(M'
        getVariable
        push '{Gq]-'
        callMethod
        pop
       label289:
        push 0, '19{O'
        new
        setRegister r:8
        pop
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 3
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 2
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, '(('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 4
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, ')('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 5
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, ' ('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 6
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, '1'
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 7
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, '='
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 8
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:8, r:'7eq8)', r:'8)JNX', r:'=cKzE(', r:' Wo02'
        not
        branchIfTrue label290
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 0
        getMember
        branch label291
       label290:
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 1
        getMember
       label291:
        push 5, r:'}J', 'beginGradientFill'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, ',[A(', 1, 1, '$x', 'substring'
      callMethod
      setMember
      push r:0, '-[A(', 1, 1, '$y', 'substring'
      callMethod
      setMember
      push r:0, ']cY[2', NULL
      setMember
      push '980Sb'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '}-B2'
      function2 (r:2='}J') (r:1='this')
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        not
        branchIfTrue label292
        push UNDEF
        return
       label292:
        push '980Sb'
        getVariable
        push ')2fr3', r:'}J'
        setMember
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        branchIfTrue label293
        push '980Sb'
        getVariable
        push 'mode', '980Sb'
        getVariable
        push ')2fr3'
        getMember
        push 1, '44{N'
        new
        setMember
       label293:
      end // of function 

      setMember
      push r:0, '0D 6'
      function2 () (r:1='this')
        push 0, '{-kxL'
        getVariable
        push '87vE7('
        callMethod
        pop
        push 0, '980Sb'
        getVariable
        push 'mode'
        getMember
        push '0D 6'
        callMethod
        pop
      end // of function 

      setMember
    end // of frame 0
  end // of defineMovieClip 197
  
  exportAssets
    197 as '90D*'
  end // of exportAssets
end
