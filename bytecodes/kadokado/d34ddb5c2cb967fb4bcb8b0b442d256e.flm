movie 'd34ddb5c2cb967fb4bcb8b0b442d256e.swf' compressed // flash 8, total frames: 1, frame rate: 40 fps, 700x480 px


  defineMovieClip 4 // total frames: 3
  end // of defineMovieClip 4

  defineMovieClip 6 // total frames: 1
  end // of defineMovieClip 6

  defineMovieClip 8 // total frames: 1
  end // of defineMovieClip 8

  defineMovieClip 10 // total frames: 1
  end // of defineMovieClip 10

  defineMovieClip 12 // total frames: 1
  end // of defineMovieClip 12

  defineMovieClip 14 // total frames: 1
  end // of defineMovieClip 14

  defineMovieClip 15 // total frames: 20
  end // of defineMovieClip 15
  
  exportAssets
    15 as ')+jEC'
  end // of exportAssets

  defineMovieClip 18 // total frames: 1
  end // of defineMovieClip 18

  defineMovieClip 20 // total frames: 1
  end // of defineMovieClip 20

  defineMovieClip 22 // total frames: 1
  end // of defineMovieClip 22

  defineMovieClip 23 // total frames: 15
  end // of defineMovieClip 23

  defineMovieClip 26 // total frames: 1
  end // of defineMovieClip 26

  defineMovieClip 27 // total frames: 30
  end // of defineMovieClip 27

  defineMovieClip 29 // total frames: 1
  end // of defineMovieClip 29

  defineMovieClip 32 // total frames: 30
  end // of defineMovieClip 32

  defineMovieClip 33 // total frames: 1
  end // of defineMovieClip 33
  
  exportAssets
    33 as ']p9I('
  end // of exportAssets

  defineMovieClip 44 // total frames: 23
  end // of defineMovieClip 44

  defineMovieClip 46 // total frames: 1
  end // of defineMovieClip 46

  defineMovieClip 48 // total frames: 1
  end // of defineMovieClip 48

  defineMovieClip 50 // total frames: 1
  end // of defineMovieClip 50

  defineMovieClip 52 // total frames: 1
  end // of defineMovieClip 52

  defineMovieClip 54 // total frames: 1
  end // of defineMovieClip 54

  defineMovieClip 61 // total frames: 25
  end // of defineMovieClip 61

  defineMovieClip 62 // total frames: 1
  end // of defineMovieClip 62

  defineMovieClip 63 // total frames: 1
  end // of defineMovieClip 63
  
  exportAssets
    63 as '{p9I('
  end // of exportAssets

  defineMovieClip 67 // total frames: 1
  end // of defineMovieClip 67

  defineMovieClip 75 // total frames: 26
  end // of defineMovieClip 75

  defineMovieClip 77 // total frames: 6
  end // of defineMovieClip 77
  
  exportAssets
    77 as '1Gw=P'
  end // of exportAssets

  defineMovieClip 80 // total frames: 3
  end // of defineMovieClip 80

  defineMovieClip 83 // total frames: 1
  end // of defineMovieClip 83

  defineMovieClip 87 // total frames: 20
  end // of defineMovieClip 87

  defineMovieClip 88 // total frames: 1
  end // of defineMovieClip 88

  defineMovieClip 93 // total frames: 4
  end // of defineMovieClip 93

  defineMovieClip 94 // total frames: 1
  end // of defineMovieClip 94

  defineMovieClip 97 // total frames: 1
  end // of defineMovieClip 97

  defineMovieClip 99 // total frames: 1
  end // of defineMovieClip 99

  defineMovieClip 101 // total frames: 1
  end // of defineMovieClip 101

  defineMovieClip 103 // total frames: 1
  end // of defineMovieClip 103

  defineMovieClip 106 // total frames: 1
  end // of defineMovieClip 106

  defineMovieClip 108 // total frames: 1
  end // of defineMovieClip 108

  defineMovieClip 111 // total frames: 8

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 111

  defineMovieClip 113 // total frames: 1
  end // of defineMovieClip 113

  defineMovieClip 114 // total frames: 8

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 114

  defineMovieClip 118 // total frames: 1
  end // of defineMovieClip 118

  defineMovieClip 119 // total frames: 2
  end // of defineMovieClip 119

  defineMovieClip 120 // total frames: 2

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 120

  defineMovieClip 123 // total frames: 1
  end // of defineMovieClip 123

  defineMovieClip 125 // total frames: 1
  end // of defineMovieClip 125

  defineMovieClip 127 // total frames: 7

    frame 0
      stop
    end // of frame 0

    frame 6
      stop
    end // of frame 6
  end // of defineMovieClip 127

  defineMovieClip 130 // total frames: 1
  end // of defineMovieClip 130

  defineMovieClip 132 // total frames: 1
  end // of defineMovieClip 132

  defineMovieClip 138 // total frames: 6

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 138

  defineMovieClip 140 // total frames: 1
  end // of defineMovieClip 140

  defineMovieClip 141 // total frames: 1
  end // of defineMovieClip 141

  defineMovieClip 144 // total frames: 1
  end // of defineMovieClip 144

  defineMovieClip 147 // total frames: 1
  end // of defineMovieClip 147

  defineMovieClip 152 // total frames: 6
  end // of defineMovieClip 152

  defineMovieClip 155 // total frames: 1
  end // of defineMovieClip 155

  defineMovieClip 158 // total frames: 2
  end // of defineMovieClip 158

  defineMovieClip 160 // total frames: 1
  end // of defineMovieClip 160

  defineMovieClip 171 // total frames: 29
  end // of defineMovieClip 171

  defineMovieClip 172 // total frames: 1
  end // of defineMovieClip 172

  defineMovieClip 173 // total frames: 3
  end // of defineMovieClip 173

  defineMovieClip 175 // total frames: 1
  end // of defineMovieClip 175

  defineMovieClip 176 // total frames: 3

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 176

  defineMovieClip 179 // total frames: 4
  end // of defineMovieClip 179

  defineMovieClip 180 // total frames: 9

    frame 8
      stop
    end // of frame 8
  end // of defineMovieClip 180

  defineMovieClip 184 // total frames: 3
  end // of defineMovieClip 184

  defineMovieClip 185 // total frames: 1
  end // of defineMovieClip 185

  defineMovieClip 194 // total frames: 7
  end // of defineMovieClip 194

  defineMovieClip 195 // total frames: 1
  end // of defineMovieClip 195

  defineMovieClip 197 // total frames: 1
  end // of defineMovieClip 197

  defineMovieClip 199 // total frames: 1
  end // of defineMovieClip 199

  defineMovieClip 201 // total frames: 1
  end // of defineMovieClip 201

  defineMovieClip 203 // total frames: 1
  end // of defineMovieClip 203

  defineMovieClip 206 // total frames: 1
  end // of defineMovieClip 206

  defineMovieClip 208 // total frames: 1
  end // of defineMovieClip 208

  defineMovieClip 210 // total frames: 1
  end // of defineMovieClip 210

  defineMovieClip 211 // total frames: 1
  end // of defineMovieClip 211

  defineMovieClip 213 // total frames: 1
  end // of defineMovieClip 213

  defineMovieClip 215 // total frames: 1
  end // of defineMovieClip 215

  defineMovieClip 216 // total frames: 20
  end // of defineMovieClip 216

  defineMovieClip 218 // total frames: 1
  end // of defineMovieClip 218

  defineMovieClip 219 // total frames: 1
  end // of defineMovieClip 219

  defineMovieClip 221 // total frames: 1
  end // of defineMovieClip 221

  defineMovieClip 222 // total frames: 5
  end // of defineMovieClip 222

  defineMovieClip 248 // total frames: 25
  end // of defineMovieClip 248

  defineMovieClip 252 // total frames: 3
  end // of defineMovieClip 252

  defineMovieClip 253 // total frames: 10
  end // of defineMovieClip 253

  defineMovieClip 261 // total frames: 4
  end // of defineMovieClip 261

  defineMovieClip 264 // total frames: 36
  end // of defineMovieClip 264

  defineMovieClip 270 // total frames: 30
  end // of defineMovieClip 270

  defineMovieClip 274 // total frames: 40
  end // of defineMovieClip 274

  defineMovieClip 280 // total frames: 16
  end // of defineMovieClip 280

  defineMovieClip 329 // total frames: 48
  end // of defineMovieClip 329

  defineMovieClip 333 // total frames: 5
  end // of defineMovieClip 333

  defineMovieClip 334 // total frames: 1
  end // of defineMovieClip 334

  defineMovieClip 335 // total frames: 1
  end // of defineMovieClip 335

  defineMovieClip 336 // total frames: 20
  end // of defineMovieClip 336
  
  exportAssets
    336 as '-Jd;C'
  end // of exportAssets

  defineMovieClip 339 // total frames: 1
  end // of defineMovieClip 339
  
  exportAssets
    339 as '5VIv7'
  end // of exportAssets

  defineMovieClip 342 // total frames: 1
  end // of defineMovieClip 342
  
  exportAssets
    342 as '0o*6'
  end // of exportAssets

  defineMovieClip 346 // total frames: 3
  end // of defineMovieClip 346
  
  exportAssets
    346 as ',+TFu'
  end // of exportAssets

  defineMovieClip 348 // total frames: 1
  end // of defineMovieClip 348
  
  exportAssets
    348 as '{hZVF('
  end // of exportAssets

  defineMovieClip 350 // total frames: 1
  end // of defineMovieClip 350

  defineMovieClip 351 // total frames: 9

    frame 8
      push ''
      removeClip
    end // of frame 8
  end // of defineMovieClip 351
  
  exportAssets
    351 as '8atwB('
  end // of exportAssets

  defineMovieClip 353 // total frames: 1
  end // of defineMovieClip 353
  
  exportAssets
    353 as '+ua[U'
  end // of exportAssets

  defineMovieClip 357 // total frames: 3

    frame 0
      push '[X', 20, 0.0, 'Math'
      getVariable
      push 'random'
      callMethod
      push 80
      multiply
      add
      setVariable
    end // of frame 0

    frame 1
      constants '', '[X', 'Math', 'random', 'abs'  
      push '', 1, '', 1
      getProperty
      push '[X'
      getVariable
      subtract
      setProperty
      push '', 1
      getProperty
      push -300
      lessThan
      not
      branchIfTrue label1
      push '[X', 50, 0.0, 'Math'
      getVariable
      push 'random'
      callMethod
      push 120
      multiply
      add
      setVariable
      push '', 0.0, 0.0, 'Math'
      getVariable
      push 'random'
      callMethod
      push 2
      multiply
      push 1
      subtract
      push 8
      multiply
      setProperty
      push '', 1, 0.0
      setProperty
      push '', 2, '', 0.0
      getProperty
      push 1, 'Math'
      getVariable
      push 'abs'
      callMethod
      push 16
      multiply
      setProperty
      push '', 3, 50, 0.0, 'Math'
      getVariable
      push 'random'
      callMethod
      push 200
      multiply
      add
      setProperty
     label1:
    end // of frame 1

    frame 2
      gotoFrame 1
      play
    end // of frame 2
  end // of defineMovieClip 357

  defineMovieClip 358 // total frames: 1
  end // of defineMovieClip 358

  defineMovieClip 364 // total frames: 7

    frame 0
      stop
    end // of frame 0

    frame 6
      stop
    end // of frame 6
  end // of defineMovieClip 364

  defineMovieClip 365 // total frames: 1
  end // of defineMovieClip 365
  
  exportAssets
    365 as '+fPi}'
  end // of exportAssets

  defineMovieClip 367 // total frames: 1
  end // of defineMovieClip 367
  
  exportAssets
    367 as '1Cn(V'
  end // of exportAssets

  defineMovieClip 370 // total frames: 1
  end // of defineMovieClip 370

  defineMovieClip 371 // total frames: 11

    frame 6
      constants '5t 9)', ''  
      push '5t 9)'
      getVariable
      push '5t 9)', '5t 9)'
      getVariable
      decrement
      setVariable
      push 0.0
      greaterThan
      not
      branchIfTrue label1
      push '', 4
      getProperty
      push 1
      subtract
      gotoAndPlay
     label1:
    end // of frame 6

    frame 10
      push 0.0, '+KD'
      getVariable
      push '9T54'
      callMethod
      pop
    end // of frame 10
  end // of defineMovieClip 371
  
  exportAssets
    371 as '{e{=K('
  end // of exportAssets

  defineMovieClip 374 // total frames: 2
  end // of defineMovieClip 374

  defineMovieClip 375 // total frames: 9

    frame 8
      stop
    end // of frame 8
  end // of defineMovieClip 375
  
  exportAssets
    375 as '5 uwd'
  end // of exportAssets

  defineMovieClip 377 // total frames: 1
  end // of defineMovieClip 377
  
  exportAssets
    377 as '3mhCL'
  end // of exportAssets

  defineMovieClip 380 // total frames: 1
  end // of defineMovieClip 380

  defineMovieClip 381 // total frames: 1
  end // of defineMovieClip 381
  
  exportAssets
    381 as ',Tyae'
  end // of exportAssets

  defineMovieClip 383 // total frames: 1
  end // of defineMovieClip 383
  
  exportAssets
    383 as '* A+'
  end // of exportAssets

  defineMovieClip 385 // total frames: 1
  end // of defineMovieClip 385

  defineMovieClip 386 // total frames: 20

    frame 6
      push 1, 1, '+KD'
      getVariable
      push '8;=-('
      callMethod
      pop
    end // of frame 6
  end // of defineMovieClip 386
  
  exportAssets
    386 as ')iBsW'
  end // of exportAssets

  defineMovieClip 391 // total frames: 17

    frame 7
      push 3
      random
      push 0.0
      equals
      not
      branchIfTrue label1
      gotoFrame 0
      play
     label1:
    end // of frame 7

    frame 15
      constants '5t 9)'  
      push '5t 9)'
      getVariable
      push '5t 9)', '5t 9)'
      getVariable
      decrement
      setVariable
      push 0.0
      greaterThan
      not
      branchIfTrue label1
      gotoFrame 0
      play
     label1:
    end // of frame 15

    frame 16
      push ''
      removeClip
    end // of frame 16
  end // of defineMovieClip 391
  
  exportAssets
    391 as '5n4 5'
  end // of exportAssets

  defineMovieClip 396 // total frames: 5

    frame 4
      push ''
      removeClip
    end // of frame 4
  end // of defineMovieClip 396
  
  exportAssets
    396 as ')YfUn'
  end // of exportAssets

  defineMovieClip 398 // total frames: 1
  end // of defineMovieClip 398

  defineMovieClip 399 // total frames: 5
  end // of defineMovieClip 399
  
  exportAssets
    399 as '9rGzL'
  end // of exportAssets

  defineMovieClip 406 // total frames: 10

    frame 9
      stop
    end // of frame 9
  end // of defineMovieClip 406
  
  exportAssets
    406 as '*VE}H'
  end // of exportAssets

  defineMovieClip 408 // total frames: 3

    frame 2
      push 1, 'this'
      getVariable
      push 2, '+KD'
      getVariable
      push '1m(7i'
      callMethod
      pop
      push ''
      removeClip
    end // of frame 2
  end // of defineMovieClip 408
  
  exportAssets
    408 as '}CbPC('
  end // of exportAssets

  defineMovieClip 410 // total frames: 1
  end // of defineMovieClip 410
  
  exportAssets
    410 as '=-+Q1'
  end // of exportAssets

  defineMovieClip 419 // total frames: 7
  end // of defineMovieClip 419
  
  exportAssets
    419 as '(4sPC'
  end // of exportAssets

  defineMovieClip 433 // total frames: 14

    frame 13
      push ''
      removeClip
    end // of frame 13
  end // of defineMovieClip 433
  
  exportAssets
    433 as '-O_ y'
  end // of exportAssets

  defineMovieClip 434 // total frames: 13

    frame 12
      push 0.0, '+KD'
      getVariable
      push '9T54'
      callMethod
      pop
    end // of frame 12
  end // of defineMovieClip 434
  
  exportAssets
    434 as '1r[bZ'
  end // of exportAssets

  defineMovieClip 438 // total frames: 3
  end // of defineMovieClip 438
  
  exportAssets
    438 as '=MR4L('
  end // of exportAssets

  defineMovieClip 439 // total frames: 1
  end // of defineMovieClip 439

  defineMovieClip 440 // total frames: 28
  end // of defineMovieClip 440

  defineMovieClip 441 // total frames: 1
  end // of defineMovieClip 441
  
  exportAssets
    441 as '7LeMK('
  end // of exportAssets

  defineMovieClip 445 // total frames: 1
  end // of defineMovieClip 445

  defineMovieClip 446 // total frames: 21
  end // of defineMovieClip 446

  defineMovieClip 452 // total frames: 28
  end // of defineMovieClip 452
  
  exportAssets
    452 as ',XnXA'
  end // of exportAssets

  defineMovieClip 454 // total frames: 1
  end // of defineMovieClip 454
  
  exportAssets
    454 as '),HaF('
  end // of exportAssets

  defineMovieClip 457 // total frames: 2
  end // of defineMovieClip 457
  
  exportAssets
    457 as '=,Y-r'
  end // of exportAssets

  defineMovieClip 459 // total frames: 1
  end // of defineMovieClip 459

  defineMovieClip 460 // total frames: 16

    frame 15
      push ''
      removeClip
    end // of frame 15
  end // of defineMovieClip 460
  
  exportAssets
    460 as ']fZWx'
  end // of exportAssets

  defineMovieClip 464 // total frames: 2
  end // of defineMovieClip 464
  
  exportAssets
    464 as '8CoU-'
  end // of exportAssets

  defineMovieClip 466 // total frames: 1
  end // of defineMovieClip 466

  defineMovieClip 467 // total frames: 5

    frame 4
      push ''
      removeClip
    end // of frame 4
  end // of defineMovieClip 467
  
  exportAssets
    467 as '{y6)2('
  end // of exportAssets

  defineMovieClip 471 // total frames: 1
  end // of defineMovieClip 471

  defineMovieClip 475 // total frames: 41
  end // of defineMovieClip 475

  defineMovieClip 480 // total frames: 1
  end // of defineMovieClip 480

  defineMovieClip 483 // total frames: 6
  end // of defineMovieClip 483
  
  exportAssets
    483 as '8sfFC'
  end // of exportAssets

  defineMovieClip 485 // total frames: 1
  end // of defineMovieClip 485

  defineMovieClip 486 // total frames: 19

    frame 18
      push ''
      removeClip
    end // of frame 18
  end // of defineMovieClip 486
  
  exportAssets
    486 as '=CN8-('
  end // of exportAssets

  defineMovieClip 488 // total frames: 1
  end // of defineMovieClip 488

  defineMovieClip 489 // total frames: 5

    frame 4
      push ''
      removeClip
    end // of frame 4
  end // of defineMovieClip 489
  
  exportAssets
    489 as '3=vLC'
  end // of exportAssets

  defineMovieClip 494 // total frames: 8

    frame 7
      push 0.0, '_parent'
      getVariable
      push '+KD'
      getMember
      push '9T54'
      callMethod
      pop
    end // of frame 7
  end // of defineMovieClip 494
  
  exportAssets
    494 as '8=Lw3('
  end // of exportAssets

  defineMovieClip 497 // total frames: 2
  end // of defineMovieClip 497
  
  exportAssets
    497 as ' r_qd'
  end // of exportAssets

  defineMovieClip 504 // total frames: 4
  end // of defineMovieClip 504

  defineMovieClip 510 // total frames: 6

    frame 1
      constants '5t 9)'  
      push '5t 9)', '5t 9)'
      getVariable
      decrement
      setVariable
      push '5t 9)'
      getVariable
      push 0.0
      greaterThan
      not
      branchIfTrue label1
      gotoFrame 0
      play
     label1:
    end // of frame 1

    frame 5
      stop
    end // of frame 5
  end // of defineMovieClip 510

  defineMovieClip 512 // total frames: 1
  end // of defineMovieClip 512

  defineMovieClip 519 // total frames: 8

    frame 7
      gotoLabel '4MC5'
      play
    end // of frame 7
  end // of defineMovieClip 519

  defineMovieClip 527 // total frames: 2
  end // of defineMovieClip 527

  defineMovieClip 532 // total frames: 13

    frame 6
      stop
    end // of frame 6

    frame 12
      push 0.0, '_parent'
      getVariable
      push '+KD'
      getMember
      push '9T54'
      callMethod
      pop
    end // of frame 12
  end // of defineMovieClip 532

  defineMovieClip 534 // total frames: 1
  end // of defineMovieClip 534

  defineMovieClip 535 // total frames: 10

    frame 9
      gotoFrame 0
      play
    end // of frame 9
  end // of defineMovieClip 535

  defineMovieClip 537 // total frames: 1
  end // of defineMovieClip 537

  defineMovieClip 538 // total frames: 23

    frame 21
      push 'stop'
      getVariable
      pop
    end // of frame 21
  end // of defineMovieClip 538

  defineMovieClip 539 // total frames: 26

    frame 25
      push 'stop'
      getVariable
      pop
    end // of frame 25
  end // of defineMovieClip 539

  defineMovieClip 540 // total frames: 29

    frame 28
      push 'stop'
      getVariable
      pop
    end // of frame 28
  end // of defineMovieClip 540

  defineMovieClip 541 // total frames: 32

    frame 30
      push 'stop'
      getVariable
      pop
    end // of frame 30
  end // of defineMovieClip 541

  defineMovieClip 542 // total frames: 39

    frame 37
      push 'stop'
      getVariable
      pop
    end // of frame 37
  end // of defineMovieClip 542

  defineMovieClip 545 // total frames: 2
  end // of defineMovieClip 545

  defineMovieClip 546 // total frames: 23

    frame 22
      stop
    end // of frame 22
  end // of defineMovieClip 546

  defineMovieClip 550 // total frames: 3
  end // of defineMovieClip 550

  defineMovieClip 552 // total frames: 1
  end // of defineMovieClip 552

  defineMovieClip 554 // total frames: 1
  end // of defineMovieClip 554

  defineMovieClip 556 // total frames: 1
  end // of defineMovieClip 556

  defineMovieClip 560 // total frames: 8

    frame 0
      push '}4'
      getVariable
      push '_rotation', 0.0, 'Math'
      getVariable
      push 'random'
      callMethod
      push 360
      multiply
      setMember
    end // of frame 0

    frame 7
      gotoLabel '4MC5'
      play
    end // of frame 7
  end // of defineMovieClip 560

  defineMovieClip 564 // total frames: 2
  end // of defineMovieClip 564

  defineMovieClip 566 // total frames: 1
  end // of defineMovieClip 566

  defineMovieClip 571 // total frames: 5

    frame 4
      gotoLabel '4MC5'
      play
    end // of frame 4
  end // of defineMovieClip 571

  defineMovieClip 573 // total frames: 4

    frame 3
      gotoLabel '4MC5'
      play
    end // of frame 3
  end // of defineMovieClip 573

  defineMovieClip 576 // total frames: 1
  end // of defineMovieClip 576

  defineMovieClip 577 // total frames: 2

    frame 1
      stop
    end // of frame 1
  end // of defineMovieClip 577

  defineMovieClip 578 // total frames: 23
  end // of defineMovieClip 578
  
  exportAssets
    578 as '97mPC'
  end // of exportAssets

  defineMovieClip 579 // total frames: 1

    frame 0
      constants '*cPR8', 'list', 'Array', ')', ' (', '4eyD,', '{2', '}2', ']oH', 'prototype', '}-B2', 'index', '2VhU6', '3bK;D', '-c0 t', '87vE7(', '{-kxL', '-V;B', '*feM7(', 'type', ')93A', '2', '5=6-', 'gotoAndPlay', 'length', '3*+SM', 'push', '8A1T3(', ']b', '3U*}=(', ';MBeK', '{BxJE(', '0oBh,', 'Math', 'random', '-h0W3(', '[b', '2C0[', '((', ')(', '6P8c', '*r', '+-(0', '4,01', ')153L', 'cos', 'sin', '{sRCQ', '9w+x0(', '5Gr1)', 'insert', 'splice', 'call', 'pop', ']]*Q1(', '7EyYf', 'shift', '=dbLP', '0y)Lk', 'unshift', '(Ip9A', '36}9L(', 'flash', 'Object', 'filters', '{lN=R', '{Al{2', '69-', ',MXK', '0G-c,(', ' cR(z', '76N1t', '7mXA=(', '-sgp[', '62GLS', ',ynX', 'min', '3Wt', '6-k9h', '2]ya', '+ikVP', '(csOe', ']r5gM', '}]3A)', '5tmU]', ';)d5r', '=A+hY', '[FUzW', '-=TH((', '=OA', '7O,UZ', 'abs', '*IgKI(', '*OA', '{IOei', ');Qei', '}1aDI', ' DVSi', '(3-Z3(', '6P+,Y', '3Aqqr', 'yMax', '3=', ']8J5+', '1K8ei', '-rs5P', '53RYu', ']uwq8(', '}P{I', '4S cD', '9FeuX', '9K-7H', '}B)Y_', '(VKB', '-iB=', '7bJ', '(fc-d', '7Lx*X', ',551N', '*1*;B(', ')K{W)', '=O=T', '}luuP', '3T5 A(', '=T,=', '-V', '32', '}oQA7', ' TXf;', '86{p(', '+{eA+', 'xMin', 'xMax', 'yMin', ']Y(', '*', '62=', ' kbSF', '[ovL6', '-B5XJ', '6b', '[a', '6GhvX', '}W5SD', '}Yax5', '7cTBB', '{V', '=UVBB', '}CL', '}V--k', '7s', '(', '-fRSr', '58I]G(', '8CQie', '6{VYR', '}h4kf', ',Q]l*', ' p3z=', '{6(', '0f 5', '2IuW4(', '{Xb25', '_visible', '2m;)A(', '1,gsi', ')tnhK', '}UN2{', '7YKSC(', '+z7ME', '4]cEG(', '410{', '_xscale', ')nRX', '2K', 'max', ';CYOh', '=', '0', 'Color', 'ra', 'ga', 'ba', 'aa', 'rb', 'gb', 'bb', 'ab', 'setTransform', ')GiA', '0Yj1', '2ya 0(', '}1A{_', 'sqrt', 'atan2', '3pAH', 'height', 'width', 'display', 'BitmapData', 'geom', 'Matrix', 'scale', 'draw', 'translate', 'Point', 'rectangle', 'copyPixels', 'dispose', '1U;0', 'GlowFilter', 'blurX', 'blurY', 'strength', 'color', '{AdLP', '}J', '6{X3L', '*V9', 'substr', ')7', 'gotoAndStop', '9ss9+', '}ZnD;(', ';ndCG', '*G6KR', '[s', '-Q)9)', '4]1L', ',i0 [', '-0]rl', '+KD', '7Qe;6', '_x', '_y', '3BjX_', '_yscale', '9T54', 'removeMovieClip', 'remove', '4u=dZ', '2sngh', '[j0D-', ',v0X', '1Jr-,(', '(KpGn', 'pow', '_rotation', '0{8*_', '1m(7i', '8J 3y', ';zS4((', ',l3O-', '-)Dz1', '44{N', '-4Nbg', '3=vLC', '*=_p_', '}Wz87(', '8=Lw3(', '[VAGE(', '5;OW;', ')7MgQ', '*DzW', '0tJ', '_totalframes', '849kV', '1ZjLt', ')gv94', ',DBRf', '4RW6x', '_alpha', '8;=-(', '2u=W=', ';={0[', ')MItb', ',XnXA', '+7U K', '*B', '0Ev2M', '[c4gL', '*g,kL', '2X}A', '(ZcA(', ',+TFu', '0=*{5(', '(WKvR', '-_X}5', '$b', ')eK7l', '{KJWL', ']ew,;', '-bdr(', '87qb-', ';yck(', '3yMwA(', '9s(f=', ')2fr3', '}Zms3', ']1sj+', '-fC3a', '9oK', '7-,', ']bu40', '_name', 'swapDepths', '7bSH*', '18wU*', '-4*l((', '(GbB}', '+2NA', 'getDepth', 'floor', '08M8', 'clear', '9(K ;', ',}2X (', '4plQ5', 'getTimer', ';ILSy', '3R,QM', ';y}-6(', '-)Xd+', '[Ad;n', '6GI,F', 'fps', '=3+P', '{Cs', ')gqqC(', ')JN}d', '4-rA5', '5-rA5', ' Iqt5', '8[eCC(', '6GBe6', ']dDW(', '8iDn=', '10', '505t0', '-wfQp', '[AA8', '{HxAn', '6k2V6', '}gp0n', '*7nPD', '(If0', '+NXw5(', ')m_(I(', '0X xI(', '0ze*c', '+ua[U', 'blendMode', '(WBt)', '+,W', '8atwB(', 'Key', 'LEFT', 'isDown', 'RIGHT', 'UP', 'DOWN', '9rGzL', '5n4 5', '5t 9)', '+ARAb', '7uAk{', '[V{(6', '(4sPC', 'stop', '*]Q5}', '{jXZ;(', '* A+', ',Tyae', '=kIA', '2xEr8', '=hqS(', '+fPi}', '1Cn(V', ']', '*tQW,(', '0ADg}', ';)bt5', '0,', '8kN', '],lYS', '*g;o', '=eb]C(', '7CL3K', 'SPACE', 'ENTER', '-IP8a', ',43dZ', '4E-V6', '2Gr]U', 'lineStyle', 'moveTo', 'lineTo', '(Q7y1(', '29Svd', ']xii)', '_currentframe', 'play', '1Z 6', '3mhCL', 'setMask', '1V{f', '}m6', '9-', '0{lc4', '=-+Q1', '565', ';-[;H', '*VE}H', '}CbPC(', '7T4cF(', '_quality', '$HIGH', 'substring', '81C}X', ';B 9', ' R', '(yaK*', '(Erk5', '*2KvR', '0BP', '(]hH{', '83489', ')W}D', ']}Ou;(', '3I0pG', '{;7F4', '8U(wu', '}[cpB', '9xv]A', '{yQ=Q', '2y+dV', '(tBee', '3)i[=', ' J3IC', '[6jRc', ')8Fyj', '8J1xN', '+7', '8J2Jt', '9Lq;O', '8Ugi)', '08i_Z', '[=(', ')iBsW', '8s]Xp', '}O', '4,U=3', '-O_ y', '97mPC', '-nqp5', '6BZ+1', ';+', '4MvcB', '0o*6', '$k', '5Hy6b', '9t1r1', '2P9vQ', '1Gw=P', ')B8Lc', '1[Z[x', '-zeLn', '-A-nu', '-Jd;C', '6', '5VIv7', '69m=2', ']p9I(', '{p9I(', ',R', '1qJE5', '+Uq4Z', '-hCnb', ')+jEC', '0D 6', '8tpI[', ';Rc5s', ']iQ7t', '+aDob', '4+ksa', ');zm5', '$LOW', '0)E7*(', '[;4B0(', '9I*', 'ColorMatrixFilter', 'matrix', '[h3bA', '1Ili9', 'attachBitmap', 'BlurFilter', 'applyFilter', 'ColorTransform', 'colorTransform', 'scroll', 'rotate', '}=JH9(', 'setPixel32', ']c)Np', 'onKeyDown', ']668C(', 'onKeyUp', '=(D=5', 'addListener', 'getCode', '9V[[2', 'CONTROL', 'SHIFT', ',N)rb', '-]A', '=HU11', ';B(7y', '-inCL', '5hD', '7s(', '5,', '6g,A', '5wJ', '5CMYr', '0b]ff', '4z7Sl', '{hZVF(', 'getPixel32', ')YfUn', '[lg6b', '2UCcq', '7PB6Q', '59-', '5b)bA(', '{e{=K(', '3', '6H99,(', '$sub', '980Sb', ']{i', '(H5 S', '(kJ+1(', 'mode'  
      push '*cPR8'
      function2 (r:2='6 *') (r:1='this')
        push r:this, 'list', 0, 'Array'
        new
        setMember
        push r:this, ')', r:'6 *'
        setMember
        push r:this, ' (', 1, 1
        initArray
        setMember
        push r:this, '4eyD,', 200
        setMember
        push r:this, '{2', 0
        setMember
        push r:this, '}2', r:this, ')'
        getMember
        push ']oH'
        getMember
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '}-B2'
      function2 () (r:1='this')
        push r:this, 'index', 0
        setMember
        push r:this, '2VhU6', 0, 1
        initArray
        setMember
        push r:this, ')'
        getMember
        push '3bK;D', r:this
        setMember
        push r:this, ')'
        getMember
        push '-c0 t', r:this, '4eyD,'
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this')
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        push 1
        initArray
        setMember
        push r:this, '2VhU6'
        getMember
        push 0
        getMember
        push 0
        greaterThan
        not
        not
        branchIfTrue label1
        push r:this, 'list'
        getMember
        push r:this, 'index'
        getMember
        getMember
        setRegister r:2
        pop
        push r:2, '*feM7('
        getMember
        push r:2, 'type'
        getMember
        push 2, r:this, ')93A'
        callMethod
        pop
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push 0
        getMember
        push r:2, '4eyD,'
        getMember
        add
        push 1
        initArray
        setMember
        push r:this, 'index', r:this, 'index'
        getMember
        increment
        setMember
        push '2', 1, r:this, ')'
        getMember
        push '5=6-'
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push r:this, 'index'
        getMember
        push r:this, 'list'
        getMember
        push 'length'
        getMember
        equals
        not
        branchIfTrue label1
        push r:this, ')'
        getMember
        push '3bK;D', NULL
        setMember
       label1:
      end // of function 

      setMember
      push r:1, '3*+SM'
      function2 (r:2='7', r:3='(', r:4='[-', r:5='max') (r:1='this')
        push r:max, NULL
        equals
        not
        branchIfTrue label2
        push 1
        setRegister r:max
        pop
       label2:
        push 0
        setRegister r:6
        pop
        branch label4
       label3:
        push r:6
        increment
        setRegister r:6
        pop
       label4:
        push r:6, r:max
        lessThan
        not
        branchIfTrue label5
        push 'type', r:'7', '*feM7(', r:'(', '4eyD,', r:'[-', 3
        initObject
        push 1, r:this, 'list'
        getMember
        push 'push'
        callMethod
        pop
        branch label3
       label5:
      end // of function 

      setMember
      push r:1, ')93A'
      function2 (r:2='type', r:3='(') (r:1='this')
        push NULL
        setRegister r:4
        pop
        push r:type
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label6
        push r:0, 1
        strictEquals
        branchIfTrue label8
        push r:0, 2
        strictEquals
        branchIfTrue label9
        push r:0, 3
        strictEquals
        branchIfTrue label10
        push r:0, 4
        strictEquals
        branchIfTrue label14
        branch label15
       label6:
        push 0, r:this, '8A1T3('
        callMethod
        setRegister r:4
        pop
        push r:4, ']b', r:'(', 0
        getMember
        setMember
        push 1, r:'(', 1
        getMember
        push 2, r:4, '3U*}=('
        callMethod
        pop
        push r:'(', 2
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label7
        push r:4, ']oH', r:'(', 2
        getMember
        setMember
       label7:
        branch label15
       label8:
        push r:'(', 1
        getMember
        push r:'(', 0
        getMember
        push 2, r:this, ';MBeK'
        callMethod
        setRegister r:4
        pop
        push 1, 13, 2, r:4, '3U*}=('
        callMethod
        pop
        branch label15
       label9:
        push 0, r:'(', 0
        getMember
        push 2, r:this, ';MBeK'
        callMethod
        setRegister r:4
        pop
        push 1, r:'(', 1
        getMember
        push 2, r:4, '3U*}=('
        callMethod
        pop
        push 0, r:4, '{BxJE('
        callMethod
        pop
        branch label15
       label10:
        push 0
        setRegister r:5
        pop
        branch label12
       label11:
        push r:5
        increment
        setRegister r:5
        pop
       label12:
        push r:5, r:'(', 2
        getMember
        lessThan
        not
        branchIfTrue label13
        push r:5, r:'(', 2
        getMember
        push 1
        subtract
        divide
        push 2
        multiply
        push 1
        subtract
        setRegister r:6
        pop
        push 1.57, r:6, r:'(', 3
        getMember
        multiply
        add
        push r:'(', 0
        getMember
        push 2, r:this, '0oBh,'
        callMethod
        setRegister r:4
        pop
        push 1, r:'(', 1
        getMember
        push 2, r:4, '3U*}=('
        callMethod
        pop
        branch label11
       label13:
        branch label15
       label14:
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        setRegister r:7
        pop
        push 1.57, r:7, r:'(', 1
        getMember
        multiply
        add
        push r:'(', 0
        getMember
        push 2, r:this, '0oBh,'
        callMethod
        setRegister r:4
        pop
        push 1, 13, 2, r:4, '3U*}=('
        callMethod
        pop
        branch label15
       label15:
        push r:this, '-h0W3('
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label16
        push r:4, '[b', r:4, '[b'
        getMember
        push r:this, '-h0W3('
        getMember
        push r:this, ')'
        getMember
        push '[b'
        getMember
        multiply
        add
        setMember
        push r:4, ']b', r:4, ']b'
        getMember
        push r:this, '-h0W3('
        getMember
        push r:this, ')'
        getMember
        push ']b'
        getMember
        multiply
        add
        setMember
       label16:
      end // of function 

      setMember
      push r:1, '8A1T3('
      function2 () (r:1='this')
        push NULL, 1, '2C0['
        new
        setRegister r:2
        pop
        push r:2, '((', r:this, ')'
        getMember
        push '(('
        getMember
        push r:this, '{2'
        getMember
        add
        setMember
        push r:2, ')(', r:this, ')'
        getMember
        push ')('
        getMember
        push r:this, '}2'
        getMember
        add
        setMember
        push r:this, '6P8c'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label17
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push 1, r:this, ')'
        getMember
        push ')153L'
        callMethod
        setRegister r:3
        pop
        push r:2, '((', r:2, '(('
        getMember
        push r:3, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:this, '6P8c'
        getMember
        multiply
        add
        setMember
        push r:2, ')(', r:2, ')('
        getMember
        push r:3, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:this, '6P8c'
        getMember
        multiply
        add
        setMember
       label17:
        push r:2
        return
      end // of function 

      setMember
      push r:1, ';MBeK'
      function2 (r:2='}Yax5', r:3='{1') (r:1='this')
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push 1, r:this, ')'
        getMember
        push ')153L'
        callMethod
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push r:'{1'
        multiply
        add
        push r:'}Yax5', 2, r:this, '0oBh,'
        callMethod
        return
      end // of function 

      setMember
      push r:1, '0oBh,'
      function2 (r:2='}Yax5', r:3='(') (r:1='this')
        push 0, r:this, '8A1T3('
        callMethod
        setRegister r:4
        pop
        push r:4, '[b', r:'(', 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:'}Yax5'
        multiply
        setMember
        push r:4, ']b', r:'(', 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:'}Yax5'
        multiply
        setMember
        push r:4
        return
      end // of function 

      setMember
      push '{sRCQ'
      function2 () (r:1='this', r:2='super')
        push 0, r:super, UNDEF
        callMethod
        pop
        push r:this, '9w+x0(', 0, 1
        initArray
        setMember
        push r:this, '5Gr1)', FALSE
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'Array'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, 'insert'
      function2 (r:2='4AF', r:3='((') (r:1='this')
        push r:'((', 0, r:'4AF', r:this, 4, 'Array'
        getVariable
        push 'prototype'
        getMember
        push 'splice'
        getMember
        push 'call'
        callMethod
        pop
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label18
        push r:this, '5Gr1)', TRUE
        setMember
       label18:
      end // of function 

      setMember
      push r:1, 'pop'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, ']]*Q1('
        getVariable
        push 'call'
        callMethod
        setRegister r:3
        pop
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label19
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        decrement
        push 1
        initArray
        setMember
       label19:
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label20
        push r:this, '5Gr1)', TRUE
        setMember
       label20:
        push r:3
        return
      end // of function 

      setMember
      push r:1, 'push'
      function2 (r:3='((') (r:1='this', r:2='super')
        push r:'((', r:this, 2, '7EyYf'
        getVariable
        push 'call'
        callMethod
        setRegister r:4
        pop
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label21
        push r:this, '5Gr1)', TRUE
        setMember
       label21:
        push r:4
        return
      end // of function 

      setMember
      push r:1, 'shift'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '=dbLP'
        getVariable
        push 'call'
        callMethod
        setRegister r:3
        pop
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label22
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        decrement
        push 1
        initArray
        setMember
       label22:
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label23
        push r:this, '5Gr1)', TRUE
        setMember
       label23:
        push r:3
        return
      end // of function 

      setMember
      push r:1, 'splice'
      function2 (r:3='4AF', r:4='; =') (r:1='this', r:2='super')
        push r:'; =', r:'4AF', r:this, 3, '0y)Lk'
        getVariable
        push 'call'
        callMethod
        setRegister r:5
        pop
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:5, 'length'
        getMember
        subtract
        push 1
        initArray
        setMember
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label24
        push r:this, '5Gr1)', TRUE
        setMember
       label24:
        push r:5
        return
      end // of function 

      setMember
      push r:1, 'unshift'
      function2 (r:3='((') (r:1='this', r:2='super')
        push r:'((', r:this, 2, '(Ip9A'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '9w+x0(', r:this, '9w+x0('
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label25
        push r:this, '5Gr1)', TRUE
        setMember
       label25:
      end // of function 

      setMember
      push r:1, '36}9L('
      function2 () (r:1='this')
        push r:this, '9w+x0('
        getMember
        push 0
        getMember
        push r:this, 'length'
        getMember
        equals
        not
        not
        branchIfTrue label26
        push r:this, '5Gr1)', TRUE
        setMember
       label26:
        push r:this, '5Gr1)'
        getMember
        return
      end // of function 

      setMember
      push '0y)Lk', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 'splice'
      getMember
      setVariable
      push ']]*Q1(', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 'pop'
      getMember
      setVariable
      push '=dbLP', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 'shift'
      getMember
      setVariable
      push '(Ip9A', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 'unshift'
      getMember
      setVariable
      push '7EyYf', 'Array'
      getVariable
      push 'prototype'
      getMember
      push 'push'
      getMember
      setVariable
      push 'flash'
      getVariable
      not
      not
      branchIfTrue label27
      push 'flash', 0, 'Object'
      new
      setVariable
     label27:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      not
      not
      branchIfTrue label28
      push 'flash'
      getVariable
      push 'filters', 0, 'Object'
      new
      setMember
     label28:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      push '{lN=R'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setMember
      push '{Al{2'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '87vE7('
      function2 () (r:1='this')
        push '{Al{2'
        getVariable
        push '69-', '{Al{2'
        getVariable
        push '69-'
        getMember
        push '*r'
        getVariable
        push ',MXK'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push '{Al{2'
        getVariable
        push '0G-c,(', '{Al{2'
        getVariable
        push '0G-c,('
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        add
        setMember
        push '{Al{2'
        getVariable
        push '0G-c,('
        getMember
        push '{Al{2'
        getVariable
        push ' cR(z'
        getMember
        greaterThan
        not
        branchIfTrue label29
        push '{Al{2'
        getVariable
        push '0G-c,(', 0
        setMember
        push '{Al{2'
        getVariable
        push ' cR(z', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 20
        multiply
        add
        setMember
        push 0, '{Al{2'
        getVariable
        push '76N1t'
        callMethod
        pop
       label29:
      end // of function 

      setMember
      push r:0, '76N1t'
      function2 () (r:1='this')
        push '{Al{2'
        getVariable
        push '69-'
        getMember
        push '{Al{2'
        getVariable
        push '7mXA=('
        getMember
        greaterThan
        not
        branchIfTrue label30
        push 21, 1, '{Al{2'
        getVariable
        push '-sgp['
        callMethod
        pop
        push '{Al{2'
        getVariable
        push '7mXA=(', '{Al{2'
        getVariable
        push '7mXA=('
        getMember
        push 80, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 200, '{Al{2'
        getVariable
        push '69-'
        getMember
        add
        multiply
        add
        add
        setMember
       label30:
        push 0
        setRegister r:2
        pop
        push '{Al{2'
        getVariable
        push '62GLS'
        getMember
        push '{Al{2'
        getVariable
        push '69-'
        getMember
        push 0.01
        multiply
        lessThan
        not
        branchIfTrue label36
        push 0, 'Array'
        new
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        branch label32
       label31:
        push r:4
        increment
        setRegister r:4
        pop
       label32:
        push r:4, '{Al{2'
        getVariable
        push ',ynX'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label35
        push '{Al{2'
        getVariable
        push ',ynX'
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push 2500, '{Al{2'
        getVariable
        push '69-'
        getMember
        push 2000
        subtract
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:6
        pop
        push '{Al{2'
        getVariable
        push '69-'
        getMember
        push r:5, 1
        getMember
        greaterThan
        dup
        not
        branchIfTrue label33
        pop
        push r:5, 1
        getMember
        push r:6
        greaterThan
        dup
        branchIfTrue label33
        pop
        push r:4, '{Al{2'
        getVariable
        push ',ynX'
        getMember
        push 'length'
        getMember
        push 8
        subtract
        greaterThan
       label33:
        not
        branchIfTrue label34
        push r:5, 0
        getMember
        push 1, r:3, 'push'
        callMethod
        pop
       label34:
        branch label31
       label35:
        push r:3, r:3, 'length'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        getMember
        push 1, '{Al{2'
        getVariable
        push '-sgp['
        callMethod
        pop
        push r:2, r:2
        increment
        setRegister r:2
        pop
        push 20
        greaterThan
        not
        branchIfTrue label36
        push UNDEF
        return
       label36:
      end // of function 

      setMember
      push r:0, '-sgp['
      function2 (r:2='7') (r:1='this')
        push r:'7'
        setRegister r:0
        push 10
        strictEquals
        branchIfTrue label37
        push r:0, 11
        strictEquals
        branchIfTrue label37
        push r:0, 12
        strictEquals
        branchIfTrue label37
        push r:0, 1
        strictEquals
        branchIfTrue label38
        push r:0, 2
        strictEquals
        branchIfTrue label40
        push r:0, 3
        strictEquals
        branchIfTrue label45
        push r:0, 4
        strictEquals
        branchIfTrue label47
        push r:0, 5
        strictEquals
        branchIfTrue label49
        push r:0, 6
        strictEquals
        branchIfTrue label51
        push r:0, 7
        strictEquals
        branchIfTrue label53
        push r:0, 8
        strictEquals
        branchIfTrue label54
        push r:0, 9
        strictEquals
        branchIfTrue label56
        push r:0, 16
        strictEquals
        branchIfTrue label57
        push r:0, 17
        strictEquals
        branchIfTrue label61
        push r:0, 18
        strictEquals
        branchIfTrue label65
        push r:0, 20
        strictEquals
        branchIfTrue label67
        push r:0, 21
        strictEquals
        branchIfTrue label68
        push r:0, 22
        strictEquals
        branchIfTrue label69
        push r:0, 30
        strictEquals
        branchIfTrue label70
        push r:0, 31
        strictEquals
        branchIfTrue label71
        push r:0, 32
        strictEquals
        branchIfTrue label75
        push r:0, 33
        strictEquals
        branchIfTrue label79
        push r:0, 34
        strictEquals
        branchIfTrue label80
        branch label84
       label37:
        push r:'7', 10
        subtract
        push 1, '{Al{2'
        getVariable
        push '6-k9h'
        callMethod
        setRegister r:3
        pop
        branch label84
       label38:
        push TRUE, 3, 5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 3, '2]ya'
        new
        setRegister r:4
        pop
        push 2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label39
        push 0, 1, r:4, '+ikVP'
        callMethod
        pop
       label39:
        push 5, '{Al{2'
        getVariable
        push '(csOe'
        getMember
        push 2, r:4, ']r5gM'
        callMethod
        pop
        branch label84
       label40:
        push 5, 3, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        add
        setRegister r:5
        pop
        push 0
        setRegister r:6
        pop
        branch label42
       label41:
        push r:6
        increment
        setRegister r:6
        pop
       label42:
        push r:6, 2
        lessThan
        not
        branchIfTrue label44
        push TRUE, 3, r:5, 3, '2]ya'
        new
        setRegister r:7
        pop
        push r:6, 0
        equals
        not
        branchIfTrue label43
        push 0, 1, r:7, '+ikVP'
        callMethod
        pop
       label43:
        push 5, '{Al{2'
        getVariable
        push '(csOe'
        getMember
        push 2, r:7, ']r5gM'
        callMethod
        pop
        branch label41
       label44:
        branch label84
       label45:
        push 8, 4, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        add
        setRegister r:8
        pop
        push TRUE, 4, r:8, 3, '2]ya'
        new
        setRegister r:9
        pop
        push 2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label46
        push 0, 1, r:9, '+ikVP'
        callMethod
        pop
       label46:
        push 4, '{Al{2'
        getVariable
        push '}]3A)'
        getMember
        push 2, r:9, ']r5gM'
        callMethod
        pop
        branch label84
       label47:
        push 12, 3, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        add
        setRegister r:10
        pop
        push TRUE, 6, r:10, 3, '2]ya'
        new
        setRegister r:11
        pop
        push 2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label48
        push 0, 1, r:11, '+ikVP'
        callMethod
        pop
       label48:
        push 8, '{Al{2'
        getVariable
        push '5tmU]'
        getMember
        push 2, r:11, ']r5gM'
        callMethod
        pop
        branch label84
       label49:
        push 15
        setRegister r:12
        pop
        push TRUE, 5.5, r:12, 3, '2]ya'
        new
        setRegister r:13
        pop
        push 2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label50
        push 0, 1, r:13, '+ikVP'
        callMethod
        pop
       label50:
        push 1, '{Al{2'
        getVariable
        push ';)d5r'
        getMember
        push 2, r:13, ']r5gM'
        callMethod
        pop
        branch label84
       label51:
        push 16, 5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        add
        setRegister r:14
        pop
        push TRUE, 5.5, r:14, 3, '2]ya'
        new
        setRegister r:15
        pop
        push 2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label52
        push 0, 1, r:15, '+ikVP'
        callMethod
        pop
       label52:
        push 1, '{Al{2'
        getVariable
        push ';)d5r'
        getMember
        push 2, r:15, ']r5gM'
        callMethod
        pop
        branch label84
       label53:
        push 0, '{Al{2'
        getVariable
        push '=A+hY'
        callMethod
        setRegister r:16
        pop
        push r:16, ']b', 2
        setMember
        branch label84
       label54:
        push 15, 6, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        add
        setRegister r:17
        pop
        push TRUE, 5.5, r:17, 3, '2]ya'
        new
        setRegister r:18
        pop
        push 2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label55
        push 0, 1, r:18, '+ikVP'
        callMethod
        pop
       label55:
        push 1, '{Al{2'
        getVariable
        push '[FUzW'
        getMember
        push 2, r:18, ']r5gM'
        callMethod
        pop
        branch label84
       label56:
        push 0, '{Al{2'
        getVariable
        push '-=TH(('
        callMethod
        setRegister r:19
        pop
        branch label84
       label57:
        push 0
        setRegister r:20
        pop
        branch label59
       label58:
        push r:20
        increment
        setRegister r:20
        pop
       label59:
        push r:20, 6
        lessThan
        not
        branchIfTrue label60
        push 0, '{Al{2'
        getVariable
        push '-=TH(('
        callMethod
        setRegister r:21
        pop
        branch label58
       label60:
        branch label84
       label61:
        push 80
        setRegister r:22
        pop
        push r:22, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 2, r:22
        multiply
        subtract
        multiply
        add
        setRegister r:23
        pop
        push 5
        setRegister r:24
        pop
        push 0
        setRegister r:25
        pop
        branch label63
       label62:
        push r:25
        increment
        setRegister r:25
        pop
       label63:
        push r:25, r:24
        lessThan
        not
        branchIfTrue label64
        push r:25, r:24, 1
        subtract
        divide
        push 2
        multiply
        push 1
        subtract
        setRegister r:26
        pop
        push 0, '{Al{2'
        getVariable
        push '7O,UZ'
        callMethod
        setRegister r:27
        pop
        push r:27, '((', r:23, r:26, 40
        multiply
        add
        setMember
        push r:27, ']b', 4, r:26, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push 1
        multiply
        subtract
        setMember
        push r:27, '*IgKI(', '*r'
        getVariable
        push '*OA'
        getMember
        push 0.5
        multiply
        push 10, r:26
        multiply
        add
        setMember
        branch label62
       label64:
        branch label84
       label65:
        push 21
        setRegister r:28
        pop
        push TRUE, 4, r:28, 3, '2]ya'
        new
        setRegister r:29
        pop
        push 2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label66
        push 0, 1, r:29, '+ikVP'
        callMethod
        pop
       label66:
        push 1, '{Al{2'
        getVariable
        push '{IOei'
        getMember
        push 2, r:29, ']r5gM'
        callMethod
        pop
        branch label84
       label67:
        push 0, '{Al{2'
        getVariable
        push ');Qei'
        callMethod
        setRegister r:30
        pop
        branch label84
       label68:
        push 0, '{Al{2'
        getVariable
        push '}1aDI'
        callMethod
        setRegister r:31
        pop
        branch label84
       label69:
        push 0, '{Al{2'
        getVariable
        push ' DVSi'
        callMethod
        setRegister r:32
        pop
        branch label84
       label70:
        push 0, '{Al{2'
        getVariable
        push '(3-Z3('
        callMethod
        setRegister r:33
        pop
        branch label84
       label71:
        push 0
        setRegister r:34
        pop
        branch label73
       label72:
        push r:34
        increment
        setRegister r:34
        pop
       label73:
        push r:34, 5
        lessThan
        not
        branchIfTrue label74
        push 0, '{Al{2'
        getVariable
        push '(3-Z3('
        callMethod
        setRegister r:35
        pop
        branch label72
       label74:
        branch label84
       label75:
        push 0
        setRegister r:36
        pop
        branch label77
       label76:
        push r:36
        increment
        setRegister r:36
        pop
       label77:
        push r:36, 10
        lessThan
        not
        branchIfTrue label78
        push 0, '{Al{2'
        getVariable
        push '(3-Z3('
        callMethod
        setRegister r:37
        pop
        branch label76
       label78:
        branch label84
       label79:
        push 0, '{Al{2'
        getVariable
        push '6P+,Y'
        callMethod
        setRegister r:38
        pop
        branch label84
       label80:
        push 0
        setRegister r:39
        pop
        branch label82
       label81:
        push r:39
        increment
        setRegister r:39
        pop
       label82:
        push r:39, 8
        lessThan
        not
        branchIfTrue label83
        push 0, '{Al{2'
        getVariable
        push '-=TH(('
        callMethod
        setRegister r:40
        pop
        push -15
        setRegister r:41
        pop
        push r:40, '((', r:41, 2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 2, r:41
        multiply
        subtract
        multiply
        add
        setMember
        push r:40, ')(', '*r'
        getVariable
        push '*OA'
        getMember
        push 0.5
        multiply
        push 20
        add
        setMember
        push r:40, '3Aqqr'
        getMember
        push 0
        getMember
        push ' (', 0
        setMember
        push r:40, '3Aqqr'
        getMember
        push 1
        getMember
        push 'yMax', r:40, '3Aqqr'
        getMember
        push 1
        getMember
        push 'yMax'
        getMember
        push 20
        add
        setMember
        push r:40, '3=', 120
        setMember
        push 0, r:40, ']8J5+'
        callMethod
        setRegister r:42
        pop
        push 1, 10, 0.6, 3, 2
        initArray
        push 1, 4, r:42, '3*+SM'
        callMethod
        pop
        push r:40, '4eyD,', 10
        setMember
        push r:40, '-c0 t', 5, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        branch label81
       label83:
        branch label84
       label84:
      end // of function 

      setMember
      push r:0, '1K8ei'
      function2 () (r:1='this')
        push '{Al{2'
        getVariable
        push '-rs5P'
        getMember
        not
        dup
        not
        branchIfTrue label85
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        push 'length'
        getMember
        push '{Al{2'
        getVariable
        push ']uwq8('
        getMember
        greaterThan
       label85:
        not
        branchIfTrue label86
        push NULL
        return
       label86:
        push NULL, 1, '}P{I'
        new
        setRegister r:2
        pop
        push 15
        setRegister r:3
        pop
        push r:2, '((', r:3, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 2, r:3
        multiply
        subtract
        multiply
        add
        setMember
        push r:2, ']b', 3
        setMember
        push r:2, '4S cD', 100
        setMember
        push r:2
        return
      end // of function 

      setMember
      push r:0, '(csOe'
      function2 () (r:1='this')
        push 0, '{Al{2'
        getVariable
        push '1K8ei'
        callMethod
        setRegister r:2
        pop
        push 1.6, 1, r:2, '9FeuX'
        callMethod
        pop
        push '*r'
        getVariable
        push '9K-7H'
        getMember
        push 1, r:2, '}B)Y_'
        callMethod
        pop
        push r:2, '3=', 1
        setMember
        push 1, 1, r:2, '3U*}=('
        callMethod
        pop
        push 0, r:2, ']8J5+'
        callMethod
        setRegister r:3
        pop
        push 1, 100, 0.6, 3, 2
        initArray
        push 1, 4, r:3, '3*+SM'
        callMethod
        pop
        push r:2, '-c0 t', 150, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 500
        multiply
        add
        setMember
        push r:2, '(VKB', r:2, '-iB='
        getMember
        push '7bJ'
        getMember
        push '(VKB'
        getMember
        setMember
        push r:2, '(fc-d', 2, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6
        multiply
        add
        setMember
        push r:2
        return
      end // of function 

      setMember
      push r:0, '}]3A)'
      function2 () (r:1='this')
        push 0, '{Al{2'
        getVariable
        push '1K8ei'
        callMethod
        setRegister r:2
        pop
        push 2.5, 1, r:2, '9FeuX'
        callMethod
        pop
        push '*r'
        getVariable
        push '7Lx*X'
        getMember
        push 1, r:2, '}B)Y_'
        callMethod
        pop
        push r:2, '3=', 2
        setMember
        push 2, 1, r:2, '3U*}=('
        callMethod
        pop
        push r:2
        return
      end // of function 

      setMember
      push r:0, '5tmU]'
      function2 () (r:1='this')
        push 0, '{Al{2'
        getVariable
        push '1K8ei'
        callMethod
        setRegister r:2
        pop
        push 2, 1, r:2, '9FeuX'
        callMethod
        pop
        push '*r'
        getVariable
        push ',551N'
        getMember
        push 1, r:2, '}B)Y_'
        callMethod
        pop
        push r:2, '3=', 1
        setMember
        push 3, 1, r:2, '3U*}=('
        callMethod
        pop
        push 0, r:2, ']8J5+'
        callMethod
        setRegister r:3
        pop
        push 1, 0, 13, 4.5, 2
        initArray
        push 0, 4, r:3, '3*+SM'
        callMethod
        pop
        push r:2, '-c0 t', 70, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 30
        multiply
        add
        setMember
        push r:2
        return
      end // of function 

      setMember
      push r:0, ';)d5r'
      function2 () (r:1='this')
        push 0, '{Al{2'
        getVariable
        push '1K8ei'
        callMethod
        setRegister r:2
        pop
        push 7, 1, r:2, '9FeuX'
        callMethod
        pop
        push '*r'
        getVariable
        push '*1*;B('
        getMember
        push 1, r:2, '}B)Y_'
        callMethod
        pop
        push r:2, '3=', 5
        setMember
        push 4, 1, r:2, '3U*}=('
        callMethod
        pop
        push 0, r:2, ']8J5+'
        callMethod
        setRegister r:3
        pop
        push 3, 4, 21, 6, 2
        initArray
        push 2, 4, r:3, '3*+SM'
        callMethod
        pop
        push r:3, '}2', 0
        setMember
        push r:3, '6P8c', 26
        setMember
        push r:2, '5=6-', r:2, '-iB='
        getMember
        push '7bJ'
        getMember
        setMember
        push r:2, ')K{W)', r:2, '-iB='
        getMember
        push '7bJ'
        getMember
        setMember
        push r:2, '-c0 t', 80
        setMember
        push r:2
        return
      end // of function 

      setMember
      push r:0, '[FUzW'
      function2 () (r:1='this')
        push 0, '{Al{2'
        getVariable
        push '1K8ei'
        callMethod
        setRegister r:2
        pop
        push 20, 1, r:2, '9FeuX'
        callMethod
        pop
        push '*r'
        getVariable
        push '=O=T'
        getMember
        push 1, r:2, '}B)Y_'
        callMethod
        pop
        push r:2, '3=', 16
        setMember
        push 5, 1, r:2, '3U*}=('
        callMethod
        pop
        push 0, r:2, ']8J5+'
        callMethod
        setRegister r:3
        pop
        push 3, 4, 21, 6, 2
        initArray
        push 2, 4, r:3, '3*+SM'
        callMethod
        pop
        push r:3, '4eyD,', 60
        setMember
        push r:3, '}2', 0
        setMember
        push r:3, '6P8c', 26
        setMember
        push r:2, '5=6-', r:2, '-iB='
        getMember
        push '7bJ'
        getMember
        setMember
        push r:2, ')K{W)', r:2, '-iB='
        getMember
        push '7bJ'
        getMember
        setMember
        push r:2, '-c0 t', 40
        setMember
        push r:2
        return
      end // of function 

      setMember
      push r:0, '=A+hY'
      function2 () (r:1='this')
        push 0, '{Al{2'
        getVariable
        push '1K8ei'
        callMethod
        setRegister r:2
        pop
        push 6, 1, r:2, '9FeuX'
        callMethod
        pop
        push '*r'
        getVariable
        push '}luuP'
        getMember
        push 1, r:2, '}B)Y_'
        callMethod
        pop
        push r:2, '3=', 30
        setMember
        push 66, 45, 2, r:2, '3T5 A('
        callMethod
        pop
        push 20, 1, r:2, '3U*}=('
        callMethod
        pop
        push r:2, ')(', 0, r:2, '=T,='
        getMember
        push '-V'
        getMember
        subtract
        setMember
        push r:2, '-iB='
        getMember
        push 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '}oQA7'
        callMethod
        pop
        push r:2
        return
      end // of function 

      setMember
      push r:0, '-=TH(('
      function2 () (r:1='this')
        push 0, '{Al{2'
        getVariable
        push '1K8ei'
        callMethod
        setRegister r:2
        pop
        push 6, 1, r:2, '9FeuX'
        callMethod
        pop
        push '*r'
        getVariable
        push ' TXf;'
        getMember
        push 1, r:2, '}B)Y_'
        callMethod
        pop
        push r:2, '3=', 6
        setMember
        push 6, 1, r:2, '3U*}=('
        callMethod
        pop
        push r:2, ']b', 0, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        subtract
        push 5
        multiply
        setMember
        push 0, r:2, ']8J5+'
        callMethod
        setRegister r:3
        pop
        push 1, 100, 0.6, 3, 2
        initArray
        push 1, 4, r:3, '3*+SM'
        callMethod
        pop
        push r:2, '-c0 t', 150, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 15
        multiply
        add
        setMember
        push r:2, '86{p(', 7, 6, 2
        initArray
        setMember
        push r:2, '+{eA+', 0.9
        setMember
        push 20
        setRegister r:4
        pop
        push r:2, '3Aqqr', ' (', 1, 'xMin', r:4, 'xMax', '*r'
        getVariable
        push '=OA'
        getMember
        push r:4
        subtract
        push 'yMin', '*r'
        getVariable
        push '*OA'
        getMember
        push 0.5
        multiply
        push 'yMax', '*r'
        getVariable
        push '*OA'
        getMember
        push 76
        subtract
        push 5
        initObject
        push ' (', 6, 'xMin', r:4, 'xMax', '*r'
        getVariable
        push '=OA'
        getMember
        push r:4
        subtract
        push 'yMin', r:4, 'yMax', 120, 5
        initObject
        push 2
        initArray
        setMember
        push r:2, ']Y(', '*', 0.1, '62=', 1, 2
        initObject
        setMember
        push r:2
        return
      end // of function 

      setMember
      push r:0, '7O,UZ'
      function2 () (r:1='this')
        push 0, '{Al{2'
        getVariable
        push '1K8ei'
        callMethod
        setRegister r:2
        pop
        push 7, 1, r:2, '9FeuX'
        callMethod
        pop
        push '*r'
        getVariable
        push ' kbSF'
        getMember
        push 1, r:2, '}B)Y_'
        callMethod
        pop
        push r:2, '[ovL6', '*r'
        getVariable
        push '-B5XJ'
        getMember
        setMember
        push r:2, '6b', 2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 5, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        multiply
        setMember
        push r:2, '3=', 14
        setMember
        push 8, 1, r:2, '3U*}=('
        callMethod
        pop
        push r:2, '[a', 0.07000000000000001
        setMember
        push r:2, '6GhvX', 0.1
        setMember
        push r:2, '}W5SD', 0
        setMember
        push r:2, '}Yax5', 4.5
        setMember
        push r:2, '86{p(', 8, 1
        initArray
        setMember
        push r:2
        return
      end // of function 

      setMember
      push r:0, '{IOei'
      function2 () (r:1='this')
        push 0, '{Al{2'
        getVariable
        push '1K8ei'
        callMethod
        setRegister r:2
        pop
        push 40, 1, r:2, '9FeuX'
        callMethod
        pop
        push '*r'
        getVariable
        push '7cTBB'
        getMember
        push 1, r:2, '}B)Y_'
        callMethod
        pop
        push r:2, '3=', 60
        setMember
        push 9, 1, r:2, '3U*}=('
        callMethod
        pop
        push 0, r:2, ']8J5+'
        callMethod
        setRegister r:3
        pop
        push 1, 150, 16, 23, 10, 3
        initArray
        push 0, 4, r:3, '3*+SM'
        callMethod
        pop
        push r:3, '4eyD,', 40
        setMember
        push r:3, '{2', -5
        setMember
        push r:3, '}2', 20
        setMember
        push 0, r:2, ']8J5+'
        callMethod
        setRegister r:3
        pop
        push 3, 6, 16, 23, 10, 3
        initArray
        push 0, 4, r:3, '3*+SM'
        callMethod
        pop
        push r:3, '4eyD,', 100
        setMember
        push r:3, '{2', -5
        setMember
        push r:3, '}2', 24
        setMember
        push r:2, '-c0 t', 50, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 50
        multiply
        add
        setMember
        push r:2, '=T,=', '{V', 30, '-V', 25, 2
        initObject
        setMember
        push r:2, '5=6-', r:2, '-iB='
        getMember
        push '7bJ'
        getMember
        push '7bJ'
        getMember
        push '7bJ'
        getMember
        setMember
        push r:2
        return
      end // of function 

      setMember
      push r:0, ');Qei'
      function2 () (r:1='this')
        push 0, '{Al{2'
        getVariable
        push '1K8ei'
        callMethod
        setRegister r:2
        pop
        push 18, 1, r:2, '9FeuX'
        callMethod
        pop
        push '*r'
        getVariable
        push '=UVBB'
        getMember
        push 1, r:2, '}B)Y_'
        callMethod
        pop
        push 10, 1, r:2, '3U*}=('
        callMethod
        pop
        push r:2, ']oH', 25
        setMember
        push r:2, ')(', 0, r:2, ']oH'
        getMember
        push 5
        add
        subtract
        setMember
        push r:2, '3=', 16
        setMember
        push r:2, '}W5SD', 1
        setMember
        push r:2, '86{p(', 9, 1
        initArray
        setMember
        push r:2, '}CL', '((', 0, ')(', 70, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 30
        multiply
        add
        push 2
        initObject
        setMember
        push r:2, '}V--k', 100
        setMember
        push 0, r:2, ']8J5+'
        callMethod
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        branch label88
       label87:
        push r:4
        increment
        setRegister r:4
        pop
       label88:
        push r:4, 2
        lessThan
        not
        branchIfTrue label89
        push 1, 14, 0.7, 4, 13, 3, 4
        initArray
        push 3, 4, r:3, '3*+SM'
        callMethod
        pop
        push 1, 14, 0.5, 3, 13, 3, 4
        initArray
        push 3, 4, r:3, '3*+SM'
        callMethod
        pop
        branch label87
       label89:
        push r:3, '4eyD,', 800
        setMember
        push r:2, '-c0 t', 2000
        setMember
      end // of function 

      setMember
      push r:0, '}1aDI'
      function2 () (r:1='this')
        push 0, '{Al{2'
        getVariable
        push '1K8ei'
        callMethod
        setRegister r:2
        pop
        push 10, 1, r:2, '9FeuX'
        callMethod
        pop
        push '*r'
        getVariable
        push '7s'
        getMember
        push 1, r:2, '}B)Y_'
        callMethod
        pop
        push 17, 1, r:2, '3U*}=('
        callMethod
        pop
        push r:2, '3=', 3
        setMember
        push r:2, ']oH', 20
        setMember
        push r:2, '}V--k', 300
        setMember
        push r:2, '}Yax5', 6
        setMember
        push r:2, '(', 1.57
        setMember
        push r:2, '[a', 0.5
        setMember
        push r:2, '6GhvX', 0.15
        setMember
        push r:2, '-fRSr', TRUE
        setMember
        push r:2, '86{p(', 3, 1
        initArray
        setMember
        push r:2, '58I]G(', 190, 30, '*r'
        getVariable
        push '=OA'
        getMember
        push 20
        subtract
        push 20, '8CQie', r:2, 6, '3Wt'
        getVariable
        push '6{VYR'
        callMethod
        setMember
        push 0, r:2, '58I]G('
        callMethod
        pop
        push r:2, '}h4kf', ',Q]l*', r:2, 2, '3Wt'
        getVariable
        push '6{VYR'
        callMethod
        setMember
        push ' p3z='
        getVariable
        push '{6(', ' p3z='
        getVariable
        push '{6('
        getMember
        increment
        setMember
      end // of function 

      setMember
      push r:0, ' DVSi'
      function2 () (r:1='this')
        push '{Al{2'
        getVariable
        push '-rs5P', TRUE
        setMember
        push '0f 5', NULL
        varEquals
        push 0
        setRegister r:2
        pop
        branch label91
       label90:
        push r:2
        increment
        setRegister r:2
        pop
       label91:
        push r:2, 2
        lessThan
        not
        branchIfTrue label94
        push ')', 0, '{Al{2'
        getVariable
        push '1K8ei'
        callMethod
        varEquals
        push 22, 1, ')'
        getVariable
        push '9FeuX'
        callMethod
        pop
        push '*r'
        getVariable
        push '2IuW4('
        getMember
        push 1, ')'
        getVariable
        push '}B)Y_'
        callMethod
        pop
        push 14, r:2, 2
        multiply
        add
        push 1, ')'
        getVariable
        push '3U*}=('
        callMethod
        pop
        push ')'
        getVariable
        push '3=', 30
        setMember
        push ')'
        getVariable
        push '=T,=', '{V', 20, '-V', 26, 2
        initObject
        setMember
        push '0f 5'
        getVariable
        push NULL
        equals
        not
        branchIfTrue label92
        push '0f 5', ')'
        getVariable
        setVariable
        push ')'
        getVariable
        push '-iB='
        getMember
        push '{Xb25'
        getMember
        push '_visible', FALSE
        setMember
        push ')'
        getVariable
        push ')K{W)', ')'
        getVariable
        push '-iB='
        getMember
        push '7bJ'
        getMember
        setMember
        push ')'
        getVariable
        push '86{p(', 6, 1
        initArray
        setMember
        push ')'
        getVariable
        push ']Y(', '*', 0.1, '62=', 1, 2
        initObject
        setMember
        push ')'
        getVariable
        push '+{eA+', 0.9
        setMember
        push 40
        setRegister r:3
        pop
        push ')'
        getVariable
        push '3Aqqr', ' (', 6, 'xMin', r:3, 'xMax', '*r'
        getVariable
        push '=OA'
        getMember
        push r:3, 2
        multiply
        subtract
        push 'yMin', r:3, 'yMax', 90, 5
        initObject
        push 1
        initArray
        setMember
        branch label93
       label92:
        push 0, 40, ')'
        getVariable
        push 3, '0f 5'
        getVariable
        push '2m;)A('
        callMethod
        pop
        push 0, ')'
        getVariable
        push ']8J5+'
        callMethod
        setRegister r:4
        pop
        push 12, 7, 0.15, 3, 2
        initArray
        push 1, 4, r:4, '3*+SM'
        callMethod
        pop
        push r:4, '4eyD,', 48
        setMember
        push r:4, '}2', 25
        setMember
        function2 () (r:1='this')
          push '0f 5'
          getVariable
          push '86{p(', 3, 1
          initArray
          setMember
          push '0f 5'
          getVariable
          push '6GhvX', 0.1
          setMember
          push '0f 5'
          getVariable
          push '[a', 0.1
          setMember
          push '0f 5'
          getVariable
          push '}CL', '*r'
          getVariable
          push '+-(0'
          getMember
          push '4,01'
          getMember
          setMember
          push '0f 5'
          getVariable
          push '-fRSr', TRUE
          setMember
          push '0f 5'
          getVariable
          push '-iB='
          getMember
          push '{Xb25'
          getMember
          push '_visible', TRUE
          setMember
        end // of function 

        setRegister r:5
        pop
        push ')'
        getVariable
        push '}h4kf', r:5
        setMember
        function2 () (r:1='this')
          push ')'
          getVariable
          push '86{p(', 3, 1
          initArray
          setMember
          push ')'
          getVariable
          push '6GhvX', 0.2
          setMember
          push ')'
          getVariable
          push '[a', 1
          setMember
          push ')'
          getVariable
          push '}CL', '((', '*r'
          getVariable
          push '=OA'
          getMember
          push 0.5
          multiply
          push ')(', 40, 2
          initObject
          setMember
          push ')'
          getVariable
          push '1,gsi', 0
          initArray
          setMember
          push 0, ')'
          getVariable
          push ']8J5+'
          callMethod
          setRegister r:2
          pop
          push 12, 5, 0.9, 3, 2
          initArray
          push 4, 4, r:2, '3*+SM'
          callMethod
          pop
          push r:2, '4eyD,', 48
          setMember
          push r:2, '}2', 25
          setMember
        end // of function 

        setRegister r:6
        pop
        push '0f 5'
        getVariable
        push '}h4kf', r:6
        setMember
       label93:
        branch label90
       label94:
        push '{Al{2'
        getVariable
        push '-rs5P', FALSE
        setMember
      end // of function 

      setMember
      push r:0, '(3-Z3('
      function2 () (r:1='this')
        push ')', 0, '{Al{2'
        getVariable
        push '1K8ei'
        callMethod
        varEquals
        push 4, 1, ')'
        getVariable
        push '9FeuX'
        callMethod
        pop
        push '*r'
        getVariable
        push ')tnhK'
        getMember
        push 1, ')'
        getVariable
        push '}B)Y_'
        callMethod
        pop
        push 18, 1, ')'
        getVariable
        push '3U*}=('
        callMethod
        pop
        push ')'
        getVariable
        push '3=', 3
        setMember
        push ')'
        getVariable
        push ']oH', 16
        setMember
        push ')'
        getVariable
        push ']b', 1, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 1
        multiply
        add
        setMember
        push ')'
        getVariable
        push '}W5SD', 2
        setMember
        push ')'
        getVariable
        push '(VKB', ')'
        getVariable
        push '-iB='
        getMember
        push '7bJ'
        getMember
        setMember
        push ')'
        getVariable
        push '}h4kf'
        function2 () (r:1='this')
          push 0, ')'
          getVariable
          push ']8J5+'
          callMethod
          setRegister r:2
          pop
          push 3.14, 12, 13, 3, 4
          initArray
          push 3, 2, r:2, ')93A'
          callMethod
          pop
        end // of function 

        setMember
      end // of function 

      setMember
      push r:0, '6P+,Y'
      function2 () (r:1='this')
        push 0, '{Al{2'
        getVariable
        push '1K8ei'
        callMethod
        setRegister r:2
        pop
        push 13, 1, r:2, '9FeuX'
        callMethod
        pop
        push '*r'
        getVariable
        push '}UN2{'
        getMember
        push 1, r:2, '}B)Y_'
        callMethod
        pop
        push 19, 1, r:2, '3U*}=('
        callMethod
        pop
        push r:2, '3=', 10
        setMember
        push r:2, ']oH', 27
        setMember
        push r:2, '7YKSC(', 120
        setMember
        push 20
        setRegister r:3
        pop
        push r:2, '86{p(', 10, 6, 2
        initArray
        setMember
        push r:2, ']Y(', '*', 0.1, '62=', 1, 2
        initObject
        setMember
        push r:2, '+{eA+', 0.92
        setMember
        push r:2, '3Aqqr', ' (', 6, 'xMin', r:3, 'xMax', '*r'
        getVariable
        push '=OA'
        getMember
        push r:3
        subtract
        push 'yMin', r:3, 'yMax', 170, 5
        initObject
        push 1
        initArray
        setMember
      end // of function 

      setMember
      push r:0, '6-k9h'
      function2 (r:2='1T=') (r:1='this')
        push '{Al{2'
        getVariable
        push '-rs5P', TRUE
        setMember
        push 0, '{Al{2'
        getVariable
        push '1K8ei'
        callMethod
        setRegister r:3
        pop
        push r:'1T=', 1
        add
        push 32
        multiply
        push 1, r:3, '9FeuX'
        callMethod
        pop
        push '*r'
        getVariable
        push '+z7ME'
        getMember
        push r:'1T='
        getMember
        push 1, r:3, '}B)Y_'
        callMethod
        pop
        push 11, 1, r:3, '3U*}=('
        callMethod
        pop
        push r:'1T=', 1
        add
        push 1, r:3, '4]cEG('
        callMethod
        pop
        push r:3, '3=', 28, r:'1T=', 20
        multiply
        add
        setMember
        push r:3, ']oH', 25
        setMember
        push 5, 1, r:3, '86{p('
        getMember
        push 'push'
        callMethod
        pop
        push r:3, '}V--k', 500, r:'1T=', 150
        multiply
        add
        setMember
        push 0
        setRegister r:4
        pop
        branch label96
       label95:
        push r:4
        increment
        setRegister r:4
        pop
       label96:
        push r:4, 2
        lessThan
        not
        branchIfTrue label97
        push 0, '{Al{2'
        getVariable
        push '1K8ei'
        callMethod
        setRegister r:5
        pop
        push r:4, 2
        multiply
        push 1
        subtract
        setRegister r:6
        pop
        push 2, r:'1T='
        add
        push 1, r:5, '9FeuX'
        callMethod
        pop
        push r:5, '410{', TRUE
        setMember
        push 12, 1, r:5, '3U*}=('
        callMethod
        pop
        push r:'1T=', 1
        add
        push 1, r:5, '4]cEG('
        callMethod
        pop
        push r:5, '-iB='
        getMember
        push '_xscale', r:6, 100
        multiply
        setMember
        push r:5, '3=', 8, r:'1T=', 6
        multiply
        add
        setMember
        push r:5, ']oH', 20
        setMember
        push 0, 25, r:6
        multiply
        push r:5, 3, r:3, '2m;)A('
        callMethod
        pop
        push 0, r:5, ']8J5+'
        callMethod
        setRegister r:7
        pop
        push 1, r:'1T='
        add
        push 12, 19, 12, 2
        initArray
        push 0, 4, r:7, '3*+SM'
        callMethod
        pop
        push r:7, '4eyD,', 150
        setMember
        push r:5, '-c0 t', 150
        setMember
        branch label95
       label97:
        push 0, r:3, ']8J5+'
        callMethod
        setRegister r:8
        pop
        push 5, 4, r:'1T='
        multiply
        add
        push 5, 0.4, 3, 2
        initArray
        push 1, 4, r:8, '3*+SM'
        callMethod
        pop
        push r:3, '-c0 t', 10
        setMember
        push r:3
        return
        push '{Al{2'
        getVariable
        push '-rs5P', FALSE
        setMember
      end // of function 

      setMember
      push r:0, ']uwq8(', 4
      setMember
      push r:0, '-rs5P', FALSE
      setMember
      push r:0, ')nRX', 185, -16, 2
      initArray
      push 184, 243, 2
      initArray
      push 168, 275, 2
      initArray
      push 143, 284, 2
      initArray
      push 121, 277, 2
      initArray
      push 108, 243, 2
      initArray
      push 109, 194, 2
      initArray
      push 109, 152, 2
      initArray
      push 88, 119, 2
      initArray
      push 50, 97, 2
      initArray
      push 25, 62, 2
      initArray
      push 17, 21, 2
      initArray
      push 17, -23, 2
      initArray
      push 13
      initArray
      push 274, 355, 2
      initArray
      push 273, 208, 2
      initArray
      push 261, 143, 2
      initArray
      push 231, 94, 2
      initArray
      push 183, 64, 2
      initArray
      push 132, 54, 2
      initArray
      push 74, 72, 2
      initArray
      push 39, 114, 2
      initArray
      push 26, 172, 2
      initArray
      push 33, 227, 2
      initArray
      push 52, 258, 2
      initArray
      push 84, 268, 2
      initArray
      push 119, 260, 2
      initArray
      push 133, 227, 2
      initArray
      push 112, 196, 2
      initArray
      push 79, 175, 2
      initArray
      push 71, 142, 2
      initArray
      push 90, 114, 2
      initArray
      push 134, 113, 2
      initArray
      push 171, 142, 2
      initArray
      push 187, 215, 2
      initArray
      push 188, 351, 2
      initArray
      push 22
      initArray
      push 163, 322, 2
      initArray
      push 202, 277, 2
      initArray
      push 277, 221, 2
      initArray
      push 291, 178, 2
      initArray
      push 277, 145, 2
      initArray
      push 245, 120, 2
      initArray
      push 202, 117, 2
      initArray
      push 154, 120, 2
      initArray
      push 118, 121, 2
      initArray
      push 95, 95, 2
      initArray
      push 95, 60, 2
      initArray
      push 122, 36, 2
      initArray
      push 157, 42, 2
      initArray
      push 181, 79, 2
      initArray
      push 173, 149, 2
      initArray
      push 140, 187, 2
      initArray
      push 102, 202, 2
      initArray
      push 55, 202, 2
      initArray
      push 20, 191, 2
      initArray
      push 7, 151, 2
      initArray
      push 22, 118, 2
      initArray
      push 51, 107, 2
      initArray
      push 84, 132, 2
      initArray
      push 91, 171, 2
      initArray
      push 73, 229, 2
      initArray
      push 9, 306, 2
      initArray
      push 26
      initArray
      push 330, 156, 2
      initArray
      push 41, 157, 2
      initArray
      push 22, 141, 2
      initArray
      push 21, 116, 2
      initArray
      push 41, 96, 2
      initArray
      push 70, 95, 2
      initArray
      push 148, 197, 2
      initArray
      push 149, 333, 2
      initArray
      push 8
      initArray
      push 292, 326, 2
      initArray
      push 172, 289, 2
      initArray
      push 95, 248, 2
      initArray
      push 49, 206, 2
      initArray
      push 26, 142, 2
      initArray
      push 43, 68, 2
      initArray
      push 109, 22, 2
      initArray
      push 187, 23, 2
      initArray
      push 249, 64, 2
      initArray
      push 275, 135, 2
      initArray
      push 251, 204, 2
      initArray
      push 205, 249, 2
      initArray
      push 134, 291, 2
      initArray
      push 17, 330, 2
      initArray
      push 14
      initArray
      push 172, -24, 2
      initArray
      push 172, 276, 2
      initArray
      push 161, 287, 2
      initArray
      push 145, 288, 2
      initArray
      push 131, 268, 2
      initArray
      push 60, 23, 2
      initArray
      push 46, 11, 2
      initArray
      push 32, 19, 2
      initArray
      push 25, 35, 2
      initArray
      push 27, 330, 2
      initArray
      push 10
      initArray
      push 115, -20, 2
      initArray
      push 114, 280, 2
      initArray
      push 192, 281, 2
      initArray
      push 0, 193, 205, 3
      initArray
      push 270, 205, 2
      initArray
      push 270, 330, 2
      initArray
      push 6
      initArray
      push 255, -13, 2
      initArray
      push 115, 15, 2
      initArray
      push 46, 38, 2
      initArray
      push 13, 61, 2
      initArray
      push 3, 87, 2
      initArray
      push 7, 112, 2
      initArray
      push 33, 136, 2
      initArray
      push 80, 162, 2
      initArray
      push 121, 188, 2
      initArray
      push 142, 216, 2
      initArray
      push 142, 239, 2
      initArray
      push 127, 263, 2
      initArray
      push 85, 282, 2
      initArray
      push -18, 292, 2
      initArray
      push 14
      initArray
      push 112, -44, 2
      initArray
      push 112, 274, 2
      initArray
      push 188, 274, 2
      initArray
      push 188, 19, 2
      initArray
      push 30, 19, 2
      initArray
      push 30, 160, 2
      initArray
      push 178, 160, 2
      initArray
      push 176, 59, 2
      initArray
      push 72, 59, 2
      initArray
      push 72, 248, 2
      initArray
      push 153, 248, 2
      initArray
      push 153, 169, 2
      initArray
      push 54, 169, 2
      initArray
      push 54, 251, 2
      initArray
      push 18, 251, 2
      initArray
      push 18, 83, 2
      initArray
      push 153, 83, 2
      initArray
      push 153, 150, 2
      initArray
      push 55, 150, 2
      initArray
      push 55, 36, 2
      initArray
      push 135, 36, 2
      initArray
      push 135, 247, 2
      initArray
      push 97, 247, 2
      initArray
      push 97, 120, 2
      initArray
      push 19, 120, 2
      initArray
      push 19, 187, 2
      initArray
      push 180, 187, 2
      initArray
      push 180, 278, 2
      initArray
      push 72, 278, 2
      initArray
      push 71, -44, 2
      initArray
      push 30
      initArray
      push 57, 341, 2
      initArray
      push 58, 287, 2
      initArray
      push 92, 233, 2
      initArray
      push 140, 183, 2
      initArray
      push 189, 116, 2
      initArray
      push 191, 64, 2
      initArray
      push 179, 35, 2
      initArray
      push 159, 13, 2
      initArray
      push 127, 7, 2
      initArray
      push 97, 23, 2
      initArray
      push 85, 69, 2
      initArray
      push 94, 114, 2
      initArray
      push 124, 138, 2
      initArray
      push 181, 144, 2
      initArray
      push 233, 132, 2
      initArray
      push 262, 108, 2
      initArray
      push 276, 69, 2
      initArray
      push 270, 28, 2
      initArray
      push 244, 7, 2
      initArray
      push 185, -28, 2
      initArray
      push 20
      initArray
      push -32, 229, 2
      initArray
      push 31, 228, 2
      initArray
      push 68, 214, 2
      initArray
      push 88, 193, 2
      initArray
      push 99, 172, 2
      initArray
      push 106, 142, 2
      initArray
      push 124, 124, 2
      initArray
      push 156, 115, 2
      initArray
      push 217, 112, 2
      initArray
      push 254, 93, 2
      initArray
      push 278, 65, 2
      initArray
      push 282, 30, 2
      initArray
      push 280, -18, 2
      initArray
      push 13
      initArray
      push 317, -7, 2
      initArray
      push 98, 259, 2
      initArray
      push 77, 277, 2
      initArray
      push 48, 280, 2
      initArray
      push 22, 264, 2
      initArray
      push 12, 239, 2
      initArray
      push 12, 50, 2
      initArray
      push 16, 32, 2
      initArray
      push 26, 17, 2
      initArray
      push 40, 9, 2
      initArray
      push 113, 8, 2
      initArray
      push 132, 16, 2
      initArray
      push 147, 33, 2
      initArray
      push 165, 45, 2
      initArray
      push 324, 45, 2
      initArray
      push 15
      initArray
      push 169, 322, 2
      initArray
      push 169, 250, 2
      initArray
      push 162, 219, 2
      initArray
      push 147, 193, 2
      initArray
      push 53, 110, 2
      initArray
      push 29, 89, 2
      initArray
      push 16, 59, 2
      initArray
      push 25, 33, 2
      initArray
      push 49, 21, 2
      initArray
      push 324, 18, 2
      initArray
      push 10
      initArray
      push 15, 336, 2
      initArray
      push 15, 76, 2
      initArray
      push 19, 43, 2
      initArray
      push 34, 23, 2
      initArray
      push 58, 19, 2
      initArray
      push 80, 28, 2
      initArray
      push 96, 47, 2
      initArray
      push 108, 72, 2
      initArray
      push 124, 93, 2
      initArray
      push 152, 102, 2
      initArray
      push 180, 93, 2
      initArray
      push 202, 74, 2
      initArray
      push 217, 45, 2
      initArray
      push 234, 25, 2
      initArray
      push 261, 14, 2
      initArray
      push 308, 13, 2
      initArray
      push 16
      initArray
      push 282, -35, 2
      initArray
      push 248, 32, 2
      initArray
      push 182, 179, 2
      initArray
      push 175, 225, 2
      initArray
      push 183, 260, 2
      initArray
      push 215, 247, 2
      initArray
      push 217, 203, 2
      initArray
      push 159, 65, 2
      initArray
      push 151, 42, 2
      initArray
      push 158, 15, 2
      initArray
      push 183, 13, 2
      initArray
      push 190, 38, 2
      initArray
      push 151, 131, 2
      initArray
      push 133, 165, 2
      initArray
      push 117, 205, 2
      initArray
      push 114, 242, 2
      initArray
      push 136, 264, 2
      initArray
      push 154, 250, 2
      initArray
      push 154, 205, 2
      initArray
      push 127, 163, 2
      initArray
      push 108, 133, 2
      initArray
      push 94, 102, 2
      initArray
      push 79, 77, 2
      initArray
      push 66, 42, 2
      initArray
      push 71, 15, 2
      initArray
      push 95, 6, 2
      initArray
      push 119, 36, 2
      initArray
      push 114, 73, 2
      initArray
      push 75, 140, 2
      initArray
      push 44, 182, 2
      initArray
      push 31, 230, 2
      initArray
      push 49, 257, 2
      initArray
      push 81, 243, 2
      initArray
      push 90, 207, 2
      initArray
      push 57, 119, 2
      initArray
      push 39, 87, 2
      initArray
      push 19, 46, 2
      initArray
      push 3, -22, 2
      initArray
      push 38
      initArray
      push 313, 286, 2
      initArray
      push 57, 286, 2
      initArray
      push 40, 287, 2
      initArray
      push 24, 275, 2
      initArray
      push 17, 259, 2
      initArray
      push 16, 33, 2
      initArray
      push 24, 15, 2
      initArray
      push 46, 6, 2
      initArray
      push 67, 14, 2
      initArray
      push 77, 32, 2
      initArray
      push 76, 320, 2
      initArray
      push 11
      initArray
      push 320, 269, 2
      initArray
      push 232, 270, 2
      initArray
      push 215, 259, 2
      initArray
      push 215, 42, 2
      initArray
      push 205, 27, 2
      initArray
      push 182, 26, 2
      initArray
      push 172, 47, 2
      initArray
      push 173, 263, 2
      initArray
      push 153, 275, 2
      initArray
      push 133, 275, 2
      initArray
      push 120, 259, 2
      initArray
      push 117, 54, 2
      initArray
      push 110, 36, 2
      initArray
      push 90, 29, 2
      initArray
      push -20, 30, 2
      initArray
      push 15
      initArray
      push 328, 286, 2
      initArray
      push 92, 288, 2
      initArray
      push 75, 283, 2
      initArray
      push 68, 267, 2
      initArray
      push 69, 32, 2
      initArray
      push 59, 18, 2
      initArray
      push 44, 11, 2
      initArray
      push 29, 17, 2
      initArray
      push 21, 33, 2
      initArray
      push 20, 318, 2
      initArray
      push 10
      initArray
      push 134, 328, 2
      initArray
      push 134, 53, 2
      initArray
      push 205, 53, 2
      initArray
      push 205, 149, 2
      initArray
      push 68, 150, 2
      initArray
      push 67, 54, 2
      initArray
      push 32, 54, 2
      initArray
      push 33, 279, 2
      initArray
      push -22, 280, 2
      initArray
      push 9
      initArray
      push 28, -29, 2
      initArray
      push 29, 266, 2
      initArray
      push 216, 266, 2
      initArray
      push 216, 113, 2
      initArray
      push 178, 114, 2
      initArray
      push 178, 197, 2
      initArray
      push 82, 197, 2
      initArray
      push 82, 116, 2
      initArray
      push -13, 117, 2
      initArray
      push 9
      initArray
      push 329, 268, 2
      initArray
      push 112, 268, 2
      initArray
      push 112, 108, 2
      initArray
      push 27, 108, 2
      initArray
      push 27, 220, 2
      initArray
      push 197, 220, 2
      initArray
      push 197, 55, 2
      initArray
      push 110, 55, 2
      initArray
      push 110, -31, 2
      initArray
      push 9
      initArray
      push 213, 322, 2
      initArray
      push 213, 220, 2
      initArray
      push 88, 221, 2
      initArray
      push 88, 88, 2
      initArray
      push 150, 88, 2
      initArray
      push 150, 274, 2
      initArray
      push 22, 274, 2
      initArray
      push 22, -14, 2
      initArray
      push 8
      initArray
      push -12, 285, 2
      initArray
      push 86, 284, 2
      initArray
      push 169, 275, 2
      initArray
      push 212, 257, 2
      initArray
      push 240, 218, 2
      initArray
      push 249, 175, 2
      initArray
      push 236, 131, 2
      initArray
      push 213, 102, 2
      initArray
      push 172, 88, 2
      initArray
      push 126, 95, 2
      initArray
      push 93, 123, 2
      initArray
      push 74, 166, 2
      initArray
      push 72, 212, 2
      initArray
      push 82, 256, 2
      initArray
      push 113, 291, 2
      initArray
      push 160, 324, 2
      initArray
      push 16
      initArray
      push 238, -15, 2
      initArray
      push 33, 204, 2
      initArray
      push 17, 240, 2
      initArray
      push 33, 274, 2
      initArray
      push 68, 290, 2
      initArray
      push 105, 276, 2
      initArray
      push 120, 245, 2
      initArray
      push 113, 210, 2
      initArray
      push 91, 192, 2
      initArray
      push 39, 178, 2
      initArray
      push -14, 177, 2
      initArray
      push 11
      initArray
      push -30, 236, 2
      initArray
      push 83, 105, 2
      initArray
      push 112, 76, 2
      initArray
      push 148, 65, 2
      initArray
      push 179, 78, 2
      initArray
      push 197, 110, 2
      initArray
      push 198, 151, 2
      initArray
      push 174, 181, 2
      initArray
      push 143, 193, 2
      initArray
      push 110, 187, 2
      initArray
      push 78, 149, 2
      initArray
      push 44, 108, 2
      initArray
      push 17, 95, 2
      initArray
      push -24, 92, 2
      initArray
      push 14
      initArray
      push 4, -39, 2
      initArray
      push 3, 43, 2
      initArray
      push 16, 106, 2
      initArray
      push 41, 148, 2
      initArray
      push 109, 182, 2
      initArray
      push 155, 181, 2
      initArray
      push 205, 159, 2
      initArray
      push 230, 119, 2
      initArray
      push 231, 70, 2
      initArray
      push 209, 34, 2
      initArray
      push 177, 22, 2
      initArray
      push 143, 26, 2
      initArray
      push 104, 49, 2
      initArray
      push 77, 87, 2
      initArray
      push 62, 134, 2
      initArray
      push 66, 190, 2
      initArray
      push 79, 238, 2
      initArray
      push 107, 268, 2
      initArray
      push 147, 269, 2
      initArray
      push 176, 248, 2
      initArray
      push 187, 209, 2
      initArray
      push 173, 174, 2
      initArray
      push 151, 156, 2
      initArray
      push 107, 152, 2
      initArray
      push 78, 166, 2
      initArray
      push 48, 192, 2
      initArray
      push 33, 232, 2
      initArray
      push 32, 271, 2
      initArray
      push 45, 315, 2
      initArray
      push 29
      initArray
      push -19, 300, 2
      initArray
      push 16, 288, 2
      initArray
      push 43, 273, 2
      initArray
      push 74, 243, 2
      initArray
      push 96, 203, 2
      initArray
      push 104, 150, 2
      initArray
      push 98, 97, 2
      initArray
      push 82, 58, 2
      initArray
      push 49, 27, 2
      initArray
      push 21, 12, 2
      initArray
      push -16, 9, 2
      initArray
      push 11
      initArray
      push 174, -50, 2
      initArray
      push 178, -5, 2
      initArray
      push 160, 30, 2
      initArray
      push 120, 77, 2
      initArray
      push 84, 111, 2
      initArray
      push 54, 156, 2
      initArray
      push 31, 209, 2
      initArray
      push 28, 259, 2
      initArray
      push 45, 299, 2
      initArray
      push 79, 313, 2
      initArray
      push 130, 302, 2
      initArray
      push 162, 284, 2
      initArray
      push 192, 248, 2
      initArray
      push 207, 194, 2
      initArray
      push 206, 143, 2
      initArray
      push 190, 96, 2
      initArray
      push 167, 59, 2
      initArray
      push 140, 30, 2
      initArray
      push 111, 14, 2
      initArray
      push 84, 11, 2
      initArray
      push 56, 15, 2
      initArray
      push 29, 28, 2
      initArray
      push 8, 57, 2
      initArray
      push -14, 114, 2
      initArray
      push 24
      initArray
      push 197, 344, 2
      initArray
      push 94, 270, 2
      initArray
      push 46, 211, 2
      initArray
      push 16, 141, 2
      initArray
      push 12, 70, 2
      initArray
      push 28, 35, 2
      initArray
      push 60, 19, 2
      initArray
      push 96, 22, 2
      initArray
      push 132, 39, 2
      initArray
      push 163, 72, 2
      initArray
      push 180, 113, 2
      initArray
      push 179, 145, 2
      initArray
      push 163, 165, 2
      initArray
      push 139, 168, 2
      initArray
      push 115, 149, 2
      initArray
      push 92, 114, 2
      initArray
      push 45, 91, 2
      initArray
      push -20, 89, 2
      initArray
      push 18
      initArray
      push -36, -1, 2
      initArray
      push 65, 89, 2
      initArray
      push 122, 141, 2
      initArray
      push 146, 187, 2
      initArray
      push 144, 240, 2
      initArray
      push 121, 273, 2
      initArray
      push 82, 286, 2
      initArray
      push 48, 279, 2
      initArray
      push 24, 256, 2
      initArray
      push 17, 217, 2
      initArray
      push 16, -14, 2
      initArray
      push 11
      initArray
      push 30
      initArray
      setMember
      push r:0, ',ynX', 7000, 34, 2
      initArray
      push 6000, 32, 2
      initArray
      push 5000, 12, 2
      initArray
      push 4000, 18, 2
      initArray
      push 3800, 8, 2
      initArray
      push 3200, 6, 2
      initArray
      push 3000, 22, 2
      initArray
      push 2800, 11, 2
      initArray
      push 2600, 16, 2
      initArray
      push 2400, 33, 2
      initArray
      push 2200, 31, 2
      initArray
      push 2000, 17, 2
      initArray
      push 2000, 20, 2
      initArray
      push 1700, 10, 2
      initArray
      push 1500, 5, 2
      initArray
      push 1300, 4, 2
      initArray
      push 1200, 7, 2
      initArray
      push 1000, 9, 2
      initArray
      push 700, 30, 2
      initArray
      push 400, 2, 2
      initArray
      push 300, 3, 2
      initArray
      push 0, 1, 2
      initArray
      push 22
      initArray
      setMember
      push r:0, '62GLS', 0
      setMember
      push r:0, '0G-c,(', 150
      setMember
      push r:0, ' cR(z', 300
      setMember
      push r:0, '69-', 0
      setMember
      push r:0, '7mXA=(', 300
      setMember
      push '*r'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '}-B2'
      function2 () (r:1='this')
      end // of function 

      setMember
      push r:0, '2K'
      function2 (r:2='(', r:3=')', r:4='*') (r:1='this')
        push r:'*', r:')', r:'(', 2, 'Math'
        getVariable
        push 'max'
        callMethod
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        return
      end // of function 

      setMember
      push r:0, ';CYOh'
      function2 (r:2='}J', r:3='3GF', r:4='(v+') (r:1='this')
        push '=', r:'(v+', 16
        shiftRight
        push '0', r:'(v+', 8
        shiftRight
        push 255
        bitwiseAnd
        push ')', r:'(v+', 255
        bitwiseAnd
        push 3
        initObject
        setRegister r:5
        pop
        push r:'}J', 1, 'Color'
        new
        setRegister r:6
        pop
        push r:'3GF', 100
        divide
        setRegister r:7
        pop
        push 'ra', 100, r:'3GF'
        subtract
        int
        push 'ga', 100, r:'3GF'
        subtract
        int
        push 'ba', 100, r:'3GF'
        subtract
        int
        push 'aa', 100, 'rb', r:7, r:5, '='
        getMember
        multiply
        int
        push 'gb', r:7, r:5, '0'
        getMember
        multiply
        int
        push 'bb', r:7, r:5, ')'
        getMember
        multiply
        int
        push 'ab', 0, 8
        initObject
        setRegister r:8
        pop
        push r:8, 1, r:6, 'setTransform'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, ')GiA'
      function2 (r:2='}', r:3='6lA') (r:1='this')
       label98:
        push r:'}', r:'6lA'
        lessThan
        not
        not
        branchIfTrue label99
        push r:'}', r:'6lA'
        subtract
        setRegister r:'}'
        pop
        branch label98
       label99:
        push r:'}', 0
        lessThan
        not
        branchIfTrue label100
        push r:'}', r:'6lA'
        add
        setRegister r:'}'
        pop
        branch label99
       label100:
        push r:'}'
        return
      end // of function 

      setMember
      push r:0, '0Yj1'
      function2 (r:2='}', r:3='6lA') (r:1='this')
       label101:
        push r:'}', r:'6lA'
        greaterThan
        not
        branchIfTrue label102
        push r:'}', r:'6lA', 2
        multiply
        subtract
        setRegister r:'}'
        pop
        branch label101
       label102:
        push r:'}', 0, r:'6lA'
        subtract
        lessThan
        not
        branchIfTrue label103
        push r:'}', r:'6lA', 2
        multiply
        add
        setRegister r:'}'
        pop
        branch label102
       label103:
        push r:'}'
        return
      end // of function 

      setMember
      push r:0, '2ya 0('
      function2 (r:2='(v+') (r:1='this')
        push '(', r:'(v+', 24
        shiftRight2
        push '=', r:'(v+', 16
        shiftRight
        push 255
        bitwiseAnd
        push '0', r:'(v+', 8
        shiftRight
        push 255
        bitwiseAnd
        push ')', r:'(v+', 255
        bitwiseAnd
        push 4
        initObject
        return
      end // of function 

      setMember
      push r:0, '}1A{_'
      function2 (r:2='7Q', r:3='8Q') (r:1='this')
        push r:'7Q', '(('
        getMember
        push r:'8Q', '(('
        getMember
        subtract
        setRegister r:4
        pop
        push r:'7Q', ')('
        getMember
        push r:'8Q', ')('
        getMember
        subtract
        setRegister r:5
        pop
        push r:4, r:4
        multiply
        push r:5, r:5
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        return
      end // of function 

      setMember
      push r:0, ')153L'
      function2 (r:2='7Q', r:3='8Q') (r:1='this')
        push r:'7Q', '(('
        getMember
        push r:'8Q', '(('
        getMember
        subtract
        setRegister r:4
        pop
        push r:'7Q', ')('
        getMember
        push r:'8Q', ')('
        getMember
        subtract
        setRegister r:5
        pop
        push r:4, r:5, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        return
      end // of function 

      setMember
      push r:0, '3pAH'
      function2 (r:2='9I*', r:3='*(') (r:1='this')
        push 0, TRUE, r:'9I*', 'height'
        getMember
        push r:'*('
        multiply
        int
        push r:'9I*', 'width'
        getMember
        push r:'*('
        multiply
        int
        push 4, 'flash'
        getVariable
        push 'display'
        getMember
        push 'BitmapData'
        newMethod
        setRegister r:4
        pop
        push 0, 'flash'
        getVariable
        push 'geom'
        getMember
        push 'Matrix'
        newMethod
        setRegister r:5
        pop
        push r:'*(', r:'*(', 2, r:5, 'scale'
        callMethod
        pop
        push NULL, NULL, NULL, NULL, r:5, r:'9I*', 6, r:4, 'draw'
        callMethod
        pop
        push 0, 'flash'
        getVariable
        push 'geom'
        getMember
        push 'Matrix'
        newMethod
        setRegister r:5
        pop
        push 0, r:'9I*', 'height'
        getMember
        push r:'*('
        multiply
        push r:'9I*', 'height'
        getMember
        subtract
        subtract
        push 0.5
        multiply
        push 0, r:'9I*', 'width'
        getMember
        push r:'*('
        multiply
        push r:'9I*', 'width'
        getMember
        subtract
        subtract
        push 0.5
        multiply
        push 2, r:5, 'translate'
        callMethod
        pop
        push NULL
        setRegister r:6
        pop
        push NULL, NULL, NULL, 0, r:'9I*', 'height'
        getMember
        push r:'*('
        multiply
        push r:'9I*', 'height'
        getMember
        subtract
        subtract
        push 0.5
        multiply
        push 0, r:'9I*', 'width'
        getMember
        push r:'*('
        multiply
        push r:'9I*', 'width'
        getMember
        subtract
        subtract
        push 0.5
        multiply
        push 2, 'flash'
        getVariable
        push 'geom'
        getMember
        push 'Point'
        newMethod
        push r:4, 'rectangle'
        getMember
        push r:4, 6, r:'9I*', 'copyPixels'
        callMethod
        pop
        push 0, r:4, 'dispose'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '1U;0'
      function2 (r:2='}J', r:3='}+', r:4='=rJ', r:5='(v+') (r:1='this')
        push 0, 'flash'
        getVariable
        push 'filters'
        getMember
        push 'GlowFilter'
        newMethod
        setRegister r:6
        pop
        push r:6, 'blurX', r:'}+'
        setMember
        push r:6, 'blurY', r:'}+'
        setMember
        push r:6, 'strength', 1
        setMember
        push r:6, 'color', r:'(v+'
        setMember
        push r:'}J', 'filters', r:6, 1
        initArray
        setMember
      end // of function 

      setMember
      push r:0, '{AdLP'
      function2 ('}J', '*V9', ')7') (r:1='this')
        function2 (r:2='=rJ') (r:1='this')
          push r:'=rJ', '}J'
          getVariable
          push 2, '3Wt'
          getVariable
          push '6{X3L'
          callMethod
          setRegister r:3
          pop
          push r:3, '_visible'
          getMember
          not
          branchIfTrue label105
          push '*V9'
          getVariable
          push 'length'
          getMember
          push 0, 2, r:'=rJ', 'substr'
          callMethod
          push '*V9'
          getVariable
          equals
          not
          branchIfTrue label104
          push ')7'
          getVariable
          toString
          push 1, r:3, 'gotoAndStop'
          callMethod
          pop
         label104:
          push ')7'
          getVariable
          push '*V9'
          getVariable
          push r:3, 3, '*r'
          getVariable
          push '{AdLP'
          callMethod
          pop
         label105:
        end // of function 

        setRegister r:2
        pop
        push r:2, '}J'
        getVariable
        push 2, '3Wt'
        getVariable
        push '9ss9+'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '=OA', 300
      setMember
      push r:0, '*OA', 300
      setMember
      push r:0, ',MXK', 0.7
      setMember
      push r:0, '}ZnD;(', 300, 200, 150, 75, 50, 5
      initArray
      push 1, ';ndCG'
      getVariable
      push '*G6KR'
      callMethod
      setMember
      push r:0, '[s', 5, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '7s', 0, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '4]1L', 500, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '9K-7H', 65, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '7Lx*X', 80, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, ',551N', 120, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '-B5XJ', 200, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, ')tnhK', 300, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, ' TXf;', 350, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '*1*;B(', 450, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '}UN2{', 500, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, ' kbSF', 600, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '=UVBB', 800, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '}luuP', 1000, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '=O=T', 1500, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '2IuW4(', 2400, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '7cTBB', 5000, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '+z7ME', 8000, 3500, 2000, 3
      initArray
      push 1, ';ndCG'
      getVariable
      push '*G6KR'
      callMethod
      setMember
      push ',i0 ['
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push '-0]rl'
      function2 (r:2='}J') (r:1='this')
        push r:this, '-iB=', r:'}J'
        setMember
        push r:this, '-iB='
        getMember
        push '+KD', r:this
        setMember
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '7Qe;6'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '((', 0
        setMember
        push r:this, ')(', 0
        setMember
        push r:this, '-iB='
        getMember
        push '_x', -100
        setMember
        push r:this, '-iB='
        getMember
        push '_y', -100
        setMember
        push r:this, 'scale', 100
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '3BjX_'
      function2 (r:2='7') (r:1='this')
        push r:this, 'scale', r:'7'
        setMember
        push r:this, '-iB='
        getMember
        push '_xscale', r:'7'
        setMember
        push r:this, '-iB='
        getMember
        push '_yscale', r:'7'
        setMember
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this')
        push r:this, '-iB='
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '-iB='
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this')
        push 0, r:this, '-iB='
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '7Qe;6'
        getMember
        push 'remove'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '4u=dZ'
      function2 () (r:1='this')
        push r:this, '-iB='
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '-iB='
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '}1A{_'
      function2 (r:2='8') (r:1='this')
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:3
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:4
        pop
        push r:3, r:3
        multiply
        push r:4, r:4
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        return
      end // of function 

      setMember
      push r:1, ')153L'
      function2 (r:2='8') (r:1='this')
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:3
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:4
        pop
        push r:3, r:4, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        return
      end // of function 

      setMember
      push r:1, '2sngh'
      function2 (r:2='8', r:3='*', r:4='62=') (r:1='this')
        push r:'62=', NULL
        equals
        not
        branchIfTrue label106
        push 1, 0
        divide
        setRegister r:'62='
        pop
       label106:
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:5
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:6
        pop
        push r:this, '((', r:this, '(('
        getMember
        push r:'62=', r:5, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push r:'62=', r:6, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
      end // of function 

      setMember
      push r:1, '[j0D-'
      function2 (r:2='6') (r:1='this')
        push r:this, '(('
        getMember
        push 0, r:'6'
        subtract
        lessThan
        dup
        branchIfTrue label107
        pop
        push r:this, '(('
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        push r:'6'
        add
        greaterThan
       label107:
        dup
        branchIfTrue label108
        pop
        push r:this, ')('
        getMember
        push 0, r:'6'
        subtract
        lessThan
       label108:
        dup
        branchIfTrue label109
        pop
        push r:this, ')('
        getMember
        push '*r'
        getVariable
        push '*OA'
        getMember
        push r:'6'
        add
        greaterThan
       label109:
        return
      end // of function 

      setMember
      push ',v0X'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '[b', 0
        setMember
        push r:this, ']b', 0
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '-0]rl'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '1Jr-,('
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '(KpGn'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label110
        push r:this, ']b', r:this, ']b'
        getMember
        push r:this, '(KpGn'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label110:
        push r:this, '+{eA+'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label111
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push r:this, '+{eA+'
        getMember
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:3
        pop
        push r:this, '[b', r:this, '[b'
        getMember
        push r:3
        multiply
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:3
        multiply
        setMember
       label111:
        push r:this, '6b'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label113
        push r:this, '+{eA+'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label112
        push r:this, '6b', r:this, '6b'
        getMember
        push r:this, '+{eA+'
        getMember
        multiply
        setMember
       label112:
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '-iB='
        getMember
        push '_rotation'
        getMember
        push r:this, '6b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label113:
        push r:this, '((', r:this, '(('
        getMember
        push r:this, '[b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push r:this, ']b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '0{8*_'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label114
        push r:this, '0{8*_'
        getMember
        push r:this, '-iB='
        getMember
        push 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '1m(7i'
        callMethod
        pop
       label114:
      end // of function 

      setMember
      push r:1, '8J 3y'
      function2 () (r:1='this')
        push r:this, 'flash'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label116
        push 100, r:this, 'flash'
        getMember
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:2
        pop
        push r:this, 'flash', r:this, 'flash'
        getMember
        push 0.6
        multiply
        setMember
        push r:this, 'flash'
        getMember
        push 2
        lessThan
        not
        branchIfTrue label115
        push r:this, 'flash', NULL
        setMember
        push 0
        setRegister r:2
        pop
       label115:
        push 16777215, r:2, r:this, '-iB='
        getMember
        push 3, '*r'
        getVariable
        push ';CYOh'
        callMethod
        pop
       label116:
      end // of function 

      setMember
      push r:1, ';zS4(('
      function2 (r:2='8', r:3='*', r:4='62=') (r:1='this')
        push r:'8', 1, r:this, ')153L'
        callMethod
        setRegister r:5
        pop
        push r:'8', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:6
        pop
        push r:'8', ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:7
        pop
        push r:this, '[b', r:this, '[b'
        getMember
        push r:'62=', r:6, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:'62=', r:7, r:'*'
        multiply
        push 0, r:'62='
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setMember
      end // of function 

      setMember
      push r:1, ',l3O-'
      function2 (r:2='[X') (r:1='this')
        push r:'[X', 1, r:this, '}1A{_'
        callMethod
        setRegister r:3
        pop
        push r:3, r:this, ']oH'
        getMember
        push r:'[X', ']oH'
        getMember
        add
        lessThan
        return
      end // of function 

      setMember
      push r:1, '-)Dz1'
      function2 (r:2='-X') (r:1='this')
        push '44{N'
        getVariable
        push '-4Nbg'
        getMember
        push '3=vLC', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:3
        pop
        push r:3, '_x', r:this, '(('
        getMember
        setMember
        push r:3, '_y', r:this, ')('
        getMember
        setMember
        push r:3, '_xscale', r:'-X'
        setMember
        push r:3, '_yscale', r:'-X'
        setMember
      end // of function 

      setMember
      push r:1, '}Wz87('
      function2 (r:2='-X') (r:1='this')
        push '44{N'
        getVariable
        push '-4Nbg'
        getMember
        push '8=Lw3(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:3
        pop
        push r:3, '_x', r:this, '(('
        getMember
        setMember
        push r:3, '_y', r:this, ')('
        getMember
        setMember
        push r:3, '_xscale', r:'-X'
        setMember
        push r:3, '_yscale', r:'-X'
        setMember
      end // of function 

      setMember
      push r:1, '[VAGE('
      function2 (r:2=';d3', r:3='}2D*') (r:1='this')
        push r:'}2D*', NULL
        equals
        not
        branchIfTrue label117
        push 1
        setRegister r:'}2D*'
        pop
       label117:
        push 0
        setRegister r:4
        pop
       label118:
        push TRUE
        not
        branchIfTrue label120
        push r:4
        increment
        setRegister r:4
        pop
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push ')7MgQ', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:5
        pop
        push r:';d3'
        toString
        push 1, r:5, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:5, '-iB='
        getMember
        push '0tJ'
        getMember
        setRegister r:6
        pop
        push r:4
        toString
        push 1, r:6, 'gotoAndStop'
        callMethod
        pop
        push r:4, 1
        add
        push r:6, '_totalframes'
        getMember
        push r:'}2D*'
        multiply
        greaterThan
        setRegister r:7
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:8
        pop
        push r:8, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:9
        pop
        push r:8, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:10
        pop
        push 0.5, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.5
        multiply
        add
        setRegister r:11
        pop
        push 3
        setRegister r:12
        pop
        push r:5, '((', r:this, '(('
        getMember
        push r:9, r:11
        multiply
        push r:this, ']oH'
        getMember
        multiply
        add
        setMember
        push r:5, ')(', r:this, ')('
        getMember
        push r:10, r:11
        multiply
        push r:this, ']oH'
        getMember
        multiply
        add
        setMember
        push r:5, '[b', r:this, '[b'
        getMember
        push r:9, r:11
        multiply
        push r:12
        multiply
        add
        setMember
        push r:5, ']b', r:this, ']b'
        getMember
        push r:10, r:11
        multiply
        push r:12
        multiply
        add
        setMember
        push r:5, '6b', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 15
        multiply
        setMember
        push r:5, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:5, '849kV', 0
        setMember
        push r:5, '-iB='
        getMember
        push '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        push r:7
        not
        branchIfTrue label119
        branch label120
       label119:
        branch label118
       label120:
      end // of function 

      setMember
      push r:1, '1ZjLt'
      function2 (r:2=';d3') (r:1='this')
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push ')7MgQ', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:3
        pop
        push r:';d3'
        toString
        push 1, r:3, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:3, '-iB='
        getMember
        push '0tJ'
        getMember
        setRegister r:4
        pop
        push r:4, '_totalframes'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        add
        toString
        push 1, r:4, 'gotoAndStop'
        callMethod
        pop
        push r:3
        return
      end // of function 

      setMember
      push r:1, '1ZjLt'
      function2 (r:2=';d3') (r:1='this')
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push ')7MgQ', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:3
        pop
        push r:';d3'
        toString
        push 1, r:3, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:3, '-iB='
        getMember
        push '0tJ'
        getMember
        setRegister r:4
        pop
        push r:4, '_totalframes'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        add
        toString
        push 1, r:4, 'gotoAndStop'
        callMethod
        pop
        push r:3
        return
      end // of function 

      setMember
      push '1Jr-,(', '-0]rl'
      getVariable
      push 'prototype'
      getMember
      push '87vE7('
      getMember
      setVariable
      push '*DzW'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push ')gv94'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, ',DBRf', 10
        setMember
        push r:this, 'scale', 100
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '2VhU6'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label125
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '2VhU6'
        getMember
        push r:this, ',DBRf'
        getMember
        lessThan
        not
        branchIfTrue label125
        push r:this, '2VhU6'
        getMember
        push r:this, ',DBRf'
        getMember
        divide
        setRegister r:3
        pop
        push r:this, '849kV'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label121
        push r:0, 1
        strictEquals
        branchIfTrue label122
        branch label123
       label121:
        push r:this, '-iB='
        getMember
        push '_xscale', r:this, 'scale'
        getMember
        push r:3
        multiply
        setMember
        push r:this, '-iB='
        getMember
        push '_yscale', r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        setMember
        branch label124
       label122:
        push r:this, '-iB='
        getMember
        push '_yscale', r:this, 'scale'
        getMember
        push r:3
        multiply
        setMember
        branch label124
       label123:
        push r:this, '-iB='
        getMember
        push '_alpha', r:3, 100
        multiply
        setMember
        branch label124
       label124:
        push r:this, '2VhU6'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label125
        push 0, r:this, '9T54'
        callMethod
        pop
       label125:
      end // of function 

      setMember
      push r:1, '8;=-('
      function2 (r:2='7') (r:1='this')
        push 1, r:this, '-iB='
        getMember
        push 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '1m(7i'
        callMethod
        pop
        push 0, r:this, '9T54'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push ')gv94'
        getMember
        push 'remove'
        callMethod
        pop
        push r:this, 1, '2u=W='
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push '2u=W=', '-0]rl'
      getVariable
      push 'prototype'
      getMember
      push '9T54'
      getMember
      setVariable
      push '4RW6x', ',v0X'
      getVariable
      push 'prototype'
      getMember
      push '87vE7('
      getMember
      setVariable
      push ' p3z='
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push ';={0['
        getMember
        push 'push'
        callMethod
        pop
        push r:'}J', NULL
        equals
        not
        branchIfTrue label126
        push '44{N'
        getVariable
        push ')MItb'
        getMember
        push ',XnXA', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:'}J'
        pop
       label126:
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, ']oH', 15
        setMember
        push r:this, '32', r:this, '-iB='
        getMember
        push 1, '+7U K'
        new
        setMember
        push r:this, '*B', 0, r:this, '0Ev2M'
        callMethod
        setMember
        push 0.775, 2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1.57
        multiply
        add
        setRegister r:4
        pop
        push r:this, '[b', r:4, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push ' p3z='
        getVariable
        push '[c4gL'
        getMember
        multiply
        setMember
        push r:this, ']b', r:4, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push ' p3z='
        getVariable
        push '[c4gL'
        getMember
        multiply
        setMember
        push r:this, '*B'
        getMember
        push 1
        add
        toString
        push 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '0Ev2M'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label128
       label127:
        push r:3
        increment
        setRegister r:3
        pop
       label128:
        push r:3, ' p3z='
        getVariable
        push '*g,kL'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label129
        push r:2, ' p3z='
        getVariable
        push '*g,kL'
        getMember
        push r:3
        getMember
        add
        setRegister r:2
        pop
        branch label127
       label129:
        push r:2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        push 0
        setRegister r:6
        pop
        branch label131
       label130:
        push r:6
        increment
        setRegister r:6
        pop
       label131:
        push r:6, ' p3z='
        getVariable
        push '*g,kL'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label133
        push r:5, ' p3z='
        getVariable
        push '*g,kL'
        getMember
        push r:6
        getMember
        add
        setRegister r:5
        pop
        push r:5, r:4
        greaterThan
        not
        branchIfTrue label132
        push r:6
        return
       label132:
        branch label130
       label133:
        push 0
        return
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push 1, r:this, ',l3O-'
        callMethod
        not
        branchIfTrue label134
        push 0, r:this, '2X}A'
        callMethod
        pop
       label134:
        push 0, r:this, '(ZcA('
        callMethod
        pop
        push r:this, ']oH'
        getMember
        push 2
        multiply
        push 1, r:this, '[j0D-'
        callMethod
        not
        branchIfTrue label135
        push 0, r:this, '9T54'
        callMethod
        pop
       label135:
        push r:this, '*B'
        getMember
        push 15
        lessThan
        not
        dup
        not
        branchIfTrue label136
        pop
        push r:this, '*B'
        getMember
        push 17
        greaterThan
        not
       label136:
        not
        branchIfTrue label139
        push 0
        setRegister r:3
        pop
        branch label138
       label137:
        push r:3
        increment
        setRegister r:3
        pop
       label138:
        push r:3, 2
        lessThan
        not
        branchIfTrue label139
        push 1, ',+TFu', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:4
        pop
        push r:this, '*B'
        getMember
        push 14
        subtract
        toString
        push 1, r:4, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:4, '6b', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 10
        multiply
        setMember
        push r:4, '849kV', 1
        setMember
        push r:4, 'scale', 50, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 100
        multiply
        add
        setMember
        push r:4, '-iB='
        getMember
        push '_xscale', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 20
        multiply
        add
        setMember
        push r:4, '-iB='
        getMember
        push '_yscale', r:4, 'scale'
        getMember
        setMember
        push r:4, '-iB='
        getMember
        push '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        push r:4, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:4, '-iB='
        getMember
        push '_x', 0
        setMember
        push r:4, '-iB='
        getMember
        push '_y', 0
        setMember
        branch label137
       label139:
      end // of function 

      setMember
      push r:1, '2X}A'
      function2 () (r:1='this')
        push r:this, '*B'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label140
        push r:0, 1
        strictEquals
        branchIfTrue label140
        push r:0, 2
        strictEquals
        branchIfTrue label140
        push r:0, 3
        strictEquals
        branchIfTrue label140
        push r:0, 4
        strictEquals
        branchIfTrue label140
        push r:0, 5
        strictEquals
        branchIfTrue label140
        push r:0, 6
        strictEquals
        branchIfTrue label141
        push r:0, 7
        strictEquals
        branchIfTrue label142
        branch label142
       label140:
        push r:this, '*B'
        getMember
        push 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '0=*{5('
        callMethod
        pop
        branch label142
       label141:
        push 0, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '(WKvR'
        callMethod
        pop
        branch label142
       label142:
        push r:this, '*B'
        getMember
        push '{Al{2'
        getVariable
        push '69-'
        getMember
        push 2
        initArray
        push 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$b'
        getMember
        push 'push'
        callMethod
        pop
        push 0, r:this, '9T54'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '(ZcA('
      function2 () (r:1='this')
        push r:this, '(('
        getMember
        push r:this, ']oH'
        getMember
        lessThan
        dup
        branchIfTrue label143
        pop
        push r:this, '(('
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        push r:this, ']oH'
        getMember
        subtract
        greaterThan
       label143:
        not
        branchIfTrue label144
        push r:this, '[b', r:this, '[b'
        getMember
        push -1
        multiply
        setMember
        push r:this, '((', '*r'
        getVariable
        push '=OA'
        getMember
        push r:this, ']oH'
        getMember
        subtract
        push r:this, '(('
        getMember
        push r:this, ']oH'
        getMember
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
       label144:
        push r:this, ')('
        getMember
        push '*r'
        getVariable
        push '*OA'
        getMember
        push r:this, ']oH'
        getMember
        subtract
        greaterThan
        not
        branchIfTrue label145
        push r:this, ']b', r:this, ']b'
        getMember
        push -1
        multiply
        setMember
        push r:this, ')(', '*r'
        getVariable
        push '*OA'
        getMember
        push r:this, ']oH'
        getMember
        subtract
        push r:this, ')('
        getMember
        push r:this, ']oH'
        getMember
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
       label145:
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push ';={0['
        getMember
        push 'remove'
        callMethod
        pop
        push r:this, 1, '2u=W='
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, ')eK7l', 4
      setMember
      push r:0, '[c4gL', 3
      setMember
      push r:0, '{KJWL', 12000, 3000, 1000, 3
      initArray
      push 1, ';ndCG'
      getVariable
      push '*G6KR'
      callMethod
      setMember
      push r:0, ']ew,;', 0
      setMember
      push r:0, '-bdr(', 1
      setMember
      push r:0, '87qb-', 2
      setMember
      push r:0, ';yck(', 3
      setMember
      push r:0, '3yMwA(', 4
      setMember
      push r:0, '9s(f=', 5
      setMember
      push r:0, '{6(', 0
      setMember
      push r:0, '*g,kL', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 70, 70, 70, 50, 60, 100, 18
      initArray
      setMember
      push '+7U K'
      function2 (r:2='}J') (r:1='this')
        push r:this, ')2fr3', r:'}J'
        setMember
        push r:this, '}Zms3', 0, 'Array'
        new
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, ']1sj+'
      function2 () (r:1='this')
        push r:this, ')2fr3'
        getMember
        return
      end // of function 

      setMember
      push r:1, '-fC3a'
      function2 (r:2='59F') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'59F'
        getMember
        setRegister r:3
        pop
        push r:3, NULL
        equals
        not
        branchIfTrue label146
        push '9oK', 0, 'Array'
        new
        push '7-,', 0, 2
        initObject
        setRegister r:3
        pop
        push r:this, '}Zms3'
        getMember
        push r:'59F', r:3
        setMember
       label146:
        push r:3
        return
      end // of function 

      setMember
      push r:1, ']bu40'
      function2 (r:2='[-99') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'[-99'
        getMember
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:7
        pop
        push r:'[-99', 1000
        multiply
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label148
       label147:
        push r:6
        increment
        setRegister r:6
        pop
       label148:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label150
        push r:4, r:6
        getMember
        push '_name'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label149
        push r:8, r:7
        add
        push 1, r:4, r:6
        getMember
        push 'swapDepths'
        callMethod
        pop
        push r:4, r:7, r:4, r:6
        getMember
        setMember
        push r:7
        increment
        setRegister r:7
        pop
       label149:
        branch label147
       label150:
        push r:3, '7-,', r:7
        setMember
      end // of function 

      setMember
      push r:1, '*=_p_'
      function2 (r:2='*KB2', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label151
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'*KB2', 2, r:this, '*=_p_'
        callMethod
        return
       label151:
        push r:6, r:'[-99', 1000
        multiply
        add
        push r:'*KB2', r:this, ')2fr3'
        getMember
        push 3, '3Wt'
        getVariable
        push '7bSH*'
        callMethod
        setRegister r:7
        pop
        push r:5, r:6, r:7
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:7
        return
      end // of function 

      setMember
      push r:1, '18wU*'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push r:5, 1000
        equals
        not
        branchIfTrue label152
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', 1, r:this, '18wU*'
        callMethod
        return
       label152:
        push r:5, r:'[-99', 1000
        multiply
        add
        push r:this, ')2fr3'
        getMember
        push 2, '3Wt'
        getVariable
        push '-4*l(('
        callMethod
        setRegister r:6
        pop
        push r:4, r:5, r:6
        setMember
        push r:3, '7-,', r:3, '7-,'
        getMember
        increment
        setMember
        push r:6
        return
      end // of function 

      setMember
      push r:1, '(GbB}'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label153
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        return
       label153:
        push r:5, r:6, r:'}J'
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:6, r:'[-99', 1000
        multiply
        add
        return
      end // of function 

      setMember
      push r:1, '+2NA'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        push 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, r:'[-99'
        equals
        not
        branchIfTrue label154
        push UNDEF
        return
       label154:
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:5, '7-,'
        getMember
        setRegister r:7
        pop
        push 0
        setRegister r:8
        pop
        branch label156
       label155:
        push r:8
        increment
        setRegister r:8
        pop
       label156:
        push r:8, r:7
        lessThan
        not
        branchIfTrue label158
        push r:6, r:8
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label157
        push r:6, r:8, NULL
        setMember
        branch label158
       label157:
        branch label155
       label158:
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}oQA7'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label159
        push r:6, r:7, NULL
        setMember
        push r:'}J', 1, r:6, 'unshift'
        callMethod
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label159:
      end // of function 

      setMember
      push r:1, '08M8'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label161
        push r:6, r:7, NULL
        setMember
        push r:5, '7-,'
        getMember
        push 1000
        equals
        not
        branchIfTrue label160
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label160:
        push r:5, '7-,'
        getMember
        setRegister r:3
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:3, r:4, 1000
        multiply
        add
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
        push r:6, r:3, r:'}J'
        setMember
       label161:
      end // of function 

      setMember
      push r:1, 'clear'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:4
        pop
        branch label163
       label162:
        push r:4
        increment
        setRegister r:4
        pop
       label163:
        push r:4, r:3, '7-,'
        getMember
        lessThan
        not
        branchIfTrue label164
        push 0, r:5, r:4
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label162
       label164:
        push r:3, '7-,', 0
        setMember
      end // of function 

      setMember
      push r:1, '9(K ;'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push -99999999
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label166
       label165:
        push r:6
        increment
        setRegister r:6
        pop
       label166:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label174
        push r:4, r:6
        getMember
        setRegister r:9
        pop
        push r:9, '_y'
        getMember
        setRegister r:10
        pop
        push r:10, r:8
        lessThan
        not
        not
        branchIfTrue label167
        push r:10
        setRegister r:8
        pop
        branch label173
       label167:
        push r:6
        setRegister r:7
        pop
        branch label169
       label168:
        push r:7
        decrement
        setRegister r:7
        pop
       label169:
        push r:7, 0
        greaterThan
        not
        branchIfTrue label172
        push r:4, r:7, 1
        subtract
        getMember
        setRegister r:11
        pop
        push r:11, '_y'
        getMember
        push r:10
        greaterThan
        not
        branchIfTrue label170
        push r:4, r:7, r:11
        setMember
        push r:11, 1, r:9, 'swapDepths'
        callMethod
        pop
        branch label171
       label170:
        push r:4, r:7, r:9
        setMember
        branch label172
       label171:
        branch label168
       label172:
        push r:7, 0
        equals
        not
        branchIfTrue label173
        push r:4, 0, r:9
        setMember
       label173:
        branch label165
       label174:
      end // of function 

      setMember
      push r:1, ',}2X ('
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label176
       label175:
        push r:2
        increment
        setRegister r:2
        pop
       label176:
        push r:2, r:this, '}Zms3'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label177
        push r:2, 1, r:this, 'clear'
        callMethod
        pop
        branch label175
       label177:
      end // of function 

      setMember
      push '{-kxL'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '87vE7('
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '4plQ5', '{-kxL'
        getVariable
        push '4plQ5'
        getMember
        increment
        setMember
        push 0, '3Wt'
        getVariable
        push 'getTimer'
        callMethod
        setRegister r:2
        pop
        push '{-kxL'
        getVariable
        push ';ILSy', r:2, '{-kxL'
        getVariable
        push '3R,QM'
        getMember
        subtract
        push 1000.0
        divide
        setMember
        push '{-kxL'
        getVariable
        push '3R,QM', r:2
        setMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        push '{-kxL'
        getVariable
        push ';y}-6('
        getMember
        lessThan
        not
        branchIfTrue label178
        push '{-kxL'
        getVariable
        push '-)Xd+', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        push '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        multiply
        push 1, '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        subtract
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        multiply
        add
        setMember
        branch label179
       label178:
        push '{-kxL'
        getVariable
        push ';ILSy', 1, '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        divide
        setMember
       label179:
        push '{-kxL'
        getVariable
        push '-V;B', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        setMember
      end // of function 

      setMember
      push r:0, 'fps'
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        return
      end // of function 

      setMember
      push r:0, '6GI,F', 32
      setMember
      push r:0, ';y}-6(', 0.5
      setMember
      push r:0, '3R,QM', 0, '3Wt'
      getVariable
      push 'getTimer'
      callMethod
      setMember
      push r:0, '[Ad;n', 0.95
      setMember
      push r:0, '-)Xd+', 1
      setMember
      push r:0, '-V;B', 1
      setMember
      push r:0, ';ILSy', 1
      setMember
      push r:0, '4plQ5', 0
      setMember
      push '=3+P'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, ']oH', '=3+P'
        getVariable
        push '{Cs'
        getMember
        setMember
        push r:this, '}Yax5', 3.6
        setMember
        push r:this, '+{eA+', 0.6
        setMember
        push r:this, ')gqqC(', 0
        setMember
        push r:this, ')JN}d', 0
        setMember
        push r:this, '4-rA5', 0
        setMember
        push r:this, '5-rA5', 0
        setMember
        push r:this, ' Iqt5', 0
        initArray
        setMember
        push r:this, '8[eCC(', 0
        initArray
        setMember
        push r:this, '1,gsi', 0
        initArray
        setMember
        push r:this, '6GBe6', 0
        initArray
        setMember
        push r:this, ']dDW(', 0, '{sRCQ'
        new
        setMember
        push 0
        setRegister r:4
        pop
        branch label181
       label180:
        push r:4
        increment
        setRegister r:4
        pop
       label181:
        push r:4, 3
        lessThan
        not
        branchIfTrue label182
        push 0, r:this, '(WKvR'
        callMethod
        pop
        branch label180
       label182:
        push 0
        setRegister r:5
        pop
        branch label184
       label183:
        push r:5
        increment
        setRegister r:5
        pop
       label184:
        push r:5, 6
        lessThan
        not
        branchIfTrue label189
        push r:this, '1,gsi'
        getMember
        push r:5, 0, r:5, 0
        equals
        not
        branchIfTrue label185
        push 1
        branch label186
       label185:
        push 0
       label186:
        push 2
        initArray
        setMember
        push r:this, '6GBe6'
        getMember
        push r:5, 0, r:5, 0
        equals
        not
        branchIfTrue label187
        push 1
        branch label188
       label187:
        push 0
       label188:
        push 2
        initArray
        setMember
        branch label183
       label189:
        push r:this, '32', r:this, '-iB='
        getMember
        push 1, '+7U K'
        new
        setMember
        push r:this, '8iDn=', FALSE
        setMember
        push '10', 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '((', '*r'
        getVariable
        push '=OA'
        getMember
        push 0.5
        multiply
        push 5
        subtract
        setMember
        push r:this, ')(', '*r'
        getVariable
        push '*OA'
        getMember
        push r:this, ']oH'
        getMember
        add
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '8iDn='
        getMember
        not
        branchIfTrue label190
        push 0, r:this, '505t0'
        callMethod
        pop
        push 0, r:this, '-wfQp'
        callMethod
        pop
        branch label191
       label190:
        push r:this, ')(', r:this, ')('
        getMember
        push 0.8, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        setMember
       label191:
        push r:this, '[AA8'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label192
        push 0, r:this, '{HxAn'
        callMethod
        pop
       label192:
        push r:this, '6k2V6'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label193
        push 0, r:this, '}gp0n'
        callMethod
        pop
       label193:
        push r:this, '*7nPD'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label194
        push 0, r:this, '(If0'
        callMethod
        pop
       label194:
        push r:this, '+NXw5('
        getMember
        push 0
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label195
        push 0, r:this, ')m_(I('
        callMethod
        pop
       label195:
        push r:this, '8iDn='
        getMember
        not
        dup
        not
        branchIfTrue label196
        pop
        push '{Al{2'
        getVariable
        push '69-'
        getMember
        push 56
        greaterThan
       label196:
        not
        branchIfTrue label197
        push '44{N'
        getVariable
        push '0X xI(', '44{N'
        getVariable
        push '0X xI('
        getMember
        push 2.4
        add
        setMember
        push r:this, '8iDn=', TRUE
        setMember
       label197:
        push 0
        setRegister r:3
        pop
        branch label199
       label198:
        push r:3
        increment
        setRegister r:3
        pop
       label199:
        push r:3, 6
        lessThan
        not
        branchIfTrue label201
        push r:this, '1,gsi'
        getMember
        push r:3
        getMember
        push 0
        getMember
        push r:this, '6GBe6'
        getMember
        push r:3
        getMember
        push 0
        getMember
        equals
        not
        not
        branchIfTrue label200
        push 0, ';ndCG'
        getVariable
        push '0ze*c'
        callMethod
        pop
       label200:
        branch label198
       label201:
        push 0
        setRegister r:4
        pop
        branch label203
       label202:
        push r:4
        increment
        setRegister r:4
        pop
       label203:
        push r:4, r:this, ' Iqt5'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label205
        push r:this, ' Iqt5'
        getMember
        push r:4
        getMember
        push r:this, '8[eCC('
        getMember
        push r:4
        getMember
        equals
        not
        not
        branchIfTrue label204
        push 0, ';ndCG'
        getVariable
        push '0ze*c'
        callMethod
        pop
       label204:
        branch label202
       label205:
        push 0, r:this, ']dDW('
        getMember
        push '36}9L('
        callMethod
        not
        branchIfTrue label206
        push 0, ';ndCG'
        getVariable
        push '0ze*c'
        callMethod
        pop
       label206:
      end // of function 

      setMember
      push r:1, ')m_(I('
      function2 () (r:1='this')
        push r:this, '+NXw5(', r:this, '+NXw5('
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        push 1
        initArray
        setMember
        push 16777215, 70, r:this, '+NXw5('
        getMember
        push 0
        getMember
        push 0.5
        multiply
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push 20
        multiply
        add
        push r:this, '-iB='
        getMember
        push 3, '*r'
        getVariable
        push ';CYOh'
        callMethod
        pop
        push 1, r:this, '+NXw5('
        getMember
        push 0
        getMember
        push 50
        divide
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:2
        pop
        push '44{N'
        getVariable
        push '-4Nbg'
        getMember
        push '+ua[U', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:3
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:4
        pop
        push r:4, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:5
        pop
        push r:4, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:6
        pop
        push 0
        setRegister r:7
        pop
        push 1.5, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 1.5
        multiply
        add
        setRegister r:8
        pop
        push r:3, '((', r:this, '(('
        getMember
        setMember
        push r:3, ')(', r:this, ')('
        getMember
        push 6
        subtract
        setMember
        push r:3, '[b', r:5, r:8
        multiply
        setMember
        push r:3, ']b', r:6, r:8
        multiply
        push 4
        add
        setMember
        push r:3, '0{8*_', 1
        setMember
        push r:3, '2VhU6', 10
        setMember
        push r:3, '849kV', 0
        setMember
        push r:3, '-iB='
        getMember
        push 'blendMode', '(WBt)'
        getVariable
        push '+,W'
        getMember
        setMember
        push 150, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 100
        multiply
        add
        push r:2
        multiply
        push 1, r:3, '3BjX_'
        callMethod
        pop
        push r:this, '+NXw5('
        getMember
        push 0
        getMember
        push 0
        lessThan
        not
        branchIfTrue label207
        push r:this, '+NXw5(', NULL, 1
        initArray
        setMember
        push r:this, ']oH', '=3+P'
        getVariable
        push '{Cs'
        getMember
        setMember
        push 16777215, 0, r:this, '-iB='
        getMember
        push 3, '*r'
        getVariable
        push ';CYOh'
        callMethod
        pop
       label207:
        push r:3, '-iB='
        getMember
        push 1, '+7U K'
        new
        setRegister r:9
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 3
        multiply
        push 1
        lessThan
        not
        branchIfTrue label208
        push 0, '8atwB(', 2, r:9, '*=_p_'
        callMethod
        setRegister r:10
        pop
        push r:10, '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        push r:10, '_xscale', 100, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 100
        multiply
        add
        setMember
        push r:10, '_yscale', 50, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 100
        multiply
        add
        setMember
       label208:
      end // of function 

      setMember
      push r:1, '505t0'
      function2 () (r:1='this')
        push r:this, '1,gsi'
        getMember
        push 3
        getMember
        push 0
        getMember
        setRegister r:2
        pop
        push 10, r:this, '}Yax5'
        getMember
        push r:2, 1.6
        multiply
        add
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        push 0.25
        setRegister r:6
        pop
        push 'Key'
        getVariable
        push 'LEFT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label209
        push r:4, r:3
        subtract
        setRegister r:4
        pop
        push r:this, ')gqqC(', r:this, ')gqqC('
        getMember
        push r:6
        subtract
        setMember
        push r:this, '4-rA5', r:this, '4-rA5'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 5
        multiply
        subtract
        setMember
       label209:
        push 'Key'
        getVariable
        push 'RIGHT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label210
        push r:4, r:3
        add
        setRegister r:4
        pop
        push r:this, ')gqqC(', r:this, ')gqqC('
        getMember
        push r:6
        add
        setMember
        push r:this, '4-rA5', r:this, '4-rA5'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 5
        multiply
        add
        setMember
       label210:
        push 'Key'
        getVariable
        push 'UP'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label211
        push r:5, r:3
        subtract
        setRegister r:5
        pop
        push r:this, '5-rA5', r:this, '5-rA5'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 3.5
        multiply
        subtract
        setMember
       label211:
        push 'Key'
        getVariable
        push 'DOWN'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label212
        push r:5, r:3
        add
        setRegister r:5
        pop
        push r:this, '5-rA5', r:this, '5-rA5'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 3.5
        multiply
        add
        setMember
       label212:
        push r:this, '4-rA5', r:this, '4-rA5'
        getMember
        push 0.6
        multiply
        setMember
        push r:this, '5-rA5', r:this, '5-rA5'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.87, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        setMember
        push r:this, ')gqqC(', r:this, ')gqqC('
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.94, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        setMember
        push r:2, 0
        greaterThan
        not
        branchIfTrue label221
        push 2
        setRegister r:7
        pop
        push 0
        setRegister r:8
        pop
        branch label214
       label213:
        push r:8
        increment
        setRegister r:8
        pop
       label214:
        push r:8, r:7
        lessThan
        not
        branchIfTrue label218
        push r:8, r:7
        divide
        setRegister r:9
        pop
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push '9rGzL', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:10
        pop
        push r:10, '_x', r:this, '(('
        getMember
        push r:4, r:9
        multiply
        add
        setMember
        push r:10, '_y', r:this, ')('
        getMember
        push r:5, '44{N'
        getVariable
        push '0X xI('
        getMember
        add
        push r:9
        multiply
        add
        setMember
        push r:10, '_xscale', 120, r:2, 40
        multiply
        add
        push 1.7
        multiply
        setMember
        push r:10, '_yscale', r:10, '_xscale'
        getMember
        setMember
        push r:2
        toString
        push 1, r:10, 'gotoAndStop'
        callMethod
        pop
        push 0, r:10, 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '1m(7i'
        callMethod
        pop
        push 0
        setRegister r:11
        pop
        branch label216
       label215:
        push r:11
        increment
        setRegister r:11
        pop
       label216:
        push r:11, 3
        lessThan
        not
        branchIfTrue label217
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:12
        pop
        push 20, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 50
        multiply
        add
        setRegister r:13
        pop
        push r:10, '_x', r:this, '(('
        getMember
        push r:12, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:13
        multiply
        add
        setMember
        push r:10, '_y', r:this, ')('
        getMember
        push r:12, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:13
        multiply
        add
        setMember
        push r:10, '_xscale', 100, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 150
        multiply
        add
        setMember
        push r:10, '_yscale', r:10, '_xscale'
        getMember
        setMember
        push 0, r:10, 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '1m(7i'
        callMethod
        pop
        branch label215
       label217:
        push 0, r:10, 'removeMovieClip'
        callMethod
        pop
        branch label213
       label218:
        push r:this, ']oH'
        getMember
        push 60, r:2, 40
        multiply
        add
        push 1.7
        multiply
        push 100
        divide
        multiply
        push 1.3
        multiply
        setRegister r:14
        pop
        push 0
        setRegister r:15
        pop
        branch label220
       label219:
        push r:15
        increment
        setRegister r:15
        pop
       label220:
        push r:15, r:2
        lessThan
        not
        branchIfTrue label221
        push '44{N'
        getVariable
        push '-4Nbg'
        getMember
        push '5n4 5', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:16
        pop
        push r:16, '((', r:this, '(('
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push r:14
        multiply
        add
        setMember
        push r:16, ')(', r:this, ')('
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push r:14
        multiply
        add
        setMember
        push 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 15, r:2, 5
        multiply
        add
        multiply
        add
        push 1, r:16, '3BjX_'
        callMethod
        pop
        push r:16, '-iB='
        getMember
        push '_totalframes'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        add
        toString
        push 1, r:16, '-iB='
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push r:16, '-iB='
        getMember
        push '5t 9)', 100
        setMember
        push r:16, ']b', '44{N'
        getVariable
        push '0X xI('
        getMember
        setMember
        push r:16, '2VhU6', 20, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        branch label219
       label221:
        push r:this, '((', r:this, '(('
        getMember
        push r:4
        add
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push r:5
        add
        setMember
        push 1, 20, 10, r:this, '4-rA5'
        getMember
        add
        push 0, 3, '*r'
        getVariable
        push '2K'
        callMethod
        int
        add
        setRegister r:17
        pop
        push r:17
        toString
        push 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push 0, r:this, '(ZcA('
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '0=*{5('
      function2 (r:2='*B') (r:1='this')
        push r:this, ' Iqt5'
        getMember
        push 'length'
        getMember
        push r:this, ']dDW('
        getMember
        push 'length'
        getMember
        equals
        not
        branchIfTrue label222
        push 0, 1, r:this, '+ARAb'
        callMethod
        pop
       label222:
        push r:this, '1,gsi'
        getMember
        push r:'*B'
        getMember
        push 0, r:this, '1,gsi'
        getMember
        push r:'*B'
        getMember
        push 0
        getMember
        increment
        setMember
        push r:this, '6GBe6'
        getMember
        push r:'*B'
        getMember
        push 0, r:this, '6GBe6'
        getMember
        push r:'*B'
        getMember
        push 0
        getMember
        increment
        setMember
        push r:'*B', 1, r:this, ' Iqt5'
        getMember
        push 'push'
        callMethod
        pop
        push r:'*B', 1, r:this, '8[eCC('
        getMember
        push 'push'
        callMethod
        pop
        push 0, r:this, '7uAk{'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '(WKvR'
      function2 () (r:1='this')
        push '44{N'
        getVariable
        push '[V{(6'
        getMember
        push '(4sPC', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:2
        pop
        push 8
        setRegister r:3
        pop
        push r:2, '_x', r:3
        setMember
        push r:2, '_y', '*r'
        getVariable
        push '*OA'
        getMember
        push r:3, r:this, ']dDW('
        getMember
        push 'length'
        getMember
        push r:3, 6
        add
        multiply
        add
        subtract
        setMember
        push 0, r:2, 'stop'
        callMethod
        pop
        push r:2, 1, r:this, ']dDW('
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '7uAk{'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label224
       label223:
        push r:2
        increment
        setRegister r:2
        pop
       label224:
        push r:2, r:this, ']dDW('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label226
        push r:this, ' Iqt5'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3, NULL
        equals
        not
        branchIfTrue label225
        push -1
        setRegister r:3
        pop
       label225:
        push r:3, 2
        add
        toString
        push 1, r:this, ']dDW('
        getMember
        push r:2
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        branch label223
       label226:
      end // of function 

      setMember
      push r:1, '+ARAb'
      function2 (r:2='7') (r:1='this')
        push r:this, ' Iqt5'
        getMember
        push 'length'
        getMember
        push 0
        equals
        not
        branchIfTrue label227
        push UNDEF
        return
       label227:
        push r:'7', NULL
        equals
        not
        branchIfTrue label228
        push r:this, ' Iqt5'
        getMember
        push 'length'
        getMember
        push 1
        subtract
        setRegister r:'7'
        pop
       label228:
        push r:this, ' Iqt5'
        getMember
        push r:'7'
        getMember
        setRegister r:3
        pop
        push r:this, '1,gsi'
        getMember
        push r:3
        getMember
        push 0, r:this, '1,gsi'
        getMember
        push r:3
        getMember
        push 0
        getMember
        decrement
        setMember
        push r:this, '6GBe6'
        getMember
        push r:3
        getMember
        push 0, r:this, '6GBe6'
        getMember
        push r:3
        getMember
        push 0
        getMember
        decrement
        setMember
        push 1, r:'7', 2, r:this, ' Iqt5'
        getMember
        push 'splice'
        callMethod
        pop
        push 1, r:'7', 2, r:this, '8[eCC('
        getMember
        push 'splice'
        callMethod
        pop
        push 0, r:this, '7uAk{'
        callMethod
        pop
        push 100, r:3
        add
        push '{Al{2'
        getVariable
        push '69-'
        getMember
        push 2
        initArray
        push 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$b'
        getMember
        push 'push'
        callMethod
        pop
        push r:3
        setRegister r:0
        push '=3+P'
        getVariable
        push ']ew,;'
        getMember
        strictEquals
        branchIfTrue label229
        push r:0, '=3+P'
        getVariable
        push '-bdr('
        getMember
        strictEquals
        branchIfTrue label230
        push r:0, '=3+P'
        getVariable
        push '3yMwA('
        getMember
        strictEquals
        branchIfTrue label232
        push r:0, '=3+P'
        getVariable
        push ';yck('
        getMember
        strictEquals
        branchIfTrue label242
        push r:0, '=3+P'
        getVariable
        push '87qb-'
        getMember
        strictEquals
        branchIfTrue label247
        push r:0, '=3+P'
        getVariable
        push '9s(f='
        getMember
        strictEquals
        branchIfTrue label248
        push r:0, NULL
        strictEquals
        branchIfTrue label252
        branch label253
       label229:
        push 14, 0, 2, r:this, '8A1T3('
        callMethod
        setRegister r:4
        pop
        push 1, 18, 2, r:4, '3U*}=('
        callMethod
        pop
        push r:4, ']oH', 50
        setMember
        push r:4, '*]Q5}', 50
        setMember
        push r:4, '{jXZ;(', TRUE
        setMember
        push 11, 1, r:4, '86{p('
        getMember
        push 'push'
        callMethod
        pop
        branch label253
       label230:
        push r:this, '[AA8'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label231
        push 0, r:this, '[AA8'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
       label231:
        push r:this, '[AA8', '44{N'
        getVariable
        push '-4Nbg'
        getMember
        push '* A+', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '[AA8'
        getMember
        push 'list', 0, 'Array'
        new
        setMember
        push r:this, '[AA8'
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '[AA8'
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
        push r:this, '[AA8'
        getMember
        push '_xscale', 80
        setMember
        push r:this, '[AA8'
        getMember
        push '_yscale', r:this, '[AA8'
        getMember
        push '_xscale'
        getMember
        setMember
        branch label253
       label232:
        push r:this, '*7nPD'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label233
        branch label253
       label233:
        push r:this, '*7nPD', '44{N'
        getVariable
        push '-4Nbg'
        getMember
        push ',Tyae', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '*7nPD'
        getMember
        push 'list', 0, 'Array'
        new
        setMember
        push r:this, '*7nPD'
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '*7nPD'
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
        push r:this, '*7nPD'
        getMember
        push '=kIA', 0
        setMember
        push r:this, '*7nPD'
        getMember
        push '_xscale', 10
        setMember
        push r:this, '*7nPD'
        getMember
        push '_yscale', 10
        setMember
        push r:this, '*7nPD'
        getMember
        push '6b', 10
        setMember
        push 0, 'Array'
        new
        setRegister r:5
        pop
        push 0
        setRegister r:6
        pop
        branch label235
       label234:
        push r:6
        increment
        setRegister r:6
        pop
       label235:
        push r:6, '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label236
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        push r:6
        getMember
        push 1, r:5, 'push'
        callMethod
        pop
        branch label234
       label236:
        push 0
        setRegister r:7
        pop
        branch label238
       label237:
        push r:7
        increment
        setRegister r:7
        pop
       label238:
        push r:7, '*r'
        getVariable
        push '+-(0'
        getMember
        push '2xEr8'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label239
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '2xEr8'
        getMember
        push r:7
        getMember
        push 1, r:5, 'push'
        callMethod
        pop
        branch label237
       label239:
        push r:5, 'length'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label241
        push 0, r:5, 'pop'
        callMethod
        setRegister r:8
        pop
        push r:8, 'flash'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label240
        push r:8, 'flash', 0
        setMember
        push 0, r:8, '8J 3y'
        callMethod
        pop
       label240:
        push r:8, '-iB='
        getMember
        push 1, '*DzW'
        new
        setRegister r:9
        pop
        push r:9, '((', r:8, '(('
        getMember
        setMember
        push r:9, ')(', r:8, ')('
        getMember
        setMember
        push r:9, '[b', r:8, '[b'
        getMember
        setMember
        push r:9, ']b', r:8, ']b'
        getMember
        setMember
        push r:9, '+{eA+', 0.94
        setMember
        push r:9, ']oH', r:8, ']oH'
        getMember
        setMember
        push r:9, '=hqS(', 0
        setMember
        push r:8, '-iB=', NULL
        setMember
        push 0, r:8, '9T54'
        callMethod
        pop
        push r:9, 1, r:this, '*7nPD'
        getMember
        push 'list'
        getMember
        push 'push'
        callMethod
        pop
        branch label239
       label241:
        branch label253
       label242:
        push r:this, '6k2V6'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label243
        branch label253
       label243:
        push r:this, '6k2V6', '44{N'
        getVariable
        push '-4Nbg'
        getMember
        push '+fPi}', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '6k2V6'
        getMember
        push 'blendMode', '(WBt)'
        getVariable
        push '+,W'
        getMember
        setMember
        push r:this, '6k2V6'
        getMember
        push ']oH'
        getMember
        push '_xscale', 0
        setMember
        push r:this, '6k2V6'
        getMember
        push '32', r:this, '6k2V6'
        getMember
        push 1, '+7U K'
        new
        setMember
        push r:this, '6k2V6'
        getMember
        push 'list', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:10
        pop
        branch label245
       label244:
        push r:10
        increment
        setRegister r:10
        pop
       label245:
        push r:10, 12
        lessThan
        not
        branchIfTrue label246
        push 0, '1Cn(V', 2, r:this, '6k2V6'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:11
        pop
        push r:11, '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        push r:11, '_xscale', 100, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 100
        multiply
        add
        setMember
        push r:11, '_yscale', 100, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 500
        multiply
        add
        setMember
        push r:11, ']', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 50
        multiply
        add
        setMember
        push r:11, 'blendMode', '(WBt)'
        getVariable
        push '+,W'
        getMember
        setMember
        push r:11, '6b', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 5
        multiply
        setMember
        push r:11, 1, r:this, '6k2V6'
        getMember
        push 'list'
        getMember
        push 'push'
        callMethod
        pop
        branch label244
       label246:
        push r:this, '6k2V6'
        getMember
        push ']', 80
        setMember
        branch label253
       label247:
        push r:this, '+NXw5(', 300, 1
        initArray
        setMember
        push r:this, ']oH', '=3+P'
        getVariable
        push '*tQW,('
        getMember
        setMember
        branch label253
       label248:
        push 12
        setRegister r:12
        pop
        push 0
        setRegister r:13
        pop
        branch label250
       label249:
        push r:13
        increment
        setRegister r:13
        pop
       label250:
        push r:13, r:12
        lessThan
        not
        branchIfTrue label251
        push 6.28, r:13
        multiply
        push r:12
        divide
        push 1, r:this, '0ADg}'
        callMethod
        setRegister r:14
        pop
        push r:14, ';)bt5', 6
        setMember
        push r:14, '2VhU6', 60
        setMember
        branch label249
       label251:
        branch label253
       label252:
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '0,', '}CL', 0.3, '2VhU6', 100, '8kN', 1, 3
        initObject
        setMember
        branch label253
       label253:
        push 0, '*r'
        getVariable
        push '+-(0'
        getMember
        push '2xEr8'
        getMember
        push '],lYS'
        callMethod
        setRegister r:15
        pop
        push 0
        setRegister r:16
        pop
        branch label255
       label254:
        push r:16
        increment
        setRegister r:16
        pop
       label255:
        push r:16, r:15, 'length'
        getMember
        lessThan
        not
        branchIfTrue label257
        push r:15, r:16
        getMember
        setRegister r:17
        pop
        push r:17, '*g;o'
        getMember
        push TRUE
        equals
        not
        not
        branchIfTrue label256
        push 0, r:17, '9T54'
        callMethod
        pop
       label256:
        branch label254
       label257:
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '=eb]C(', 100
        setMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '7CL3K', -70
        setMember
        push '{Al{2'
        getVariable
        push ' cR(z', 100
        setMember
      end // of function 

      setMember
      push r:1, '-wfQp'
      function2 () (r:1='this')
        push 'Key'
        getVariable
        push 'SPACE'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        dup
        branchIfTrue label258
        pop
        push 18, 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
       label258:
        dup
        branchIfTrue label259
        pop
        push 'Key'
        getVariable
        push 'ENTER'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
       label259:
        setRegister r:2
        pop
        push r:this, '-IP8a'
        getMember
        push '_visible'
        getMember
        not
        branchIfTrue label260
        push 0, r:this, '-IP8a'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
       label260:
        push 0
        setRegister r:3
        pop
        branch label262
       label261:
        push r:3
        increment
        setRegister r:3
        pop
       label262:
        push r:3, 6
        lessThan
        not
        branchIfTrue label332
        push r:this, '1,gsi'
        getMember
        push r:3
        getMember
        setRegister r:4
        pop
        push r:4, 0
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label331
        push r:4, 1
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label263
        push r:4, 1, r:4, 1
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
       label263:
        push r:2
        dup
        not
        branchIfTrue label264
        pop
        push r:4, 1
        getMember
        push 0
        greaterThan
        not
       label264:
        dup
        not
        branchIfTrue label265
        pop
        push r:this, '*7nPD'
        getMember
        push NULL
        equals
       label265:
        dup
        not
        branchIfTrue label266
        pop
        push r:this, '6k2V6'
        getMember
        push NULL
        equals
       label266:
        not
        branchIfTrue label331
        push r:3
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label267
        push r:0, 5
        strictEquals
        branchIfTrue label285
        push r:0, 1
        strictEquals
        branchIfTrue label293
        push r:0, 2
        strictEquals
        branchIfTrue label303
        push r:0, 4
        strictEquals
        branchIfTrue label328
        push r:0, 3
        strictEquals
        branchIfTrue label329
        branch label330
       label267:
        push r:4, 0
        getMember
        setRegister r:0
        push 1
        strictEquals
        branchIfTrue label268
        push r:0, 2
        strictEquals
        branchIfTrue label269
        push r:0, 3
        strictEquals
        branchIfTrue label273
        branch label277
       label268:
        push 12, 0, 2, r:this, '8A1T3('
        callMethod
        setRegister r:5
        pop
        push 1, 14, 2, r:5, '3U*}=('
        callMethod
        pop
        push r:5, ']oH', 6
        setMember
        push r:5, '*]Q5}', 1
        setMember
        branch label284
       label269:
        push 0
        setRegister r:6
        pop
        branch label271
       label270:
        push r:6
        increment
        setRegister r:6
        pop
       label271:
        push r:6, 2
        lessThan
        not
        branchIfTrue label272
        push 12, 0, 2, r:this, '8A1T3('
        callMethod
        setRegister r:7
        pop
        push 1, 14, 2, r:7, '3U*}=('
        callMethod
        pop
        push r:7, ']oH', 6
        setMember
        push r:7, '((', r:this, '(('
        getMember
        push r:6, 2
        multiply
        push 1
        subtract
        push 5
        multiply
        add
        setMember
        push r:7, '*]Q5}', 1
        setMember
        branch label270
       label272:
        branch label284
       label273:
        push 15, 0, 2, r:this, '8A1T3('
        callMethod
        setRegister r:8
        pop
        push 1, 14, 2, r:8, '3U*}=('
        callMethod
        pop
        push r:8, ']oH', 8
        setMember
        push 150, 1, r:8, '3BjX_'
        callMethod
        pop
        push r:8, '*]Q5}', 2
        setMember
        push r:8, '{jXZ;(', TRUE
        setMember
        push 0
        setRegister r:9
        pop
        branch label275
       label274:
        push r:9
        increment
        setRegister r:9
        pop
       label275:
        push r:9, 2
        lessThan
        not
        branchIfTrue label276
        push r:9, 2
        multiply
        push 1
        subtract
        setRegister r:10
        pop
        push 12, r:10, 0.15
        multiply
        push 2, r:this, '8A1T3('
        callMethod
        setRegister r:11
        pop
        push 1, 14, 2, r:11, '3U*}=('
        callMethod
        pop
        push r:11, ']oH', 8
        setMember
        push r:11, '((', r:this, '(('
        getMember
        push r:10, 5
        multiply
        add
        setMember
        push r:11, '*]Q5}', 1
        setMember
        branch label274
       label276:
        branch label284
       label277:
        push 15, 0, 2, r:this, '8A1T3('
        callMethod
        setRegister r:12
        pop
        push 1, 14, 2, r:12, '3U*}=('
        callMethod
        pop
        push r:12, ']oH', 4, r:4, 0
        getMember
        add
        setMember
        push 100, r:4, 0
        getMember
        push 25
        multiply
        add
        push 1, r:12, '3BjX_'
        callMethod
        pop
        push r:12, '*]Q5}', 1, r:4, 0
        getMember
        push 0.5
        multiply
        add
        setMember
        push r:12, '{jXZ;(', TRUE
        setMember
        push 0
        setRegister r:13
        pop
        branch label279
       label278:
        push r:13
        increment
        setRegister r:13
        pop
       label279:
        push r:13, 2
        lessThan
        not
        branchIfTrue label283
        push r:13, 2
        multiply
        push 1
        subtract
        setRegister r:14
        pop
        push 0
        setRegister r:15
        pop
        branch label281
       label280:
        push r:15
        increment
        setRegister r:15
        pop
       label281:
        push r:15, r:4, 0
        getMember
        push 0.5
        multiply
        lessThan
        not
        branchIfTrue label282
        push 12, r:15, 1.5
        multiply
        subtract
        push r:14, 0.15, r:15, 0.15
        multiply
        add
        multiply
        push 2, r:this, '8A1T3('
        callMethod
        setRegister r:16
        pop
        push 1, 14, 2, r:16, '3U*}=('
        callMethod
        pop
        push r:16, ']oH', 8
        setMember
        push r:16, '((', r:this, '(('
        getMember
        push r:14, 5, r:15, 5
        multiply
        add
        multiply
        add
        setMember
        push r:16, '*]Q5}', 1
        setMember
        branch label280
       label282:
        branch label278
       label283:
        branch label284
       label284:
        push r:4, 1, r:4, 1
        getMember
        push 8
        add
        setMember
        branch label330
       label285:
        push 0
        setRegister r:17
        pop
        branch label287
       label286:
        push r:17
        increment
        setRegister r:17
        pop
       label287:
        push r:17, 2
        lessThan
        not
        branchIfTrue label292
        push r:17, 2
        multiply
        push 1
        subtract
        setRegister r:18
        pop
        push 0
        setRegister r:19
        pop
        branch label289
       label288:
        push r:19
        increment
        setRegister r:19
        pop
       label289:
        push r:19, r:4, 0
        getMember
        lessThan
        not
        branchIfTrue label291
        push r:19, r:4, 0
        getMember
        push 1
        subtract
        divide
        push 0.5
        subtract
        setRegister r:20
        pop
        push r:4, 0
        getMember
        push 1
        equals
        not
        branchIfTrue label290
        push 0
        setRegister r:20
        pop
       label290:
        push 0.5, r:4, 0
        getMember
        push 0.2
        multiply
        add
        setRegister r:21
        pop
        push r:18, 1.9
        multiply
        push r:21, r:20
        multiply
        add
        push 1, r:this, '0ADg}'
        callMethod
        setRegister r:22
        pop
        branch label288
       label291:
        branch label286
       label292:
        push r:4, 1, r:4, 1
        getMember
        push 40
        add
        setMember
        branch label330
       label293:
        push 0
        setRegister r:23
        pop
        branch label295
       label294:
        push r:23
        increment
        setRegister r:23
        pop
       label295:
        push r:23, 2
        lessThan
        not
        branchIfTrue label302
        push 6, r:4, 0
        getMember
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:24
        pop
        push 0
        setRegister r:25
        pop
        branch label297
       label296:
        push r:25
        increment
        setRegister r:25
        pop
       label297:
        push r:25, r:24
        lessThan
        not
        branchIfTrue label301
        push r:23, 2
        multiply
        push 1
        subtract
        setRegister r:26
        pop
        push r:25, r:24, 1
        subtract
        divide
        push 0.5
        subtract
        setRegister r:27
        pop
        push r:24, 1
        equals
        not
        branchIfTrue label298
        push 0
        setRegister r:27
        pop
       label298:
        push 0.3, r:4, 0
        getMember
        push 0.1
        multiply
        add
        setRegister r:28
        pop
        push 14, r:26, 1.57, r:this, '5-rA5'
        getMember
        push 0.05
        multiply
        subtract
        multiply
        push r:28, r:27
        multiply
        add
        push 2, r:this, '8A1T3('
        callMethod
        setRegister r:29
        pop
        push 1, 16, 2, r:29, '3U*}=('
        callMethod
        pop
        push r:29, '*]Q5}', 0.85
        setMember
        push r:29, '((', r:29, '(('
        getMember
        push r:26, 14
        multiply
        add
        setMember
        push r:29, ')(', r:29, ')('
        getMember
        push 16
        add
        setMember
        push 0, r:29, '{BxJE('
        callMethod
        pop
        push 0, r:29, '4u=dZ'
        callMethod
        pop
        push r:25, 1
        greaterThan
        dup
        not
        branchIfTrue label299
        pop
        push r:25, r:24, 1
        subtract
        lessThan
       label299:
        not
        branchIfTrue label300
        push 150, 1, r:29, '3BjX_'
        callMethod
        pop
        push r:29, '*]Q5}', 1.5
        setMember
        push r:29, '}Yax5', 18
        setMember
        push 0, r:29, ',43dZ'
        callMethod
        pop
        push r:29, '((', r:29, '(('
        getMember
        push r:26, 6
        multiply
        add
        setMember
       label300:
        branch label296
       label301:
        branch label294
       label302:
        push r:4, 1, r:4, 1
        getMember
        push 5
        add
        setMember
        branch label330
       label303:
        push r:this, '4E-V6'
        getMember
        push NULL
        equals
        dup
        branchIfTrue label304
        pop
        push r:this, '4E-V6'
        getMember
        push '2Gr]U'
        getMember
       label304:
        not
        branchIfTrue label308
        push 1, 0
        divide
        setRegister r:30
        pop
        push r:this, '4E-V6', '((', r:this, '(('
        getMember
        push ')(', -20, ']oH', 10, '*]Q5}', NULL, '2Gr]U', TRUE, '7YKSC(', NULL, 6
        initObject
        setMember
        push 0
        setRegister r:31
        pop
        branch label306
       label305:
        push r:31
        increment
        setRegister r:31
        pop
       label306:
        push r:31, '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label308
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        push r:31
        getMember
        setRegister r:32
        pop
        push r:32, 1, r:this, '}1A{_'
        callMethod
        setRegister r:33
        pop
        push r:33, r:30
        lessThan
        not
        branchIfTrue label307
        push r:this, '4E-V6', r:32
        setMember
        push r:33
        setRegister r:30
        pop
       label307:
        branch label305
       label308:
        push r:this, ')('
        getMember
        push 6
        subtract
        push r:this, '(('
        getMember
        push 2
        initArray
        setRegister r:34
        pop
        push r:34, 1
        initArray
        setRegister r:35
        pop
        push -1.57
        setRegister r:36
        pop
        push r:this, '4E-V6'
        getMember
        push '2Gr]U'
        getMember
        not
        not
        branchIfTrue label309
        push r:36, r:this, ')gqqC('
        getMember
        add
        setRegister r:36
        pop
       label309:
        push 0.1
        setRegister r:37
        pop
        push 0.1
        setRegister r:38
        pop
        push 7
        setRegister r:39
        pop
        push 0
        setRegister r:40
        pop
       label310:
        push TRUE
        not
        branchIfTrue label314
        push r:this, '4E-V6'
        getMember
        push '(('
        getMember
        push r:34, 0
        getMember
        subtract
        setRegister r:41
        pop
        push r:this, '4E-V6'
        getMember
        push ')('
        getMember
        push r:34, 1
        getMember
        subtract
        setRegister r:42
        pop
        push r:41, r:42, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        setRegister r:43
        pop
        push 3.14, r:43, r:36
        subtract
        push 2, '*r'
        getVariable
        push '0Yj1'
        callMethod
        setRegister r:44
        pop
        push r:36, r:37, r:44, r:38
        multiply
        push 0, r:37
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        add
        setRegister r:36
        pop
        push r:34, 0
        getMember
        push r:36, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:39
        multiply
        add
        setRegister r:45
        pop
        push r:34, 1
        getMember
        push r:36, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:39
        multiply
        add
        setRegister r:46
        pop
        push r:this, '4E-V6'
        getMember
        push '7YKSC('
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label311
        push '((', r:45, ')(', r:46, 2
        initObject
        push r:this, '4E-V6'
        getMember
        push 2, '*r'
        getVariable
        push '}1A{_'
        callMethod
        setRegister r:47
        pop
        push r:47, r:this, '4E-V6'
        getMember
        push '7YKSC('
        getMember
        lessThan
        not
        branchIfTrue label311
        push r:this, '4E-V6'
        getMember
        push '((', r:45, ')(', r:46, 2
        initObject
        push 2, '*r'
        getVariable
        push ')153L'
        callMethod
        push r:this, ')gqqC('
        getMember
        push 0.2
        multiply
        add
        setRegister r:36
        pop
        push 0.5
        setRegister r:38
        pop
        push 10
        setRegister r:37
        pop
       label311:
        push r:46, r:45, 2
        initArray
        setRegister r:48
        pop
        push r:48, 1, r:35, 'push'
        callMethod
        pop
        push r:48
        setRegister r:34
        pop
        push r:41, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:42, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        add
        push r:this, '4E-V6'
        getMember
        push ']oH'
        getMember
        push 0.5
        multiply
        lessThan
        not
        branchIfTrue label312
        branch label314
       label312:
        push r:40, r:40
        increment
        setRegister r:40
        pop
        push 100
        greaterThan
        not
        branchIfTrue label313
        branch label314
       label313:
        push 1, r:38, 0.01
        add
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:38
        pop
        push r:37, 0.01
        add
        setRegister r:37
        pop
        branch label310
       label314:
        push r:this, ')JN}d', r:this, ')JN}d'
        getMember
        push 1
        add
        push 2
        modulo
        setMember
        push 12, r:4, 0
        getMember
        push r:this, ')JN}d'
        getMember
        push 2
        multiply
        add
        push 3
        multiply
        add
        setRegister r:49
        pop
        push 1, r:4, 0
        getMember
        push r:this, ')JN}d'
        getMember
        add
        push 2.5
        multiply
        add
        setRegister r:50
        pop
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '18wU*'
        callMethod
        setRegister r:51
        pop
        push 30, 16711680, r:49, 3, r:51, 'lineStyle'
        callMethod
        pop
        push r:35, 0
        getMember
        push 1
        getMember
        push r:35, 0
        getMember
        push 0
        getMember
        push 2, r:51, 'moveTo'
        callMethod
        pop
        push 1
        setRegister r:52
        pop
        branch label316
       label315:
        push r:52
        increment
        setRegister r:52
        pop
       label316:
        push r:52, r:35, 'length'
        getMember
        lessThan
        not
        branchIfTrue label317
        push r:35, r:52
        getMember
        setRegister r:53
        pop
        push r:53, 1
        getMember
        push r:53, 0
        getMember
        push 2, r:51, 'lineTo'
        callMethod
        pop
        branch label315
       label317:
        push 100, 16777215, r:50, 3, r:51, 'lineStyle'
        callMethod
        pop
        push r:35, 0
        getMember
        push 1
        getMember
        push r:35, 0
        getMember
        push 0
        getMember
        push 2, r:51, 'moveTo'
        callMethod
        pop
        push 1
        setRegister r:54
        pop
        branch label319
       label318:
        push r:54
        increment
        setRegister r:54
        pop
       label319:
        push r:54, r:35, 'length'
        getMember
        lessThan
        not
        branchIfTrue label320
        push r:35, r:54
        getMember
        setRegister r:55
        pop
        push r:55, 1
        getMember
        push r:55, 0
        getMember
        push 2, r:51, 'lineTo'
        callMethod
        pop
        branch label318
       label320:
        push 2
        setRegister r:56
        pop
        push 2
        setRegister r:57
        pop
        push 3, r:50
        add
        setRegister r:58
        pop
        push 100, 16777215, 1, 3, r:51, 'lineStyle'
        callMethod
        pop
        push 0
        setRegister r:59
        pop
        branch label322
       label321:
        push r:59
        increment
        setRegister r:59
        pop
       label322:
        push r:59, 3
        lessThan
        not
        branchIfTrue label325
        push 0
        setRegister r:60
        pop
        push r:35, 'length'
        getMember
        push 3
        subtract
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:61
        pop
        push r:35, r:61
        getMember
        push 1
        getMember
        push r:35, r:61
        getMember
        push 0
        getMember
        push 2, r:51, 'moveTo'
        callMethod
        pop
       label323:
        push r:60, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label324
        push r:60
        increment
        setRegister r:60
        pop
        push r:35, 'length'
        getMember
        push 1
        subtract
        push r:61, r:56
        add
        push r:57, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        add
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        int
        setRegister r:61
        pop
        push r:35, r:61
        getMember
        push 0
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push r:58
        multiply
        add
        setRegister r:62
        pop
        push r:35, r:61
        getMember
        push 1
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push r:58
        multiply
        add
        setRegister r:63
        pop
        push r:63, r:62, 2, r:51, 'lineTo'
        callMethod
        pop
        branch label323
       label324:
        push r:35, 'length'
        getMember
        push 1
        subtract
        push r:61, r:56
        add
        push r:57, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        add
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        int
        setRegister r:61
        pop
        push r:35, r:61
        getMember
        push 1
        getMember
        push r:35, r:61
        getMember
        push 0
        getMember
        push 2, r:51, 'lineTo'
        callMethod
        pop
        branch label321
       label325:
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '(Q7y1('
        getMember
        push 1
        lessThan
        not
        not
        branchIfTrue label326
        push r:51, 'blendMode', '(WBt)'
        getVariable
        push '+,W'
        getMember
        setMember
        push 1, r:51, 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '1m(7i'
        callMethod
        pop
        push 0, r:51, 'removeMovieClip'
        callMethod
        pop
        branch label327
       label326:
        push r:this, '-IP8a', r:51
        setMember
       label327:
        push r:this, '29Svd', r:35
        setMember
        push r:4, 1, 0.1
        setMember
        branch label330
       label328:
        push 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 0.3, r:4, 0
        getMember
        push 0.15
        multiply
        add
        multiply
        push 2, r:this, '8A1T3('
        callMethod
        setRegister r:64
        pop
        push 1, 17, 2, r:64, '3U*}=('
        callMethod
        pop
        push r:64, '*]Q5}', 1.2
        setMember
        push 0, r:64, '{BxJE('
        callMethod
        pop
        push 4, 1, r:64, '86{p('
        getMember
        push 'push'
        callMethod
        pop
        push r:64, '}Yax5', 12
        setMember
        push r:64, ']xii)', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 628
        multiply
        setMember
        push r:4, 1, r:4, 1
        getMember
        push 18, r:4, 0
        getMember
        push 4
        multiply
        divide
        add
        setMember
        branch label330
       label329:
        push r:4, 1, 0.1
        setMember
        branch label330
       label330:
        branch label263
       label331:
        branch label261
       label332:
        push r:2
        not
        not
        branchIfTrue label333
        push r:this, '4E-V6', NULL
        setMember
        push r:this, '29Svd', NULL
        setMember
       label333:
      end // of function 

      setMember
      push r:1, '}gp0n'
      function2 () (r:1='this')
        push r:this, '6k2V6'
        getMember
        push '_x', r:this, '(('
        getMember
        setMember
        push r:this, '6k2V6'
        getMember
        push '_y', r:this, ')('
        getMember
        setMember
        push r:this, '6k2V6'
        getMember
        push ']'
        getMember
        push 10
        lessThan
        not
        not
        branchIfTrue label334
        push r:this, '6k2V6'
        getMember
        push ']oH'
        getMember
        push '_xscale', r:this, '6k2V6'
        getMember
        push ']oH'
        getMember
        push '_xscale'
        getMember
        push 32, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        branch label336
       label334:
        push r:this, '6k2V6'
        getMember
        push ']'
        getMember
        push 0
        lessThan
        dup
        not
        branchIfTrue label335
        pop
        push r:this, '6k2V6'
        getMember
        push ']oH'
        getMember
        push '_currentframe'
        getMember
        push 1
        equals
       label335:
        not
        branchIfTrue label336
        push 0, r:this, '6k2V6'
        getMember
        push ']oH'
        getMember
        push 'play'
        callMethod
        pop
       label336:
        push r:this, '6k2V6'
        getMember
        push ']oH'
        getMember
        push '_xscale', r:this, '6k2V6'
        getMember
        push ']oH'
        getMember
        push '_xscale'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.9, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        setMember
        push r:this, '6k2V6'
        getMember
        push ']', r:this, '6k2V6'
        getMember
        push ']'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push 0
        setRegister r:2
        pop
        branch label338
       label337:
        push r:2
        increment
        setRegister r:2
        pop
       label338:
        push r:2, r:this, '6k2V6'
        getMember
        push 'list'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label341
        push r:this, '6k2V6'
        getMember
        push 'list'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push 180, -90, r:3, '_rotation'
        getMember
        subtract
        push 2, '*r'
        getVariable
        push '0Yj1'
        callMethod
        setRegister r:4
        pop
        push r:3, '_rotation', r:3, '_rotation'
        getMember
        push r:3, '6b'
        getMember
        push r:4, 0.03
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        add
        setMember
        push r:3, '_xscale', r:3, '_xscale'
        getMember
        push 10
        add
        setMember
        push r:3, ']', r:3, ']'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '6k2V6'
        getMember
        push ']'
        getMember
        push 10
        lessThan
        not
        branchIfTrue label339
        push r:3, '_yscale', r:3, '_yscale'
        getMember
        push 0.6
        multiply
        setMember
       label339:
        push r:3, ']'
        getMember
        push 10
        lessThan
        not
        branchIfTrue label340
        push r:3, '_alpha', r:3, ']'
        getMember
        push 10
        multiply
        setMember
        push r:3, ']'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label340
        push 0, r:3, 'removeMovieClip'
        callMethod
        pop
        push 1, r:2, r:2
        decrement
        setRegister r:2
        pop
        push 2, r:this, '6k2V6'
        getMember
        push 'list'
        getMember
        push 'splice'
        callMethod
        pop
       label340:
        branch label337
       label341:
        push r:this, '6k2V6'
        getMember
        push 'list'
        getMember
        push 'length'
        getMember
        push r:this, '6k2V6'
        getMember
        push ']'
        getMember
        push 0.5
        multiply
        push 12, 2, 'Math'
        getVariable
        push 'min'
        callMethod
        lessThan
        not
        branchIfTrue label342
        push 0, '1Cn(V', 2, r:this, '6k2V6'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:5
        pop
        push r:5, '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        push r:5, '_xscale', 100, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 100
        multiply
        add
        setMember
        push r:5, '_yscale', 100, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 1000
        multiply
        add
        setMember
        push r:5, ']', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 60
        multiply
        add
        setMember
        push r:5, 'blendMode', '(WBt)'
        getVariable
        push '+,W'
        getMember
        setMember
        push r:5, '6b', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 5
        multiply
        setMember
        push r:5, 1, r:this, '6k2V6'
        getMember
        push 'list'
        getMember
        push 'push'
        callMethod
        pop
        branch label341
       label342:
        push r:this, '6k2V6'
        getMember
        push ']'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label348
        push 0
        setRegister r:6
        pop
        branch label344
       label343:
        push r:6
        increment
        setRegister r:6
        pop
       label344:
        push r:6, '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label347
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        push r:6
        getMember
        setRegister r:7
        pop
        push r:7, '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push 8, r:this, '6k2V6'
        getMember
        push ']oH'
        getMember
        push '_xscale'
        getMember
        multiply
        push 100
        divide
        push r:7, ']oH'
        getMember
        add
        lessThan
        dup
        not
        branchIfTrue label345
        pop
        push r:7, ')('
        getMember
        push r:this, ')('
        getMember
        lessThan
       label345:
        not
        branchIfTrue label346
        push 2.5, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        push 1, r:7, '*]Q5}'
        callMethod
        pop
       label346:
        branch label343
       label347:
        branch label349
       label348:
        push r:this, '6k2V6'
        getMember
        push ']'
        getMember
        push -10
        lessThan
        not
        branchIfTrue label349
        push 0, r:this, '6k2V6'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, '6k2V6', NULL
        setMember
       label349:
      end // of function 

      setMember
      push r:1, '{HxAn'
      function2 () (r:1='this')
        push r:this, '[AA8'
        getMember
        push '_xscale', r:this, '[AA8'
        getMember
        push '_xscale'
        getMember
        push 1.25
        multiply
        setMember
        push r:this, '[AA8'
        getMember
        push '_yscale', r:this, '[AA8'
        getMember
        push '_xscale'
        getMember
        setMember
        push 0
        setRegister r:2
        pop
        branch label351
       label350:
        push r:2
        increment
        setRegister r:2
        pop
       label351:
        push r:2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label358
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push TRUE
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        branch label353
       label352:
        push r:5
        increment
        setRegister r:5
        pop
       label353:
        push r:5, r:this, '[AA8'
        getMember
        push 'list'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label355
        push r:3, r:this, '[AA8'
        getMember
        push 'list'
        getMember
        push r:5
        getMember
        equals
        not
        branchIfTrue label354
        push FALSE
        setRegister r:4
        pop
        branch label355
       label354:
        branch label352
       label355:
        push r:4
        dup
        not
        branchIfTrue label356
        pop
        push '((', r:this, '[AA8'
        getMember
        push '_x'
        getMember
        push ')(', r:this, '[AA8'
        getMember
        push '_y'
        getMember
        push 2
        initObject
        push 1, r:3, '}1A{_'
        callMethod
        push r:this, '[AA8'
        getMember
        push '_xscale'
        getMember
        push 0.5
        multiply
        lessThan
       label356:
        not
        branchIfTrue label357
        push 5, 1, r:3, '*]Q5}'
        callMethod
        pop
        push r:3, 1, r:this, '[AA8'
        getMember
        push 'list'
        getMember
        push 'push'
        callMethod
        pop
       label357:
        branch label350
       label358:
        push r:this, '[AA8'
        getMember
        push '_xscale'
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 2
        multiply
        greaterThan
        not
        branchIfTrue label359
        push 0, r:this, '[AA8'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, '[AA8', NULL
        setMember
       label359:
      end // of function 

      setMember
      push r:1, '(If0'
      function2 () (r:1='this')
        push r:this, '*7nPD'
        getMember
        push '6b', r:this, '*7nPD'
        getMember
        push '6b'
        getMember
        push 1.05
        multiply
        setMember
        push r:this, '*7nPD'
        getMember
        push '_rotation', r:this, '*7nPD'
        getMember
        push '_rotation'
        getMember
        push 12, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push 1
        setRegister r:2
        pop
        push '((', r:this, '*7nPD'
        getMember
        push '_x'
        getMember
        push ')(', r:this, '*7nPD'
        getMember
        push '_y'
        getMember
        push 2
        initObject
        setRegister r:3
        pop
        push TRUE
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        branch label361
       label360:
        push r:5
        increment
        setRegister r:5
        pop
       label361:
        push r:5, r:this, '*7nPD'
        getMember
        push 'list'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label365
        push r:this, '*7nPD'
        getMember
        push 'list'
        getMember
        push r:5
        getMember
        setRegister r:6
        pop
        push r:6, '1Z 6'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label363
        push r:6, '[b', r:6, '[b'
        getMember
        push 1.2
        multiply
        setMember
        push r:6, ']b', r:6, ']b'
        getMember
        push 1.2
        multiply
        setMember
        push r:6, '=hqS(', 100, r:6, '=hqS('
        getMember
        push 8, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setMember
        push 0, r:6, '=hqS('
        getMember
        push r:6, '-iB='
        getMember
        push 3, '*r'
        getVariable
        push ';CYOh'
        callMethod
        pop
        push r:3, 1, r:6, '}1A{_'
        callMethod
        push r:this, '*7nPD'
        getMember
        push '_xscale'
        getMember
        push 0.5
        multiply
        push r:6, ']oH'
        getMember
        add
        greaterThan
        not
        branchIfTrue label362
        push 0, r:6, '1Z 6'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push 0, r:6, '9T54'
        callMethod
        pop
        push 1, r:5, r:5
        decrement
        setRegister r:5
        pop
        push 2, r:this, '*7nPD'
        getMember
        push 'list'
        getMember
        push 'splice'
        callMethod
        pop
       label362:
        branch label364
       label363:
        push FALSE
        setRegister r:4
        pop
        push r:3, 1, r:6, ')153L'
        callMethod
        setRegister r:7
        pop
        push r:6, '[b', r:6, '[b'
        getMember
        push r:7, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:2
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:6, ']b', r:6, ']b'
        getMember
        push r:7, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:2
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:3, 1, r:6, '}1A{_'
        callMethod
        push r:this, '*7nPD'
        getMember
        push '_xscale'
        getMember
        push 0.5
        multiply
        push r:6, ']oH'
        getMember
        subtract
        lessThan
        not
        branchIfTrue label364
        push r:6, '1Z 6', '44{N'
        getVariable
        push ')MItb'
        getMember
        push '3mhCL', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:6, '1Z 6'
        getMember
        push '_x', r:3, '(('
        getMember
        setMember
        push r:6, '1Z 6'
        getMember
        push '_y', r:3, ')('
        getMember
        setMember
        push r:6, '1Z 6'
        getMember
        push '_xscale', r:this, '*7nPD'
        getMember
        push '_xscale'
        getMember
        setMember
        push r:6, '1Z 6'
        getMember
        push '_yscale', r:this, '*7nPD'
        getMember
        push '_yscale'
        getMember
        setMember
        push r:6, '1Z 6'
        getMember
        push 1, r:6, '-iB='
        getMember
        push 'setMask'
        callMethod
        pop
       label364:
        branch label360
       label365:
        push r:this, '*7nPD'
        getMember
        push '=kIA'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label366
        push r:0, 2
        strictEquals
        branchIfTrue label366
        push r:0, 1
        strictEquals
        branchIfTrue label374
        push r:0, 3
        strictEquals
        branchIfTrue label376
        branch label378
       label366:
        push r:this, '*7nPD'
        getMember
        push '=kIA'
        getMember
        push 0
        equals
        not
        branchIfTrue label367
        push 150
        branch label368
       label367:
        push 0
       label368:
        setRegister r:8
        pop
        push r:8, r:this, '*7nPD'
        getMember
        push '_xscale'
        getMember
        subtract
        setRegister r:9
        pop
        push r:this, '*7nPD'
        getMember
        push '_xscale', r:this, '*7nPD'
        getMember
        push '_xscale'
        getMember
        push r:9, 0.3
        multiply
        add
        setMember
        push r:9, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push 1
        lessThan
        not
        branchIfTrue label369
        push r:this, '*7nPD'
        getMember
        push '=kIA', r:this, '*7nPD'
        getMember
        push '=kIA'
        getMember
        increment
        setMember
        push r:this, '*7nPD'
        getMember
        push '_xscale', r:8
        setMember
       label369:
        push r:this, '*7nPD'
        getMember
        push '_yscale', r:this, '*7nPD'
        getMember
        push '_xscale'
        getMember
        setMember
        push 0
        setRegister r:10
        pop
        branch label371
       label370:
        push r:10
        increment
        setRegister r:10
        pop
       label371:
        push r:10, r:this, '*7nPD'
        getMember
        push 'list'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label373
        push r:this, '*7nPD'
        getMember
        push 'list'
        getMember
        push r:10
        getMember
        setRegister r:11
        pop
        push r:11, '1Z 6'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label372
        push r:11, '1Z 6'
        getMember
        push '_xscale', r:this, '*7nPD'
        getMember
        push '_xscale'
        getMember
        setMember
        push r:11, '1Z 6'
        getMember
        push '_yscale', r:this, '*7nPD'
        getMember
        push '_yscale'
        getMember
        setMember
       label372:
        branch label370
       label373:
        branch label378
       label374:
        push r:4
        not
        branchIfTrue label375
        push r:this, '*7nPD'
        getMember
        push '=kIA', 2
        setMember
       label375:
        branch label378
       label376:
        push r:this, '*7nPD'
        getMember
        push 'list'
        getMember
        push 'length'
        getMember
        push 0
        equals
        not
        branchIfTrue label377
        push 0, r:this, '*7nPD'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, '*7nPD', NULL
        setMember
       label377:
        branch label378
       label378:
      end // of function 

      setMember
      push r:1, '8A1T3('
      function2 (r:2='(', r:3='}Yax5') (r:1='this')
        push r:'(', 1.57
        subtract
        setRegister r:'('
        pop
        push NULL, 1, '2C0['
        new
        setRegister r:4
        pop
        push r:4, '(', r:'('
        setMember
        push r:4, '*g;o', TRUE
        setMember
        push r:4, '((', r:this, '(('
        getMember
        setMember
        push r:4, ')(', r:this, ')('
        getMember
        push 20
        subtract
        setMember
        push r:4, '[b', r:'(', 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:'}Yax5'
        multiply
        setMember
        push r:4, ']b', r:'(', 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:'}Yax5'
        multiply
        setMember
        push r:4
        return
      end // of function 

      setMember
      push r:1, '0ADg}'
      function2 (r:2='(') (r:1='this')
        push 4, r:'(', 2, r:this, '8A1T3('
        callMethod
        setRegister r:3
        pop
        push r:3, ')(', r:3, ')('
        getMember
        push 10
        add
        setMember
        push 1, 15, 2, r:3, '3U*}=('
        callMethod
        pop
        push r:3, ']oH', 8
        setMember
        push r:3, '*]Q5}', 2
        setMember
        push r:3, '}Yax5', 4
        setMember
        push r:3, '1V{f', '}m6', 0.5, 'max', 16, 2
        initObject
        setMember
        push r:3, '[a', 0.2
        setMember
        push r:3, '9-', 0.1
        setMember
        push 0, r:3, '{BxJE('
        callMethod
        pop
        push r:3, '0{lc4', '=-+Q1'
        setMember
        push 3, 1, r:3, '86{p('
        getMember
        push 'push'
        callMethod
        pop
        push r:3, '2VhU6', 120
        setMember
        push r:3
        return
      end // of function 

      setMember
      push r:1, '565'
      function2 (r:2=')93A') (r:1='this')
        push 0, r:this, ';-[;H'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ';-[;H'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label380
       label379:
        push r:2
        increment
        setRegister r:2
        pop
       label380:
        push r:2, 12
        lessThan
        not
        branchIfTrue label381
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push '*VE}H', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:3
        pop
        push 20, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 30
        multiply
        add
        push 1, r:3, '3BjX_'
        callMethod
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:4
        pop
        push r:4, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:5
        pop
        push r:4, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:6
        pop
        push 8
        setRegister r:7
        pop
        push 6, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6
        multiply
        add
        setRegister r:8
        pop
        push r:3, '((', r:this, '(('
        getMember
        push r:5, r:7
        multiply
        add
        setMember
        push r:3, ')(', r:this, ')('
        getMember
        push r:6, r:7
        multiply
        add
        setMember
        push r:3, '[b', r:5, r:8
        multiply
        setMember
        push r:3, ']b', r:6, r:8
        multiply
        setMember
        push r:3, '0{8*_', 1
        setMember
        push r:3, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 30
        multiply
        add
        setMember
        push r:3, '+{eA+', 0.96
        setMember
        push r:3, '-iB='
        getMember
        push 'blendMode', '(WBt)'
        getVariable
        push '+,W'
        getMember
        setMember
        push r:3, '-iB='
        getMember
        push '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        branch label379
       label381:
        push 0
        setRegister r:9
        pop
        branch label383
       label382:
        push r:9
        increment
        setRegister r:9
        pop
       label383:
        push r:9, 6
        lessThan
        not
        branchIfTrue label384
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push '}CbPC(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:10
        pop
        push r:10, '_x', r:this, '(('
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push r:this, ']oH'
        getMember
        multiply
        add
        setMember
        push r:10, '_y', r:this, ')('
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push r:this, ']oH'
        getMember
        multiply
        add
        setMember
        push r:10, '_xscale', 150, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 150
        multiply
        add
        setMember
        push r:10, '_yscale', r:10, '_xscale'
        getMember
        setMember
        push r:10, '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        push r:10, 'blendMode', '(WBt)'
        getVariable
        push '+,W'
        getMember
        setMember
        push r:10, '+KD', '*r'
        getVariable
        push '+-(0'
        getMember
        setMember
        push 3, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        add
        toString
        push 1, r:10, 'gotoAndPlay'
        callMethod
        pop
        branch label382
       label384:
        push '44{N'
        getVariable
        push '-4Nbg'
        getMember
        push '3=vLC', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:11
        pop
        push r:11, '_x', r:this, '(('
        getMember
        setMember
        push r:11, '_y', r:this, ')('
        getMember
        setMember
        push r:11, '_xscale', 150
        setMember
        push r:11, '_yscale', 150
        setMember
        push 0, r:this, '9T54'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01', '((', r:this, '(('
        getMember
        push ')(', r:this, ')('
        getMember
        push 2
        initObject
        setMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push 1, ';ndCG'
        getVariable
        push '7T4cF('
        callMethod
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '-iB='
        getMember
        push '_quality', 1, 1, '$HIGH', 'substring'
        callMethod
        setMember
        push 0, r:this, '-IP8a'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push 0, r:this, '[AA8'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push 0, r:this, '6k2V6'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, 1, '2u=W='
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '(ZcA('
      function2 () (r:1='this')
        push -0.3
        setRegister r:2
        pop
        push r:this, '(('
        getMember
        push r:this, ']oH'
        getMember
        lessThan
        dup
        branchIfTrue label385
        pop
        push r:this, '(('
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        push r:this, ']oH'
        getMember
        subtract
        greaterThan
       label385:
        not
        branchIfTrue label386
        push r:this, '[b', r:this, '[b'
        getMember
        push r:2
        multiply
        setMember
        push r:this, '((', '*r'
        getVariable
        push '=OA'
        getMember
        push r:this, ']oH'
        getMember
        subtract
        push r:this, '(('
        getMember
        push r:this, ']oH'
        getMember
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
       label386:
        push r:this, ')('
        getMember
        push r:this, ']oH'
        getMember
        lessThan
        dup
        branchIfTrue label387
        pop
        push r:this, ')('
        getMember
        push '*r'
        getVariable
        push '*OA'
        getMember
        push r:this, ']oH'
        getMember
        subtract
        greaterThan
       label387:
        not
        branchIfTrue label388
        push r:this, ']b', r:this, ']b'
        getMember
        push r:2
        multiply
        setMember
        push r:this, ')(', '*r'
        getVariable
        push '*OA'
        getMember
        push r:this, ']oH'
        getMember
        subtract
        push r:this, ')('
        getMember
        push r:this, ']oH'
        getMember
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
       label388:
      end // of function 

      setMember
      push r:0, ']ew,;', 0
      setMember
      push r:0, '-bdr(', 1
      setMember
      push r:0, '87qb-', 2
      setMember
      push r:0, ';yck(', 3
      setMember
      push r:0, '3yMwA(', 4
      setMember
      push r:0, '9s(f=', 5
      setMember
      push r:0, '{Cs', 8
      setMember
      push r:0, '*tQW,(', 32
      setMember
      push '2]ya'
      function2 (r:2='*B', r:3='[X', r:4='[6') (r:1='this')
        push r:this, '81C}X', r:'[6'
        setMember
        push '{Al{2'
        getVariable
        push ')nRX'
        getMember
        push r:'*B'
        getMember
        setRegister r:5
        pop
        push r:this, ';B 9', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:6
        pop
        branch label390
       label389:
        push r:6
        increment
        setRegister r:6
        pop
       label390:
        push r:6, r:5, 'length'
        getMember
        lessThan
        not
        branchIfTrue label391
        push r:this, ';B 9'
        getMember
        push r:6, 0, r:5, r:6
        getMember
        push '],lYS'
        callMethod
        setMember
        branch label389
       label391:
        push r:this, ' R', 0, 1
        initArray
        setMember
        push 0
        setRegister r:7
        pop
        push r:this, ';B 9'
        getMember
        push 0
        getMember
        push 0
        getMember
        setRegister r:8
        pop
        push r:this, ';B 9'
        getMember
        push 0
        getMember
        push 1
        getMember
        setRegister r:9
        pop
        push 1
        setRegister r:10
        pop
        branch label393
       label392:
        push r:10
        increment
        setRegister r:10
        pop
       label393:
        push r:10, r:this, ';B 9'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label394
        push r:this, ';B 9'
        getMember
        push r:10
        getMember
        setRegister r:11
        pop
        push r:11, 0
        getMember
        push r:8
        subtract
        setRegister r:12
        pop
        push r:11, 1
        getMember
        push r:9
        subtract
        setRegister r:13
        pop
        push r:7, r:12, r:12
        multiply
        push r:13, r:13
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        add
        setRegister r:7
        pop
        push r:7, 1, r:this, ' R'
        getMember
        push 'push'
        callMethod
        pop
        push r:11, 0
        getMember
        setRegister r:8
        pop
        push r:11, 1
        getMember
        setRegister r:9
        pop
        branch label392
       label394:
        push r:this, '86{p(', 0, 'Array'
        new
        setMember
        push r:this, '}Yax5', r:'[X'
        setMember
        push r:this, '(yaK*', 30
        setMember
        push r:this, '(Erk5', '*r'
        getVariable
        push '4]1L'
        getMember
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '+ikVP'
      function2 (r:2='7') (r:1='this')
        push 0
        setRegister r:3
        pop
        branch label396
       label395:
        push r:3
        increment
        setRegister r:3
        pop
       label396:
        push r:3, r:this, ';B 9'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label397
        push r:this, ';B 9'
        getMember
        push r:3
        getMember
        setRegister r:4
        pop
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 0.5
        multiply
        setRegister r:5
        pop
        push r:4, r:'7', r:5, r:4, r:'7'
        getMember
        push r:5
        subtract
        subtract
        setMember
        branch label395
       label397:
      end // of function 

      setMember
      push r:1, '*2KvR'
      function2 (r:2=')') (r:1='this')
        push r:')', '0BP', 0, r:this, '86{p('
        getMember
        push 'length'
        getMember
        subtract
        push r:this, '(yaK*'
        getMember
        multiply
        setMember
        push r:')', '(]hH{', r:this, '86{p('
        getMember
        push 'length'
        getMember
        setMember
        push r:')', '83489', 0
        setMember
        push r:')', 1, r:this, '86{p('
        getMember
        push 'push'
        callMethod
        pop
        push r:')', ')W}D', r:this
        setMember
        push 0, 1, r:')', '86{p('
        getMember
        push 'push'
        callMethod
        pop
        push r:')', '+{eA+', 1
        setMember
        push r:')', '((', r:this, ';B 9'
        getMember
        push 0
        getMember
        push 0
        getMember
        setMember
        push r:')', ')(', r:this, ';B 9'
        getMember
        push 0
        getMember
        push 1
        getMember
        setMember
        push r:')', '[b', 0
        setMember
        push r:')', ']b', 0
        setMember
      end // of function 

      setMember
      push r:1, ']r5gM'
      function2 (r:2='-', r:3='max') (r:1='this')
        push 0
        setRegister r:4
        pop
        branch label399
       label398:
        push r:4
        increment
        setRegister r:4
        pop
       label399:
        push r:4, r:max
        lessThan
        not
        branchIfTrue label400
        push 0, r:'-', UNDEF
        callMethod
        setRegister r:5
        pop
        push r:5, 1, r:this, '*2KvR'
        callMethod
        pop
        branch label398
       label400:
      end // of function 

      setMember
      push '(WBt)'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ']}Ou;(', 1
      setMember
      push r:0, '3I0pG', 2
      setMember
      push r:0, '{;7F4', 3
      setMember
      push r:0, '8U(wu', 4
      setMember
      push r:0, '}[cpB', 5
      setMember
      push r:0, '9xv]A', 6
      setMember
      push r:0, '{yQ=Q', 7
      setMember
      push r:0, '+,W', 8
      setMember
      push r:0, '2y+dV', 9
      setMember
      push r:0, '(tBee', 10
      setMember
      push r:0, '3)i[=', 11
      setMember
      push r:0, ' J3IC', 12
      setMember
      push r:0, '[6jRc', 13
      setMember
      push r:0, ')8Fyj', 14
      setMember
      push '2C0['
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '[a', 0.1
        setMember
        push r:this, '9-', 0.1
        setMember
        push r:this, ']xii)', 0
        setMember
        push r:this, '}Yax5', 2
        setMember
        push r:this, '{jXZ;(', FALSE
        setMember
        push r:this, '8J1xN', FALSE
        setMember
        push r:this, ']oH', 3
        setMember
        push r:this, '*]Q5}', 0
        setMember
        push r:this, '+7', 0
        setMember
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '2xEr8'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '86{p(', 0, 'Array'
        new
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, '1V{f'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label401
        push r:this, '}Yax5', r:this, '1V{f'
        getMember
        push 'max'
        getMember
        push r:this, '}Yax5'
        getMember
        push r:this, '1V{f'
        getMember
        push '}m6'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setMember
       label401:
        push 0, r:this, '8J2Jt'
        callMethod
        pop
        push 0, r:this, '9Lq;O'
        callMethod
        pop
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '2VhU6'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label408
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '2VhU6'
        getMember
        push 10
        lessThan
        not
        branchIfTrue label408
        push r:this, '+7'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label402
        push r:0, 3
        strictEquals
        branchIfTrue label403
        branch label404
       label402:
        push r:this, '-iB='
        getMember
        push '_alpha', 10, r:this, '2VhU6'
        getMember
        multiply
        setMember
        branch label404
       label403:
        push r:this, '-iB='
        getMember
        push '_xscale', 10, r:this, '2VhU6'
        getMember
        multiply
        setMember
        push r:this, '-iB='
        getMember
        push '_yscale', 10, r:this, '2VhU6'
        getMember
        multiply
        setMember
        branch label404
       label404:
        push r:this, '2VhU6'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label408
        push r:this, '2VhU6', NULL
        setMember
        push r:this, '+7'
        getMember
        setRegister r:0
        push 1
        strictEquals
        branchIfTrue label405
        push r:0, 2
        strictEquals
        branchIfTrue label406
        branch label407
       label405:
        push 0, r:this, '9T54'
        callMethod
        pop
        branch label408
       label406:
        push '8Ugi)', 1, r:this, '-iB='
        getMember
        push '7bJ'
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        branch label408
       label407:
        push 0, r:this, '9T54'
        callMethod
        pop
        branch label408
       label408:
        push 50, 1, r:this, '[j0D-'
        callMethod
        not
        branchIfTrue label409
        push 0, r:this, '9T54'
        callMethod
        pop
       label409:
      end // of function 

      setMember
      push r:1, '9Lq;O'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label411
       label410:
        push r:2
        increment
        setRegister r:2
        pop
       label411:
        push r:2, r:this, '86{p('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label430
        push r:this, '86{p('
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label412
        push r:0, 3
        strictEquals
        branchIfTrue label413
        push r:0, 4
        strictEquals
        branchIfTrue label419
        push r:0, 5
        strictEquals
        branchIfTrue label420
        push r:0, 6
        strictEquals
        branchIfTrue label423
        push r:0, 7
        strictEquals
        branchIfTrue label424
        push r:0, 11
        strictEquals
        branchIfTrue label425
        branch label429
       label412:
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '-iB='
        getMember
        push '_rotation'
        getMember
        push r:this, '6b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        branch label429
       label413:
        push r:this, ';)bt5'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label414
        push r:this, ';)bt5', r:this, ';)bt5'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        branch label429
       label414:
        push 0, r:this, '08i_Z'
        callMethod
        pop
        push r:this, '}CL'
        getMember
        push NULL
        equals
        not
        branchIfTrue label415
        branch label429
       label415:
        push r:this, '}CL'
        getMember
        push 1, r:this, ')153L'
        callMethod
        push r:this, '('
        getMember
        subtract
        setRegister r:4
        pop
       label416:
        push r:4, 3.14
        greaterThan
        not
        branchIfTrue label417
        push r:4, 6.28
        subtract
        setRegister r:4
        pop
        branch label416
       label417:
        push r:4, -3.14
        lessThan
        not
        branchIfTrue label418
        push r:4, 6.28
        add
        setRegister r:4
        pop
        branch label417
       label418:
        push r:this, '(', r:this, '('
        getMember
        push r:this, '[a'
        getMember
        push r:4, r:this, '9-'
        getMember
        multiply
        push 0, r:this, '[a'
        getMember
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push 0, r:this, ',43dZ'
        callMethod
        pop
        branch label429
       label419:
        push r:this, ']xii)', r:this, ']xii)'
        getMember
        push 43, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 628
        modulo
        setMember
        push r:this, '(', r:this, '('
        getMember
        push r:this, ']xii)'
        getMember
        push 100
        divide
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push 0.2
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push 0, r:this, ',43dZ'
        callMethod
        pop
        branch label429
       label420:
        push r:this, '[b'
        getMember
        push r:this, '[b'
        getMember
        multiply
        push r:this, ']b'
        getMember
        push r:this, ']b'
        getMember
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        push 3
        lessThan
        dup
        branchIfTrue label421
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        push 0.1
        lessThan
       label421:
        not
        branchIfTrue label422
        push r:this, '(', 4, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1.57
        multiply
        setMember
        push r:this, '[b', r:this, '('
        getMember
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:this, '}Yax5'
        getMember
        multiply
        setMember
        push r:this, ']b', r:this, '('
        getMember
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:this, '}Yax5'
        getMember
        multiply
        setMember
       label422:
        branch label429
       label423:
        push 0, r:this, '-iB='
        getMember
        push 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '1m(7i'
        callMethod
        pop
        branch label429
       label424:
        push r:this, '}Yax5', r:this, '}Yax5'
        getMember
        push 0.05, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        branch label429
       label425:
        push 2, '44{N'
        getVariable
        push '[=('
        getMember
        multiply
        setRegister r:5
        pop
        push 0
        setRegister r:6
        pop
        branch label427
       label426:
        push r:6
        increment
        setRegister r:6
        pop
       label427:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label428
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push ')iBsW', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:7
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:8
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 40
        multiply
        setRegister r:9
        pop
        push r:7, '((', r:this, '(('
        getMember
        push r:8, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:9
        multiply
        add
        setMember
        push r:7, ')(', r:this, ')('
        getMember
        push r:8, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:9
        multiply
        add
        setMember
        push r:7, ']b', 0, 1, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        add
        push 6
        add
        subtract
        setMember
        push r:7, '-iB='
        getMember
        push '_xscale', 150
        setMember
        push r:7, '-iB='
        getMember
        push '_yscale', r:7, '-iB='
        getMember
        push '_xscale'
        getMember
        setMember
        push r:7, '-iB='
        getMember
        push 'blendMode', '(WBt)'
        getVariable
        push '+,W'
        getMember
        setMember
        push r:7, '849kV', 0
        setMember
        branch label426
       label428:
        branch label429
       label429:
        branch label410
       label430:
        push r:this, '8s]Xp'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label432
        push r:this, '8s]Xp'
        getMember
        push ';)bt5'
        getMember
        push NULL
        equals
        not
        branchIfTrue label431
        push r:this, '[b', r:this, '[b'
        getMember
        push r:this, '8s]Xp'
        getMember
        push '[b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:this, '8s]Xp'
        getMember
        push ']b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        branch label432
       label431:
        push r:this, '8s]Xp'
        getMember
        push ';)bt5', r:this, '8s]Xp'
        getMember
        push ';)bt5'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '8s]Xp'
        getMember
        push ';)bt5'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label432
        push r:this, '8s]Xp'
        getMember
        push ';)bt5', NULL
        setMember
       label432:
        push r:this, '0{lc4'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label435
        push r:this, '}O'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label434
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push r:this, '0{lc4'
        getMember
        push 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:10
        pop
        push r:10, '_rotation', 180, r:this, '}O'
        getMember
        push 1, r:this, ')153L'
        callMethod
        push 0.0174
        divide
        add
        setMember
        push r:10, '_xscale', r:this, '}O'
        getMember
        push 1, r:this, '}1A{_'
        callMethod
        setMember
        push r:10, '_x', r:this, '(('
        getMember
        setMember
        push r:10, '_y', r:this, ')('
        getMember
        setMember
        push r:this, '2VhU6'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label433
        push r:10, '_alpha', 100, 10, r:this, '2VhU6'
        getMember
        multiply
        push 0, 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
       label433:
        push 0, r:10, 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '1m(7i'
        callMethod
        pop
        push 0, r:10, 'removeMovieClip'
        callMethod
        pop
       label434:
        push r:this, '}O', '((', r:this, '(('
        getMember
        push ')(', r:this, ')('
        getMember
        push '44{N'
        getVariable
        push '0X xI('
        getMember
        push 3
        multiply
        add
        push 2
        initObject
        setMember
       label435:
      end // of function 

      setMember
      push r:1, ',43dZ'
      function2 () (r:1='this')
        push r:this, '[b', r:this, '('
        getMember
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:this, '}Yax5'
        getMember
        multiply
        setMember
        push r:this, ']b', r:this, '('
        getMember
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:this, '}Yax5'
        getMember
        multiply
        setMember
        push 0, r:this, '{BxJE('
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '08i_Z'
      function2 () (r:1='this')
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        setRegister r:2
        pop
        push 1, 0
        divide
        setRegister r:3
        pop
        push r:this, '}CL', NULL
        setMember
        push 0
        setRegister r:4
        pop
        branch label437
       label436:
        push r:4
        increment
        setRegister r:4
        pop
       label437:
        push r:4, r:2, 'length'
        getMember
        lessThan
        not
        branchIfTrue label439
        push r:2, r:4
        getMember
        setRegister r:5
        pop
        push r:5, 1, r:this, '}1A{_'
        callMethod
        setRegister r:6
        pop
        push r:6, r:3
        lessThan
        not
        branchIfTrue label438
        push r:this, '}CL', r:5
        setMember
        push r:6
        setRegister r:3
        pop
       label438:
        branch label436
       label439:
        push r:2, 'length'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label440
        push r:this, '}CL', r:2, r:2, 'length'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        getMember
        setMember
        branch label441
       label440:
        push r:this, '}CL', NULL
        setMember
       label441:
      end // of function 

      setMember
      push r:1, '8J2Jt'
      function2 () (r:1='this')
        push r:this, '*g;o'
        getMember
        not
        branchIfTrue label449
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label443
       label442:
        push r:3
        increment
        setRegister r:3
        pop
       label443:
        push r:3, r:2, 'length'
        getMember
        lessThan
        not
        branchIfTrue label448
        push r:2, r:3
        getMember
        setRegister r:4
        pop
        push r:4, '=T,='
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label446
        push r:this, '(('
        getMember
        push r:4, '(('
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:4, '=T,='
        getMember
        push '{V'
        getMember
        push r:this, ']oH'
        getMember
        add
        lessThan
        dup
        not
        branchIfTrue label444
        pop
        push r:this, ')('
        getMember
        push r:4, ')('
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:4, '=T,='
        getMember
        push '-V'
        getMember
        push r:this, ']oH'
        getMember
        add
        lessThan
       label444:
        not
        branchIfTrue label445
        push r:4, 1, r:this, '565'
        callMethod
        pop
       label445:
        branch label447
       label446:
        push r:4, 1, r:this, '}1A{_'
        callMethod
        push r:this, ']oH'
        getMember
        push r:4, ']oH'
        getMember
        add
        lessThan
        not
        branchIfTrue label447
        push r:4, 1, r:this, '565'
        callMethod
        pop
       label447:
        branch label442
       label448:
        branch label451
       label449:
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        setRegister r:5
        pop
        push r:5, '+NXw5('
        getMember
        push 0
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label450
        push UNDEF
        return
       label450:
        push r:5, 1, r:this, '}1A{_'
        callMethod
        setRegister r:6
        pop
        push r:6, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push ']oH'
        getMember
        push r:this, ']oH'
        getMember
        add
        lessThan
        not
        branchIfTrue label451
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '565'
        callMethod
        pop
        push 0, r:this, '9T54'
        callMethod
        pop
       label451:
      end // of function 

      setMember
      push r:1, '565'
      function2 (r:2=')') (r:1='this')
        push r:')', 1, r:this, '4,U=3'
        callMethod
        pop
        push r:')', '3='
        getMember
        setRegister r:3
        pop
        push r:this, 1, r:')', '565'
        callMethod
        pop
        push r:this, '8J1xN'
        getMember
        not
        not
        branchIfTrue label454
        push r:this, '{jXZ;('
        getMember
        dup
        not
        branchIfTrue label452
        pop
        push r:3, r:this, '*]Q5}'
        getMember
        lessThan
       label452:
        not
        branchIfTrue label453
        push r:this, '*]Q5}', r:this, '*]Q5}'
        getMember
        push r:3
        subtract
        setMember
        branch label454
       label453:
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push '-O_ y', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:4
        pop
        push r:4, '_x', r:this, '(('
        getMember
        setMember
        push r:4, '_y', r:this, ')('
        getMember
        setMember
        push r:4, '_xscale', 50, r:this, '*]Q5}'
        getMember
        push 100
        multiply
        add
        setMember
        push r:4, '_yscale', r:4, '_xscale'
        getMember
        setMember
        push r:4, '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        push r:4, 'blendMode', '(WBt)'
        getVariable
        push '+,W'
        getMember
        setMember
        push 0, r:this, '9T54'
        callMethod
        pop
        push UNDEF
        return
       label454:
      end // of function 

      setMember
      push r:1, '4,U=3'
      function2 (r:2='6 *') (r:1='this')
      end // of function 

      setMember
      push r:1, '3U*}=('
      function2 (r:2='7', r:3='+') (r:1='this')
        push r:this, '-iB=', 0, '97mPC', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '-nqp5'
        getMember
        push '6BZ+1'
        getMember
        push r:'+'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:'7'
        toString
        push 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '-iB='
        getMember
        push '+KD', r:this
        setMember
        push 0, r:this, '4u=dZ'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '{BxJE('
      function2 () (r:1='this')
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '[b'
        getMember
        push r:this, ']b'
        getMember
        push 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        push 0.0174
        divide
        setMember
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '2xEr8'
        getMember
        push 'remove'
        callMethod
        pop
        push r:this, 1, '2u=W='
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push '44{N'
      function2 (r:2='}J') (r:1='this')
        push '*r'
        getVariable
        push '+-(0', r:this
        setMember
        push r:this, '32', r:'}J', 1, '+7U K'
        new
        setMember
        push r:this, '-iB=', r:'}J'
        setMember
        push r:this, '7Qe;6', 0, 'Array'
        new
        setMember
        push r:this, '2xEr8', 0, 'Array'
        new
        setMember
        push r:this, '53RYu', 0, 'Array'
        new
        setMember
        push r:this, ';={0[', 0, 'Array'
        new
        setMember
        push r:this, ';+', '44{N'
        getVariable
        push '4MvcB'
        getMember
        push '0o*6', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '7CL3K', 0
        setMember
        push r:this, '(Q7y1(', 4
        setMember
        push r:this, '-_X}5', '$k', 0
        initArray
        push '$b', 0
        initArray
        push 2
        initObject
        setMember
        push 0, 1, r:this, '5Hy6b'
        callMethod
        pop
        push 0, r:this, '9t1r1'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '5Hy6b'
      function2 (r:2='7') (r:1='this')
        push r:this, '=kIA', r:'7'
        setMember
        push r:'7'
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label455
        push r:0, 1
        strictEquals
        branchIfTrue label459
        push r:0, 2
        strictEquals
        branchIfTrue label460
        branch label461
       label455:
        push r:this, '2P9vQ', '44{N'
        getVariable
        push ')MItb'
        getMember
        push '1Gw=P', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, ',v0X'
        new
        setMember
        push r:this, '2P9vQ'
        getMember
        push '((', '*r'
        getVariable
        push '=OA'
        getMember
        push 0.5
        multiply
        push 5
        subtract
        setMember
        push r:this, '2P9vQ'
        getMember
        push ')(', '*r'
        getVariable
        push '*OA'
        getMember
        push 10
        add
        setMember
        push r:this, '2P9vQ'
        getMember
        push '+{eA+', 0.92
        setMember
        push r:this, ')B8Lc', 10
        setMember
        push r:this, '1[Z[x', 0
        setMember
        push r:this, '-zeLn', 0
        setMember
        push r:this, '-A-nu', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:3
        pop
        branch label457
       label456:
        push r:3
        increment
        setRegister r:3
        pop
       label457:
        push r:3, 3
        lessThan
        not
        branchIfTrue label458
        push '44{N'
        getVariable
        push ')MItb'
        getMember
        push '-Jd;C', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, ',v0X'
        new
        setRegister r:4
        pop
        push '6', 1, r:4, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:4, 1, r:this, '-A-nu'
        getMember
        push 'push'
        callMethod
        pop
        push r:4, '((', -100
        setMember
        push r:4, ')(', -100
        setMember
        push 0, r:4, '4u=dZ'
        callMethod
        pop
        branch label456
       label458:
        push '44{N'
        getVariable
        push '4MvcB'
        getMember
        push '5VIv7', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:5
        pop
        push r:5, '_x', '*r'
        getVariable
        push '=OA'
        getMember
        setMember
        push r:5, '_y', 160
        setMember
        push r:this, '69m=2', '44{N'
        getVariable
        push '5;OW;'
        getMember
        push ']p9I(', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        push '44{N'
        getVariable
        push '4MvcB'
        getMember
        push '{p9I(', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        push r:5, 3
        initArray
        setMember
        push r:this, ',R', 0.5
        setMember
        push 0, r:this, '1qJE5'
        callMethod
        pop
        push 0, r:this, '+Uq4Z'
        callMethod
        pop
        branch label461
       label459:
        push r:this, '4,01', '44{N'
        getVariable
        push '-hCnb'
        getMember
        push ')+jEC', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '=3+P'
        new
        setMember
        branch label461
       label460:
        branch label461
       label461:
      end // of function 

      setMember
      push r:1, '0D 6'
      function2 () (r:1='this')
        push r:this, '0,'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label462
        push 0, r:this, '8tpI['
        callMethod
        pop
       label462:
        push 0, r:this, '8J 3y'
        callMethod
        pop
        push 0, r:this, ';Rc5s'
        callMethod
        pop
        push 0, r:this, '7Qe;6'
        getMember
        push '],lYS'
        callMethod
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label464
       label463:
        push r:3
        increment
        setRegister r:3
        pop
       label464:
        push r:3, r:2, 'length'
        getMember
        lessThan
        not
        branchIfTrue label465
        push 0, r:2, r:3
        getMember
        push '87vE7('
        callMethod
        pop
        branch label463
       label465:
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label466
        push r:0, 1
        strictEquals
        branchIfTrue label469
        push r:0, 2
        strictEquals
        branchIfTrue label474
        branch label475
       label466:
        push r:this, '2P9vQ'
        getMember
        push ')('
        getMember
        push '*r'
        getVariable
        push '*OA'
        getMember
        push 0.5
        multiply
        greaterThan
        not
        branchIfTrue label467
        push r:this, '2P9vQ'
        getMember
        push ']b', r:this, '2P9vQ'
        getMember
        push ']b'
        getMember
        push 0.3, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        setMember
        branch label468
       label467:
        push 1, 1, r:this, '5Hy6b'
        callMethod
        pop
       label468:
        push r:this, ')B8Lc', r:this, ')B8Lc'
        getMember
        push 0.35, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push 0, r:this, ']iQ7t'
        callMethod
        pop
        push r:this, '2VhU6', 60
        setMember
        branch label475
       label469:
        push r:this, '-zeLn', r:this, '-zeLn'
        getMember
        push 0.15, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '2VhU6'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label470
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        branch label473
       label470:
        push r:this, '2P9vQ'
        getMember
        push ']b', r:this, '2P9vQ'
        getMember
        push ']b'
        getMember
        push 0.8, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        setMember
        push r:this, '2P9vQ'
        getMember
        push ')('
        getMember
        push -100
        lessThan
        not
        branchIfTrue label473
       label471:
        push r:this, '-A-nu'
        getMember
        push 'length'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label472
        push 0, 0, r:this, '-A-nu'
        getMember
        push 'pop'
        callMethod
        push '9T54'
        callMethod
        pop
        branch label471
       label472:
        push 0, r:this, '2P9vQ'
        getMember
        push '9T54'
        callMethod
        pop
        push 2, 1, r:this, '5Hy6b'
        callMethod
        pop
       label473:
        push 0, r:this, ']iQ7t'
        callMethod
        pop
        push 0, '{Al{2'
        getVariable
        push '87vE7('
        callMethod
        pop
        branch label475
       label474:
        push 0, '{Al{2'
        getVariable
        push '87vE7('
        callMethod
        pop
        branch label475
       label475:
        push '44{N'
        getVariable
        push '0X xI('
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label476
        push 0, r:this, '+aDob'
        callMethod
        pop
       label476:
        push 0, r:this, '4+ksa'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ']iQ7t'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label478
       label477:
        push r:2
        increment
        setRegister r:2
        pop
       label478:
        push r:2, r:this, '-A-nu'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label479
        push r:this, '-A-nu'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:2, r:this, '-A-nu'
        getMember
        push 'length'
        getMember
        divide
        setRegister r:4
        pop
        push r:this, '1[Z[x', r:this, '1[Z[x'
        getMember
        push r:this, '-zeLn'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 628
        modulo
        setMember
        push r:3, '((', r:this, '2P9vQ'
        getMember
        push '(('
        getMember
        push r:this, '1[Z[x'
        getMember
        push 0.01
        multiply
        push r:4, 6.28
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:this, ')B8Lc'
        getMember
        multiply
        add
        setMember
        push r:3, ')(', r:this, '2P9vQ'
        getMember
        push ')('
        getMember
        push r:this, '1[Z[x'
        getMember
        push 0.01
        multiply
        push r:4, 6.28
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:this, ')B8Lc'
        getMember
        multiply
        add
        setMember
        branch label477
       label479:
      end // of function 

      setMember
      push r:1, '4+ksa'
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 2
        greaterThan
        not
        branchIfTrue label487
        push r:this, '7CL3K', r:this, '7CL3K'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        add
        setMember
        push r:this, '7CL3K'
        getMember
        push 16
        greaterThan
        not
        branchIfTrue label486
        push r:this, '7CL3K', -150
        setMember
        push r:this, '(Q7y1('
        getMember
        setRegister r:0
        push 4
        strictEquals
        branchIfTrue label480
        push r:0, 3
        strictEquals
        branchIfTrue label481
        push r:0, 2
        strictEquals
        branchIfTrue label482
        push r:0, 1
        strictEquals
        branchIfTrue label483
        push r:0, 0
        strictEquals
        branchIfTrue label484
        branch label485
       label480:
        push 0.3, 1, r:this, ');zm5'
        callMethod
        pop
        branch label485
       label481:
        push r:this, '-iB='
        getMember
        push '_quality', 1, 1, '$LOW', 'substring'
        callMethod
        setMember
        push '}P{I'
        getVariable
        push '0)E7*(', 500
        setMember
        branch label485
       label482:
        push 0, r:this, '[;4B0('
        getMember
        push '6BZ+1'
        getMember
        push 0
        getMember
        push '9I*'
        getMember
        push 'dispose'
        callMethod
        pop
        push 0, r:this, '[;4B0('
        getMember
        push '6BZ+1'
        getMember
        push 0
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push r:this, '[;4B0('
        getMember
        push '6BZ+1'
        getMember
        push 0, NULL
        setMember
        branch label485
       label483:
        push 0, r:this, '[;4B0('
        getMember
        push '6BZ+1'
        getMember
        push 1
        getMember
        push '9I*'
        getMember
        push 'dispose'
        callMethod
        pop
        push 0, r:this, '[;4B0('
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label485
       label484:
        branch label485
       label485:
        push r:this, '(Q7y1(', r:this, '(Q7y1('
        getMember
        decrement
        setMember
        push '44{N'
        getVariable
        push '[=(', '44{N'
        getVariable
        push '[=('
        getMember
        push 0.7
        multiply
        setMember
        push '{Al{2'
        getVariable
        push ']uwq8(', '{Al{2'
        getVariable
        push ']uwq8('
        getMember
        push 2
        subtract
        push 10, 2, 'Math'
        getVariable
        push 'max'
        callMethod
        setMember
       label486:
        branch label489
       label487:
        push r:this, '7CL3K'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label488
        push r:this, '7CL3K', r:this, '7CL3K'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        branch label489
       label488:
        push r:this, '7CL3K', r:this, '7CL3K'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        add
        setMember
       label489:
      end // of function 

      setMember
      push r:1, '8tpI['
      function2 () (r:1='this')
        push r:this, '0,'
        getMember
        push '}CL'
        getMember
        push r:this, '0,'
        getMember
        push '8kN'
        getMember
        subtract
        setRegister r:2
        pop
        push r:this, '0,'
        getMember
        push '8kN', r:this, '0,'
        getMember
        push '8kN'
        getMember
        push r:2, 0.1
        multiply
        add
        setMember
        push r:2, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push 0.1
        lessThan
        not
        branchIfTrue label490
        push r:this, '0,'
        getMember
        push '8kN', r:this, '0,'
        getMember
        push '}CL'
        getMember
        setMember
       label490:
        push '{-kxL'
        getVariable
        push '-V;B', r:this, '0,'
        getMember
        push '8kN'
        getMember
        setMember
        push r:this, '0,'
        getMember
        push '2VhU6'
        getMember
        push r:this, '0,'
        getMember
        push '2VhU6', r:this, '0,'
        getMember
        push '2VhU6'
        getMember
        decrement
        setMember
        push 0
        greaterThan
        not
        not
        branchIfTrue label491
        push r:this, '0,'
        getMember
        push '}CL', 1
        setMember
       label491:
        push r:this, '0,'
        getMember
        push '8kN'
        getMember
        push 1
        equals
        not
        branchIfTrue label492
        push r:this, '0,', NULL
        setMember
        push r:this, ';+'
        getMember
        push 'filters', 0
        initArray
        setMember
        branch label493
       label492:
        push 0, 'flash'
        getVariable
        push 'filters'
        getMember
        push 'ColorMatrixFilter'
        newMethod
        setRegister r:3
        pop
        push 1, r:this, '0,'
        getMember
        push '8kN'
        getMember
        subtract
        setRegister r:4
        pop
        push 0.3
        setRegister r:5
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 15
        multiply
        setRegister r:6
        pop
        push r:3, 'matrix', 0, 1, 0, 0, 0, r:6, 50, r:4
        multiply
        subtract
        push 0, 1, r:4, r:5
        multiply
        add
        push 0, 0, r:6, 50, r:4
        multiply
        subtract
        push 0, 0, 1, r:4, r:5
        multiply
        add
        push 0, r:6, 200, r:4
        multiply
        add
        push 0, 0, 0, 1, r:4, r:5
        multiply
        add
        push 20
        initArray
        setMember
        push r:this, ';+'
        getMember
        push 'filters', r:3, 1
        initArray
        setMember
       label493:
      end // of function 

      setMember
      push r:1, '8J 3y'
      function2 () (r:1='this')
        push r:this, '=eb]C('
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label495
        push 100, r:this, '=eb]C('
        getMember
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:2
        pop
        push r:this, '=eb]C(', r:this, '=eb]C('
        getMember
        push 0.6
        multiply
        setMember
        push r:this, '=eb]C('
        getMember
        push 2
        lessThan
        not
        branchIfTrue label494
        push r:this, '=eb]C(', NULL
        setMember
        push 0
        setRegister r:2
        pop
       label494:
        push 16777215, r:2, r:this, '-iB='
        getMember
        push 3, '*r'
        getVariable
        push ';CYOh'
        callMethod
        pop
       label495:
      end // of function 

      setMember
      push r:1, '+Uq4Z'
      function2 () (r:1='this')
        push r:this, '-nqp5', '44{N'
        getVariable
        push '[h3bA'
        getMember
        push 1, r:this, '32'
        getMember
        push '18wU*'
        callMethod
        setMember
        push r:this, '-nqp5'
        getMember
        push '6BZ+1', 0, 'Array'
        new
        setMember
        push r:this, '-nqp5'
        getMember
        push 1, '+7U K'
        new
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label497
       label496:
        push r:3
        increment
        setRegister r:3
        pop
       label497:
        push r:3, 3
        lessThan
        not
        branchIfTrue label498
        push 0, 1, r:2, '18wU*'
        callMethod
        setRegister r:4
        pop
        push r:4, '32', r:4, 1, '+7U K'
        new
        setMember
        push r:4, 1, r:this, '-nqp5'
        getMember
        push '6BZ+1'
        getMember
        push 'push'
        callMethod
        pop
        branch label496
       label498:
      end // of function 

      setMember
      push r:1, '1qJE5'
      function2 () (r:1='this')
        push r:this, '[;4B0(', '44{N'
        getVariable
        push '4MvcB'
        getMember
        push 1, r:this, '32'
        getMember
        push '18wU*'
        callMethod
        setMember
        push r:this, '[;4B0('
        getMember
        push '6BZ+1', 0, 'Array'
        new
        setMember
        push r:this, '[;4B0('
        getMember
        push 1, '+7U K'
        new
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label500
       label499:
        push r:3
        increment
        setRegister r:3
        pop
       label500:
        push r:3, 2
        lessThan
        not
        branchIfTrue label502
        push 0, 1, r:2, '18wU*'
        callMethod
        setRegister r:4
        pop
        push r:4, '9I*', 0, TRUE, '*r'
        getVariable
        push '*OA'
        getMember
        push '44{N'
        getVariable
        push '1Ili9'
        getMember
        add
        push r:this, ',R'
        getMember
        multiply
        int
        push '*r'
        getVariable
        push '=OA'
        getMember
        push r:this, ',R'
        getMember
        multiply
        int
        push 4, 'flash'
        getVariable
        push 'display'
        getMember
        push 'BitmapData'
        newMethod
        setMember
        push 0, r:4, '9I*'
        getMember
        push 2, r:4, 'attachBitmap'
        callMethod
        pop
        push r:4, 1, r:this, '[;4B0('
        getMember
        push '6BZ+1'
        getMember
        push 'push'
        callMethod
        pop
        push r:4, '_y', 0, '44{N'
        getVariable
        push '1Ili9'
        getMember
        subtract
        push r:this, ',R'
        getMember
        multiply
        setMember
        push r:3, 0
        equals
        not
        branchIfTrue label501
        push r:4, 'blendMode', '(WBt)'
        getVariable
        push '+,W'
        getMember
        setMember
       label501:
        branch label499
       label502:
        push r:this, '[;4B0('
        getMember
        push '_xscale', 100, r:this, ',R'
        getMember
        divide
        setMember
        push r:this, '[;4B0('
        getMember
        push '_yscale', 100, r:this, ',R'
        getMember
        divide
        setMember
      end // of function 

      setMember
      push r:1, ';Rc5s'
      function2 () (r:1='this')
        push 0, r:this, '-nqp5'
        getMember
        push '6BZ+1'
        getMember
        push 0
        getMember
        push 2, r:this, '1m(7i'
        callMethod
        pop
        push 0, 'flash'
        getVariable
        push 'filters'
        getMember
        push 'BlurFilter'
        newMethod
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label504
       label503:
        push r:3
        increment
        setRegister r:3
        pop
       label504:
        push r:3, r:this, '[;4B0('
        getMember
        push '6BZ+1'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label509
        push r:this, '[;4B0('
        getMember
        push '6BZ+1'
        getMember
        push r:3
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label508
        push r:this, '[;4B0('
        getMember
        push '6BZ+1'
        getMember
        push r:3
        getMember
        push '9I*'
        getMember
        setRegister r:4
        pop
        push r:3
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label505
        push r:0, 1
        strictEquals
        branchIfTrue label506
        branch label507
       label505:
        push 1.5, 2, r:this, ',R'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        setRegister r:5
        pop
        push r:2, 'blurX', r:5
        setMember
        push r:2, 'blurY', r:5
        setMember
        push r:2, 0, 0, 2, 'flash'
        getVariable
        push 'geom'
        getMember
        push 'Point'
        newMethod
        push r:4, 'rectangle'
        getMember
        push r:4, 4, r:4, 'applyFilter'
        callMethod
        pop
        push -2
        setRegister r:6
        pop
        push 0, r:6, r:6, r:6, 1, 1, 1, 1, 8, 'flash'
        getVariable
        push 'geom'
        getMember
        push 'ColorTransform'
        newMethod
        setRegister r:7
        pop
        push r:7, r:4, 'rectangle'
        getMember
        push 2, r:4, 'colorTransform'
        callMethod
        pop
        branch label507
       label506:
        push 1, 10, r:this, ',R'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        setRegister r:8
        pop
        push r:2, 'blurX', r:8
        setMember
        push r:2, 'blurY', r:8
        setMember
        push r:2, 0, 0, 2, 'flash'
        getVariable
        push 'geom'
        getMember
        push 'Point'
        newMethod
        push r:4, 'rectangle'
        getMember
        push r:4, 4, r:4, 'applyFilter'
        callMethod
        pop
        push -10
        setRegister r:9
        pop
        push 0.8
        setRegister r:10
        pop
        push -10, r:9, 2
        multiply
        push r:9, 2
        multiply
        push r:9, 1, r:10, r:10, 0.95, 8, 'flash'
        getVariable
        push 'geom'
        getMember
        push 'ColorTransform'
        newMethod
        setRegister r:11
        pop
        push r:11, r:4, 'rectangle'
        getMember
        push 2, r:4, 'colorTransform'
        callMethod
        pop
        branch label507
       label507:
        push '44{N'
        getVariable
        push '0X xI('
        getMember
        push 0.2
        greaterThan
        not
        branchIfTrue label508
        push '44{N'
        getVariable
        push '0X xI('
        getMember
        push 3
        multiply
        push r:this, ',R'
        getMember
        multiply
        int
        push 0, 2, r:4, 'scroll'
        callMethod
        pop
       label508:
        branch label503
       label509:
      end // of function 

      setMember
      push r:1, '1m(7i'
      function2 (r:2='}J', r:3='7') (r:1='this')
        push r:this, '[;4B0('
        getMember
        push '6BZ+1'
        getMember
        push r:'7'
        getMember
        push NULL
        equals
        not
        branchIfTrue label510
        push UNDEF
        return
       label510:
        push r:this, '[;4B0('
        getMember
        push '6BZ+1'
        getMember
        push r:'7'
        getMember
        push '9I*'
        getMember
        setRegister r:4
        pop
        push 0, 'flash'
        getVariable
        push 'geom'
        getMember
        push 'Matrix'
        newMethod
        setRegister r:5
        pop
        push r:'}J', '_yscale'
        getMember
        push 100
        divide
        push r:this, ',R'
        getMember
        multiply
        push r:'}J', '_xscale'
        getMember
        push 100
        divide
        push r:this, ',R'
        getMember
        multiply
        push 2, r:5, 'scale'
        callMethod
        pop
        push r:'}J', '_rotation'
        getMember
        push 0.0174
        multiply
        push 1, r:5, 'rotate'
        callMethod
        pop
        push r:'}J', '_y'
        getMember
        push '44{N'
        getVariable
        push '1Ili9'
        getMember
        add
        push r:this, ',R'
        getMember
        multiply
        push r:'}J', '_x'
        getMember
        push r:this, ',R'
        getMember
        multiply
        push 2, r:5, 'translate'
        callMethod
        pop
        push -255, r:'}J', '_alpha'
        getMember
        push 2.55
        multiply
        add
        push 0, 0, 0, 1, 1, 1, 1, 8, 'flash'
        getVariable
        push 'geom'
        getMember
        push 'ColorTransform'
        newMethod
        setRegister r:6
        pop
        push r:'}J', 'blendMode'
        getMember
        setRegister r:7
        pop
        push FALSE, NULL, r:7, r:6, r:5, r:'}J', 6, r:4, 'draw'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}=JH9('
      function2 (r:2='((', r:3=')(', r:4='color') (r:1='this')
        push r:this, '[;4B0('
        getMember
        push '6BZ+1'
        getMember
        push 0
        getMember
        push '9I*'
        getMember
        setRegister r:5
        pop
        push r:color, r:')('
        int
        push r:'(('
        int
        push 3, r:5, 'setPixel32'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ');zm5'
      function2 (r:2='7') (r:1='this')
        push r:this, ',R', r:'7'
        setMember
        push 0, r:this, '[;4B0('
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push 0, r:this, '1qJE5'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '+aDob'
      function2 () (r:1='this')
        push r:this, '(Q7y1('
        getMember
        push 3
        lessThan
        not
        branchIfTrue label512
        push '44{N'
        getVariable
        push '0X xI(', '44{N'
        getVariable
        push '0X xI('
        getMember
        push 0.95
        multiply
        setMember
        push '44{N'
        getVariable
        push '0X xI('
        getMember
        push 0.5
        lessThan
        not
        branchIfTrue label511
        push '44{N'
        getVariable
        push '0X xI(', 0
        setMember
       label511:
        branch label513
       label512:
        push r:this, '=kIA'
        getMember
        push 1
        greaterThan
        not
        branchIfTrue label513
        push '44{N'
        getVariable
        push '0X xI(', '44{N'
        getVariable
        push ']c)Np'
        getMember
        push '44{N'
        getVariable
        push '0X xI('
        getMember
        push 0.01, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setMember
       label513:
        push r:this, ';+'
        getMember
        push '_y', r:this, ';+'
        getMember
        push '_y'
        getMember
        push '44{N'
        getVariable
        push '0X xI('
        getMember
        add
        setMember
        push r:this, ';+'
        getMember
        push '_y'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label514
        push r:this, ';+'
        getMember
        push '_y', r:this, ';+'
        getMember
        push '_y'
        getMember
        push 1800
        subtract
        setMember
       label514:
        push 0
        setRegister r:2
        pop
        branch label516
       label515:
        push r:2
        increment
        setRegister r:2
        pop
       label516:
        push r:2, r:this, '69m=2'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label519
        push r:this, '69m=2'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3, '_y'
        getMember
        push 0
        equals
        not
        branchIfTrue label517
        push r:3, '_y', '*r'
        getVariable
        push '*OA'
        getMember
        setMember
       label517:
        push r:3, '_y', r:3, '_y'
        getMember
        push '44{N'
        getVariable
        push '0X xI('
        getMember
        add
        setMember
        push r:3, '_y'
        getMember
        push '*r'
        getVariable
        push '*OA'
        getMember
        push 100
        add
        greaterThan
        not
        branchIfTrue label518
        push 0, r:3, 'removeMovieClip'
        callMethod
        pop
        push 1, r:2, r:2
        decrement
        setRegister r:2
        pop
        push 2, r:this, '69m=2'
        getMember
        push 'splice'
        callMethod
        pop
       label518:
        branch label515
       label519:
      end // of function 

      setMember
      push r:1, '9t1r1'
      function2 () (r:1='this')
        push 'onKeyDown', ']668C(', r:this, 2, '3Wt'
        getVariable
        push '6{VYR'
        callMethod
        push 'onKeyUp', '=(D=5', r:this, 2, '3Wt'
        getVariable
        push '6{VYR'
        callMethod
        push 2
        initObject
        setRegister r:2
        pop
        push r:2, 1, 'Key'
        getVariable
        push 'addListener'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ']668C('
      function2 () (r:1='this')
        push 0, 'Key'
        getVariable
        push 'getCode'
        callMethod
        setRegister r:2
        pop
        push '44{N'
        getVariable
        push '9V[[2'
        getMember
        not
        branchIfTrue label525
        push r:2, 96
        lessThan
        not
        dup
        not
        branchIfTrue label520
        pop
        push r:2, 107
        lessThan
       label520:
        not
        branchIfTrue label521
        push r:2, 96
        subtract
        push 1, r:this, '4,01'
        getMember
        push '0=*{5('
        callMethod
        pop
       label521:
        push r:2, 49
        lessThan
        not
        dup
        not
        branchIfTrue label522
        pop
        push r:2, 54
        lessThan
       label522:
        not
        branchIfTrue label523
        push 0, r:this, '4,01'
        getMember
        push '(WKvR'
        callMethod
        pop
       label523:
        push r:2, 54
        lessThan
        not
        dup
        not
        branchIfTrue label524
        pop
        push r:2, 59
        lessThan
       label524:
        not
        branchIfTrue label525
        push NULL, 1, ' p3z='
        new
        setRegister r:3
        pop
        push r:3, '((', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push '*r'
        getVariable
        push '=OA'
        getMember
        multiply
        setMember
        push r:3, ')(', 0, r:3, ']oH'
        getMember
        subtract
        setMember
       label525:
        push r:2
        setRegister r:0
        push 'Key'
        getVariable
        push 'CONTROL'
        getMember
        strictEquals
        branchIfTrue label526
        push r:0, 'Key'
        getVariable
        push 'SHIFT'
        getMember
        strictEquals
        branchIfTrue label526
        branch label527
       label526:
        push NULL, 1, r:this, '4,01'
        getMember
        push '+ARAb'
        callMethod
        pop
        branch label527
       label527:
      end // of function 

      setMember
      push r:1, '=(D=5'
      function2 () (r:1='this')
      end // of function 

      setMember
      push r:0, '9V[[2', FALSE
      setMember
      push r:0, '[V{(6', 12
      setMember
      push r:0, '5;OW;', 10
      setMember
      push r:0, '[h3bA', 8
      setMember
      push r:0, '-hCnb', 9
      setMember
      push r:0, ')MItb', 7
      setMember
      push r:0, ',N)rb', 5
      setMember
      push r:0, '-4Nbg', 3
      setMember
      push r:0, '4MvcB', 2
      setMember
      push r:0, '0X xI(', 0.0001
      setMember
      push r:0, ']c)Np', 6
      setMember
      push r:0, '1Ili9', 100
      setMember
      push r:0, '[=(', 1
      setMember
      push '}P{I'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', NULL
        equals
        not
        branchIfTrue label528
        push '44{N'
        getVariable
        push ')MItb'
        getMember
        push '-Jd;C', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:'}J'
        pop
       label528:
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        push 'push'
        callMethod
        pop
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '86{p(', 0, 'Array'
        new
        setMember
        push r:this, '(', 1.57
        setMember
        push r:this, '[a', 0.1
        setMember
        push r:this, '6GhvX', 0.1
        setMember
        push r:this, '}Yax5', 3
        setMember
        push r:this, '3=', 2
        setMember
        push r:this, '69-', 1
        setMember
        push r:this, '-]A', 0
        setMember
        push r:this, ']oH', 16
        setMember
        push r:this, '=HU11', 0
        setMember
        push r:this, ';B(7y', 30
        setMember
        push r:this, '-c0 t', 0
        setMember
        push r:this, '-inCL', 1
        setMember
        push r:this, '5hD', ']xii)', 314, '}Yax5', 16, '7s(', 0.1, '5,', 50, '[b', 3, '6g,A', 1, '5wJ', 0, 7
        initObject
        setMember
        push r:this, '}V--k', 200
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',v0X'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '9FeuX'
      function2 (r:2='1T=') (r:1='this')
        push r:this, '=HU11'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label529
        push '{Al{2'
        getVariable
        push '62GLS', '{Al{2'
        getVariable
        push '62GLS'
        getMember
        push r:this, '=HU11'
        getMember
        subtract
        setMember
       label529:
        push r:this, '=HU11', r:'1T='
        setMember
        push '{Al{2'
        getVariable
        push '62GLS', '{Al{2'
        getVariable
        push '62GLS'
        getMember
        push r:this, '=HU11'
        getMember
        add
        setMember
      end // of function 

      setMember
      push r:1, '3T5 A('
      function2 (r:2=' (', r:3='1') (r:1='this')
        push r:this, '=T,=', '{V', r:' (', '-V', r:'1', 2
        initObject
        setMember
        push r:this, ']oH', r:' (', r:'1', 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setMember
      end // of function 

      setMember
      push r:1, '}B)Y_'
      function2 (r:2='-X') (r:1='this')
        push r:this, '(Erk5', r:'-X'
        setMember
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push 0, r:this, '9Lq;O'
        callMethod
        pop
        push 0, r:this, '8J 3y'
        callMethod
        pop
        push 0, r:this, '8J2Jt'
        callMethod
        pop
        push 0, r:this, '-wfQp'
        callMethod
        pop
        push 0, r:this, '5CMYr'
        callMethod
        pop
        push r:this, '}W5SD'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label530
        push 0, r:this, '0b]ff'
        callMethod
        pop
       label530:
        push r:this, '-fRSr'
        getMember
        not
        branchIfTrue label531
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '[b'
        getMember
        push r:this, ']b'
        getMember
        push 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        push 0.0174
        divide
        setMember
       label531:
        push r:this, ')K{W)'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label532
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:3
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:4
        pop
        push r:this, ')K{W)'
        getMember
        push '_rotation', r:3, r:4, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        push 0.0174
        divide
        push r:this, '-iB='
        getMember
        push '_rotation'
        getMember
        subtract
        setMember
       label532:
        push r:this, '(VKB'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label533
        push r:this, '(VKB'
        getMember
        push '_rotation', r:this, '(VKB'
        getMember
        push '_rotation'
        getMember
        push r:this, ']b'
        getMember
        push 8
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label533:
        push r:this, '4S cD'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label534
        push r:this, '4S cD', r:this, '4S cD'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        branch label537
       label534:
        push 10
        setRegister r:5
        pop
        push r:this, ']oH'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label535
        push r:5, r:this, ']oH'
        getMember
        add
        setRegister r:5
        pop
       label535:
        push r:this, '=T,='
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label536
        push r:5, r:this, '=T,='
        getMember
        push '-V'
        getMember
        push r:this, '=T,='
        getMember
        push '{V'
        getMember
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        add
        setRegister r:5
        pop
       label536:
        push r:5, 1, r:this, '[j0D-'
        callMethod
        not
        branchIfTrue label537
        push 0, r:this, '9T54'
        callMethod
        pop
       label537:
        push r:this, 1, '4RW6x'
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ',Q]l*'
      function2 () (r:1='this')
        push NULL, 1, ' p3z='
        new
        setRegister r:2
        pop
        push r:2, '((', r:this, '(('
        getMember
        setMember
        push r:2, ')(', r:this, ')('
        getMember
        setMember
      end // of function 

      setMember
      push r:1, '8J2Jt'
      function2 () (r:1='this')
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        setRegister r:2
        pop
        push r:2, 1, r:this, '}1A{_'
        callMethod
        push r:this, ']oH'
        getMember
        push r:2, ']oH'
        getMember
        add
        lessThan
        setRegister r:3
        pop
        push r:this, '=T,='
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label539
        push r:2, '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:this, '=T,='
        getMember
        push '{V'
        getMember
        push r:2, ']oH'
        getMember
        add
        lessThan
        dup
        not
        branchIfTrue label538
        pop
        push r:2, ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:this, '=T,='
        getMember
        push '-V'
        getMember
        push r:2, ']oH'
        getMember
        add
        lessThan
       label538:
        setRegister r:3
        pop
       label539:
        push r:3
        not
        branchIfTrue label540
        push 0, r:this, '4z7Sl'
        callMethod
        pop
       label540:
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '1,gsi'
        getMember
        push '=3+P'
        getVariable
        push '87qb-'
        getMember
        getMember
        push 0
        getMember
        setRegister r:4
        pop
        push 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '1,gsi'
        getMember
        push '=3+P'
        getVariable
        push '87qb-'
        getMember
        getMember
        push 1
        getMember
        push 2.5
        multiply
        add
        setRegister r:5
        pop
        push r:4, 0
        greaterThan
        not
        branchIfTrue label547
        push 0
        setRegister r:6
        pop
        branch label542
       label541:
        push r:6
        increment
        setRegister r:6
        pop
       label542:
        push r:6, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '29Svd'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label547
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '29Svd'
        getMember
        push r:6
        getMember
        setRegister r:7
        pop
        push r:7, 0
        getMember
        push r:this, '(('
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:7, 1
        getMember
        push r:this, ')('
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        add
        push r:this, ']oH'
        getMember
        push r:5
        add
        lessThan
        setRegister r:8
        pop
        push r:this, '=T,='
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label544
        push r:7, 0
        getMember
        push r:this, '(('
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:this, '=T,='
        getMember
        push '{V'
        getMember
        push r:5
        add
        lessThan
        dup
        not
        branchIfTrue label543
        pop
        push r:7, 1
        getMember
        push r:this, ')('
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:this, '=T,='
        getMember
        push '-V'
        getMember
        push r:5
        add
        lessThan
       label543:
        setRegister r:8
        pop
       label544:
        push r:8
        not
        branchIfTrue label546
        push 3, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        push '44{N'
        getVariable
        push '[=('
        getMember
        divide
        int
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label545
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push '{hZVF(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:9
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:10
        pop
        push r:10, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:11
        pop
        push r:10, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:12
        pop
        push 3, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 3
        multiply
        add
        setRegister r:13
        pop
        push r:9, '((', r:this, '(('
        getMember
        push r:11, r:this, ']oH'
        getMember
        multiply
        add
        setMember
        push r:9, ')(', r:this, ')('
        getMember
        push r:12, r:this, ']oH'
        getMember
        multiply
        add
        setMember
        push r:9, '[b', r:11, r:13
        multiply
        push r:this, '[b'
        getMember
        add
        setMember
        push r:9, ']b', r:12, r:13
        multiply
        push r:this, ']b'
        getMember
        add
        setMember
        push 100, r:4, 10
        multiply
        add
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 50
        multiply
        add
        push 1, r:9, '3BjX_'
        callMethod
        pop
        push r:9, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:9, '849kV', 0
        setMember
        push r:9, '-iB='
        getMember
        push 'blendMode', '(WBt)'
        getVariable
        push '+,W'
        getMember
        setMember
       label545:
        push 0.02, r:4, 0.05
        multiply
        add
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        push 1, r:this, '*]Q5}'
        callMethod
        pop
        branch label547
       label546:
        branch label541
       label547:
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '1,gsi'
        getMember
        push '=3+P'
        getVariable
        push ';yck('
        getMember
        getMember
        push 0
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label549
        push r:this, '-iB='
        getMember
        push '_y'
        getMember
        push '44{N'
        getVariable
        push '1Ili9'
        getMember
        add
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push ',R'
        getMember
        multiply
        int
        push r:this, '-iB='
        getMember
        push '_x'
        getMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push ',R'
        getMember
        multiply
        int
        push 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '[;4B0('
        getMember
        push '6BZ+1'
        getMember
        push 0
        getMember
        push '9I*'
        getMember
        push 'getPixel32'
        callMethod
        setRegister r:14
        pop
        push r:14, 1, '*r'
        getVariable
        push '2ya 0('
        callMethod
        setRegister r:15
        pop
        push 50
        setRegister r:16
        pop
        push r:15, '='
        getMember
        push 1.2
        multiply
        setRegister r:17
        pop
        push r:15, '0'
        getMember
        push 0
        equals
        dup
        not
        branchIfTrue label548
        pop
        push r:17, r:16
        greaterThan
       label548:
        not
        branchIfTrue label549
        push r:17, r:16
        subtract
        push 255, r:16
        subtract
        divide
        setRegister r:18
        pop
        push 0.07000000000000001, 1, r:18
        multiply
        add
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        push 1, r:this, '*]Q5}'
        callMethod
        pop
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push ')YfUn', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:19
        pop
        push r:19, '_x', r:this, '(('
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push r:this, ']oH'
        getMember
        multiply
        add
        setMember
        push r:19, '_y', r:this, ')('
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push r:this, ']oH'
        getMember
        multiply
        add
        setMember
        push r:19, '_xscale', 100, r:18, 100
        multiply
        add
        setMember
        push r:19, '_yscale', r:19, '_xscale'
        getMember
        setMember
        push r:19, '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        push r:19, 'blendMode', '(WBt)'
        getVariable
        push '+,W'
        getMember
        setMember
       label549:
      end // of function 

      setMember
      push r:1, '4z7Sl'
      function2 () (r:1='this')
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        setRegister r:2
        pop
        push r:2, '+NXw5('
        getMember
        push 0
        getMember
        push NULL
        equals
        not
        branchIfTrue label550
        push 0, r:2, ';-[;H'
        callMethod
        pop
       label550:
        push r:this, '(Erk5', NULL
        setMember
        push 10, 1, r:this, '*]Q5}'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '0b]ff'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label552
       label551:
        push r:2
        increment
        setRegister r:2
        pop
       label552:
        push r:2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label555
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3, r:this
        equals
        not
        dup
        not
        branchIfTrue label553
        pop
        push r:3, '}W5SD'
        getMember
        push r:this, '}W5SD'
        getMember
        equals
       label553:
        not
        branchIfTrue label554
        push r:3, 1, r:this, '}1A{_'
        callMethod
        setRegister r:4
        pop
        push r:this, ']oH'
        getMember
        push r:3, ']oH'
        getMember
        add
        push r:4
        subtract
        setRegister r:5
        pop
        push r:5, 0
        greaterThan
        not
        branchIfTrue label554
        push r:3, 1, r:this, ')153L'
        callMethod
        setRegister r:6
        pop
        push r:6, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:7
        pop
        push r:6, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:8
        pop
        push r:this, '((', r:this, '(('
        getMember
        push r:7, r:5
        multiply
        push 0.5
        multiply
        subtract
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        push r:8, r:5
        multiply
        push 0.5
        multiply
        subtract
        setMember
        push r:3, '((', r:3, '(('
        getMember
        push r:7, r:5
        multiply
        push 0.5
        multiply
        add
        setMember
        push r:3, ')(', r:3, ')('
        getMember
        push r:8, r:5
        multiply
        push 0.5
        multiply
        add
        setMember
       label554:
        branch label551
       label555:
      end // of function 

      setMember
      push r:1, '9Lq;O'
      function2 () (r:1='this')
        push r:this, '-c0 t'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label556
        push r:this, '-c0 t', r:this, '-c0 t'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
       label556:
        push r:this, '}V--k'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label557
        push r:this, '}V--k', r:this, '}V--k'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
       label557:
        push 0
        setRegister r:2
        pop
        branch label559
       label558:
        push r:2
        increment
        setRegister r:2
        pop
       label559:
        push r:2, r:this, '86{p('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label606
        push r:this, '86{p('
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label560
        push r:0, 1
        strictEquals
        branchIfTrue label569
        push r:0, 2
        strictEquals
        branchIfTrue label570
        push r:0, 3
        strictEquals
        branchIfTrue label571
        push r:0, 4
        strictEquals
        branchIfTrue label576
        push r:0, 5
        strictEquals
        branchIfTrue label578
        push r:0, 6
        strictEquals
        branchIfTrue label585
        push r:0, 7
        strictEquals
        branchIfTrue label588
        push r:0, 8
        strictEquals
        branchIfTrue label592
        push r:0, 9
        strictEquals
        branchIfTrue label594
        push r:0, 10
        strictEquals
        branchIfTrue label599
        branch label605
       label560:
        push r:this, ')W}D'
        getMember
        push '}Yax5'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        setRegister r:4
        pop
        push r:this, '0BP', r:this, '0BP'
        getMember
        push r:4, r:this, '-inCL'
        getMember
        multiply
        add
        setMember
        push r:this, '0BP'
        getMember
        push r:this, ')W}D'
        getMember
        push ' R'
        getMember
        push r:this, '83489'
        getMember
        getMember
        greaterThan
        not
        branchIfTrue label568
        push r:this, '83489', r:this, '83489'
        getMember
        increment
        setMember
        push r:this, '83489'
        getMember
        push r:this, ')W}D'
        getMember
        push ' R'
        getMember
        push 'length'
        getMember
        equals
        not
        branchIfTrue label561
        push 0, r:this, '9T54'
        callMethod
        pop
        branch label605
       label561:
        push r:this, ')W}D'
        getMember
        push ';B 9'
        getMember
        push r:this, '83489'
        getMember
        push 1
        subtract
        getMember
        setRegister r:5
        pop
        push r:this, ')W}D'
        getMember
        push ';B 9'
        getMember
        push r:this, '83489'
        getMember
        getMember
        setRegister r:6
        pop
        push r:6, 0
        getMember
        push r:5, 0
        getMember
        subtract
        setRegister r:7
        pop
        push r:6, 1
        getMember
        push r:5, 1
        getMember
        subtract
        setRegister r:8
        pop
        push r:7, r:8, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        setRegister r:9
        pop
        push r:7, r:7
        multiply
        push r:8, r:8
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        setRegister r:10
        pop
        push r:this, ')W}D'
        getMember
        push ' R'
        getMember
        push r:this, '83489'
        getMember
        push 1
        subtract
        getMember
        setRegister r:11
        pop
        push r:this, ')W}D'
        getMember
        push ' R'
        getMember
        push r:this, '83489'
        getMember
        getMember
        push r:11
        subtract
        setRegister r:12
        pop
        push r:this, '0BP'
        getMember
        push r:11
        subtract
        push r:12
        divide
        setRegister r:13
        pop
        push r:9, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:14
        pop
        push r:9, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:15
        pop
        push r:this, '((', r:5, 0
        getMember
        push r:14, r:13
        multiply
        push r:4
        multiply
        add
        setMember
        push r:this, ')(', r:5, 1
        getMember
        push r:15, r:13
        multiply
        push r:4
        multiply
        add
        setMember
        push r:this, ')W}D'
        getMember
        push '81C}X'
        getMember
        not
        not
        branchIfTrue label562
        push r:this, '-inCL', r:12, 5
        divide
        push r:this, ')W}D'
        getMember
        push '}Yax5'
        getMember
        divide
        setMember
       label562:
        push r:this, '[b', r:14, r:this, ')W}D'
        getMember
        push '}Yax5'
        getMember
        multiply
        push r:this, '-inCL'
        getMember
        multiply
        setMember
        push r:this, ']b', r:15, r:this, ')W}D'
        getMember
        push '}Yax5'
        getMember
        multiply
        push r:this, '-inCL'
        getMember
        multiply
        setMember
        push r:5, 2
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label563
        push r:0, 1
        strictEquals
        branchIfTrue label564
        branch label568
       label563:
        push 0, r:this, '[lg6b'
        callMethod
        pop
        branch label568
       label564:
        push 0
        setRegister r:16
        pop
        branch label566
       label565:
        push r:16
        increment
        setRegister r:16
        pop
       label566:
        push r:16, r:this, ')W}D'
        getMember
        push '86{p('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label567
        push 0, r:this, ')W}D'
        getMember
        push '86{p('
        getMember
        push r:16
        getMember
        push '[lg6b'
        callMethod
        pop
        branch label565
       label567:
        push 1, 2, 2, r:5, 'splice'
        callMethod
        pop
        branch label568
       label568:
        branch label605
       label569:
        push r:this, '[a', r:this, '[a'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 0.06
        multiply
        add
        setMember
        push r:this, '[a', r:this, '[a'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.8, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        setMember
        push r:this, '(', r:this, '('
        getMember
        push r:this, '[a'
        getMember
        add
        setMember
        push 0, r:this, ',43dZ'
        callMethod
        pop
        branch label605
       label570:
        push r:this, '5hD'
        getMember
        push ']xii)', r:this, '5hD'
        getMember
        push ']xii)'
        getMember
        push r:this, '5hD'
        getMember
        push '}Yax5'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 628
        modulo
        setMember
        push r:this, '(', r:this, '('
        getMember
        push r:this, '5hD'
        getMember
        push ']xii)'
        getMember
        push 100
        divide
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:this, '5hD'
        getMember
        push '7s('
        getMember
        multiply
        add
        setMember
        push 0, r:this, ',43dZ'
        callMethod
        pop
        branch label605
       label571:
        push r:this, '}CL'
        getMember
        push 1, r:this, ')153L'
        callMethod
        push r:this, '('
        getMember
        subtract
        setRegister r:17
        pop
       label572:
        push r:17, 3.14
        greaterThan
        not
        branchIfTrue label573
        push r:17, 6.28
        subtract
        setRegister r:17
        pop
        branch label572
       label573:
        push r:17, -3.14
        lessThan
        not
        branchIfTrue label574
        push r:17, 6.28
        add
        setRegister r:17
        pop
        branch label573
       label574:
        push r:this, '(', r:this, '('
        getMember
        push r:this, '[a'
        getMember
        push r:17, r:this, '6GhvX'
        getMember
        multiply
        push 0, r:this, '[a'
        getMember
        subtract
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '[b', r:this, '('
        getMember
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:this, '}Yax5'
        getMember
        multiply
        setMember
        push r:this, ']b', r:this, '('
        getMember
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:this, '}Yax5'
        getMember
        multiply
        setMember
        push r:this, '}CL'
        getMember
        push 1, r:this, '}1A{_'
        callMethod
        push 50
        lessThan
        not
        branchIfTrue label575
        push 0, r:this, '58I]G('
        callMethod
        pop
       label575:
        branch label605
       label576:
        push r:this, '-c0 t'
        getMember
        push 0
        greaterThan
        not
        not
        branchIfTrue label577
        push r:this, ';B(7y'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        int
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label577
        push 0, r:this, '[lg6b'
        callMethod
        pop
       label577:
        branch label605
       label578:
        push r:this, ']b'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label580
        push r:this, ')('
        getMember
        push r:this, '5hD'
        getMember
        push '5,'
        getMember
        lessThan
        not
        not
        branchIfTrue label579
        push r:this, '5hD'
        getMember
        push '5wJ', r:this, ']b'
        getMember
        setMember
        push r:this, ']b', 0
        setMember
        push r:this, ')(', r:this, '5hD'
        getMember
        push '5,'
        getMember
        setMember
        push r:this, '5hD'
        getMember
        push ']xii)', 0
        setMember
       label579:
        branch label584
       label580:
        push r:this, ']b'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label581
        branch label584
       label581:
        push r:this, '5hD'
        getMember
        push ']xii)', r:this, '5hD'
        getMember
        push ']xii)'
        getMember
        push r:this, '5hD'
        getMember
        push '}Yax5'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 628
        modulo
        setMember
        push r:this, ')(', r:this, '5hD'
        getMember
        push '5,'
        getMember
        push r:this, '5hD'
        getMember
        push ']xii)'
        getMember
        push 100
        divide
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:this, '5hD'
        getMember
        push '7s('
        getMember
        push 100
        multiply
        multiply
        add
        setMember
        push r:this, '((', r:this, '(('
        getMember
        push r:this, '5hD'
        getMember
        push '[b'
        getMember
        push r:this, '5hD'
        getMember
        push '6g,A'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push 10
        setRegister r:18
        pop
        push r:this, '(('
        getMember
        push r:this, ']oH'
        getMember
        push r:18
        add
        lessThan
        dup
        branchIfTrue label582
        pop
        push r:this, '(('
        getMember
        push '*r'
        getVariable
        push '=OA'
        getMember
        push r:this, ']oH'
        getMember
        push r:18
        add
        subtract
        greaterThan
       label582:
        not
        branchIfTrue label583
        push r:this, '5hD'
        getMember
        push '6g,A', r:this, '5hD'
        getMember
        push '6g,A'
        getMember
        push -1
        multiply
        setMember
        push r:this, '((', '*r'
        getVariable
        push '=OA'
        getMember
        push r:this, ']oH'
        getMember
        push r:18
        add
        subtract
        push r:this, '(('
        getMember
        push r:this, ']oH'
        getMember
        push r:18
        add
        push 3, '*r'
        getVariable
        push '2K'
        callMethod
        setMember
       label583:
        push r:this, '}V--k'
        getMember
        push 0
        greaterThan
        not
        not
        branchIfTrue label584
        push r:this, ']b', 0, r:this, '5hD'
        getMember
        push '5wJ'
        getMember
        subtract
        setMember
       label584:
        branch label605
       label585:
        push r:this, '}CL'
        getMember
        push NULL
        equals
        not
        branchIfTrue label586
        push 0, r:this, '2UCcq'
        callMethod
        pop
       label586:
        push r:this, ']Y('
        getMember
        push '62='
        getMember
        push r:this, ']Y('
        getMember
        push '*'
        getMember
        push r:this, '}CL'
        getMember
        push 3, r:this, ';zS4(('
        callMethod
        pop
        push r:this, '}CL'
        getMember
        push '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:19
        pop
        push r:this, '}CL'
        getMember
        push ')('
        getMember
        push r:this, ')('
        getMember
        subtract
        setRegister r:20
        pop
        push r:19, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:20, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        add
        push 20, r:this, ']oH'
        getMember
        add
        lessThan
        not
        branchIfTrue label587
        push r:this, '}CL', NULL
        setMember
       label587:
        branch label605
       label588:
        push 0.3
        setRegister r:21
        pop
        push 3.14, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push 1, r:this, ')153L'
        callMethod
        push 1.57
        subtract
        push 2, '*r'
        getVariable
        push '0Yj1'
        callMethod
        setRegister r:22
        pop
        push r:22, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:21
        lessThan
        dup
        not
        branchIfTrue label589
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push 1, r:this, '}1A{_'
        callMethod
        push 100
        lessThan
       label589:
        not
        branchIfTrue label590
        push r:this, '7PB6Q', 8
        setMember
       label590:
        push r:this, '7PB6Q'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label591
        push r:this, '7PB6Q', r:this, '7PB6Q'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push NULL, 1, '2C0['
        new
        setRegister r:23
        pop
        push 1, 22, 2, r:23, '3U*}=('
        callMethod
        pop
        push 1.57, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push r:21
        multiply
        add
        setRegister r:24
        pop
        push r:24, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:25
        pop
        push r:24, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:26
        pop
        push 5, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 3
        multiply
        add
        setRegister r:27
        pop
        push r:23, '((', r:this, '(('
        getMember
        push r:25, r:this, ']oH'
        getMember
        multiply
        add
        setMember
        push r:23, ')(', r:this, ')('
        getMember
        push r:26, r:this, ']oH'
        getMember
        multiply
        add
        setMember
        push r:23, '[b', r:25, r:27
        multiply
        setMember
        push r:23, ']b', r:26, r:27
        multiply
        setMember
        push r:23, ']oH', 8
        setMember
        push r:23, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:23, '6b', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 20
        multiply
        setMember
        push r:23, '-iB='
        getMember
        push 'blendMode', '(WBt)'
        getVariable
        push '+,W'
        getMember
        setMember
        push r:23, '0{8*_', 1
        setMember
        push 0, r:23, '4u=dZ'
        callMethod
        pop
       label591:
        branch label605
       label592:
        push r:this, ')('
        getMember
        push r:this, '*IgKI('
        getMember
        greaterThan
        not
        branchIfTrue label593
        push r:this, ']b', 0
        setMember
        push 1, r:2, r:2
        decrement
        setRegister r:2
        pop
        push 2, r:this, '86{p('
        getMember
        push 'splice'
        callMethod
        pop
        push 3, 1, r:this, '86{p('
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '}CL', '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        setMember
        push r:this, '3=', 2
        setMember
        push 0, r:this, '-iB='
        getMember
        push '7bJ'
        getMember
        push 'play'
        callMethod
        pop
        push r:this, '(Erk5', r:this, '[ovL6'
        getMember
        setMember
        push r:this, '-fRSr', TRUE
        setMember
       label593:
        branch label605
       label594:
        push r:this, '}V--k'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label597
        push r:this, ')('
        getMember
        push r:this, '}CL'
        getMember
        push ')('
        getMember
        greaterThan
        not
        branchIfTrue label596
        push r:this, ']b'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label595
        push r:this, '-c0 t', 0
        setMember
       label595:
        push r:this, ']b', 0
        setMember
       label596:
        branch label598
       label597:
        push r:this, ']b', r:this, ']b'
        getMember
        push 0.3
        subtract
        setMember
        push r:this, '-c0 t', 200
        setMember
       label598:
        branch label605
       label599:
        push 0
        setRegister r:28
        pop
        branch label601
       label600:
        push r:28
        increment
        setRegister r:28
        pop
       label601:
        push r:28, '*r'
        getVariable
        push '+-(0'
        getMember
        push '2xEr8'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label604
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '2xEr8'
        getMember
        push r:28
        getMember
        setRegister r:29
        pop
        push r:29, '*g;o'
        getMember
        dup
        not
        branchIfTrue label602
        pop
        push r:29, '-iB='
        getMember
        push '_currentframe'
        getMember
        push 14
        equals
        not
       label602:
        not
        branchIfTrue label603
        push r:29, 1, r:this, '}1A{_'
        callMethod
        setRegister r:30
        pop
        push r:30, r:this, '7YKSC('
        getMember
        lessThan
        not
        branchIfTrue label603
        push r:this, '7YKSC('
        getMember
        push r:30
        subtract
        setRegister r:31
        pop
        push r:29, '((', r:29, '(('
        getMember
        push r:this, '('
        getMember
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:31
        multiply
        add
        setMember
        push r:29, ')(', r:29, ')('
        getMember
        push r:this, '('
        getMember
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:31
        multiply
        add
        setMember
       label603:
        branch label600
       label604:
        branch label605
       label605:
        branch label558
       label606:
      end // of function 

      setMember
      push r:1, ',43dZ'
      function2 () (r:1='this')
        push r:this, '[b', r:this, '('
        getMember
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:this, '}Yax5'
        getMember
        multiply
        setMember
        push r:this, ']b', r:this, '('
        getMember
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:this, '}Yax5'
        getMember
        multiply
        setMember
      end // of function 

      setMember
      push r:1, '[lg6b'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label608
       label607:
        push r:3
        increment
        setRegister r:3
        pop
       label608:
        push r:3, r:this, '1,gsi'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label609
        push r:2, r:this, '1,gsi'
        getMember
        push r:3
        getMember
        push ' ('
        getMember
        push 0
        getMember
        add
        setRegister r:2
        pop
        branch label607
       label609:
        push r:2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        push 0
        setRegister r:6
        pop
        branch label611
       label610:
        push r:6
        increment
        setRegister r:6
        pop
       label611:
        push r:6, r:this, '1,gsi'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label613
        push r:this, '1,gsi'
        getMember
        push r:6
        getMember
        setRegister r:7
        pop
        push r:5, r:7, ' ('
        getMember
        push 0
        getMember
        add
        setRegister r:5
        pop
        push r:5, r:4
        greaterThan
        not
        branchIfTrue label612
        push 0, r:7, '}-B2'
        callMethod
        pop
        branch label613
       label612:
        branch label610
       label613:
      end // of function 

      setMember
      push r:1, '-wfQp'
      function2 () (r:1='this')
        push r:this, '-c0 t'
        getMember
        push NULL
        equals
        not
        branchIfTrue label614
        push UNDEF
        return
       label614:
        push r:this, '3bK;D'
        getMember
        push NULL
        equals
        not
        branchIfTrue label616
        push r:this, '-c0 t', r:this, '-c0 t'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '-c0 t'
        getMember
        push 0
        greaterThan
        not
        not
        branchIfTrue label615
        push 0, r:this, '[lg6b'
        callMethod
        pop
       label615:
        branch label617
       label616:
        push 0, r:this, '3bK;D'
        getMember
        push '87vE7('
        callMethod
        pop
       label617:
      end // of function 

      setMember
      push r:1, ']8J5+'
      function2 () (r:1='this')
        push r:this, '1,gsi'
        getMember
        push NULL
        equals
        not
        branchIfTrue label618
        push r:this, '1,gsi', 0, 'Array'
        new
        setMember
       label618:
        push r:this, 1, '*cPR8'
        new
        setRegister r:2
        pop
        push r:2, 1, r:this, '1,gsi'
        getMember
        push 'push'
        callMethod
        pop
        push r:2
        return
      end // of function 

      setMember
      push r:1, '565'
      function2 (r:2=')93A') (r:1='this')
        push r:')93A', '*]Q5}'
        getMember
        push 1, r:this, '*]Q5}'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '*]Q5}'
      function2 (r:2='7') (r:1='this')
        push r:this, 'flash', 100
        setMember
        push r:this, '3=', r:this, '3='
        getMember
        push r:'7'
        subtract
        setMember
        push r:this, '3='
        getMember
        push 0
        greaterThan
        not
        not
        branchIfTrue label619
        push r:this, '2Gr]U'
        getMember
        not
        not
        branchIfTrue label619
        push 0, r:this, '59-'
        callMethod
        pop
       label619:
      end // of function 

      setMember
      push r:1, '59-'
      function2 () (r:1='this')
        push 0, r:this, '}h4kf'
        callMethod
        pop
        push r:this, '(Erk5'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        setRegister r:2
        pop
        push r:this, '(Erk5'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label626
        push r:this, '(Erk5'
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push r:2, '}P{I'
        getVariable
        push '0)E7*('
        getMember
        greaterThan
        not
        branchIfTrue label620
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push '{e{=K(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:3
        pop
        push r:3, '((', r:this, '(('
        getMember
        setMember
        push r:3, ')(', r:this, ')('
        getMember
        setMember
        push r:3, '-iB='
        getMember
        push '5t 9)', 10
        setMember
        push r:3, '-iB='
        getMember
        push '(Erk5', r:2
        setMember
        push 255, 5, 6, r:3, '-iB='
        getMember
        push 4, '*r'
        getVariable
        push '1U;0'
        callMethod
        pop
       label620:
        push NULL
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        branch label622
       label621:
        push r:5
        increment
        setRegister r:5
        pop
       label622:
        push r:5, '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$k'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label624
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$k'
        getMember
        push r:5
        getMember
        push 0
        getMember
        push r:2
        equals
        not
        branchIfTrue label623
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$k'
        getMember
        push r:5
        getMember
        setRegister r:4
        pop
        branch label624
       label623:
        branch label621
       label624:
        push r:4, NULL
        equals
        not
        branchIfTrue label625
        push 0, r:2
        int
        push 2
        initArray
        setRegister r:4
        pop
        push r:4, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$k'
        getMember
        push 'push'
        callMethod
        pop
       label625:
        push r:4, 1, r:4, 1
        getMember
        increment
        setMember
       label626:
        push 0, r:this, ';-[;H'
        callMethod
        pop
        push 0, r:this, '9T54'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ';-[;H'
      function2 () (r:1='this')
        push 5, '44{N'
        getVariable
        push '[=('
        getMember
        multiply
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label628
       label627:
        push r:3
        increment
        setRegister r:3
        pop
       label628:
        push r:3, r:2
        lessThan
        not
        branchIfTrue label629
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push '*VE}H', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        push 1, '*DzW'
        new
        setRegister r:4
        pop
        push 20, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 30
        multiply
        add
        push 1, r:4, '3BjX_'
        callMethod
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:5
        pop
        push r:5, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:6
        pop
        push r:5, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:7
        pop
        push 8
        setRegister r:8
        pop
        push 3, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 5
        multiply
        add
        setRegister r:9
        pop
        push r:4, '((', r:this, '(('
        getMember
        push r:6, r:8
        multiply
        add
        setMember
        push r:4, ')(', r:this, ')('
        getMember
        push r:7, r:8
        multiply
        add
        setMember
        push r:4, '[b', r:6, r:9
        multiply
        setMember
        push r:4, ']b', r:7, r:9
        multiply
        push '44{N'
        getVariable
        push '0X xI('
        getMember
        push 0.6, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.4
        multiply
        add
        multiply
        add
        setMember
        push r:4, '0{8*_', 1
        setMember
        push r:4, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:4, '-iB='
        getMember
        push 'blendMode', '(WBt)'
        getVariable
        push '+,W'
        getMember
        setMember
        push r:4, '-iB='
        getMember
        push '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        branch label627
       label629:
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push '}CbPC(', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:10
        pop
        push '3', 1, r:10, 'gotoAndStop'
        callMethod
        pop
        push 0
        setRegister r:11
        pop
        branch label631
       label630:
        push r:11
        increment
        setRegister r:11
        pop
       label631:
        push r:11, 3
        lessThan
        not
        branchIfTrue label632
        push r:10, '_x', r:this, '(('
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push r:this, ']oH'
        getMember
        multiply
        add
        setMember
        push r:10, '_y', r:this, ')('
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push r:this, ']oH'
        getMember
        multiply
        add
        setMember
        push r:10, '_xscale', 100, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 100
        multiply
        add
        setMember
        push r:10, '_yscale', r:10, '_xscale'
        getMember
        setMember
        push r:10, '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        push r:10, 'blendMode', '(WBt)'
        getVariable
        push '+,W'
        getMember
        setMember
        push 1, r:10, 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '1m(7i'
        callMethod
        pop
        branch label630
       label632:
        push 0, r:10, 'removeMovieClip'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '2m;)A('
      function2 (r:2=')', r:3='{2', r:4='}2') (r:1='this')
        push r:this, '6H99,('
        getMember
        push NULL
        equals
        not
        branchIfTrue label633
        push r:this, '6H99,(', 0, 'Array'
        new
        setMember
       label633:
        push ')', r:')', '{2', r:'{2', '}2', r:'}2', 3
        initObject
        push 1, r:this, '6H99,('
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '5CMYr'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label635
       label634:
        push r:2
        increment
        setRegister r:2
        pop
       label635:
        push r:2, r:this, '6H99,('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label636
        push r:this, '6H99,('
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3, ')'
        getMember
        push '((', r:this, '(('
        getMember
        push r:3, '{2'
        getMember
        add
        setMember
        push r:3, ')'
        getMember
        push ')(', r:this, ')('
        getMember
        push r:3, '}2'
        getMember
        add
        setMember
        branch label634
       label636:
      end // of function 

      setMember
      push r:1, '3U*}=('
      function2 (r:2='7') (r:1='this')
        push r:'7'
        toString
        push 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '4]cEG('
      function2 (r:2=')7') (r:1='this')
        push r:')7', '$sub', r:this, '-iB='
        getMember
        push 3, '*r'
        getVariable
        push '{AdLP'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '2UCcq'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label638
       label637:
        push r:3
        increment
        setRegister r:3
        pop
       label638:
        push r:3, r:this, '3Aqqr'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label639
        push r:2, r:this, '3Aqqr'
        getMember
        push r:3
        getMember
        push ' ('
        getMember
        add
        setRegister r:2
        pop
        branch label637
       label639:
        push r:2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        push 0
        setRegister r:6
        pop
        branch label641
       label640:
        push r:6
        increment
        setRegister r:6
        pop
       label641:
        push r:6, r:this, '3Aqqr'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label643
        push r:this, '3Aqqr'
        getMember
        push r:6
        getMember
        setRegister r:7
        pop
        push r:5, r:7, ' ('
        getMember
        add
        setRegister r:5
        pop
        push r:5, r:4
        greaterThan
        not
        branchIfTrue label642
        push r:this, '}CL', '((', r:7, 'xMin'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push r:7, 'xMax'
        getMember
        push r:7, 'xMin'
        getMember
        subtract
        multiply
        add
        push ')(', r:7, 'yMin'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push r:7, 'yMax'
        getMember
        push r:7, 'yMin'
        getMember
        subtract
        multiply
        add
        push 2
        initObject
        setMember
        branch label643
       label642:
        branch label640
       label643:
      end // of function 

      setMember
      push r:1, '8CQie'
      function2 (r:2='xMin', r:3='xMax', r:4='yMin', r:5='yMax') (r:1='this')
        push r:this, '}V--k'
        getMember
        push 0
        greaterThan
        not
        not
        branchIfTrue label644
        push r:this, '}CL', '((', r:this, '(('
        getMember
        push ')(', -200, 2
        initObject
        setMember
        push UNDEF
        return
       label644:
        push r:this, '}CL', '((', r:xMin, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push r:xMax, r:xMin
        subtract
        multiply
        add
        push ')(', r:yMin, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push r:yMax, r:yMin
        subtract
        multiply
        add
        push 2
        initObject
        setMember
      end // of function 

      setMember
      push r:1, '58I]G('
      function2 () (r:1='this')
      end // of function 

      setMember
      push r:1, '}h4kf'
      function2 () (r:1='this')
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push 0
        setRegister r:3
        pop
        branch label646
       label645:
        push r:3
        increment
        setRegister r:3
        pop
       label646:
        push r:3, r:this, '6H99,('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label649
        push r:this, '6H99,('
        getMember
        push r:3
        getMember
        push ')'
        getMember
        setRegister r:4
        pop
        push r:4, '2Gr]U'
        getMember
        push TRUE
        equals
        not
        dup
        not
        branchIfTrue label647
        pop
        push r:4, '410{'
        getMember
       label647:
        not
        branchIfTrue label648
        push 0, r:4, '59-'
        callMethod
        pop
       label648:
        push 1, r:3, r:3
        decrement
        setRegister r:3
        pop
        push 2, r:this, '6H99,('
        getMember
        push 'splice'
        callMethod
        pop
        branch label645
       label649:
        push r:this, '2Gr]U', TRUE
        setMember
        push r:this, '=HU11'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label650
        push '{Al{2'
        getVariable
        push '62GLS', '{Al{2'
        getVariable
        push '62GLS'
        getMember
        push r:this, '=HU11'
        getMember
        subtract
        setMember
       label650:
        push r:this, ')W}D'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label651
        push r:this, 1, r:this, ')W}D'
        getMember
        push '86{p('
        getMember
        push 'remove'
        callMethod
        pop
       label651:
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '53RYu'
        getMember
        push 'remove'
        callMethod
        pop
        push r:this, 1, '2u=W='
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '0)E7*(', 100
      setMember
      push '980Sb'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '}-B2'
      function2 (r:2='}J') (r:1='this')
        push 16777215, 1, ']{i'
        getVariable
        push '(H5 S'
        callMethod
        pop
        push 0, '*r'
        getVariable
        push '}-B2'
        callMethod
        pop
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        not
        branchIfTrue label652
        push UNDEF
        return
       label652:
        push '980Sb'
        getVariable
        push ')2fr3', r:'}J'
        setMember
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        branchIfTrue label653
        push '980Sb'
        getVariable
        push 'mode', '980Sb'
        getVariable
        push ')2fr3'
        getMember
        push 1, '44{N'
        new
        setMember
       label653:
      end // of function 

      setMember
      push r:0, '0D 6'
      function2 () (r:1='this')
        push 0, '{-kxL'
        getVariable
        push '87vE7('
        callMethod
        pop
        push 0, '980Sb'
        getVariable
        push 'mode'
        getMember
        push '0D 6'
        callMethod
        pop
      end // of function 

      setMember
    end // of frame 0
  end // of defineMovieClip 579
  
  exportAssets
    579 as '90D*'
  end // of exportAssets
end
