movie '96c155fd52c245b2d59ff780c1bb9a90.swf' compressed // flash 8, total frames: 1, frame rate: 40 fps, 700x480 px


  defineMovieClip 3 // total frames: 2
  end // of defineMovieClip 3

  defineMovieClip 4 // total frames: 16

    frame 6
      push '5t 9)', 20
      setVariable
    end // of frame 6

    frame 8
      constants '5t 9)', '_parent', '{-kxL', '-V;B', ''  
      push '5t 9)', '5t 9)'
      getVariable
      push '_parent'
      getVariable
      push '{-kxL'
      getMember
      push '-V;B'
      getMember
      subtract
      setVariable
      push '5t 9)'
      getVariable
      push 0.0
      greaterThan
      not
      branchIfTrue label1
      push '', 4
      getProperty
      push 1
      subtract
      gotoAndPlay
     label1:
    end // of frame 8

    frame 15
      push ''
      removeClip
    end // of frame 15
  end // of defineMovieClip 4
  
  exportAssets
    4 as '4B1W('
  end // of exportAssets

  defineMovieClip 9 // total frames: 1
  end // of defineMovieClip 9
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets

  defineMovieClip 10 // total frames: 11
  end // of defineMovieClip 10
  
  exportAssets
    10 as ' 6e=i'
  end // of exportAssets

  defineMovieClip 12 // total frames: 1
  end // of defineMovieClip 12
  
  exportAssets
    12 as '72 Ry'
  end // of exportAssets

  defineMovieClip 54 // total frames: 63

    frame 62
      push ''
      removeClip
    end // of frame 62
  end // of defineMovieClip 54
  
  exportAssets
    54 as '5-3T('
  end // of exportAssets

  defineMovieClip 64 // total frames: 5
  end // of defineMovieClip 64
  
  exportAssets
    64 as '38cMC'
  end // of exportAssets

  defineMovieClip 66 // total frames: 1
  end // of defineMovieClip 66
  
  exportAssets
    66 as '+g{il'
  end // of exportAssets

  defineMovieClip 69 // total frames: 1
  end // of defineMovieClip 69
  
  exportAssets
    69 as ';+'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets

  defineMovieClip 80 // total frames: 6

    frame 5
      push '_parent'
      getVariable
      removeClip
    end // of frame 5
  end // of defineMovieClip 80

  defineMovieClip 91 // total frames: 6

    frame 5
      push '_parent'
      getVariable
      removeClip
    end // of frame 5
  end // of defineMovieClip 91

  defineMovieClip 102 // total frames: 6

    frame 5
      push '_parent'
      getVariable
      removeClip
    end // of frame 5
  end // of defineMovieClip 102

  defineMovieClip 113 // total frames: 6

    frame 5
      push '_parent'
      getVariable
      removeClip
    end // of frame 5
  end // of defineMovieClip 113

  defineMovieClip 115 // total frames: 1
  end // of defineMovieClip 115
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets

  defineMovieClip 118 // total frames: 11
  end // of defineMovieClip 118
  
  exportAssets
    118 as '-Y3'
  end // of exportAssets
  
  exportAssets
    118 as '-Y3'
  end // of exportAssets
  
  exportAssets
    69 as ';+'
  end // of exportAssets
  
  exportAssets
    66 as '+g{il'
  end // of exportAssets
  
  exportAssets
    118 as '-Y3'
  end // of exportAssets
  
  exportAssets
    118 as '-Y3'
  end // of exportAssets
  
  exportAssets
    118 as '-Y3'
  end // of exportAssets
  
  exportAssets
    118 as '-Y3'
  end // of exportAssets
  
  exportAssets
    118 as '-Y3'
  end // of exportAssets
  
  exportAssets
    118 as '-Y3'
  end // of exportAssets
  
  exportAssets
    118 as '-Y3'
  end // of exportAssets
  
  exportAssets
    118 as '-Y3'
  end // of exportAssets
  
  exportAssets
    118 as '-Y3'
  end // of exportAssets
  
  exportAssets
    118 as '-Y3'
  end // of exportAssets
  
  exportAssets
    118 as '-Y3'
  end // of exportAssets
  
  exportAssets
    118 as '-Y3'
  end // of exportAssets
  
  exportAssets
    118 as '-Y3'
  end // of exportAssets
  
  exportAssets
    118 as '-Y3'
  end // of exportAssets
  
  exportAssets
    118 as '-Y3'
  end // of exportAssets
  
  exportAssets
    118 as '-Y3'
  end // of exportAssets
  
  exportAssets
    64 as '38cMC'
  end // of exportAssets
  
  exportAssets
    118 as '-Y3'
  end // of exportAssets
  
  exportAssets
    9 as '5955'
  end // of exportAssets
  
  exportAssets
    54 as '5-3T('
  end // of exportAssets
  
  exportAssets
    12 as '72 Ry'
  end // of exportAssets
  
  exportAssets
    10 as ' 6e=i'
  end // of exportAssets
  
  exportAssets
    4 as '4B1W('
  end // of exportAssets

  defineMovieClip 119 // total frames: 1

    frame 0
      constants '=(,aA', '=f1t*', '5=DRJ(', '3QmlV', '}cl4B', ';ndCG', '-Q)9)', '1}dyA', '8ITeH(', '8a[9-(', '=Y7h]', '(MaUF(', ')5T;l', '7OrH+(', '47=dt', '9u 3T', '3cW=I', '+4MuO', '[KUE+', '=]jX', '[]jX', '5ki8,', '-[m(M', ',Hwi)', '*B', 'clearInterval', '3Wt', 'getGlobal', '-', 'setInterval', '}wUHz', 'length', 'split', 'join', '', 'indexOf', 'slice', 'substring', '* I51', 'Array', 'charCodeAt', 'push', ',JBe0', 'duplicate', 'random', '4UQ(1', '_parent', '_x', '_y', '{2', '}2', ' Ly7b', '0', '7g,ln', '4*fgv', 'getBounds', 'xMin', 'xMax', 'yMin', 'yMax', 'Math', 'sqrt', '16KA', '(', '}J', '_typeof', 'movieclip', 'forin', 'localToGlobal', '19{O', ',[A(', 'set', '-[A(', '((', 'get', ')(', 'globalToLocal', '{Gq]-', '$r', '$h', '$w', '$y', '$x', '$box', '$matrixType', '$radial', '$linear', ']cY[2', 'beginGradientFill', ' (', '1', '=', 'flash', 'Object', '3[4k{', '{lN=R', ',i0 [', '7;],h', '38cMC', ']}lAm', '*=_p_', 'gotoAndStop', '}SYp5', '6', '5DZk5', '92', '5U4B', '}Yax5', '5R', '6R', 'prototype', '87vE7(', '{-kxL', '-V;B', ';ILSy', 'removeMovieClip', '_xscale', '_yscale', '44{N', ']{i', '(H5 S', '+7U K', ';+', '(6oea', '72 Ry', '+g{il', '),P16(', ' 6e=i', '=(M}t', '0,vXh', '6Y)R2', '8+C5', '-nvL6', '(tnd6', '7RNv1', '}D4i3', '2k=f0', '8z6ta', ';MG2D', '5Ab', '+Z{n7', 'onRelease', '}0J7f', 'callback', '7vdL6(', '}mukB', '7-,', '5]AiQ', ' sM(i', '7diw+', '**00', '8h]TL', '7-,lT', ' (zm5', '[TYNv', '(j;o7', '7)T8z', '}SC6', '08M8', ' (z3A', '(VKB', '3B(*', '8kN', ';-[;H', '5b)bA(', '2M_}f', '3gk3+', '[5(-', 'splice', ']]kty', ']1sj+', 'useHandCursor', '$n', '$s', '$t', '7T4cF(', '- kH8(', '5-3T(', '4B1W(', ')', '0D 6', 'xmouse', 'ymouse', 'min', 'max', 'pow', 'abs', ',}2X (', '+-(0', '-Y3', '+2NA', '=S7A', 'stop', ']', '0)kU', '2[', '3[', '+291T', 'gotoAndPlay', '}wVI=(', '+fSN', '([z;n', '0S(Eo', '[ 8w;', '{Af3n', '8Ugi)', '_name', '980Sb', '}-B2', '(kJ+1(', ')2fr3', '({B6', '}Zms3', '-fC3a', '9oK', ']bu40', 'swapDepths', 'attachMC', '18wU*', 'createEmptyMC', '(GbB}', 'getDepth', 'floor', '}oQA7', 'unshift', 'clear', '9(K ;', '(WBt)', ']}Ou;(', '3I0pG', '{;7F4', '8U(wu', '}[cpB', '9xv]A', '{yQ=Q', '+,W', '2y+dV', '(tBee', '3)i[=', ' J3IC', '[6jRc', ')8Fyj', '4plQ5', 'getTimer', '3R,QM', ';y}-6(', '-)Xd+', '[Ad;n', '6GI,F', 'fps'  
      push '=(,aA'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '=f1t*', 6
      setMember
      push r:0, '5=DRJ(', 7
      setMember
      push r:0, '3QmlV', 1
      setMember
      push r:0, '}cl4B', 1000, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '1}dyA', 50, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '8ITeH(', 19
      setMember
      push r:0, '8a[9-(', 20
      setMember
      push r:0, '=Y7h]', 21
      setMember
      push r:0, '(MaUF(', 4
      setMember
      push r:0, ')5T;l', 10, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '7OrH+(', -1, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '47=dt', 1, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '9u 3T', 5, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '3cW=I', 4
      setMember
      push r:0, '+4MuO', '=(,aA'
      getVariable
      push '3cW=I'
      getMember
      setMember
      push r:0, '[KUE+', '=(,aA'
      getVariable
      push '3cW=I'
      getMember
      push 1
      add
      setMember
      push r:0, '=]jX', 6, 36
      add
      setMember
      push r:0, '[]jX', -15, 36
      add
      setMember
      push r:0, '5ki8,', 275
      setMember
      push '-[m(M'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',Hwi)'
      function2 ('-', r:2='5U4B') (r:1='this')
        push '*B'
        var
        push '*B', r:'5U4B'
        function2 () (r:1='this')
          push '*B'
          getVariable
          push 1, 'clearInterval', 1, '3Wt'
          getVariable
          push 'getGlobal'
          callMethod
          push UNDEF
          callMethod
          pop
          push 0, '-'
          callFunction
          pop
        end // of function 

        push 2, 'setInterval', 1, '3Wt'
        getVariable
        push 'getGlobal'
        callMethod
        push UNDEF
        callMethod
        setVariable
      end // of function 

      setMember
      push r:0, '}wUHz'
      function2 (r:2='=rJ', r:3='7olX7', r:4='}wUHz') (r:1='this')
        push r:'=rJ', NULL
        equals
        not
        branchIfTrue label1
        push NULL
        return
       label1:
        push r:'7olX7', 'length'
        getMember
        setRegister r:5
        pop
        push r:5, 1
        equals
        not
        branchIfTrue label2
        push r:'}wUHz', 1, r:'7olX7', 1, r:'=rJ', 'split'
        callMethod
        push 'join'
        callMethod
        return
       label2:
        push 0
        setRegister r:7
        pop
        push ''
        setRegister r:8
        pop
       label3:
        push TRUE
        not
        branchIfTrue label5
        push r:7, r:'7olX7', 2, r:'=rJ', 'indexOf'
        callMethod
        setRegister r:6
        pop
        push r:6, -1
        equals
        not
        branchIfTrue label4
        branch label5
       label4:
        push r:8, r:6, r:7, 2, r:'=rJ', 'slice'
        callMethod
        push r:'}wUHz'
        add
        add
        setRegister r:8
        pop
        push r:6, r:5
        add
        setRegister r:7
        pop
        branch label3
       label5:
        push r:8, r:7, 1, r:'=rJ', 'substring'
        callMethod
        add
        return
      end // of function 

      setMember
      push r:0, '* I51'
      function2 (r:2='=rJ') (r:1='this')
        push 0, 'Array'
        new
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        push r:'=rJ', 'length'
        getMember
        setRegister r:6
        pop
        push 0
        setRegister r:3
        pop
        branch label7
       label6:
        push r:3
        increment
        setRegister r:3
        pop
       label7:
        push r:3, r:6
        lessThan
        not
        branchIfTrue label12
        push r:3, 1, r:'=rJ', 'charCodeAt'
        callMethod
        setRegister r:7
        pop
        push r:7, 10
        equals
        dup
        branchIfTrue label8
        pop
        push r:7, 13
        equals
       label8:
        not
        branchIfTrue label11
        push r:3, r:5, 2, r:'=rJ', 'slice'
        callMethod
        push 1, r:4, 'push'
        callMethod
        pop
        push r:7, 13
        equals
        dup
        not
        branchIfTrue label9
        pop
        push r:3, 1
        add
        push 1, r:'=rJ', 'charCodeAt'
        callMethod
        push 10
        equals
       label9:
        not
        branchIfTrue label10
        push r:3
        increment
        setRegister r:3
        pop
       label10:
        push r:3, 1
        add
        setRegister r:5
        pop
       label11:
        branch label6
       label12:
        push r:3, r:5, 2, r:'=rJ', 'slice'
        callMethod
        push 1, r:4, 'push'
        callMethod
        pop
        push r:4
        return
      end // of function 

      setMember
      push r:0, ',JBe0'
      function2 (r:2=';p(') (r:1='this')
        push 0, r:';p(', 'duplicate'
        callMethod
        setRegister r:4
        pop
        push r:4, 'length'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:3
        pop
        branch label14
       label13:
        push r:3
        increment
        setRegister r:3
        pop
       label14:
        push r:3, r:5
        lessThan
        not
        branchIfTrue label15
        push r:5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:6
        pop
        push r:5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:7
        pop
        push r:4, r:6
        getMember
        setRegister r:8
        pop
        push r:4, r:6, r:4, r:7
        getMember
        setMember
        push r:4, r:7, r:8
        setMember
        branch label13
       label15:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '4UQ(1'
      function2 (r:2='}J') (r:1='this')
        push 0
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
       label16:
        push r:'}J', '_parent'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label17
        push r:3, r:'}J', '_x'
        getMember
        add
        setRegister r:3
        pop
        push r:4, r:'}J', '_y'
        getMember
        add
        setRegister r:4
        pop
        push r:'}J', '_parent'
        getMember
        setRegister r:'}J'
        pop
        branch label16
       label17:
        push '{2', r:3, '}2', r:4, 2
        initObject
        return
      end // of function 

      setMember
      push r:0, ' Ly7b'
      function2 (r:2='((', r:3='{nq3-(') (r:1='this')
        push r:'(('
        toString
        setRegister r:4
        pop
       label18:
        push r:4, 'length'
        getMember
        push r:'{nq3-('
        lessThan
        not
        branchIfTrue label19
        push '0', r:4
        add
        setRegister r:4
        pop
        branch label18
       label19:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '7g,ln'
      function2 (r:2='(') (r:1='this')
        push 0
        setRegister r:3
        pop
        push r:'(', 'length'
        getMember
        push 1
        subtract
        setRegister r:4
        pop
        branch label21
       label20:
        push r:4
        decrement
        setRegister r:4
        pop
       label21:
        push r:4, 0
        lessThan
        not
        not
        branchIfTrue label22
        push r:3, r:'(', r:4
        getMember
        add
        setRegister r:3
        pop
        branch label20
       label22:
        push r:3, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
       label23:
        push r:3, r:'(', r:4
        getMember
        lessThan
        not
        not
        branchIfTrue label24
        push r:3, r:'(', r:4
        getMember
        subtract
        setRegister r:3
        pop
        push r:4
        increment
        setRegister r:4
        pop
        branch label23
       label24:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '4*fgv'
      function2 (r:2='*QA', r:3='+QA') (r:1='this')
        push r:'*QA', 1, r:'*QA', 'getBounds'
        callMethod
        setRegister r:4
        pop
        push r:'*QA', 1, r:'+QA', 'getBounds'
        callMethod
        setRegister r:5
        pop
        push r:4, 'xMin'
        getMember
        push r:4, 'xMax'
        getMember
        add
        push 2
        divide
        push r:5, 'xMin'
        getMember
        push r:5, 'xMax'
        getMember
        add
        push 2
        divide
        subtract
        setRegister r:6
        pop
        push r:4, 'yMin'
        getMember
        push r:4, 'yMax'
        getMember
        add
        push 2
        divide
        push r:5, 'yMin'
        getMember
        push r:5, 'yMax'
        getMember
        add
        push 2
        divide
        subtract
        setRegister r:7
        pop
        push r:6, r:6
        multiply
        push r:7, r:7
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        return
      end // of function 

      setMember
      push r:0, '16KA'
      function2 ('}J') (r:1='this')
        push '(', 0, 'Array'
        new
        varEquals
        function2 (r:2='4') (r:1='this')
          push '}J'
          getVariable
          push r:'4'
          getMember
          setRegister r:3
          pop
          push r:3, 1, '3Wt'
          getVariable
          push '_typeof'
          callMethod
          push 'movieclip'
          equals
          dup
          not
          branchIfTrue label25
          pop
          push r:3, '_parent'
          getMember
          push '}J'
          getVariable
          equals
         label25:
          not
          branchIfTrue label26
          push r:3, 1, '('
          getVariable
          push 'push'
          callMethod
          pop
         label26:
        end // of function 

        push '}J'
        getVariable
        push 2, '3Wt'
        getVariable
        push 'forin'
        callMethod
        pop
        push '('
        getVariable
        return
      end // of function 

      setMember
      push r:0, 'localToGlobal'
      function2 (r:2='}J', r:3='((', r:4=')(') (r:1='this')
        push 0, '19{O'
        new
        setRegister r:5
        pop
        push r:'((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:5, 1, r:'}J', 'localToGlobal'
        callMethod
        pop
        push '((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push ')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push 2
        initObject
        return
      end // of function 

      setMember
      push r:0, 'globalToLocal'
      function2 (r:2='}J', r:3='((', r:4=')(') (r:1='this')
        push 0, '19{O'
        new
        setRegister r:5
        pop
        push r:'((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:5, 1, r:'}J', 'globalToLocal'
        callMethod
        pop
        push '((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push ')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push 2
        initObject
        return
      end // of function 

      setMember
      push r:0, '{Gq]-'
      function2 () (r:1='this')
        push '$r', '$h', '$w', '$y', '$x', '$box', '$matrixType', '$radial', '$linear', 9
        initArray
        setRegister r:2
        pop
        push '-[m(M'
        getVariable
        push ']cY[2', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:3
        pop
        branch label28
       label27:
        push r:3
        increment
        setRegister r:3
        pop
       label28:
        push r:3, r:2, 'length'
        getMember
        lessThan
        not
        branchIfTrue label29
        push r:2, r:3
        getMember
        setRegister r:4
        pop
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push r:3, 1, 1, r:4, 'substring'
        callMethod
        setMember
        branch label27
       label29:
      end // of function 

      setMember
      push r:0, 'beginGradientFill'
      function2 (r:2='}J', r:3=' Wo02', r:4='=cKzE(', r:5='8)JNX', r:6='7eq8)', r:7=',96mA') (r:1='this')
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push NULL
        equals
        not
        branchIfTrue label30
        push 0, '-[m(M'
        getVariable
        push '{Gq]-'
        callMethod
        pop
       label30:
        push 0, '19{O'
        new
        setRegister r:8
        pop
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 3
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 2
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:',96mA', '(('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 4
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:',96mA', ')('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 5
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:',96mA', ' ('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 6
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:',96mA', '1'
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 7
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:',96mA', '='
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 8
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:8, r:'7eq8)', r:'8)JNX', r:'=cKzE(', r:' Wo02'
        not
        branchIfTrue label31
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 0
        getMember
        branch label32
       label31:
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 1
        getMember
       label32:
        push 5, r:'}J', 'beginGradientFill'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, ',[A(', 1, 1, '$x', 'substring'
      callMethod
      setMember
      push r:0, '-[A(', 1, 1, '$y', 'substring'
      callMethod
      setMember
      push r:0, ']cY[2', NULL
      setMember
      push 'flash'
      getVariable
      not
      not
      branchIfTrue label33
      push 'flash', 0, 'Object'
      new
      setVariable
     label33:
      push 'flash'
      getVariable
      push '3[4k{'
      getMember
      not
      not
      branchIfTrue label34
      push 'flash'
      getVariable
      push '3[4k{', 0, 'Object'
      new
      setMember
     label34:
      push 'flash'
      getVariable
      push '3[4k{'
      getMember
      push '{lN=R'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setMember
      push ',i0 ['
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push '7;],h'
      function2 (r:2='0', r:3='*B', r:4='((', r:5=')(') (r:1='this')
        push r:this, '}J', '=(,aA'
        getVariable
        push '=Y7h]'
        getMember
        push '38cMC', 2, r:'0', ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:'*B', 1
        add
        toString
        push 1, r:this, '}J'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '}SYp5', '=(,aA'
        getVariable
        push '8a[9-('
        getMember
        push '38cMC', 2, r:'0', ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push '6', 1, r:this, '}SYp5'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '5DZk5', 50, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 70
        add
        setMember
        push r:this, '92', 0
        setMember
        push r:this, '5U4B', 0.4, 100, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 100
        divide
        add
        push 2
        divide
        setMember
        push r:this, '}Yax5', 3, 10, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 10
        divide
        add
        setMember
        push r:this, '{2', 100, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 50
        subtract
        push 50
        divide
        setMember
        push r:this, '}2', 0, 100, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        subtract
        push 50
        divide
        setMember
        push r:this, '5R', r:'((', r:this, '{2'
        getMember
        push r:this, '}Yax5'
        getMember
        multiply
        push 2
        multiply
        add
        setMember
        push r:this, '6R', r:')(', r:this, '}2'
        getMember
        push r:this, '}Yax5'
        getMember
        multiply
        push 2
        multiply
        add
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this')
        push r:this, '}Yax5'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        setRegister r:2
        pop
        push r:this, '}Yax5', r:this, '}Yax5'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 10
        divide
        add
        setMember
        push r:this, '}2', r:this, '}2'
        getMember
        push 0.07000000000000001, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '5R', r:this, '5R'
        getMember
        push r:this, '{2'
        getMember
        push r:2
        multiply
        add
        setMember
        push r:this, '6R', r:this, '6R'
        getMember
        push r:this, '}2'
        getMember
        push r:2
        multiply
        add
        setMember
        push r:this, '5U4B'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label35
        push r:this, '5U4B', r:this, '5U4B'
        getMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        subtract
        setMember
        push r:this, '5U4B'
        getMember
        push 0
        greaterThan
        not
        not
        branchIfTrue label35
        push r:this, '92', 10
        setMember
       label35:
        push r:this, '5DZk5', r:this, '5DZk5'
        getMember
        push r:this, '92'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        setMember
        push r:this, '5DZk5'
        getMember
        push 0
        greaterThan
        not
        not
        branchIfTrue label36
        push 0, r:this, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push 0, r:this, '}SYp5'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push FALSE
        return
       label36:
        push r:this, '}J'
        getMember
        push '_xscale', r:this, '5DZk5'
        getMember
        setMember
        push r:this, '}J'
        getMember
        push '_yscale', r:this, '5DZk5'
        getMember
        setMember
        push r:this, '}SYp5'
        getMember
        push '_xscale', r:this, '5DZk5'
        getMember
        push 40
        add
        setMember
        push r:this, '}SYp5'
        getMember
        push '_yscale', r:this, '5DZk5'
        getMember
        push 40
        add
        setMember
        push r:this, '}J'
        getMember
        push '_x', r:this, '5R'
        getMember
        setMember
        push r:this, '}J'
        getMember
        push '_y', r:this, '6R'
        getMember
        setMember
        push r:this, '}SYp5'
        getMember
        push '_x', r:this, '5R'
        getMember
        setMember
        push r:this, '}SYp5'
        getMember
        push '_y', r:this, '6R'
        getMember
        setMember
        push TRUE
        return
      end // of function 

      setMember
      push '44{N'
      function2 (r:2='}J') (r:1='this')
        push 16777215, 1, ']{i'
        getVariable
        push '(H5 S'
        callMethod
        pop
        push r:this, ']}lAm', r:'}J', 1, '+7U K'
        new
        setMember
        push 0, ';+', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        pop
        push r:this, '(6oea', 1
        setMember
        push '=(,aA'
        getVariable
        push '8ITeH('
        getMember
        push '72 Ry', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:3
        pop
        push 0, '+g{il', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:4
        pop
        push r:this, '),P16(', '=(,aA'
        getVariable
        push '8ITeH('
        getMember
        push ' 6e=i', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '),P16('
        getMember
        push '_x', 70
        setMember
        push r:this, '),P16('
        getMember
        push '_y', 10
        setMember
        push r:3, '_x', '=(,aA'
        getVariable
        push '=]jX'
        getMember
        setMember
        push r:3, '_y', '=(,aA'
        getVariable
        push '5ki8,'
        getMember
        setMember
        push r:4, '_x', '=(,aA'
        getVariable
        push '=]jX'
        getMember
        setMember
        push r:4, '_y', '=(,aA'
        getVariable
        push '5ki8,'
        getMember
        setMember
        push r:this, '=(M}t', 0, 1
        initArray
        setMember
        push r:this, '0,vXh', '=(,aA'
        getVariable
        push ')5T;l'
        getMember
        setMember
        push r:this, '6Y)R2', '=(,aA'
        getVariable
        push '3cW=I'
        getMember
        push 1
        initArray
        setMember
        push r:this, '8+C5', TRUE
        setMember
        push r:this, '-nvL6', 0, 'Array'
        new
        setMember
        push r:this, '(tnd6', 0, 'Array'
        new
        setMember
        push r:this, '7RNv1', 0, 'Array'
        new
        setMember
        push r:this, '}D4i3', 0, 'Array'
        new
        setMember
        push 0, r:this, '2k=f0'
        callMethod
        pop
        push 0, r:this, '8z6ta'
        callMethod
        pop
        push 0, -1, 0, r:this, ';MG2D'
        callMethod
        push r:this, 4, '5Ab'
        new
        push 1, r:this, '+Z{n7'
        callMethod
        pop
        push r:'}J', 'onRelease', '}0J7f', r:this, 2, '3Wt'
        getVariable
        push 'callback'
        callMethod
        setMember
        push r:'}J', 1, ';ndCG'
        getVariable
        push '7vdL6('
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, ';MG2D'
      function2 () (r:1='this')
        push '=(,aA'
        getVariable
        push '3cW=I'
        getMember
        push 1
        subtract
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        return
      end // of function 

      setMember
      push r:1, '}mukB'
      function2 (r:2='0bw83') (r:1='this')
        push 10, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label38
        push 10, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label37
        push '=(,aA'
        getVariable
        push '[KUE+'
        getMember
        return
       label37:
        push '=(,aA'
        getVariable
        push '+4MuO'
        getMember
        return
       label38:
        branch label40
       label39:
        push r:3, r:'0bw83'
        equals
        not
        branchIfTrue label41
       label40:
        push '=(,aA'
        getVariable
        push '3cW=I'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:3
        pop
        branch label39
       label41:
        push r:3
        return
      end // of function 

      setMember
      push r:1, '+Z{n7'
      function2 (r:2='0') (r:1='this')
        push r:this, '7-,', r:'0'
        setMember
        push r:this, '7-,'
        getMember
        push '6R', r:'0', '}J'
        getMember
        push '_y'
        getMember
        setMember
        push r:this, '5]AiQ', r:this, '7-,'
        getMember
        push '}J'
        getMember
        push '_x'
        getMember
        push 150
        lessThan
        setMember
      end // of function 

      setMember
      push r:1, ' sM(i'
      function2 (r:2=')', r:3='((', r:4=')(', r:5='0') (r:1='this')
        push r:')', '*B'
        getMember
        setRegister r:6
        pop
        push r:')', '7diw+', r:'0'
        setMember
        push r:')', 1, r:'0', 'push'
        callMethod
        pop
        push r:this, '**00'
        getMember
        push r:'((', 1
        subtract
        getMember
        push r:')('
        getMember
        setRegister r:')'
        pop
        push r:')', '*B'
        getMember
        push r:6
        equals
        dup
        not
        branchIfTrue label42
        pop
        push r:')', '7diw+'
        getMember
        push NULL
        equals
       label42:
        not
        branchIfTrue label43
        push r:'0', r:')(', r:'((', 1
        subtract
        push r:')', 4, r:this, ' sM(i'
        callMethod
        pop
       label43:
        push r:this, '**00'
        getMember
        push r:'((', 1
        add
        getMember
        push r:')('
        getMember
        setRegister r:')'
        pop
        push r:')', '*B'
        getMember
        push r:6
        equals
        dup
        not
        branchIfTrue label44
        pop
        push r:')', '7diw+'
        getMember
        push NULL
        equals
       label44:
        not
        branchIfTrue label45
        push r:'0', r:')(', r:'((', 1
        add
        push r:')', 4, r:this, ' sM(i'
        callMethod
        pop
       label45:
        push r:this, '**00'
        getMember
        push r:'(('
        getMember
        push r:')(', 1
        subtract
        getMember
        setRegister r:')'
        pop
        push r:')', '*B'
        getMember
        push r:6
        equals
        dup
        not
        branchIfTrue label46
        pop
        push r:')', '7diw+'
        getMember
        push NULL
        equals
       label46:
        not
        branchIfTrue label47
        push r:'0', r:')(', 1
        subtract
        push r:'((', r:')', 4, r:this, ' sM(i'
        callMethod
        pop
       label47:
        push r:this, '**00'
        getMember
        push r:'(('
        getMember
        push r:')(', 1
        add
        getMember
        setRegister r:')'
        pop
        push r:')', '*B'
        getMember
        push r:6
        equals
        dup
        not
        branchIfTrue label48
        pop
        push r:')', '7diw+'
        getMember
        push NULL
        equals
       label48:
        not
        branchIfTrue label49
        push r:'0', r:')(', 1
        add
        push r:'((', r:')', 4, r:this, ' sM(i'
        callMethod
        pop
       label49:
      end // of function 

      setMember
      push r:1, '8h]TL'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label51
       label50:
        push r:2
        increment
        setRegister r:2
        pop
       label51:
        push r:2, '=(,aA'
        getVariable
        push '=f1t*'
        getMember
        lessThan
        not
        branchIfTrue label55
        push 0
        setRegister r:3
        pop
        branch label53
       label52:
        push r:3
        increment
        setRegister r:3
        pop
       label53:
        push r:3, '=(,aA'
        getVariable
        push '5=DRJ('
        getMember
        lessThan
        not
        branchIfTrue label54
        push r:this, '**00'
        getMember
        push r:2
        getMember
        push r:3
        getMember
        push '7diw+', NULL
        setMember
        branch label52
       label54:
        branch label50
       label55:
        push r:this, '7-,lT', 0, 'Array'
        new
        setMember
        push FALSE
        setRegister r:4
        pop
        push 0
        setRegister r:2
        pop
        branch label57
       label56:
        push r:2
        increment
        setRegister r:2
        pop
       label57:
        push r:2, '=(,aA'
        getVariable
        push '=f1t*'
        getMember
        lessThan
        not
        branchIfTrue label65
        push 0
        setRegister r:3
        pop
        branch label59
       label58:
        push r:3
        increment
        setRegister r:3
        pop
       label59:
        push r:3, '=(,aA'
        getVariable
        push '5=DRJ('
        getMember
        lessThan
        not
        branchIfTrue label64
        push r:this, '**00'
        getMember
        push r:2
        getMember
        push r:3
        getMember
        setRegister r:5
        pop
        push r:5, NULL
        equals
        not
        dup
        not
        branchIfTrue label60
        pop
        push r:5, '7diw+'
        getMember
        push NULL
        equals
       label60:
        not
        branchIfTrue label63
        push 0, 'Array'
        new
        setRegister r:6
        pop
        push r:6, r:3, r:2, r:5, 4, r:this, ' sM(i'
        callMethod
        pop
        push r:6, 'length'
        getMember
        push 1
        equals
        not
        branchIfTrue label61
        push r:5, '7diw+', NULL
        setMember
        branch label62
       label61:
        push r:6, 1, r:this, '7-,lT'
        getMember
        push 'push'
        callMethod
        pop
       label62:
        push TRUE
        setRegister r:4
        pop
       label63:
        branch label58
       label64:
        branch label56
       label65:
        push r:4
        return
      end // of function 

      setMember
      push r:1, '8z6ta'
      function2 () (r:1='this')
        push r:this, '**00', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:2
        pop
        branch label67
       label66:
        push r:2
        increment
        setRegister r:2
        pop
       label67:
        push r:2, '=(,aA'
        getVariable
        push '=f1t*'
        getMember
        lessThan
        not
        branchIfTrue label71
        push r:this, '**00'
        getMember
        push r:2, 0, 'Array'
        new
        setMember
        push 0
        setRegister r:3
        pop
        branch label69
       label68:
        push r:3
        increment
        setRegister r:3
        pop
       label69:
        push r:3, '=(,aA'
        getVariable
        push '5=DRJ('
        getMember
        lessThan
        not
        branchIfTrue label70
        push r:this, '**00'
        getMember
        push r:2
        getMember
        push r:3, r:3, r:2, 0, r:this, ';MG2D'
        callMethod
        push r:this, 4, '5Ab'
        new
        setMember
        branch label68
       label70:
        branch label66
       label71:
        push TRUE
        setRegister r:4
        pop
       label72:
        push r:4
        not
        branchIfTrue label78
        push 0, r:this, '8h]TL'
        callMethod
        pop
        push FALSE
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        branch label74
       label73:
        push r:5
        increment
        setRegister r:5
        pop
       label74:
        push r:5, r:this, '7-,lT'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label77
        push r:this, '7-,lT'
        getMember
        push r:5
        getMember
        setRegister r:6
        pop
        push r:6, 'length'
        getMember
        push '=(,aA'
        getVariable
        push '(MaUF('
        getMember
        push 1
        subtract
        greaterThan
        dup
        not
        branchIfTrue label75
        pop
        push r:6, 0
        getMember
        push '*B'
        getMember
        push '=(,aA'
        getVariable
        push '+4MuO'
        getMember
        lessThan
       label75:
        not
        branchIfTrue label76
        push TRUE
        setRegister r:4
        pop
        push r:6, r:6, 'length'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        getMember
        setRegister r:7
        pop
        push r:7, '*B'
        getMember
        push 1, r:this, '}mukB'
        callMethod
        push 1, r:7, ' (zm5'
        callMethod
        pop
       label76:
        branch label73
       label77:
        branch label72
       label78:
      end // of function 

      setMember
      push r:1, '}0J7f'
      function2 () (r:1='this')
        push r:this, '7-,'
        getMember
        push '(('
        getMember
        push 0
        lessThan
        setRegister r:3
        pop
        push r:this, '8+C5'
        getMember
        dup
        branchIfTrue label79
        pop
        push r:this, '[TYNv'
        getMember
       label79:
        not
        branchIfTrue label80
        push UNDEF
        return
       label80:
        push r:this, '7-,'
        getMember
        push ')('
        getMember
        push r:this, '7-,'
        getMember
        push '(('
        getMember
        push 2, r:this, '7-,'
        getMember
        push '(j;o7'
        callMethod
        pop
        push r:3
        not
        branchIfTrue label84
        push r:this, '7)T8z', r:this, '**00'
        getMember
        push '=(,aA'
        getVariable
        push '=f1t*'
        getMember
        push 1
        subtract
        getMember
        push r:this, '7-,'
        getMember
        push ')('
        getMember
        getMember
        setMember
        push '=(,aA'
        getVariable
        push '=f1t*'
        getMember
        setRegister r:2
        pop
        branch label82
       label81:
        push r:2
        decrement
        setRegister r:2
        pop
       label82:
        push r:2, 0
        greaterThan
        not
        branchIfTrue label83
        push r:this, '**00'
        getMember
        push r:2, 1
        subtract
        getMember
        push r:this, '7-,'
        getMember
        push ')('
        getMember
        getMember
        setRegister r:4
        pop
        push r:this, '**00'
        getMember
        push r:2
        getMember
        push r:this, '7-,'
        getMember
        push ')('
        getMember
        push r:4
        setMember
        push r:this, '7-,'
        getMember
        push ')('
        getMember
        push r:2, 2, r:4, '}SC6'
        callMethod
        pop
        branch label81
       label83:
        push r:this, '**00'
        getMember
        push 0
        getMember
        push r:this, '7-,'
        getMember
        push ')('
        getMember
        push r:this, '7-,'
        getMember
        setMember
        push r:this, '7-,'
        getMember
        push ')('
        getMember
        push 0, 2, r:this, '7-,'
        getMember
        push '}SC6'
        callMethod
        pop
        branch label88
       label84:
        push r:this, '7)T8z', r:this, '**00'
        getMember
        push 0
        getMember
        push r:this, '7-,'
        getMember
        push ')('
        getMember
        getMember
        setMember
        push -1
        setRegister r:2
        pop
        branch label86
       label85:
        push r:2
        increment
        setRegister r:2
        pop
       label86:
        push r:2, '=(,aA'
        getVariable
        push '=f1t*'
        getMember
        push 1
        subtract
        lessThan
        not
        branchIfTrue label87
        push r:this, '**00'
        getMember
        push r:2, 1
        add
        getMember
        push r:this, '7-,'
        getMember
        push ')('
        getMember
        getMember
        setRegister r:5
        pop
        push r:this, '**00'
        getMember
        push r:2
        getMember
        push r:this, '7-,'
        getMember
        push ')('
        getMember
        push r:5
        setMember
        push r:this, '7-,'
        getMember
        push ')('
        getMember
        push r:2, 2, r:5, '}SC6'
        callMethod
        pop
        branch label85
       label87:
        push r:this, '**00'
        getMember
        push '=(,aA'
        getVariable
        push '=f1t*'
        getMember
        push 1
        subtract
        getMember
        push r:this, '7-,'
        getMember
        push ')('
        getMember
        push r:this, '7-,'
        getMember
        setMember
        push r:this, '7-,'
        getMember
        push ')('
        getMember
        push '=(,aA'
        getVariable
        push '=f1t*'
        getMember
        push 1
        subtract
        push 2, r:this, '7-,'
        getMember
        push '}SC6'
        callMethod
        pop
       label88:
        push r:this, '7)T8z'
        getMember
        push '}J'
        getMember
        push 1, r:this, ']}lAm'
        getMember
        push '08M8'
        callMethod
        pop
        push r:this, '7-,', NULL
        setMember
        push r:this, ' (z3A', 0, 1
        initArray
        setMember
        push r:this, '8+C5', TRUE
        setMember
        push r:this, '[TYNv', TRUE
        setMember
        push r:this, '(VKB', 1, 1
        initArray
        setMember
        push r:this, '0,vXh', '=(,aA'
        getVariable
        push '7OrH+('
        getMember
        push r:this, '0,vXh'
        getMember
        push 2, ';ndCG'
        getVariable
        push '3B(*'
        callMethod
        setMember
        push r:this, '=(M}t', r:this, '=(M}t'
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push 0, r:this, '2k=f0'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '2k=f0'
      function2 () (r:1='this')
        push r:this, '0,vXh'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        push 1
        add
        toString
        push 1, r:this, '),P16('
        getMember
        push 'gotoAndStop'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ';-[;H'
      function2 () (r:1='this')
        push FALSE
        setRegister r:4
        pop
        push 0, r:this, '8h]TL'
        callMethod
        pop
        push 0
        setRegister r:2
        pop
        branch label90
       label89:
        push r:2
        increment
        setRegister r:2
        pop
       label90:
        push r:2, r:this, '7-,lT'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label96
        push r:this, '7-,lT'
        getMember
        push r:2
        getMember
        setRegister r:5
        pop
        push r:5, 'length'
        getMember
        push '=(,aA'
        getVariable
        push '(MaUF('
        getMember
        push 1
        subtract
        greaterThan
        dup
        not
        branchIfTrue label91
        pop
        push r:5, 0
        getMember
        push '*B'
        getMember
        push '=(,aA'
        getVariable
        push '+4MuO'
        getMember
        lessThan
       label91:
        not
        branchIfTrue label95
        push TRUE
        setRegister r:4
        pop
        push 0
        setRegister r:3
        pop
        branch label93
       label92:
        push r:3
        increment
        setRegister r:3
        pop
       label93:
        push r:3, r:5, 'length'
        getMember
        lessThan
        not
        branchIfTrue label94
        push r:5, r:3
        getMember
        setRegister r:6
        pop
        push r:this, '**00'
        getMember
        push r:6, '(('
        getMember
        getMember
        push r:6, ')('
        getMember
        push NULL
        setMember
        push 0, r:6, ';-[;H'
        callMethod
        pop
        branch label92
       label94:
        push '=(,aA'
        getVariable
        push '1}dyA'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        push r:5, 'length'
        getMember
        push 1
        subtract
        multiply
        push r:this, '(VKB'
        getMember
        push 0
        getMember
        multiply
        setRegister r:7
        pop
        push r:this, ' (z3A', r:this, ' (z3A'
        getMember
        push 0
        getMember
        push r:7
        add
        push 1
        initArray
        setMember
        push r:7, 1, ';ndCG'
        getVariable
        push '-Q)9)'
        callMethod
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
       label95:
        branch label89
       label96:
        push r:this, '(VKB', r:this, '(VKB'
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push r:4
        return
      end // of function 

      setMember
      push r:1, '2M_}f'
      function2 () (r:1='this')
        push FALSE
        setRegister r:4
        pop
        push 0
        setRegister r:2
        pop
        branch label98
       label97:
        push r:2
        increment
        setRegister r:2
        pop
       label98:
        push r:2, '=(,aA'
        getVariable
        push '=f1t*'
        getMember
        lessThan
        not
        branchIfTrue label104
        push FALSE
        setRegister r:5
        pop
        push '=(,aA'
        getVariable
        push '5=DRJ('
        getMember
        push 1
        subtract
        setRegister r:3
        pop
        branch label100
       label99:
        push r:3
        decrement
        setRegister r:3
        pop
       label100:
        push r:3, 0
        lessThan
        not
        not
        branchIfTrue label103
        push r:this, '**00'
        getMember
        push r:2
        getMember
        push r:3
        getMember
        setRegister r:6
        pop
        push r:6, NULL
        equals
        not
        branchIfTrue label101
        push TRUE
        setRegister r:5
        pop
        branch label102
       label101:
        push r:5
        not
        branchIfTrue label102
        push TRUE
        setRegister r:4
        pop
        push r:this, '**00'
        getMember
        push r:2
        getMember
        push r:3, 1
        add
        push r:6
        setMember
        push r:this, '**00'
        getMember
        push r:2
        getMember
        push r:3, NULL
        setMember
        push 0, r:6, '2M_}f'
        callMethod
        pop
       label102:
        branch label99
       label103:
        branch label97
       label104:
        push r:4
        return
      end // of function 

      setMember
      push r:1, '3gk3+'
      function2 () (r:1='this')
        push 0, 'Array'
        new
        setRegister r:4
        pop
        push 0
        setRegister r:2
        pop
        branch label106
       label105:
        push r:2
        increment
        setRegister r:2
        pop
       label106:
        push r:2, '=(,aA'
        getVariable
        push '=f1t*'
        getMember
        lessThan
        not
        branchIfTrue label112
        push NULL
        setRegister r:5
        pop
        push '=(,aA'
        getVariable
        push '5=DRJ('
        getMember
        push 1
        subtract
        setRegister r:3
        pop
        branch label108
       label107:
        push r:3
        decrement
        setRegister r:3
        pop
       label108:
        push r:3, 0
        lessThan
        not
        not
        branchIfTrue label111
        push r:this, '**00'
        getMember
        push r:2
        getMember
        push r:3
        getMember
        push NULL
        equals
        not
        branchIfTrue label110
        push r:5, NULL
        equals
        not
        branchIfTrue label109
        push r:3, 1
        add
        setRegister r:5
        pop
       label109:
        push r:3, r:5
        subtract
        push r:2, 0, r:this, ';MG2D'
        callMethod
        push r:this, 4, '5Ab'
        new
        setRegister r:6
        pop
        push r:6, 1, r:4, 'push'
        callMethod
        pop
        push r:3, 1, r:6, '[5(-'
        callMethod
        pop
        push r:this, '**00'
        getMember
        push r:2
        getMember
        push r:3, r:6
        setMember
       label110:
        branch label107
       label111:
        branch label105
       label112:
        push r:4, 'length'
        getMember
        push 0
        equals
        not
        branchIfTrue label113
        push FALSE
        return
       label113:
        push r:4, 1, '-[m(M'
        getVariable
        push ',JBe0'
        callMethod
        setRegister r:4
        pop
        push TRUE
        setRegister r:7
        pop
       label114:
        push r:7
        not
        branchIfTrue label120
        push FALSE
        setRegister r:7
        pop
        push 0, r:this, '8h]TL'
        callMethod
        pop
        push 0
        setRegister r:8
        pop
        branch label116
       label115:
        push r:8
        increment
        setRegister r:8
        pop
       label116:
        push r:8, r:4, 'length'
        getMember
        lessThan
        not
        branchIfTrue label119
        push r:4, r:8
        getMember
        setRegister r:9
        pop
        push r:9, '7diw+'
        getMember
        push 'length'
        getMember
        push '=(,aA'
        getVariable
        push '(MaUF('
        getMember
        push 1
        subtract
        greaterThan
        dup
        not
        branchIfTrue label117
        pop
        push r:9, '*B'
        getMember
        push '=(,aA'
        getVariable
        push '+4MuO'
        getMember
        lessThan
       label117:
        not
        branchIfTrue label118
        push 100, 0, 2, r:9, '7diw+'
        getMember
        push 'splice'
        callMethod
        pop
        push r:9, '*B'
        getMember
        push 1, r:this, '}mukB'
        callMethod
        push 1, r:9, ' (zm5'
        callMethod
        pop
        push TRUE
        setRegister r:7
        pop
       label118:
        branch label115
       label119:
        branch label114
       label120:
        push TRUE
        return
      end // of function 

      setMember
      push r:1, ']]kty'
      function2 () (r:1='this')
        push r:this, '7)T8z'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label121
        push r:this, '7)T8z'
        getMember
        push 1, r:this, '+Z{n7'
        callMethod
        pop
        push r:this, '7)T8z', NULL
        setMember
       label121:
        push 0, r:this, '2M_}f'
        callMethod
        not
        branchIfTrue label122
        push UNDEF
        return
       label122:
        push 0, r:this, ';-[;H'
        callMethod
        not
        branchIfTrue label123
        push UNDEF
        return
       label123:
        push 0, r:this, '3gk3+'
        callMethod
        not
        branchIfTrue label124
        push UNDEF
        return
       label124:
        push r:this, ' (z3A'
        getMember
        push 0
        getMember
        push 1, r:this, '-nvL6'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '(VKB'
        getMember
        push 0
        getMember
        push 1, r:this, '(tnd6'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '0,vXh'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        push 0
        equals
        dup
        not
        branchIfTrue label125
        pop
        push r:this, '7-,'
        getMember
        push '*B'
        getMember
        push NULL
        equals
        dup
        branchIfTrue label125
        pop
        push r:this, '7-,'
        getMember
        push '*B'
        getMember
        push '=(,aA'
        getVariable
        push '+4MuO'
        getMember
        lessThan
       label125:
        not
        branchIfTrue label126
        push 0, r:this, ']}lAm'
        getMember
        push ']1sj+'
        callMethod
        push 'useHandCursor', FALSE
        setMember
        push '$n', r:this, '=(M}t'
        getMember
        push 0
        getMember
        push '$s', r:this, '-nvL6'
        getMember
        push '$t', r:this, '(tnd6'
        getMember
        push 3
        initObject
        push 1, ';ndCG'
        getVariable
        push '7T4cF('
        callMethod
        pop
        push UNDEF
        return
       label126:
        push r:this, '8+C5', FALSE
        setMember
      end // of function 

      setMember
      push r:1, '- kH8('
      function2 (r:2='7') (r:1='this')
        push '=(,aA'
        getVariable
        push '8ITeH('
        getMember
        push '5-3T(', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:3
        pop
        push r:3, '_x', r:this, '7-,'
        getMember
        push '(('
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label127
        push 16, '=(,aA'
        getVariable
        push '=]jX'
        getMember
        add
        push 36
        subtract
        branch label128
       label127:
        push 300, 45
        subtract
        push 25
        add
       label128:
        setMember
        push r:3, '_y', 300
        setMember
        push '=(,aA'
        getVariable
        push '8ITeH('
        getMember
        push '4B1W(', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:4
        pop
        push r:'7', 1, r:4, ')'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:4, '_x', '=(,aA'
        getVariable
        push '=]jX'
        getMember
        setMember
        push r:4, '_y', '=(,aA'
        getVariable
        push '5ki8,'
        getMember
        push 6
        subtract
        setMember
      end // of function 

      setMember
      push r:1, '0D 6'
      function2 () (r:1='this')
        push r:this, '(6oea'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label129
        push r:this, '(6oea', r:this, '(6oea'
        getMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        subtract
        setMember
        push r:this, '(6oea'
        getMember
        push 0
        greaterThan
        not
        not
        branchIfTrue label129
        push r:this, '8+C5', FALSE
        setMember
       label129:
        push 0
        setRegister r:2
        pop
        branch label131
       label130:
        push r:2
        increment
        setRegister r:2
        pop
       label131:
        push r:2, r:this, '7RNv1'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label133
        push r:this, '7RNv1'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push 0, r:3, '87vE7('
        callMethod
        not
        not
        branchIfTrue label132
        push r:3, '5R', r:3, '}J'
        getMember
        push '_x'
        getMember
        setMember
        push r:3, '6R', r:3, '}J'
        getMember
        push '_y'
        getMember
        setMember
        push 1, r:2, r:2
        decrement
        setRegister r:2
        pop
        push 2, r:this, '7RNv1'
        getMember
        push 'splice'
        callMethod
        pop
        push r:this, '7RNv1'
        getMember
        push 'length'
        getMember
        push 0
        equals
        not
        branchIfTrue label132
        push 0, r:this, ']]kty'
        callMethod
        pop
       label132:
        branch label130
       label133:
        push 0
        setRegister r:2
        pop
        branch label135
       label134:
        push r:2
        increment
        setRegister r:2
        pop
       label135:
        push r:2, r:this, '}D4i3'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label137
        push 0, r:this, '}D4i3'
        getMember
        push r:2
        getMember
        push '87vE7('
        callMethod
        not
        not
        branchIfTrue label136
        push 1, r:2, r:2
        decrement
        setRegister r:2
        pop
        push 2, r:this, '}D4i3'
        getMember
        push 'splice'
        callMethod
        pop
       label136:
        branch label134
       label137:
        push 0, '3Wt'
        getVariable
        push 'xmouse'
        callMethod
        push 150
        lessThan
        setRegister r:4
        pop
        push 0, '=(,aA'
        getVariable
        push '5=DRJ('
        getMember
        push 1
        subtract
        push 0, '3Wt'
        getVariable
        push 'ymouse'
        callMethod
        push '=(,aA'
        getVariable
        push '[]jX'
        getMember
        subtract
        push 36
        divide
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        int
        setRegister r:5
        pop
        push r:4, r:this, '5]AiQ'
        getMember
        equals
        not
        dup
        branchIfTrue label138
        pop
        push r:this, '0,vXh'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        push 0
        equals
       label138:
        dup
        branchIfTrue label139
        pop
        push r:this, '7-,'
        getMember
        push '*B'
        getMember
        push '=(,aA'
        getVariable
        push '+4MuO'
        getMember
        lessThan
        not
       label139:
        not
        branchIfTrue label140
        push 350
        setRegister r:6
        pop
        branch label141
       label140:
        push '=(,aA'
        getVariable
        push '[]jX'
        getMember
        push 36, r:5
        multiply
        add
        setRegister r:6
        pop
       label141:
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.7, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:7
        pop
        push r:this, '7-,'
        getMember
        push '((', r:4
        not
        branchIfTrue label142
        push -1
        branch label143
       label142:
        push '=(,aA'
        getVariable
        push '=f1t*'
        getMember
       label143:
        setMember
        push r:this, '7-,'
        getMember
        push ')(', r:5
        setMember
        push r:this, '7-,'
        getMember
        push '6R', r:this, '7-,'
        getMember
        push '6R'
        getMember
        push r:7
        multiply
        push r:6, 1, r:7
        subtract
        multiply
        add
        setMember
        push r:this, '7-,'
        getMember
        push '6R'
        getMember
        push r:6
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push 2
        lessThan
        dup
        branchIfTrue label144
        pop
        push r:6, 350
        equals
        dup
        not
        branchIfTrue label144
        pop
        push r:this, '7-,'
        getMember
        push '6R'
        getMember
        push 300
        greaterThan
       label144:
        not
        branchIfTrue label150
        push r:this, '7-,'
        getMember
        push '6R', r:6
        setMember
        push r:this, '[TYNv', FALSE
        setMember
        push r:this, '7-,'
        getMember
        push '*B'
        getMember
        setRegister r:0
        push '=(,aA'
        getVariable
        push '+4MuO'
        getMember
        strictEquals
        branchIfTrue label145
        push r:0, '=(,aA'
        getVariable
        push '[KUE+'
        getMember
        strictEquals
        branchIfTrue label146
        branch label148
       label145:
        push 1, 1, r:this, '- kH8('
        callMethod
        pop
        push r:this, '0,vXh', '=(,aA'
        getVariable
        push '47=dt'
        getMember
        push r:this, '0,vXh'
        getMember
        push 2, ';ndCG'
        getVariable
        push '3B(*'
        callMethod
        setMember
        push '=(,aA'
        getVariable
        push '}cl4B'
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push 0, r:this, '2k=f0'
        callMethod
        pop
        push 0, r:this, ';MG2D'
        callMethod
        push 1, r:this, '7-,'
        getMember
        push ' (zm5'
        callMethod
        pop
        branch label150
       label146:
        push 2, 1, r:this, '- kH8('
        callMethod
        pop
        push r:this, '0,vXh', '=(,aA'
        getVariable
        push '9u 3T'
        getMember
        push r:this, '0,vXh'
        getMember
        push 2, ';ndCG'
        getVariable
        push '3B(*'
        callMethod
        setMember
        push r:this, '0,vXh'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        push '=(,aA'
        getVariable
        push ')5T;l'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        greaterThan
        not
        branchIfTrue label147
        push r:this, '0,vXh', '=(,aA'
        getVariable
        push ')5T;l'
        getMember
        setMember
       label147:
        push 0, r:this, '2k=f0'
        callMethod
        pop
        push 0, r:this, ';MG2D'
        callMethod
        push 1, r:this, '7-,'
        getMember
        push ' (zm5'
        callMethod
        pop
        branch label150
       label148:
        push r:4, r:this, '5]AiQ'
        getMember
        equals
        not
        not
        branchIfTrue label149
        push r:this, '5]AiQ', r:4
        setMember
        push NULL, r:this, '7-,'
        getMember
        push '(('
        getMember
        push 2, r:this, '7-,'
        getMember
        push '(j;o7'
        callMethod
        pop
        branch label149
       label149:
        branch label150
       label150:
        push r:this, '7-,'
        getMember
        push '}J'
        getMember
        push '_y', r:this, '7-,'
        getMember
        push '6R'
        getMember
        setMember
      end // of function 

      setMember
      push r:1, ',}2X ('
      function2 () (r:1='this')
      end // of function 

      setMember
      push '5Ab'
      function2 (r:2='0', r:3='*B', r:4='((', r:5=')(') (r:1='this')
        push r:this, '+-(0', r:'0'
        setMember
        push r:this, '}J', '=(,aA'
        getVariable
        push '3QmlV'
        getMember
        push r:')('
        add
        push '-Y3', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:'*B', 1, r:this, ' (zm5'
        callMethod
        pop
        push r:')(', r:'((', 2, r:this, '(j;o7'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '(j;o7'
      function2 (r:2='((', r:3=')(') (r:1='this')
        push r:'((', NULL
        equals
        not
        not
        branchIfTrue label151
        push r:this, '((', r:'(('
        setMember
        push r:this, '}J'
        getMember
        push '_x', '=(,aA'
        getVariable
        push '=]jX'
        getMember
        push r:'((', 36
        multiply
        add
        setMember
       label151:
        push r:')(', NULL
        equals
        not
        not
        branchIfTrue label152
        push r:this, ')(', r:')('
        setMember
        push '=(,aA'
        getVariable
        push '3QmlV'
        getMember
        push r:')('
        add
        push r:this, '}J'
        getMember
        push 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '+2NA'
        callMethod
        pop
        push r:this, '}J'
        getMember
        push '_y', '=(,aA'
        getVariable
        push '[]jX'
        getMember
        push r:')(', 36
        multiply
        add
        setMember
       label152:
      end // of function 

      setMember
      push r:1, ' (zm5'
      function2 (r:2='7') (r:1='this')
        push r:this, '*B', r:'7'
        setMember
        push r:this, '*B'
        getMember
        push 1
        add
        toString
        push 1, r:this, '}J'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push 0, r:this, '}J'
        getMember
        push '=S7A'
        getMember
        push 'stop'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}SC6'
      function2 (r:2='2[', r:3='3[') (r:1='this')
        push r:this, ']', '5Ab'
        getVariable
        push '0)kU'
        getMember
        setMember
        push r:this, '((', r:'2['
        setMember
        push r:this, ')(', r:'3['
        setMember
        push '=(,aA'
        getVariable
        push '3QmlV'
        getMember
        push r:'3['
        add
        push r:this, '}J'
        getMember
        push 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '+2NA'
        callMethod
        pop
        push 2, 1, r:this, '}J'
        getMember
        push '=S7A'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '2[', '=(,aA'
        getVariable
        push '=]jX'
        getMember
        push r:'2[', 36
        multiply
        add
        setMember
        push r:this, '3[', '=(,aA'
        getVariable
        push '[]jX'
        getMember
        push r:'3[', 36
        multiply
        add
        setMember
        push r:this, '5R', r:this, '}J'
        getMember
        push '_x'
        getMember
        setMember
        push r:this, '6R', r:this, '}J'
        getMember
        push '_y'
        getMember
        setMember
        push r:this, 1, r:this, '+-(0'
        getMember
        push '7RNv1'
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ';-[;H'
      function2 () (r:1='this')
        push r:this, ']', '5Ab'
        getVariable
        push '+291T'
        getMember
        setMember
        push r:this, '5R', r:this, '}J'
        getMember
        push '_x'
        getMember
        push 18
        add
        setMember
        push r:this, '6R', r:this, '}J'
        getMember
        push '_y'
        getMember
        push 18
        add
        setMember
        push r:this, '5U4B', 0
        setMember
        push 1, 1, r:this, '}J'
        getMember
        push '=S7A'
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push r:this, 1, r:this, '+-(0'
        getMember
        push '7RNv1'
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '2M_}f'
      function2 () (r:1='this')
        push r:this, ']', '5Ab'
        getVariable
        push '}wVI=('
        getMember
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        increment
        setMember
        push '=(,aA'
        getVariable
        push '3QmlV'
        getMember
        push r:this, ')('
        getMember
        add
        push r:this, '}J'
        getMember
        push 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '+2NA'
        callMethod
        pop
        push r:this, '5R', r:this, '}J'
        getMember
        push '_y'
        getMember
        setMember
        push r:this, '6R', 0
        setMember
        push r:this, 1, r:this, '+-(0'
        getMember
        push '7RNv1'
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '[5(-'
      function2 (r:2=')(') (r:1='this')
        push r:this, ']', '5Ab'
        getVariable
        push '+fSN'
        getMember
        setMember
        push r:this, '6R', r:')(', r:this, ')('
        getMember
        subtract
        push 36
        multiply
        setMember
        push r:')(', r:this, '(('
        getMember
        push 2, r:this, '(j;o7'
        callMethod
        pop
        push r:this, '5R', r:this, '}J'
        getMember
        push '_y'
        getMember
        setMember
        push r:this, 1, r:this, '+-(0'
        getMember
        push '7RNv1'
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this')
        push r:this, ']'
        getMember
        setRegister r:0
        push '5Ab'
        getVariable
        push '0)kU'
        getMember
        strictEquals
        branchIfTrue label153
        push r:0, '5Ab'
        getVariable
        push '+291T'
        getMember
        strictEquals
        branchIfTrue label154
        push r:0, '5Ab'
        getVariable
        push '}wVI=('
        getMember
        strictEquals
        branchIfTrue label155
        push r:0, '5Ab'
        getVariable
        push '+fSN'
        getMember
        strictEquals
        branchIfTrue label156
        branch label157
       label153:
        push 0, r:this, '([z;n'
        callMethod
        return
       label154:
        push 0, r:this, '0S(Eo'
        callMethod
        return
       label155:
        push 0, r:this, '[ 8w;'
        callMethod
        return
       label156:
        push 0, r:this, '{Af3n'
        callMethod
        return
       label157:
        push FALSE
        return
      end // of function 

      setMember
      push r:1, '([z;n'
      function2 () (r:1='this')
        push TRUE
        setRegister r:2
        pop
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.7, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:3
        pop
        push r:this, '5R', r:this, '5R'
        getMember
        push r:3
        multiply
        push r:this, '2['
        getMember
        push 1, r:3
        subtract
        multiply
        add
        setMember
        push r:this, '6R', r:this, '6R'
        getMember
        push r:3
        multiply
        push r:this, '3['
        getMember
        push 1, r:3
        subtract
        multiply
        add
        setMember
        push r:this, '5R'
        getMember
        push r:this, '2['
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:this, '6R'
        getMember
        push r:this, '3['
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        add
        push 2
        lessThan
        not
        branchIfTrue label158
        push r:this, '5R', r:this, '2['
        getMember
        setMember
        push r:this, '6R', r:this, '3['
        getMember
        setMember
        push 1, 1, r:this, '}J'
        getMember
        push '=S7A'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push FALSE
        setRegister r:2
        pop
       label158:
        push r:this, '}J'
        getMember
        push '_x', r:this, '5R'
        getMember
        setMember
        push r:this, '}J'
        getMember
        push '_y', r:this, '6R'
        getMember
        setMember
        push r:2
        return
      end // of function 

      setMember
      push r:1, '0S(Eo'
      function2 () (r:1='this')
        push r:this, '5U4B'
        getMember
        push 0
        lessThan
        not
        not
        branchIfTrue label159
        push r:this, '5U4B', r:this, '5U4B'
        getMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        subtract
        setMember
        push r:this, '5U4B'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label159
        push '8Ugi)', 1, r:this, '}J'
        getMember
        push '=S7A'
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
       label159:
        push r:this, '}J'
        getMember
        push '_name'
        getMember
        push NULL
        equals
        not
        setRegister r:2
        pop
        push r:2
        not
        not
        branchIfTrue label163
        push 5, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        push 1, 2, 'Math'
        getVariable
        push 'max'
        callMethod
        int
        setRegister r:4
        pop
        push 0
        setRegister r:3
        pop
        branch label161
       label160:
        push r:3
        increment
        setRegister r:3
        pop
       label161:
        push r:3, r:4
        lessThan
        not
        branchIfTrue label162
        push r:this, '6R'
        getMember
        push r:this, '5R'
        getMember
        push r:this, '*B'
        getMember
        push r:this, '+-(0'
        getMember
        push 4, '7;],h'
        new
        setRegister r:5
        pop
        push r:5, 1, r:this, '+-(0'
        getMember
        push '}D4i3'
        getMember
        push 'push'
        callMethod
        pop
        branch label160
       label162:
        push 0, r:this, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
       label163:
        push r:2
        return
      end // of function 

      setMember
      push r:1, '[ 8w;'
      function2 () (r:1='this')
        push TRUE
        setRegister r:2
        pop
        push r:this, '6R', r:this, '6R'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 10
        multiply
        add
        setMember
        push r:this, '6R'
        getMember
        push 36
        lessThan
        not
        not
        branchIfTrue label164
        push r:this, '6R', 36
        setMember
        push FALSE
        setRegister r:2
        pop
       label164:
        push r:this, '}J'
        getMember
        push '_y', r:this, '5R'
        getMember
        push r:this, '6R'
        getMember
        add
        setMember
        push r:2
        return
      end // of function 

      setMember
      push r:1, '{Af3n'
      function2 () (r:1='this')
        push TRUE
        setRegister r:2
        pop
        push r:this, '6R', r:this, '6R'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 10
        multiply
        subtract
        setMember
        push r:this, '6R'
        getMember
        push 0
        greaterThan
        not
        not
        branchIfTrue label165
        push r:this, '6R', 0
        setMember
        push FALSE
        setRegister r:2
        pop
       label165:
        push r:this, '}J'
        getMember
        push '_y', r:this, '5R'
        getMember
        push r:this, '6R'
        getMember
        subtract
        setMember
        push r:2
        return
      end // of function 

      setMember
      push r:0, '0)kU', 0
      setMember
      push r:0, '+291T', 1
      setMember
      push r:0, '}wVI=(', 2
      setMember
      push r:0, '+fSN', 3
      setMember
      push '980Sb'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '}-B2'
      function2 (r:2='}J') (r:1='this')
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        not
        branchIfTrue label166
        push UNDEF
        return
       label166:
        push '980Sb'
        getVariable
        push ')2fr3', r:'}J'
        setMember
        push '980Sb'
        getVariable
        push '({B6', '980Sb'
        getVariable
        push ')2fr3'
        getMember
        push 1, '44{N'
        new
        setMember
      end // of function 

      setMember
      push r:0, '0D 6'
      function2 () (r:1='this')
        push 0, '{-kxL'
        getVariable
        push '87vE7('
        callMethod
        pop
        push 0, '980Sb'
        getVariable
        push '({B6'
        getMember
        push '0D 6'
        callMethod
        pop
      end // of function 

      setMember
      push '+7U K'
      function2 (r:2='}J') (r:1='this')
        push r:this, ')2fr3', r:'}J'
        setMember
        push r:this, '}Zms3', 0, 'Array'
        new
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, ']1sj+'
      function2 () (r:1='this')
        push r:this, ')2fr3'
        getMember
        return
      end // of function 

      setMember
      push r:1, '-fC3a'
      function2 (r:2='59F') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'59F'
        getMember
        setRegister r:3
        pop
        push r:3, NULL
        equals
        not
        branchIfTrue label167
        push '9oK', 0, 'Array'
        new
        push '7-,', 0, 2
        initObject
        setRegister r:3
        pop
        push r:this, '}Zms3'
        getMember
        push r:'59F', r:3
        setMember
       label167:
        push r:3
        return
      end // of function 

      setMember
      push r:1, ']bu40'
      function2 (r:2='[-99') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'[-99'
        getMember
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:7
        pop
        push r:'[-99', 1000
        multiply
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label169
       label168:
        push r:6
        increment
        setRegister r:6
        pop
       label169:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label171
        push r:4, r:6
        getMember
        push '_name'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label170
        push r:8, r:7
        add
        push 1, r:4, r:6
        getMember
        push 'swapDepths'
        callMethod
        pop
        push r:4, r:7, r:4, r:6
        getMember
        setMember
        push r:7
        increment
        setRegister r:7
        pop
       label170:
        branch label168
       label171:
        push r:3, '7-,', r:7
        setMember
      end // of function 

      setMember
      push r:1, '*=_p_'
      function2 (r:2='*KB2', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label172
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'*KB2', 2, r:this, '*=_p_'
        callMethod
        return
       label172:
        push r:6, r:'[-99', 1000
        multiply
        add
        push r:'*KB2', r:this, ')2fr3'
        getMember
        push 3, '3Wt'
        getVariable
        push 'attachMC'
        callMethod
        setRegister r:7
        pop
        push r:5, r:6, r:7
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:7
        return
      end // of function 

      setMember
      push r:1, '18wU*'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push r:5, 1000
        equals
        not
        branchIfTrue label173
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', 1, r:this, '18wU*'
        callMethod
        return
       label173:
        push r:5, r:'[-99', 1000
        multiply
        add
        push r:this, ')2fr3'
        getMember
        push 2, '3Wt'
        getVariable
        push 'createEmptyMC'
        callMethod
        setRegister r:6
        pop
        push r:4, r:5, r:6
        setMember
        push r:3, '7-,', r:3, '7-,'
        getMember
        increment
        setMember
        push r:6
        return
      end // of function 

      setMember
      push r:1, '(GbB}'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label174
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        return
       label174:
        push r:5, r:6, r:'}J'
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:6, r:'[-99', 1000
        multiply
        add
        return
      end // of function 

      setMember
      push r:1, '+2NA'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        push 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, r:'[-99'
        equals
        not
        branchIfTrue label175
        push UNDEF
        return
       label175:
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:5, '7-,'
        getMember
        setRegister r:7
        pop
        push 0
        setRegister r:8
        pop
        branch label177
       label176:
        push r:8
        increment
        setRegister r:8
        pop
       label177:
        push r:8, r:7
        lessThan
        not
        branchIfTrue label179
        push r:6, r:8
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label178
        push r:6, r:8, NULL
        setMember
        branch label179
       label178:
        branch label176
       label179:
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}oQA7'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label180
        push r:6, r:7, NULL
        setMember
        push r:'}J', 1, r:6, 'unshift'
        callMethod
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label180:
      end // of function 

      setMember
      push r:1, '08M8'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label182
        push r:6, r:7, NULL
        setMember
        push r:5, '7-,'
        getMember
        push 1000
        equals
        not
        branchIfTrue label181
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label181:
        push r:5, '7-,'
        getMember
        setRegister r:3
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:3, r:4, 1000
        multiply
        add
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
        push r:6, r:3, r:'}J'
        setMember
       label182:
      end // of function 

      setMember
      push r:1, 'clear'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:4
        pop
        branch label184
       label183:
        push r:4
        increment
        setRegister r:4
        pop
       label184:
        push r:4, r:3, '7-,'
        getMember
        lessThan
        not
        branchIfTrue label185
        push 0, r:5, r:4
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label183
       label185:
        push r:3, '7-,', 0
        setMember
      end // of function 

      setMember
      push r:1, '9(K ;'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push -99999999
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label187
       label186:
        push r:6
        increment
        setRegister r:6
        pop
       label187:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label195
        push r:4, r:6
        getMember
        setRegister r:9
        pop
        push r:9, '_y'
        getMember
        setRegister r:10
        pop
        push r:10, r:8
        lessThan
        not
        not
        branchIfTrue label188
        push r:10
        setRegister r:8
        pop
        branch label194
       label188:
        push r:6
        setRegister r:7
        pop
        branch label190
       label189:
        push r:7
        decrement
        setRegister r:7
        pop
       label190:
        push r:7, 0
        greaterThan
        not
        branchIfTrue label193
        push r:4, r:7, 1
        subtract
        getMember
        setRegister r:11
        pop
        push r:11, '_y'
        getMember
        push r:10
        greaterThan
        not
        branchIfTrue label191
        push r:4, r:7, r:11
        setMember
        push r:11, 1, r:9, 'swapDepths'
        callMethod
        pop
        branch label192
       label191:
        push r:4, r:7, r:9
        setMember
        branch label193
       label192:
        branch label189
       label193:
        push r:7, 0
        equals
        not
        branchIfTrue label194
        push r:4, 0, r:9
        setMember
       label194:
        branch label186
       label195:
      end // of function 

      setMember
      push r:1, ',}2X ('
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label197
       label196:
        push r:2
        increment
        setRegister r:2
        pop
       label197:
        push r:2, r:this, '}Zms3'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label198
        push r:2, 1, r:this, 'clear'
        callMethod
        pop
        branch label196
       label198:
      end // of function 

      setMember
      push '(WBt)'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ']}Ou;(', 1
      setMember
      push r:0, '3I0pG', 2
      setMember
      push r:0, '{;7F4', 3
      setMember
      push r:0, '8U(wu', 4
      setMember
      push r:0, '}[cpB', 5
      setMember
      push r:0, '9xv]A', 6
      setMember
      push r:0, '{yQ=Q', 7
      setMember
      push r:0, '+,W', 8
      setMember
      push r:0, '2y+dV', 9
      setMember
      push r:0, '(tBee', 10
      setMember
      push r:0, '3)i[=', 11
      setMember
      push r:0, ' J3IC', 12
      setMember
      push r:0, '[6jRc', 13
      setMember
      push r:0, ')8Fyj', 14
      setMember
      push '{-kxL'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '87vE7('
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '4plQ5', '{-kxL'
        getVariable
        push '4plQ5'
        getMember
        increment
        setMember
        push 0, '3Wt'
        getVariable
        push 'getTimer'
        callMethod
        setRegister r:2
        pop
        push '{-kxL'
        getVariable
        push ';ILSy', r:2, '{-kxL'
        getVariable
        push '3R,QM'
        getMember
        subtract
        push 1000.0
        divide
        setMember
        push '{-kxL'
        getVariable
        push '3R,QM', r:2
        setMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        push '{-kxL'
        getVariable
        push ';y}-6('
        getMember
        lessThan
        not
        branchIfTrue label199
        push '{-kxL'
        getVariable
        push '-)Xd+', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        push '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        multiply
        push 1, '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        subtract
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        multiply
        add
        setMember
        branch label200
       label199:
        push '{-kxL'
        getVariable
        push ';ILSy', 1, '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        divide
        setMember
       label200:
        push '{-kxL'
        getVariable
        push '-V;B', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        setMember
      end // of function 

      setMember
      push r:0, 'fps'
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        return
      end // of function 

      setMember
      push r:0, '6GI,F', 32
      setMember
      push r:0, ';y}-6(', 0.5
      setMember
      push r:0, '3R,QM', 0, '3Wt'
      getVariable
      push 'getTimer'
      callMethod
      setMember
      push r:0, '[Ad;n', 0.95
      setMember
      push r:0, '-)Xd+', 1
      setMember
      push r:0, '-V;B', 1
      setMember
      push r:0, ';ILSy', 1
      setMember
      push r:0, '4plQ5', 0
      setMember
    end // of frame 0
  end // of defineMovieClip 119
  
  exportAssets
    119 as '90D*'
  end // of exportAssets
end
