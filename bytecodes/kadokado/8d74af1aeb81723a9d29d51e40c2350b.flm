movie '8d74af1aeb81723a9d29d51e40c2350b.swf' compressed // flash 8, total frames: 1, frame rate: 40 fps, 700x480 px


  defineMovieClip 4 // total frames: 3
  end // of defineMovieClip 4
  
  exportAssets
    4 as '33EIy'
  end // of exportAssets

  defineMovieClip 6 // total frames: 1
  end // of defineMovieClip 6

  defineMovieClip 7 // total frames: 10

    frame 9
      push ''
      removeClip
    end // of frame 9
  end // of defineMovieClip 7
  
  exportAssets
    7 as '-RDz6'
  end // of exportAssets

  defineMovieClip 9 // total frames: 1
  end // of defineMovieClip 9
  
  exportAssets
    9 as ';uc6J('
  end // of exportAssets

  defineMovieClip 17 // total frames: 7
  end // of defineMovieClip 17
  
  exportAssets
    17 as ',+TFu'
  end // of exportAssets

  defineMovieClip 21 // total frames: 10
  end // of defineMovieClip 21
  
  exportAssets
    21 as ']zL8C('
  end // of exportAssets

  defineMovieClip 24 // total frames: 10
  end // of defineMovieClip 24
  
  exportAssets
    24 as '1c;(=('
  end // of exportAssets

  defineMovieClip 27 // total frames: 1
  end // of defineMovieClip 27

  defineMovieClip 28 // total frames: 16

    frame 7
      push '5t 9)', 20
      setVariable
    end // of frame 7

    frame 9
      constants '5t 9)', ''  
      push '5t 9)', '5t 9)'
      getVariable
      push 1
      subtract
      setVariable
      push '5t 9)'
      getVariable
      push 0.0
      greaterThan
      not
      branchIfTrue label1
      push '', 4
      getProperty
      push 1
      subtract
      gotoAndPlay
     label1:
    end // of frame 9

    frame 15
      push ''
      removeClip
    end // of frame 15
  end // of defineMovieClip 28
  
  exportAssets
    28 as '{}(i2'
  end // of exportAssets

  defineMovieClip 32 // total frames: 3

    frame 0
      push '', 5
      getProperty
      random
      push 1
      add
      gotoAndStop
    end // of frame 0
  end // of defineMovieClip 32
  
  exportAssets
    32 as '3cyQK('
  end // of exportAssets

  defineMovieClip 34 // total frames: 1
  end // of defineMovieClip 34
  
  exportAssets
    34 as '2]9H;('
  end // of exportAssets

  defineMovieClip 36 // total frames: 1
  end // of defineMovieClip 36
  
  exportAssets
    36 as ';]Kv1'
  end // of exportAssets

  defineMovieClip 38 // total frames: 1
  end // of defineMovieClip 38

  defineMovieClip 39 // total frames: 11

    frame 10
      push '2VhU6', 0.0
      setVariable
    end // of frame 10
  end // of defineMovieClip 39
  
  exportAssets
    39 as '6-6 t'
  end // of exportAssets

  defineMovieClip 48 // total frames: 7

    frame 0
      push '', 5
      getProperty
      random
      push 1
      add
      gotoAndStop
    end // of frame 0
  end // of defineMovieClip 48

  defineMovieClip 50 // total frames: 2
  end // of defineMovieClip 50
  
  exportAssets
    50 as ']x}EI('
  end // of exportAssets

  defineMovieClip 79 // total frames: 3
  end // of defineMovieClip 79

  defineMovieClip 84 // total frames: 24
  end // of defineMovieClip 84
  
  exportAssets
    84 as '0]7s4'
  end // of exportAssets

  defineMovieClip 86 // total frames: 1
  end // of defineMovieClip 86

  defineMovieClip 88 // total frames: 1
  end // of defineMovieClip 88

  defineMovieClip 91 // total frames: 1
  end // of defineMovieClip 91

  defineMovieClip 93 // total frames: 1
  end // of defineMovieClip 93

  defineMovieClip 95 // total frames: 1
  end // of defineMovieClip 95

  defineMovieClip 97 // total frames: 1
  end // of defineMovieClip 97

  defineMovieClip 100 // total frames: 1
  end // of defineMovieClip 100

  defineMovieClip 101 // total frames: 1
  end // of defineMovieClip 101

  defineMovieClip 103 // total frames: 1
  end // of defineMovieClip 103

  defineMovieClip 105 // total frames: 1
  end // of defineMovieClip 105

  defineMovieClip 107 // total frames: 1
  end // of defineMovieClip 107

  defineMovieClip 109 // total frames: 1
  end // of defineMovieClip 109

  defineMovieClip 111 // total frames: 1
  end // of defineMovieClip 111
  
  exportAssets
    84 as '0]7s4'
  end // of exportAssets
  
  exportAssets
    84 as '0]7s4'
  end // of exportAssets
  
  exportAssets
    84 as '0]7s4'
  end // of exportAssets
  
  exportAssets
    84 as '0]7s4'
  end // of exportAssets
  
  exportAssets
    84 as '0]7s4'
  end // of exportAssets
  
  exportAssets
    84 as '0]7s4'
  end // of exportAssets

  defineMovieClip 112 // total frames: 4
  end // of defineMovieClip 112

  defineMovieClip 113 // total frames: 1
  end // of defineMovieClip 113

  defineMovieClip 114 // total frames: 59
  end // of defineMovieClip 114
  
  exportAssets
    114 as '*mOK0'
  end // of exportAssets

  defineMovieClip 116 // total frames: 1
  end // of defineMovieClip 116

  defineMovieClip 118 // total frames: 1
  end // of defineMovieClip 118

  defineMovieClip 120 // total frames: 1
  end // of defineMovieClip 120

  defineMovieClip 121 // total frames: 10

    frame 4
      push 'hide', TRUE
      setVariable
    end // of frame 4

    frame 9
      push 0.0, 'this'
      getVariable
      push 'removeMovieClip'
      callMethod
      pop
    end // of frame 9
  end // of defineMovieClip 121
  
  exportAssets
    121 as 'pop'
  end // of exportAssets

  defineMovieClip 124 // total frames: 1
  end // of defineMovieClip 124
  
  exportAssets
    124 as ';+'
  end // of exportAssets
  
  exportAssets
    124 as ';+'
  end // of exportAssets
  
  exportAssets
    121 as 'pop'
  end // of exportAssets
  
  exportAssets
    114 as '*mOK0'
  end // of exportAssets
  
  exportAssets
    50 as ']x}EI('
  end // of exportAssets
  
  exportAssets
    39 as '6-6 t'
  end // of exportAssets
  
  exportAssets
    36 as ';]Kv1'
  end // of exportAssets
  
  exportAssets
    36 as ';]Kv1'
  end // of exportAssets
  
  exportAssets
    36 as ';]Kv1'
  end // of exportAssets
  
  exportAssets
    36 as ';]Kv1'
  end // of exportAssets
  
  exportAssets
    36 as ';]Kv1'
  end // of exportAssets
  
  exportAssets
    36 as ';]Kv1'
  end // of exportAssets
  
  exportAssets
    36 as ';]Kv1'
  end // of exportAssets
  
  exportAssets
    36 as ';]Kv1'
  end // of exportAssets
  
  exportAssets
    36 as ';]Kv1'
  end // of exportAssets
  
  exportAssets
    36 as ';]Kv1'
  end // of exportAssets
  
  exportAssets
    36 as ';]Kv1'
  end // of exportAssets
  
  exportAssets
    36 as ';]Kv1'
  end // of exportAssets
  
  exportAssets
    36 as ';]Kv1'
  end // of exportAssets
  
  exportAssets
    36 as ';]Kv1'
  end // of exportAssets
  
  exportAssets
    36 as ';]Kv1'
  end // of exportAssets
  
  exportAssets
    36 as ';]Kv1'
  end // of exportAssets
  
  exportAssets
    84 as '0]7s4'
  end // of exportAssets
  
  exportAssets
    84 as '0]7s4'
  end // of exportAssets
  
  exportAssets
    84 as '0]7s4'
  end // of exportAssets
  
  exportAssets
    84 as '0]7s4'
  end // of exportAssets
  
  exportAssets
    84 as '0]7s4'
  end // of exportAssets
  
  exportAssets
    84 as '0]7s4'
  end // of exportAssets
  
  exportAssets
    84 as '0]7s4'
  end // of exportAssets
  
  exportAssets
    84 as '0]7s4'
  end // of exportAssets
  
  exportAssets
    34 as '2]9H;('
  end // of exportAssets
  
  exportAssets
    32 as '3cyQK('
  end // of exportAssets
  
  exportAssets
    28 as '{}(i2'
  end // of exportAssets
  
  exportAssets
    24 as '1c;(=('
  end // of exportAssets
  
  exportAssets
    21 as ']zL8C('
  end // of exportAssets
  
  exportAssets
    17 as ',+TFu'
  end // of exportAssets
  
  exportAssets
    9 as ';uc6J('
  end // of exportAssets
  
  exportAssets
    7 as '-RDz6'
  end // of exportAssets
  
  exportAssets
    4 as '33EIy'
  end // of exportAssets

  defineMovieClip 125 // total frames: 1

    frame 0
      constants '=(,aA', ';CYOh', '=', '0', ')', 'Color', 'ra', 'ga', 'ba', 'aa', 'rb', 'gb', 'bb', 'ab', 'setTransform', '[MqDO', '*sd+;(', '[[xeT', '9u', ';u', ')RL6t', '0wVEI', ';ndCG', '-Q)9)', ',OYKA', ' KZiK', '4MkO', '*c)L', '}cl4B', '99l8B', ',L+a)(', '+L+a)(', '3d0fx', '*h0p]', ' v+J-', '54{lV', '8ITeH(', ',i0 [', '+7U K', ')2fr3', '}Zms3', 'Array', 'prototype', ']1sj+', '-fC3a', '9oK', '7-,', ']bu40', '_name', 'swapDepths', '*=_p_', '3Wt', 'attachMC', '18wU*', 'createEmptyMC', '(GbB}', '+2NA', 'getDepth', 'Math', 'floor', '}oQA7', 'unshift', '08M8', 'clear', 'removeMovieClip', '9(K ;', '_y', ',}2X (', 'length', 'flash', 'Object', 'filters', '{lN=R', '{-kxL', '87vE7(', '4plQ5', 'getTimer', ';ILSy', '3R,QM', ';y}-6(', '-)Xd+', '[Ad;n', '6GI,F', '-V;B', 'fps', '=3+P', '+-(0', '}J', '*mOK0', ']}lAm', ')]0dN', '5R', '+}B(', '-fQb', ' IWA+', '_x', '_xscale', '_yscale', ';gtww', '6', 'gotoAndStop', '*B', '*tC0', '3 7', '4 7', '5 7', '5955', '0tJ', 'reverse', '()z9A(', ' _gkA', '(*tR', ';r98{', ']tp', '(qHaD(', ';-R]', '3vnF{', '0DF00', '_visible', 'push', '0D 6', '7IrKA', '}i3;,', '8=00', 'Key', 'LEFT', 'isDown', 'RIGHT', 'DOWN', '{cv0s', 'UP', ',6He-', '=HU11', ';YK2v', '3[wi-', '6F WG', '}QNv1', '}k_z9(', '3ng)-(', '13(0C', '-fbpG', '0]7s4', 'stop', '=jr=E', '2VhU6', '2]9H;(', '{==W3(', 'random', 'cos', 'sin', '[b', ']b', '+{eA+', ']zL8C(', '1c;(=(', 'abs', '6b', ')Z2', '(KpGn', 'scale', '_totalframes', 'gotoAndPlay', ',+TFu', '_rotation', '+7', '6-6 t', '-cLYz', '33EIy', '-RDz6', ']x}EI(', '08ewd', 'min', '5_qm*', '3cyQK(', '(WBt)', ']}Ou;(', '3I0pG', '{;7F4', '8U(wu', '}[cpB', '9xv]A', '{yQ=Q', '+,W', '2y+dV', '(tBee', '3)i[=', ' J3IC', '[6jRc', ')8Fyj', '0vWVG', 'width', 'height', '8We+Z', ';7X*g', '0Cs7K', ';MG2D', '8F)jE(', '[VAKp', ']c{=e', '88rS(', '((', ')(', '5', '7;UEF(', '06P_n', '-_X}5', '$g', '7,cAJ(', '*9byE(', '2M_}f', '33jVw', '4T]v[', '*hM', '})L9', ')gv94', '{a8q', '}2', '}BhKw', '0twi)', '35IvE', 'splice', '2tleZ', ' ChKw', ';-[;H', '$b1', '5b)bA(', '$b2', '4,01', '_alpha', '44{N', ';+', '[NCLd', '){zaJ(', '5U4B', '3p(W2', '$c', '$l', '}-B2', '8kN', '-[m(M', '7g,ln', '6DoB7', '{}(i2', '(Erk5', '7T4cF(', '3B(*', '980Sb', '(kJ+1(', 'mode', ',Hwi)', 'clearInterval', 'getGlobal', '-', 'setInterval', '}wUHz', 'split', 'join', '', 'indexOf', 'slice', 'substring', '* I51', 'charCodeAt', ',JBe0', 'duplicate', '4UQ(1', '_parent', '{2', ' Ly7b', '0', '4*fgv', 'getBounds', 'xMin', 'xMax', 'yMin', 'yMax', 'sqrt', '16KA', '(', '_typeof', 'movieclip', '9ss9+', 'localToGlobal', '19{O', ',[A(', 'set', '-[A(', 'get', 'globalToLocal', '{Gq]-', '$r', '$h', '$w', '$y', '$x', '$box', '$matrixType', '$radial', '$linear', ']cY[2', 'beginGradientFill', ' (', '1'  
      push '=(,aA'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ';CYOh'
      function2 (r:2='}J', r:3='3GF', r:4='(v+') (r:1='this')
        push '=', r:'(v+', 16
        shiftRight
        push '0', r:'(v+', 8
        shiftRight
        push 255
        bitwiseAnd
        push ')', r:'(v+', 255
        bitwiseAnd
        push 3
        initObject
        setRegister r:5
        pop
        push r:'}J', 1, 'Color'
        new
        setRegister r:6
        pop
        push r:'3GF', 100
        divide
        setRegister r:7
        pop
        push 'ra', 100, r:'3GF'
        subtract
        int
        push 'ga', 100, r:'3GF'
        subtract
        int
        push 'ba', 100, r:'3GF'
        subtract
        int
        push 'aa', 100, 'rb', r:7, r:5, '='
        getMember
        multiply
        int
        push 'gb', r:7, r:5, '0'
        getMember
        multiply
        int
        push 'bb', r:7, r:5, ')'
        getMember
        multiply
        int
        push 'ab', 0, 8
        initObject
        setRegister r:8
        pop
        push r:8, 1, r:6, 'setTransform'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '[MqDO', 8
      setMember
      push r:0, '*sd+;(', 12
      setMember
      push r:0, '[[xeT', 3
      setMember
      push r:0, '9u', 45
      setMember
      push r:0, ';u', -45
      setMember
      push r:0, ')RL6t', 65
      setMember
      push r:0, '0wVEI', 3, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, ',OYKA', 20
      setMember
      push r:0, ' KZiK', 21
      setMember
      push r:0, '4MkO', 9
      setMember
      push r:0, '*c)L', 100, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '}cl4B', 1000, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '99l8B', 5000, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, ',L+a)(', 22
      setMember
      push r:0, '+L+a)(', 23
      setMember
      push r:0, '3d0fx', 0
      setMember
      push r:0, '*h0p]', 1
      setMember
      push r:0, ' v+J-', 2
      setMember
      push r:0, '54{lV', 3
      setMember
      push r:0, '8ITeH(', 4
      setMember
      push ',i0 ['
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push '+7U K'
      function2 (r:2='}J') (r:1='this')
        push r:this, ')2fr3', r:'}J'
        setMember
        push r:this, '}Zms3', 0, 'Array'
        new
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, ']1sj+'
      function2 () (r:1='this')
        push r:this, ')2fr3'
        getMember
        return
      end // of function 

      setMember
      push r:1, '-fC3a'
      function2 (r:2='59F') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'59F'
        getMember
        setRegister r:3
        pop
        push r:3, NULL
        equals
        not
        branchIfTrue label1
        push '9oK', 0, 'Array'
        new
        push '7-,', 0, 2
        initObject
        setRegister r:3
        pop
        push r:this, '}Zms3'
        getMember
        push r:'59F', r:3
        setMember
       label1:
        push r:3
        return
      end // of function 

      setMember
      push r:1, ']bu40'
      function2 (r:2='[-99') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'[-99'
        getMember
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:7
        pop
        push r:'[-99', 1000
        multiply
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label3
       label2:
        push r:6
        increment
        setRegister r:6
        pop
       label3:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label5
        push r:4, r:6
        getMember
        push '_name'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label4
        push r:8, r:7
        add
        push 1, r:4, r:6
        getMember
        push 'swapDepths'
        callMethod
        pop
        push r:4, r:7, r:4, r:6
        getMember
        setMember
        push r:7
        increment
        setRegister r:7
        pop
       label4:
        branch label2
       label5:
        push r:3, '7-,', r:7
        setMember
      end // of function 

      setMember
      push r:1, '*=_p_'
      function2 (r:2='*KB2', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label6
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'*KB2', 2, r:this, '*=_p_'
        callMethod
        return
       label6:
        push r:6, r:'[-99', 1000
        multiply
        add
        push r:'*KB2', r:this, ')2fr3'
        getMember
        push 3, '3Wt'
        getVariable
        push 'attachMC'
        callMethod
        setRegister r:7
        pop
        push r:5, r:6, r:7
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:7
        return
      end // of function 

      setMember
      push r:1, '18wU*'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push r:5, 1000
        equals
        not
        branchIfTrue label7
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', 1, r:this, '18wU*'
        callMethod
        return
       label7:
        push r:5, r:'[-99', 1000
        multiply
        add
        push r:this, ')2fr3'
        getMember
        push 2, '3Wt'
        getVariable
        push 'createEmptyMC'
        callMethod
        setRegister r:6
        pop
        push r:4, r:5, r:6
        setMember
        push r:3, '7-,', r:3, '7-,'
        getMember
        increment
        setMember
        push r:6
        return
      end // of function 

      setMember
      push r:1, '(GbB}'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label8
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        return
       label8:
        push r:5, r:6, r:'}J'
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:6, r:'[-99', 1000
        multiply
        add
        return
      end // of function 

      setMember
      push r:1, '+2NA'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        push 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, r:'[-99'
        equals
        not
        branchIfTrue label9
        push UNDEF
        return
       label9:
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:5, '7-,'
        getMember
        setRegister r:7
        pop
        push 0
        setRegister r:8
        pop
        branch label11
       label10:
        push r:8
        increment
        setRegister r:8
        pop
       label11:
        push r:8, r:7
        lessThan
        not
        branchIfTrue label13
        push r:6, r:8
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label12
        push r:6, r:8, NULL
        setMember
        branch label13
       label12:
        branch label10
       label13:
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}oQA7'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label14
        push r:6, r:7, NULL
        setMember
        push r:'}J', 1, r:6, 'unshift'
        callMethod
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label14:
      end // of function 

      setMember
      push r:1, '08M8'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label16
        push r:6, r:7, NULL
        setMember
        push r:5, '7-,'
        getMember
        push 1000
        equals
        not
        branchIfTrue label15
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label15:
        push r:5, '7-,'
        getMember
        setRegister r:3
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:3, r:4, 1000
        multiply
        add
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
        push r:6, r:3, r:'}J'
        setMember
       label16:
      end // of function 

      setMember
      push r:1, 'clear'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:4
        pop
        branch label18
       label17:
        push r:4
        increment
        setRegister r:4
        pop
       label18:
        push r:4, r:3, '7-,'
        getMember
        lessThan
        not
        branchIfTrue label19
        push 0, r:5, r:4
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label17
       label19:
        push r:3, '7-,', 0
        setMember
      end // of function 

      setMember
      push r:1, '9(K ;'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push -99999999
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label21
       label20:
        push r:6
        increment
        setRegister r:6
        pop
       label21:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label29
        push r:4, r:6
        getMember
        setRegister r:9
        pop
        push r:9, '_y'
        getMember
        setRegister r:10
        pop
        push r:10, r:8
        lessThan
        not
        not
        branchIfTrue label22
        push r:10
        setRegister r:8
        pop
        branch label28
       label22:
        push r:6
        setRegister r:7
        pop
        branch label24
       label23:
        push r:7
        decrement
        setRegister r:7
        pop
       label24:
        push r:7, 0
        greaterThan
        not
        branchIfTrue label27
        push r:4, r:7, 1
        subtract
        getMember
        setRegister r:11
        pop
        push r:11, '_y'
        getMember
        push r:10
        greaterThan
        not
        branchIfTrue label25
        push r:4, r:7, r:11
        setMember
        push r:11, 1, r:9, 'swapDepths'
        callMethod
        pop
        branch label26
       label25:
        push r:4, r:7, r:9
        setMember
        branch label27
       label26:
        branch label23
       label27:
        push r:7, 0
        equals
        not
        branchIfTrue label28
        push r:4, 0, r:9
        setMember
       label28:
        branch label20
       label29:
      end // of function 

      setMember
      push r:1, ',}2X ('
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label31
       label30:
        push r:2
        increment
        setRegister r:2
        pop
       label31:
        push r:2, r:this, '}Zms3'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label32
        push r:2, 1, r:this, 'clear'
        callMethod
        pop
        branch label30
       label32:
      end // of function 

      setMember
      push 'flash'
      getVariable
      not
      not
      branchIfTrue label33
      push 'flash', 0, 'Object'
      new
      setVariable
     label33:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      not
      not
      branchIfTrue label34
      push 'flash'
      getVariable
      push 'filters', 0, 'Object'
      new
      setMember
     label34:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      push '{lN=R'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setMember
      push '{-kxL'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '87vE7('
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '4plQ5', '{-kxL'
        getVariable
        push '4plQ5'
        getMember
        increment
        setMember
        push 0, '3Wt'
        getVariable
        push 'getTimer'
        callMethod
        setRegister r:2
        pop
        push '{-kxL'
        getVariable
        push ';ILSy', r:2, '{-kxL'
        getVariable
        push '3R,QM'
        getMember
        subtract
        push 1000.0
        divide
        setMember
        push '{-kxL'
        getVariable
        push '3R,QM', r:2
        setMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        push '{-kxL'
        getVariable
        push ';y}-6('
        getMember
        lessThan
        not
        branchIfTrue label35
        push '{-kxL'
        getVariable
        push '-)Xd+', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        push '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        multiply
        push 1, '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        subtract
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        multiply
        add
        setMember
        branch label36
       label35:
        push '{-kxL'
        getVariable
        push ';ILSy', 1, '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        divide
        setMember
       label36:
        push '{-kxL'
        getVariable
        push '-V;B', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        setMember
      end // of function 

      setMember
      push r:0, 'fps'
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        return
      end // of function 

      setMember
      push r:0, '6GI,F', 32
      setMember
      push r:0, ';y}-6(', 0.5
      setMember
      push r:0, '3R,QM', 0, '3Wt'
      getVariable
      push 'getTimer'
      callMethod
      setMember
      push r:0, '[Ad;n', 0.95
      setMember
      push r:0, '-)Xd+', 1
      setMember
      push r:0, '-V;B', 1
      setMember
      push r:0, ';ILSy', 1
      setMember
      push r:0, '4plQ5', 0
      setMember
      push '=3+P'
      function2 (r:2='0') (r:1='this')
        push r:this, '+-(0', r:'0'
        setMember
        push r:this, '}J', '=(,aA'
        getVariable
        push '*h0p]'
        getMember
        push '*mOK0', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, ')]0dN', 0, 'Array'
        new
        setMember
        push r:this, '5R', '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        push 1
        subtract
        push 2
        divide
        int
        setMember
        push r:this, '+}B(', '=3+P'
        getVariable
        push '-fQb'
        getMember
        setMember
        push r:this, ' IWA+', 0
        setMember
        push r:this, '}J'
        getMember
        push '_y', '=(,aA'
        getVariable
        push ')RL6t'
        getMember
        setMember
        push r:this, '}J'
        getMember
        push '_x', r:this, '5R'
        getMember
        setMember
        push r:this, '}J'
        getMember
        push '_xscale', 90
        setMember
        push r:this, '}J'
        getMember
        push '_yscale', 90
        setMember
        push 0, r:this, ';gtww'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, ';gtww'
      function2 () (r:1='this')
        push r:this, '}J'
        getMember
        push '6'
        getMember
        push '6'
        getMember
        setRegister r:2
        pop
        push 1, r:this, ')]0dN'
        getMember
        push 'length'
        getMember
        push 3
        greaterThan
        not
        branchIfTrue label37
        push 3
        branch label38
       label37:
        push r:this, ')]0dN'
        getMember
        push 'length'
        getMember
       label38:
        add
        toString
        push 1, r:2, 'gotoAndStop'
        callMethod
        pop
        push 1, r:this, ')]0dN'
        getMember
        push 0
        getMember
        push '*B'
        getMember
        add
        setRegister r:3
        pop
        push r:this, ')]0dN'
        getMember
        push 0
        getMember
        push '*tC0'
        getMember
        not
        branchIfTrue label39
        push '=(,aA'
        getVariable
        push '4MkO'
        getMember
        branch label40
       label39:
        push 0
       label40:
        push r:3
        add
        push 1, r:2, '3 7'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, ')]0dN'
        getMember
        push 1
        getMember
        push '*tC0'
        getMember
        not
        branchIfTrue label41
        push '=(,aA'
        getVariable
        push '4MkO'
        getMember
        branch label42
       label41:
        push 0
       label42:
        push r:3
        add
        push 1, r:2, '4 7'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, ')]0dN'
        getMember
        push 2
        getMember
        push '*tC0'
        getMember
        not
        branchIfTrue label43
        push '=(,aA'
        getVariable
        push '4MkO'
        getMember
        branch label44
       label43:
        push 0
       label44:
        push r:3
        add
        push 1, r:2, '5 7'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push '=(,aA'
        getVariable
        push '[[xeT'
        getMember
        push 1
        add
        push r:this, ')]0dN'
        getMember
        push 0
        getMember
        push '5955'
        getMember
        subtract
        push 1, r:2, '3 7'
        getMember
        push '0tJ'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '}J'
        getMember
        push '_xscale'
        getMember
        push 0
        lessThan
        push 1, r:this, 'reverse'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '()z9A('
      function2 (r:2='(') (r:1='this')
        push r:this, '+}B(', r:'('
        setMember
        push r:this, ' IWA+', 0
        setMember
      end // of function 

      setMember
      push r:1, ' _gkA'
      function2 () (r:1='this')
        push r:this, '+}B('
        getMember
        setRegister r:0
        push '=3+P'
        getVariable
        push '(*tR'
        getMember
        strictEquals
        branchIfTrue label45
        push r:0, '=3+P'
        getVariable
        push ';r98{'
        getMember
        strictEquals
        branchIfTrue label46
        push r:0, '=3+P'
        getVariable
        push ']tp'
        getMember
        strictEquals
        branchIfTrue label47
        push r:0, '=3+P'
        getVariable
        push '(qHaD('
        getMember
        strictEquals
        branchIfTrue label48
        push r:0, '=3+P'
        getVariable
        push ';-R]'
        getMember
        strictEquals
        branchIfTrue label49
        push r:0, '=3+P'
        getVariable
        push '3vnF{'
        getMember
        strictEquals
        branchIfTrue label50
        branch label51
       label45:
        push '=3+P'
        getVariable
        push ';r98{'
        getMember
        push 1, r:this, '()z9A('
        callMethod
        pop
        branch label51
       label46:
        push '=3+P'
        getVariable
        push '-fQb'
        getMember
        push 1, r:this, '()z9A('
        callMethod
        pop
        branch label51
       label47:
        push '=3+P'
        getVariable
        push '(qHaD('
        getMember
        push 1, r:this, '()z9A('
        callMethod
        pop
        branch label51
       label48:
        push '=3+P'
        getVariable
        push '-fQb'
        getMember
        push 1, r:this, '()z9A('
        callMethod
        pop
        branch label51
       label49:
        push '=3+P'
        getVariable
        push '3vnF{'
        getMember
        push 1, r:this, '()z9A('
        callMethod
        pop
        branch label51
       label50:
        push '=3+P'
        getVariable
        push '-fQb'
        getMember
        push 1, r:this, '()z9A('
        callMethod
        pop
        branch label51
       label51:
      end // of function 

      setMember
      push r:1, '0DF00'
      function2 (r:2='5') (r:1='this')
        push r:this, '+}B('
        getMember
        push '=3+P'
        getVariable
        push ';-R]'
        getMember
        equals
        not
        not
        branchIfTrue label52
        push '=3+P'
        getVariable
        push ';-R]'
        getMember
        push 1, r:this, '()z9A('
        callMethod
        pop
       label52:
        push r:'5', '}J'
        getMember
        push '_visible', FALSE
        setMember
        push r:'5', 1, r:this, ')]0dN'
        getMember
        push 'push'
        callMethod
        pop
        push 0, r:this, ';gtww'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, 'reverse'
      function2 (r:2='3C2') (r:1='this')
        push r:this, '}J'
        getMember
        push '_xscale', r:'3C2'
        not
        branchIfTrue label53
        push -90
        branch label54
       label53:
        push 90
       label54:
        setMember
        push r:this, '}J'
        getMember
        push '6'
        getMember
        push '6'
        getMember
        setRegister r:3
        pop
        push r:3, '_xscale', r:'3C2'
        not
        branchIfTrue label55
        push -100
        branch label56
       label55:
        push 100
       label56:
        setMember
      end // of function 

      setMember
      push r:1, '0D 6'
      function2 () (r:1='this')
        push FALSE, 1, r:this, '+-(0'
        getMember
        push '7IrKA'
        getMember
        push '}i3;,'
        callMethod
        setRegister r:2
        pop
        push r:this, '+}B('
        getMember
        push '=3+P'
        getVariable
        push '-fQb'
        getMember
        equals
        not
        dup
        not
        branchIfTrue label57
        pop
        push r:this, '+}B('
        getMember
        push '=3+P'
        getVariable
        push ';r98{'
        getMember
        equals
        not
       label57:
        dup
        not
        branchIfTrue label58
        pop
        push r:this, '+}B('
        getMember
        push '=3+P'
        getVariable
        push '(qHaD('
        getMember
        equals
        not
       label58:
        dup
        not
        branchIfTrue label59
        pop
        push r:this, '+}B('
        getMember
        push '=3+P'
        getVariable
        push '3vnF{'
        getMember
        equals
        not
       label59:
        not
        branchIfTrue label60
        push TRUE
        setRegister r:2
        pop
       label60:
        push r:this, '+}B('
        getMember
        push '=3+P'
        getVariable
        push '(*tR'
        getMember
        equals
        not
        dup
        not
        branchIfTrue label61
        pop
        push r:this, '+}B('
        getMember
        push '=3+P'
        getVariable
        push ';-R]'
        getMember
        equals
        not
       label61:
        dup
        not
        branchIfTrue label62
        pop
        push r:this, '+-(0'
        getMember
        push '7IrKA'
        getMember
        push '8=00'
        getMember
        push 'length'
        getMember
        push 0
        equals
       label62:
        not
        branchIfTrue label66
        push 'Key'
        getVariable
        push 'LEFT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        dup
        not
        branchIfTrue label63
        pop
        push r:this, '5R'
        getMember
        push 0
        greaterThan
       label63:
        not
        branchIfTrue label64
        push r:this, '5R', r:this, '5R'
        getMember
        decrement
        setMember
        push TRUE, 1, r:this, 'reverse'
        callMethod
        pop
        push '=3+P'
        getVariable
        push '(*tR'
        getMember
        push 1, r:this, '()z9A('
        callMethod
        pop
        branch label66
       label64:
        push 'Key'
        getVariable
        push 'RIGHT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        dup
        not
        branchIfTrue label65
        pop
        push r:this, '5R'
        getMember
        push '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        push 1
        subtract
        lessThan
       label65:
        not
        branchIfTrue label66
        push r:this, '5R', r:this, '5R'
        getMember
        increment
        setMember
        push FALSE, 1, r:this, 'reverse'
        callMethod
        pop
        push '=3+P'
        getVariable
        push '(*tR'
        getMember
        push 1, r:this, '()z9A('
        callMethod
        pop
       label66:
        push r:this, ')]0dN'
        getMember
        push 'length'
        getMember
        push 0
        greaterThan
        dup
        not
        branchIfTrue label67
        pop
        push 'Key'
        getVariable
        push 'DOWN'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
       label67:
        not
        branchIfTrue label68
        push r:this, '{cv0s', TRUE
        setMember
       label68:
        push r:2
        not
        not
        branchIfTrue label82
        push 'Key'
        getVariable
        push 'UP'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label75
        push r:this, ',6He-'
        getMember
        not
        not
        branchIfTrue label74
        push r:this, ',6He-', TRUE
        setMember
        push r:this, ')]0dN'
        getMember
        push 0
        getMember
        push '*B'
        getMember
        setRegister r:3
        pop
        push FALSE
        setRegister r:5
        pop
       label69:
        push r:3, r:this, '5R'
        getMember
        push 2, r:this, '+-(0'
        getMember
        push '=HU11'
        getMember
        push ';YK2v'
        callMethod
        setRegister r:4
        push NULL
        equals
        not
        not
        branchIfTrue label73
        push r:4, '*B'
        getMember
        setRegister r:3
        pop
        push r:4, 1, r:this, '+-(0'
        getMember
        push '7IrKA'
        getMember
        push '0DF00'
        callMethod
        pop
        push r:4, '*B'
        getMember
        push '=(,aA'
        getVariable
        push ',OYKA'
        getMember
        equals
        not
        dup
        not
        branchIfTrue label70
        pop
        push r:4, '*B'
        getMember
        push '=(,aA'
        getVariable
        push ',L+a)('
        getMember
        equals
        not
       label70:
        dup
        not
        branchIfTrue label71
        pop
        push r:4, '*B'
        getMember
        push '=(,aA'
        getVariable
        push '+L+a)('
        getMember
        equals
        not
       label71:
        not
        branchIfTrue label72
        push TRUE
        setRegister r:5
        pop
       label72:
        branch label69
       label73:
        push r:5
        not
        branchIfTrue label74
        push '=3+P'
        getVariable
        push '3[wi-'
        getMember
        push 1, r:this, '()z9A('
        callMethod
        pop
       label74:
        branch label76
       label75:
        push r:this, ',6He-', FALSE
        setMember
       label76:
        push r:this, '{cv0s'
        getMember
        not
        branchIfTrue label82
        push r:this, '{cv0s', FALSE
        setMember
        push 0
        setRegister r:6
        pop
        push 0
        setRegister r:7
        pop
        branch label78
       label77:
        push r:7
        increment
        setRegister r:7
        pop
       label78:
        push r:7, r:this, ')]0dN'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label81
        push r:this, ')]0dN'
        getMember
        push r:7
        getMember
        setRegister r:8
        pop
        push r:8, r:this, '5R'
        getMember
        push 2, r:this, '+-(0'
        getMember
        push '=HU11'
        getMember
        push '6F WG'
        callMethod
        setRegister r:9
        pop
        push r:8, '}QNv1', TRUE
        setMember
        push r:9, -1
        equals
        not
        branchIfTrue label79
        push r:7, r:6
        decrement
        setRegister r:0
        setRegister r:6
        pop
        push r:0, r:this, '5R'
        getMember
        push r:8, 4, r:this, '+-(0'
        getMember
        push '7IrKA'
        getMember
        push '}k_z9('
        callMethod
        pop
        push r:8, 1, r:this, '+-(0'
        getMember
        push '3ng)-('
        getMember
        push 'push'
        callMethod
        pop
        branch label80
       label79:
        push r:7, r:9, r:this, '5R'
        getMember
        push r:8, 4, r:this, '+-(0'
        getMember
        push '7IrKA'
        getMember
        push '}k_z9('
        callMethod
        pop
       label80:
        push '=3+P'
        getVariable
        push ']tp'
        getMember
        push 1, r:this, '()z9A('
        callMethod
        pop
        branch label77
       label81:
        push r:this, ')]0dN', 0, 'Array'
        new
        setMember
        push r:this, '+-(0'
        getMember
        push '13(0C', 0, 1
        initArray
        setMember
        push 0, r:this, ';gtww'
        callMethod
        pop
       label82:
        push r:this, ' IWA+', r:this, ' IWA+'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        add
        setMember
        push r:this, ' IWA+'
        getMember
        push r:this, '+}B('
        getMember
        push 'length'
        getMember
        lessThan
        not
        not
        branchIfTrue label83
        push 0, r:this, ' _gkA'
        callMethod
        pop
        push r:this, ' IWA+', r:this, ' IWA+'
        getMember
        push r:this, '+}B('
        getMember
        push 'length'
        getMember
        modulo
        setMember
       label83:
        push r:this, '+}B('
        getMember
        push r:this, ' IWA+'
        getMember
        int
        getMember
        toString
        push 1, r:this, '}J'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '}J'
        getMember
        push '_x', r:this, '5R'
        getMember
        push 30
        multiply
        push '=(,aA'
        getVariable
        push '9u'
        getMember
        add
        setMember
      end // of function 

      setMember
      push r:0, '-fQb', 1, 1
      initArray
      setMember
      push r:0, '3[wi-', 1, 1
      initArray
      setMember
      push r:0, '(*tR', 13, 12, 11, 10, 9, 8, 6
      initArray
      setMember
      push r:0, ';r98{', 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 11
      initArray
      setMember
      push r:0, ';-R]', 31, 30, 29, 28, 27, 5
      initArray
      setMember
      push r:0, '3vnF{', 39, 38, 37, 36, 35, 34, 33, 32, 8
      initArray
      setMember
      push r:0, ']tp', 44, 43, 42, 3
      initArray
      setMember
      push r:0, '(qHaD(', 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 14
      initArray
      setMember
      push '-fbpG'
      function2 (r:2='0', r:3='*B', r:4='((', r:5=')(') (r:1='this')
        push r:this, '+-(0', r:'0'
        setMember
        push r:this, '*B', r:'*B'
        setMember
        push r:this, '}J', '=(,aA'
        getVariable
        push ' v+J-'
        getMember
        push '0]7s4', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '}J'
        getMember
        push '_x', r:'((', 30
        multiply
        push '=(,aA'
        getVariable
        push '9u'
        getMember
        add
        setMember
        push r:this, '}J'
        getMember
        push '_y', r:')(', 30
        multiply
        push '=(,aA'
        getVariable
        push ';u'
        getMember
        add
        setMember
        push r:'*B', 1
        add
        toString
        push 1, r:this, '}J'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push 0, r:this, '}J'
        getMember
        push '0tJ'
        getMember
        push 'stop'
        callMethod
        pop
        push r:this, '5955', '=(,aA'
        getVariable
        push '[[xeT'
        getMember
        setMember
        push r:this, '*tC0', r:'*B', '=(,aA'
        getVariable
        push '4MkO'
        getMember
        lessThan
        not
        dup
        not
        branchIfTrue label84
        pop
        push r:'*B', '=(,aA'
        getVariable
        push '4MkO'
        getMember
        push 6
        add
        lessThan
       label84:
        setMember
        push r:this, '*tC0'
        getMember
        not
        branchIfTrue label85
        push r:this, '*B', r:this, '*B'
        getMember
        push '=(,aA'
        getVariable
        push '4MkO'
        getMember
        subtract
        setMember
       label85:
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '=jr=E'
      function2 () (r:1='this')
        push r:this, '*B'
        getMember
        setRegister r:0
        push '=(,aA'
        getVariable
        push ',OYKA'
        getMember
        strictEquals
        branchIfTrue label86
        push r:0, '=(,aA'
        getVariable
        push ',L+a)('
        getMember
        strictEquals
        branchIfTrue label90
        push r:0, '=(,aA'
        getVariable
        push '+L+a)('
        getMember
        strictEquals
        branchIfTrue label90
        branch label95
       label86:
        push r:this, '2VhU6', 0
        setMember
        push 0
        setRegister r:2
        pop
        branch label88
       label87:
        push r:2
        increment
        setRegister r:2
        pop
       label88:
        push r:2, 8
        lessThan
        not
        branchIfTrue label89
        push '2]9H;(', 1, r:this, '+-(0'
        getMember
        push '7IrKA'
        getMember
        push '{==W3('
        callMethod
        setRegister r:3
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:4
        pop
        push r:4, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:5
        pop
        push r:4, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:6
        pop
        push 16
        setRegister r:7
        pop
        push 0.5, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.5
        multiply
        add
        setRegister r:8
        pop
        push r:3, '_x', r:this, '}J'
        getMember
        push '_x'
        getMember
        push r:5, r:7
        multiply
        add
        setMember
        push r:3, '_y', r:this, '}J'
        getMember
        push '_y'
        getMember
        push r:6, r:7
        multiply
        add
        setMember
        push r:3, '[b', r:5, r:8
        multiply
        setMember
        push r:3, ']b', r:6, r:8
        multiply
        setMember
        push r:3, '+{eA+', 0.96
        setMember
        push r:3, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        branch label87
       label89:
        push 0, r:this, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label99
       label90:
        push ']zL8C('
        setRegister r:9
        pop
        push r:this, '*B'
        getMember
        push '=(,aA'
        getVariable
        push ',L+a)('
        getMember
        equals
        not
        branchIfTrue label91
        push '1c;(=('
        setRegister r:9
        pop
       label91:
        push 0
        setRegister r:10
        pop
        branch label93
       label92:
        push r:10
        increment
        setRegister r:10
        pop
       label93:
        push r:10, 24
        lessThan
        not
        branchIfTrue label94
        push r:9, 1, r:this, '+-(0'
        getMember
        push '7IrKA'
        getMember
        push '{==W3('
        callMethod
        setRegister r:11
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:12
        pop
        push r:12, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:13
        pop
        push r:12, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:14
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 20
        multiply
        setRegister r:15
        pop
        push 1, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 5
        multiply
        add
        setRegister r:16
        pop
        push r:11, '_x', r:this, '}J'
        getMember
        push '_x'
        getMember
        push r:13, r:15
        multiply
        add
        setMember
        push r:11, '_y', r:this, '}J'
        getMember
        push '_y'
        getMember
        push r:14, r:15
        multiply
        add
        setMember
        push r:11, '[b', r:13, r:16
        multiply
        setMember
        push r:11, ']b', 0, r:14, r:16
        multiply
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        subtract
        setMember
        push r:11, '6b', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 20
        multiply
        setMember
        push r:11, ')Z2', 0.98
        setMember
        push r:11, '+{eA+', 0.97
        setMember
        push r:11, '(KpGn', 0.05, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.2
        multiply
        add
        setMember
        push r:11, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 35
        multiply
        add
        setMember
        push r:11, 'scale', 50, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 60
        multiply
        add
        setMember
        push r:11, '_xscale', r:11, 'scale'
        getMember
        setMember
        push r:11, '_yscale', r:11, 'scale'
        getMember
        setMember
        push r:11, '_totalframes'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        add
        toString
        push 1, r:11, 'gotoAndPlay'
        callMethod
        pop
        branch label92
       label94:
        push 0, r:this, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label99
       label95:
        push 0
        setRegister r:17
        pop
        branch label97
       label96:
        push r:17
        increment
        setRegister r:17
        pop
       label97:
        push r:17, 8
        lessThan
        not
        branchIfTrue label98
        push ',+TFu', 1, r:this, '+-(0'
        getMember
        push '7IrKA'
        getMember
        push '{==W3('
        callMethod
        setRegister r:18
        pop
        push r:18, '_x', r:this, '}J'
        getMember
        push '_x'
        getMember
        setMember
        push r:18, '_y', r:this, '}J'
        getMember
        push '_y'
        getMember
        setMember
        push r:18, '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        push r:18, '_xscale', 30, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 60
        multiply
        add
        setMember
        push r:18, 'scale', 150, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 350
        multiply
        add
        setMember
        push r:18, '_yscale', r:18, 'scale'
        getMember
        setMember
        push r:18, '6b', 0.5, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 4
        multiply
        add
        setMember
        push r:18, ')Z2', 0.9, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.1
        multiply
        add
        setMember
        push r:18, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:18, '+7', 0
        setMember
        push r:18, '_totalframes'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1
        add
        toString
        push 1, r:18, 'gotoAndStop'
        callMethod
        pop
        branch label96
       label98:
        push r:this, '2VhU6', 0
        setMember
        push '6-6 t', 1, r:this, '+-(0'
        getMember
        push '7IrKA'
        getMember
        push '{==W3('
        callMethod
        setRegister r:19
        pop
        push r:19, '_x', r:this, '}J'
        getMember
        push '_x'
        getMember
        setMember
        push r:19, '_y', r:this, '}J'
        getMember
        push '_y'
        getMember
        setMember
        branch label99
       label99:
      end // of function 

      setMember
      push r:1, '-cLYz'
      function2 () (r:1='this')
        push r:this, '*B'
        getMember
        setRegister r:0
        push '=(,aA'
        getVariable
        push ',L+a)('
        getMember
        strictEquals
        branchIfTrue label100
        push r:0, '=(,aA'
        getVariable
        push '+L+a)('
        getMember
        strictEquals
        branchIfTrue label100
        branch label105
       label100:
        push 0
        setRegister r:2
        pop
        branch label102
       label101:
        push r:2
        increment
        setRegister r:2
        pop
       label102:
        push r:2, 8
        lessThan
        not
        branchIfTrue label104
        push '33EIy', 1, r:this, '+-(0'
        getMember
        push '7IrKA'
        getMember
        push '{==W3('
        callMethod
        setRegister r:3
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:4
        pop
        push r:4, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:5
        pop
        push r:4, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:6
        pop
        push 8
        setRegister r:7
        pop
        push 1, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 3
        multiply
        add
        setRegister r:8
        pop
        push r:3, '_x', r:this, '}J'
        getMember
        push '_x'
        getMember
        push r:5, r:7
        multiply
        add
        setMember
        push r:3, '_y', r:this, '}J'
        getMember
        push '_y'
        getMember
        push r:6, r:7
        multiply
        add
        setMember
        push r:3, '[b', r:5, r:8
        multiply
        setMember
        push r:3, ']b', r:6, r:8
        multiply
        setMember
        push r:3, '+{eA+', 0.96
        setMember
        push r:3, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:3, 'scale', 50, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 80
        multiply
        add
        setMember
        push r:3, '_xscale', r:3, 'scale'
        getMember
        setMember
        push r:3, '_yscale', r:3, 'scale'
        getMember
        setMember
        push 1
        setRegister r:9
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.5
        lessThan
        not
        branchIfTrue label103
        push 2
        setRegister r:9
        pop
        push r:this, '*B'
        getMember
        push '=(,aA'
        getVariable
        push ',L+a)('
        getMember
        equals
        not
        branchIfTrue label103
        push 3
        setRegister r:9
        pop
       label103:
        push r:9
        toString
        push 1, r:3, 'gotoAndStop'
        callMethod
        pop
        branch label101
       label104:
        push '-RDz6', 1, r:this, '+-(0'
        getMember
        push '7IrKA'
        getMember
        push '{==W3('
        callMethod
        setRegister r:10
        pop
        push r:10, '_x', r:this, '}J'
        getMember
        push '_x'
        getMember
        setMember
        push r:10, '_y', r:this, '}J'
        getMember
        push '_y'
        getMember
        setMember
        push 150
        setRegister r:11
        pop
        push r:10, '_xscale', r:11
        setMember
        push r:10, '_yscale', r:11
        setMember
        push 0, r:this, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label109
       label105:
        push 0
        setRegister r:12
        pop
        branch label107
       label106:
        push r:12
        increment
        setRegister r:12
        pop
       label107:
        push r:12, 8
        lessThan
        not
        branchIfTrue label108
        push ']x}EI(', 1, r:this, '+-(0'
        getMember
        push '7IrKA'
        getMember
        push '{==W3('
        callMethod
        setRegister r:13
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:14
        pop
        push r:14, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:15
        pop
        push r:14, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:16
        pop
        push 6, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setRegister r:17
        pop
        push 0.5, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 3
        multiply
        add
        setRegister r:18
        pop
        push r:13, '_x', r:this, '}J'
        getMember
        push '_x'
        getMember
        push r:15, r:17
        multiply
        add
        setMember
        push r:13, '_y', r:this, '}J'
        getMember
        push '_y'
        getMember
        push r:16, r:17
        multiply
        add
        setMember
        push r:13, '[b', r:15, r:18
        multiply
        setMember
        push r:13, ']b', r:16, r:18
        multiply
        setMember
        push r:13, '+{eA+', 0.96
        setMember
        push r:13, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        branch label106
       label108:
        push '-RDz6', 1, r:this, '+-(0'
        getMember
        push '7IrKA'
        getMember
        push '{==W3('
        callMethod
        setRegister r:19
        pop
        push r:19, '_x', r:this, '}J'
        getMember
        push '_x'
        getMember
        setMember
        push r:19, '_y', r:this, '}J'
        getMember
        push '_y'
        getMember
        setMember
        push 0, r:this, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label109
       label109:
      end // of function 

      setMember
      push r:1, '08ewd'
      function2 () (r:1='this')
        push r:this, '*B'
        getMember
        setRegister r:0
        push '=(,aA'
        getVariable
        push ',OYKA'
        getMember
        strictEquals
        branchIfTrue label110
        branch label111
       label110:
        push FALSE
        return
       label111:
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        add
        setMember
        push 16777215, 100, r:this, '2VhU6'
        getMember
        push 25
        multiply
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        push r:this, '}J'
        getMember
        push 3, '=(,aA'
        getVariable
        push ';CYOh'
        callMethod
        pop
        push 10
        setRegister r:2
        pop
        push r:this, '2VhU6'
        getMember
        push r:2
        greaterThan
        not
        branchIfTrue label112
        push r:this, '}J'
        getMember
        push '_xscale', r:this, '}J'
        getMember
        push '_xscale'
        getMember
        push r:this, '2VhU6'
        getMember
        push r:2
        subtract
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        setMember
        push r:this, '}J'
        getMember
        push '_yscale', r:this, '}J'
        getMember
        push '_xscale'
        getMember
        setMember
        push r:this, '2VhU6', r:this, '2VhU6'
        getMember
        push 2, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label112:
        push r:this, '}J'
        getMember
        push '_xscale'
        getMember
        push 0
        greaterThan
        not
        not
        branchIfTrue label113
        push 0, r:this, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push FALSE
        return
       label113:
        branch label114
       label114:
        push TRUE
        return
      end // of function 

      setMember
      push r:1, '5_qm*'
      function2 () (r:1='this')
        push r:this, '5955', r:this, '5955'
        getMember
        decrement
        setMember
        push 0
        setRegister r:2
        pop
        branch label116
       label115:
        push r:2
        increment
        setRegister r:2
        pop
       label116:
        push r:2, 8
        lessThan
        not
        branchIfTrue label117
        push '3cyQK(', 1, r:this, '+-(0'
        getMember
        push '7IrKA'
        getMember
        push '{==W3('
        callMethod
        setRegister r:3
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:4
        pop
        push r:4, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        setRegister r:5
        pop
        push r:4, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        setRegister r:6
        pop
        push 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 5
        multiply
        add
        setRegister r:7
        pop
        push r:3, '_x', r:this, '}J'
        getMember
        push '_x'
        getMember
        push r:5, r:7
        multiply
        add
        setMember
        push r:3, '_y', r:this, '}J'
        getMember
        push '_y'
        getMember
        push r:6, r:7
        multiply
        add
        setMember
        push r:3, '[b', 0
        setMember
        push r:3, ']b', 0
        setMember
        push r:3, '+{eA+', 0.96
        setMember
        push r:3, '(KpGn', 0.2, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.5
        multiply
        add
        setMember
        push r:3, '2VhU6', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        branch label115
       label117:
        push '=(,aA'
        getVariable
        push '[[xeT'
        getMember
        push 1
        add
        push r:this, '5955'
        getMember
        subtract
        toString
        push 1, r:this, '}J'
        getMember
        push '0tJ'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, '5955'
        getMember
        push 0
        equals
        not
        branchIfTrue label121
        push 2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label118
        push 0, r:this, '}J'
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        push FALSE
        return
       label118:
        push r:this, '*B', '=(,aA'
        getVariable
        push ',L+a)('
        getMember
        push 20, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label119
        push 1
        branch label120
       label119:
        push 0
       label120:
        add
        setMember
        push r:this, '*B'
        getMember
        push 1
        add
        toString
        push 1, r:this, '}J'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
       label121:
        push TRUE
        return
      end // of function 

      setMember
      push '(WBt)'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ']}Ou;(', 1
      setMember
      push r:0, '3I0pG', 2
      setMember
      push r:0, '{;7F4', 3
      setMember
      push r:0, '8U(wu', 4
      setMember
      push r:0, '}[cpB', 5
      setMember
      push r:0, '9xv]A', 6
      setMember
      push r:0, '{yQ=Q', 7
      setMember
      push r:0, '+,W', 8
      setMember
      push r:0, '2y+dV', 9
      setMember
      push r:0, '(tBee', 10
      setMember
      push r:0, '3)i[=', 11
      setMember
      push r:0, ' J3IC', 12
      setMember
      push r:0, '[6jRc', 13
      setMember
      push r:0, ')8Fyj', 14
      setMember
      push '0vWVG'
      function2 (r:2='0') (r:1='this')
        push r:this, 'width', '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        setMember
        push r:this, 'height', '=(,aA'
        getVariable
        push '*sd+;('
        getMember
        setMember
        push r:this, '+-(0', r:'0'
        setMember
        push r:this, ')]0dN', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:3
        pop
        branch label123
       label122:
        push r:3
        increment
        setRegister r:3
        pop
       label123:
        push r:3, r:this, 'width'
        getMember
        lessThan
        not
        branchIfTrue label124
        push r:this, ')]0dN'
        getMember
        push r:3, 0, 'Array'
        new
        setMember
        branch label122
       label124:
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '8We+Z'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label126
       label125:
        push r:2
        increment
        setRegister r:2
        pop
       label126:
        push r:2, r:this, 'width'
        getMember
        lessThan
        not
        branchIfTrue label127
        push NULL, r:2, 2, r:this, ';7X*g'
        callMethod
        pop
        branch label125
       label127:
      end // of function 

      setMember
      push r:1, ';7X*g'
      function2 (r:2='((', r:3='5') (r:1='this')
        push r:this, ')]0dN'
        getMember
        push r:'(('
        getMember
        push 0
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label128
        push FALSE
        return
       label128:
        push 1
        setRegister r:4
        pop
        branch label130
       label129:
        push r:4
        increment
        setRegister r:4
        pop
       label130:
        push r:4, r:this, 'height'
        getMember
        lessThan
        not
        branchIfTrue label131
        push r:this, ')]0dN'
        getMember
        push r:'(('
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push r:this, ')]0dN'
        getMember
        push r:'(('
        getMember
        push r:4, 1
        subtract
        push r:5
        setMember
        push r:5, 1, r:this, '+-(0'
        getMember
        push '7IrKA'
        getMember
        push '0Cs7K'
        callMethod
        pop
        branch label129
       label131:
        push r:'5', NULL
        equals
        not
        branchIfTrue label132
        push r:this, 'height'
        getMember
        push r:'((', 0, r:this, '+-(0'
        getMember
        push ';MG2D'
        callMethod
        push r:this, '+-(0'
        getMember
        push 4, '-fbpG'
        new
        setRegister r:'5'
        pop
        push r:'5', 1, r:this, '+-(0'
        getMember
        push '7IrKA'
        getMember
        push '0Cs7K'
        callMethod
        pop
       label132:
        push r:this, ')]0dN'
        getMember
        push r:'(('
        getMember
        push r:this, 'height'
        getMember
        push 1
        subtract
        push r:'5'
        setMember
        push TRUE
        return
      end // of function 

      setMember
      push r:1, ';YK2v'
      function2 (r:2='((', r:3='*B') (r:1='this')
        push 0
        setRegister r:4
        pop
        branch label134
       label133:
        push r:4
        increment
        setRegister r:4
        pop
       label134:
        push r:4, r:this, 'height'
        getMember
        lessThan
        not
        branchIfTrue label140
        push r:this, ')]0dN'
        getMember
        push r:'(('
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push r:5, NULL
        equals
        not
        not
        branchIfTrue label139
        push r:5, '*B'
        getMember
        push r:'*B'
        equals
        dup
        branchIfTrue label135
        pop
        push r:'*B', NULL
        equals
       label135:
        dup
        not
        branchIfTrue label136
        pop
        push r:'*B', '=(,aA'
        getVariable
        push ' KZiK'
        getMember
        equals
        not
       label136:
        dup
        not
        branchIfTrue label137
        pop
        push r:5, '*B'
        getMember
        push '=(,aA'
        getVariable
        push ',OYKA'
        getMember
        equals
        not
       label137:
        not
        branchIfTrue label138
        push r:this, ')]0dN'
        getMember
        push r:'(('
        getMember
        push r:4, NULL
        setMember
        push r:5
        return
       label138:
        push NULL
        return
       label139:
        branch label133
       label140:
        push NULL
        return
      end // of function 

      setMember
      push r:1, '8F)jE('
      function2 (r:2='((') (r:1='this')
        push 0
        setRegister r:3
        pop
        branch label142
       label141:
        push r:3
        increment
        setRegister r:3
        pop
       label142:
        push r:3, r:this, 'height'
        getMember
        lessThan
        not
        branchIfTrue label144
        push r:this, ')]0dN'
        getMember
        push r:'(('
        getMember
        push r:3
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label143
        branch label144
       label143:
        branch label141
       label144:
        push r:3
        return
      end // of function 

      setMember
      push r:1, '[VAKp'
      function2 () (r:1='this')
        push 0
        setRegister r:4
        pop
        push 0
        setRegister r:2
        pop
        branch label146
       label145:
        push r:2
        increment
        setRegister r:2
        pop
       label146:
        push r:2, r:this, 'width'
        getMember
        lessThan
        not
        branchIfTrue label152
        push 0
        setRegister r:3
        pop
        branch label148
       label147:
        push r:3
        increment
        setRegister r:3
        pop
       label148:
        push r:3, r:this, 'height'
        getMember
        lessThan
        not
        branchIfTrue label150
        push r:this, ')]0dN'
        getMember
        push r:2
        getMember
        push r:3
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label149
        branch label150
       label149:
        branch label147
       label150:
        push r:this, 'height'
        getMember
        push r:3
        subtract
        push r:4
        greaterThan
        not
        branchIfTrue label151
        push r:this, 'height'
        getMember
        push r:3
        subtract
        setRegister r:4
        pop
       label151:
        branch label145
       label152:
        push r:4
        return
      end // of function 

      setMember
      push r:1, '6F WG'
      function2 (r:2='((', r:3='5') (r:1='this')
        push 0
        setRegister r:4
        pop
        branch label154
       label153:
        push r:4
        increment
        setRegister r:4
        pop
       label154:
        push r:4, r:this, 'height'
        getMember
        lessThan
        not
        branchIfTrue label156
        push r:this, ')]0dN'
        getMember
        push r:'(('
        getMember
        push r:4
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label155
        branch label156
       label155:
        branch label153
       label156:
        push r:4
        decrement
        setRegister r:4
        pop
        push r:4, 0
        lessThan
        not
        not
        branchIfTrue label157
        push r:this, ')]0dN'
        getMember
        push r:'(('
        getMember
        push r:4, r:'5'
        setMember
       label157:
        push r:4
        return
      end // of function 

      setMember
      push r:1, ']c{=e'
      function2 (r:2='*', r:3=')', r:4='((', r:5=')(', r:6='*B') (r:1='this')
        push r:this, ')]0dN'
        getMember
        push r:'(('
        getMember
        push r:')('
        getMember
        setRegister r:7
        pop
        push r:this, ')]0dN'
        getMember
        push r:'(('
        getMember
        push r:')(', NULL
        setMember
        push r:7, '}QNv1', FALSE
        setMember
        push r:7, 1, r:'*', 'push'
        callMethod
        pop
        push r:this, ')]0dN'
        getMember
        push r:'(('
        getMember
        push r:')(', 1
        subtract
        getMember
        setRegister r:7
        pop
        push r:7, '*B'
        getMember
        push r:'*B'
        equals
        not
        branchIfTrue label158
        push r:'*B', r:')(', 1
        subtract
        push r:'((', r:')', r:'*', 5, r:this, ']c{=e'
        callMethod
        pop
        branch label159
       label158:
        push r:7, '88rS(', FALSE
        setMember
        push '((', r:'((', ')(', r:')(', 1
        subtract
        push '5', r:7, 3
        initObject
        push 1, r:')', 'push'
        callMethod
        pop
       label159:
        push r:this, ')]0dN'
        getMember
        push r:'(('
        getMember
        push r:')(', 1
        add
        getMember
        setRegister r:7
        pop
        push r:7, '*B'
        getMember
        push r:'*B'
        equals
        not
        branchIfTrue label160
        push r:'*B', r:')(', 1
        add
        push r:'((', r:')', r:'*', 5, r:this, ']c{=e'
        callMethod
        pop
        branch label161
       label160:
        push r:7, '88rS(', FALSE
        setMember
        push '((', r:'((', ')(', r:')(', 1
        add
        push '5', r:7, 3
        initObject
        push 1, r:')', 'push'
        callMethod
        pop
       label161:
        push r:this, ')]0dN'
        getMember
        push r:'((', 1
        subtract
        getMember
        push r:')('
        getMember
        setRegister r:7
        pop
        push r:7, '*B'
        getMember
        push r:'*B'
        equals
        not
        branchIfTrue label162
        push r:'*B', r:')(', r:'((', 1
        subtract
        push r:')', r:'*', 5, r:this, ']c{=e'
        callMethod
        pop
        branch label163
       label162:
        push r:7, '88rS(', FALSE
        setMember
        push '((', r:'((', 1
        subtract
        push ')(', r:')(', '5', r:7, 3
        initObject
        push 1, r:')', 'push'
        callMethod
        pop
       label163:
        push r:this, ')]0dN'
        getMember
        push r:'((', 1
        add
        getMember
        push r:')('
        getMember
        setRegister r:7
        pop
        push r:7, '*B'
        getMember
        push r:'*B'
        equals
        not
        branchIfTrue label164
        push r:'*B', r:')(', r:'((', 1
        add
        push r:')', r:'*', 5, r:this, ']c{=e'
        callMethod
        pop
        branch label165
       label164:
        push r:7, '88rS(', FALSE
        setMember
        push '((', r:'((', 1
        add
        push ')(', r:')(', '5', r:7, 3
        initObject
        push 1, r:')', 'push'
        callMethod
        pop
       label165:
      end // of function 

      setMember
      push r:1, '7;UEF('
      function2 (r:2='((', r:3=')(', r:4='*B') (r:1='this')
        push 1
        setRegister r:5
        pop
        push r:'(('
        setRegister r:6
        pop
        push r:')(', 1
        add
        setRegister r:7
        pop
       label166:
        push r:this, ')]0dN'
        getMember
        push r:'(('
        getMember
        push r:7
        getMember
        push '*B'
        getMember
        push r:'*B'
        equals
        not
        branchIfTrue label167
        push r:7
        increment
        setRegister r:7
        pop
        push r:5
        increment
        setRegister r:5
        pop
        branch label166
       label167:
        push r:5, 3
        lessThan
        not
        branchIfTrue label169
        push r:')(', 1
        subtract
        setRegister r:7
        pop
       label168:
        push r:this, ')]0dN'
        getMember
        push r:'(('
        getMember
        push r:7
        getMember
        push '*B'
        getMember
        push r:'*B'
        equals
        not
        branchIfTrue label169
        push r:7
        decrement
        setRegister r:7
        pop
        push r:5
        increment
        setRegister r:5
        pop
        branch label168
       label169:
        push r:5, 3
        lessThan
        not
        not
        branchIfTrue label170
        push 0, 'Array'
        new
        setRegister r:8
        pop
        push 0, 'Array'
        new
        setRegister r:9
        pop
        push r:'*B', r:')(', r:'((', r:9, r:8, 5, r:this, ']c{=e'
        callMethod
        pop
        push '((', r:8, ')', r:9, 2
        initObject
        return
       label170:
        push NULL
        return
      end // of function 

      setMember
      push r:1, '88rS('
      function2 (r:2='(', r:3='((', r:4=')(') (r:1='this')
        push r:this, ')]0dN'
        getMember
        push r:'(('
        getMember
        push r:')('
        getMember
        setRegister r:5
        pop
        push r:5, NULL
        equals
        not
        branchIfTrue label171
        push UNDEF
        return
       label171:
        push '((', r:'((', ')(', r:')(', '5', r:5, 3
        initObject
        push 1, r:'(', 'push'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '06P_n'
      function2 () (r:1='this')
        push 0, 'Array'
        new
        setRegister r:5
        pop
        push 0, 'Array'
        new
        setRegister r:6
        pop
        push 0, 'Array'
        new
        setRegister r:9
        pop
        push 0
        setRegister r:2
        pop
        branch label173
       label172:
        push r:2
        increment
        setRegister r:2
        pop
       label173:
        push r:2, r:this, 'width'
        getMember
        lessThan
        not
        branchIfTrue label183
        push r:this, ')]0dN'
        getMember
        push r:2
        getMember
        setRegister r:10
        pop
        push 0
        setRegister r:3
        pop
        branch label175
       label174:
        push r:3
        increment
        setRegister r:3
        pop
       label175:
        push r:3, r:this, 'height'
        getMember
        lessThan
        not
        branchIfTrue label182
        push r:10, r:3
        getMember
        setRegister r:11
        pop
        push r:11, '}QNv1'
        getMember
        not
        branchIfTrue label181
        push r:11, '}QNv1', FALSE
        setMember
        push r:11, '*B'
        getMember
        push '=(,aA'
        getVariable
        push ' KZiK'
        getMember
        equals
        not
        branchIfTrue label176
        branch label174
       label176:
        push r:11, '*B'
        getMember
        push r:3, r:2, 3, r:this, '7;UEF('
        callMethod
        setRegister r:12
        pop
        push r:12, NULL
        equals
        not
        not
        branchIfTrue label181
        push 0
        setRegister r:7
        pop
        branch label178
       label177:
        push r:7
        increment
        setRegister r:7
        pop
       label178:
        push r:7, r:12, '(('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label180
        push r:12, '(('
        getMember
        push r:7
        getMember
        push '*tC0'
        getMember
        not
        branchIfTrue label179
        push r:11, '*B'
        getMember
        push 1, r:9, 'push'
        callMethod
        pop
        branch label180
       label179:
        branch label177
       label180:
        push r:12, '(('
        getMember
        push 1, r:5, 'push'
        callMethod
        pop
        push r:12, ')'
        getMember
        push 1, r:6, 'push'
        callMethod
        pop
       label181:
        branch label174
       label182:
        branch label172
       label183:
        push r:5, 'length'
        getMember
        push 0
        equals
        not
        branchIfTrue label184
        push NULL
        return
       label184:
        push 0, 'Array'
        new
        setRegister r:13
        pop
        push 0
        setRegister r:7
        pop
        branch label186
       label185:
        push r:7
        increment
        setRegister r:7
        pop
       label186:
        push r:7, r:9, 'length'
        getMember
        lessThan
        not
        branchIfTrue label195
        push 0, 'Array'
        new
        setRegister r:14
        pop
        push r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$g'
        getMember
        push r:9, r:7
        getMember
        push r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$g'
        getMember
        push r:9, r:7
        getMember
        getMember
        increment
        setMember
        push 0
        setRegister r:2
        pop
        branch label188
       label187:
        push r:2
        increment
        setRegister r:2
        pop
       label188:
        push r:2, r:this, 'width'
        getMember
        lessThan
        not
        branchIfTrue label193
        push 0
        setRegister r:3
        pop
        branch label190
       label189:
        push r:3
        increment
        setRegister r:3
        pop
       label190:
        push r:3, r:this, 'height'
        getMember
        lessThan
        not
        branchIfTrue label192
        push r:this, ')]0dN'
        getMember
        push r:2
        getMember
        push r:3
        getMember
        setRegister r:15
        pop
        push r:15, '*B'
        getMember
        push r:9, r:7
        getMember
        equals
        not
        branchIfTrue label191
        push r:this, ')]0dN'
        getMember
        push r:2
        getMember
        push r:3, NULL
        setMember
        push r:15, 1, r:14, 'push'
        callMethod
        pop
        push r:3, 1
        subtract
        push r:2, r:13, 3, r:this, '88rS('
        callMethod
        pop
        push r:3, 1
        add
        push r:2, r:13, 3, r:this, '88rS('
        callMethod
        pop
        push r:3, r:2, 1
        subtract
        push r:13, 3, r:this, '88rS('
        callMethod
        pop
        push r:3, r:2, 1
        add
        push r:13, 3, r:this, '88rS('
        callMethod
        pop
       label191:
        branch label189
       label192:
        branch label187
       label193:
        push r:14, 'length'
        getMember
        push 0
        equals
        not
        not
        branchIfTrue label194
        push r:14, 1, r:5, 'push'
        callMethod
        pop
       label194:
        branch label185
       label195:
        push r:13, 1, r:6, 'push'
        callMethod
        pop
        push 0
        setRegister r:7
        pop
        branch label197
       label196:
        push r:7
        increment
        setRegister r:7
        pop
       label197:
        push r:7, r:6, 'length'
        getMember
        lessThan
        not
        branchIfTrue label206
        push r:6, r:7
        getMember
        setRegister r:16
        pop
        push 0
        setRegister r:8
        pop
        branch label199
       label198:
        push r:8
        increment
        setRegister r:8
        pop
       label199:
        push r:8, r:16, 'length'
        getMember
        lessThan
        not
        branchIfTrue label205
        push r:16, r:8
        getMember
        setRegister r:17
        pop
        push r:17, '5'
        getMember
        push '88rS('
        getMember
        not
        branchIfTrue label200
        branch label198
       label200:
        push r:17, '5'
        getMember
        push '88rS(', TRUE
        setMember
        push r:17, '5'
        getMember
        push '*B'
        getMember
        setRegister r:0
        push '=(,aA'
        getVariable
        push ' KZiK'
        getMember
        strictEquals
        branchIfTrue label201
        push r:0, '=(,aA'
        getVariable
        push ',L+a)('
        getMember
        strictEquals
        branchIfTrue label203
        push r:0, '=(,aA'
        getVariable
        push '+L+a)('
        getMember
        strictEquals
        branchIfTrue label203
        branch label204
       label201:
        push 0, r:17, '5'
        getMember
        push '5_qm*'
        callMethod
        not
        not
        branchIfTrue label202
        push r:this, ')]0dN'
        getMember
        push r:17, '(('
        getMember
        getMember
        push r:17, ')('
        getMember
        push NULL
        setMember
       label202:
        branch label204
       label203:
        push r:17, '5'
        getMember
        push 1, r:this, '+-(0'
        getMember
        push '7IrKA'
        getMember
        push '7,cAJ('
        callMethod
        pop
        push r:this, ')]0dN'
        getMember
        push r:17, '(('
        getMember
        getMember
        push r:17, ')('
        getMember
        push NULL
        setMember
        branch label204
       label204:
        branch label198
       label205:
        branch label196
       label206:
        push '*9byE(', r:5, 1
        initObject
        return
      end // of function 

      setMember
      push r:1, '2M_}f'
      function2 () (r:1='this')
        push 0, 'Array'
        new
        setRegister r:4
        pop
        push 0
        setRegister r:2
        pop
        branch label208
       label207:
        push r:2
        increment
        setRegister r:2
        pop
       label208:
        push r:2, r:this, 'width'
        getMember
        lessThan
        not
        branchIfTrue label216
        push r:this, ')]0dN'
        getMember
        push r:2
        getMember
        setRegister r:5
        pop
        push r:this, 'height'
        getMember
        push 1
        subtract
        setRegister r:3
        pop
        branch label210
       label209:
        push r:3
        decrement
        setRegister r:3
        pop
       label210:
        push r:3, 0
        greaterThan
        not
        branchIfTrue label212
        push r:5, r:3
        getMember
        push NULL
        equals
        not
        branchIfTrue label211
        branch label212
       label211:
        branch label209
       label212:
        push r:3
        decrement
        setRegister r:3
        pop
       label213:
        push r:3, 0
        lessThan
        not
        not
        branchIfTrue label215
        push r:5, r:3
        getMember
        setRegister r:6
        pop
        push r:6, NULL
        equals
        not
        not
        branchIfTrue label214
        push r:6, '}QNv1', TRUE
        setMember
        push r:5, r:3, 1
        add
        push r:6
        setMember
        push r:5, r:3, NULL
        setMember
        push r:6, 1, r:4, 'push'
        callMethod
        pop
       label214:
        push r:3
        decrement
        setRegister r:3
        pop
        branch label213
       label215:
        branch label207
       label216:
        push r:4, 'length'
        getMember
        push 0
        equals
        not
        branchIfTrue label217
        push NULL
        return
       label217:
        push r:4
        return
      end // of function 

      setMember
      push r:1, '33jVw'
      function2 () (r:1='this')
        push 0, 'Array'
        new
        setRegister r:4
        pop
        push 0
        setRegister r:2
        pop
        branch label219
       label218:
        push r:2
        increment
        setRegister r:2
        pop
       label219:
        push r:2, r:this, 'width'
        getMember
        lessThan
        not
        branchIfTrue label226
        push r:this, ')]0dN'
        getMember
        push r:2
        getMember
        setRegister r:5
        pop
        push FALSE
        setRegister r:6
        pop
        push 0
        setRegister r:3
        pop
        branch label221
       label220:
        push r:3
        increment
        setRegister r:3
        pop
       label221:
        push r:3, r:this, 'height'
        getMember
        lessThan
        not
        branchIfTrue label225
        push r:6
        dup
        not
        branchIfTrue label222
        pop
        push r:5, r:3
        getMember
        push '*B'
        getMember
        push '=(,aA'
        getVariable
        push ',OYKA'
        getMember
        equals
       label222:
        not
        branchIfTrue label223
        push r:5, r:3
        getMember
        push 1, r:4, 'push'
        callMethod
        pop
        push r:5, r:3, NULL
        setMember
        branch label224
       label223:
        push r:5, r:3
        getMember
        push '}QNv1'
        getMember
        not
        branchIfTrue label224
        push TRUE
        setRegister r:6
        pop
       label224:
        branch label220
       label225:
        branch label218
       label226:
        push r:4, 'length'
        getMember
        push 0
        equals
        not
        branchIfTrue label227
        push NULL
        return
       label227:
        push r:4
        return
      end // of function 

      setMember
      push '4T]v['
      function2 (r:2='0') (r:1='this')
        push r:this, '+-(0', r:'0'
        setMember
        push r:this, '*hM', 0, 'Array'
        new
        setMember
        push r:this, '8=00', 0, 'Array'
        new
        setMember
        push r:this, '})L9', 0, 'Array'
        new
        setMember
        push r:this, ')gv94', 0, 'Array'
        new
        setMember
        push r:this, '{a8q', 0, 'Array'
        new
        setMember
        push r:this, '06P_n', 0, 'Array'
        new
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '0Cs7K'
      function2 (r:2='5') (r:1='this')
        push r:'5', NULL
        equals
        not
        branchIfTrue label228
        push UNDEF
        return
       label228:
        push 0
        setRegister r:3
        pop
        branch label230
       label229:
        push r:3
        increment
        setRegister r:3
        pop
       label230:
        push r:3, r:this, '*hM'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label232
        push r:this, '*hM'
        getMember
        push r:3
        getMember
        push '5'
        getMember
        push r:'5'
        equals
        not
        branchIfTrue label231
        push r:this, '*hM'
        getMember
        push r:3
        getMember
        push '}2', r:this, '*hM'
        getMember
        push r:3
        getMember
        push '}2'
        getMember
        push 30
        add
        setMember
        push UNDEF
        return
       label231:
        branch label229
       label232:
        push '5', r:'5', '}2', 30, 2
        initObject
        push 1, r:this, '*hM'
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '0DF00'
      function2 (r:2='5') (r:1='this')
        push r:'5', 1, r:this, '8=00'
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}k_z9('
      function2 (r:2='5', r:3='((', r:4=')(', r:5='2') (r:1='this')
        push r:'5', '}J'
        getMember
        push '_x', r:'((', 30
        multiply
        push '=(,aA'
        getVariable
        push '9u'
        getMember
        add
        setMember
        push r:'5', '}J'
        getMember
        push '_y', '=(,aA'
        getVariable
        push ')RL6t'
        getMember
        push r:'2', 30
        multiply
        subtract
        setMember
        push r:'5', '}J'
        getMember
        push '_visible', TRUE
        setMember
        push r:')(', 30
        multiply
        push '=(,aA'
        getVariable
        push ';u'
        getMember
        add
        setRegister r:6
        pop
        push r:this, '}BhKw', r:'(('
        setMember
        push '5', r:'5', '}2', r:6, r:'5', '}J'
        getMember
        push '_y'
        getMember
        subtract
        push '0twi)', 30, 3
        initObject
        push 1, r:this, '})L9'
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '2M_}f'
      function2 (r:2='5') (r:1='this')
        push '5', r:'5', '}2', 30, '0twi)', 15, 3
        initObject
        push 1, r:this, '})L9'
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '35IvE'
      function2 (r:2='5') (r:1='this')
        push 0, r:'5', '=jr=E'
        callMethod
        pop
        push r:'5', 1, r:this, '06P_n'
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '7,cAJ('
      function2 (r:2='5') (r:1='this')
        push r:'5', NULL
        equals
        not
        branchIfTrue label233
        push UNDEF
        return
       label233:
        push 0, r:'5', '-cLYz'
        callMethod
        pop
        push r:'5', 1, r:this, '06P_n'
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}i3;,'
      function2 (r:2='-_Q,') (r:1='this')
        push r:this, '*hM'
        getMember
        push 'length'
        getMember
        push 0
        equals
        not
        dup
        branchIfTrue label234
        pop
        push r:this, '8=00'
        getMember
        push 'length'
        getMember
        push 0
        equals
        not
       label234:
        dup
        branchIfTrue label235
        pop
        push r:this, '})L9'
        getMember
        push 'length'
        getMember
        push 0
        equals
        not
       label235:
        dup
        branchIfTrue label236
        pop
        push r:this, '{a8q'
        getMember
        push 'length'
        getMember
        push 0
        equals
        not
       label236:
        dup
        branchIfTrue label237
        pop
        push r:'-_Q,'
        dup
        not
        branchIfTrue label237
        pop
        push r:this, '06P_n'
        getMember
        push 'length'
        getMember
        push 0
        equals
        not
       label237:
        return
      end // of function 

      setMember
      push r:1, '{==W3('
      function2 (r:2='5P55') (r:1='this')
        push '=(,aA'
        getVariable
        push '54{lV'
        getMember
        push r:'5P55', 2, r:this, '+-(0'
        getMember
        push ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:3
        pop
        push r:3, '[b', 0
        setMember
        push r:3, ']b', 0
        setMember
        push r:3, 1, r:this, ')gv94'
        getMember
        push 'push'
        callMethod
        pop
        push r:3
        return
      end // of function 

      setMember
      push r:1, '0D 6'
      function2 () (r:1='this')
        push r:this, '})L9'
        getMember
        push 'length'
        getMember
        push 0
        equals
        not
        dup
        branchIfTrue label238
        pop
        push r:this, '{a8q'
        getMember
        push 'length'
        getMember
        push 0
        equals
        not
       label238:
        dup
        branchIfTrue label239
        pop
        push r:this, '06P_n'
        getMember
        push 'length'
        getMember
        push 0
        equals
        not
       label239:
        setRegister r:3
        pop
        push 0
        setRegister r:2
        pop
        branch label241
       label240:
        push r:2
        increment
        setRegister r:2
        pop
       label241:
        push r:2, r:this, '06P_n'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label243
        push r:this, '06P_n'
        getMember
        push r:2
        getMember
        setRegister r:4
        pop
        push 0, r:4, '08ewd'
        callMethod
        not
        not
        branchIfTrue label242
        push 1, r:2, r:2
        decrement
        setRegister r:2
        pop
        push 2, r:this, '06P_n'
        getMember
        push 'splice'
        callMethod
        pop
       label242:
        branch label240
       label243:
        push 10, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        setRegister r:5
        pop
        push 0
        setRegister r:2
        pop
        branch label245
       label244:
        push r:2
        increment
        setRegister r:2
        pop
       label245:
        push r:2, r:this, '*hM'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label247
        push r:this, '*hM'
        getMember
        push r:2
        getMember
        setRegister r:6
        pop
        push r:6, '}2', r:6, '}2'
        getMember
        push r:5
        subtract
        setMember
        push r:6, '5'
        getMember
        push '}J'
        getMember
        push '_y', r:6, '5'
        getMember
        push '}J'
        getMember
        push '_y'
        getMember
        push r:5
        subtract
        setMember
        push r:6, '}2'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label246
        push r:6, '5'
        getMember
        push '}J'
        getMember
        push '_y', r:6, '5'
        getMember
        push '}J'
        getMember
        push '_y'
        getMember
        push r:6, '}2'
        getMember
        subtract
        setMember
        push 1, r:2, r:2
        decrement
        setRegister r:2
        pop
        push 2, r:this, '*hM'
        getMember
        push 'splice'
        callMethod
        pop
       label246:
        branch label244
       label247:
        push r:this, '})L9'
        getMember
        push 'length'
        getMember
        push 0
        equals
        not
        setRegister r:7
        pop
        push 0
        setRegister r:2
        pop
        branch label249
       label248:
        push r:2
        increment
        setRegister r:2
        pop
       label249:
        push r:2, r:this, '})L9'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label253
        push r:this, '})L9'
        getMember
        push r:2
        getMember
        setRegister r:8
        pop
        push r:8, '0twi)'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        setRegister r:9
        pop
        push r:8, '}2'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label250
        push 1
        branch label251
       label250:
        push -1
       label251:
        setRegister r:10
        pop
        push r:8, '}2', r:8, '}2'
        getMember
        push r:9, r:10
        multiply
        subtract
        setMember
        push r:8, '5'
        getMember
        push '}J'
        getMember
        push '_y', r:8, '5'
        getMember
        push '}J'
        getMember
        push '_y'
        getMember
        push r:9, r:10
        multiply
        add
        setMember
        push r:8, '}2'
        getMember
        push r:10
        multiply
        push 0
        lessThan
        not
        branchIfTrue label252
        push r:8, '5'
        getMember
        push '}J'
        getMember
        push '_y', r:8, '5'
        getMember
        push '}J'
        getMember
        push '_y'
        getMember
        push r:8, '}2'
        getMember
        add
        setMember
        push 1, r:2, r:2
        decrement
        setRegister r:2
        pop
        push 2, r:this, '})L9'
        getMember
        push 'splice'
        callMethod
        pop
       label252:
        branch label248
       label253:
        push r:this, '})L9'
        getMember
        push 'length'
        getMember
        push 0
        equals
        not
        branchIfTrue label264
        push r:7
        not
        branchIfTrue label258
        push 0
        setRegister r:2
        pop
        branch label255
       label254:
        push r:2
        increment
        setRegister r:2
        pop
       label255:
        push r:2, '=(,aA'
        getVariable
        push '*sd+;('
        getMember
        lessThan
        not
        branchIfTrue label257
        push r:this, '+-(0'
        getMember
        push '=HU11'
        getMember
        push ')]0dN'
        getMember
        push r:this, '}BhKw'
        getMember
        getMember
        push r:2
        getMember
        setRegister r:11
        pop
        push r:11, NULL
        equals
        not
        not
        branchIfTrue label256
        push '5', r:11, ')(', r:11, '}J'
        getMember
        push '_y'
        getMember
        push 2
        initObject
        push 1, r:this, '{a8q'
        getMember
        push 'push'
        callMethod
        pop
       label256:
        branch label254
       label257:
        push r:this, '2tleZ', 5
        setMember
        push r:this, ' ChKw', 0
        setMember
        push r:this, '}BhKw', -1
        setMember
       label258:
        push FALSE
        setRegister r:12
        pop
        push r:this, ' ChKw', r:this, ' ChKw'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push r:this, '2tleZ'
        getMember
        multiply
        add
        setMember
        push r:this, ' ChKw'
        getMember
        push r:this, '2tleZ'
        getMember
        multiply
        push 0
        greaterThan
        dup
        not
        branchIfTrue label259
        pop
        push r:this, ' ChKw'
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:this, '2tleZ'
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        lessThan
        not
       label259:
        not
        branchIfTrue label260
        push r:this, ' ChKw', r:this, '2tleZ'
        getMember
        setMember
        push r:this, '2tleZ', r:this, '2tleZ'
        getMember
        push -0.5
        multiply
        setMember
        push r:this, '2tleZ'
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push 1
        lessThan
        not
        branchIfTrue label260
        push r:this, ' ChKw', 0
        setMember
        push TRUE
        setRegister r:12
        pop
       label260:
        push 0
        setRegister r:2
        pop
        branch label262
       label261:
        push r:2
        increment
        setRegister r:2
        pop
       label262:
        push r:2, r:this, '{a8q'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label263
        push r:this, '{a8q'
        getMember
        push r:2
        getMember
        setRegister r:13
        pop
        push r:13, '5'
        getMember
        push '}J'
        getMember
        push '_y', r:13, ')('
        getMember
        push r:this, ' ChKw'
        getMember
        add
        setMember
        branch label261
       label263:
        push r:12
        not
        branchIfTrue label264
        push r:this, '{a8q', 0, 'Array'
        new
        setMember
       label264:
        push r:3
        dup
        not
        branchIfTrue label265
        pop
        push r:this, '{a8q'
        getMember
        push 'length'
        getMember
        push 0
        equals
       label265:
        dup
        not
        branchIfTrue label266
        pop
        push r:this, '})L9'
        getMember
        push 'length'
        getMember
        push 0
        equals
       label266:
        dup
        not
        branchIfTrue label267
        pop
        push r:this, '06P_n'
        getMember
        push 'length'
        getMember
        push 0
        equals
       label267:
        not
        branchIfTrue label268
        push 0, r:this, '+-(0'
        getMember
        push ';-[;H'
        callMethod
        pop
       label268:
        push 30, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        setRegister r:14
        pop
        push 0
        setRegister r:2
        pop
        branch label270
       label269:
        push r:2
        increment
        setRegister r:2
        pop
       label270:
        push r:2, r:this, '8=00'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label277
        push r:this, '8=00'
        getMember
        push r:2
        getMember
        setRegister r:15
        pop
        push r:15, '}J'
        getMember
        push '_y', r:15, '}J'
        getMember
        push '_y'
        getMember
        push r:14
        subtract
        setMember
        push r:15, '}J'
        getMember
        push '_y'
        getMember
        push '=(,aA'
        getVariable
        push ')RL6t'
        getMember
        push 30
        subtract
        lessThan
        not
        branchIfTrue label276
        push r:15, '*B'
        getMember
        setRegister r:0
        push '=(,aA'
        getVariable
        push ',OYKA'
        getMember
        strictEquals
        branchIfTrue label271
        push r:0, '=(,aA'
        getVariable
        push ',L+a)('
        getMember
        strictEquals
        branchIfTrue label272
        push r:0, '=(,aA'
        getVariable
        push '+L+a)('
        getMember
        strictEquals
        branchIfTrue label273
        branch label274
       label271:
        push r:15, 1, r:this, '35IvE'
        callMethod
        pop
        branch label275
       label272:
        push r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$b1', r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$b1'
        getMember
        increment
        setMember
        push '=(,aA'
        getVariable
        push '}cl4B'
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push r:15, 1, r:this, '35IvE'
        callMethod
        pop
        branch label275
       label273:
        push r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$b2', r:this, '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$b2'
        getMember
        increment
        setMember
        push '=(,aA'
        getVariable
        push '99l8B'
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push r:15, 1, r:this, '35IvE'
        callMethod
        pop
        branch label275
       label274:
        push r:15, 1, r:this, '+-(0'
        getMember
        push '4,01'
        getMember
        push '0DF00'
        callMethod
        pop
        branch label275
       label275:
        push 1, r:2, r:2
        decrement
        setRegister r:2
        pop
        push 2, r:this, '8=00'
        getMember
        push 'splice'
        callMethod
        pop
       label276:
        branch label269
       label277:
        push 0
        setRegister r:2
        pop
        branch label279
       label278:
        push r:2
        increment
        setRegister r:2
        pop
       label279:
        push r:2, r:this, ')gv94'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label290
        push r:this, ')gv94'
        getMember
        push r:2
        getMember
        setRegister r:16
        pop
        push r:16, '(KpGn'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label280
        push r:16, ']b', r:16, ']b'
        getMember
        push r:16, '(KpGn'
        getMember
        add
        setMember
       label280:
        push r:16, '+{eA+'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label281
        push r:16, '[b', r:16, '[b'
        getMember
        push r:16, '+{eA+'
        getMember
        multiply
        setMember
        push r:16, ']b', r:16, ']b'
        getMember
        push r:16, '+{eA+'
        getMember
        multiply
        setMember
       label281:
        push r:16, '_x', r:16, '_x'
        getMember
        push r:16, '[b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:16, '_y', r:16, '_y'
        getMember
        push r:16, ']b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:16, '6b'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label283
        push r:16, ')Z2'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label282
        push r:16, '6b', r:16, '6b'
        getMember
        push r:16, ')Z2'
        getMember
        multiply
        setMember
       label282:
        push r:16, '_rotation', r:16, '_rotation'
        getMember
        push r:16, '6b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:16, '_rotation', r:16, '_rotation'
        getMember
        push r:16, '6b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label283:
        push r:16, '2VhU6'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label289
        push r:16, '2VhU6', r:16, '2VhU6'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:16, '2VhU6'
        getMember
        push 0
        greaterThan
        not
        not
        branchIfTrue label284
        push 0, r:16, 'removeMovieClip'
        callMethod
        pop
        push 1, r:2, r:2
        decrement
        setRegister r:2
        pop
        push 2, r:this, ')gv94'
        getMember
        push 'splice'
        callMethod
        pop
        branch label289
       label284:
        push r:16, '2VhU6'
        getMember
        push 10
        greaterThan
        not
        not
        branchIfTrue label289
        push r:16, 'scale'
        getMember
        setRegister r:17
        pop
        push r:17, NULL
        equals
        not
        branchIfTrue label285
        push 100
        setRegister r:17
        pop
       label285:
        push r:16, '+7'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label286
        push r:0, 1
        strictEquals
        branchIfTrue label287
        branch label288
       label286:
        push r:16, '_yscale', r:17, r:16, '2VhU6'
        getMember
        multiply
        push 10
        divide
        setMember
        branch label289
       label287:
        push r:16, '_alpha', r:16, '2VhU6'
        getMember
        push 10
        multiply
        setMember
        branch label289
       label288:
        push r:16, '_xscale', r:17, r:16, '2VhU6'
        getMember
        multiply
        push 10
        divide
        setMember
        push r:16, '_yscale', r:16, '_xscale'
        getMember
        setMember
        branch label289
       label289:
        branch label278
       label290:
      end // of function 

      setMember
      push '44{N'
      function2 (r:2='}J') (r:1='this')
        push r:this, ']}lAm', r:'}J', 1, '+7U K'
        new
        setMember
        push r:this, ';+', '=(,aA'
        getVariable
        push '3d0fx'
        getMember
        push ';+', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '7IrKA', r:this, 1, '4T]v['
        new
        setMember
        push r:this, '=HU11', r:this, 1, '0vWVG'
        new
        setMember
        push r:this, '4,01', r:this, 1, '=3+P'
        new
        setMember
        push r:this, '3ng)-(', 0, 'Array'
        new
        setMember
        push r:this, '[NCLd', 15, 1
        initArray
        setMember
        push r:this, '){zaJ(', 0, 1
        initArray
        setMember
        push r:this, '5U4B', r:this, '[NCLd'
        getMember
        push 0
        getMember
        push 1
        initArray
        setMember
        push r:this, '3p(W2', '=(,aA'
        getVariable
        push '0wVEI'
        getMember
        setMember
        push r:this, '-_X}5', '$b1', 0, '$b2', 0, '$c', 0, 'Array'
        new
        push '$g', 0, 0, 0, 0, 0, 5
        initArray
        push '$l', 0, 5
        initObject
        setMember
        push 0, r:this, '}-B2'
        callMethod
        pop
        push 0, r:this, '0D 6'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, ';MG2D'
      function2 () (r:1='this')
        push r:this, '3p(W2'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        setRegister r:2
        pop
        push r:2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:3
        pop
        push 10, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
        not
        branchIfTrue label291
        push '=(,aA'
        getVariable
        push ',OYKA'
        getMember
        push 2, 25, 25, 3
        initArray
        push 1, '-[m(M'
        getVariable
        push '7g,ln'
        callMethod
        add
        setRegister r:3
        pop
        push r:3, '=(,aA'
        getVariable
        push ',OYKA'
        getMember
        push 2
        add
        equals
        not
        branchIfTrue label291
        push r:2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push '=(,aA'
        getVariable
        push '4MkO'
        getMember
        add
        setRegister r:3
        pop
       label291:
        push r:3
        return
      end // of function 

      setMember
      push r:1, '}-B2'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label293
       label292:
        push r:2
        increment
        setRegister r:2
        pop
       label293:
        push r:2, 3
        lessThan
        not
        branchIfTrue label294
        push 0, r:this, '=HU11'
        getMember
        push '8We+Z'
        callMethod
        pop
        branch label292
       label294:
      end // of function 

      setMember
      push r:1, ';-[;H'
      function2 () (r:1='this')
        push r:this, '6DoB7'
        getMember
        not
        branchIfTrue label295
        push UNDEF
        return
       label295:
        push 0, r:this, '=HU11'
        getMember
        push '33jVw'
        callMethod
        setRegister r:4
        pop
        push 0
        setRegister r:2
        pop
        branch label297
       label296:
        push r:2
        increment
        setRegister r:2
        pop
       label297:
        push r:2, r:4, 'length'
        getMember
        lessThan
        not
        branchIfTrue label298
        push r:4, r:2
        getMember
        push 1, r:this, '7IrKA'
        getMember
        push '35IvE'
        callMethod
        pop
        branch label296
       label298:
        push r:4, NULL
        equals
        not
        not
        branchIfTrue label299
        push UNDEF
        return
       label299:
        push 0, r:this, '=HU11'
        getMember
        push '2M_}f'
        callMethod
        setRegister r:5
        pop
        push 0
        setRegister r:2
        pop
        branch label301
       label300:
        push r:2
        increment
        setRegister r:2
        pop
       label301:
        push r:2, r:5, 'length'
        getMember
        lessThan
        not
        branchIfTrue label302
        push r:5, r:2
        getMember
        push 1, r:this, '7IrKA'
        getMember
        push '2M_}f'
        callMethod
        pop
        branch label300
       label302:
        push r:5, NULL
        equals
        not
        not
        branchIfTrue label303
        push UNDEF
        return
       label303:
        push 0, r:this, '=HU11'
        getMember
        push '06P_n'
        callMethod
        setRegister r:6
        pop
        push r:6, '*9byE('
        getMember
        setRegister r:7
        pop
        push 0
        setRegister r:8
        pop
        push r:this, '3ng)-('
        getMember
        push 'length'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label304
        push NULL, 1, r:this, '3ng)-('
        getMember
        push 'push'
        callMethod
        pop
        push NULL, 1, r:this, '3ng)-('
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '3ng)-('
        getMember
        push 1, r:7, 'push'
        callMethod
        pop
       label304:
        push r:this, '3ng)-(', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:2
        pop
        branch label306
       label305:
        push r:2
        increment
        setRegister r:2
        pop
       label306:
        push r:2, r:7, 'length'
        getMember
        lessThan
        not
        branchIfTrue label310
        push r:7, r:2
        getMember
        setRegister r:9
        pop
        push 0
        setRegister r:3
        pop
        branch label308
       label307:
        push r:3
        increment
        setRegister r:3
        pop
       label308:
        push r:3, r:9, 'length'
        getMember
        lessThan
        not
        branchIfTrue label309
        push r:9, r:3
        getMember
        push 1, r:this, '7IrKA'
        getMember
        push '35IvE'
        callMethod
        pop
        branch label307
       label309:
        push r:9, 'length'
        getMember
        push r:this, '13(0C'
        getMember
        push 0
        getMember
        push 1000
        multiply
        add
        push 1, r:this, '-_X}5'
        getMember
        push '$c'
        getMember
        push 'push'
        callMethod
        pop
        push r:9, 'length'
        getMember
        push r:this, '13(0C'
        getMember
        push 0
        getMember
        push 1
        add
        multiply
        int
        push '=(,aA'
        getVariable
        push '*c)L'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        multiply
        setRegister r:10
        pop
        push r:8, r:10
        add
        setRegister r:8
        pop
        push r:10, 1, ';ndCG'
        getVariable
        push '-Q)9)'
        callMethod
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        branch label305
       label310:
        push r:8, 0
        greaterThan
        not
        branchIfTrue label311
        push '=(,aA'
        getVariable
        push '8ITeH('
        getMember
        push '{}(i2', 2, r:this, ']}lAm'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:11
        pop
        push r:11, '_x', 300
        setMember
        push r:11, '(Erk5', r:8
        setMember
       label311:
        push r:7, 'length'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label312
        push r:this, '13(0C', r:this, '13(0C'
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push r:this, '5U4B', r:this, '5U4B'
        getMember
        push 0
        getMember
        push 0.3
        subtract
        push 1
        initArray
        setMember
       label312:
      end // of function 

      setMember
      push r:1, '0D 6'
      function2 () (r:1='this')
        push 0, r:this, '7IrKA'
        getMember
        push '0D 6'
        callMethod
        pop
        push r:this, '6DoB7'
        getMember
        not
        branchIfTrue label322
        push 100
        setRegister r:2
        pop
       label313:
        push r:2
        decrement
        setRegister r:0
        setRegister r:2
        pop
        push r:0, 0
        greaterThan
        not
        branchIfTrue label315
        push '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:3
        pop
        push '=(,aA'
        getVariable
        push '*sd+;('
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:4
        pop
        push r:this, '=HU11'
        getMember
        push ')]0dN'
        getMember
        push r:3
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push r:5, NULL
        equals
        not
        branchIfTrue label314
        branch label313
       label314:
        push r:this, '=HU11'
        getMember
        push ')]0dN'
        getMember
        push r:3
        getMember
        push r:4, NULL
        setMember
        push r:5, 1, r:this, '7IrKA'
        getMember
        push '7,cAJ('
        callMethod
        pop
        push UNDEF
        return
        branch label313
       label315:
        push 0
        setRegister r:6
        pop
        branch label317
       label316:
        push r:6
        increment
        setRegister r:6
        pop
       label317:
        push r:6, '=(,aA'
        getVariable
        push '[MqDO'
        getMember
        lessThan
        not
        branchIfTrue label321
        push 0
        setRegister r:7
        pop
        branch label319
       label318:
        push r:7
        increment
        setRegister r:7
        pop
       label319:
        push r:7, '=(,aA'
        getVariable
        push '*sd+;('
        getMember
        lessThan
        not
        branchIfTrue label320
        push r:this, '=HU11'
        getMember
        push ')]0dN'
        getMember
        push r:6
        getMember
        push r:7
        getMember
        push 1, r:this, '7IrKA'
        getMember
        push '7,cAJ('
        callMethod
        pop
        push r:this, '=HU11'
        getMember
        push ')]0dN'
        getMember
        push r:6
        getMember
        push r:7, NULL
        setMember
        branch label318
       label320:
        branch label316
       label321:
        push r:this, '-_X}5'
        getMember
        push '$l', r:this, '){zaJ('
        getMember
        push 0
        getMember
        setMember
        push r:this, '-_X}5'
        getMember
        push 1, ';ndCG'
        getVariable
        push '7T4cF('
        callMethod
        pop
        push UNDEF
        return
       label322:
        push 0, r:this, '4,01'
        getMember
        push '0D 6'
        callMethod
        pop
        push 0, r:this, '=HU11'
        getMember
        push '[VAKp'
        callMethod
        setRegister r:8
        pop
        push r:this, '5U4B', r:this, '5U4B'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        push 30, r:8, 1, r:8
        add
        multiply
        divide
        multiply
        subtract
        push 1
        initArray
        setMember
        push r:8, 8
        lessThan
        not
        dup
        not
        branchIfTrue label323
        pop
        push TRUE, 1, r:this, '7IrKA'
        getMember
        push '}i3;,'
        callMethod
        not
       label323:
        not
        branchIfTrue label324
        push r:this, '6DoB7', TRUE
        setMember
       label324:
        push r:this, '5U4B'
        getMember
        push 0
        getMember
        push 0
        lessThan
        dup
        not
        branchIfTrue label325
        pop
        push TRUE, 1, r:this, '7IrKA'
        getMember
        push '}i3;,'
        callMethod
        not
       label325:
        not
        branchIfTrue label327
        push 0, r:this, '=HU11'
        getMember
        push '8We+Z'
        callMethod
        pop
        push r:this, '5U4B', r:this, '[NCLd'
        getMember
        push 0
        getMember
        push 1
        initArray
        setMember
        push r:this, '){zaJ(', r:this, '){zaJ('
        getMember
        push 0
        getMember
        increment
        push 1
        initArray
        setMember
        push r:this, '[NCLd', r:this, '[NCLd'
        getMember
        push 0
        getMember
        push 0.97
        multiply
        push 1
        initArray
        setMember
        push r:this, '3p(W2'
        getMember
        push 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        push 5
        lessThan
        dup
        not
        branchIfTrue label326
        pop
        push r:this, '){zaJ('
        getMember
        push 0
        getMember
        push 15
        modulo
        push 0
        equals
       label326:
        not
        branchIfTrue label327
        push r:this, '3p(W2', 1, 1, ';ndCG'
        getVariable
        push '-Q)9)'
        callMethod
        push r:this, '3p(W2'
        getMember
        push 2, ';ndCG'
        getVariable
        push '3B(*'
        callMethod
        setMember
       label327:
      end // of function 

      setMember
      push '980Sb'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '}-B2'
      function2 (r:2='}J') (r:1='this')
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        not
        branchIfTrue label328
        push UNDEF
        return
       label328:
        push '980Sb'
        getVariable
        push ')2fr3', r:'}J'
        setMember
        push '980Sb'
        getVariable
        push 'mode', '980Sb'
        getVariable
        push ')2fr3'
        getMember
        push 1, '44{N'
        new
        setMember
      end // of function 

      setMember
      push r:0, '0D 6'
      function2 () (r:1='this')
        push 0, '{-kxL'
        getVariable
        push '87vE7('
        callMethod
        pop
        push 0, '980Sb'
        getVariable
        push 'mode'
        getMember
        push '0D 6'
        callMethod
        pop
      end // of function 

      setMember
      push '-[m(M'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ',Hwi)'
      function2 ('-', r:2='5U4B') (r:1='this')
        push '*B'
        var
        push '*B', r:'5U4B'
        function2 () (r:1='this')
          push '*B'
          getVariable
          push 1, 'clearInterval', 1, '3Wt'
          getVariable
          push 'getGlobal'
          callMethod
          push UNDEF
          callMethod
          pop
          push 0, '-'
          callFunction
          pop
        end // of function 

        push 2, 'setInterval', 1, '3Wt'
        getVariable
        push 'getGlobal'
        callMethod
        push UNDEF
        callMethod
        setVariable
      end // of function 

      setMember
      push r:0, '}wUHz'
      function2 (r:2='=rJ', r:3='7olX7', r:4='}wUHz') (r:1='this')
        push r:'=rJ', NULL
        equals
        not
        branchIfTrue label329
        push NULL
        return
       label329:
        push r:'7olX7', 'length'
        getMember
        setRegister r:5
        pop
        push r:5, 1
        equals
        not
        branchIfTrue label330
        push r:'}wUHz', 1, r:'7olX7', 1, r:'=rJ', 'split'
        callMethod
        push 'join'
        callMethod
        return
       label330:
        push 0
        setRegister r:7
        pop
        push ''
        setRegister r:8
        pop
       label331:
        push TRUE
        not
        branchIfTrue label333
        push r:7, r:'7olX7', 2, r:'=rJ', 'indexOf'
        callMethod
        setRegister r:6
        pop
        push r:6, -1
        equals
        not
        branchIfTrue label332
        branch label333
       label332:
        push r:8, r:6, r:7, 2, r:'=rJ', 'slice'
        callMethod
        push r:'}wUHz'
        add
        add
        setRegister r:8
        pop
        push r:6, r:5
        add
        setRegister r:7
        pop
        branch label331
       label333:
        push r:8, r:7, 1, r:'=rJ', 'substring'
        callMethod
        add
        return
      end // of function 

      setMember
      push r:0, '* I51'
      function2 (r:2='=rJ') (r:1='this')
        push 0, 'Array'
        new
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        push r:'=rJ', 'length'
        getMember
        setRegister r:6
        pop
        push 0
        setRegister r:3
        pop
        branch label335
       label334:
        push r:3
        increment
        setRegister r:3
        pop
       label335:
        push r:3, r:6
        lessThan
        not
        branchIfTrue label340
        push r:3, 1, r:'=rJ', 'charCodeAt'
        callMethod
        setRegister r:7
        pop
        push r:7, 10
        equals
        dup
        branchIfTrue label336
        pop
        push r:7, 13
        equals
       label336:
        not
        branchIfTrue label339
        push r:3, r:5, 2, r:'=rJ', 'slice'
        callMethod
        push 1, r:4, 'push'
        callMethod
        pop
        push r:7, 13
        equals
        dup
        not
        branchIfTrue label337
        pop
        push r:3, 1
        add
        push 1, r:'=rJ', 'charCodeAt'
        callMethod
        push 10
        equals
       label337:
        not
        branchIfTrue label338
        push r:3
        increment
        setRegister r:3
        pop
       label338:
        push r:3, 1
        add
        setRegister r:5
        pop
       label339:
        branch label334
       label340:
        push r:3, r:5, 2, r:'=rJ', 'slice'
        callMethod
        push 1, r:4, 'push'
        callMethod
        pop
        push r:4
        return
      end // of function 

      setMember
      push r:0, ',JBe0'
      function2 (r:2=';p(') (r:1='this')
        push 0, r:';p(', 'duplicate'
        callMethod
        setRegister r:4
        pop
        push r:4, 'length'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:3
        pop
        branch label342
       label341:
        push r:3
        increment
        setRegister r:3
        pop
       label342:
        push r:3, r:5
        lessThan
        not
        branchIfTrue label343
        push r:5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:6
        pop
        push r:5, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:7
        pop
        push r:4, r:6
        getMember
        setRegister r:8
        pop
        push r:4, r:6, r:4, r:7
        getMember
        setMember
        push r:4, r:7, r:8
        setMember
        branch label341
       label343:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '4UQ(1'
      function2 (r:2='}J') (r:1='this')
        push 0
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
       label344:
        push r:'}J', '_parent'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label345
        push r:3, r:'}J', '_x'
        getMember
        add
        setRegister r:3
        pop
        push r:4, r:'}J', '_y'
        getMember
        add
        setRegister r:4
        pop
        push r:'}J', '_parent'
        getMember
        setRegister r:'}J'
        pop
        branch label344
       label345:
        push '{2', r:3, '}2', r:4, 2
        initObject
        return
      end // of function 

      setMember
      push r:0, ' Ly7b'
      function2 (r:2='((', r:3='{nq3-(') (r:1='this')
        push r:'(('
        toString
        setRegister r:4
        pop
       label346:
        push r:4, 'length'
        getMember
        push r:'{nq3-('
        lessThan
        not
        branchIfTrue label347
        push '0', r:4
        add
        setRegister r:4
        pop
        branch label346
       label347:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '7g,ln'
      function2 (r:2='(') (r:1='this')
        push 0
        setRegister r:3
        pop
        push r:'(', 'length'
        getMember
        push 1
        subtract
        setRegister r:4
        pop
        branch label349
       label348:
        push r:4
        decrement
        setRegister r:4
        pop
       label349:
        push r:4, 0
        lessThan
        not
        not
        branchIfTrue label350
        push r:3, r:'(', r:4
        getMember
        add
        setRegister r:3
        pop
        branch label348
       label350:
        push r:3, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
       label351:
        push r:3, r:'(', r:4
        getMember
        lessThan
        not
        not
        branchIfTrue label352
        push r:3, r:'(', r:4
        getMember
        subtract
        setRegister r:3
        pop
        push r:4
        increment
        setRegister r:4
        pop
        branch label351
       label352:
        push r:4
        return
      end // of function 

      setMember
      push r:0, '4*fgv'
      function2 (r:2='*QA', r:3='+QA') (r:1='this')
        push r:'*QA', 1, r:'*QA', 'getBounds'
        callMethod
        setRegister r:4
        pop
        push r:'*QA', 1, r:'+QA', 'getBounds'
        callMethod
        setRegister r:5
        pop
        push r:4, 'xMin'
        getMember
        push r:4, 'xMax'
        getMember
        add
        push 2
        divide
        push r:5, 'xMin'
        getMember
        push r:5, 'xMax'
        getMember
        add
        push 2
        divide
        subtract
        setRegister r:6
        pop
        push r:4, 'yMin'
        getMember
        push r:4, 'yMax'
        getMember
        add
        push 2
        divide
        push r:5, 'yMin'
        getMember
        push r:5, 'yMax'
        getMember
        add
        push 2
        divide
        subtract
        setRegister r:7
        pop
        push r:6, r:6
        multiply
        push r:7, r:7
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        return
      end // of function 

      setMember
      push r:0, '16KA'
      function2 ('}J') (r:1='this')
        push '(', 0, 'Array'
        new
        varEquals
        function2 (r:2='4') (r:1='this')
          push '}J'
          getVariable
          push r:'4'
          getMember
          setRegister r:3
          pop
          push r:3, 1, '3Wt'
          getVariable
          push '_typeof'
          callMethod
          push 'movieclip'
          equals
          dup
          not
          branchIfTrue label353
          pop
          push r:3, '_parent'
          getMember
          push '}J'
          getVariable
          equals
         label353:
          not
          branchIfTrue label354
          push r:3, 1, '('
          getVariable
          push 'push'
          callMethod
          pop
         label354:
        end // of function 

        push '}J'
        getVariable
        push 2, '3Wt'
        getVariable
        push '9ss9+'
        callMethod
        pop
        push '('
        getVariable
        return
      end // of function 

      setMember
      push r:0, 'localToGlobal'
      function2 (r:2='}J', r:3='((', r:4=')(') (r:1='this')
        push 0, '19{O'
        new
        setRegister r:5
        pop
        push r:'((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:5, 1, r:'}J', 'localToGlobal'
        callMethod
        pop
        push '((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push ')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push 2
        initObject
        return
      end // of function 

      setMember
      push r:0, 'globalToLocal'
      function2 (r:2='}J', r:3='((', r:4=')(') (r:1='this')
        push 0, '19{O'
        new
        setRegister r:5
        pop
        push r:'((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 2, r:5, 'set'
        callMethod
        pop
        push r:5, 1, r:'}J', 'globalToLocal'
        callMethod
        pop
        push '((', '-[m(M'
        getVariable
        push ',[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push ')(', '-[m(M'
        getVariable
        push '-[A('
        getMember
        push 1, r:5, 'get'
        callMethod
        push 2
        initObject
        return
      end // of function 

      setMember
      push r:0, '{Gq]-'
      function2 () (r:1='this')
        push '$r', '$h', '$w', '$y', '$x', '$box', '$matrixType', '$radial', '$linear', 9
        initArray
        setRegister r:2
        pop
        push '-[m(M'
        getVariable
        push ']cY[2', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:3
        pop
        branch label356
       label355:
        push r:3
        increment
        setRegister r:3
        pop
       label356:
        push r:3, r:2, 'length'
        getMember
        lessThan
        not
        branchIfTrue label357
        push r:2, r:3
        getMember
        setRegister r:4
        pop
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push r:3, 1, 1, r:4, 'substring'
        callMethod
        setMember
        branch label355
       label357:
      end // of function 

      setMember
      push r:0, 'beginGradientFill'
      function2 (r:2='}J', r:3=' Wo02', r:4='=cKzE(', r:5='8)JNX', r:6='7eq8)', r:7='matrix') (r:1='this')
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push NULL
        equals
        not
        branchIfTrue label358
        push 0, '-[m(M'
        getVariable
        push '{Gq]-'
        callMethod
        pop
       label358:
        push 0, '19{O'
        new
        setRegister r:8
        pop
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 3
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 2
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, '(('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 4
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, ')('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 5
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, ' ('
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 6
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, '1'
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 7
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:matrix, '='
        getMember
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 8
        getMember
        push 2, r:8, 'set'
        callMethod
        pop
        push r:8, r:'7eq8)', r:'8)JNX', r:'=cKzE(', r:' Wo02'
        not
        branchIfTrue label359
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 0
        getMember
        branch label360
       label359:
        push '-[m(M'
        getVariable
        push ']cY[2'
        getMember
        push 1
        getMember
       label360:
        push 5, r:'}J', 'beginGradientFill'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, ',[A(', 1, 1, '$x', 'substring'
      callMethod
      setMember
      push r:0, '-[A(', 1, 1, '$y', 'substring'
      callMethod
      setMember
      push r:0, ']cY[2', NULL
      setMember
    end // of frame 0
  end // of defineMovieClip 125
  
  exportAssets
    125 as '90D*'
  end // of exportAssets
end
