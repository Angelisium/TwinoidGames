movie '84d1a3806a10f2a55480de150a35734a.swf' compressed // flash 8, total frames: 1, frame rate: 40 fps, 700x480 px


  defineMovieClip 3 // total frames: 1
  end // of defineMovieClip 3
  
  exportAssets
    3 as '1whLz'
  end // of exportAssets

  defineMovieClip 5 // total frames: 1
  end // of defineMovieClip 5
  
  exportAssets
    5 as '4mGh1'
  end // of exportAssets

  defineMovieClip 14 // total frames: 3
  end // of defineMovieClip 14
  
  exportAssets
    14 as '0j{ -('
  end // of exportAssets

  defineMovieClip 19 // total frames: 2
  end // of defineMovieClip 19
  
  exportAssets
    19 as ';+'
  end // of exportAssets
  
  exportAssets
    19 as ';+'
  end // of exportAssets
  
  exportAssets
    14 as '0j{ -('
  end // of exportAssets
  
  exportAssets
    5 as '4mGh1'
  end // of exportAssets
  
  exportAssets
    3 as '1whLz'
  end // of exportAssets

  defineMovieClip 21 // total frames: 1
  end // of defineMovieClip 21

  defineMovieClip 22 // total frames: 9

    frame 8
      constants '*', '(', 'Math', 'random', '+', '', 'cos', 'sin'  
      push '*'
      getVariable
      push NULL
      equals
      not
      branchIfTrue label1
      push '*', 1
      setVariable
      branch label2
     label1:
      push '*', '*'
      getVariable
      push 0.75
      multiply
      setVariable
     label2:
      push '(', 0.0, 'Math'
      getVariable
      push 'random'
      callMethod
      push 6.28
      multiply
      setVariable
      push '+', 16
      random
      setVariable
      push '', 0.0, '('
      getVariable
      push 1, 'Math'
      getVariable
      push 'cos'
      callMethod
      push '+'
      getVariable
      multiply
      setProperty
      push '', 1, '('
      getVariable
      push 1, 'Math'
      getVariable
      push 'sin'
      callMethod
      push '+'
      getVariable
      multiply
      setProperty
      push '', 2, '', 3, 100, '+'
      getVariable
      push 4
      multiply
      subtract
      push '*'
      getVariable
      multiply
      setRegister r:0
      setProperty
      push r:0
      setProperty
    end // of frame 8
  end // of defineMovieClip 22

  defineMovieClip 23 // total frames: 60

    frame 59
      push 0.0, '_parent'
      getVariable
      push 'removeMovieClip'
      callMethod
      pop
    end // of frame 59
  end // of defineMovieClip 23

  defineMovieClip 24 // total frames: 3
  end // of defineMovieClip 24
  
  exportAssets
    24 as ');=0I'
  end // of exportAssets

  defineMovieClip 31 // total frames: 13
  end // of defineMovieClip 31
  
  exportAssets
    31 as ';WvSz'
  end // of exportAssets

  defineMovieClip 38 // total frames: 6
  end // of defineMovieClip 38

  defineMovieClip 41 // total frames: 1
  end // of defineMovieClip 41

  defineMovieClip 43 // total frames: 1
  end // of defineMovieClip 43

  defineMovieClip 44 // total frames: 65
  end // of defineMovieClip 44

  defineMovieClip 45 // total frames: 14
  end // of defineMovieClip 45
  
  exportAssets
    45 as '[5(-'
  end // of exportAssets

  defineMovieClip 47 // total frames: 2
  end // of defineMovieClip 47

  defineMovieClip 48 // total frames: 4

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 48

  defineMovieClip 50 // total frames: 1
  end // of defineMovieClip 50

  defineMovieClip 52 // total frames: 1
  end // of defineMovieClip 52

  defineMovieClip 54 // total frames: 1
  end // of defineMovieClip 54

  defineMovieClip 56 // total frames: 1
  end // of defineMovieClip 56

  defineMovieClip 58 // total frames: 1
  end // of defineMovieClip 58

  defineMovieClip 59 // total frames: 2

    frame 0
      constants '4', '_xscale', '_parent'  
      push '4'
      getVariable
      push '_xscale', '_parent'
      getVariable
      push '_xscale'
      getMember
      setMember
    end // of frame 0

    frame 1
      push '', 4
      getProperty
      push 1
      subtract
      gotoAndPlay
    end // of frame 1
  end // of defineMovieClip 59

  defineMovieClip 69 // total frames: 10
  end // of defineMovieClip 69

  defineMovieClip 82 // total frames: 2

    frame 0
      constants '4', '_xscale', '_parent'  
      push '4'
      getVariable
      push '_xscale', '_parent'
      getVariable
      push '_xscale'
      getMember
      setMember
    end // of frame 0

    frame 1
      push '', 4
      getProperty
      push 1
      subtract
      gotoAndPlay
    end // of frame 1
  end // of defineMovieClip 82
  
  exportAssets
    45 as '[5(-'
  end // of exportAssets
  
  exportAssets
    45 as '[5(-'
  end // of exportAssets
  
  exportAssets
    45 as '[5(-'
  end // of exportAssets
  
  exportAssets
    45 as '[5(-'
  end // of exportAssets
  
  exportAssets
    45 as '[5(-'
  end // of exportAssets
  
  exportAssets
    45 as '[5(-'
  end // of exportAssets
  
  exportAssets
    45 as '[5(-'
  end // of exportAssets
  
  exportAssets
    45 as '[5(-'
  end // of exportAssets
  
  exportAssets
    45 as '[5(-'
  end // of exportAssets
  
  exportAssets
    45 as '[5(-'
  end // of exportAssets
  
  exportAssets
    45 as '[5(-'
  end // of exportAssets
  
  exportAssets
    45 as '[5(-'
  end // of exportAssets

  defineMovieClip 86 // total frames: 1
  end // of defineMovieClip 86

  defineMovieClip 87 // total frames: 9

    frame 8
      gotoLabel '4MC5'
      play
    end // of frame 8
  end // of defineMovieClip 87

  defineMovieClip 89 // total frames: 1
  end // of defineMovieClip 89

  defineMovieClip 91 // total frames: 1
  end // of defineMovieClip 91

  defineMovieClip 92 // total frames: 150

    frame 25
      gotoLabel '{5}D'
      play
    end // of frame 25

    frame 35
      gotoLabel '9ybyE('
      play
    end // of frame 35

    frame 61
      stop
    end // of frame 61

    frame 69
      stop
    end // of frame 69

    frame 90
      stop
    end // of frame 90

    frame 102
      gotoLabel '{5}D'
      play
    end // of frame 102

    frame 112
      stop
    end // of frame 112

    frame 117
      stop
    end // of frame 117

    frame 139
      gotoLabel '9k5KD('
      play
    end // of frame 139

    frame 144
      stop
    end // of frame 144
  end // of defineMovieClip 92
  
  exportAssets
    92 as ')+jEC'
  end // of exportAssets

  defineMovieClip 201 // total frames: 143
  end // of defineMovieClip 201

  defineMovieClip 202 // total frames: 30

    frame 29
      push ''
      removeClip
    end // of frame 29
  end // of defineMovieClip 202
  
  exportAssets
    202 as '9lBrL'
  end // of exportAssets

  defineMovieClip 205 // total frames: 2
  end // of defineMovieClip 205
  
  exportAssets
    205 as '),HaF('
  end // of exportAssets

  defineMovieClip 209 // total frames: 1
  end // of defineMovieClip 209

  defineMovieClip 212 // total frames: 3
  end // of defineMovieClip 212
  
  exportAssets
    212 as '8sfFC'
  end // of exportAssets

  defineMovieClip 231 // total frames: 19

    frame 18
      push ']', 0.0
      setVariable
    end // of frame 18
  end // of defineMovieClip 231
  
  exportAssets
    231 as ';IzJK('
  end // of exportAssets

  defineMovieClip 233 // total frames: 1
  end // of defineMovieClip 233
  
  exportAssets
    233 as '7X1dG'
  end // of exportAssets

  defineMovieClip 236 // total frames: 2

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 236
  
  exportAssets
    236 as '*1Q1,('
  end // of exportAssets

  defineMovieClip 238 // total frames: 1
  end // of defineMovieClip 238
  
  exportAssets
    238 as '6-6 t'
  end // of exportAssets

  defineMovieClip 241 // total frames: 3

    frame 0
      push '', 10, 360
      setProperty
    end // of frame 0

    frame 1
      constants ''  
      push '', 2, '', 2
      getProperty
      push 6
      subtract
      setProperty
      push '', 3, '', 2
      getProperty
      setProperty
    end // of frame 1

    frame 2
      gotoFrame 1
      play
    end // of frame 2
  end // of defineMovieClip 241

  defineMovieClip 244 // total frames: 6

    frame 0
      push '', 5
      getProperty
      push 1
      subtract
      random
      push 2
      add
      gotoAndPlay
    end // of frame 0

    frame 5
      gotoFrame 1
      play
    end // of frame 5
  end // of defineMovieClip 244
  
  exportAssets
    244 as '7LeMK('
  end // of exportAssets

  defineMovieClip 246 // total frames: 1
  end // of defineMovieClip 246

  defineMovieClip 248 // total frames: 1
  end // of defineMovieClip 248

  defineMovieClip 250 // total frames: 1
  end // of defineMovieClip 250

  defineMovieClip 252 // total frames: 1
  end // of defineMovieClip 252

  defineMovieClip 254 // total frames: 1
  end // of defineMovieClip 254

  defineMovieClip 256 // total frames: 1
  end // of defineMovieClip 256

  defineMovieClip 258 // total frames: 1
  end // of defineMovieClip 258

  defineMovieClip 260 // total frames: 1
  end // of defineMovieClip 260

  defineMovieClip 288 // total frames: 89

    frame 20
      gotoLabel '9k5KD('
      play
    end // of frame 20

    frame 36
      gotoFrame 28
      play
    end // of frame 36

    frame 40
      stop
    end // of frame 40

    frame 64
      stop
    end // of frame 64

    frame 78
      push ''
      removeClip
    end // of frame 78
  end // of defineMovieClip 288
  
  exportAssets
    288 as '{F 2D('
  end // of exportAssets

  defineMovieClip 304 // total frames: 17
  end // of defineMovieClip 304

  defineMovieClip 306 // total frames: 1
  end // of defineMovieClip 306

  defineMovieClip 308 // total frames: 1
  end // of defineMovieClip 308

  defineMovieClip 309 // total frames: 50

    frame 15
      gotoLabel ',D2'
      play
    end // of frame 15

    frame 22
      gotoLabel ',D2'
      play
    end // of frame 22

    frame 49
      push ''
      removeClip
    end // of frame 49
  end // of defineMovieClip 309
  
  exportAssets
    309 as '(ng8D'
  end // of exportAssets

  defineMovieClip 313 // total frames: 1
  end // of defineMovieClip 313
  
  exportAssets
    313 as '-]e9-'
  end // of exportAssets

  defineMovieClip 316 // total frames: 1
  end // of defineMovieClip 316

  defineMovieClip 317 // total frames: 1
  end // of defineMovieClip 317

  defineMovieClip 318 // total frames: 20
  end // of defineMovieClip 318

  defineMovieClip 319 // total frames: 10
  end // of defineMovieClip 319

  defineMovieClip 329 // total frames: 20

    frame 18
      gotoFrame 0
      play
    end // of frame 18
  end // of defineMovieClip 329

  defineMovieClip 330 // total frames: 2
  end // of defineMovieClip 330
  
  exportAssets
    330 as '1D}{*'
  end // of exportAssets

  defineMovieClip 335 // total frames: 1
  end // of defineMovieClip 335

  defineMovieClip 336 // total frames: 41
  end // of defineMovieClip 336
  
  exportAssets
    336 as ',S{sw'
  end // of exportAssets
  
  exportAssets
    336 as ',S{sw'
  end // of exportAssets
  
  exportAssets
    336 as ',S{sw'
  end // of exportAssets
  
  exportAssets
    336 as ',S{sw'
  end // of exportAssets

  defineMovieClip 345 // total frames: 1
  end // of defineMovieClip 345

  defineMovieClip 347 // total frames: 7
  end // of defineMovieClip 347

  defineMovieClip 348 // total frames: 1
  end // of defineMovieClip 348

  defineMovieClip 349 // total frames: 10
  end // of defineMovieClip 349
  
  exportAssets
    349 as '4B1W('
  end // of exportAssets

  defineMovieClip 350 // total frames: 20

    frame 19
      stop
    end // of frame 19
  end // of defineMovieClip 350
  
  exportAssets
    350 as '2KhC(('
  end // of exportAssets

  defineMovieClip 355 // total frames: 5

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 355

  defineMovieClip 357 // total frames: 1
  end // of defineMovieClip 357

  defineMovieClip 358 // total frames: 1
  end // of defineMovieClip 358

  defineMovieClip 360 // total frames: 3

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 360

  defineMovieClip 363 // total frames: 1
  end // of defineMovieClip 363

  defineMovieClip 368 // total frames: 3

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 368

  defineMovieClip 370 // total frames: 1
  end // of defineMovieClip 370

  defineMovieClip 372 // total frames: 1
  end // of defineMovieClip 372
  
  exportAssets
    350 as '2KhC(('
  end // of exportAssets
  
  exportAssets
    350 as '2KhC(('
  end // of exportAssets
  
  exportAssets
    350 as '2KhC(('
  end // of exportAssets

  defineMovieClip 395 // total frames: 3

    frame 0
      push '_parent'
      getVariable
      push 'b1'
      getMember
      push '_currentframe'
      getMember
      gotoAndStop
    end // of frame 0
  end // of defineMovieClip 395

  defineMovieClip 397 // total frames: 16
  end // of defineMovieClip 397

  defineMovieClip 404 // total frames: 161

    frame 16
      gotoLabel '9k5KD('
      play
    end // of frame 16

    frame 35
      stop
    end // of frame 35

    frame 64
      stop
    end // of frame 64

    frame 71
      stop
    end // of frame 71

    frame 85
      stop
    end // of frame 85

    frame 94
      stop
    end // of frame 94

    frame 125
      push ''
      removeClip
    end // of frame 125

    frame 140
      stop
    end // of frame 140

    frame 149
      gotoLabel '9k5KD('
      play
    end // of frame 149
  end // of defineMovieClip 404
  
  exportAssets
    404 as '5{Qn(('
  end // of exportAssets

  defineMovieClip 406 // total frames: 1
  end // of defineMovieClip 406

  defineMovieClip 409 // total frames: 1
  end // of defineMovieClip 409

  defineMovieClip 413 // total frames: 1
  end // of defineMovieClip 413

  defineMovieClip 416 // total frames: 1
  end // of defineMovieClip 416

  defineMovieClip 420 // total frames: 1
  end // of defineMovieClip 420

  defineMovieClip 421 // total frames: 2

    frame 0
      stop
    end // of frame 0
  end // of defineMovieClip 421
  
  exportAssets
    421 as '9,sMC'
  end // of exportAssets

  defineMovieClip 424 // total frames: 1
  end // of defineMovieClip 424
  
  exportAssets
    424 as '=ZXmL'
  end // of exportAssets

  defineMovieClip 426 // total frames: 1
  end // of defineMovieClip 426
  
  exportAssets
    426 as '4mGh1'
  end // of exportAssets
  
  exportAssets
    426 as '4mGh1'
  end // of exportAssets
  
  exportAssets
    424 as '=ZXmL'
  end // of exportAssets
  
  exportAssets
    421 as '9,sMC'
  end // of exportAssets
  
  exportAssets
    404 as '5{Qn(('
  end // of exportAssets
  
  exportAssets
    349 as '4B1W('
  end // of exportAssets
  
  exportAssets
    330 as '1D}{*'
  end // of exportAssets
  
  exportAssets
    313 as '-]e9-'
  end // of exportAssets
  
  exportAssets
    309 as '(ng8D'
  end // of exportAssets
  
  exportAssets
    288 as '{F 2D('
  end // of exportAssets
  
  exportAssets
    421 as '9,sMC'
  end // of exportAssets
  
  exportAssets
    244 as '7LeMK('
  end // of exportAssets
  
  exportAssets
    238 as '6-6 t'
  end // of exportAssets
  
  exportAssets
    236 as '*1Q1,('
  end // of exportAssets
  
  exportAssets
    233 as '7X1dG'
  end // of exportAssets
  
  exportAssets
    231 as ';IzJK('
  end // of exportAssets
  
  exportAssets
    212 as '8sfFC'
  end // of exportAssets
  
  exportAssets
    205 as '),HaF('
  end // of exportAssets
  
  exportAssets
    202 as '9lBrL'
  end // of exportAssets
  
  exportAssets
    92 as ')+jEC'
  end // of exportAssets

  defineMovieClip 427 // total frames: 1

    frame 0
      constants '7W]', '32', '+7U K', '-iB=', '+KD', ']O]t+', '0f+D=(', '6j07+', '((', ')(', '{2', '}2', '90', ';0', '[b', ']b', '(KpGn', '5cBEm', 'prototype', '(cZaB', ']{i', 'clear', 'setColor', 'step:', '=kIA', 'trace', 'waitTimer:', '}V--k', 'pos:(', ',', ')', 'vit:(', 'flGround:', 'sens:', '6g,A', '87vE7(', '{-kxL', '-V;B', 'Math', 'pow', '6b', '_rotation', '0Re25', '_x', '*r', '-Wa[', '_y', ')1khy', 'gotoAndPlay', 'abs', '44{N', '+9fc', '1peQo', '0d()', '4(y*K', ')da08', '{c}4W', '5W 5', ']WLGt', '[5(-', '+-(0', ',Q,Gt', '8D5}=(', '_xscale', ')153L', 'atan2', '}1A{_', 'sqrt', '{28l*', '6y392', 'push', '{ep0G', '2Urnb', '=e]}F', ' (', '*B', '3=', '(Erk5', '7s', '5TT7)', '}IhX+(', '5Hy6b', '4Z- F', ';aSoO', '52MSZ', ']ZYJZ', '[)[Qo', ')dFx0', '{pQP5', 'call', '0I_YH(', '36x5)', ',cqp5', '8J 3y', 'flash', ';CYOh', '9-,', '3sZ', ';ndCG', '5b)bA(', '(2(1', '4,01', 'throw', '565', '6jZ', '*]Q5}', '8Ugi)', '9KN{_', '5ggDk', '62GLS', '[c,j*', 'remove', 'length', '3Wt', 'random', 'cos', 'sin', 'min', '0AJc;', '2RA5F(', '9+5CV', '{_GfE', ')_Yd5', '5U8J7', '{w3MV', ';AH0', 'list', '=O-2j', ']ceZ7(', '-y6}J', '5}w((', ',*w{j', '+A}D', '9k5KD(', '+L Ay', ',+ zo', '}Yax5', 'max', ')X6+W', '(*a+k', ']E XA', '{}+mG', '=Y0+a', '[EX8p', 'gotoAndStop', ']Lb99', ',]WXI', '897h', '2olSA(', ' Bk{H', '-6ww0(', '0a,L', '*c)L', '1D}{*', '{==W3(', '}OcqB(', '}+MVd', '2', '1', ']', '1_zV,(', '+g+W,(', ']NmSK(', '-Q-Gb', ';9tAL', '7Qe;6', '08 }T', '70fd', '9T54', '7yU(0', 'removeMovieClip', '2pO,G', ';3ljX', ' Qbr,', '8tY3X', ']DJP*(', ']Sz},(', '=', '0', ')', 'Color', 'ra', 'ga', 'ba', 'aa', 'rb', 'gb', 'bb', 'ab', 'setTransform', '9_Ey8', '}{BLP', '5FhY)', '}8)Zq', '=OA', '*OA', '-Q)9)', ' oZ', '6g)L', ',4+L', '}cl4B', '99l8B', ' tk=B', ',i0 [', ' p3z=', '86{p(', '5U4B', '_alpha', ' (zm5', '2X}A', '066O(', '3vx;w', '2nkfq', '14{6b', '7LeMK(', ']d', 'scale', '_yscale', '+7', '_visible', '6-6 t', '7b', '),HaF(', '+{eA+', '-_X}5', '$opt', '=ZXmL', '+Da3+', 'text', '8kN', ')2fr3', '}Zms3', 'Array', ']1sj+', '-fC3a', '9oK', '7-,', ']bu40', '_name', 'swapDepths', '*=_p_', 'attachMC', '18wU*', 'createEmptyMC', '(GbB}', '+2NA', 'getDepth', 'floor', '}oQA7', 'unshift', '08M8', '9(K ;', 'destroy', 'Object', 'filters', '{lN=R', '2vR S', '9FeuX', '0 2*G', ' +CD (', ',94I8(', 'b1', '0],[E', '=Z3bA', '7X1dG', '6QA', '32at9', 'b3', 'b4', 'b5', '4plQ5', 'getTimer', ';ILSy', '3R,QM', ';y}-6(', '-)Xd+', '[Ad;n', '6GI,F', 'fps', '=3+P', '6EUe+', '4eyD,', ' cIA', '9V8', '8iDn=', '1F=(I', ')qf8H', '6X=-', '(mwVa', '0{lc4', '505t0', '(uEcO', '$dif', '69-', '7T4cF(', '*zjXt', '9lmBp', '+f2W(', '9c,Fn', '8C-7N', '[VeKO', '(S6_(', 'Key', 'LEFT', 'isDown', 'RIGHT', '[c4gL', 'run', '{5}D', 'UP', ';bnd*', '9TL3', ')_()', ';Xtqo', 'DOWN', '--K+n', 'SPACE', 'CONTROL', '1=v6,(', '(BXD3', '*1Q1,(', '0}8J]', 'stop', '1m)([', '2O4IV', '7DGl3', '6', ')SYt5', '+', '1k}nn', '55*', ';jqS(', '0hF[', '3s;sC(', '-]e9-', ',}bS9', '=ija6', ']BMb0', ']zpu5', ';IzJK(', ']y T(', '}H U3', '5NraA', '9lBrL', '_currentframe', '}SYp5', '13dBG(', '(WBt)', ']}Ou;(', '3I0pG', '{;7F4', '8U(wu', '}[cpB', '9xv]A', '{yQ=Q', '+,W', '2y+dV', '(tBee', '3)i[=', ' J3IC', '[6jRc', ')8Fyj', '[,+]C', ' 5]sx', ',biZ7(', '}SC6', '}CL', ';+', '4MvcB', '[V{(6', ')gv94', '-SjAs', '03}12', '2]g+c', '$bads', '(l23,', '}J', '*', '(KA', '841,4', '0j{ -(', '8OItb', '1whLz', '_width', '_totalframes', '-hCnb', ')+jEC', '4pw(b', '[cm3b', '=ach-(', '44=DZ', ']Vq)2', 'onKeyDown', ',VfSD(', 'callback', 'onKeyUp', 'addListener', '6nf(*(', 'getCode', '9-}5K(', '3O*F2', ' Y2T(', '106*]', ';C*X2', '9,sMC', '*w()A(', '1Z 6', '*9NtE(', '0D 6', '+aDob', '5CMYr', '*95e*(', 'ceil', '9xuZZ', '5{Qn((', '(ng8D', '{F 2D(', '(8LH1', '4B1W(', 'pop', '8sfFC', 'insert', '+Jv3J(', 'splice', '5;OW;', '2z]V8', '980Sb', 'init', '(kJ+1(', 'mode'  
      push '7W]'
      function2 (r:2='}J') (r:1='this')
        push r:this, '32', r:'}J', 1, '+7U K'
        new
        setMember
        push r:this, '-iB=', r:'}J'
        setMember
        push r:'}J', '+KD', r:this
        setMember
        push r:this, ']O]t+', FALSE
        setMember
        push r:this, '0f+D=(', FALSE
        setMember
        push r:this, '6j07+', TRUE
        setMember
        push r:this, '((', 0
        setMember
        push r:this, ')(', 0
        setMember
        push r:this, '{2', 0
        setMember
        push r:this, '}2', 0
        setMember
        push r:this, '90', 0
        setMember
        push r:this, ';0', 0
        setMember
        push r:this, '[b', 0
        setMember
        push r:this, ']b', 0
        setMember
        push r:this, '(KpGn', 1
        setMember
        push r:this, '5cBEm', 0.95
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '(cZaB'
      function2 () (r:1='this')
        push 0, ']{i'
        getVariable
        push 'clear'
        callMethod
        pop
        push 16777215, 1, ']{i'
        getVariable
        push 'setColor'
        callMethod
        pop
        push 'step:', r:this, '=kIA'
        getMember
        add
        push 1, ']{i'
        getVariable
        push 'trace'
        callMethod
        pop
        push 'waitTimer:', r:this, '}V--k'
        getMember
        add
        push 1, ']{i'
        getVariable
        push 'trace'
        callMethod
        pop
        push 'pos:(', r:this, '(('
        getMember
        add
        push ','
        add
        push r:this, ')('
        getMember
        add
        push ')'
        add
        push 1, ']{i'
        getVariable
        push 'trace'
        callMethod
        pop
        push 'vit:(', r:this, '[b'
        getMember
        add
        push ','
        add
        push r:this, ']b'
        getMember
        add
        push ')'
        add
        push 1, ']{i'
        getVariable
        push 'trace'
        callMethod
        pop
        push 'flGround:', r:this, ']O]t+'
        getMember
        add
        push 1, ']{i'
        getVariable
        push 'trace'
        callMethod
        pop
        push 'sens:', r:this, '6g,A'
        getMember
        add
        push 1, ']{i'
        getVariable
        push 'trace'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this')
        push r:this, ']O]t+'
        getMember
        not
        not
        branchIfTrue label1
        push r:this, ']b', r:this, ']b'
        getMember
        push r:this, '(KpGn'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label1:
        push r:this, '5cBEm'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label2
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push r:this, '5cBEm'
        getMember
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        setRegister r:2
        pop
        push r:this, '[b', r:this, '[b'
        getMember
        push r:2
        multiply
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:2
        multiply
        setMember
       label2:
        push r:this, '{2', r:this, '{2'
        getMember
        push r:this, '[b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '}2', r:this, '}2'
        getMember
        push r:this, ']b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '6b'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label3
        push r:this, '6b', r:this, '6b'
        getMember
        push 0.95
        multiply
        setMember
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '-iB='
        getMember
        push '_rotation'
        getMember
        push r:this, '6b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label3:
        push 0, r:this, '0Re25'
        callMethod
        pop
        push r:this, '-iB='
        getMember
        push '_x', r:this, '(('
        getMember
        push 0.25
        add
        push r:this, '90'
        getMember
        push 0.5
        multiply
        add
        push '*r'
        getVariable
        push '-Wa['
        getMember
        multiply
        push r:this, '{2'
        getMember
        add
        setMember
        push r:this, '-iB='
        getMember
        push '_y', r:this, ')('
        getMember
        push 0.25
        add
        push r:this, ';0'
        getMember
        push 0.5
        multiply
        add
        push '*r'
        getVariable
        push '-Wa['
        getMember
        multiply
        push r:this, '}2'
        getMember
        add
        setMember
        push r:this, ')1khy'
        getMember
        push NULL
        equals
        not
        dup
        not
        branchIfTrue label4
        pop
        push r:this, '0f+D=('
        getMember
        not
       label4:
        not
        branchIfTrue label5
        push r:this, ')1khy'
        getMember
        push 1, r:this, '-iB='
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push r:this, ')1khy', NULL
        setMember
       label5:
      end // of function 

      setMember
      push r:1, '0Re25'
      function2 () (r:1='this')
        push '*r'
        getVariable
        push '-Wa['
        getMember
        push 0.25
        multiply
        setRegister r:2
        pop
        push r:this, '{2'
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        setRegister r:3
        pop
        push r:this, '}2'
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        setRegister r:4
        pop
       label6:
        push r:3, r:2
        greaterThan
        dup
        branchIfTrue label7
        pop
        push r:4, r:2
        greaterThan
       label7:
        not
        branchIfTrue label25
        push r:3, r:4
        greaterThan
        not
        branchIfTrue label17
        push r:this, '{2'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label12
        push r:this, '90'
        getMember
        push 0
        equals
        not
        branchIfTrue label10
        push r:this, '(('
        getMember
        push '44{N'
        getVariable
        push '+9fc'
        getMember
        push 1
        subtract
        lessThan
        not
        branchIfTrue label8
        push r:this, '90', r:this, '90'
        getMember
        increment
        setMember
        push r:this, '{2', r:this, '{2'
        getMember
        push 2, r:2
        multiply
        subtract
        setMember
        push 0, r:this, '1peQo'
        callMethod
        pop
        branch label9
       label8:
        push 0, r:this, '0d()'
        callMethod
        pop
        push r:this, '{2', r:2
        setMember
       label9:
        branch label11
       label10:
        push 0, r:this, '4(y*K'
        callMethod
        pop
        push r:this, '90', 0
        setMember
        push r:this, '{2', r:this, '{2'
        getMember
        push 2, r:2
        multiply
        subtract
        setMember
        push r:this, '((', r:this, '(('
        getMember
        increment
        setMember
        push 0, r:this, ')da08'
        callMethod
        pop
       label11:
        branch label16
       label12:
        push r:this, '90'
        getMember
        push 1
        equals
        not
        branchIfTrue label15
        push r:this, '(('
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label13
        push r:this, '90', r:this, '90'
        getMember
        decrement
        setMember
        push r:this, '{2', r:this, '{2'
        getMember
        push 2, r:2
        multiply
        add
        setMember
        push 0, r:this, '1peQo'
        callMethod
        pop
        branch label14
       label13:
        push 0, r:this, '0d()'
        callMethod
        pop
        push r:this, '{2', 0, r:2
        subtract
        setMember
       label14:
        branch label16
       label15:
        push 0, r:this, '4(y*K'
        callMethod
        pop
        push r:this, '90', 1
        setMember
        push r:this, '{2', r:this, '{2'
        getMember
        push 2, r:2
        multiply
        add
        setMember
        push r:this, '((', r:this, '(('
        getMember
        decrement
        setMember
        push 0, r:this, ')da08'
        callMethod
        pop
       label16:
        branch label24
       label17:
        push r:this, '}2'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label22
        push r:this, ';0'
        getMember
        push 0
        equals
        not
        branchIfTrue label20
        push 0, r:this, '{c}4W'
        callMethod
        not
        not
        branchIfTrue label18
        push r:this, ';0', r:this, ';0'
        getMember
        increment
        setMember
        push r:this, '}2', r:this, '}2'
        getMember
        push 2, r:2
        multiply
        subtract
        setMember
        branch label19
       label18:
        push 0, r:this, '5W 5'
        callMethod
        pop
        push r:this, '}2', r:2
        setMember
       label19:
        branch label21
       label20:
        push 0, r:this, '4(y*K'
        callMethod
        pop
        push r:this, ';0', 0
        setMember
        push r:this, '}2', r:this, '}2'
        getMember
        push 2, r:2
        multiply
        subtract
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        increment
        setMember
        push 0, r:this, ')da08'
        callMethod
        pop
       label21:
        branch label24
       label22:
        push r:this, ';0'
        getMember
        push 1
        equals
        not
        branchIfTrue label23
        push r:this, ';0', r:this, ';0'
        getMember
        decrement
        setMember
        push r:this, '}2', r:this, '}2'
        getMember
        push 2, r:2
        multiply
        add
        setMember
        branch label24
       label23:
        push 0, r:this, '4(y*K'
        callMethod
        pop
        push r:this, ';0', 1
        setMember
        push r:this, '}2', r:this, '}2'
        getMember
        push 2, r:2
        multiply
        add
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        decrement
        setMember
        push 0, r:this, ')da08'
        callMethod
        pop
       label24:
        push r:this, '{2'
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        setRegister r:3
        pop
        push r:this, '}2'
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        setRegister r:4
        pop
        branch label6
       label25:
      end // of function 

      setMember
      push r:1, '1peQo'
      function2 () (r:1='this')
        push r:this, ']O]t+'
        getMember
        not
        branchIfTrue label26
        push 0, r:this, ']WLGt'
        callMethod
        pop
       label26:
      end // of function 

      setMember
      push r:1, ']WLGt'
      function2 () (r:1='this')
        push 0, r:this, '{c}4W'
        callMethod
        not
        not
        branchIfTrue label27
        push 0, r:this, '[5(-'
        callMethod
        pop
       label27:
      end // of function 

      setMember
      push r:1, '[5(-'
      function2 () (r:1='this')
        push r:this, ']O]t+', FALSE
        setMember
      end // of function 

      setMember
      push r:1, '5W 5'
      function2 () (r:1='this')
        push r:this, ']O]t+', TRUE
        setMember
        push r:this, ']b', 0
        setMember
      end // of function 

      setMember
      push r:1, '0d()'
      function2 () (r:1='this')
        push r:this, '[b', 0
        setMember
      end // of function 

      setMember
      push r:1, '{c}4W'
      function2 () (r:1='this')
        push r:this, '6j07+'
        getMember
        not
        not
        branchIfTrue label28
        push FALSE
        return
       label28:
        push 0
        setRegister r:2
        pop
        branch label30
       label29:
        push r:2
        increment
        setRegister r:2
        pop
       label30:
        push r:2, 2
        lessThan
        not
        branchIfTrue label32
        push r:this, '90'
        getMember
        push 2
        multiply
        push 1
        subtract
        setRegister r:3
        pop
        push r:this, ')('
        getMember
        push 1
        add
        push r:this, '(('
        getMember
        push r:3, r:2
        multiply
        add
        push 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push ',Q,Gt'
        callMethod
        not
        not
        branchIfTrue label31
        push TRUE
        return
       label31:
        branch label29
       label32:
        push FALSE
        return
      end // of function 

      setMember
      push r:1, ')da08'
      function2 () (r:1='this')
      end // of function 

      setMember
      push r:1, '4(y*K'
      function2 () (r:1='this')
      end // of function 

      setMember
      push r:1, '8D5}=('
      function2 (r:2='7') (r:1='this')
        push r:this, '6g,A', r:'7'
        setMember
        push r:this, '-iB='
        getMember
        push '_xscale', r:'7', 100
        multiply
        setMember
      end // of function 

      setMember
      push r:1, ')153L'
      function2 (r:2='8') (r:1='this')
        push r:'8', '-iB='
        getMember
        push '_x'
        getMember
        push r:this, '-iB='
        getMember
        push '_x'
        getMember
        subtract
        setRegister r:3
        pop
        push r:'8', '-iB='
        getMember
        push '_y'
        getMember
        push r:this, '-iB='
        getMember
        push '_y'
        getMember
        subtract
        setRegister r:4
        pop
        push r:3, r:4, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        return
      end // of function 

      setMember
      push r:1, '}1A{_'
      function2 (r:2='8') (r:1='this')
        push r:'8', '-iB='
        getMember
        push '_x'
        getMember
        push r:this, '-iB='
        getMember
        push '_x'
        getMember
        subtract
        setRegister r:3
        pop
        push r:'8', '-iB='
        getMember
        push '_y'
        getMember
        push r:this, '-iB='
        getMember
        push '_y'
        getMember
        subtract
        setRegister r:4
        pop
        push r:3, r:3
        multiply
        push r:4, r:4
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        return
      end // of function 

      setMember
      push '{28l*'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6y392'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '{ep0G', 10
        setMember
        push r:this, '2Urnb', FALSE
        setMember
        push r:this, '=e]}F', ' (', 1, '*B', 3, 2
        initObject
        push ' (', 20, '*B', 2, 2
        initObject
        push ' (', 100, '*B', 1, 2
        initObject
        push 3
        initArray
        setMember
        push r:this, '3=', 10
        setMember
        push r:this, '(Erk5', '*r'
        getVariable
        push '7s'
        getMember
        setMember
        push r:this, '5TT7)', 21
        setMember
        push '*r'
        getVariable
        push '}IhX+('
        getMember
        push 1, r:this, '5Hy6b'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '7W]'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '5Hy6b'
      function2 (r:2='7') (r:1='this')
        push r:this, '=kIA', r:'7'
        setMember
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push '*r'
        getVariable
        push '4Z- F'
        getMember
        strictEquals
        branchIfTrue label33
        push r:0, '*r'
        getVariable
        push '}IhX+('
        getMember
        strictEquals
        branchIfTrue label34
        push r:0, '*r'
        getVariable
        push ';aSoO'
        getMember
        strictEquals
        branchIfTrue label35
        push r:0, '*r'
        getVariable
        push '52MSZ'
        getMember
        strictEquals
        branchIfTrue label36
        branch label37
       label33:
        branch label37
       label34:
        push r:this, ']O]t+', FALSE
        setMember
        branch label37
       label35:
        push r:this, ']ZYJZ', FALSE
        setMember
        push r:this, '}V--k', r:this, '[)[Qo'
        getMember
        setMember
        push r:this, '[b', 0
        setMember
        branch label37
       label36:
        push r:this, '}V--k', r:this, ')dFx0'
        getMember
        setMember
        push r:this, '[b', 0
        setMember
        branch label37
       label37:
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '{pQP5'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push '*r'
        getVariable
        push '4Z- F'
        getMember
        strictEquals
        branchIfTrue label38
        push r:0, '*r'
        getVariable
        push '}IhX+('
        getMember
        strictEquals
        branchIfTrue label39
        push r:0, '*r'
        getVariable
        push ';aSoO'
        getMember
        strictEquals
        branchIfTrue label40
        push r:0, '*r'
        getVariable
        push '52MSZ'
        getMember
        strictEquals
        branchIfTrue label43
        branch label45
       label38:
        branch label45
       label39:
        branch label45
       label40:
        push r:this, '}V--k', r:this, '}V--k'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '}V--k'
        getMember
        push 15
        lessThan
        not
        branchIfTrue label42
        push r:this, ']ZYJZ'
        getMember
        not
        not
        branchIfTrue label41
        push r:this, ']ZYJZ', TRUE
        setMember
        push '0I_YH(', 1, r:this, '-iB='
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
       label41:
        push r:this, '}V--k'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label42
        push 0, r:this, '36x5)'
        callMethod
        pop
       label42:
        branch label45
       label43:
        push r:this, '}V--k', r:this, '}V--k'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '}V--k'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label44
        push 0, r:this, ',cqp5'
        callMethod
        pop
        push r:this, ')1khy', ',cqp5'
        setMember
       label44:
        branch label45
       label45:
        push 0, r:this, '8J 3y'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '36x5)'
      function2 () (r:1='this')
        push r:this, ']b', r:this, ']b'
        getMember
        push r:this, '5TT7)'
        getMember
        subtract
        setMember
        push '*r'
        getVariable
        push '}IhX+('
        getMember
        push 1, r:this, '5Hy6b'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ',cqp5'
      function2 () (r:1='this')
        push '*r'
        getVariable
        push '4Z- F'
        getMember
        push 1, r:this, '5Hy6b'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '8J 3y'
      function2 () (r:1='this')
        push r:this, 'flash'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label47
        push r:this, 'flash'
        getMember
        setRegister r:2
        pop
        push r:this, 'flash', r:this, 'flash'
        getMember
        push 0.7
        multiply
        setMember
        push r:this, 'flash'
        getMember
        push 1
        lessThan
        not
        branchIfTrue label46
        push r:this, 'flash', NULL
        setMember
        push 0
        setRegister r:2
        pop
       label46:
        push 16777215, r:2, r:this, '-iB='
        getMember
        push 3, '*r'
        getVariable
        push ';CYOh'
        callMethod
        pop
       label47:
      end // of function 

      setMember
      push r:1, '9-,'
      function2 (r:2='7') (r:1='this')
        push '*r'
        getVariable
        push '3sZ'
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push r:'7', 1, r:this, '(2(1'
        callMethod
        pop
        push 10, 1.57, 1.57, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '6g,A'
        getMember
        multiply
        subtract
        push 2, r:this, 'throw'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '565'
      function2 (r:2=')93A') (r:1='this')
        push '*r'
        getVariable
        push '6jZ'
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push r:')93A', '*]Q5}'
        getMember
        push 1, r:this, '(2(1'
        callMethod
        pop
        push 2, r:')93A', '[b'
        getMember
        push r:')93A', ']b'
        getMember
        push 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        push 2, r:this, 'throw'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '(2(1'
      function2 (r:2='7') (r:1='this')
        push r:this, '3=', r:this, '3='
        getMember
        push r:'7'
        subtract
        setMember
        push r:this, '3='
        getMember
        push 0
        lessThan
        not
        branchIfTrue label48
        push 0, r:this, '8Ugi)'
        callMethod
        pop
        branch label49
       label48:
        push r:this, 'flash', 100
        setMember
       label49:
      end // of function 

      setMember
      push r:1, '8Ugi)'
      function2 () (r:1='this')
        push 16777215, 0, r:this, '-iB='
        getMember
        push 3, '*r'
        getVariable
        push ';CYOh'
        callMethod
        pop
        push r:this, '(Erk5'
        getMember
        push 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push 0, r:this, '9KN{_'
        callMethod
        push r:this, '-iB='
        getMember
        push '_y'
        getMember
        push r:this, '-iB='
        getMember
        push '_x'
        getMember
        push 3, '*r'
        getVariable
        push '+-(0'
        getMember
        push '5ggDk'
        callMethod
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '62GLS', '*r'
        getVariable
        push '+-(0'
        getMember
        push '62GLS'
        getMember
        push 0
        getMember
        push r:this, '[c,j*'
        getMember
        subtract
        push 1
        initArray
        setMember
        push 0, r:this, '4(y*K'
        callMethod
        pop
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6y392'
        getMember
        push 'remove'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '9KN{_'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label51
       label50:
        push r:3
        increment
        setRegister r:3
        pop
       label51:
        push r:3, r:this, '=e]}F'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label52
        push r:2, r:this, '=e]}F'
        getMember
        push r:3
        getMember
        push ' ('
        getMember
        add
        setRegister r:2
        pop
        branch label50
       label52:
        push r:2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:4
        pop
        push 0
        setRegister r:2
        pop
        push 0
        setRegister r:5
        pop
        branch label54
       label53:
        push r:5
        increment
        setRegister r:5
        pop
       label54:
        push r:5, r:this, '=e]}F'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label56
        push r:2, r:this, '=e]}F'
        getMember
        push r:5
        getMember
        push ' ('
        getMember
        add
        setRegister r:2
        pop
        push r:2, r:4
        greaterThan
        not
        branchIfTrue label55
        push r:this, '=e]}F'
        getMember
        push r:5
        getMember
        push '*B'
        getMember
        return
       label55:
        branch label53
       label56:
        push 0
        return
      end // of function 

      setMember
      push r:1, 'throw'
      function2 (r:2='(', r:3='9') (r:1='this')
        push r:'(', 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:'9'
        multiply
        setRegister r:4
        pop
        push r:'(', 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:'9'
        multiply
        push 3
        subtract
        setRegister r:5
        pop
        push r:this, ']O]t+'
        getMember
        not
        branchIfTrue label57
        push r:5, 0, 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:5
        pop
        push r:5, 0
        lessThan
        not
        branchIfTrue label57
        push '*r'
        getVariable
        push '}IhX+('
        getMember
        push 1, r:this, '5Hy6b'
        callMethod
        pop
       label57:
        push r:this, '[b', r:this, '[b'
        getMember
        push r:4
        add
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:5
        add
        setMember
      end // of function 

      setMember
      push r:1, '0AJc;'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
       label58:
        push r:2, 6
        lessThan
        not
        branchIfTrue label60
        push r:2
        increment
        setRegister r:2
        pop
        push r:this, ')('
        getMember
        push 1
        add
        push r:this, '(('
        getMember
        push r:this, '6g,A'
        getMember
        push r:2, 1
        add
        multiply
        add
        push 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push ',Q,Gt'
        callMethod
        not
        not
        branchIfTrue label59
        branch label60
       label59:
        branch label58
       label60:
        push r:2, 6
        lessThan
        not
        branchIfTrue label61
        push r:2, 1, r:this, '2RA5F('
        callMethod
        pop
       label61:
      end // of function 

      setMember
      push r:1, '2RA5F('
      function2 (r:2='5T6+') (r:1='this')
        push '*r'
        getVariable
        push '}IhX+('
        getMember
        push 1, r:this, '5Hy6b'
        callMethod
        pop
        push r:this, ']b', -10
        setMember
        push r:this, '[b', 0.5, r:'5T6+', 24
        multiply
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        push r:this, '6g,A'
        getMember
        multiply
        setMember
      end // of function 

      setMember
      push r:1, '5W 5'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '9+5CV'
        getVariable
        push 'call'
        callMethod
        pop
        push '*r'
        getVariable
        push '4Z- F'
        getMember
        push 1, r:this, '5Hy6b'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '1peQo'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '{_GfE'
        getVariable
        push 'call'
        callMethod
        pop
        push 0, r:this, ')_Yd5'
        callMethod
        setRegister r:3
        pop
        push r:this, '=kIA'
        getMember
        push '*r'
        getVariable
        push '4Z- F'
        getMember
        equals
        dup
        not
        branchIfTrue label62
        pop
        push r:this, '5U8J7'
        getMember
        push NULL
        equals
        not
       label62:
        dup
        not
        branchIfTrue label63
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push r:this, '5U8J7'
        getMember
        multiply
        push 1
        lessThan
       label63:
        not
        branchIfTrue label69
        push TRUE
        setRegister r:4
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push ')('
        getMember
        push r:this, ')('
        getMember
        push 3
        subtract
        greaterThan
        dup
        not
        branchIfTrue label64
        pop
        push r:3
       label64:
        not
        branchIfTrue label65
        push FALSE
        setRegister r:4
        pop
       label65:
        push r:4
        not
        branchIfTrue label69
        push 2
        setRegister r:5
        pop
        branch label67
       label66:
        push r:5
        increment
        setRegister r:5
        pop
       label67:
        push r:5, 5
        lessThan
        not
        branchIfTrue label69
        push r:this, ')('
        getMember
        push r:5
        subtract
        push r:this, '(('
        getMember
        push 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push ',Q,Gt'
        callMethod
        not
        not
        branchIfTrue label68
        push '*r'
        getVariable
        push ';aSoO'
        getMember
        push 1, r:this, '5Hy6b'
        callMethod
        pop
        branch label69
       label68:
        branch label66
       label69:
      end // of function 

      setMember
      push r:1, '[5(-'
      function2 () (r:1='this')
        push '*r'
        getVariable
        push '}IhX+('
        getMember
        push 1, r:this, '5Hy6b'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '0d()'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '{w3MV'
        getVariable
        push 'call'
        callMethod
        pop
        push 0, r:this, '6g,A'
        getMember
        subtract
        push 1, r:this, '8D5}=('
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ')da08'
      function2 () (r:1='this')
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push ';AH0'
        getMember
        push r:this, '(('
        getMember
        getMember
        push r:this, ')('
        getMember
        getMember
        push 'list'
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '4(y*K'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '=O-2j'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push ';AH0'
        getMember
        push r:this, '(('
        getMember
        getMember
        push r:this, ')('
        getMember
        getMember
        push 'list'
        getMember
        push 'remove'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ']ceZ7('
      function2 () (r:1='this')
        push 2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        setRegister r:2
        pop
        push 0, r:this, ')_Yd5'
        callMethod
        not
        branchIfTrue label72
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '(('
        getMember
        push r:this, '(('
        getMember
        lessThan
        not
        branchIfTrue label70
        push -1
        branch label71
       label70:
        push 1
       label71:
        setRegister r:2
        pop
       label72:
        push r:2, 1, r:this, '8D5}=('
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ')_Yd5'
      function2 () (r:1='this')
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push r:this, '{ep0G'
        getMember
        multiply
        push 1
        lessThan
        return
      end // of function 

      setMember
      push '{_GfE', '7W]'
      getVariable
      push 'prototype'
      getMember
      push '1peQo'
      getMember
      setVariable
      push '9+5CV', '7W]'
      getVariable
      push 'prototype'
      getMember
      push '5W 5'
      getMember
      setVariable
      push '{pQP5', '7W]'
      getVariable
      push 'prototype'
      getMember
      push '87vE7('
      getMember
      setVariable
      push '=O-2j', '7W]'
      getVariable
      push 'prototype'
      getMember
      push '4(y*K'
      getMember
      setVariable
      push '{w3MV', '7W]'
      getVariable
      push 'prototype'
      getMember
      push '0d()'
      getMember
      setVariable
      push '-y6}J'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push 2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 1, r:this, '8D5}=('
        callMethod
        pop
        push r:this, '5}w((', TRUE
        setMember
        push r:this, '[)[Qo', 26
        setMember
        push '*r'
        getVariable
        push '}IhX+('
        getMember
        push 1, r:this, '5Hy6b'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '{28l*'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '5Hy6b'
      function2 (r:3='7') (r:1='this', r:2='super')
        push r:'7', r:this, 2, ',*w{j'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push '*r'
        getVariable
        push '4Z- F'
        getMember
        strictEquals
        branchIfTrue label73
        push r:0, '*r'
        getVariable
        push '}IhX+('
        getMember
        strictEquals
        branchIfTrue label76
        push r:0, '*r'
        getVariable
        push ';aSoO'
        getMember
        strictEquals
        branchIfTrue label77
        push r:0, '*r'
        getVariable
        push '52MSZ'
        getMember
        strictEquals
        branchIfTrue label78
        branch label79
       label73:
        push r:this, '5}w(('
        getMember
        not
        not
        branchIfTrue label74
        push r:this, '5}w((', TRUE
        setMember
        push r:this, ')1khy', '+A}D'
        setMember
        branch label75
       label74:
        push r:this, ')1khy', '9k5KD('
        setMember
       label75:
        branch label79
       label76:
        push r:this, ']O]t+', FALSE
        setMember
        branch label79
       label77:
        push r:this, ')1khy', '36x5)'
        setMember
        branch label79
       label78:
        push r:this, ')1khy', '+L Ay'
        setMember
        branch label79
       label79:
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, ',+ zo'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push '*r'
        getVariable
        push '4Z- F'
        getMember
        strictEquals
        branchIfTrue label80
        push r:0, '*r'
        getVariable
        push '}IhX+('
        getMember
        strictEquals
        branchIfTrue label81
        branch label85
       label80:
        push r:this, '6g,A'
        getMember
        push r:this, '}Yax5'
        getMember
        multiply
        push r:this, '[b'
        getMember
        subtract
        setRegister r:3
        pop
        push 0.5
        setRegister r:4
        pop
        push r:this, '[b', r:this, '[b'
        getMember
        push r:4, r:3, 0.2
        multiply
        push 0, r:4
        subtract
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        branch label85
       label81:
        push r:this, ')X6+W'
        getMember
        dup
        not
        branchIfTrue label82
        pop
        push r:this, ']b'
        getMember
        push 0
        greaterThan
       label82:
        not
        branchIfTrue label84
        push r:this, ')X6+W', FALSE
        setMember
        push r:this, '(*a+k'
        getMember
        not
        branchIfTrue label83
        push r:this, ')1khy', ']E XA'
        setMember
        push r:this, '(*a+k', FALSE
        setMember
        branch label84
       label83:
        push r:this, ')1khy', '{}+mG'
        setMember
       label84:
        branch label85
       label85:
      end // of function 

      setMember
      push r:1, '2RA5F('
      function2 (r:3='5T6+') (r:1='this', r:2='super')
        push r:'5T6+', r:this, 2, '=Y0+a'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '(*a+k', TRUE
        setMember
        push r:this, ')X6+W', TRUE
        setMember
        push r:this, ')1khy', '[EX8p'
        setMember
      end // of function 

      setMember
      push r:1, 'throw'
      function2 (r:3='(', r:4='9') (r:1='this', r:2='super')
        push r:this, ']O]t+'
        getMember
        dup
        not
        branchIfTrue label86
        pop
        push r:this, '3='
        getMember
        push 0
        greaterThan
       label86:
        not
        branchIfTrue label87
        push '9k5KD(', 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
       label87:
        push r:'9', r:'(', r:this, 3, ']Lb99'
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '36x5)'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, ',]WXI'
        getVariable
        push 'call'
        callMethod
        pop
        push '897h', 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:this, ')X6+W', TRUE
        setMember
        push r:this, '5}w((', FALSE
        setMember
      end // of function 

      setMember
      push r:1, '5W 5'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '2olSA('
        getVariable
        push 'call'
        callMethod
        pop
        push 0, r:this, ']ceZ7('
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '8Ugi)'
      function2 () (r:1='this', r:2='super')
        push '8Ugi)', 1, r:this, '-iB='
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push r:this, 1, ' Bk{H'
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push ',*w{j', '{28l*'
      getVariable
      push 'prototype'
      getMember
      push '5Hy6b'
      getMember
      setVariable
      push '2olSA(', '{28l*'
      getVariable
      push 'prototype'
      getMember
      push '5W 5'
      getMember
      setVariable
      push ',]WXI', '{28l*'
      getVariable
      push 'prototype'
      getMember
      push '36x5)'
      getMember
      setVariable
      push ']Lb99', '{28l*'
      getVariable
      push 'prototype'
      getMember
      push 'throw'
      getMember
      setVariable
      push '=Y0+a', '{28l*'
      getVariable
      push 'prototype'
      getMember
      push '2RA5F('
      getMember
      setVariable
      push ',+ zo', '{28l*'
      getVariable
      push 'prototype'
      getMember
      push '87vE7('
      getMember
      setVariable
      push ' Bk{H', '{28l*'
      getVariable
      push 'prototype'
      getMember
      push '8Ugi)'
      getMember
      setVariable
      push '-6ww0('
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '[c,j*', 3
        setMember
        push r:this, '3=', 50
        setMember
        push r:this, '(Erk5', '*r'
        getVariable
        push '0a,L'
        getMember
        setMember
        push r:this, '[)[Qo', 12
        setMember
        push r:this, '5U8J7', 6
        setMember
        push r:this, '{ep0G', 2
        setMember
        push r:this, '5TT7)', 36
        setMember
        push r:this, '}Yax5', 4
        setMember
        push ' (', 40, '*B', 1, 2
        initObject
        push 1, r:this, '=e]}F'
        getMember
        push 'push'
        callMethod
        pop
        push ' (', 10, '*B', 2, 2
        initObject
        push 1, r:this, '=e]}F'
        getMember
        push 'push'
        callMethod
        pop
        push ' (', 30, '*B', 5, 2
        initObject
        push 1, r:this, '=e]}F'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '(Erk5', '*r'
        getVariable
        push '*c)L'
        getMember
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '-y6}J'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '565'
      function2 (r:3=')93A') (r:1='this', r:2='super')
        push r:this, '=kIA'
        getMember
        push '*r'
        getVariable
        push '4Z- F'
        getMember
        equals
        not
        branchIfTrue label90
        push r:')93A', '[b'
        getMember
        push r:this, '6g,A'
        getMember
        multiply
        push 0
        lessThan
        not
        branchIfTrue label90
        push '1D}{*', 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '{==W3('
        callMethod
        setRegister r:4
        pop
        push r:4, '_x', r:')93A', '-iB='
        getMember
        push '_x'
        getMember
        setMember
        push r:4, '_y', r:')93A', '-iB='
        getMember
        push '_y'
        getMember
        setMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '}OcqB('
        getMember
        push '*r'
        getVariable
        push '}+MVd'
        getMember
        getMember
        not
        branchIfTrue label88
        push '2'
        branch label89
       label88:
        push '1'
       label89:
        push 1, r:4, 'gotoAndStop'
        callMethod
        pop
        push r:4, '[b', 0, r:')93A', '[b'
        getMember
        subtract
        push 0.75
        multiply
        setMember
        push r:4, ']b', r:')93A', ']b'
        getMember
        push 3
        subtract
        setMember
        push r:4, ']', 20, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:4, '(KpGn', 0.4
        setMember
        push UNDEF
        return
       label90:
        push r:')93A', r:this, 2, '1_zV,('
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '9-,'
      function2 (r:3='7') (r:1='this', r:2='super')
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        push r:this, '6g,A'
        getMember
        multiply
        push 0
        lessThan
        not
        branchIfTrue label91
        push r:'7', r:this, 2, '+g+W,('
        getVariable
        push 'call'
        callMethod
        pop
        branch label92
       label91:
        push 12, 1.57, 1.57, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '6g,A'
        getMember
        multiply
        subtract
        push 2, r:this, 'throw'
        callMethod
        pop
       label92:
      end // of function 

      setMember
      push r:1, 'throw'
      function2 (r:3='(', r:4='9') (r:1='this', r:2='super')
        push r:this, ']O]t+'
        getMember
        dup
        not
        branchIfTrue label93
        pop
        push r:this, '3='
        getMember
        push 0
        greaterThan
       label93:
        not
        branchIfTrue label94
        push '9k5KD(', 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
       label94:
        push r:'9', r:'(', r:this, 3, ']NmSK('
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '1peQo'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '-Q-Gb'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, ')('
        getMember
        push 1
        add
        push r:this, '(('
        getMember
        push r:this, '6g,A'
        getMember
        add
        push 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push ',Q,Gt'
        callMethod
        not
        branchIfTrue label98
        push 0, r:this, ')_Yd5'
        callMethod
        not
        branchIfTrue label97
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:3
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push ')('
        getMember
        push r:this, ')('
        getMember
        push 3
        add
        greaterThan
        not
        dup
        not
        branchIfTrue label95
        pop
        push r:3, r:3, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        divide
        int
        push r:this, '6g,A'
        getMember
        equals
        not
       label95:
        not
        branchIfTrue label96
        push 0, r:this, '6g,A'
        getMember
        subtract
        push 1, r:this, '8D5}=('
        callMethod
        pop
       label96:
        branch label98
       label97:
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.7
        lessThan
        not
        branchIfTrue label98
        push 0, r:this, '6g,A'
        getMember
        subtract
        push 1, r:this, '8D5}=('
        callMethod
        pop
       label98:
      end // of function 

      setMember
      push '-Q-Gb', '{28l*'
      getVariable
      push 'prototype'
      getMember
      push '1peQo'
      getMember
      setVariable
      push '+g+W,(', '{28l*'
      getVariable
      push 'prototype'
      getMember
      push '9-,'
      getMember
      setVariable
      push ']NmSK(', '-y6}J'
      getVariable
      push 'prototype'
      getMember
      push 'throw'
      getMember
      setVariable
      push '1_zV,(', '{28l*'
      getVariable
      push 'prototype'
      getMember
      push '565'
      getMember
      setVariable
      push ';9tAL'
      function2 (r:2='}J') (r:1='this')
        push r:this, '32', r:'}J', 1, '+7U K'
        new
        setMember
        push r:this, '-iB=', r:'}J'
        setMember
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '7Qe;6'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '((', 0
        setMember
        push r:this, ')(', 0
        setMember
        push r:this, '{2', 0
        setMember
        push r:this, '}2', 0
        setMember
        push r:this, '6b', 0
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this')
        push r:this, '08 }T', FALSE
        setMember
        push r:this, '{2', r:this, '{2'
        getMember
        push r:this, '[b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '}2', r:this, '}2'
        getMember
        push r:this, ']b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push 0, r:this, '0Re25'
        callMethod
        pop
        push r:this, '-iB='
        getMember
        push '_x', r:this, '(('
        getMember
        push 0.5
        add
        push '*r'
        getVariable
        push '-Wa['
        getMember
        multiply
        push r:this, '{2'
        getMember
        add
        setMember
        push r:this, '-iB='
        getMember
        push '_y', r:this, ')('
        getMember
        push 0.5
        add
        push '*r'
        getVariable
        push '-Wa['
        getMember
        multiply
        push r:this, '}2'
        getMember
        add
        setMember
        push r:this, '-iB='
        getMember
        push '_rotation', r:this, '-iB='
        getMember
        push '_rotation'
        getMember
        push r:this, '6b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:this, '(('
        getMember
        push 0
        lessThan
        dup
        branchIfTrue label99
        pop
        push r:this, '(('
        getMember
        push '44{N'
        getVariable
        push '+9fc'
        getMember
        greaterThan
       label99:
        dup
        branchIfTrue label100
        pop
        push r:this, ')('
        getMember
        push 0
        lessThan
       label100:
        dup
        branchIfTrue label101
        pop
        push r:this, ')('
        getMember
        push '44{N'
        getVariable
        push '70fd'
        getMember
        greaterThan
       label101:
        not
        branchIfTrue label102
        push 0, r:this, '9T54'
        callMethod
        pop
       label102:
        push r:this, '08 }T'
        getMember
        not
        not
        branchIfTrue label103
        push 0, r:this, '7yU(0'
        callMethod
        pop
       label103:
      end // of function 

      setMember
      push r:1, '0Re25'
      function2 () (r:1='this')
        push '*r'
        getVariable
        push '-Wa['
        getMember
        push 0.5
        multiply
        setRegister r:2
        pop
        push r:this, '{2'
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        setRegister r:3
        pop
        push r:this, '}2'
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        setRegister r:4
        pop
       label104:
        push r:3, r:2
        greaterThan
        dup
        branchIfTrue label105
        pop
        push r:4, r:2
        greaterThan
       label105:
        not
        branchIfTrue label111
        push r:3, r:2
        greaterThan
        not
        branchIfTrue label108
        push r:this, '{2'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label106
        push r:this, '{2', r:this, '{2'
        getMember
        push 2, r:2
        multiply
        subtract
        setMember
        push r:this, '((', r:this, '(('
        getMember
        increment
        setMember
        branch label107
       label106:
        push r:this, '{2', r:this, '{2'
        getMember
        push 2, r:2
        multiply
        add
        setMember
        push r:this, '((', r:this, '(('
        getMember
        decrement
        setMember
       label107:
        branch label110
       label108:
        push r:this, '}2'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label109
        push r:this, '}2', r:this, '}2'
        getMember
        push 2, r:2
        multiply
        subtract
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        increment
        setMember
        branch label110
       label109:
        push r:this, '}2', r:this, '}2'
        getMember
        push 2, r:2
        multiply
        add
        setMember
        push r:this, ')(', r:this, ')('
        getMember
        decrement
        setMember
       label110:
        push r:this, '{2'
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        setRegister r:3
        pop
        push r:this, '}2'
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        setRegister r:4
        pop
        push 0, r:this, '7yU(0'
        callMethod
        pop
        branch label104
       label111:
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this')
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '7Qe;6'
        getMember
        push 'remove'
        callMethod
        pop
        push 0, r:this, '-iB='
        getMember
        push 'removeMovieClip'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '7yU(0'
      function2 () (r:1='this')
        push r:this, '08 }T', TRUE
        setMember
      end // of function 

      setMember
      push '2pO,G'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '7Qe;6'
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ';9tAL'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '7yU(0'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, ';3ljX'
        getVariable
        push 'call'
        callMethod
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push ' Qbr,'
        getMember
        not
        dup
        not
        branchIfTrue label112
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '8tY3X'
        getMember
        push 0
        getMember
        push NULL
        equals
       label112:
        not
        branchIfTrue label113
        push r:this, '-iB='
        getMember
        push '_x'
        getMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '-iB='
        getMember
        push '_x'
        getMember
        subtract
        setRegister r:3
        pop
        push r:this, '-iB='
        getMember
        push '_y'
        getMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '-iB='
        getMember
        push '_y'
        getMember
        subtract
        setRegister r:4
        pop
        push r:3, r:3
        multiply
        push r:4, r:4
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        push 14
        lessThan
        not
        branchIfTrue label113
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '565'
        callMethod
        pop
        push 0, r:this, '9T54'
        callMethod
        pop
       label113:
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, ']DJP*('
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, ']Sz},('
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '7Qe;6'
        getMember
        push 'remove'
        callMethod
        pop
      end // of function 

      setMember
      push ']Sz},(', ';9tAL'
      getVariable
      push 'prototype'
      getMember
      push '9T54'
      getMember
      setVariable
      push ']DJP*(', ';9tAL'
      getVariable
      push 'prototype'
      getMember
      push '87vE7('
      getMember
      setVariable
      push ';3ljX', ';9tAL'
      getVariable
      push 'prototype'
      getMember
      push '7yU(0'
      getMember
      setVariable
      push '*r'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ';CYOh'
      function2 (r:2='}J', r:3='3GF', r:4='(v+') (r:1='this')
        push '=', r:'(v+', 16
        shiftRight
        push '0', r:'(v+', 8
        shiftRight
        push 255
        bitwiseAnd
        push ')', r:'(v+', 255
        bitwiseAnd
        push 3
        initObject
        setRegister r:5
        pop
        push r:'}J', 1, 'Color'
        new
        setRegister r:6
        pop
        push r:'3GF', 100
        divide
        setRegister r:7
        pop
        push 'ra', 100, r:'3GF'
        subtract
        int
        push 'ga', 100, r:'3GF'
        subtract
        int
        push 'ba', 100, r:'3GF'
        subtract
        int
        push 'aa', 100, 'rb', r:7, r:5, '='
        getMember
        multiply
        int
        push 'gb', r:7, r:5, '0'
        getMember
        multiply
        int
        push 'bb', r:7, r:5, ')'
        getMember
        multiply
        int
        push 'ab', 0, 8
        initObject
        setRegister r:8
        pop
        push r:8, 1, r:6, 'setTransform'
        callMethod
        pop
      end // of function 

      setMember
      push r:0, '-Wa[', 24
      setMember
      push r:0, '9_Ey8', 4
      setMember
      push r:0, '4Z- F', 0
      setMember
      push r:0, ';aSoO', 1
      setMember
      push r:0, '}IhX+(', 2
      setMember
      push r:0, '}{BLP', 3
      setMember
      push r:0, '52MSZ', 4
      setMember
      push r:0, '5FhY)', 0
      setMember
      push r:0, '}+MVd', 1
      setMember
      push r:0, '}8)Zq', 2
      setMember
      push r:0, '=OA', 300
      setMember
      push r:0, '*OA', 300
      setMember
      push r:0, '7s', 0, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '6jZ', 10, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, ' oZ', 30, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '3sZ', 50, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '*c)L', 100, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '6g)L', 120, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, ',4+L', 200, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '0a,L', 300, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '}cl4B', 1000, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, '99l8B', 5000, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push r:0, ' tk=B', 8000, 1, ';ndCG'
      getVariable
      push '-Q)9)'
      callMethod
      setMember
      push ',i0 ['
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push ' p3z='
      function2 (r:2='}J') (r:1='this')
        push r:this, '-iB=', r:'}J'
        setMember
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '86{p('
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '5U4B', 300
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this')
        push r:this, '5U4B', r:this, '5U4B'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '5U4B'
        getMember
        push 10
        lessThan
        not
        branchIfTrue label114
        push r:this, '-iB='
        getMember
        push '_alpha', r:this, '5U4B'
        getMember
        push 10
        multiply
        setMember
        push r:this, '5U4B'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label114
        push 0, r:this, '9T54'
        callMethod
        pop
       label114:
      end // of function 

      setMember
      push r:1, ' (zm5'
      function2 (r:2='7') (r:1='this')
        push r:this, '*B', r:'7'
        setMember
        push r:this, '*B'
        getMember
        toString
        push 1, r:this, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '2X}A'
      function2 () (r:1='this')
        push NULL
        setRegister r:2
        pop
        push r:this, '*B'
        getMember
        setRegister r:0
        push 1
        strictEquals
        branchIfTrue label115
        push r:0, 2
        strictEquals
        branchIfTrue label116
        push r:0, 3
        strictEquals
        branchIfTrue label117
        push r:0, 4
        strictEquals
        branchIfTrue label118
        push r:0, 5
        strictEquals
        branchIfTrue label119
        push r:0, 6
        strictEquals
        branchIfTrue label120
        push r:0, 7
        strictEquals
        branchIfTrue label120
        push r:0, 8
        strictEquals
        branchIfTrue label120
        push r:0, 9
        strictEquals
        branchIfTrue label121
        push r:0, 10
        strictEquals
        branchIfTrue label125
        branch label126
       label115:
        push '*r'
        getVariable
        push ',4+L'
        getMember
        push 1, r:this, '5b)bA('
        callMethod
        pop
        push 0
        setRegister r:2
        pop
        branch label126
       label116:
        push '*r'
        getVariable
        push '}cl4B'
        getMember
        push 1, r:this, '5b)bA('
        callMethod
        pop
        push 0
        setRegister r:2
        pop
        branch label126
       label117:
        push '*r'
        getVariable
        push '99l8B'
        getMember
        push 1, r:this, '5b)bA('
        callMethod
        pop
        push 0
        setRegister r:2
        pop
       label118:
        push 20, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '066O('
        callMethod
        pop
        push 1
        setRegister r:2
        pop
        branch label126
       label119:
        push 50, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '066O('
        callMethod
        pop
        push 1
        setRegister r:2
        pop
        branch label126
       label120:
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '}OcqB('
        getMember
        push r:this, '*B'
        getMember
        push 6
        subtract
        push TRUE
        setMember
        push 0, '*r'
        getVariable
        push '+-(0'
        getMember
        push '3vx;w'
        callMethod
        pop
        push 1
        setRegister r:2
        pop
        branch label126
       label121:
        push 0
        setRegister r:3
        pop
        branch label123
       label122:
        push r:3
        increment
        setRegister r:3
        pop
       label123:
        push r:3, 18
        lessThan
        not
        branchIfTrue label124
        push 3, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '2nkfq'
        callMethod
        pop
        branch label122
       label124:
        push '*r'
        getVariable
        push ' tk=B'
        getMember
        push 1, r:this, '5b)bA('
        callMethod
        pop
        branch label126
       label125:
        push 0, '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '14{6b'
        callMethod
        pop
        branch label126
       label126:
        push r:2
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label127
        push r:0, 1
        strictEquals
        branchIfTrue label131
        push r:0, 2
        strictEquals
        branchIfTrue label135
        branch label142
       label127:
        push 0
        setRegister r:4
        pop
        branch label129
       label128:
        push r:4
        increment
        setRegister r:4
        pop
       label129:
        push r:4, 12
        lessThan
        not
        branchIfTrue label130
        push '7LeMK(', 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '{==W3('
        callMethod
        setRegister r:5
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6.28
        multiply
        setRegister r:6
        pop
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 6, 18, 1, r:4, 24
        divide
        subtract
        multiply
        add
        multiply
        setRegister r:7
        pop
        push r:5, '_x', r:this, '-iB='
        getMember
        push '_x'
        getMember
        push r:6, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:7
        multiply
        add
        setMember
        push r:5, '_y', r:this, '-iB='
        getMember
        push '_y'
        getMember
        push r:6, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:7
        multiply
        add
        setMember
        push r:5, ']', 10, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:5, ']d', 0.5, r:4, 30
        multiply
        push 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        push 8
        subtract
        push 0, 2, 'Math'
        getVariable
        push 'max'
        callMethod
        setMember
        push r:5, 'scale', 30, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 100
        multiply
        add
        push r:5, ']d'
        getMember
        push 2
        multiply
        subtract
        setMember
        push r:5, '_xscale', r:5, 'scale'
        getMember
        setMember
        push r:5, '_yscale', r:5, 'scale'
        getMember
        setMember
        push r:5, '+7', 0
        setMember
        push r:5, '_visible', FALSE
        setMember
        branch label128
       label130:
        branch label142
       label131:
        push 0
        setRegister r:8
        pop
        branch label133
       label132:
        push r:8
        increment
        setRegister r:8
        pop
       label133:
        push r:8, 3
        lessThan
        not
        branchIfTrue label134
        push '6-6 t', 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '{==W3('
        callMethod
        setRegister r:9
        pop
        push r:9, '_x', r:this, '-iB='
        getMember
        push '_x'
        getMember
        setMember
        push r:9, '_y', r:this, '-iB='
        getMember
        push '_y'
        getMember
        setMember
        push r:9, '_rotation', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 360
        multiply
        setMember
        push r:9, ']', 18, r:8, 3
        multiply
        subtract
        setMember
        push r:9, '7b', 6, r:8, 8
        multiply
        add
        setMember
        push r:9, '6b', 8, r:8, 12
        multiply
        add
        setMember
        branch label132
       label134:
        branch label142
       label135:
        push 8
        setRegister r:10
        pop
        push 0
        setRegister r:11
        pop
        branch label137
       label136:
        push r:11
        increment
        setRegister r:11
        pop
       label137:
        push r:11, r:10
        lessThan
        not
        branchIfTrue label141
        push 0
        setRegister r:12
        pop
        branch label139
       label138:
        push r:12
        increment
        setRegister r:12
        pop
       label139:
        push r:12, 2
        lessThan
        not
        branchIfTrue label140
        push '),HaF(', 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '{==W3('
        callMethod
        setRegister r:13
        pop
        push r:13, '_x', r:this, '-iB='
        getMember
        push '_x'
        getMember
        setMember
        push r:13, '_y', r:this, '-iB='
        getMember
        push '_y'
        getMember
        setMember
        push r:11, 0.5, r:12
        multiply
        add
        push r:10
        divide
        push 6.28
        multiply
        setRegister r:14
        pop
        push 3, r:12, 2
        multiply
        add
        setRegister r:15
        pop
        push r:13, '[b', r:13, '[b'
        getMember
        push r:14, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:15
        multiply
        add
        setMember
        push r:13, ']b', r:13, ']b'
        getMember
        push r:14, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:15
        multiply
        add
        setMember
        push r:13, ']', 26, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 4
        multiply
        add
        push r:12, 10
        multiply
        subtract
        setMember
        push r:13, '+{eA+', 0.9
        setMember
        branch label138
       label140:
        branch label136
       label141:
        branch label142
       label142:
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$opt'
        getMember
        push r:this, '*B'
        getMember
        push 1
        subtract
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$opt'
        getMember
        push r:this, '*B'
        getMember
        push 1
        subtract
        getMember
        increment
        setMember
        push 0, r:this, '9T54'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '5b)bA('
      function2 (r:2='7') (r:1='this')
        push r:'7', 1, ';ndCG'
        getVariable
        push '5b)bA('
        callMethod
        pop
        push '=ZXmL', 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '{==W3('
        callMethod
        setRegister r:3
        pop
        push r:3, '_x', r:this, '-iB='
        getMember
        push '_x'
        getMember
        setMember
        push r:3, '_y', r:this, '-iB='
        getMember
        push '_y'
        getMember
        setMember
        push r:3, ']b', -1
        setMember
        push r:3, ']', 24
        setMember
        push r:3, '+Da3+'
        getMember
        push 'text', r:'7', 1, ';ndCG'
        getVariable
        push '8kN'
        callMethod
        toString
        setMember
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this')
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '86{p('
        getMember
        push 'remove'
        callMethod
        pop
        push 0, r:this, '-iB='
        getMember
        push 'removeMovieClip'
        callMethod
        pop
      end // of function 

      setMember
      push '+7U K'
      function2 (r:2='}J') (r:1='this')
        push r:this, ')2fr3', r:'}J'
        setMember
        push r:this, '}Zms3', 0, 'Array'
        new
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, ']1sj+'
      function2 () (r:1='this')
        push r:this, ')2fr3'
        getMember
        return
      end // of function 

      setMember
      push r:1, '-fC3a'
      function2 (r:2='59F') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'59F'
        getMember
        setRegister r:3
        pop
        push r:3, NULL
        equals
        not
        branchIfTrue label143
        push '9oK', 0, 'Array'
        new
        push '7-,', 0, 2
        initObject
        setRegister r:3
        pop
        push r:this, '}Zms3'
        getMember
        push r:'59F', r:3
        setMember
       label143:
        push r:3
        return
      end // of function 

      setMember
      push r:1, ']bu40'
      function2 (r:2='[-99') (r:1='this')
        push r:this, '}Zms3'
        getMember
        push r:'[-99'
        getMember
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:7
        pop
        push r:'[-99', 1000
        multiply
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label145
       label144:
        push r:6
        increment
        setRegister r:6
        pop
       label145:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label147
        push r:4, r:6
        getMember
        push '_name'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label146
        push r:8, r:7
        add
        push 1, r:4, r:6
        getMember
        push 'swapDepths'
        callMethod
        pop
        push r:4, r:7, r:4, r:6
        getMember
        setMember
        push r:7
        increment
        setRegister r:7
        pop
       label146:
        branch label144
       label147:
        push r:3, '7-,', r:7
        setMember
      end // of function 

      setMember
      push r:1, '*=_p_'
      function2 (r:2='*KB2', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label148
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'*KB2', 2, r:this, '*=_p_'
        callMethod
        return
       label148:
        push r:6, r:'[-99', 1000
        multiply
        add
        push r:'*KB2', r:this, ')2fr3'
        getMember
        push 3, '3Wt'
        getVariable
        push 'attachMC'
        callMethod
        setRegister r:7
        pop
        push r:5, r:6, r:7
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:7
        return
      end // of function 

      setMember
      push r:1, '18wU*'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push r:5, 1000
        equals
        not
        branchIfTrue label149
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', 1, r:this, '18wU*'
        callMethod
        return
       label149:
        push r:5, r:'[-99', 1000
        multiply
        add
        push r:this, ')2fr3'
        getMember
        push 2, '3Wt'
        getVariable
        push 'createEmptyMC'
        callMethod
        setRegister r:6
        pop
        push r:4, r:5, r:6
        setMember
        push r:3, '7-,', r:3, '7-,'
        getMember
        increment
        setMember
        push r:6
        return
      end // of function 

      setMember
      push r:1, '(GbB}'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:4
        pop
        push r:4, '9oK'
        getMember
        setRegister r:5
        pop
        push r:4, '7-,'
        getMember
        setRegister r:6
        pop
        push r:6, 1000
        equals
        not
        branchIfTrue label150
        push r:'[-99', 1, r:this, ']bu40'
        callMethod
        pop
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        return
       label150:
        push r:5, r:6, r:'}J'
        setMember
        push r:4, '7-,', r:4, '7-,'
        getMember
        increment
        setMember
        push r:6, r:'[-99', 1000
        multiply
        add
        return
      end // of function 

      setMember
      push r:1, '+2NA'
      function2 (r:2='}J', r:3='[-99') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        push 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, r:'[-99'
        equals
        not
        branchIfTrue label151
        push UNDEF
        return
       label151:
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:5, '7-,'
        getMember
        setRegister r:7
        pop
        push 0
        setRegister r:8
        pop
        branch label153
       label152:
        push r:8
        increment
        setRegister r:8
        pop
       label153:
        push r:8, r:7
        lessThan
        not
        branchIfTrue label155
        push r:6, r:8
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label154
        push r:6, r:8, NULL
        setMember
        branch label155
       label154:
        branch label152
       label155:
        push r:'[-99', r:'}J', 2, r:this, '(GbB}'
        callMethod
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '}oQA7'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label156
        push r:6, r:7, NULL
        setMember
        push r:'}J', 1, r:6, 'unshift'
        callMethod
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label156:
      end // of function 

      setMember
      push r:1, '08M8'
      function2 (r:2='}J') (r:1='this')
        push 0, r:'}J', 'getDepth'
        callMethod
        setRegister r:3
        pop
        push r:3, 1000
        divide
        push 1, 'Math'
        getVariable
        push 'floor'
        callMethod
        setRegister r:4
        pop
        push r:4, 1, r:this, '-fC3a'
        callMethod
        setRegister r:5
        pop
        push r:5, '9oK'
        getMember
        setRegister r:6
        pop
        push r:3, 1000
        modulo
        setRegister r:7
        pop
        push r:6, r:7
        getMember
        push r:'}J'
        equals
        not
        branchIfTrue label158
        push r:6, r:7, NULL
        setMember
        push r:5, '7-,'
        getMember
        push 1000
        equals
        not
        branchIfTrue label157
        push r:4, 1, r:this, ']bu40'
        callMethod
        pop
       label157:
        push r:5, '7-,'
        getMember
        setRegister r:3
        pop
        push r:5, '7-,', r:5, '7-,'
        getMember
        increment
        setMember
        push r:3, r:4, 1000
        multiply
        add
        push 1, r:'}J', 'swapDepths'
        callMethod
        pop
        push r:6, r:3, r:'}J'
        setMember
       label158:
      end // of function 

      setMember
      push r:1, 'clear'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:5
        pop
        push 0
        setRegister r:4
        pop
        branch label160
       label159:
        push r:4
        increment
        setRegister r:4
        pop
       label160:
        push r:4, r:3, '7-,'
        getMember
        lessThan
        not
        branchIfTrue label161
        push 0, r:5, r:4
        getMember
        push 'removeMovieClip'
        callMethod
        pop
        branch label159
       label161:
        push r:3, '7-,', 0
        setMember
      end // of function 

      setMember
      push r:1, '9(K ;'
      function2 (r:2='[-99') (r:1='this')
        push r:'[-99', 1, r:this, '-fC3a'
        callMethod
        setRegister r:3
        pop
        push r:3, '9oK'
        getMember
        setRegister r:4
        pop
        push r:3, '7-,'
        getMember
        setRegister r:5
        pop
        push -99999999
        setRegister r:8
        pop
        push 0
        setRegister r:6
        pop
        branch label163
       label162:
        push r:6
        increment
        setRegister r:6
        pop
       label163:
        push r:6, r:5
        lessThan
        not
        branchIfTrue label171
        push r:4, r:6
        getMember
        setRegister r:9
        pop
        push r:9, '_y'
        getMember
        setRegister r:10
        pop
        push r:10, r:8
        lessThan
        not
        not
        branchIfTrue label164
        push r:10
        setRegister r:8
        pop
        branch label170
       label164:
        push r:6
        setRegister r:7
        pop
        branch label166
       label165:
        push r:7
        decrement
        setRegister r:7
        pop
       label166:
        push r:7, 0
        greaterThan
        not
        branchIfTrue label169
        push r:4, r:7, 1
        subtract
        getMember
        setRegister r:11
        pop
        push r:11, '_y'
        getMember
        push r:10
        greaterThan
        not
        branchIfTrue label167
        push r:4, r:7, r:11
        setMember
        push r:11, 1, r:9, 'swapDepths'
        callMethod
        pop
        branch label168
       label167:
        push r:4, r:7, r:9
        setMember
        branch label169
       label168:
        branch label165
       label169:
        push r:7, 0
        equals
        not
        branchIfTrue label170
        push r:4, 0, r:9
        setMember
       label170:
        branch label162
       label171:
      end // of function 

      setMember
      push r:1, 'destroy'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label173
       label172:
        push r:2
        increment
        setRegister r:2
        pop
       label173:
        push r:2, r:this, '}Zms3'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label174
        push r:2, 1, r:this, 'clear'
        callMethod
        pop
        branch label172
       label174:
      end // of function 

      setMember
      push 'flash'
      getVariable
      not
      not
      branchIfTrue label175
      push 'flash', 0, 'Object'
      new
      setVariable
     label175:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      not
      not
      branchIfTrue label176
      push 'flash'
      getVariable
      push 'filters', 0, 'Object'
      new
      setMember
     label176:
      push 'flash'
      getVariable
      push 'filters'
      getMember
      push '{lN=R'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setMember
      push '2vR S'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, ')dFx0', 36
        setMember
        push ' (', 1, '*B', 10, 2
        initObject
        push 1, r:this, '=e]}F'
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '-y6}J'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '9FeuX'
      function2 (r:2='7') (r:1='this')
        push r:this, '[c,j*', r:'7'
        setMember
        push r:this, '[c,j*'
        getMember
        setRegister r:0
        push 1
        strictEquals
        branchIfTrue label177
        push r:0, 2
        strictEquals
        branchIfTrue label178
        push r:0, 3
        strictEquals
        branchIfTrue label179
        branch label180
       label177:
        push r:this, '3=', 10
        setMember
        push r:this, '(Erk5', '*r'
        getVariable
        push ' oZ'
        getMember
        setMember
        push r:this, '[)[Qo', 32
        setMember
        push r:this, '5U8J7', 12
        setMember
        push r:this, '{ep0G', 4
        setMember
        push r:this, '0 2*G', NULL
        setMember
        push r:this, '}Yax5', 2
        setMember
        push 0, r:this, ' +CD ('
        callMethod
        pop
        push ' (', 70, '*B', 4, 2
        initObject
        push 1, r:this, '=e]}F'
        getMember
        push 'push'
        callMethod
        pop
        branch label180
       label178:
        push r:this, '3=', 40
        setMember
        push r:this, '(Erk5', '*r'
        getVariable
        push '*c)L'
        getMember
        setMember
        push r:this, '5U8J7', 12
        setMember
        push r:this, '{ep0G', 3
        setMember
        push r:this, '0 2*G', 10
        setMember
        push r:this, ',94I8(', 3
        setMember
        push r:this, '}Yax5', 3
        setMember
        push 0, r:this, ' +CD ('
        callMethod
        pop
        push ' (', 50, '*B', 4, 2
        initObject
        push 1, r:this, '=e]}F'
        getMember
        push 'push'
        callMethod
        pop
        push ' (', 30, '*B', 5, 2
        initObject
        push 1, r:this, '=e]}F'
        getMember
        push 'push'
        callMethod
        pop
        push ' (', 20, '*B', 8, 2
        initObject
        push 1, r:this, '=e]}F'
        getMember
        push 'push'
        callMethod
        pop
        push ' (', 1, '*B', 9, 2
        initObject
        push 1, r:this, '=e]}F'
        getMember
        push 'push'
        callMethod
        pop
        branch label180
       label179:
        push r:this, '3=', 60
        setMember
        push r:this, '(Erk5', '*r'
        getVariable
        push ',4+L'
        getMember
        setMember
        push r:this, '5U8J7', 6
        setMember
        push r:this, '{ep0G', 1
        setMember
        push r:this, '0 2*G', 4
        setMember
        push r:this, ',94I8(', 1
        setMember
        push r:this, ')dFx0', 12
        setMember
        push r:this, '}Yax5', 5
        setMember
        push r:this, '2Urnb', TRUE
        setMember
        push ' (', 40, '*B', 5, 2
        initObject
        push 1, r:this, '=e]}F'
        getMember
        push 'push'
        callMethod
        pop
        push ' (', 20, '*B', 6, 2
        initObject
        push 1, r:this, '=e]}F'
        getMember
        push 'push'
        callMethod
        pop
        push ' (', 20, '*B', 7, 2
        initObject
        push 1, r:this, '=e]}F'
        getMember
        push 'push'
        callMethod
        pop
        push ' (', 1, '*B', 9, 2
        initObject
        push 1, r:this, '=e]}F'
        getMember
        push 'push'
        callMethod
        pop
        branch label180
       label180:
        push r:this, '[c,j*'
        getMember
        toString
        push 1, r:this, '-iB='
        getMember
        push 'b1'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '0],[E'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push '*r'
        getVariable
        push '52MSZ'
        getMember
        strictEquals
        branchIfTrue label181
        branch label183
       label181:
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        push r:this, '6g,A'
        getMember
        multiply
        push 0
        lessThan
        not
        branchIfTrue label182
        push 0, r:this, '6g,A'
        getMember
        subtract
        push 1, r:this, '8D5}=('
        callMethod
        pop
       label182:
        branch label183
       label183:
      end // of function 

      setMember
      push r:1, '1peQo'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '-Q-Gb'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '=kIA'
        getMember
        push '*r'
        getVariable
        push '4Z- F'
        getMember
        equals
        not
        branchIfTrue label194
        push r:this, ')('
        getMember
        push 1
        add
        push r:this, '(('
        getMember
        push r:this, '6g,A'
        getMember
        add
        push 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push ',Q,Gt'
        callMethod
        not
        branchIfTrue label192
        push 0, r:this, ')_Yd5'
        callMethod
        not
        branchIfTrue label187
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push ')('
        getMember
        push r:this, ')('
        getMember
        push 3
        add
        greaterThan
        not
        branchIfTrue label184
        branch label186
       label184:
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        setRegister r:3
        pop
        push r:3, r:3, 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        divide
        int
        push r:this, '6g,A'
        getMember
        equals
        not
        branchIfTrue label185
        push 0, r:this, '0AJc;'
        callMethod
        pop
        branch label186
       label185:
        push 0, r:this, '6g,A'
        getMember
        subtract
        push 1, r:this, '8D5}=('
        callMethod
        pop
       label186:
        branch label191
       label187:
        push 7, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:4
        pop
        push r:4
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label188
        push r:0, 1
        strictEquals
        branchIfTrue label189
        push r:0, 2
        strictEquals
        branchIfTrue label189
        branch label190
       label188:
        branch label191
       label189:
        push 0, r:this, '0AJc;'
        callMethod
        pop
        branch label191
       label190:
        push 0, r:this, '6g,A'
        getMember
        subtract
        push 1, r:this, '8D5}=('
        callMethod
        pop
        branch label191
       label191:
        branch label194
       label192:
        push r:this, '0 2*G'
        getMember
        push NULL
        equals
        not
        dup
        not
        branchIfTrue label193
        pop
        push r:this, '0 2*G'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
       label193:
        not
        branchIfTrue label194
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push 1, r:this, '}1A{_'
        callMethod
        setRegister r:5
        pop
        push r:5, 180
        lessThan
        not
        branchIfTrue label194
        push '*r'
        getVariable
        push '52MSZ'
        getMember
        push 1, r:this, '5Hy6b'
        callMethod
        pop
       label194:
      end // of function 

      setMember
      push r:1, ',cqp5'
      function2 () (r:1='this', r:2='super')
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push 1, r:this, '}1A{_'
        callMethod
        setRegister r:3
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push 1, r:this, ')153L'
        callMethod
        setRegister r:4
        pop
        push 3
        setRegister r:5
        pop
        push r:this, ',94I8('
        getMember
        setRegister r:6
        pop
        push 0
        setRegister r:7
        pop
        branch label196
       label195:
        push r:7
        increment
        setRegister r:7
        pop
       label196:
        push r:7, r:6
        lessThan
        not
        branchIfTrue label198
        push r:7, r:6, 1
        subtract
        divide
        push 0.5
        subtract
        push 0.4
        multiply
        setRegister r:8
        pop
        push r:6, 1
        equals
        not
        branchIfTrue label197
        push 0
        setRegister r:8
        pop
       label197:
        push '44{N'
        getVariable
        push '=Z3bA'
        getMember
        push '7X1dG', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, '2pO,G'
        new
        setRegister r:9
        pop
        push r:9, '-iB='
        getMember
        push '_x', r:this, '-iB='
        getMember
        push '_x'
        getMember
        setMember
        push r:9, '-iB='
        getMember
        push '_y', r:this, '-iB='
        getMember
        push '_y'
        getMember
        setMember
        push r:9, '-iB='
        getMember
        push '_rotation', r:4, r:8
        add
        push 0.0174
        divide
        setMember
        push r:9, '[b', r:4, r:8
        add
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:5
        multiply
        setMember
        push r:9, ']b', r:4, r:8
        add
        push 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:5
        multiply
        setMember
        push r:9, '((', r:this, '(('
        getMember
        setMember
        push r:9, ')(', r:this, ')('
        getMember
        setMember
        push r:9, '{2', r:this, '{2'
        getMember
        setMember
        push r:9, '}2', r:this, '}2'
        getMember
        setMember
        branch label195
       label198:
        push r:this, 1, '32at9'
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ' +CD ('
      function2 () (r:1='this')
        push r:this, '-iB='
        getMember
        setRegister r:2
        pop
        push '2', 1, r:2, 'b3'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push '2', 1, r:2, 'b4'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push '2', 1, r:2, 'b5'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
      end // of function 

      setMember
      push '32at9', '{28l*'
      getVariable
      push 'prototype'
      getMember
      push ',cqp5'
      getMember
      setVariable
      push '0],[E', '-y6}J'
      getVariable
      push 'prototype'
      getMember
      push '87vE7('
      getMember
      setVariable
      push '{-kxL'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '87vE7('
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '4plQ5', '{-kxL'
        getVariable
        push '4plQ5'
        getMember
        increment
        setMember
        push 0, '3Wt'
        getVariable
        push 'getTimer'
        callMethod
        setRegister r:2
        pop
        push '{-kxL'
        getVariable
        push ';ILSy', r:2, '{-kxL'
        getVariable
        push '3R,QM'
        getMember
        subtract
        push 1000.0
        divide
        setMember
        push '{-kxL'
        getVariable
        push '3R,QM', r:2
        setMember
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        push '{-kxL'
        getVariable
        push ';y}-6('
        getMember
        lessThan
        not
        branchIfTrue label199
        push '{-kxL'
        getVariable
        push '-)Xd+', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        push '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        multiply
        push 1, '{-kxL'
        getVariable
        push '[Ad;n'
        getMember
        subtract
        push '{-kxL'
        getVariable
        push ';ILSy'
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        multiply
        add
        setMember
        branch label200
       label199:
        push '{-kxL'
        getVariable
        push ';ILSy', 1, '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        divide
        setMember
       label200:
        push '{-kxL'
        getVariable
        push '-V;B', '{-kxL'
        getVariable
        push '-)Xd+'
        getMember
        setMember
      end // of function 

      setMember
      push r:0, 'fps'
      function2 () (r:1='this')
        push '{-kxL'
        getVariable
        push '6GI,F'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        divide
        return
      end // of function 

      setMember
      push r:0, '6GI,F', 32
      setMember
      push r:0, ';y}-6(', 0.5
      setMember
      push r:0, '3R,QM', 0, '3Wt'
      getVariable
      push 'getTimer'
      callMethod
      setMember
      push r:0, '[Ad;n', 0.95
      setMember
      push r:0, '-)Xd+', 1
      setMember
      push r:0, '-V;B', 1
      setMember
      push r:0, ';ILSy', 1
      setMember
      push r:0, '4plQ5', 0
      setMember
      push '=3+P'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '((', '44{N'
        getVariable
        push '+9fc'
        getMember
        push 0.5
        multiply
        int
        setMember
        push r:this, ')(', 1
        setMember
        push r:this, '(KpGn', 0.7
        setMember
        push r:this, '6EUe+', FALSE
        setMember
        push r:this, '4eyD,', 0
        setMember
        push r:this, ' cIA', 0, 1
        initArray
        setMember
        push 40, 1, r:this, '066O('
        callMethod
        pop
        push r:this, '9V8', 0
        setMember
        push r:this, '6g,A', 1
        setMember
        push r:this, ' Qbr,', FALSE
        setMember
        push r:this, '8iDn=', TRUE
        setMember
        push r:this, '1F=(I', FALSE
        setMember
        push r:this, ')qf8H', 0, 1
        initArray
        setMember
        push 0, r:this, '[5(-'
        callMethod
        pop
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '7W]'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '5Hy6b'
      function2 (r:2='7') (r:1='this')
        push r:this, '=kIA', r:'7'
        setMember
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push '*r'
        getVariable
        push '4Z- F'
        getMember
        strictEquals
        branchIfTrue label201
        push r:0, '*r'
        getVariable
        push '}IhX+('
        getMember
        strictEquals
        branchIfTrue label202
        push r:0, '*r'
        getVariable
        push '}{BLP'
        getMember
        strictEquals
        branchIfTrue label203
        branch label204
       label201:
        push r:this, '6EUe+', FALSE
        setMember
        branch label204
       label202:
        push r:this, '9V8', r:this, '[b'
        getMember
        setMember
        push r:this, '6X=-', TRUE
        setMember
        push r:this, ']O]t+', FALSE
        setMember
        branch label204
       label203:
        push r:this, ')1khy', '8Ugi)'
        setMember
        push r:this, ']b', -8
        setMember
        push r:this, '[b', r:this, '[b'
        getMember
        push 0.5
        multiply
        setMember
        push r:this, '6j07+', FALSE
        setMember
        push r:this, ' Qbr,', TRUE
        setMember
        push r:this, ']O]t+', FALSE
        setMember
        branch label204
       label204:
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, '[b'
        getMember
        setRegister r:3
        pop
        push r:this, '(mwVa'
        getMember
        not
        branchIfTrue label205
        push 0, r:this, '0{lc4'
        callMethod
        pop
       label205:
        push r:this, 1, '{pQP5'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, ']O]t+'
        getMember
        not
        not
        branchIfTrue label206
        push r:this, '[b', r:3
        setMember
       label206:
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push '*r'
        getVariable
        push '4Z- F'
        getMember
        strictEquals
        branchIfTrue label207
        push r:0, '*r'
        getVariable
        push '}IhX+('
        getMember
        strictEquals
        branchIfTrue label208
        push r:0, '*r'
        getVariable
        push '}{BLP'
        getMember
        strictEquals
        branchIfTrue label212
        branch label215
       label207:
        push 0, r:this, '505t0'
        callMethod
        pop
        branch label215
       label208:
        push 0, r:this, '505t0'
        callMethod
        pop
        push r:this, '6X=-'
        getMember
        dup
        not
        branchIfTrue label209
        pop
        push r:this, ']b'
        getMember
        push 0
        greaterThan
       label209:
        dup
        not
        branchIfTrue label210
        pop
        push r:this, '(uEcO'
        getMember
       label210:
        not
        branchIfTrue label211
        push r:this, '6X=-', FALSE
        setMember
        push r:this, ')1khy'
        getMember
        push NULL
        equals
        not
        branchIfTrue label211
        push r:this, ')1khy', '{}+mG'
        setMember
       label211:
        branch label215
       label212:
        push '*r'
        getVariable
        push '*OA'
        getMember
        push 2
        multiply
        push 18
        subtract
        setRegister r:4
        pop
        push r:this, '-iB='
        getMember
        push '_y'
        getMember
        push r:4
        greaterThan
        not
        branchIfTrue label214
        push r:this, ']b', r:this, ']b'
        getMember
        push -1.25
        multiply
        setMember
        push r:this, '1F=(I'
        getMember
        not
        not
        branchIfTrue label213
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$dif', '*r'
        getVariable
        push '+-(0'
        getMember
        push '69-'
        getMember
        push 0
        getMember
        int
        setMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push 1, ';ndCG'
        getVariable
        push '7T4cF('
        callMethod
        pop
        push r:this, '1F=(I', TRUE
        setMember
       label213:
        push r:this, '-iB='
        getMember
        push '_y', r:4
        setMember
       label214:
        branch label215
       label215:
        push r:this, '*zjXt'
        getMember
        push 0
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label217
        push r:this, '*zjXt', r:this, '*zjXt'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        push 1
        initArray
        setMember
        push r:this, '*zjXt'
        getMember
        push 0
        getMember
        push 0
        lessThan
        not
        branchIfTrue label216
        push r:this, '*zjXt', NULL, 1
        initArray
        setMember
        push r:this, '8iDn=', TRUE
        setMember
        push r:this, ' Qbr,', FALSE
        setMember
        push 0, r:this, '9lmBp'
        callMethod
        pop
       label216:
        branch label218
       label217:
        push r:this, '-iB='
        getMember
        push '_rotation'
        getMember
        push 0
        equals
        not
        not
        branchIfTrue label218
        push r:this, '-iB='
        getMember
        push '_rotation', 0
        setMember
       label218:
        push r:this, '+f2W('
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label219
        push r:this, '+f2W(', r:this, '+f2W('
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.5
        multiply
        push 0.5
        add
        push 0.8, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        setMember
        push r:this, '+f2W('
        getMember
        push 0.1
        lessThan
        not
        branchIfTrue label219
        push r:this, '+f2W(', NULL
        setMember
       label219:
        push r:this, '8tY3X'
        getMember
        push 0
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label220
        push 0, r:this, '9c,Fn'
        callMethod
        pop
       label220:
        push r:this, '6j07+'
        getMember
        not
        branchIfTrue label221
        push r:this, ' Qbr,'
        getMember
        not
        not
        branchIfTrue label221
        push 0, r:this, '8C-7N'
        callMethod
        pop
        push 0, r:this, '[VeKO'
        callMethod
        pop
       label221:
      end // of function 

      setMember
      push r:1, '8C-7N'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label223
       label222:
        push r:2
        increment
        setRegister r:2
        pop
       label223:
        push r:2, 3
        lessThan
        not
        branchIfTrue label236
        push 0
        setRegister r:3
        pop
        branch label225
       label224:
        push r:3
        increment
        setRegister r:3
        pop
       label225:
        push r:3, 3
        lessThan
        not
        branchIfTrue label235
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push ';AH0'
        getMember
        push r:this, '(('
        getMember
        push r:2
        add
        push 1
        subtract
        getMember
        push r:this, ')('
        getMember
        push r:3
        add
        push 1
        subtract
        getMember
        push 'list'
        getMember
        setRegister r:4
        pop
        push 0
        setRegister r:5
        pop
        branch label227
       label226:
        push r:5
        increment
        setRegister r:5
        pop
       label227:
        push r:5, r:4, 'length'
        getMember
        lessThan
        not
        branchIfTrue label234
        push r:4, r:5
        getMember
        setRegister r:6
        pop
        push r:6, 1, r:this, '}1A{_'
        callMethod
        setRegister r:7
        pop
        push r:7, 24
        lessThan
        not
        branchIfTrue label233
        push r:this, '8tY3X'
        getMember
        push 0
        getMember
        push NULL
        equals
        not
        branchIfTrue label232
        push r:this, '=kIA'
        getMember
        push '*r'
        getVariable
        push '}IhX+('
        getMember
        equals
        dup
        not
        branchIfTrue label228
        pop
        push r:6, '2Urnb'
        getMember
        not
       label228:
        not
        branchIfTrue label230
        push 1.57, r:6, 1, r:this, ')153L'
        callMethod
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        setRegister r:8
        pop
        push r:8, 1.3
        lessThan
        not
        branchIfTrue label230
        push r:this, ']b'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label229
        push r:this, ']b', -8
        setMember
        push 21, 1, r:6, '(2(1'
        callMethod
        pop
       label229:
        push UNDEF
        return
       label230:
        push r:7, 18
        lessThan
        not
        branchIfTrue label231
        push '*r'
        getVariable
        push '}{BLP'
        getMember
        push 1, r:this, '5Hy6b'
        callMethod
        pop
       label231:
        branch label233
       label232:
        push r:6, 1, r:this, '(S6_('
        callMethod
        pop
       label233:
        branch label226
       label234:
        branch label224
       label235:
        branch label222
       label236:
      end // of function 

      setMember
      push r:1, '[VeKO'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label238
       label237:
        push r:2
        increment
        setRegister r:2
        pop
       label238:
        push r:2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '86{p('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label240
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '86{p('
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3, 1, r:this, '}1A{_'
        callMethod
        push 24
        lessThan
        not
        branchIfTrue label239
        push 0, r:3, '2X}A'
        callMethod
        pop
       label239:
        branch label237
       label240:
      end // of function 

      setMember
      push r:1, '505t0'
      function2 () (r:1='this')
        push r:this, '8iDn='
        getMember
        not
        not
        branchIfTrue label241
        push UNDEF
        return
       label241:
        push FALSE
        setRegister r:2
        pop
        push 'Key'
        getVariable
        push 'LEFT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label242
        push -1, 1, r:this, '8D5}=('
        callMethod
        pop
        push TRUE
        setRegister r:2
        pop
       label242:
        push 'Key'
        getVariable
        push 'RIGHT'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label243
        push 1, 1, r:this, '8D5}=('
        callMethod
        pop
        push TRUE
        setRegister r:2
        pop
       label243:
        push r:2
        not
        branchIfTrue label250
        push r:this, ']O]t+'
        getMember
        not
        branchIfTrue label244
        push r:this, '[b', '=3+P'
        getVariable
        push '[c4gL'
        getMember
        push r:this, '6g,A'
        getMember
        multiply
        setMember
        branch label245
       label244:
        push r:this, '(uEcO'
        getMember
        not
        branchIfTrue label245
        push '=3+P'
        getVariable
        push '[c4gL'
        getMember
        push r:this, '6g,A'
        getMember
        multiply
        push r:this, '[b'
        getMember
        subtract
        setRegister r:3
        pop
        push 0.25
        setRegister r:4
        pop
        push r:this, '[b', r:this, '[b'
        getMember
        push r:4, r:3, 0.1
        multiply
        push 0, r:4
        subtract
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        add
        setMember
       label245:
        push r:this, '6EUe+'
        getMember
        not
        not
        branchIfTrue label249
        push r:this, '6EUe+', TRUE
        setMember
        push r:this, ']O]t+'
        getMember
        not
        branchIfTrue label249
        push r:this, ')1khy', '+A}D'
        setMember
        push 0
        setRegister r:5
        pop
        branch label247
       label246:
        push r:5
        increment
        setRegister r:5
        pop
       label247:
        push r:5, 3
        lessThan
        not
        branchIfTrue label249
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push ';AH0'
        getMember
        push r:this, '(('
        getMember
        push r:5, r:this, '6g,A'
        getMember
        multiply
        subtract
        getMember
        push r:this, ')('
        getMember
        getMember
        push 'list'
        getMember
        push 'length'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label248
        push r:this, ')1khy', 'run'
        setMember
        branch label249
       label248:
        branch label246
       label249:
        branch label251
       label250:
        push r:this, '6EUe+'
        getMember
        not
        branchIfTrue label251
        push r:this, '6EUe+', FALSE
        setMember
        push r:this, ']O]t+'
        getMember
        not
        branchIfTrue label251
        push r:this, ')1khy', '{5}D'
        setMember
       label251:
        push r:this, ']O]t+'
        getMember
        not
        branchIfTrue label252
        push r:this, '[b', r:this, '[b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        push 0.8, 2, 'Math'
        getVariable
        push 'pow'
        callMethod
        multiply
        setMember
        branch label252
       label252:
        push 'Key'
        getVariable
        push 'UP'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        not
        branchIfTrue label258
        push r:this, ']O]t+'
        getMember
        not
        branchIfTrue label253
        push r:this, '(uEcO', TRUE
        setMember
        push r:this, ';bnd*', FALSE
        setMember
        push 0, r:this, '9TL3'
        callMethod
        pop
        branch label257
       label253:
        push r:this, '(uEcO'
        getMember
        dup
        not
        branchIfTrue label254
        pop
        push r:this, ';bnd*'
        getMember
       label254:
        not
        branchIfTrue label256
        push r:this, '(uEcO', FALSE
        setMember
        push 0, r:this, '9TL3'
        callMethod
        pop
        push r:this, ')1khy', ')_()'
        setMember
        push r:2
        not
        branchIfTrue label255
        push r:this, '[b', '=3+P'
        getVariable
        push '[c4gL'
        getMember
        push r:this, '6g,A'
        getMember
        multiply
        setMember
       label255:
        branch label257
       label256:
        push r:this, '+f2W('
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label257
        push r:this, ']b', r:this, ']b'
        getMember
        push '=3+P'
        getVariable
        push ';Xtqo'
        getMember
        push r:this, '+f2W('
        getMember
        multiply
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        subtract
        setMember
       label257:
        branch label259
       label258:
        push r:this, ';bnd*', TRUE
        setMember
       label259:
        push r:this, ']O]t+'
        getMember
        dup
        not
        branchIfTrue label260
        pop
        push 'Key'
        getVariable
        push 'DOWN'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
       label260:
        dup
        not
        branchIfTrue label261
        pop
        push r:this, ')('
        getMember
        push 2
        add
        push '44{N'
        getVariable
        push '70fd'
        getMember
        lessThan
       label261:
        not
        branchIfTrue label262
        push 0, r:this, '9TL3'
        callMethod
        pop
        push r:this, '+f2W(', 0
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push 0.65
        multiply
        setMember
        push r:this, '--K+n', TRUE
        setMember
       label262:
        push r:this, '4eyD,', r:this, '4eyD,'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push 'Key'
        getVariable
        push 'SPACE'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
        dup
        branchIfTrue label263
        pop
        push 'Key'
        getVariable
        push 'CONTROL'
        getMember
        push 1, 'Key'
        getVariable
        push 'isDown'
        callMethod
       label263:
        not
        branchIfTrue label266
        push r:this, '4eyD,'
        getMember
        push 0
        lessThan
        dup
        not
        branchIfTrue label264
        pop
        push r:this, '1=v6,('
        getMember
       label264:
        not
        branchIfTrue label265
        push 0, r:this, ',cqp5'
        callMethod
        pop
       label265:
        branch label267
       label266:
        push r:this, '1=v6,(', TRUE
        setMember
       label267:
      end // of function 

      setMember
      push r:1, '9TL3'
      function2 () (r:1='this')
        push '*r'
        getVariable
        push '}IhX+('
        getMember
        push 1, r:this, '5Hy6b'
        callMethod
        pop
        push r:this, '+f2W(', 1
        setMember
        push r:this, ']b', 0, '=3+P'
        getVariable
        push '(BXD3'
        getMember
        subtract
        setMember
        push r:this, ')1khy', '897h'
        setMember
      end // of function 

      setMember
      push r:1, '5W 5'
      function2 () (r:1='this', r:2='super')
        push r:this, '*zjXt'
        getMember
        push 0
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label269
        push r:this, ']b'
        getMember
        push 4
        greaterThan
        not
        branchIfTrue label268
        push r:this, '6b', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push r:this, ']b'
        getMember
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        multiply
        push 3
        multiply
        setMember
       label268:
        push r:this, '[b', r:this, '[b'
        getMember
        push 0.8
        multiply
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push -1
        multiply
        setMember
        push UNDEF
        return
       label269:
        push r:this, 1, '9+5CV'
        getVariable
        push 'call'
        callMethod
        pop
        push '*r'
        getVariable
        push '4Z- F'
        getMember
        push 1, r:this, '5Hy6b'
        callMethod
        pop
        push r:this, ')1khy'
        getMember
        push NULL
        equals
        not
        branchIfTrue label270
        push r:this, ')1khy', '5W 5'
        setMember
       label270:
        push r:this, '(uEcO', TRUE
        setMember
        push 0
        setRegister r:3
        pop
        branch label272
       label271:
        push r:3
        increment
        setRegister r:3
        pop
       label272:
        push r:3, 3
        lessThan
        not
        branchIfTrue label275
        push '*1Q1,(', 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '{==W3('
        callMethod
        setRegister r:4
        pop
        push r:4, '_x', r:this, '-iB='
        getMember
        push '_x'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 14
        multiply
        add
        setMember
        push r:4, '_y', r:this, '-iB='
        getMember
        push '_y'
        getMember
        push 12
        add
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 24
        multiply
        add
        setMember
        push r:4, '(KpGn', 0.1, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 0.3
        multiply
        add
        setMember
        push r:4, 'scale', 50, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 70
        multiply
        add
        setMember
        push r:4, '_xscale', r:4, 'scale'
        getMember
        setMember
        push r:4, '_yscale', r:4, 'scale'
        getMember
        setMember
        push r:4, ']', 20, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        add
        setMember
        push r:4, '+7', 0
        setMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '0}8J]'
        getMember
        not
        branchIfTrue label273
        push '2', 1, r:4, 'gotoAndStop'
        callMethod
        pop
        branch label274
       label273:
        push 0, r:4, 'stop'
        callMethod
        pop
       label274:
        branch label271
       label275:
      end // of function 

      setMember
      push r:1, '{c}4W'
      function2 () (r:1='this', r:2='super')
        push r:this, '--K+n'
        getMember
        not
        branchIfTrue label276
        push r:this, '--K+n', FALSE
        setMember
        push FALSE
        return
       label276:
        push r:this, 1, '1m)(['
        getVariable
        push 'call'
        callMethod
        return
      end // of function 

      setMember
      push r:1, '[5(-'
      function2 () (r:1='this', r:2='super')
        push '*r'
        getVariable
        push '}IhX+('
        getMember
        push 1, r:this, '5Hy6b'
        callMethod
        pop
        push r:this, 1, '2O4IV'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, ')1khy', '[5(-'
        setMember
        push r:this, '6X=-', FALSE
        setMember
      end // of function 

      setMember
      push r:1, ',cqp5'
      function2 () (r:1='this')
        push 0, '*r'
        getVariable
        push '+-(0'
        getMember
        push '7DGl3'
        callMethod
        setRegister r:2
        pop
        push r:this, '1=v6,(', FALSE
        setMember
        push r:2, 0
        getMember
        push '6'
        getMember
        setRegister r:3
        pop
        push r:3, '-iB='
        getMember
        push '_x'
        getMember
        push r:this, '-iB='
        getMember
        push '_x'
        getMember
        subtract
        setRegister r:4
        pop
        push r:3, '-iB='
        getMember
        push '_y'
        getMember
        push r:this, '-iB='
        getMember
        push '_y'
        getMember
        subtract
        push 1.5
        multiply
        setRegister r:5
        pop
        push r:4, r:4
        multiply
        push r:5, r:5
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        setRegister r:6
        pop
        push r:6, '*r'
        getVariable
        push '+-(0'
        getMember
        push '}OcqB('
        getMember
        push '*r'
        getVariable
        push '5FhY)'
        getMember
        getMember
        not
        branchIfTrue label277
        push 72
        branch label278
       label277:
        push 48
       label278:
        lessThan
        setRegister r:7
        pop
        push r:7
        dup
        branchIfTrue label279
        pop
        push r:this, ' cIA'
        getMember
        push 0
        getMember
        push 0
        equals
       label279:
        not
        branchIfTrue label280
        push r:7, r:3, 2, r:this, ')SYt5'
        callMethod
        pop
        push UNDEF
        return
       label280:
        push 1
        setRegister r:8
        pop
        push r:this, '=kIA'
        getMember
        push '*r'
        getVariable
        push '}IhX+('
        getMember
        equals
        dup
        not
        branchIfTrue label281
        pop
        push r:this, '(uEcO'
        getMember
        not
       label281:
        not
        branchIfTrue label282
        push r:2, 'length'
        getMember
        push r:this, ' cIA'
        getMember
        push 0
        getMember
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:8
        pop
       label282:
        push 0
        setRegister r:9
        pop
        branch label284
       label283:
        push r:9
        increment
        setRegister r:9
        pop
       label284:
        push r:9, r:8
        lessThan
        not
        branchIfTrue label286
        push r:2, r:9
        getMember
        setRegister r:10
        pop
        push r:10, '+'
        getMember
        push 8
        greaterThan
        not
        branchIfTrue label285
        branch label286
       label285:
        push r:10, '6'
        getMember
        push 1, r:this, '1k}nn'
        callMethod
        pop
        branch label283
       label286:
      end // of function 

      setMember
      push r:1, ')SYt5'
      function2 (r:2='}CL', r:3=']a(v') (r:1='this')
        push r:this, '4eyD,', 10
        setMember
        push '2', 1, r:this, '-iB='
        getMember
        push '55*'
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '}OcqB('
        getMember
        push '*r'
        getVariable
        push '5FhY)'
        getMember
        getMember
        not
        branchIfTrue label287
        push '2'
        branch label288
       label287:
        push '1'
       label288:
        push 1, r:this, '-iB='
        getMember
        push '55*'
        getMember
        push ';jqS('
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push r:']a(v'
        not
        branchIfTrue label290
        push r:'}CL', 1, r:this, ')153L'
        callMethod
        setRegister r:4
        pop
        push r:'}CL', '(('
        getMember
        push r:this, '(('
        getMember
        subtract
        push r:this, '6g,A'
        getMember
        multiply
        push 0
        lessThan
        not
        branchIfTrue label289
        push 0, r:this, '6g,A'
        getMember
        subtract
        push 1, r:this, '8D5}=('
        callMethod
        pop
       label289:
        push 21, 1, r:'}CL', '9-,'
        callMethod
        pop
        push r:'}CL', '3='
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label290
        push r:this, '[b', -5, r:this, '6g,A'
        getMember
        multiply
        setMember
       label290:
      end // of function 

      setMember
      push r:1, '1k}nn'
      function2 (r:2='}CL') (r:1='this')
        push -1, 1, r:this, '066O('
        callMethod
        pop
        push r:this, '4eyD,', 2
        setMember
        push r:'}CL', 1, r:this, ')153L'
        callMethod
        setRegister r:3
        pop
        push '44{N'
        getVariable
        push '=Z3bA'
        getMember
        push '1D}{*', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, '0hF['
        new
        setRegister r:4
        pop
        push r:4, '((', r:this, '(('
        getMember
        setMember
        push r:4, ')(', r:this, ')('
        getMember
        setMember
        push r:4, '{2', r:this, '{2'
        getMember
        push r:this, '90'
        getMember
        push 1
        subtract
        push '*r'
        getVariable
        push '-Wa['
        getMember
        multiply
        push 0.5
        multiply
        add
        setMember
        push r:4, '}2', r:this, '}2'
        getMember
        push r:this, ';0'
        getMember
        push 1
        subtract
        push '*r'
        getVariable
        push '-Wa['
        getMember
        multiply
        push 0.5
        multiply
        add
        setMember
        push r:4, '[b', r:3, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push '=3+P'
        getVariable
        push '3s;sC('
        getMember
        multiply
        setMember
        push r:4, ']b', r:3, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push '=3+P'
        getVariable
        push '3s;sC('
        getMember
        multiply
        setMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '}OcqB('
        getMember
        push '*r'
        getVariable
        push '}+MVd'
        getMember
        getMember
        not
        branchIfTrue label291
        push r:4, '*]Q5}', 8
        setMember
        push '2', 1, r:4, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        branch label292
       label291:
        push '1', 1, r:4, '-iB='
        getMember
        push 'gotoAndStop'
        callMethod
        pop
       label292:
      end // of function 

      setMember
      push r:1, '066O('
      function2 (r:2='7') (r:1='this')
        push r:this, ' cIA', 200, r:this, ' cIA'
        getMember
        push 0
        getMember
        push r:'7'
        add
        push 0, 2, 'Math'
        getVariable
        push 'max'
        callMethod
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        int
        push 1
        initArray
        setMember
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '-]e9-'
        getMember
        push ',}bS9'
        getMember
        push 'text', r:this, ' cIA'
        getMember
        push 0
        getMember
        toString
        setMember
      end // of function 

      setMember
      push r:1, '565'
      function2 (r:2='[') (r:1='this')
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '}OcqB('
        getMember
        push '*r'
        getVariable
        push '}8)Zq'
        getMember
        getMember
        not
        branchIfTrue label294
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '}OcqB('
        getMember
        push '*r'
        getVariable
        push '}8)Zq'
        getMember
        push FALSE
        setMember
        push 0, '*r'
        getVariable
        push '+-(0'
        getMember
        push '3vx;w'
        callMethod
        pop
        push 1, 1, r:this, '8D5}=('
        callMethod
        pop
        push '=ija6', 1, r:this, '-iB='
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push r:this, '-iB='
        getMember
        push ']BMb0'
        getMember
        push '_rotation', r:'[', '-iB='
        getMember
        push '_rotation'
        getMember
        setMember
        push 0, r:this, ']zpu5'
        callMethod
        pop
        push r:this, '0f+D=(', TRUE
        setMember
        push r:this, ' Qbr,', TRUE
        setMember
        push r:this, '8iDn=', FALSE
        setMember
        push r:this, '*zjXt', 30, 1
        initArray
        setMember
        push r:'[', '[b'
        getMember
        push 0.5
        multiply
        setRegister r:3
        pop
        push r:'[', ']b'
        getMember
        push 0.5
        multiply
        push 3
        subtract
        setRegister r:4
        pop
        push r:this, ']O]t+'
        getMember
        not
        branchIfTrue label293
        push r:4, 0, 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:4
        pop
        push r:4, 0
        lessThan
        not
        branchIfTrue label293
        push '*r'
        getVariable
        push '}IhX+('
        getMember
        push 1, r:this, '5Hy6b'
        callMethod
        pop
       label293:
        push r:this, '[b', r:this, '[b'
        getMember
        push r:3
        add
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:4
        add
        setMember
        branch label295
       label294:
        push '*r'
        getVariable
        push '}{BLP'
        getMember
        push 1, r:this, '5Hy6b'
        callMethod
        pop
       label295:
      end // of function 

      setMember
      push r:1, '9lmBp'
      function2 () (r:1='this')
        push r:this, '6b', 0
        setMember
        push r:this, '((', '44{N'
        getVariable
        push '+9fc'
        getMember
        push 0.5
        multiply
        int
        setMember
        push r:this, ')(', 1
        setMember
        push r:this, '[b', 0
        setMember
        push r:this, ']b', 0
        setMember
        push r:this, '0f+D=(', FALSE
        setMember
        push 0, r:this, '[5(-'
        callMethod
        pop
        push 0, r:this, ']zpu5'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, ']zpu5'
      function2 () (r:1='this')
        push ';IzJK(', 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '{==W3('
        callMethod
        setRegister r:2
        pop
        push r:2, '_x', r:this, '(('
        getMember
        push 0.25
        add
        push r:this, '90'
        getMember
        push 0.5
        multiply
        add
        push '*r'
        getVariable
        push '-Wa['
        getMember
        multiply
        push r:this, '{2'
        getMember
        add
        setMember
        push r:2, '_y', r:this, ')('
        getMember
        push 0.25
        add
        push r:this, ';0'
        getMember
        push 0.5
        multiply
        add
        push '*r'
        getVariable
        push '-Wa['
        getMember
        multiply
        push r:this, '}2'
        getMember
        add
        setMember
      end // of function 

      setMember
      push r:1, '14{6b'
      function2 () (r:1='this')
        push r:this, '8tY3X', 500, 1
        initArray
        setMember
        push r:this, ']y T(', 0
        setMember
        push '=3+P'
        getVariable
        push '[c4gL', 9
        setMember
      end // of function 

      setMember
      push r:1, '9c,Fn'
      function2 () (r:1='this')
        push r:this, '8tY3X', r:this, '8tY3X'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        push 1
        initArray
        setMember
        push r:this, ')qf8H', r:this, ')qf8H'
        getMember
        push 0
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        push 1
        initArray
        setMember
        push r:this, ')qf8H'
        getMember
        push 0
        getMember
        push 0
        lessThan
        not
        branchIfTrue label296
        push r:this, ')qf8H', '=3+P'
        getVariable
        push '}H U3'
        getMember
        push 1
        initArray
        setMember
        push '44{N'
        getVariable
        push '5NraA'
        getMember
        push '9lBrL', 2, '*r'
        getVariable
        push '+-(0'
        getMember
        push '6QA'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:2
        pop
        push r:2, '_x', r:this, '-iB='
        getMember
        push '_x'
        getMember
        setMember
        push r:2, '_y', r:this, '-iB='
        getMember
        push '_y'
        getMember
        setMember
        push r:2, '_xscale', r:this, '-iB='
        getMember
        push '_xscale'
        getMember
        setMember
        push r:this, '-iB='
        getMember
        push '_currentframe'
        getMember
        toString
        push 1, r:2, '}SYp5'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
       label296:
        push 67
        setRegister r:3
        pop
        push r:this, '8tY3X'
        getMember
        push 0
        getMember
        push 100
        lessThan
        not
        branchIfTrue label297
        push 127
        setRegister r:3
        pop
       label297:
        push r:this, ']y T(', r:this, ']y T('
        getMember
        push r:3, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 628
        modulo
        setMember
        push r:this, ']y T('
        getMember
        push 100
        divide
        push 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push 1
        add
        push 40
        multiply
        setRegister r:4
        pop
        push r:this, '8tY3X'
        getMember
        push 0
        getMember
        push 0
        lessThan
        not
        branchIfTrue label298
        push r:this, '8tY3X', NULL, 1
        initArray
        setMember
        push 0
        setRegister r:4
        pop
        push '=3+P'
        getVariable
        push '[c4gL', 5
        setMember
       label298:
        push 16768511, r:4, r:this, '-iB='
        getMember
        push 3, '*r'
        getVariable
        push ';CYOh'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '0{lc4'
      function2 () (r:1='this')
      end // of function 

      setMember
      push r:1, '(S6_('
      function2 (r:2='6') (r:1='this')
        push 100, 1, r:'6', '(2(1'
        callMethod
        pop
        push 8
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        branch label300
       label299:
        push r:4
        increment
        setRegister r:4
        pop
       label300:
        push r:4, r:3
        lessThan
        not
        branchIfTrue label304
        push 0
        setRegister r:5
        pop
        branch label302
       label301:
        push r:5
        increment
        setRegister r:5
        pop
       label302:
        push r:5, 2
        lessThan
        not
        branchIfTrue label303
        push '),HaF(', 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '{==W3('
        callMethod
        setRegister r:6
        pop
        push r:6, '_x', r:'6', '-iB='
        getMember
        push '_x'
        getMember
        setMember
        push r:6, '_y', r:'6', '-iB='
        getMember
        push '_y'
        getMember
        setMember
        push r:4, 0.5, r:5
        multiply
        add
        push r:3
        divide
        push 6.28
        multiply
        setRegister r:7
        pop
        push 3, r:5, 2
        multiply
        add
        setRegister r:8
        pop
        push r:6, '[b', r:6, '[b'
        getMember
        push r:7, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:8
        multiply
        add
        setMember
        push r:6, ']b', r:6, ']b'
        getMember
        push r:7, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:8
        multiply
        add
        setMember
        push r:6, ']', 26, 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 4
        multiply
        add
        push r:5, 10
        multiply
        subtract
        setMember
        push r:6, '+{eA+', 0.9
        setMember
        branch label301
       label303:
        branch label299
       label304:
      end // of function 

      setMember
      push r:1, ')da08'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, '13dBG('
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push '1m)([', '7W]'
      getVariable
      push 'prototype'
      getMember
      push '{c}4W'
      getMember
      setVariable
      push '2O4IV', '7W]'
      getVariable
      push 'prototype'
      getMember
      push '[5(-'
      getMember
      setVariable
      push '13dBG(', '7W]'
      getVariable
      push 'prototype'
      getMember
      push ')da08'
      getMember
      setVariable
      push r:0, '[c4gL', 5
      setMember
      push r:0, ';Xtqo', 3
      setMember
      push r:0, '(BXD3', 8
      setMember
      push r:0, '3s;sC(', 14
      setMember
      push r:0, '}H U3', 5
      setMember
      push '(WBt)'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ']}Ou;(', 1
      setMember
      push r:0, '3I0pG', 2
      setMember
      push r:0, '{;7F4', 3
      setMember
      push r:0, '8U(wu', 4
      setMember
      push r:0, '}[cpB', 5
      setMember
      push r:0, '9xv]A', 6
      setMember
      push r:0, '{yQ=Q', 7
      setMember
      push r:0, '+,W', 8
      setMember
      push r:0, '2y+dV', 9
      setMember
      push r:0, '(tBee', 10
      setMember
      push r:0, '3)i[=', 11
      setMember
      push r:0, ' J3IC', 12
      setMember
      push r:0, '[6jRc', 13
      setMember
      push r:0, ')8Fyj', 14
      setMember
      push '[,+]C'
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, '[c,j*', 2
        setMember
        push r:this, '(Erk5', '*r'
        getVariable
        push '6g)L'
        getMember
        setMember
        push 2, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 2
        multiply
        push 1
        subtract
        push 1, r:this, '8D5}=('
        callMethod
        pop
        push '*r'
        getVariable
        push '4Z- F'
        getMember
        push 1, r:this, '5Hy6b'
        callMethod
        pop
        push r:this, '6j07+', FALSE
        setMember
        push ' (', 150, '*B', 4, 2
        initObject
        push 1, r:this, '=e]}F'
        getMember
        push 'push'
        callMethod
        pop
        push ' (', 50, '*B', 8, 2
        initObject
        push 1, r:this, '=e]}F'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '}V--k', 0
        setMember
        push r:this, ' 5]sx', 100
        setMember
        push r:this, '(KpGn', 0
        setMember
        push r:this, '3=', 30
        setMember
        push r:this, '(Erk5', '*r'
        getVariable
        push ' oZ'
        getMember
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, '{28l*'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '5Hy6b'
      function2 (r:3='7') (r:1='this', r:2='super')
        push r:'7', r:this, 2, ',*w{j'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push '*r'
        getVariable
        push '4Z- F'
        getMember
        strictEquals
        branchIfTrue label305
        branch label306
       label305:
        branch label306
       label306:
      end // of function 

      setMember
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, ',+ zo'
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, '=kIA'
        getMember
        setRegister r:0
        push '*r'
        getVariable
        push '4Z- F'
        getMember
        strictEquals
        branchIfTrue label307
        branch label310
       label307:
        push r:this, '}V--k', r:this, '}V--k'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:this, '}V--k'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label308
        push 0, r:this, ',biZ7('
        callMethod
        pop
        push r:this, '}V--k', r:this, ' 5]sx'
        getMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 20
        multiply
        add
        setMember
        push r:this, ' 5]sx', r:this, ' 5]sx'
        getMember
        push 8
        subtract
        push 0, 2, 'Math'
        getVariable
        push 'max'
        callMethod
        setMember
       label308:
        push 0, r:this, '}SC6'
        callMethod
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '-iB='
        getMember
        push '_x'
        getMember
        push r:this, '-iB='
        getMember
        push '_x'
        getMember
        subtract
        setRegister r:3
        pop
        push r:3, r:this, '6g,A'
        getMember
        multiply
        push 0
        lessThan
        not
        branchIfTrue label309
        push 0, r:this, '6g,A'
        getMember
        subtract
        push 1, r:this, '8D5}=('
        callMethod
        pop
       label309:
        branch label310
       label310:
      end // of function 

      setMember
      push r:1, '}SC6'
      function2 () (r:1='this')
        push r:this, '}CL'
        getMember
        push '(('
        getMember
        push r:this, '-iB='
        getMember
        push '_x'
        getMember
        subtract
        setRegister r:2
        pop
        push r:this, '}CL'
        getMember
        push ')('
        getMember
        push r:this, '-iB='
        getMember
        push '_y'
        getMember
        subtract
        setRegister r:3
        pop
        push r:2, r:3, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        setRegister r:4
        pop
        push r:2, r:2
        multiply
        push r:3, r:3
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        setRegister r:5
        pop
        push 0.1
        setRegister r:6
        pop
        push 0.4
        setRegister r:7
        pop
        push r:this, '[b', r:this, '[b'
        getMember
        push r:7, r:4, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:5
        multiply
        push r:6
        multiply
        push 0, r:7
        subtract
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        add
        setMember
        push r:this, ']b', r:this, ']b'
        getMember
        push r:7, r:4, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:5
        multiply
        push r:6
        multiply
        push 0, r:7
        subtract
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        add
        setMember
      end // of function 

      setMember
      push r:1, ',biZ7('
      function2 () (r:1='this')
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '-iB='
        getMember
        push '_x'
        getMember
        push r:this, '-iB='
        getMember
        push '_x'
        getMember
        subtract
        setRegister r:2
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '4,01'
        getMember
        push '-iB='
        getMember
        push '_y'
        getMember
        push r:this, '-iB='
        getMember
        push '_y'
        getMember
        subtract
        setRegister r:3
        pop
        push r:2, r:3, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        setRegister r:4
        pop
        push 160, r:2, r:2
        multiply
        push r:3, r:3
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:5
        pop
        push r:this, '}CL', '((', r:this, '-iB='
        getMember
        push '_x'
        getMember
        push r:4, 1, 'Math'
        getVariable
        push 'cos'
        callMethod
        push r:5
        multiply
        add
        push ')(', r:this, '-iB='
        getMember
        push '_y'
        getMember
        push r:4, 1, 'Math'
        getVariable
        push 'sin'
        callMethod
        push r:5
        multiply
        add
        push 2
        initObject
        setMember
      end // of function 

      setMember
      push r:1, '565'
      function2 (r:3=')93A') (r:1='this', r:2='super')
        push r:this, ')1khy', '565'
        setMember
        push r:')93A', r:this, 2, '1_zV,('
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '8Ugi)'
      function2 () (r:1='this', r:2='super')
        push '8Ugi)', 1, r:this, '-iB='
        getMember
        push 'gotoAndPlay'
        callMethod
        pop
        push r:this, 1, ' Bk{H'
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push '44{N'
      function2 (r:2='}J') (r:1='this')
        push '*r'
        getVariable
        push '+-(0', r:this
        setMember
        push r:this, '32', r:'}J', 1, '+7U K'
        new
        setMember
        push r:this, '-iB=', r:'}J'
        setMember
        push r:this, ';+', '44{N'
        getVariable
        push '4MvcB'
        getMember
        push ';+', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push 0, r:this, ';+'
        getMember
        push 'stop'
        callMethod
        pop
        push r:this, '-]e9-', '44{N'
        getVariable
        push '[V{(6'
        getMember
        push '-]e9-', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setMember
        push r:this, '6y392', 0, 'Array'
        new
        setMember
        push r:this, '7Qe;6', 0, 'Array'
        new
        setMember
        push r:this, '86{p(', 0, 'Array'
        new
        setMember
        push r:this, ')gv94', 0, 'Array'
        new
        setMember
        push r:this, '-SjAs', 0, 'Array'
        new
        setMember
        push r:this, '03}12', 0, 'Array'
        new
        setMember
        push r:this, '2]g+c', 0, 'Array'
        new
        setMember
        push r:this, '-_X}5', '$opt', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10
        initArray
        push '$bads', 0, 0, 0, 0, 0, 5
        initArray
        push '$dif', NULL, 3
        initObject
        setMember
        push 0, r:this, '(l23,'
        callMethod
        pop
        push '}J', r:this, ';+'
        getMember
        push '*', 0.13, 2
        initObject
        push 1, r:this, '2]g+c'
        getMember
        push 'push'
        callMethod
        pop
        push '}J', r:this, '(KA'
        getMember
        push '*', 1, 2
        initObject
        push 1, r:this, '2]g+c'
        getMember
        push 'push'
        callMethod
        pop
        push 0
        setRegister r:3
        pop
        branch label312
       label311:
        push r:3
        increment
        setRegister r:3
        pop
       label312:
        push r:3, 2
        lessThan
        not
        branchIfTrue label319
        push 0
        setRegister r:4
        pop
        branch label314
       label313:
        push r:4
        increment
        setRegister r:4
        pop
       label314:
        push r:4, 10
        lessThan
        not
        branchIfTrue label318
        push NULL
        setRegister r:5
        pop
        push r:3, 0
        equals
        not
        branchIfTrue label315
        push '44{N'
        getVariable
        push '841,4'
        getMember
        push '0j{ -(', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:5
        pop
        branch label316
       label315:
        push '44{N'
        getVariable
        push '8OItb'
        getMember
        push '1whLz', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:5
        pop
       label316:
        push r:4, 1
        add
        toString
        push 1, r:5, 'gotoAndStop'
        callMethod
        pop
        push r:5, '_width'
        getMember
        push 300
        subtract
        push 300
        divide
        setRegister r:6
        pop
        push '}J', r:5, '*', r:6, 2
        initObject
        push 1, r:this, '2]g+c'
        getMember
        push 'push'
        callMethod
        pop
        push r:4, 1
        add
        push r:5, '_totalframes'
        getMember
        equals
        not
        branchIfTrue label317
        branch label318
       label317:
        branch label313
       label318:
        branch label311
       label319:
        push r:this, '4,01', '44{N'
        getVariable
        push '-hCnb'
        getMember
        push ')+jEC', 2, r:this, '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, '=3+P'
        new
        setMember
        push 0, r:this, '4pw(b'
        callMethod
        pop
        push 0, r:this, '[cm3b'
        callMethod
        pop
        push r:this, '=ach-(', 2, 1
        initArray
        setMember
        push r:this, '62GLS', 0, 1
        initArray
        setMember
        push r:this, '69-', 0, 1
        initArray
        setMember
        push r:this, '}OcqB(', FALSE, FALSE, FALSE, 3
        initArray
        setMember
        push 0, r:this, '3vx;w'
        callMethod
        pop
        push r:this, '0}8J]', FALSE
        setMember
        push 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 500
        multiply
        push 1
        lessThan
        not
        branchIfTrue label320
        push 0, r:this, '44=DZ'
        callMethod
        pop
       label320:
        push r:this, ']Vq)2', 0, 1
        initArray
        setMember
        push 'onKeyDown', ',VfSD(', r:this, 2, '3Wt'
        getVariable
        push 'callback'
        callMethod
        push 'onKeyUp', NULL, 2
        initObject
        setRegister r:7
        pop
        push r:7, 1, 'Key'
        getVariable
        push 'addListener'
        callMethod
        pop
        push r:this, '6nf(*(', 0
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, ',VfSD('
      function2 () (r:1='this')
        push 0, 'Key'
        getVariable
        push 'getCode'
        callMethod
        setRegister r:2
        pop
        push r:2, '44{N'
        getVariable
        push '9-}5K('
        getMember
        push r:this, '6nf(*('
        getMember
        getMember
        equals
        not
        branchIfTrue label322
        push r:this, '6nf(*(', r:this, '6nf(*('
        getMember
        increment
        setMember
        push r:this, '6nf(*('
        getMember
        push '44{N'
        getVariable
        push '9-}5K('
        getMember
        push 'length'
        getMember
        equals
        not
        branchIfTrue label321
        push 0, r:this, '44=DZ'
        callMethod
        pop
       label321:
        branch label323
       label322:
        push r:this, '6nf(*(', 0
        setMember
       label323:
      end // of function 

      setMember
      push r:1, '(l23,'
      function2 () (r:1='this')
        push r:this, '(KA', '44{N'
        getVariable
        push '3O*F2'
        getMember
        push 1, r:this, '32'
        getMember
        push '18wU*'
        callMethod
        setMember
        push r:this, '6QA', r:this, '(KA'
        getMember
        push 1, '+7U K'
        new
        setMember
      end // of function 

      setMember
      push r:1, '4pw(b'
      function2 () (r:1='this')
        push r:this, ';AH0', 0, 'Array'
        new
        setMember
        push 0
        setRegister r:2
        pop
        branch label325
       label324:
        push r:2
        increment
        setRegister r:2
        pop
       label325:
        push r:2, '44{N'
        getVariable
        push '+9fc'
        getMember
        lessThan
        not
        branchIfTrue label329
        push r:this, ';AH0'
        getMember
        push r:2, 0, 'Array'
        new
        setMember
        push 0
        setRegister r:3
        pop
        branch label327
       label326:
        push r:3
        increment
        setRegister r:3
        pop
       label327:
        push r:3, '44{N'
        getVariable
        push '70fd'
        getMember
        lessThan
        not
        branchIfTrue label328
        push r:this, ';AH0'
        getMember
        push r:2
        getMember
        push r:3, ' Y2T(', FALSE, 'list', 0
        initArray
        push 2
        initObject
        setMember
        branch label326
       label328:
        branch label324
       label329:
      end // of function 

      setMember
      push r:1, '[cm3b'
      function2 () (r:1='this')
        push r:this, '106*]', '((', 0, ')(', '44{N'
        getVariable
        push '70fd'
        getMember
        push 1
        subtract
        push ' (', '44{N'
        getVariable
        push '+9fc'
        getMember
        push '}J', NULL, 4
        initObject
        push 1
        initArray
        setMember
        push '44{N'
        getVariable
        push '70fd'
        getMember
        push 1
        subtract
        setRegister r:2
        pop
       label330:
        push r:2, 8
        greaterThan
        not
        branchIfTrue label333
        push r:2, '*r'
        getVariable
        push '9_Ey8'
        getMember
        subtract
        setRegister r:2
        pop
        push 4, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setRegister r:3
        pop
       label331:
        push r:3, '44{N'
        getVariable
        push '+9fc'
        getMember
        lessThan
        not
        branchIfTrue label332
        push 2, 8, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        add
        setRegister r:4
        pop
        push '((', r:3, ')(', r:2, ' (', r:4, '}J', NULL, 4
        initObject
        push 1, r:this, '106*]'
        getMember
        push 'push'
        callMethod
        pop
        push r:3, r:4, 2
        add
        push 8, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1, r:2, '44{N'
        getVariable
        push '70fd'
        getMember
        divide
        subtract
        multiply
        int
        add
        add
        setRegister r:3
        pop
        branch label331
       label332:
        branch label330
       label333:
        push 0
        setRegister r:5
        pop
        branch label335
       label334:
        push r:5
        increment
        setRegister r:5
        pop
       label335:
        push r:5, r:this, '106*]'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label336
        push r:this, '106*]'
        getMember
        push r:5
        getMember
        setRegister r:6
        pop
        push '44{N'
        getVariable
        push ';C*X2'
        getMember
        push '9,sMC', 2, r:this, '6QA'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:7
        pop
        push r:6, '}J', r:7
        setMember
        push r:6, 1, r:this, '*w()A('
        callMethod
        pop
        branch label334
       label336:
      end // of function 

      setMember
      push r:1, '*w()A('
      function2 (r:2='8') (r:1='this')
        push 19
        setRegister r:3
        pop
        push r:'8', '}J'
        getMember
        setRegister r:4
        pop
        push r:this, '0}8J]'
        getMember
        not
        branchIfTrue label337
        push '2'
        branch label338
       label337:
        push '1'
       label338:
        push 1, r:4, 'gotoAndStop'
        callMethod
        pop
        push r:4, '_x', '*r'
        getVariable
        push '-Wa['
        getMember
        push r:'8', '(('
        getMember
        multiply
        setMember
        push r:4, '_y', '*r'
        getVariable
        push '-Wa['
        getMember
        push r:'8', ')('
        getMember
        multiply
        setMember
        push r:4, '1Z 6'
        getMember
        push '_xscale', r:'8', ' ('
        getMember
        push '*r'
        getVariable
        push '-Wa['
        getMember
        multiply
        push 2, r:3
        multiply
        subtract
        setMember
        push r:4, '*9NtE('
        getMember
        push '_x', r:4, '1Z 6'
        getMember
        push '_xscale'
        getMember
        push r:3
        add
        setMember
        push 0
        setRegister r:5
        pop
        branch label340
       label339:
        push r:5
        increment
        setRegister r:5
        pop
       label340:
        push r:5, r:'8', ' ('
        getMember
        lessThan
        not
        branchIfTrue label341
        push r:this, ';AH0'
        getMember
        push r:'8', '(('
        getMember
        push r:5
        add
        getMember
        push r:'8', ')('
        getMember
        getMember
        push ' Y2T(', TRUE
        setMember
        branch label339
       label341:
      end // of function 

      setMember
      push r:1, '0D 6'
      function2 () (r:1='this')
        push 0, r:this, '4,01'
        getMember
        push '87vE7('
        callMethod
        pop
        push 0
        setRegister r:2
        pop
        branch label343
       label342:
        push r:2
        increment
        setRegister r:2
        pop
       label343:
        push r:2, r:this, '6y392'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label344
        push 0, r:this, '6y392'
        getMember
        push r:2
        getMember
        push '87vE7('
        callMethod
        pop
        branch label342
       label344:
        push 0
        setRegister r:3
        pop
        branch label346
       label345:
        push r:3
        increment
        setRegister r:3
        pop
       label346:
        push r:3, r:this, '7Qe;6'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label347
        push 0, r:this, '7Qe;6'
        getMember
        push r:3
        getMember
        push '87vE7('
        callMethod
        pop
        branch label345
       label347:
        push 0
        setRegister r:4
        pop
        branch label349
       label348:
        push r:4
        increment
        setRegister r:4
        pop
       label349:
        push r:4, r:this, '86{p('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label350
        push 0, r:this, '86{p('
        getMember
        push r:4
        getMember
        push '87vE7('
        callMethod
        pop
        branch label348
       label350:
        push 0, r:this, '+aDob'
        callMethod
        pop
        push 0, r:this, '5CMYr'
        callMethod
        pop
        push r:this, '62GLS'
        getMember
        push 0
        getMember
        push r:this, '=ach-('
        getMember
        push 0
        getMember
        lessThan
        not
        branchIfTrue label351
        push 0, r:this, '*95e*('
        callMethod
        pop
       label351:
        push r:this, '=ach-(', r:this, '=ach-('
        getMember
        push 0
        getMember
        push 0.0025, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 1
        initArray
        setMember
        push r:this, '69-', r:this, '69-'
        getMember
        push 0
        getMember
        push 1.5, '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        push 1
        initArray
        setMember
      end // of function 

      setMember
      push r:1, '+aDob'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label353
       label352:
        push r:2
        increment
        setRegister r:2
        pop
       label353:
        push r:2, r:this, '2]g+c'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label354
        push r:this, '2]g+c'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push 0
        setRegister r:4
        pop
        push 0, r:4
        subtract
        push '*r'
        getVariable
        push '=OA'
        getMember
        push 0.5
        multiply
        push r:this, '4,01'
        getMember
        push '-iB='
        getMember
        push '_x'
        getMember
        subtract
        push 2, r:4
        multiply
        push '44{N'
        getVariable
        push '+9fc'
        getMember
        push '*r'
        getVariable
        push '-Wa['
        getMember
        multiply
        push 0.5
        multiply
        subtract
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:5
        pop
        push 0, '*r'
        getVariable
        push '*OA'
        getMember
        push 0.5
        multiply
        push r:this, '4,01'
        getMember
        push '-iB='
        getMember
        push '_y'
        getMember
        subtract
        push 0, '44{N'
        getVariable
        push '70fd'
        getMember
        subtract
        push '*r'
        getVariable
        push '-Wa['
        getMember
        multiply
        push 0.5
        multiply
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        setRegister r:6
        pop
        push r:3, '}J'
        getMember
        push '_x', r:5, r:3, '*'
        getMember
        multiply
        setMember
        push r:3, '}J'
        getMember
        push '_y', r:6, r:3, '*'
        getMember
        multiply
        setMember
        branch label352
       label354:
      end // of function 

      setMember
      push r:1, '*95e*('
      function2 () (r:1='this')
        push r:this, '69-'
        getMember
        push 0
        getMember
        push 4000
        greaterThan
        dup
        not
        branchIfTrue label355
        pop
        push 4, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
       label355:
        not
        branchIfTrue label356
        push 4, 1, r:this, '2nkfq'
        callMethod
        pop
       label356:
        push r:this, '69-'
        getMember
        push 0
        getMember
        push 1800
        greaterThan
        dup
        not
        branchIfTrue label357
        pop
        push 4, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 0
        equals
       label357:
        not
        branchIfTrue label358
        push 3, 1, r:this, '2nkfq'
        callMethod
        pop
       label358:
        push 3, r:this, '69-'
        getMember
        push 0
        getMember
        push 1300
        divide
        push 1, 'Math'
        getVariable
        push 'ceil'
        callMethod
        push 2, 'Math'
        getVariable
        push 'min'
        callMethod
        int
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push 1, r:this, '2nkfq'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '2nkfq'
      function2 (r:2='*B') (r:1='this')
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$bads'
        getMember
        push r:'*B', '*r'
        getVariable
        push '+-(0'
        getMember
        push '-_X}5'
        getMember
        push '$bads'
        getMember
        push r:'*B'
        getMember
        increment
        setMember
        push r:this, '4,01'
        getMember
        push '(('
        getMember
        push '44{N'
        getVariable
        push '+9fc'
        getMember
        push 0.5
        multiply
        lessThan
        not
        branchIfTrue label359
        push 1
        branch label360
       label359:
        push 0
       label360:
        setRegister r:3
        pop
        push NULL
        setRegister r:4
        pop
        push r:'*B'
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label361
        push r:0, 1
        strictEquals
        branchIfTrue label361
        push r:0, 2
        strictEquals
        branchIfTrue label361
        push r:0, 3
        strictEquals
        branchIfTrue label362
        push r:0, 4
        strictEquals
        branchIfTrue label363
        branch label364
       label361:
        push '44{N'
        getVariable
        push '9xuZZ'
        getMember
        push '5{Qn((', 2, r:this, '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, '2vR S'
        new
        setRegister r:4
        pop
        push r:4, '((', r:3, '44{N'
        getVariable
        push '+9fc'
        getMember
        multiply
        setMember
        push r:4, ')(', '44{N'
        getVariable
        push '70fd'
        getMember
        push 2, 6, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push '*r'
        getVariable
        push '9_Ey8'
        getMember
        multiply
        add
        subtract
        setMember
        push r:4, '{2', 0, 'Math'
        getVariable
        push 'random'
        callMethod
        push 10
        multiply
        setMember
        push 0, r:3, 2
        multiply
        push 1
        subtract
        subtract
        push 1, r:4, '8D5}=('
        callMethod
        pop
        push r:'*B', 1
        add
        push 1, r:4, '9FeuX'
        callMethod
        pop
        branch label364
       label362:
        push '44{N'
        getVariable
        push '9xuZZ'
        getMember
        push '(ng8D', 2, r:this, '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, '[,+]C'
        new
        setRegister r:4
        pop
        push r:4, '((', '44{N'
        getVariable
        push '+9fc'
        getMember
        push 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        setMember
        push r:4, ')(', 0
        setMember
        branch label364
       label363:
        push '44{N'
        getVariable
        push '9xuZZ'
        getMember
        push '{F 2D(', 2, r:this, '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, '-6ww0('
        new
        setRegister r:4
        pop
        push r:4, '((', r:3, '44{N'
        getVariable
        push '+9fc'
        getMember
        multiply
        setMember
        push r:4, ')(', '44{N'
        getVariable
        push '70fd'
        getMember
        push 2, 6, 1, '3Wt'
        getVariable
        push 'random'
        callMethod
        push '*r'
        getVariable
        push '9_Ey8'
        getMember
        multiply
        add
        subtract
        setMember
        branch label364
       label364:
        push r:this, '62GLS', r:this, '62GLS'
        getMember
        push 0
        getMember
        push r:4, '[c,j*'
        getMember
        add
        push 1
        initArray
        setMember
        push r:4
        return
      end // of function 

      setMember
      push r:1, '5ggDk'
      function2 (r:2='((', r:3=')(', r:4='*B') (r:1='this')
        push r:'*B', 0
        equals
        not
        branchIfTrue label365
        push UNDEF
        return
       label365:
        push r:'*B', 6
        lessThan
        not
        dup
        not
        branchIfTrue label366
        pop
        push r:'*B', 9
        lessThan
       label366:
        not
        branchIfTrue label367
        push r:this, '}OcqB('
        getMember
        push r:'*B', 6
        subtract
        getMember
        not
        branchIfTrue label367
        push 1
        setRegister r:'*B'
        pop
       label367:
        push '44{N'
        getVariable
        push '(8LH1'
        getMember
        push '4B1W(', 2, r:this, '6QA'
        getMember
        push '*=_p_'
        callMethod
        push 1, ' p3z='
        new
        setRegister r:5
        pop
        push r:5, '-iB='
        getMember
        push '_x', r:'(('
        setMember
        push r:5, '-iB='
        getMember
        push '_y', r:')('
        setMember
        push r:'*B', 1, r:5, ' (zm5'
        callMethod
        pop
        push r:5, 1, r:this, '86{p('
        getMember
        push 'push'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '3vx;w'
      function2 () (r:1='this')
       label368:
        push r:this, '03}12'
        getMember
        push 'length'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label369
        push 0, 0, r:this, '03}12'
        getMember
        push 'pop'
        callMethod
        push 'removeMovieClip'
        callMethod
        pop
        branch label368
       label369:
        push '*r'
        getVariable
        push '=OA'
        getMember
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label371
       label370:
        push r:3
        increment
        setRegister r:3
        pop
       label371:
        push r:3, r:this, '}OcqB('
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label373
        push r:this, '}OcqB('
        getMember
        push r:3
        getMember
        not
        branchIfTrue label372
        push '44{N'
        getVariable
        push '[V{(6'
        getMember
        push '8sfFC', 2, r:this, '32'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:4
        pop
        push r:3, 1
        add
        toString
        push 1, r:4, 'gotoAndStop'
        callMethod
        pop
        push r:4, '_x', r:2
        setMember
        push r:2, 20
        subtract
        setRegister r:2
        pop
        push r:4, 1, r:this, '03}12'
        getMember
        push 'push'
        callMethod
        pop
       label372:
        branch label370
       label373:
      end // of function 

      setMember
      push r:1, ',Q,Gt'
      function2 (r:2='((', r:3=')(') (r:1='this')
        push r:this, ';AH0'
        getMember
        push r:'(('
        getMember
        push r:')('
        getMember
        push ' Y2T('
        getMember
        not
        return
      end // of function 

      setMember
      push r:1, '7DGl3'
      function2 () (r:1='this')
        push 0, 'Array'
        new
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label375
       label374:
        push r:3
        increment
        setRegister r:3
        pop
       label375:
        push r:3, r:this, '6y392'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label380
        push r:this, '6y392'
        getMember
        push r:3
        getMember
        setRegister r:4
        pop
        push r:4, ')('
        getMember
        push r:this, '4,01'
        getMember
        push ')('
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push r:4, '(('
        getMember
        push r:this, '4,01'
        getMember
        push '(('
        getMember
        subtract
        push 1, 'Math'
        getVariable
        push 'abs'
        callMethod
        push 2, 'Math'
        getVariable
        push 'max'
        callMethod
        setRegister r:5
        pop
        push 0
        setRegister r:6
        pop
        branch label377
       label376:
        push r:6, r:2, 'length'
        getMember
        lessThan
        not
        branchIfTrue label379
       label377:
        push r:2, r:6
        getMember
        push '+'
        getMember
        push r:5
        greaterThan
        not
        branchIfTrue label378
        branch label379
       label378:
        push r:6
        increment
        setRegister r:6
        pop
        branch label376
       label379:
        push '6', r:4, '+', r:5, 2
        initObject
        push r:6, 2, r:2, 'insert'
        callMethod
        pop
        branch label374
       label380:
        push r:2
        return
      end // of function 

      setMember
      push r:1, '44=DZ'
      function2 () (r:1='this')
        push r:this, '0}8J]'
        getMember
        not
        not
        branchIfTrue label388
        push r:this, '0}8J]', TRUE
        setMember
        push 19
        setRegister r:2
        pop
        push 0
        setRegister r:3
        pop
        branch label382
       label381:
        push r:3
        increment
        setRegister r:3
        pop
       label382:
        push r:3, r:this, '106*]'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label383
        push r:this, '106*]'
        getMember
        push r:3
        getMember
        push 1, r:this, '*w()A('
        callMethod
        pop
        branch label381
       label383:
        push '2', 1, r:this, ';+'
        getMember
        push 'gotoAndStop'
        callMethod
        pop
        push 0
        setRegister r:4
        pop
        branch label385
       label384:
        push r:4
        increment
        setRegister r:4
        pop
       label385:
        push r:4, r:this, '2]g+c'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label388
        push r:this, '2]g+c'
        getMember
        push r:4
        getMember
        setRegister r:5
        pop
        push r:5, '*'
        getMember
        push 1
        equals
        not
        dup
        not
        branchIfTrue label386
        pop
        push r:5, '*'
        getMember
        push 0.5
        greaterThan
       label386:
        not
        branchIfTrue label387
        push 68, 40, r:5, '}J'
        getMember
        push 3, '*r'
        getVariable
        push ';CYOh'
        callMethod
        pop
       label387:
        branch label384
       label388:
      end // of function 

      setMember
      push r:1, '5CMYr'
      function2 () (r:1='this')
        push 0
        setRegister r:2
        pop
        branch label390
       label389:
        push r:2
        increment
        setRegister r:2
        pop
       label390:
        push r:2, r:this, ')gv94'
        getMember
        push 'length'
        getMember
        lessThan
        not
        branchIfTrue label402
        push r:this, ')gv94'
        getMember
        push r:2
        getMember
        setRegister r:3
        pop
        push r:3, ']d'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label392
        push r:3, ']d', r:3, ']d'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:3, ']d'
        getMember
        push 0
        greaterThan
        not
        not
        branchIfTrue label391
        push r:3, '_visible', TRUE
        setMember
       label391:
        branch label401
       label392:
        push r:3, '(KpGn'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label393
        push r:3, ']b', r:3, ']b'
        getMember
        push r:3, '(KpGn'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label393:
        push r:3, '+{eA+'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label394
        push r:3, '[b', r:3, '[b'
        getMember
        push r:3, '+{eA+'
        getMember
        multiply
        setMember
        push r:3, ']b', r:3, ']b'
        getMember
        push r:3, '+{eA+'
        getMember
        multiply
        setMember
       label394:
        push r:3, '7b'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label395
        push r:3, '_xscale', r:3, '_xscale'
        getMember
        push r:3, '7b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:3, '_yscale', r:3, '_yscale'
        getMember
        push r:3, '7b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label395:
        push r:3, '6b'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label396
        push r:3, '_rotation', r:3, '_rotation'
        getMember
        push r:3, '6b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
       label396:
        push r:3, '_x'
        getMember
        setRegister r:4
        pop
        push r:3, '_y'
        getMember
        setRegister r:5
        pop
        push r:3, '_x', r:3, '_x'
        getMember
        push r:3, '[b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:3, '_y', r:3, '_y'
        getMember
        push r:3, ']b'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        multiply
        add
        setMember
        push r:3, '(mwVa'
        getMember
        not
        branchIfTrue label397
        push r:4, r:3, '_x'
        getMember
        subtract
        setRegister r:6
        pop
        push r:5, r:3, '_y'
        getMember
        subtract
        setRegister r:7
        pop
        push r:6, r:7, 2, 'Math'
        getVariable
        push 'atan2'
        callMethod
        setRegister r:8
        pop
        push r:6, r:6
        multiply
        push r:7, r:7
        multiply
        add
        push 1, 'Math'
        getVariable
        push 'sqrt'
        callMethod
        setRegister r:9
        pop
        push '+Jv3J(', 1, r:this, '{==W3('
        callMethod
        setRegister r:10
        pop
        push r:10, '_x', r:3, '_x'
        getMember
        setMember
        push r:10, '_y', r:3, '_y'
        getMember
        setMember
        push r:10, '_rotation', r:8, 0.0174
        divide
        setMember
        push r:10, '_xscale', r:9
        setMember
       label397:
        push r:3, ']'
        getMember
        push NULL
        equals
        not
        not
        branchIfTrue label401
        push r:3, ']', r:3, ']'
        getMember
        push '{-kxL'
        getVariable
        push '-V;B'
        getMember
        subtract
        setMember
        push r:3, ']'
        getMember
        push 0
        lessThan
        not
        branchIfTrue label398
        push 0, r:3, 'removeMovieClip'
        callMethod
        pop
        push 1, r:2, r:2
        decrement
        setRegister r:2
        pop
        push 2, r:this, ')gv94'
        getMember
        push 'splice'
        callMethod
        pop
        branch label401
       label398:
        push r:3, ']'
        getMember
        push 10
        lessThan
        not
        branchIfTrue label401
        push r:3, '+7'
        getMember
        setRegister r:0
        push 0
        strictEquals
        branchIfTrue label399
        branch label400
       label399:
        push r:3, '_xscale', r:3, 'scale'
        getMember
        push r:3, ']'
        getMember
        push 10
        divide
        multiply
        setMember
        push r:3, '_yscale', r:3, '_xscale'
        getMember
        setMember
        branch label401
       label400:
        push r:3, '_alpha', r:3, ']'
        getMember
        push 10
        multiply
        setMember
        branch label401
       label401:
        branch label389
       label402:
      end // of function 

      setMember
      push r:1, '{==W3('
      function2 (r:2='5P55') (r:1='this')
        push '44{N'
        getVariable
        push '5;OW;'
        getMember
        push r:'5P55', 2, r:this, '6QA'
        getMember
        push '*=_p_'
        callMethod
        setRegister r:3
        pop
        push r:3, '[b', 0
        setMember
        push r:3, ']b', 0
        setMember
        push r:3, '+{eA+', 0.95
        setMember
        push r:3, 'scale', 100
        setMember
        push r:3, 1, r:this, ')gv94'
        getMember
        push 'push'
        callMethod
        pop
        push r:3
        return
      end // of function 

      setMember
      push r:0, '4MvcB', 1
      setMember
      push r:0, '8OItb', 2
      setMember
      push r:0, '3O*F2', 3
      setMember
      push r:0, '841,4', 4
      setMember
      push r:0, '[V{(6', 5
      setMember
      push r:0, '2z]V8', 1
      setMember
      push r:0, ';C*X2', 2
      setMember
      push r:0, '5NraA', 3
      setMember
      push r:0, '(8LH1', 4
      setMember
      push r:0, '9xuZZ', 5
      setMember
      push r:0, '-hCnb', 7
      setMember
      push r:0, '=Z3bA', 10
      setMember
      push r:0, '5;OW;', 12
      setMember
      push r:0, '+9fc', 25
      setMember
      push r:0, '70fd', 25
      setMember
      push r:0, '9-}5K(', 84, 72, 71, 73, 78, 5
      initArray
      setMember
      push '0hF['
      function2 (r:3='}J') (r:1='this', r:2='super')
        push r:'}J', 1, r:super, UNDEF
        callMethod
        pop
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '-SjAs'
        getMember
        push 'push'
        callMethod
        pop
        push r:this, '*]Q5}', 5
        setMember
      end // of function 

      setRegister r:0
      setVariable
      push r:0, ';9tAL'
      getVariable
      extends
      push r:0, 'prototype'
      getMember
      setRegister r:1
      pop
      push r:1, '87vE7('
      function2 () (r:1='this', r:2='super')
        push r:this, 1, ']DJP*('
        getVariable
        push 'call'
        callMethod
        pop
      end // of function 

      setMember
      push r:1, '7yU(0'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, ';3ljX'
        getVariable
        push 'call'
        callMethod
        pop
        push '*r'
        getVariable
        push '+-(0'
        getMember
        push ';AH0'
        getMember
        push r:this, '(('
        getMember
        getMember
        push r:this, ')('
        getMember
        getMember
        push 'list'
        getMember
        setRegister r:3
        pop
        push r:3, 'length'
        getMember
        push 0
        greaterThan
        not
        branchIfTrue label403
        push r:3, 0
        getMember
        setRegister r:4
        pop
        push r:this, 1, r:4, '565'
        callMethod
        pop
        push 0, r:this, '9T54'
        callMethod
        pop
       label403:
      end // of function 

      setMember
      push r:1, '9T54'
      function2 () (r:1='this', r:2='super')
        push r:this, 1, ']Sz},('
        getVariable
        push 'call'
        callMethod
        pop
        push r:this, 1, '*r'
        getVariable
        push '+-(0'
        getMember
        push '-SjAs'
        getMember
        push 'remove'
        callMethod
        pop
      end // of function 

      setMember
      push '980Sb'
      function2 () (r:1='this', r:2='super')
      end // of function 

      setRegister r:0
      setVariable
      push r:0, 'init'
      function2 (r:2='}J') (r:1='this')
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        not
        branchIfTrue label404
        push UNDEF
        return
       label404:
        push '980Sb'
        getVariable
        push ')2fr3', r:'}J'
        setMember
        push 0, ';ndCG'
        getVariable
        push '(kJ+1('
        callMethod
        not
        branchIfTrue label405
        push '980Sb'
        getVariable
        push 'mode', '980Sb'
        getVariable
        push ')2fr3'
        getMember
        push 1, '44{N'
        new
        setMember
       label405:
      end // of function 

      setMember
      push r:0, '0D 6'
      function2 () (r:1='this')
        push 0, '{-kxL'
        getVariable
        push '87vE7('
        callMethod
        pop
        push 0, '980Sb'
        getVariable
        push 'mode'
        getMember
        push '0D 6'
        callMethod
        pop
      end // of function 

      setMember
    end // of frame 0
  end // of defineMovieClip 427
  
  exportAssets
    427 as '90D*'
  end // of exportAssets
end
