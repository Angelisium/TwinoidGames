movie 'generator.swf' {
// flash 8, total frames: 1, frame rate: 30 fps, 150x170 px, compressed

  movieClip 2  {
  }

  movieClip 4 beta_head {
  }

  movieClip 6  {
  }

  movieClip 8 beta_tshirt {
  }

  movieClip 15  {
  }

  movieClip 26  {
  }

  movieClip 29  {
  }

  movieClip 32  {
  }

  movieClip 34  {
  }

  movieClip 37  {
  }

  movieClip 44  {
  }

  movieClip 46  {
  }

  movieClip 48  {
  }

  movieClip 53  {
  }

  movieClip 61  {
  }

  movieClip 80  {
  }

  movieClip 87  {
  }

  movieClip 95  {
  }

  movieClip 96  {
  }

  movieClip 97 polyvalent {
  }

  movieClip 100  {
  }

  movieClip 102  {
  }

  movieClip 103  {
  }

  movieClip 106  {
  }

  movieClip 107  {
  }

  movieClip 108  {
  }

  movieClip 114  {
  }

  movieClip 121  {
  }

  movieClip 124  {
  }

  movieClip 126  {
  }

  movieClip 129  {
  }

  movieClip 131  {
  }

  movieClip 134  {
  }

  movieClip 136  {
  }

  movieClip 138  {
  }

  movieClip 140  {
  }

  movieClip 143  {
  }

  movieClip 145  {
  }

  movieClip 147  {
  }

  movieClip 149  {
  }

  movieClip 151  {
  }

  movieClip 153  {
  }

  movieClip 154  {
  }

  movieClip 155  {
  }

  movieClip 163  {
  }

  movieClip 164  {
  }

  movieClip 166  {
  }

  movieClip 169  {
  }

  movieClip 172  {
  }

  movieClip 175  {
  }

  movieClip 178  {
  }

  movieClip 182  {
  }

  movieClip 184  {
  }

  movieClip 191  {
  }

  movieClip 192  {
  }

  movieClip 193  {
  }

  movieClip 197  {
  }

  movieClip 201  {
  }

  movieClip 202  {
  }

  movieClip 203  {
  }

  movieClip 208  {
  }

  movieClip 209  {
  }

  movieClip 211  {
  }

  movieClip 212  {
  }

  movieClip 214  {
  }

  movieClip 217  {
  }

  movieClip 219  {
  }

  movieClip 224  {
  }

  movieClip 230  {
  }

  movieClip 232  {
  }

  movieClip 234  {
  }

  movieClip 238  {
  }

  movieClip 239  {
  }

  movieClip 240  {
  }

  movieClip 247  {
  }

  movieClip 254  {
  }

  movieClip 255  {
  }

  movieClip 259  {
  }

  movieClip 260  {
  }

  movieClip 261  {
  }

  movieClip 263  {
  }

  movieClip 265  {
  }

  movieClip 266  {
  }

  movieClip 269  {
  }

  movieClip 271  {
  }

  movieClip 272  {
  }

  movieClip 274  {
  }

  movieClip 276  {
  }

  movieClip 278  {
  }

  movieClip 279  {
  }

  movieClip 281  {
  }

  movieClip 284  {
  }

  movieClip 286  {
  }

  movieClip 288  {
  }

  movieClip 291  {
  }

  movieClip 295  {
  }

  movieClip 297  {
  }

  movieClip 300  {
  }

  movieClip 301  {
  }

  movieClip 302  {
  }

  movieClip 308  {
  }

  movieClip 314  {
  }

  movieClip 319  {
  }

  movieClip 320  {
  }

  movieClip 323  {
  }

  movieClip 326  {
  }

  movieClip 329  {
  }

  movieClip 331  {
  }

  movieClip 333  {
  }

  movieClip 335  {
  }

  movieClip 338  {
  }

  movieClip 340  {
  }

  movieClip 342  {
  }

  movieClip 344  {
  }

  movieClip 346  {
  }

  movieClip 348  {
  }

  movieClip 351  {
  }

  movieClip 354  {
  }

  movieClip 357  {
  }

  movieClip 358  {
  }

  movieClip 361  {
  }

  movieClip 362  {
  }

  movieClip 366  {
  }

  movieClip 367  {
  }

  movieClip 368  {
  }

  movieClip 370  {
  }

  movieClip 373  {
  }

  movieClip 376  {
  }

  movieClip 379  {
  }

  movieClip 381  {
  }

  movieClip 384  {
  }

  movieClip 386  {
  }

  movieClip 388  {
  }

  movieClip 390  {
  }

  movieClip 392  {
  }

  movieClip 395  {
  }

  movieClip 397  {
  }

  movieClip 400  {
  }

  movieClip 403  {
  }

  movieClip 406  {
  }

  movieClip 409  {
  }

  movieClip 411  {
  }

  movieClip 413  {
  }

  movieClip 415  {
  }

  movieClip 417  {
  }

  movieClip 419  {
  }

  movieClip 421  {
  }

  movieClip 423  {
  }

  movieClip 425  {
  }

  movieClip 429  {
  }

  movieClip 431  {
  }

  movieClip 433  {
  }

  movieClip 435  {
  }

  movieClip 436  {
  }

  movieClip 438  {
  }

  movieClip 440  {
  }

  movieClip 443  {
  }

  movieClip 445  {
  }

  movieClip 446  {
  }

  movieClip 448  {
  }

  movieClip 451  {
  }

  movieClip 455  {
  }

  movieClip 457  {
  }

  movieClip 459  {
  }

  movieClip 460  {
  }

  movieClip 465  {
  }

  movieClip 467  {
  }

  movieClip 469  {
  }

  movieClip 472  {
  }

  movieClip 475  {
  }

  movieClip 477  {
  }

  movieClip 478  {
  }

  movieClip 480  {
  }

  movieClip 483  {
  }

  movieClip 485  {
  }

  movieClip 486  {
  }

  movieClip 487  {
  }

  movieClip 488  {
  }

  movieClip 491  {
  }

  movieClip 493  {
  }

  movieClip 499  {
  }

  movieClip 502  {
  }

  movieClip 504  {
  }

  movieClip 506  {
  }

  movieClip 507  {
  }

  movieClip 509  {
  }

  movieClip 511  {
  }

  movieClip 513  {
  }

  movieClip 515  {
  }

  movieClip 517  {
  }

  movieClip 520  {
  }

  movieClip 522  {
  }

  movieClip 524  {
  }

  movieClip 525  {
  }

  movieClip 527  {
  }

  movieClip 530  {
  }

  movieClip 531  {
  }

  movieClip 533  {
  }

  movieClip 535  {
  }

  movieClip 536  {
  }

  movieClip 538  {
  }

  movieClip 540  {
  }

  movieClip 543  {
  }

  movieClip 546  {
  }

  movieClip 548  {
  }

  movieClip 551  {
  }

  movieClip 553  {
  }

  movieClip 555  {
  }

  movieClip 557  {
  }

  movieClip 560  {
  }

  movieClip 563  {
  }

  movieClip 566  {
  }

  movieClip 569  {
  }

  movieClip 571  {
  }

  movieClip 573  {
  }

  movieClip 575  {
  }

  movieClip 577  {
  }

  movieClip 579  {
  }

  movieClip 580  {
  }

  movieClip 583  {
  }

  movieClip 585  {
  }

  movieClip 587  {
  }

  movieClip 589  {
  }

  movieClip 592  {
  }

  movieClip 594  {
  }

  movieClip 596  {
  }

  movieClip 599  {
  }

  movieClip 603  {
  }

  movieClip 605  {
  }

  movieClip 607  {
  }

  movieClip 609  {
  }

  movieClip 613  {
  }

  movieClip 615  {
  }

  movieClip 618  {
  }

  movieClip 619  {
  }

  movieClip 620  {
  }

  movieClip 624  {
  }

  movieClip 625  {
  }

  movieClip 626  {
  }

  movieClip 635  {
  }

  movieClip 637  {
  }

  movieClip 639  {
  }

  movieClip 641  {
  }

  movieClip 643  {
  }

  movieClip 645  {
  }

  movieClip 647  {
  }

  movieClip 650  {
  }

  movieClip 652  {
  }

  movieClip 654  {
  }

  movieClip 657  {
  }

  movieClip 659  {
  }

  movieClip 661  {
  }

  movieClip 664  {
  }

  movieClip 666  {
  }

  movieClip 668  {
  }

  movieClip 673  {
  }

  movieClip 675  {
  }

  movieClip 677  {
  }

  movieClip 679  {
  }

  movieClip 681  {
  }

  movieClip 707  {
  }

  movieClip 714  {
  }

  movieClip 715  {
  }

  movieClip 717  {
  }

  movieClip 719  {
  }

  movieClip 721  {
  }

  movieClip 723  {
  }

  movieClip 725  {
  }

  movieClip 727  {
  }

  movieClip 729  {
  }

  movieClip 731  {
  }

  movieClip 733  {
  }

  movieClip 735  {
  }

  movieClip 737  {
  }

  movieClip 739  {
  }

  movieClip 741  {
  }

  movieClip 743  {
  }

  movieClip 745  {
  }

  movieClip 747  {
  }

  movieClip 749  {
  }

  movieClip 750  {
  }

  movieClip 754  {
  }

  movieClip 755  {
  }

  movieClip 756  {
  }

  movieClip 758  {
  }

  movieClip 760  {
  }

  movieClip 762  {
  }

  movieClip 764  {
  }

  movieClip 765  {
  }

  movieClip 766  {
  }

  movieClip 768  {
  }

  movieClip 770  {
  }

  movieClip 772  {
  }

  movieClip 773  {
  }

  movieClip 775  {
  }

  movieClip 777  {
  }

  movieClip 779  {
  }

  movieClip 781  {
  }

  movieClip 784  {
  }

  movieClip 786  {
  }

  movieClip 788  {
  }

  movieClip 789  {
  }

  movieClip 796  {
  }

  movieClip 799  {
  }

  movieClip 800  {
  }

  movieClip 802  {
  }

  movieClip 804  {
  }

  movieClip 808  {
  }

  movieClip 811  {
  }

  movieClip 814  {
  }

  movieClip 815  {
  }

  movieClip 817  {
  }

  movieClip 819  {
  }

  movieClip 821  {
  }

  movieClip 824  {
  }

  movieClip 826  {
  }

  movieClip 828  {
  }

  movieClip 830  {
  }

  movieClip 832  {
  }

  movieClip 834  {
  }

  movieClip 835  {
  }

  movieClip 836  {
  }

  movieClip 840  {
  }

  movieClip 843  {
  }

  movieClip 845  {
  }

  movieClip 847  {
  }

  movieClip 849  {
  }

  movieClip 850  {
  }

  movieClip 852  {
  }

  movieClip 853  {
  }

  movieClip 855  {
  }

  movieClip 859  {
  }

  movieClip 860  {
  }

  movieClip 861  {
  }

  movieClip 865  {
  }

  movieClip 866  {
  }

  movieClip 869  {
  }

  movieClip 873  {
  }

  movieClip 878  {
  }

  movieClip 883  {
  }

  movieClip 886  {
  }

  movieClip 890  {
  }

  movieClip 893  {
  }

  movieClip 895  {
  }

  movieClip 897  {
  }

  movieClip 899  {
  }

  movieClip 900  {
  }

  movieClip 903  {
  }

  movieClip 904  {
  }

  movieClip 906  {
  }

  movieClip 908  {
  }

  movieClip 910  {
  }

  movieClip 912  {
  }

  movieClip 914  {
  }

  movieClip 917  {
  }

  movieClip 919  {
  }

  movieClip 922  {
  }

  movieClip 924  {
  }

  movieClip 927  {
  }

  movieClip 929  {
  }

  movieClip 932  {
  }

  movieClip 934  {
  }

  movieClip 937  {
  }

  movieClip 939  {
  }

  movieClip 942  {
  }

  movieClip 945  {
  }

  movieClip 947  {
  }

  movieClip 950  {
  }

  movieClip 952  {
  }

  movieClip 955  {
  }

  movieClip 958  {
  }

  movieClip 960  {
  }

  movieClip 962  {
  }

  movieClip 964  {
  }

  movieClip 966  {
  }

  movieClip 968  {
  }

  movieClip 971  {
  }

  movieClip 974  {
  }

  movieClip 976  {
  }

  movieClip 978  {
  }

  movieClip 980  {
  }

  movieClip 982  {
  }

  movieClip 985  {
  }

  movieClip 987  {
  }

  movieClip 989  {
  }

  movieClip 991  {
  }

  movieClip 992  {
  }

  movieClip 995  {
  }

  movieClip 997  {
  }

  movieClip 1000  {
  }

  movieClip 1002  {
  }

  movieClip 1004  {
  }

  movieClip 1006  {
  }

  movieClip 1008  {
  }

  movieClip 1010  {
  }

  movieClip 1014  {
  }

  movieClip 1016  {
  }

  movieClip 1017  {
  }

  movieClip 1019  {
  }

  movieClip 1021  {
  }

  movieClip 1023  {
  }

  movieClip 1025  {
  }

  movieClip 1027  {
  }

  movieClip 1032  {
  }

  movieClip 1034  {
  }

  movieClip 1036  {
  }

  movieClip 1038  {
  }

  movieClip 1039  {
  }

  movieClip 1043  {
  }

  movieClip 1044  {
  }

  movieClip 1045  {
  }

  movieClip 1054  {
  }

  movieClip 1055  {
  }

  movieClip 1057  {
  }

  movieClip 1059  {
  }

  movieClip 1061  {
  }

  movieClip 1076  {
  }

  movieClip 1077  {
  }

  movieClip 1079  {
  }

  movieClip 1082  {
  }

  movieClip 1084  {
  }

  movieClip 1087  {
  }

  movieClip 1091  {
  }

  movieClip 1093  {
  }

  movieClip 1095  {
  }

  movieClip 1097  {
  }

  movieClip 1100  {
  }

  movieClip 1103  {
  }

  movieClip 1106  {
  }

  movieClip 1110  {
  }

  movieClip 1113  {
  }

  movieClip 1115  {
  }

  movieClip 1116  {
  }

  movieClip 1118  {
  }

  movieClip 1120  {
  }

  movieClip 1122  {
  }

  movieClip 1124  {
  }

  movieClip 1126  {
  }

  movieClip 1128  {
  }

  movieClip 1130  {
  }

  movieClip 1132  {
  }

  movieClip 1139  {
  }

  movieClip 1141  {
  }

  movieClip 1148  {
  }

  movieClip 1153  {
  }

  movieClip 1156  {
  }

  movieClip 1159  {
  }

  movieClip 1161  {
  }

  movieClip 1176  {
  }

  movieClip 1177  {
  }

  movieClip 1194  {
  }

  movieClip 1195  {
  }

  movieClip 1196  {
  }

  movieClip 1197  {
  }

  movieClip 1199  {
  }

  movieClip 1201  {
  }

  movieClip 1203  {
  }

  movieClip 1205  {
  }

  movieClip 1207  {
  }

  movieClip 1210  {
  }

  movieClip 1213  {
  }

  movieClip 1216  {
  }

  movieClip 1217  {
  }

  movieClip 1230  {
  }

  movieClip 1231  {
  }

  movieClip 1235  {
  }

  movieClip 1236  {
  }

  movieClip 1237  {
  }

  movieClip 1245  {
  }

  movieClip 1248  {
  }

  movieClip 1254  {
  }

  movieClip 1257  {
  }

  movieClip 1260  {
  }

  movieClip 1263  {
  }

  movieClip 1266  {
  }

  movieClip 1267  {
  }

  movieClip 1271  {
  }

  movieClip 1276  {
  }

  movieClip 1278  {
  }

  movieClip 1280  {
  }

  movieClip 1282  {
  }

  movieClip 1284  {
  }

  movieClip 1286  {
  }

  movieClip 1288  {
  }

  movieClip 1290  {
  }

  movieClip 1292  {
  }

  movieClip 1293  {
  }

  movieClip 1297  {
  }

  movieClip 1299  {
  }

  movieClip 1301  {
  }

  movieClip 1303  {
  }

  movieClip 1305  {
  }

  movieClip 1306  {
  }

  movieClip 1309  {
  }

  movieClip 1311  {
  }

  movieClip 1313  {
  }

  movieClip 1315  {
  }

  movieClip 1318  {
  }

  movieClip 1319  {
  }

  movieClip 1321  {
  }

  movieClip 1323  {
  }

  movieClip 1326  {
  }

  movieClip 1329  {
  }

  movieClip 1331  {
  }

  movieClip 1332  {
  }

  movieClip 1338  {
  }

  movieClip 1342  {
  }

  movieClip 1344  {
  }

  movieClip 1346  {
  }

  movieClip 1348  {
  }

  movieClip 1350  {
  }

  movieClip 1352  {
  }

  movieClip 1355  {
  }

  movieClip 1357  {
  }

  movieClip 1359  {
  }

  movieClip 1360  {
  }

  movieClip 1364  {
  }

  movieClip 1369  {
  }

  movieClip 1372  {
  }

  movieClip 1374  {
  }

  movieClip 1376  {
  }

  movieClip 1378  {
  }

  movieClip 1380  {
  }

  movieClip 1382  {
  }

  movieClip 1383  {
  }

  movieClip 1386  {
  }

  movieClip 1388  {
  }

  movieClip 1390  {
  }

  movieClip 1392  {
  }

  movieClip 1393  {
  }

  movieClip 1398  {
  }

  movieClip 1402  {
  }

  movieClip 1406  {
  }

  movieClip 1407  {
  }

  movieClip 1408  {
  }

  movieClip 1409 monster {
  }

  movieClip 1410 zeMonster {
  }

  movieClip 1412 sblurb {
  }

  frame 1 {
    @estr = function () {
      return flash.Boot.__string_rec(this, 'xx');
    };

    var v1 = new Object();
    flash = v1;
    var v2 = _global.flash;
    // Loop counter not found
for ($somevar in v2) {
      v1[enumerate v2] = v2[enumerate v2];
    }
    v1 = new Object();
    flash.display = v1;
    v2 = _global.flash.display;
    // Loop counter not found
for ($somevar in v2) {
      v1[enumerate v2] = v2[enumerate v2];
    }
    flash.Boot = function () {};

    flash.Boot.__name__ = ['flash', 'Boot'];
    v1 = flash.Boot.prototype;
    v1.__class__ = flash.Boot;
    flash.Boot.__string_rec = function (arg0, arg1) {
      if (arg1.length >= 20) {
        return '<...>';
      }
      var v4 = typeof arg0;
      if (v4 != 'movieclip') {
        if (v4 == 'function' && (arg0.__name__ != null || arg0.__ename__ != null)) {
          v4 = 'object';
        }
      } else {
        v4 = 'object';
      }
      var v5 = v4;
      if (v5 != 'object') {
      } else {
        if (v5 != 'function') {
            return String(arg0);
        } else {
            if (arg0 instanceof Array) {
              if (arg0.__enum__ != null) {
                if (arg0.length == 2) {
                  return arg0[0];
                }
                var v6 = arg0[0] + '(';
                arg1 += '    ';
                var v7 = 2;
                var v8 = arg0.length;
                while (v7 < v8) {
                  ++v7;
                  var v9 = v7;
                  if (v9 == 2) {
                    v6 += flash.Boot.__string_rec(arg0[v9], arg1);
                  } else {
                    v6 += ',' + flash.Boot.__string_rec(arg0[v9], arg1);
                  }
                }
                return v6 + ')';
              }
              v6 = arg0.length;
              v8 = '[';
              arg1 += '    ';
              v9 = 0;
              while (v9 < v6) {
                ++v9;
                var v10 = v9;
                v8 += (v10 > 0 ? ',' : '') + flash.Boot.__string_rec(arg0[v10], arg1);
              }
              v8 += ']';
              return v8;
            }
            v6 = arg0.toString();
            if ((typeof v6 == 'string' || v6 instanceof String) && (v6 != '[object Object]' && v6 != '[type Function]')) {
              return v6;
            }
            v8 = '{\n';
            if (typeof(arg0) == 'movieclip') {
              v8 = 'MC(' + arg0._name + ') ' + v8;
            }
            arg1 += '    ';
            v10 = new Array();
            // Loop counter not found
for ($somevar in arg0) {
              v10.push(enumerate arg0);
            }
            v9 = v10;
            v10 = v9.iterator();
            while (v10.hasNext()) {
              var v11 = v10.next();
              if (v11 == 'prototype' || (v11 == '__class__' || (v11 == '__super__' || v11 == '__interfaces__'))) {
                continue;
              }
              if (v8.length != 2) {
                v8 += ',\n';
              }
              v8 += arg1 + v11 + ' : ' + flash.Boot.__string_rec(arg0[v11], arg1);
            }
            arg1 = arg1.substring(4);
            if (v8.length != 2) {
              v8 += '\n';
            }
            v8 += arg1 + '}';
            return v8;
          if (v5 != 'string') {
            return '<function>';
          } else {
            return arg0;
          }
        }
      }
    };

    flash.Boot.__closure = function (arg0, arg1) {
      var v4 = arg1[arg0];
      if (v4 == null) {
        return null;
      }
      var v5 = function () {
        super = arguments.callee;
        return super.f.apply(super.o, arguments);
      };

      v5.f = v4;
      v5.o = arg1;
      return v5;
    };

    flash.Boot.__instanceof = function (arg0, arg1) {
      if (!arg1) {
        return false;
      }
      if (arg0 instanceof arg1) {
        if (arg1 == Array) {
          return arg0.__enum__ == null;
        }
        return true;
      }
      var v4 = arg1;
      if (v4 != Int) {
      } else {
        if (v4 != Float) {
        } else {
          if (v4 != Bool) {
                return arg0.__enum__ == arg1 || (arg1 == Class && arg0.__name__ != null || arg1 == Enum && arg0.__ename__ != null);
          } else {
                return typeof arg0 == 'number' && (Math.ceil(arg0) === arg0 % 2147483648.0 && !(arg0 === true || arg0 === false));
            if (v4 != String) {
                return typeof arg0 == 'number';
            } else {
                return arg0 === true || arg0 === false;
              if (v4 != Dynamic) {
                return typeof arg0 == 'string';
              } else {
                return true;
              }
            }
          }
        }
      }
    };

    flash.Boot.getTrace = function () {
      var v2 = flash.Lib.current;
      var v3 = v2.__trace_txt;
      if (v3 == null) {
        var v4 = flash.Stage.width;
        var v5 = flash.Stage.height;
        if (v4 == 0) {
          v4 = 800;
        }
        if (v5 == 0) {
          v5 = 600;
        }
        v2.createTextField('__trace_txt', 1048500, 0, 0, v4, v5 + 30);
        v3 = v2.__trace_txt;
        var v6 = v3.getTextFormat();
        v6.font = '_sans';
        v3.setNewTextFormat(v6);
        v3.selectable = false;
        v3.textColor = flash.Boot.def_color;
        v2.__trace_lines = new Array();
      }
      return v3;
    };

    flash.Boot.__set_trace_color = function (arg0) {
      (flash.Boot.getTrace()).textColor = arg0;
      flash.Boot.def_color = arg0;
    };

    flash.Boot.__trace = function (arg0, arg1) {
      var v4 = flash.Lib.current;
      var v5 = flash.Boot.getTrace();
      var v6 = arg1.fileName + ((arg1.lineNumber == null) ? '' : ':' + arg1.lineNumber) + ': ' + flash.Boot.__string_rec(arg0, '');
      var v7 = v4.__trace_lines.concat(v6.split('\n'));
      v5.text = v7.join('\n');
      for (;;) {
        if (!(v7.length > 1 && v5.textHeight > flash.Stage.height)) break;
        v7.shift();
        v5.text = v7.join('\n');
      }
      v4.__trace_lines = v7;
    };

    flash.Boot.__exc = function (arg0) {
      var v3 = '';
      if (flash.Lib.onerror == null) {
        flash.Boot.__trace(flash.Boot.__string_rec(arg0, '') + v3, {'fileName': '(uncaught exception)'});
      } else {
        flash.Lib.onerror(flash.Boot.__string_rec(arg0, ''), []);
      }
    };

    flash.Boot.__clear_trace = function () {
      var v2 = flash.Lib.current;
      v2.__trace_txt.removeTextField();
      v2.__trace_lines = null;
    };

    flash.Boot.__init = function (arg0) {
      var v3 = _global;
      if (!v3.haxeInitDone) {
        v3.haxeInitDone = true;
        Array.prototype.copy = Array.prototype.slice;
        Array.prototype.insert = function (arg0, arg1) {
          this.splice(arg0, 0, arg1);
        };

        Array.prototype.remove = function (arg0) {
          var v3 = 0;
          var v4 = this.length;
          while (v3 < v4) {
            if (this[v3] == arg0) {
              this.splice(v3, 1);
              return true;
            }
            ++v3;
          }
          return false;
        };

        Array.prototype.iterator = function () {
          return {'cur': 0, 'arr': this, 'hasNext': function () {
            return this.cur < this.arr.length;
          }, 'next': function () {
            ++this.cur;
            return this.arr[this.cur];
          }};
        };

        _global.ASSetPropFlags(Array.prototype, null, 7);
        var cca = String.prototype.charCodeAt;
        String.prototype.cca = cca;
        String.prototype.charCodeAt = function (arg0) {
          var v3 = cca.call(this, arg0);
          if (v3 <= 0) {
            return null;
          }
          return v3;
        };

        if (_global.flash == null) {
          _global.flash = {};
        }
      }
      arg0.flash.Lib._global = _global;
      arg0.flash.Lib._root = _root;
      arg0.flash.Lib.current = arg0;
      arg0.@instanceof = flash.Boot.__instanceof;
      arg0.@closure = flash.Boot.__closure;
      if (_global.Stage.align != '') {
        null;
      } else {
        _global.Stage.align = 'LT';
      }
    };

    v1 = new Object();
    flash._MovieClip = v1;
    v2 = _global.flash._MovieClip;
    // Loop counter not found
for ($somevar in v2) {
      v1[enumerate v2] = v2[enumerate v2];
    }
    StringTools = function () {};

    StringTools.__name__ = ['StringTools'];
    v1 = StringTools.prototype;
    v1.__class__ = StringTools;
    v1.__class__.urlEncode = function (arg0) {
      return _global.escape(arg0);
    };

    v1.__class__.urlDecode = function (arg0) {
      return _global.unescape(arg0);
    };

    v1.__class__.htmlEscape = function (arg0) {
      return (((((arg0.split('&')).join('&amp;')).split('<')).join('&lt;')).split('>')).join('&gt;');
    };

    v1.__class__.htmlUnescape = function (arg0) {
      return (((((arg0.split('&gt;')).join('>')).split('&lt;')).join('<')).split('&amp;')).join('&');
    };

    v1.__class__.startsWith = function (arg0, arg1) {
      return arg0.length >= arg1.length && arg0.substr(0, arg1.length) == arg1;
    };

    v1.__class__.endsWith = function (arg0, arg1) {
      var v4 = arg1.length;
      var v5 = arg0.length;
      return v5 >= v4 && arg0.substr(v5 - v4, v4) == arg1;
    };

    v1.__class__.isSpace = function (arg0, arg1) {
      var v4 = arg0.charCodeAt(arg1);
      return v4 >= 9 && v4 <= 13 || v4 == 32;
    };

    v1.__class__.ltrim = function (arg0) {
      var v3 = arg0.length;
      var v4 = 0;
      for (;;) {
        if (!(v4 < v3 && StringTools.isSpace(arg0, v4))) break;
        ++v4;
      }
      if (v4 <= 0) {
        return arg0;
      } else {
        return arg0.substr(v4, v3 - v4);
      }
    };

    v1.__class__.rtrim = function (arg0) {
      var v3 = arg0.length;
      var v4 = 0;
      for (;;) {
        if (!(v4 < v3 && StringTools.isSpace(arg0, v3 - v4 - 1))) break;
        ++v4;
      }
      if (v4 <= 0) {
        return arg0;
      } else {
        return arg0.substr(0, v3 - v4);
      }
    };

    v1.__class__.trim = function (arg0) {
      return StringTools.ltrim(StringTools.rtrim(arg0));
    };

    v1.__class__.rpad = function (arg0, arg1, arg2) {
      var v5 = arg0.length;
      var v6 = arg1.length;
      while (v5 < arg2) {
        if (arg2 - v5 >= v6) {
          arg0 += arg1;
          v5 += v6;
        } else {
          arg0 += arg1.substr(0, arg2 - v5);
          v5 = arg2;
        }
      }
      return arg0;
    };

    v1.__class__.lpad = function (arg0, arg1, arg2) {
      var v5 = '';
      var v6 = arg0.length;
      if (v6 >= arg2) {
        return arg0;
      }
      var v7 = arg1.length;
      while (v6 < arg2) {
        if (arg2 - v6 >= v7) {
          v5 += arg1;
          v6 += v7;
        } else {
          v5 += arg1.substr(0, arg2 - v6);
          v6 = arg2;
        }
      }
      return v5 + arg0;
    };

    v1.__class__.replace = function (arg0, arg1, arg2) {
      return (arg0.split(arg1)).join(arg2);
    };

    v1.__class__.hex = function (arg0, arg1) {
      var v4 = '';
      var v5 = '0123456789ABCDEF';
      do {
        v4 = v5.charAt(arg0 & 15) + v4;
        arg0 >>>= 4;
      } while (arg0 > 0);
      if (arg1 != null) {
        while (v4.length < arg1) {
          v4 = '0' + v4;
        }
      }
      return v4;
    };

    v1 = new Object();
    mt = v1;
    v2 = _global.mt;
    // Loop counter not found
for ($somevar in v2) {
      v1[enumerate v2] = v2[enumerate v2];
    }
    mt.Rand = function (arg0) {
      this.seed = (arg0 < 0 ? -arg0 : arg0) + 131;
    };

    mt.Rand.__name__ = ['mt', 'Rand'];
    v1 = mt.Rand.prototype;
    v1.__class__ = mt.Rand;
    v1.addSeed = function (arg0) {
      this.seed = (this.seed + arg0) % 2147483647 & 1073741823;
      if (this.seed == 0) {
        this.seed = arg0 + 1;
      }
    };

    v1.clone = function () {
      var v2 = new mt.Rand(0);
      v2.seed = this.seed;
      return v2;
    };

    v1.getSeed = function () {
      return Std.int(this.seed) - 131;
    };

    v1.initSeed = function (arg0, arg1) {
      if (arg1 == null) {
        arg1 = 5;
      }
      var v4 = 0;
      while (v4 < arg1) {
        ++v4;
        var v5 = v4;
        arg0 ^= arg0 << 7 & 727393536;
        arg0 ^= arg0 << 15 & 462094336;
        arg0 ^= arg0 >>> 16;
        arg0 &= 1073741823;
        var v6 = 5381;
        v6 = (v6 << 5) + v6 + (arg0 & 255);
        v6 = (v6 << 5) + v6 + (arg0 >> 8 & 255);
        v6 = (v6 << 5) + v6 + (arg0 >> 16 & 255);
        v6 = (v6 << 5) + v6 + (arg0 >> 24);
        arg0 = v6 & 1073741823;
      }
      this.seed = (arg0 & 536870911) + 131;
    };

    v1.int = function () {
      this.seed = this.seed * 16807 % 2147483647;
      return this.seed & 1073741823;
    };

    v1.rand = function () {
      this.seed = this.seed * 16807 % 2147483647;
      return ((this.seed & 1073741823) % 10007) / 10007.0;
    };

    v1.random = function (arg0) {
      this.seed = this.seed * 16807 % 2147483647;
      return (this.seed & 1073741823) % arg0;
    };

    v1.seed = null;
    Reflect = function () {};

    Reflect.__name__ = ['Reflect'];
    v1 = Reflect.prototype;
    v1.__class__ = Reflect;
    v1.__class__.hasField = function (arg0, arg1) {
      return this.hasOwnProperty.call(arg0, arg1);
    };

    v1.__class__.field = function (arg0, arg1) {
      return arg0[arg1];
    };

    v1.__class__.setField = function (arg0, arg1, arg2) {
      arg0[arg1] = arg2;
    };

    v1.__class__.callMethod = function (arg0, arg1, arg2) {
      return arg1.apply(arg0, arg2);
    };

    v1.__class__.fields = function (arg0) {
      if (arg0 == null) {
        return new Array();
      }
      var v4 = new Array();
      // Loop counter not found
for ($somevar in arg0) {
        v4.push(enumerate arg0);
      }
      var v3 = v4;
      v4 = 0;
      while (v4 < v3.length) {
        if (v3.hasOwnProperty.call(arg0, v3[v4])) {
          ++v4;
        } else {
          v3.splice(v4, 1);
        }
      }
      return v3;
    };

    v1.__class__.isFunction = function (arg0) {
      return typeof arg0 == 'function' && arg0.__name__ == null;
    };

    v1.__class__.compare = function (arg0, arg1) {
      return (arg0 == arg1) ? 0 : (arg0 > arg1 ? 1 : -1);
    };

    v1.__class__.compareMethods = function (arg0, arg1) {
      if (arg0 == arg1) {
        return true;
      }
      if (!Reflect.isFunction(arg0) || !Reflect.isFunction(arg1)) {
        return false;
      }
      return arg0.f == arg1.f && (arg0.o == arg1.o && arg0.f != null);
    };

    v1.__class__.isObject = function (arg0) {
      var v3 = typeof arg0;
      return v3 == 'string' || (v3 == 'object' && !arg0.__enum__ || v3 == 'function' && arg0.__name__ != null);
    };

    v1.__class__.deleteField = function (arg0, arg1) {
      if (this.hasOwnProperty.call(arg0, arg1) != true) {
        return false;
      }
      delete arg0[arg1];
      return true;
    };

    v1.__class__.copy = function (arg0) {
      var v3 = {};
      var v4 = 0;
      var v5 = Reflect.fields(arg0);
      while (v4 < v5.length) {
        var v6 = v5[v4];
        ++v4;
        v3[v6] = arg0[v6];
      }
      return v3;
    };

    v1.__class__.makeVarArgs = function (f) {
      return function () {
        return f(arguments);
      };
    };

    v1 = new Object();
    flash.filters = v1;
    v2 = _global.flash.filters;
    // Loop counter not found
for ($somevar in v2) {
      v1[enumerate v2] = v2[enumerate v2];
    }
    v1 = new Object();
    flash.text = v1;
    v2 = _global.flash.text;
    // Loop counter not found
for ($somevar in v2) {
      v1[enumerate v2] = v2[enumerate v2];
    }
    v1 = new Object();
    haxe = v1;
    v2 = _global.haxe;
    // Loop counter not found
for ($somevar in v2) {
      v1[enumerate v2] = v2[enumerate v2];
    }
    haxe.Log = function () {};

    haxe.Log.__name__ = ['haxe', 'Log'];
    v1 = haxe.Log.prototype;
    v1.__class__ = haxe.Log;
    haxe.Log.trace = function (arg0, arg1) {
      flash.Boot.__trace(arg0, arg1);
    };

    haxe.Log.clear = function () {
      flash.Boot.__clear_trace();
    };

    haxe.Log.setColor = function (arg0) {
      flash.Boot.__set_trace_color(arg0);
    };

    Monster = function () {};

    Monster.__name__ = ['Monster'];
    v1 = Monster.prototype;
    v1.__class__ = Monster;
    v1.__class__.p0 = null;
    v1.__class__.main = function () {
      var v2 = flash.Lib.current.getNextHighestDepth();
      var v3 = flash.Lib.current.attachMovie('monster', 'p0', v2);
      v3._x = 0;
      v3._y = 0;
    };

    v1.__class__.update = function (arg0, arg1, arg2) {
      var v5 = new Array();
      v5 = arg1.split(';');
      var v6 = new Array();
      var v7 = 0;
      var v8 = v5.length;
      while (v7 < v8) {
        ++v7;
        var v9 = v7;
        v6[v9] = Std.parseInt(v5[v9]);
      }
      Monster.framize(arg0, v6, arg2);
      Monster.colorize(arg0, v6);
    };

    v1.__class__.initColor = function (arg0, arg1) {
      var v4 = 0;
      var v5 = flash.Lib.keys(arg0);
      while (v4 < v5.length) {
        var v6 = v5[v4];
        ++v4;
        var v7 = arg0[v6];
        if (Std.is(v7, flash.MovieClip)) {
          if (v7._name.substr(0, 6) == 'setCol') {
            Monster.colorSet(v7);
          }
          Monster.initColor(v7, arg1);
        }
      }
    };

    v1.__class__.colorSet = function (arg0) {
      var v3 = Std.parseInt(arg0.nbColor.text);
      var v4 = new flash.display.BitmapData(10 * v3, 10, false, 16777215);
      v4.draw(arg0);
      Monster.palette = new Array();
      var v5 = 0;
      while (v5 < v3) {
        ++v5;
        var v6 = v5;
        var v7 = v4.getPixel(5 + v6 * 10, 5);
        Monster.palette.push(v7);
      }
      v4.draw(arg0);
      v6 = v4.getPixel(1, 2);
      v5 = flash.Lib.current.createEmptyMovieClip('container', 20);
      v5._x = 32;
      v5._y = 211;
      v5.attachBitmap(v4, 20);
    };

    v1.__class__.framize = function (arg0, arg1, arg2) {
      haxe.Firebug.redirectTraces();
      var v5 = 0;
      var v6 = flash.Lib.keys(arg0);
      while (v5 < v6.length) {
        var v7 = v6[v5];
        ++v5;
        var v8 = arg0[v7];
        if (Std.is(v8, flash.MovieClip)) {
          if (v8._name.substr(0, 6) == 'setCol') {
            Monster.colorSet(v8);
          }
          var v9 = v8._name;
          if (v9.charAt(0) == 'p') {
            var v10 = v8._totalframes;
            if (arg2 != null) {
              var v11 = v9.charAt(1);
              var v12 = v9.charAt(2);
              var v13 = (v12 >= '0' && v12 <= '9') ? Std.parseInt(v11 + v12) : ((v11 >= '0' && v11 <= '9') ? Std.parseInt(v11) : null);
              if (v13 != 1) {
                if (v13 == 2) {
                  v10 = arg2[1];
                }
              } else {
                v10 = arg2[0];
              }
            }
            v11 = Std.parseInt(v8._name.substr(1, 2));
            v12 = arg1[v11] % v10;
            v8.gotoAndStop(v12 + 1);
          }
          Monster.framize(v8, arg1, arg2);
        }
      }
    };

    v1.__class__.swap = function (arg0, arg1, arg2, arg3, arg4) {
      var v7 = 0;
      var v8 = flash.Lib.keys(arg0);
      while (v7 < v8.length) {
        var v9 = v8[v7];
        ++v7;
        var v10 = arg0[v9];
        if (Std.is(v10, flash.MovieClip)) {
          if (v10._name.substr(0, 2) == 'p0') {
            var v11 = v10.attachMovie(arg2, arg2, v10.getNextHighestDepth());
            v11._x = arg3;
            v11._y = arg4;
          }
          if (v10._name.substr(0, 2) == arg1) {
            v10._visible = false;
          }
          Monster.swap(v10, arg1, arg2, arg3, arg4);
        }
      }
    };

    v1.__class__.colorize = function (arg0, arg1) {
      var v4 = 0;
      var v5 = flash.Lib.keys(arg0);
      while (v4 < v5.length) {
        var v6 = v5[v4];
        ++v4;
        var v7 = arg0[v6];
        if (Std.is(v7, flash.MovieClip)) {
          var v8 = null;
          if (v7._name.substr(0, 3) == 'col') {
            v8 = Std.parseInt(v7._name.substr(3, 1));
          }
          if (v7._name.substr(2, 3) == 'col') {
            v8 = Std.parseInt(v7._name.substr(5, 1));
          }
          if (v8 != null) {
            Monster.setColor(v7, Monster.palette[arg1[Monster.pMax + v8] % Monster.palette.length]);
          }
          Monster.colorize(v7, arg1);
        }
      }
    };

    v1.__class__.setColor = function (arg0, arg1) {
      var v4 = {'r': arg1 >> 16, 'g': arg1 >> 8 & 255, 'b': arg1 & 255};
      var v5 = new flash.Color(arg0);
      var v6 = {'ra': 100, 'ga': 100, 'ba': 100, 'aa': 100, 'rb': v4.r - 255, 'gb': v4.g - 255, 'bb': v4.b - 255, 'ab': 0};
      v5.setTransform(v6);
    };

    v1.__class__.hexStr = function (arg0) {
      var v3 = '';
      var v4 = 0;
      while (v4 < 8) {
        ++v4;
        var v5 = v4;
        var v6 = arg0 & 15;
        if (v6 >= 10) {
          v3 += String.fromCharCode('A'.charCodeAt(0) + v6 - 10);
        } else {
          v3 += Std.string(v6);
        }
        arg0 >>= 4;
      }
      return v3;
    };

    StringBuf = function () {
      this.b = '';
    };

    StringBuf.__name__ = ['StringBuf'];
    v1 = StringBuf.prototype;
    v1.__class__ = StringBuf;
    v1.add = function (arg0) {
      this.b += arg0;
    };

    v1.addChar = function (arg0) {
      this.b += String.fromCharCode(arg0);
    };

    v1.addSub = function (arg0, arg1, arg2) {
      this.b += arg0.substr(arg1, arg2);
    };

    v1.b = null;
    v1.toString = function () {
      return this.b;
    };

    v1 = new Object();
    flash.geom = v1;
    v2 = _global.flash.geom;
    // Loop counter not found
for ($somevar in v2) {
      v1[enumerate v2] = v2[enumerate v2];
    }
    haxe.Firebug = function () {};

    haxe.Firebug.__name__ = ['haxe', 'Firebug'];
    v1 = haxe.Firebug.prototype;
    v1.__class__ = haxe.Firebug;
    haxe.Firebug.detect = function () {
      if (!flash.external.ExternalInterface.available) {
        return false;
      }
      return flash.external.ExternalInterface.call('console.error.toString') != null;
    };

    haxe.Firebug.redirectTraces = function () {
      haxe.Log.trace = @closure('trace', haxe.Firebug);
      flash.Lib.setErrorHandler(@closure('onError', haxe.Firebug));
    };

    haxe.Firebug.onError = function (arg0, arg1) {
      var v4 = arg0 + '\n';
      var v5 = 0;
      while (v5 < arg1.length) {
        var v6 = arg1[v5];
        ++v5;
        v4 += 'Called from ' + v6 + '\n';
      }
      haxe.Firebug.trace(v4, null);
    };

    haxe.Firebug.trace = function (arg0, arg1) {
      var v4 = (arg1 != null && arg1.customParams != null) ? arg1.customParams[0] : null;
      if (v4 != 'warn' && (v4 != 'info' && (v4 != 'debug' && v4 != 'error'))) {
        v4 = (arg1 == null) ? 'error' : 'log';
      }
      var v5 = (arg1 == null) ? '' : arg1.fileName + ':' + arg1.lineNumber + ' : ';
      try {
        v5 += Std.string(arg0);
      }
      catch (v0) {
        var v6 = v0;
        v5 += '????';
      }
      v5 = (((((((v5.split('\\')).join('\\\\')).split('\'')).join('\\\'')).split('\n')).join('\\n')).split('\r')).join('\\r');
      v5 = StringTools.urlEncode(v5);
      v6 = 'javascript:console.' + v4 + '(\'' + v5 + '\');';
      flash.Lib.getURL(v6);
    };

    IntIter = function (arg0, arg1) {
      this.min = arg0;
      this.max = arg1;
    };

    IntIter.__name__ = ['IntIter'];
    v1 = IntIter.prototype;
    v1.__class__ = IntIter;
    v1.hasNext = function () {
      return this.min < this.max;
    };

    v1.max = null;
    v1.min = null;
    v1.next = function () {
      ++this.min;
      return this.min;
    };

    Std = function () {};

    Std.__name__ = ['Std'];
    v1 = Std.prototype;
    v1.__class__ = Std;
    v1.__class__.is = function (arg0, arg1) {
      return flash.Boot.__instanceof(arg0, arg1);
    };

    v1.__class__.string = function (arg0) {
      return flash.Boot.__string_rec(arg0, '');
    };

    v1.__class__.int = function (arg0) {
      if (arg0 < 0) {
        return Math.ceil(arg0);
      }
      return Math.floor(arg0);
    };

    v1.__class__.parseInt = function (arg0) {
      var v3 = _global.parseInt(arg0);
      if (Math.isNaN(v3)) {
        return null;
      }
      return v3;
    };

    v1.__class__.parseFloat = function (arg0) {
      return _global.parseFloat(arg0);
    };

    v1.__class__.random = function (arg0) {
      return random(arg0);
    };

    Lambda = function () {};

    Lambda.__name__ = ['Lambda'];
    v1 = Lambda.prototype;
    v1.__class__ = Lambda;
    v1.__class__.array = function (arg0) {
      var v3 = new Array();
      var v4 = arg0.iterator();
      while (v4.hasNext()) {
        var v5 = v4.next();
        v3.push(v5);
      }
      return v3;
    };

    v1.__class__.list = function (arg0) {
      var v3 = new List();
      var v4 = arg0.iterator();
      while (v4.hasNext()) {
        var v5 = v4.next();
        v3.add(v5);
      }
      return v3;
    };

    v1.__class__.map = function (arg0, arg1) {
      var v4 = new List();
      var v5 = arg0.iterator();
      while (v5.hasNext()) {
        var v6 = v5.next();
        v4.add(arg1(v6));
      }
      return v4;
    };

    v1.__class__.mapi = function (arg0, arg1) {
      var v4 = new List();
      var v5 = 0;
      var v6 = arg0.iterator();
      while (v6.hasNext()) {
        var v7 = v6.next();
        ++v5;
        v4.add(arg1(v5, v7));
      }
      return v4;
    };

    v1.__class__.has = function (arg0, arg1, arg2) {
      if (arg2 != null) {
        var v5 = arg0.iterator();
        while (v5.hasNext()) {
          var v6 = v5.next();
          if (arg2(v6, arg1)) {
            return true;
          }
        }
        return false;
      }
      v5 = arg0.iterator();
      while (v5.hasNext()) {
        v6 = v5.next();
        if (v6 == arg1) {
          return true;
        }
      }
      return false;
    };

    v1.__class__.exists = function (arg0, arg1) {
      var v4 = arg0.iterator();
      while (v4.hasNext()) {
        var v5 = v4.next();
        if (arg1(v5)) {
          return true;
        }
      }
      return false;
    };

    v1.__class__.foreach = function (arg0, arg1) {
      var v4 = arg0.iterator();
      while (v4.hasNext()) {
        var v5 = v4.next();
        if (!arg1(v5)) {
          return false;
        }
      }
      return true;
    };

    v1.__class__.iter = function (arg0, arg1) {
      var v4 = arg0.iterator();
      while (v4.hasNext()) {
        var v5 = v4.next();
        arg1(v5);
      }
    };

    v1.__class__.filter = function (arg0, arg1) {
      var v4 = new List();
      var v5 = arg0.iterator();
      while (v5.hasNext()) {
        var v6 = v5.next();
        if (arg1(v6)) {
          v4.add(v6);
        }
      }
      return v4;
    };

    v1.__class__.fold = function (arg0, arg1, arg2) {
      var v5 = arg0.iterator();
      while (v5.hasNext()) {
        var v6 = v5.next();
        arg2 = arg1(v6, arg2);
      }
      return arg2;
    };

    v1.__class__.count = function (arg0) {
      var v3 = 0;
      var v4 = arg0.iterator();
      while (v4.hasNext()) {
        var v5 = v4.next();
        ++v3;
      }
      return v3;
    };

    v1.__class__.empty = function (arg0) {
      return !(arg0.iterator()).hasNext();
    };

    List = function () {
      this.length = 0;
    };

    List.__name__ = ['List'];
    v1 = List.prototype;
    v1.__class__ = List;
    v1.add = function (arg0) {
      var v3 = [arg0];
      if (this.h != null) {
        this.q[1] = v3;
      } else {
        this.h = v3;
      }
      this.q = v3;
      ++this.length;
    };

    v1.clear = function () {
      this.h = null;
      this.q = null;
      this.length = 0;
    };

    v1.filter = function (arg0) {
      var v3 = new List();
      var v4 = this.h;
      while (v4 != null) {
        var v5 = v4[0];
        v4 = v4[1];
        if (arg0(v5)) {
          v3.add(v5);
        }
      }
      return v3;
    };

    v1.first = function () {
      return (this.h == null) ? null : this.h[0];
    };

    v1.h = null;
    v1.isEmpty = function () {
      return this.h == null;
    };

    v1.iterator = function () {
      return {'h': this.h, 'hasNext': function () {
        return this.h != null;
      }, 'next': function () {
        if (this.h == null) {
          return null;
        }
        var v2 = this.h[0];
        this.h = this.h[1];
        return v2;
      }};
    };

    v1.join = function (arg0) {
      var v3 = new StringBuf();
      var v4 = true;
      var v5 = this.h;
      while (v5 != null) {
        if (!v4) {
          v3.b += arg0;
        } else {
          v4 = false;
        }
        v3.b += v5[0];
        v5 = v5[1];
      }
      return v3.b;
    };

    v1.last = function () {
      return (this.q == null) ? null : this.q[0];
    };

    v1.length = null;
    v1.map = function (arg0) {
      var v3 = new List();
      var v4 = this.h;
      while (v4 != null) {
        var v5 = v4[0];
        v4 = v4[1];
        v3.add(arg0(v5));
      }
      return v3;
    };

    v1.pop = function () {
      if (this.h == null) {
        return null;
      }
      var v2 = this.h[0];
      this.h = this.h[1];
      if (this.h == null) {
        this.q = null;
      }
      --this.length;
      return v2;
    };

    v1.push = function (arg0) {
      var v3 = [arg0, this.h];
      this.h = v3;
      if (this.q == null) {
        this.q = v3;
      }
      ++this.length;
    };

    v1.q = null;
    v1.remove = function (arg0) {
      var v3 = null;
      var v4 = this.h;
      while (v4 != null) {
        if (v4[0] == arg0) {
          if (v3 != null) {
            v3[1] = v4[1];
          } else {
            this.h = v4[1];
          }
          if (this.q == v4) {
            this.q = v3;
          }
          --this.length;
          return true;
        }
        v3 = v4;
        v4 = v4[1];
      }
      return false;
    };

    v1.toString = function () {
      var v2 = new StringBuf();
      var v3 = true;
      var v4 = this.h;
      v2.b += '{';
      while (v4 != null) {
        if (!v3) {
          v2.b += ', ';
        } else {
          v3 = false;
        }
        v2.b += Std.string(v4[0]);
        v4 = v4[1];
      }
      v2.b += '}';
      return v2.b;
    };

    ValueType = new Object();
    ValueType.__ename__ = ['ValueType'];
    ValueType.__constructs__ = ['TNull', 'TInt', 'TFloat', 'TBool', 'TObject', 'TFunction', 'TClass', 'TEnum', 'TUnknown'];
    ['TBool', 3].__enum__ = ValueType;
    ['TBool', 3].toString = @estr;
    ValueType.TBool = ['TBool', 3];
    ['TBool', 3].__enum__.TClass = function (arg0) {
      ['TClass', 6, arg0].__enum__ = this;
      ['TClass', 6, arg0].toString = @estr;
      return ['TClass', 6, arg0];
    };

    ['TBool', 3].__enum__.TEnum = function (arg0) {
      ['TEnum', 7, arg0].__enum__ = this;
      ['TEnum', 7, arg0].toString = @estr;
      return ['TEnum', 7, arg0];
    };

    ['TFloat', 2].__enum__ = ['TBool', 3].__enum__;
    ['TFloat', 2].toString = @estr;
    ['TBool', 3].__enum__.TFloat = ['TFloat', 2];
    ['TFunction', 5].__enum__ = ['TBool', 3].__enum__;
    ['TFunction', 5].toString = @estr;
    ['TBool', 3].__enum__.TFunction = ['TFunction', 5];
    ['TInt', 1].__enum__ = ['TBool', 3].__enum__;
    ['TInt', 1].toString = @estr;
    ['TBool', 3].__enum__.TInt = ['TInt', 1];
    ['TNull', 0].__enum__ = ['TBool', 3].__enum__;
    ['TNull', 0].toString = @estr;
    ['TBool', 3].__enum__.TNull = ['TNull', 0];
    ['TObject', 4].__enum__ = ['TBool', 3].__enum__;
    ['TObject', 4].toString = @estr;
    ['TBool', 3].__enum__.TObject = ['TObject', 4];
    ['TUnknown', 8].__enum__ = ['TBool', 3].__enum__;
    ['TUnknown', 8].toString = @estr;
    ['TBool', 3].__enum__.TUnknown = ['TUnknown', 8];
    Type = function () {};

    Type.__name__ = ['Type'];
    v1 = Type.prototype;
    v1.__class__ = Type;
    v1.__class__.getClass = function (arg0) {
      if (arg0.__enum__ != null) {
        return null;
      }
      return arg0.__class__;
    };

    v1.__class__.getEnum = function (arg0) {
      return arg0.__enum__;
    };

    v1.__class__.getSuperClass = function (arg0) {
      return arg0.__super__;
    };

    v1.__class__.getClassName = function (arg0) {
      if (arg0 == null) {
        return null;
      }
      var v3 = arg0.__name__;
      return v3.join('.');
    };

    v1.__class__.getEnumName = function (arg0) {
      var v3 = arg0.__ename__;
      return v3.join('.');
    };

    v1.__class__.resolveClass = function (arg0) {
      var v3 = eval(arg0);
      if (v3 == null || v3.__name__ == null) {
        return null;
      }
      return v3;
    };

    v1.__class__.resolveEnum = function (arg0) {
      var v3 = eval(arg0);
      if (v3 == null || v3.__ename__ == null) {
        return null;
      }
      return v3;
    };

    v1.__class__.createInstance = function (arg0, arg1) {
      if (arg0 == Array) {
        return new Array();
      }
      var v4 = {'__constructor__': arg0, '__proto__': arg0.prototype};
      arg0.apply(v4, arg1);
      return v4;
    };

    v1.__class__.createEmptyInstance = function (arg0) {
      if (arg0 == Array) {
        return new Array();
      }
      var v3 = new _global.Object();
      v3.__proto__ = arg0.prototype;
      return v3;
    };

    v1.__class__.createEnum = function (arg0, arg1, arg2) {
      var v5 = arg0[arg1];
      if (v5 == null) {
        throw 'No such constructor ' + arg1;
      }
      if (Reflect.isFunction(v5)) {
        if (arg2 == null) {
          throw 'Constructor ' + arg1 + ' need parameters';
        }
        return v5.apply(arg0, arg2);
      }
      if (arg2 != null && arg2.length != 0) {
        throw 'Constructor ' + arg1 + ' does not need parameters';
      }
      return v5;
    };

    v1.__class__.createEnumIndex = function (arg0, arg1, arg2) {
      var v5 = (Type.getEnumConstructs(arg0))[arg1];
      if (v5 == null) {
        throw arg1 + ' is not a valid enum constructor index';
      }
      return Type.createEnum(arg0, v5, arg2);
    };

    v1.__class__.getInstanceFields = function (arg0) {
      var v3 = Reflect.fields(arg0.prototype);
      arg0 = arg0.__super__;
      while (arg0 != null) {
        var v4 = 0;
        var v5 = Reflect.fields(arg0.prototype);
        while (v4 < v5.length) {
          var v6 = v5[v4];
          ++v4;
          v3.remove(v6);
          v3.push(v6);
        }
        arg0 = arg0.__super__;
      }
      v3.remove('__class__');
      return v3;
    };

    v1.__class__.getClassFields = function (arg0) {
      var v3 = Reflect.fields(arg0);
      v3.remove('__name__');
      v3.remove('__interfaces__');
      v3.remove('__super__');
      return v3;
    };

    v1.__class__.getEnumConstructs = function (arg0) {
      return arg0.__constructs__;
    };

    v1.__class__.typeof = function (arg0) {
      var v3 = typeof arg0;
      if (v3 != 'null') {
      } else {
        if (v3 != 'boolean') {
        } else {
          if (v3 != 'string') {
          } else {
            if (v3 != 'number') {
                    return ValueType.TUnknown;
            } else {
                    return ValueType.TNull;
              if (v3 != 'object') {
                    return ValueType.TBool;
              } else {
                    return ValueType.TClass(String);
                if (v3 != 'function') {
                    if (Math.ceil(arg0) == arg0 % 2147483648.0) {
                      return ValueType.TInt;
                    }
                    return ValueType.TFloat;
                } else {
                    var v4 = arg0.__enum__;
                    if (v4 != null) {
                      return ValueType.TEnum(v4);
                    }
                    var v5 = arg0.__class__;
                    if (v5 != null) {
                      return ValueType.TClass(v5);
                    }
                    return ValueType.TObject;
                  if (v3 != 'undefined') {
                    if (arg0.__name__ != null) {
                      return ValueType.TObject;
                    }
                    return ValueType.TFunction;
                  } else {
                    return ValueType.TNull;
                  }
                }
              }
            }
          }
        }
      }
    };

    v1.__class__.enumEq = function (arg0, arg1) {
      if (arg0 == arg1) {
        return true;
      }
      if (arg0[0] != arg1[0]) {
        return false;
      }
      var v4 = 2;
      var v5 = arg0.length;
      while (v4 < v5) {
        ++v4;
        var v6 = v4;
        if (!Type.enumEq(arg0[v6], arg1[v6])) {
          return false;
        }
      }
      v4 = arg0.__enum__;
      if (v4 != arg1.__enum__ || v4 == null) {
        return false;
      }
      return true;
    };

    v1.__class__.enumConstructor = function (arg0) {
      return arg0[0];
    };

    v1.__class__.enumParameters = function (arg0) {
      return arg0.slice(2);
    };

    v1.__class__.enumIndex = function (arg0) {
      return arg0[1];
    };

    v1 = new Object();
    mt.bumdum = v1;
    v2 = _global.mt.bumdum;
    // Loop counter not found
for ($somevar in v2) {
      v1[enumerate v2] = v2[enumerate v2];
    }
    mt.bumdum.En = function () {};

    mt.bumdum.En.__name__ = ['mt', 'bumdum', 'En'];
    v1 = mt.bumdum.En.prototype;
    v1.__class__ = mt.bumdum.En;
    mt.bumdum.En.index = function (arg0) {
      return arg0[1];
    };

    mt.bumdum.Num = function () {};

    mt.bumdum.Num.__name__ = ['mt', 'bumdum', 'Num'];
    v1 = mt.bumdum.Num.prototype;
    v1.__class__ = mt.bumdum.Num;
    mt.bumdum.Num.mm = function (arg0, arg1, arg2) {
      return Math.min(Math.max(arg0, arg1), arg2);
    };

    mt.bumdum.Num.sMod = function (arg0, arg1) {
      if (arg1 == 0 || (arg1 == null || arg0 == null)) {
        return null;
      }
      while (arg0 >= arg1) {
        arg0 -= arg1;
      }
      while (arg0 < 0) {
        arg0 += arg1;
      }
      return arg0;
    };

    mt.bumdum.Num.hMod = function (arg0, arg1) {
      if (arg1 == 0 || (arg1 == null || arg0 == null)) {
        return null;
      }
      while (arg0 > arg1) {
        arg0 -= arg1 * 2;
      }
      while (arg0 < -arg1) {
        arg0 += arg1 * 2;
      }
      return arg0;
    };

    mt.bumdum.Num.rnd = function (arg0, arg1) {
      return Std.int(Math.pow(Math.random(), arg1) * arg0);
    };

    mt.bumdum.Geom = function () {};

    mt.bumdum.Geom.__name__ = ['mt', 'bumdum', 'Geom'];
    v1 = mt.bumdum.Geom.prototype;
    v1.__class__ = mt.bumdum.Geom;
    mt.bumdum.Geom.getDist = function (arg0, arg1) {
      var v4 = arg0.x - arg1.x;
      var v5 = arg0.y - arg1.y;
      return Math.sqrt(v4 * v4 + v5 * v5);
    };

    mt.bumdum.Geom.getAng = function (arg0, arg1) {
      var v4 = arg0.x - arg1.x;
      var v5 = arg0.y - arg1.y;
      return Math.atan2(v5, v4);
    };

    mt.bumdum.Geom.getParentCoord = function (arg0, arg1) {
      var v4 = null;
      var v5 = 0;
      var v6 = arg0._x;
      var v7 = arg0._y;
      while (true) {
        v4 = arg0._parent;
        if (v4._rotation != 0) {
          var v8 = Math.sqrt(v6 * v6 + v7 * v7);
          var v9 = Math.atan2(v7, v6);
          v9 += v4._rotation * 0.0174;
          v6 = Math.cos(v9) * v8;
          v7 = Math.sin(v9) * v8;
        }
        v6 *= v4._xscale * 0.01;
        v7 *= v4._yscale * 0.01;
        v6 += v4._x;
        v7 += v4._y;
        if (v4 == arg1 || v4 == flash.Lib._root) {
          return {'x': v6, 'y': v7};
        }
        arg0 = v4;
        ++v5;
        if (v5 > 20) {
          haxe.Log.trace('GET PARENT COORD ERROR', {'fileName': 'Lib.hx', 'lineNumber': 83, 'className': 'mt.bumdum.Geom', 'methodName': 'getParentCoord'});
          break;
        }
      }
      return null;
    };

    mt.bumdum.Col = function () {};

    mt.bumdum.Col.__name__ = ['mt', 'bumdum', 'Col'];
    v1 = mt.bumdum.Col.prototype;
    v1.__class__ = mt.bumdum.Col;
    mt.bumdum.Col.colToObj = function (arg0) {
      return {'r': arg0 >> 16, 'g': arg0 >> 8 & 255, 'b': arg0 & 255};
    };

    mt.bumdum.Col.objToCol = function (arg0) {
      return arg0.r << 16 | arg0.g << 8 | arg0.b;
    };

    mt.bumdum.Col.colToObj32 = function (arg0) {
      return {'a': arg0 >>> 24, 'r': arg0 >> 16 & 255, 'g': arg0 >> 8 & 255, 'b': arg0 & 255};
    };

    mt.bumdum.Col.objToCol32 = function (arg0) {
      return arg0.a << 24 | arg0.r << 16 | arg0.g << 8 | arg0.b;
    };

    mt.bumdum.Col.setPercentColor = function (arg0, arg1, arg2, arg3) {
      if (arg3 == null) {
        arg3 = 0;
      }
      var v6 = mt.bumdum.Col.colToObj(arg2);
      var v7 = new flash.Color(arg0);
      var v8 = arg1 / 100;
      var v9 = {'_': null};
      var v10 = Std.int(100 - arg1);
      v9.ra = v10;
      v9.ga = v10;
      v9.ba = v10;
      v9.aa = 100;
      v9.rb = Std.int(v8 * v6.r + arg3);
      v9.gb = Std.int(v8 * v6.g + arg3);
      v9.bb = Std.int(v8 * v6.b + arg3);
      v9.ab = 0;
      v7.setTransform(v9);
    };

    mt.bumdum.Col.setColor = function (arg0, arg1, arg2) {
      if (arg2 == null) {
        arg2 = -255;
      }
      var v5 = mt.bumdum.Col.colToObj32(arg1);
      var v6 = new flash.Color(arg0);
      var v7 = {'_': null};
      v7.ra = 100;
      v7.ga = 100;
      v7.ba = 100;
      v7.aa = 100;
      v7.rb = Std.int(v5.r + arg2);
      v7.gb = Std.int(v5.g + arg2);
      v7.bb = Std.int(v5.b + arg2);
      v7.ab = 0;
      v6.setTransform(v7);
    };

    mt.bumdum.Col.mergeCol = function (arg0, arg1, arg2) {
      if (arg2 == null) {
        arg2 = 0.5;
      }
      var v5 = mt.bumdum.Col.colToObj(arg0);
      var v6 = mt.bumdum.Col.colToObj(arg1);
      var v7 = {'r': Std.int(v5.r * arg2 + v6.r * (1 - arg2)), 'g': Std.int(v5.g * arg2 + v6.g * (1 - arg2)), 'b': Std.int(v5.b * arg2 + v6.b * (1 - arg2))};
      return mt.bumdum.Col.objToCol(v7);
    };

    mt.bumdum.Col.mergeCol32 = function (arg0, arg1, arg2) {
      if (arg2 == null) {
        arg2 = 0.5;
      }
      var v5 = mt.bumdum.Col.colToObj32(arg0);
      var v6 = mt.bumdum.Col.colToObj32(arg1);
      var v7 = {'r': Std.int(v5.r * arg2 + v6.r * (1 - arg2)), 'g': Std.int(v5.g * arg2 + v6.g * (1 - arg2)), 'b': Std.int(v5.b * arg2 + v6.b * (1 - arg2)), 'a': Std.int(v5.a * arg2 + v6.a * (1 - arg2))};
      return mt.bumdum.Col.objToCol32(v7);
    };

    mt.bumdum.Col.getRainbow = function (arg0) {
      if (arg0 == null) {
        arg0 = Math.random();
      }
      var v3 = 3;
      var v4 = [0, 0, 0];
      var v5 = (1 / v3) * 2;
      var v6 = 0;
      while (v6 < v3) {
        ++v6;
        var v7 = v6;
        var v8 = v5 + v7 * 2 * v5;
        var v9 = mt.bumdum.Num.hMod(v8 - arg0, 0.5);
        v4[v7] = Math.min(1.5 - Math.abs(v9) * 3, 1);
      }
      return {'r': Std.int(v4[0] * 255), 'g': Std.int(v4[1] * 255), 'b': Std.int(v4[2] * 255)};
    };

    mt.bumdum.Col.shuffle = function (arg0, arg1) {
      var v4 = mt.bumdum.Col.colToObj(arg0);
      v4.r = Std.int(mt.bumdum.Num.mm(0, v4.r + (Math.random() * 2 - 1) * arg1, 255));
      v4.g = Std.int(mt.bumdum.Num.mm(0, v4.g + (Math.random() * 2 - 1) * arg1, 255));
      v4.b = Std.int(mt.bumdum.Num.mm(0, v4.b + (Math.random() * 2 - 1) * arg1, 255));
      return mt.bumdum.Col.objToCol(v4);
    };

    mt.bumdum.Col.getWeb = function (arg0) {
      return '#' + StringTools.hex(arg0);
    };

    mt.bumdum.Col.rgb2Hex = function (arg0, arg1, arg2, arg3) {
      if (arg3 == null) {
        arg3 = false;
      }
      if (!arg3) {
        return (arg0 << 16) + (arg1 << 8) + arg2;
      }
      var v6 = mt.bumdum.Col.colToObj32((arg0 << 16) + (arg1 << 8) + arg2);
      v6.a = 255;
      return mt.bumdum.Col.objToCol32(v6);
    };

    mt.bumdum.Col.addAlpha = function (arg0) {
      var v3 = mt.bumdum.Col.colToObj32(arg0);
      v3.a = 255;
      return mt.bumdum.Col.objToCol32(v3);
    };

    mt.bumdum.Col.brighten = function (arg0, arg1) {
      return mt.bumdum.Col.mergeCol(arg0, 16777215, arg1 / 100);
    };

    mt.bumdum.Col.darken = function (arg0, arg1) {
      var v4 = mt.bumdum.Col.colToObj(arg0);
      v4.r -= Math.floor(v4.r * arg1 / 100);
      v4.g -= Math.floor(v4.g * arg1 / 100);
      v4.b -= Math.floor(v4.b * arg1 / 100);
      return mt.bumdum.Col.objToCol(v4);
    };

    mt.bumdum.Col.cmyk2rbg = function (arg0, arg1, arg2, arg3) {
      var v6 = 0;
      var v7 = 0;
      var v8 = 0;
      if (arg0 + arg3 > 100 || (arg1 + arg3 > 100 || arg2 + arg3 > 100)) {
        v6 = -99;
        v7 = -99;
        v8 = -99;
        var v9 = arg0 > arg1 ? arg0 : arg1;
        v9 = v9 > arg2 ? v9 : arg2;
        if (v9 == arg0) {
          v6 = 0;
        }
        if (v9 == arg1) {
          v7 = 0;
        }
        if (v9 == arg3) {
          v8 = 0;
        }
        var v10 = 100 - v9;
        if (v6 > 0 || v6 < 0) {
          v6 = Math.round((1 - (arg0 + v10) / 100) * 255);
        }
        if (v7 > 0 || v7 < 0) {
          v7 = Math.round((1 - (arg1 + v10) / 100) * 255);
        }
        if (v8 > 0 || v8 < 0) {
          v8 = Math.round((1 - (arg2 + v10) / 100) * 255);
        }
        return mt.bumdum.Col.objToCol({'r': v6, 'g': v7, 'b': v8});
      }
      v6 = Math.round((1 - (arg0 + arg3) / 100) * 255);
      v7 = Math.round((1 - (arg1 + arg3) / 100) * 255);
      v8 = Math.round((1 - (arg2 + arg3) / 100) * 255);
      return mt.bumdum.Col.objToCol({'r': v6, 'g': v7, 'b': v8});
    };

    mt.bumdum.Str = function () {};

    mt.bumdum.Str.__name__ = ['mt', 'bumdum', 'Str'];
    v1 = mt.bumdum.Str.prototype;
    v1.__class__ = mt.bumdum.Str;
    mt.bumdum.Str.searchAndReplace = function (arg0, arg1, arg2) {
      return (arg0.split(arg1)).join(arg2);
    };

    mt.bumdum.Filt = function () {};

    mt.bumdum.Filt.__name__ = ['mt', 'bumdum', 'Filt'];
    v1 = mt.bumdum.Filt.prototype;
    v1.__class__ = mt.bumdum.Filt;
    mt.bumdum.Filt.glow = function (arg0, arg1, arg2, arg3, arg4) {
      if (arg1 == null) {
        arg1 = 2;
      }
      if (arg2 == null) {
        arg2 = 10;
      }
      if (arg3 == null) {
        arg3 = 0;
      }
      if (arg4 == null) {
        arg4 = false;
      }
      var v7 = new flash.filters.GlowFilter();
      v7.blurX = arg1;
      v7.blurY = arg1;
      v7.strength = arg2;
      v7.color = arg3;
      v7.inner = arg4;
      var v8 = arg0.filters;
      v8.push(v7);
      arg0.filters = v8;
    };

    mt.bumdum.Filt.blur = function (arg0, arg1, arg2) {
      if (arg1 == null) {
        arg1 = 0;
      }
      if (arg2 == null) {
        arg2 = 0;
      }
      var v5 = new flash.filters.BlurFilter();
      v5.blurX = arg1;
      v5.blurY = arg2;
      var v6 = arg0.filters;
      v6.push(v5);
      arg0.filters = v6;
    };

    mt.bumdum.Filt.grey = function (arg0, arg1, arg2, arg3, arg4) {
      if (arg1 == null) {
        arg1 = 1;
      }
      if (arg2 == null) {
        arg2 = 0;
      }
      if (arg3 == null) {
        arg3 = {'r': 0, 'g': 0, 'b': 0};
      }
      var v7 = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0];
      if (arg4 == null) {
        var v8 = 0.25;
        var v9 = 0.15;
        var v10 = 0.6;
        arg4 = [v8, v9, v10, 0, arg3.r + arg2, v8, v9, v10, 0, arg3.g + arg2, v8, v9, v10, 0, arg3.b + arg2, 0, 0, 0, 1, 0];
      }
      v8 = [];
      v9 = 0;
      v10 = v7.length;
      while (v9 < v10) {
        ++v9;
        var v11 = v9;
        v8[v11] = v7[v11] * (1 - arg1) + arg4[v11] * arg1;
      }
      v9 = new flash.filters.ColorMatrixFilter();
      v9.matrix = v8;
      v10 = arg0.filters;
      v10.push(v9);
      arg0.filters = v10;
    };

    mt.bumdum.Tween = function (arg0, arg1, arg2, arg3) {
      this.sx = arg0;
      this.sy = arg1;
      this.ex = arg2;
      this.ey = arg3;
    };

    mt.bumdum.Tween.__name__ = ['mt', 'bumdum', 'Tween'];
    v1 = mt.bumdum.Tween.prototype;
    v1.__class__ = mt.bumdum.Tween;
    v1.ex = null;
    v1.ey = null;
    v1.getPos = function (arg0) {
      return {'x': this.sx * (1 - arg0) + this.ex * arg0, 'y': this.sy * (1 - arg0) + this.ey * arg0};
    };

    v1.sx = null;
    v1.sy = null;
    flash.Lib = function () {};

    flash.Lib.__name__ = ['flash', 'Lib'];
    v1 = flash.Lib.prototype;
    v1.__class__ = flash.Lib;
    flash.Lib._global = null;
    flash.Lib._root = null;
    flash.Lib.current = null;
    flash.Lib.onerror = null;
    flash.Lib.trace = function (arg0) {
      trace(arg0);
    };

    flash.Lib.eval = function (arg0) {
      return eval(arg0);
    };

    flash.Lib.getURL = function (arg0, arg1) {
      getURL(arg0, (arg1 == null) ? '_self' : arg1);
    };

    flash.Lib.fscommand = function (arg0, arg1) {
      fscommand('' + arg0, (arg1 == null) ? '' : arg1);
    };

    flash.Lib.print = function (arg0, arg1) {
      arg1 = (arg1 == 'bframe' || arg1 == 'bmax') ? 'print:#' + arg1 : 'print:';
      getURL(arg1, arg0);
    };

    flash.Lib.getTimer = function () {
      return getTimer();
    };

    flash.Lib.getVersion = function () {
      return flash.Lib._root.$version;
    };

    flash.Lib.registerClass = function (arg0, arg1) {
      flash.Lib._global.Object.registerClass(arg0, arg1);
    };

    flash.Lib.keys = function (arg0) {
      var v3 = new Array();
      // Loop counter not found
for ($somevar in arg0) {
        v3.push(enumerate arg0);
      }
      return v3;
    };

    flash.Lib.setErrorHandler = function (arg0) {
      flash.Lib.onerror = arg0;
    };

    MonsterType = function (arg0) {
      this.id = arg0;
    };

    MonsterType.__name__ = ['MonsterType'];
    v1 = MonsterType.prototype;
    v1.__class__ = MonsterType;
    v1.id = null;
    VersionAction = new Object();
    VersionAction.__ename__ = ['VersionAction'];
    VersionAction.__constructs__ = ['AddKind', 'AddFamilies', 'AddClasses'];
    VersionAction.AddClasses = function (arg0, arg1) {
      ['AddClasses', 2, arg0, arg1].__enum__ = this;
      ['AddClasses', 2, arg0, arg1].toString = @estr;
      return ['AddClasses', 2, arg0, arg1];
    };

    VersionAction.AddFamilies = function (arg0, arg1) {
      ['AddFamilies', 1, arg0, arg1].__enum__ = this;
      ['AddFamilies', 1, arg0, arg1].toString = @estr;
      return ['AddFamilies', 1, arg0, arg1];
    };

    VersionAction.AddKind = function (arg0, arg1, arg2) {
      ['AddKind', 0, arg0, arg1, arg2].__enum__ = this;
      ['AddKind', 0, arg0, arg1, arg2].toString = @estr;
      return ['AddKind', 0, arg0, arg1, arg2];
    };

    Generator = function () {
      this.init();
    };

    Generator.__name__ = ['Generator'];
    v1 = Generator.prototype;
    v1.__class__ = Generator;
    v1.__class__.current = null;
    v1.__class__.standAlone = null;
    v1.__class__.initVersion = function (arg0) {
      Generator.CURRENT_VERSION = new Array();
      var v3 = 0;
      while (v3 < arg0) {
        ++v3;
        var v4 = v3;
        var v5 = 0;
        var v6 = Generator.VERSIONS[v4];
        while (v5 < v6.length) {
          var v7 = v6[v5];
          ++v5;
          var v8 = v7;
          var v9 = v8[1];
          switch (v9) {
            case 0:
              v9 = v8[2];
              var v10 = v8[3];
              var v11 = v8[4];
              Generator.CURRENT_VERSION[v9.id] = [v10, v11];
              break;
            case 1:
              v9 = v8[2];
              var v10 = v8[3];
              Generator.CURRENT_VERSION[v9.id][0] += (v10 == null) ? 1 : v10;
              break;
            case 2:
              v9 = v8[2];
              var v10 = v8[3];
              Generator.CURRENT_VERSION[v9.id][1] += (v10 == null) ? 1 : v10;
          }
        }
      }
    };

    v1.__class__.main = function () {
      if (haxe.Firebug.detect()) {
        haxe.Firebug.redirectTraces();
      }
      Generator.standAlone = flash.Lib._root == flash.Lib.current;
      Generator.current = new Generator();
    };

    v1.apply = function (arg0) {
      Monster.update(this.monster, this.paramList, arg0);
      this.bitmapMe(this.monster);
    };

    v1.bitmapMe = function (arg0) {
      var v3 = Math.ceil(this.ratio * 150);
      var v4 = Math.ceil(this.ratio * 170);
      var v5 = new flash.display.BitmapData(v3, v4, true, 0);
      var v6 = new flash.geom.Matrix();
      v6.scale(this.ratio, this.ratio);
      v5.draw(arg0, v6);
      var v7 = 6 * this.ratio;
      var v8 = new flash.filters.GlowFilter();
      var v9 = new flash.geom.Point(0, 0);
      if (this.nbFusion <= 0) {
        if (this.legend) {
          if (Generator.standAlone) {
            v8.color = 12712207;
            v8.strength = 7;
            v8.blurX = v7;
            v8.blurY = v7;
          } else {
            v8.color = 12712207;
            v8.strength = 2;
            v7 = 9;
            v8.blurX = v7;
            v8.blurY = v7;
          }
        } else {
          if (this.grey != 'true') {
            if (Generator.standAlone) {
              v8.color = 16579561;
              v8.strength = 6;
            } else {
              v8.color = 3646382;
              v8.strength = 2;
              v7 = 20;
            }
          } else {
            v8.color = 10066329;
            v8.strength = 5;
          }
          v8.blurX = v7;
          v8.blurY = v7;
        }
      } else {
        if (Generator.standAlone) {
          var v11 = new flash.filters.GlowFilter();
          v11.color = 3381759;
          v11.strength = 3;
          v7 = 5;
          v11.blurX = v7;
          v11.blurY = v7;
          var v10 = v5.applyFilter(v5, v5.rectangle, v9, v11);
          v7 = 4;
          v8.color = 1199990;
          v8.strength = 3;
          v8.blurX = v7;
          v8.blurY = v7;
        } else {
          var v11 = new flash.filters.GlowFilter();
          v11.color = 3381759;
          v11.strength = 3;
          v7 = 5;
          v11.blurX = v7;
          v11.blurY = v7;
          var v10 = v5.applyFilter(v5, v5.rectangle, v9, v11);
          v7 = 4;
          v8.color = 1199990;
          v8.strength = 3;
          v8.blurX = v7;
          v8.blurY = v7;
        }
      }
      v11 = new flash.geom.Point(0, 0);
      var v12 = v5.applyFilter(v5, v5.rectangle, v11, v8);
      if (this.grey == 'true') {
        this.blackAndWhite(v5);
      }
      if (this.nbFusion > 0) {
        this.fusionRender(v5);
      }
      var v13 = flash.Lib.current.createEmptyMovieClip('containerM', 20);
      v13._x = 0;
      v13._y = 0;
      v13.attachBitmap(v5, 20);
      arg0.removeMovieClip();
    };

    v1.blackAndWhite = function (arg0) {
      var v3 = 0.4;
      var v4 = 0.3;
      var v5 = 0.5;
      var v6 = 10;
      var v7 = new Array();
      var v8 = new Array();
      v7 = [v3, v4, v5, 0, 40, v3, v4, v5, 0, 30, v3, v4, v5, 0, 30, 0, 0, 0, 1, 0];
      v8 = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0];
      var v9 = new flash.filters.ColorMatrixFilter(v7);
      arg0.applyFilter(arg0, arg0.rectangle, new flash.geom.Point(0, 0), v9);
    };

    v1.face = null;
    v1.fusionRender = function (arg0) {
      var v3 = 1;
      var v4 = 1;
      var v5 = 1.5 + 0.1 * this.nbFusion;
      var v6 = this.nbFusion * 10;
      if (v6 > 110) {
        v6 = 110;
      }
      var v7 = new Array();
      var v8 = new Array();
      v7 = [v3, 0, 0, 0, v6, 0, v4, 0, 0, v6, 0, 0, v5, 0, v6, 0, 0, 0, 1, 0];
      v8 = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0];
      var v9 = new flash.filters.ColorMatrixFilter(v7);
      arg0.applyFilter(arg0, arg0.rectangle, new flash.geom.Point(0, 0), v9);
    };

    v1.grey = null;
    v1.init = function () {
      this.pmax = 14;
      this.nbFusion = 0;
      this.paramList = '';
      this.legend = false;
      var v2 = flash.Lib._root.mface;
      var v3 = flash.Lib._root.size;
      this.ratio = (v3 != null) ? v3 : 1;
      this.face = (v2 != null && this.face == null) ? v2 : ((this.face != null) ? this.face : '1:5;0;1;49;64;0;0;3;1;11;5;1;6;');
      if (flash.Lib._root.grey == null) {
        this.grey = 'false';
      } else {
        this.grey = flash.Lib._root.grey;
      }
      if (Generator.standAlone) {
        this.mGenerator();
      }
    };

    v1.legend = null;
    v1.mGenBeta = function (arg0) {
      this.legend = true;
      this.paramList = '0;0;2;0;2;0;0;0;0;9;0;3;2;0;';
      Monster.update(this.monster, this.paramList, Generator.CURRENT_VERSION[0]);
      Monster.swap(this.monster, 'p3', 'beta_head', 80, 52);
      this.bitmapMe(this.monster);
    };

    v1.mGenV1 = function (arg0) {
      var v3 = new Array();
      var v4 = 0;
      var v5 = 0;
      var v6 = 0;
      var v7 = arg0.length;
      while (v6 < v7) {
        ++v6;
        var v8 = v6;
        v3[v8] = Std.parseInt(arg0[v8]);
        if (v8 > 1) {
          if (v4 < v3[v8]) {
            v4 = v3[v8];
            v5 = v8;
          }
        }
      }
      v6 = Generator.CURRENT_VERSION[v5 - 2];
      this.seed = new mt.OldRandSeed(v3[1]);
      this.paramList = v5 - 2 + ';';
      v7 = 0;
      v8 = this.pmax - 1;
      while (v7 < v8) {
        ++v7;
        var v9 = v7;
        this.paramList += this.seed.random(99) + ';';
      }
      this.apply(v6);
    };

    v1.mGenV3 = function (arg0) {
      this.legend = true;
      this.paramList = arg0[1];
      Monster.update(this.monster, this.paramList, null);
      this.apply();
    };

    v1.mGenV4 = function (arg0) {
      var v3 = 2;
      var v4 = 3;
      var v5 = 4;
      var v6 = 5;
      var v7 = 6;
      var v8 = 7;
      var v9 = 8;
      var v10 = Lambda.array(Lambda.map(arg0, function (arg0) {
        return Std.parseInt(arg0);
      }));
      var v11 = v10[0];
      if (v10.length == 10) {
        this.nbFusion = v10.pop();
      }
      var v12 = 0;
      var v13 = 0;
      var v14 = 0;
      var v15 = 0;
      var v16 = v3;
      var v17 = v10.length;
      while (v16 < v17) {
        ++v16;
        var v18 = v16;
        if (v10[v18] != 0) {
          if (v10[v18] <= v12) {
            if (v10[v18] > v14) {
              v14 = v10[v18];
              v15 = v18;
            }
          } else {
            v14 = v12;
            v12 = v10[v18];
            v15 = v13;
            v13 = v18;
          }
        } else {}
      }
      v16 = (v13 == v3 && (v10[v8] > 1 && v10[v8] >= v10[v3] * 0.66) || v13 == v8 && (v10[v8] > 1 && (v10[v3] > 0 && v10[v3] >= v10[v8] * 0.66))) ? 7 : v13 - 2;
      this.seed = new mt.OldRandSeed(v10[1]);
      this.paramList = v16 + ';';
      v17 = 0;
      v18 = this.pmax - 1;
      while (v17 < v18) {
        ++v17;
        var v19 = v17;
        this.paramList += this.seed.random(99) + ';';
      }
      this.apply(Generator.CURRENT_VERSION[v16]);
    };

    v1.mGenV5 = function (arg0) {
      var v3 = 2;
      var v4 = 3;
      var v5 = 4;
      var v6 = 5;
      var v7 = 6;
      var v8 = 7;
      var v9 = 8;
      var v10 = Lambda.array(Lambda.map(arg0, function (arg0) {
        return Std.parseInt(arg0);
      }));
      var v11 = v10[0];
      if (v10.length == 10) {
        this.nbFusion = v10.pop();
      }
      var v12 = 0;
      var v13 = 0;
      var v14 = 0;
      var v15 = 0;
      var v16 = v3;
      var v17 = v10.length;
      while (v16 < v17) {
        ++v16;
        var v18 = v16;
        if (v10[v18] != 0) {
          if (v10[v18] <= v12) {
            if (v10[v18] > v14) {
              v14 = v10[v18];
              v15 = v18;
            }
          } else {
            v14 = v12;
            v12 = v10[v18];
            v15 = v13;
            v13 = v18;
          }
        } else {}
      }
      v16 = (v13 == v3 && (v10[v8] > 1 && v10[v8] >= v10[v3] * 0.66) || v13 == v8 && (v10[v8] > 1 && (v10[v3] > 0 && v10[v3] >= v10[v8] * 0.66))) ? 7 : ((v13 == v3 && (v10[v4] > 1 && v10[v4] >= v10[v4] * 0.66) || v13 == v4 && (v10[v4] > 1 && (v10[v3] > 0 && v10[v4] >= v10[v3] * 0.66))) ? 8 : v13 - 2);
      this.seed = new mt.OldRandSeed(v10[1]);
      this.paramList = v16 + ';';
      v17 = 0;
      v18 = this.pmax - 1;
      while (v17 < v18) {
        ++v17;
        var v19 = v17;
        this.paramList += this.seed.random(99) + ';';
      }
      this.apply(Generator.CURRENT_VERSION[v16]);
    };

    v1.mGenV6 = function (arg0) {
      var v3 = 2;
      var v4 = 3;
      var v5 = 4;
      var v6 = 5;
      var v7 = 6;
      var v8 = 7;
      var v9 = 8;
      var v10 = Lambda.array(Lambda.map(arg0, function (arg0) {
        return Std.parseInt(arg0);
      }));
      var v11 = v10[0];
      if (v10.length == 10) {
        this.nbFusion = v10.pop();
      }
      var v12 = 0;
      var v13 = 0;
      var v14 = 0;
      var v15 = 0;
      var v16 = v3;
      var v17 = v10.length;
      while (v16 < v17) {
        ++v16;
        var v18 = v16;
        if (v10[v18] != 0) {
          if (v10[v18] <= v12) {
            if (v10[v18] > v14) {
              v14 = v10[v18];
              v15 = v18;
            }
          } else {
            v14 = v12;
            v12 = v10[v18];
            v15 = v13;
            v13 = v18;
          }
        } else {}
      }
      this.seed = new mt.OldRandSeed(v10[1]);
      v16 = (v13 == v3 && (v10[v8] > 1 && v10[v8] >= v10[v3] * 0.66) || v13 == v8 && (v10[v8] > 1 && (v10[v3] > 0 && v10[v3] >= v10[v8] * 0.66))) ? 7 : ((v13 == v3 && (v10[v4] > 1 && v10[v4] >= v10[v4] * 0.66) || v13 == v4 && (v10[v4] > 1 && (v10[v3] > 0 && v10[v4] >= v10[v3] * 0.66))) ? 8 : ((v13 == v6 && (v10[v4] > 5 && (v10[v3] > 5 && this.seed.random(100) <= 50))) ? 9 : v13 - 2));
      this.paramList = v16 + ';';
      v17 = 0;
      v18 = this.pmax - 1;
      while (v17 < v18) {
        ++v17;
        var v19 = v17;
        this.paramList += this.seed.random(99) + ';';
      }
      this.apply(Generator.CURRENT_VERSION[v16]);
    };

    v1.mGenerator = function () {
      var v2 = flash.Lib.current.getNextHighestDepth();
      this.monster = flash.Lib.current.attachMovie('zeMonster', 'zeMonster', v2);
      this.monster._quality = 'BEST';
      this.monster._x = 0;
      this.monster._y = 0;
      var v3 = new Array();
      v3 = this.face.split(':');
      if (Std.parseInt(v3[0]) == 1) {
      }
      Generator.initVersion(Std.parseInt(v3[0]));
      var v4 = v3[0];
      if (v4 != '1') {
      } else {
        if (v4 != '2') {
        } else {
          if (v4 != '3') {
          } else {
            if (v4 != '4') {
                  this.mGenV1(v3);
            } else {
                  this.mGenBeta(v3);
              if (v4 != '5') {
                  this.mGenV3(v3);
              } else {
                  this.mGenV4(v3);
                if (v4 != '6') {
                  this.mGenV5(v3);
                } else {
                  this.mGenV6(v3);
                }
              }
            }
          }
        }
      }
      if (flash.Lib._root.sblurbed == '1') {
        try {
          v4 = new mt.Rand(Std.parseInt(v3[1]));
          var v5 = flash.Lib.current.attachMovie('sblurb', 'sblurb', flash.Lib.current.getNextHighestDepth());
          v4.seed = v4.seed * 16807 % 2147483647;
          v5._x += (v4.seed & 1073741823) % 20;
          v4.seed = v4.seed * 16807 % 2147483647;
          v5._y += (v4.seed & 1073741823) % 80;
          v5._xscale = this.ratio * 70;
          v5._yscale = this.ratio * 70;
          v4.seed = v4.seed * 16807 % 2147483647;
          v5._rotation = (v4.seed & 1073741823) % 40 - 20;
          mt.bumdum.Filt.glow(flash.Lib.current, 3, 5, 11135757, true);
        }
        catch (v4.seed) {
          v4 = v4.seed;
      } else {
        }
      }
    };

    v1.monster = null;
    v1.nbFusion = null;
    v1.paramList = null;
    v1.pmax = null;
    v1.ratio = null;
    v1.seed = null;
    mt.OldRandSeed = function (arg0) {
      if (arg0 == null) {
        arg0 = 0;
      }
      this.idx = 0;
      this.vals = new Array();
      var v3 = 0;
      while (v3 < 55) {
        ++v3;
        var v4 = v3;
        arg0 = Std.int(arg0 * 1103515245.0) & 1073741823;
        arg0 += 12345;
        arg0 &= 1073741823;
        this.vals.push(arg0);
      }
    };

    mt.OldRandSeed.__name__ = ['mt', 'OldRandSeed'];
    v1 = mt.OldRandSeed.prototype;
    v1.__class__ = mt.OldRandSeed;
    v1.idx = null;
    v1.int = function () {
      this.idx = (this.idx + 1) % 55;
      var v2 = this.vals[(this.idx + 24) % 55] + this.idx & 1073741823;
      this.vals[this.idx] = v2;
      return v2;
    };

    v1.rand = function () {
      return this.int() / 1073741824.0;
    };

    v1.random = function (arg0) {
      return this.int() % arg0;
    };

    v1.vals = null;
    v1 = new Object();
    flash.external = v1;
    v2 = _global.flash.external;
    // Loop counter not found
for ($somevar in v2) {
      v1[enumerate v2] = v2[enumerate v2];
    }
    @Main = function () {};

    @Main.__name__ = ['@Main'];
    v1 = @Main.prototype;
    v1.__class__ = @Main;
    flash.Boot.__init(this);
    flash.MovieClip = _global.MovieClip;
    flash.TextField = _global.TextField;
    flash.text.StyleSheet = _global.TextField.StyleSheet;
    flash.Color = _global.Color;
    flash.TextFormat = _global.TextFormat;
    var g = _global;
    g.Int = {'__name__': ['Int']};
    g.Bool = {'__ename__': ['Bool']};
    g.Dynamic = {'__name__': ['Dynamic']};
    g.Class = {'__name__': ['Class']};
    g.Enum = {};
    g.Void = {'__ename__': ['Void']};
    g.Float = _global.Number;
    g.Float.__name__ = ['Float'];
    Array.prototype.__class__ = Array;
    Array.__name__ = ['Array'];
    String.prototype.__class__ = String;
    String.__name__ = ['String'];
    g.ASSetPropFlags(Array.prototype, null, 7);
    Math.NaN = Number.NaN;
    Math.NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY;
    Math.POSITIVE_INFINITY = Number.POSITIVE_INFINITY;
    Math.isFinite = function (arg0) {
      return _global.isFinite(arg0);
    };

    Math.isNaN = function (arg0) {
      return _global.isNaN(arg0);
    };

    Math.__name__ = ['Math'];
    flash.Stage = _global.Stage;
    flash.TextSnapshot = _global.TextSnapshot;
    try {
      flash.Boot.def_color = 0;
      flash.Boot.exception = null;
      Monster.palette = [16773855, 16764025, 16755230, 15531993, 13369239, 14019327, 9948159, 9151447, 14646839, 12082973, 13834264, 16775598, 15785113];
      Monster.pMax = 11;
      MonsterType.Epouvantail = new MonsterType(0);
      MonsterType.Sorciere = new MonsterType(1);
      MonsterType.Djinn = new MonsterType(2);
      MonsterType.Crapaud = new MonsterType(3);
      MonsterType.Karateka = new MonsterType(4);
      MonsterType.Satyre = new MonsterType(5);
      MonsterType.Monstrekivol = new MonsterType(6);
      MonsterType.Fantome = new MonsterType(7);
      MonsterType.VoodooDoll = new MonsterType(8);
      MonsterType.Vedgiz = new MonsterType(9);
      Generator.VERSIONS = [[VersionAction.AddKind(MonsterType.Epouvantail, 1, 3), VersionAction.AddKind(MonsterType.Sorciere, 1, 1), VersionAction.AddKind(MonsterType.Djinn, 1, 2), VersionAction.AddKind(MonsterType.Crapaud, 1, 1), VersionAction.AddKind(MonsterType.Karateka, 1, 1), VersionAction.AddKind(MonsterType.Satyre, 1, 2), VersionAction.AddKind(MonsterType.Monstrekivol, 1, 1)], [], [], [VersionAction.AddKind(MonsterType.Fantome, 1, 2)], [VersionAction.AddKind(MonsterType.VoodooDoll, 1, 1)], [VersionAction.AddKind(MonsterType.Vedgiz, 1, 3)]];
      Generator.CURRENT_VERSION = null;
      @Main.init = Generator.main();
    }
    catch (flash.Boot) {
      flash.Boot.__exc(flash.Boot);
    }
  }
}
