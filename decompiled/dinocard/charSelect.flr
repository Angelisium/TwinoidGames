movie 'charSelect.swf' {
// flash 8, total frames: 36, frame rate: 40 fps, 640x480 px, compressed

  movieClip 6  {
  }

  movieClip 9 mcPlayBut {

    frame 1 {
      stop();
    }
  }

  frame 1 {
    var f1 = false;
    var f2 = false;
    var f3 = false;
    var f4 = false;
    var f5 = false;
  }

  movieClip 12  {
  }

  movieClip 16  {

    frame 1 {
      stop();
    }

    frame 12 {
      _parent.pal._visible = true;
      _parent.pal.gotoAndPlay(2);
      _parent.pal.circle.gotoAndPlay(1);
      stop();
    }
  }

  movieClip 19  {
  }

  movieClip 27  {
  }

  movieClip 34  {
  }

  movieClip 57  {
  }

  movieClip 68  {

    frame 1 {
      gotoAndPlay(random(10));
    }

    frame 11 {
      gotoAndPlay('loop');
    }
  }

  movieClip 69  {
  }

  movieClip 70  {

    frame 1 {
      stop();
    }

    frame 12 {
      stop();
    }

    frame 21 {
      stop();
    }

    frame 30 {
      stop();
    }

    frame 39 {
      stop();
    }

    frame 63 {
      _parent.gotoAndPlay('start');
    }
  }

  frame 2 {
    total = getBytesTotal();
    loadedBytes = getBytesLoaded();
    loaded = int(loadedBytes * 100 / total);
    loading.text = loaded;
    if (loaded >= 20 && f1 == false) {
      f.gotoAndPlay('one');
      f1 = true;
    }
    if (loaded >= 40 && f2 == false) {
      f.gotoAndPlay('two');
      f2 = true;
    }
    if (loaded >= 60 && f3 == false) {
      f.gotoAndPlay('three');
      f3 = true;
    }
    if (loaded >= 80 && f4 == false) {
      f.gotoAndPlay('four');
      f4 = true;
    }
    if (loaded >= 100 && f5 == false) {
      f.gotoAndPlay('five');
      f5 = true;
    }
  }

  frame 3 {
    gotoAndPlay(_currentframe - 1);
  }

  movieClip 73  {
  }

  movieClip 74  {
  }

  movieClip 81  {
  }

  movieClip 84  {
  }

  movieClip 85  {

    frame 1 {
      g._rotation += 5;
    }

    frame 2 {
      gotoAndPlay(1);
    }
  }

  movieClip 86  {
  }

  movieClip 87  {
  }

  movieClip 88 vRoll {

    frame 1 {
      stop();
    }
  }

  movieClip 94  {
  }

  button 95 {

    on (press) {
      _root.selectedP = _currentframe;
      if (_root.selectedP != _root.main.clap.pan.n._currentframe) {
        _root.main.clap.gotoAndPlay(2);
        _root.main.artwork.gotoAndPlay(2);
        _root.main.desc.gotoAndStop(_root.selectedP);
        _root.main.fl.gotoAndStop(_root.selectedP);
      }
    }
  }

  movieClip 114 vignette {
  }

  movieClip 115  {
  }

  movieClip 117  {
  }

  movieClip 119  {
  }

  movieClip 123  {
  }

  movieClip 126  {
  }

  movieClip 130  {
  }

  movieClip 141  {
  }

  movieClip 143  {

    frame 1 {
      stop();
    }
  }

  movieClip 144  {
  }

  movieClip 147  {
  }

  movieClip 158  {

    frame 1 {
      stop();
    }
  }

  movieClip 159  {

    frame 1 {
      stop();
    }
  }

  frame 36 {
    stop();
  }

  movieClip 162  {
  }

  movieClip 164  {
  }

  movieClip 165  {

    frame 1 {
      stop();
    }

    frame 5 {
      stop();
    }
  }

  movieClip 166  {

    frame 1 {
      vit = -180;
      acc = true;
    }

    frame 2 {
      if (acc) {
        vit /= 1.1;
        if (vit >= -5) {
          vit = -5;
          acc = false;
        }
      }
      s1._x -= vit;
      s2._x -= vit;
      if (s1._x >= 1670) {
        s1._x = -1683;
      }
      if (s2._x >= 1670) {
        s2._x = -1683;
      }
    }

    frame 3 {
      gotoAndPlay(2);
    }
  }

  movieClip 180  {

    frame 1 {
      stop();
    }
  }

  movieClip 181  {

    frame 1 {
      vit = 80;
      acc = true;
    }

    frame 2 {
      if (acc) {
        vit /= 1.1;
        if (vit <= 1) {
          vit = 1;
          acc = false;
        }
      }
      s1._x -= vit;
      s2._x -= vit;
      if (s1._x <= -1022) {
        s1._x = 1022;
      }
      if (s2._x <= -1022) {
        s2._x = 1022;
      }
    }

    frame 3 {
      gotoAndPlay(2);
    }
  }

  movieClip 202  {
  }

  movieClip 208  {

    frame 1 {
      stop();
    }

    frame 6 {
      pan.n.gotoAndStop(_root.selectedP);
    }

    frame 31 {
      gotoAndStop(1);
    }

    frame 43 {
      stop();
    }
  }

  movieClip 212  {
  }

  movieClip 213  {
  }

  movieClip 215  {
  }

  movieClip 217  {
  }

  movieClip 222  {

    frame 1 {
      stop();
    }

    frame 10 {
      stop();
    }
  }

  movieClip 223  {
  }

  movieClip 224  {

    frame 1 {
      stop();
    }
  }

  movieClip 227  {
  }

  movieClip 230  {
  }

  movieClip 231  {

    frame 1 {
      stop();
    }

    frame 5 {
      stop();
    }

    frame 5 {
      _parent.blur = true;
    }

    frame 6 {
      _parent.blur = false;
    }
  }

  movieClip 233  {
  }

  movieClip 235  {

    frame 1 {
      c2._rotation = 0;
      vit = 1;
      blur = false;
    }

    frame 2 {
      c1._rotation += vit / 2;
      c2._rotation -= vit;
      vit /= 1.05;
      if (vit <= 1) {
        vit = 1;
      }
      if (vit >= 25) {
        vit = 25;
        if (blur == false) {
          c2.gotoAndPlay(2);
        }
      }
      if (vit < 16) {
        if (blur == true) {
          c2.gotoAndPlay(6);
        }
      }
    }

    frame 3 {
      gotoAndPlay(2);
    }
  }

  movieClip 238  {
  }

  movieClip 240  {
  }

  movieClip 241  {

    frame 1 {
      stop();
    }
  }

  movieClip 244  {
  }

  movieClip 245  {

    frame 1 {
      stop();
    }
  }

  movieClip 246  {

    frame 1 {
      stop();
    }
  }

  movieClip 249  {
  }

  movieClip 250  {

    frame 1 {
      stop();
    }

    frame 30 {
      stop();
    }
  }

  movieClip 252  {
  }

  movieClip 255 box {
  }

  movieClip 258  {
  }

  movieClip 259  {
  }

  movieClip 260  {
  }

  movieClip 261  {

    frame 1 {
      sub._rotation += 8;
    }

    frame 2 {
      gotoAndPlay(1);
    }
  }

  movieClip 263  {
  }

  movieClip 267  {
  }

  movieClip 268  {

    frame 1 {
      stop();
    }
  }

  movieClip 270  {
  }

  movieClip 271  {

    frame 1 {
      stop();
    }
  }

  movieClip 272  {
  }

  movieClip 275  {
  }

  movieClip 278  {

    frame 1 {
      stop();
    }

    frame 4 {
      stop();
    }
  }

  movieClip 280  {
  }

  movieClip 284  {
  }

  movieClip 286  {
  }

  movieClip 289  {
  }

  movieClip 291  {
  }

  movieClip 293  {

    frame 1 {
      stop();
    }
  }

  movieClip 295  {
  }

  movieClip 298  {
  }

  movieClip 300  {
  }

  movieClip 303  {
  }

  movieClip 305  {
  }

  movieClip 306  {

    frame 1 {
      stop();
    }
  }

  movieClip 309  {
  }

  movieClip 311  {
  }

  movieClip 313  {
  }

  movieClip 316  {
  }

  movieClip 317  {

    frame 1 {
      stop();
    }
  }

  movieClip 319  {
  }

  movieClip 322  {
  }

  movieClip 324  {
  }

  movieClip 326  {
  }

  movieClip 328  {
  }

  movieClip 330  {
  }

  movieClip 332  {
  }

  movieClip 334  {
  }

  movieClip 336  {

    frame 1 {
      stop();
    }
  }

  movieClip 340  {
  }

  movieClip 343  {
  }

  movieClip 344  {
  }

  movieClip 346  {
  }

  movieClip 349  {
  }

  movieClip 350  {

    frame 1 {
      stop();
    }
  }

  movieClip 352  {
  }

  movieClip 354  {
  }

  movieClip 356  {
  }

  movieClip 358  {
  }

  movieClip 360  {
  }

  movieClip 362  {

    frame 1 {
      stop();
    }
  }

  movieClip 366  {

    frame 1 {
      stop();
    }

    frame 4 {
      stop();
    }
  }

  movieClip 368  {
  }

  movieClip 370  {
  }

  movieClip 372  {
  }

  movieClip 375  {
  }

  movieClip 376  {

    frame 1 {
      stop();
    }
  }

  movieClip 379  {
  }

  movieClip 381  {
  }

  movieClip 384  {
  }

  movieClip 386  {
  }

  movieClip 387  {

    frame 1 {
      stop();
    }
  }

  movieClip 390  {
  }

  movieClip 392  {
  }

  movieClip 394  {
  }

  movieClip 397  {
  }

  movieClip 398  {

    frame 1 {
      stop();
    }
  }

  movieClip 400  {
  }

  movieClip 402  {
  }

  movieClip 404  {
  }

  movieClip 406  {
  }

  movieClip 408  {
  }

  movieClip 410  {

    frame 1 {
      stop();
    }
  }

  movieClip 411  {

    frame 1 {
      stop();
    }
  }

  movieClip 412  {

    frame 1 {
      stop();
    }

    frame 2 {
      _parent.title.vit = 0;
      _parent.title2.vit = 0;
      _parent.fl._visible = false;
    }

    frame 15 {
      n.gotoAndStop(_root.selectedP);
      n.gfx.cacheAsBitmap = true;
      n.gfx2.cacheAsBitmap = true;
    }

    frame 20 {
      _parent.title.vit = 2;
      _parent.title2.vit = -5;
      _parent.fl._visible = true;
    }

    frame 21 {
      gotoAndStop(1);
    }

    frame 22 {
      _parent.title.vit = 0;
      _parent.title2.vit = 0;
    }

    frame 24 {
      n.gfx2.gotoAndStop('colored');
      n.gfx.gotoAndStop('colored');
      _root.main.applyColors();
      _root.main.resetColor();
    }

    frame 26 {
      _parent.title.vit = 2;
      _parent.title2.vit = -5;
    }

    frame 27 {
      stop();
    }

    frame 28 {
      _parent.title.vit = 0;
      _parent.title2.vit = 0;
    }

    frame 30 {
      n.gfx2.gotoAndStop('static');
      n.gfx.gotoAndStop('static');
    }

    frame 33 {
      _parent.title.vit = 2;
      _parent.title2.vit = -5;
      gotoAndStop(1);
    }

    frame 38 {
      stop();
    }

    frame 42 {
      gotoAndStop(27);
    }
  }

  movieClip 414  {
  }

  movieClip 415  {

    frame 1 {
      function init() {
        confirm._visible = false;
        initx = 20;
        inity = 45;
        dimx = 58;
        dimy = 58;
        espace = 5;
        maxPlayer = 10;
        maxLine = 5;
        _root.selectedP = 1;
        domaine = _root.dom;
        state = 'charSelect';
        pal._visible = false;
        colId0 = 0;
        colId1 = 0;
        colId2 = 0;
        colId3 = 0;
        stringB = 0;
        rollBox = false;
        bNext.gl._visible = false;
        avatarToString = 0;
        clap.pan2.n.fieldPseudo.text = (clap.pan2.n.fieldPseudo.text + String(_root.userName)).toUpperCase();
        var v3 = 1;
        while (v3 <= maxPlayer) {
          vign.attachMovie('vignette', 'v' + v3, v3);
          this['v' + v3]._width = dimx;
          this['v' + v3]._height = dimy;
          if (v3 > 1) {
            this['v' + v3]._x = this['v' + (v3 - 1)]._x + dimx + espace;
          } else {
            this.v1._x = initx;
          }
          if (v3 >= maxLine + 1) {
            if (v3 == maxLine + 1) {
              this['v' + v3]._x = initx;
            } else {
              this['v' + v3]._x = this['v' + (v3 - 1)]._x + dimx + espace;
            }
            this['v' + v3]._y = this.v1._y + dimy + espace;
          } else {
            this['v' + v3]._y = inity;
          }
          if (v3 >= maxLine * 2 + 1) {
            this['v' + v3]._y = this.v1._y + dimy * 2 + espace * 2;
            this['v' + v3]._x = this['v' + (v3 - maxLine)]._x + espace;
          }
          this['v' + v3].gotoAndStop(v3);
          ++v3;
        }
        attachMovie('vRoll', 'vRoll', 100);
        vRoll._x = this['v' + _root.selectedP]._x;
        vRoll._y = this['v' + _root.selectedP]._y;
      }

      function main() {
        stringB = _root.selectedP - 1 + ';' + 0 + ';' + colId0 + ';' + colId1 + ';' + colId2 + ';' + colId3;
        vRoll._x = this['v' + _root.selectedP]._x;
        vRoll._y = this['v' + _root.selectedP]._y;
        if (rollBox) {
          box._x = _xmouse + 30;
          box._y = _ymouse + 20;
        }
        bNext.onRelease = function () {
          if (state == 'charSelect') {
            if (artwork._currentframe == 1) {
              gotoColSelect();
            }
          } else {
            if (artwork._currentframe == 27) {
              gotoCharSelect();
            }
          }
        };

        bNext.onRollOver = function () {
          bNext.gl._visible = true;
        };

        bNext.onRollOut = function () {
          bNext.gl._visible = false;
        };

        bNext.onReleaseOutside = function () {
          bNext.gl._visible = false;
        };

        pressButton();
        valid();
      }

      function pressButton() {
        var famille = _root.selectedP - 1;
        pal.rand.onRollOver = function () {
          pal.rand.gotoAndStop(2);
          attachMovie('box', 'box', 216);
          box._x = _xmouse + 30;
          box._y = _ymouse + 20;
          rollBox = true;
        };

        pal.rand.onRollOut = function () {
          pal.rand.gotoAndStop(1);
          box.removeMovieClip();
        };

        pal.rand.onPress = function () {
          resetColor();
          pal.rand.gotoAndStop(3);
          pal.circle.vit += 5;
        };

        pal.rand.onRelease = function () {
          pal.rand.gotoAndStop(1);
        };

        pal.rand.onReleaseOutside = function () {
          pal.rand.gotoAndStop(1);
          box.removeMovieClip();
        };

        pal.col0.sub.onRollOver = function () {
          pal.col0.gotoAndStop(2);
        };

        pal.col0.sub.onRollOut = function () {
          pal.col0.gotoAndStop(1);
        };

        pal.col0.sub.onPress = function () {
          pal.col0.gotoAndStop(3);
          pal.col0.sub.gotoAndPlay(2);
          ++colId0;
          if (colId0 > palette[paltab[famille][0]].length - 1) {
            colId0 = 0;
          }
          applyColors();
        };

        pal.col0.sub.onRelease = function () {
          pal.col0.gotoAndStop(1);
        };

        pal.col0.sub.onReleaseOutside = function () {
          pal.col0.gotoAndStop(1);
        };

        pal.col1.sub.onRollOver = function () {
          pal.col1.gotoAndStop(2);
        };

        pal.col1.sub.onRollOut = function () {
          pal.col1.gotoAndStop(1);
        };

        pal.col1.sub.onPress = function () {
          pal.col1.gotoAndStop(3);
          pal.col1.sub.gotoAndPlay(2);
          ++colId1;
          if (colId1 > palette[paltab[famille][1]].length - 1) {
            colId1 = 0;
          }
          applyColors();
        };

        pal.col1.sub.onRelease = function () {
          pal.col1.gotoAndStop(1);
        };

        pal.col1.sub.onReleaseOutside = function () {
          pal.col1.gotoAndStop(1);
        };

        pal.col2.sub.onRollOver = function () {
          pal.col2.gotoAndStop(2);
        };

        pal.col2.sub.onRollOut = function () {
          pal.col2.gotoAndStop(1);
        };

        pal.col2.sub.onPress = function () {
          pal.col2.gotoAndStop(3);
          pal.col2.sub.gotoAndPlay(2);
          ++colId2;
          if (colId2 > palette[paltab[famille][2]].length - 1) {
            colId2 = 0;
          }
          applyColors();
        };

        pal.col2.sub.onRelease = function () {
          pal.col2.gotoAndStop(1);
        };

        pal.col2.sub.onReleaseOutside = function () {
          pal.col2.gotoAndStop(1);
        };

        pal.col3.sub.onRollOver = function () {
          pal.col3.gotoAndStop(2);
        };

        pal.col3.sub.onRollOut = function () {
          pal.col3.gotoAndStop(1);
        };

        pal.col3.sub.onPress = function () {
          pal.col3.gotoAndStop(3);
          pal.col3.sub.gotoAndPlay(2);
          ++colId3;
          if (colId3 > palette[paltab[famille][3]].length - 1) {
            colId3 = 0;
          }
          applyColors();
        };

        pal.col3.sub.onRelease = function () {
          pal.col3.gotoAndStop(1);
        };

        pal.col3.sub.onReleaseOutside = function () {
          pal.col3.gotoAndStop(1);
        };

      }

      function valid() {
        clap.pan2.valid.onRollOver = function () {
          clap.pan2.valid.gotoAndStop(2);
        };

        clap.pan2.valid.onRollOut = function () {
          clap.pan2.valid.gotoAndStop(1);
        };

        clap.pan2.valid.onRelease = function () {
          confirm._visible = true;
          artwork.gotoAndPlay('confirm');
        };

        confirm.box.oui.onRollOver = function () {
          confirm.box.oui.gotoAndStop(2);
        };

        confirm.box.oui.onRollOut = function () {
          confirm.box.oui.gotoAndStop(1);
        };

        confirm.box.oui.onRelease = function () {
          confirm.gotoAndPlay(2);
          var v1 = new LoadVars();
          v1.perso = stringB;
          v1.send(domaine + '/user/signUpDone', '_self', 'POST');
        };

        confirm.box.non.onRollOver = function () {
          confirm.box.non.gotoAndStop(2);
        };

        confirm.box.non.onRollOut = function () {
          confirm.box.non.gotoAndStop(1);
        };

        confirm.box.non.onRelease = function () {
          if (artwork._currentframe == 38) {
            confirm._visible = false;
            artwork.gotoAndPlay('retry');
          }
        };

        confirm.undo.onRelease = function () {
          if (artwork._currentframe == 38) {
            confirm._visible = false;
            artwork.gotoAndPlay('retry');
          }
        };

      }

      function applyColors() {
        var v2 = _root.selectedP - 1;
        var v3 = 0;
        while (v3 <= 3) {
          setColor(pal.col0.sub.col, palette[paltab[v2][0]][colId0]);
          setColor(pal.col0.sub2.col, palette[paltab[v2][0]][colId0]);
          setColor(pal.col1.sub.col, palette[paltab[v2][1]][colId1]);
          setColor(pal.col1.sub2.col, palette[paltab[v2][1]][colId1]);
          setColor(pal.col2.sub.col, palette[paltab[v2][2]][colId2]);
          setColor(pal.col2.sub2.col, palette[paltab[v2][2]][colId2]);
          setColor(pal.col3.sub.col, palette[paltab[v2][3]][colId3]);
          setColor(pal.col3.sub2.col, palette[paltab[v2][3]][colId3]);
          setColor(artwork.n.gfx.col0, palette[paltab[v2][0]][colId0]);
          setColor(artwork.n.gfx2.col0, palette[paltab[v2][0]][colId0]);
          setColor(artwork.n.gfx.col1, palette[paltab[v2][1]][colId1]);
          setColor(artwork.n.gfx2.col1, palette[paltab[v2][1]][colId1]);
          setColor(artwork.n.gfx.col2, palette[paltab[v2][2]][colId2]);
          setColor(artwork.n.gfx2.col2, palette[paltab[v2][2]][colId2]);
          setColor(artwork.n.gfx.col3, palette[paltab[v2][3]][colId3]);
          setColor(artwork.n.gfx2.col3, palette[paltab[v2][3]][colId3]);
          ++v3;
        }
      }

      function gotoColSelect() {
        state = 'colSelect';
        clap.gotoAndPlay('colSelect');
        artwork.gotoAndPlay('colSelect');
        bNext.gotoAndPlay('colSelect');
        bg.gotoAndPlay('colSelect');
        title.s1.gotoAndPlay('persToCol');
        title.s2.gotoAndPlay('persToCol');
        title2.s1.gotoAndPlay('persToCol');
        title2.s2.gotoAndPlay('persToCol');
        var v2 = 1;
        while (v2 <= maxPlayer) {
          this['v' + v2]._visible = false;
          ++v2;
        }
        gBox._visible = false;
        vRoll._visible = false;
        desc._visible = false;
      }

      function gotoCharSelect() {
        state = 'charSelect';
        clap.gotoAndPlay('charSelect');
        artwork.gotoAndPlay('charSelect');
        bNext.gotoAndPlay('charSelect');
        bg.gotoAndPlay('charSelect');
        title.s1.gotoAndPlay('colToPers');
        title.s2.gotoAndPlay('colToPers');
        title2.s1.gotoAndPlay('colToPers');
        title2.s2.gotoAndPlay('colToPers');
        var v2 = 1;
        while (v2 <= maxPlayer) {
          this['v' + v2]._visible = true;
          ++v2;
        }
        gBox._visible = true;
        vRoll._visible = true;
        desc._visible = true;
        pal._visible = false;
      }

      function resetColor() {
        var v2 = _root.selectedP - 1;
        switch (_root.selectedP) {
          case 1:
            var v6 = random(palette[paltab[v2][0]].length);
            var v5 = random(palette[paltab[v2][1]].length);
            var v4 = random(palette[paltab[v2][2]].length);
            var v3 = random(palette[paltab[v2][3]].length);
            resetColApply(v6, v5, v4, v3);
            break;
          case 2:
            var v6 = random(palette[paltab[v2][0]].length);
            var v5 = random(palette[paltab[v2][1]].length);
            var v4 = random(palette[paltab[v2][2]].length);
            var v3 = random(palette[paltab[v2][3]].length);
            resetColApply(v6, v5, v4, v3);
            break;
          case 3:
            var v6 = random(palette[paltab[v2][0]].length);
            var v5 = random(palette[paltab[v2][1]].length);
            var v4 = random(palette[paltab[v2][2]].length);
            var v3 = random(palette[paltab[v2][3]].length);
            resetColApply(v6, v5, v4, v3);
            break;
          case 4:
            var v6 = random(palette[paltab[v2][0]].length);
            var v5 = random(palette[paltab[v2][1]].length);
            var v4 = random(palette[paltab[v2][2]].length);
            var v3 = random(palette[paltab[v2][3]].length);
            resetColApply(v6, v5, v4, v3);
            break;
          case 5:
            var v6 = random(palette[paltab[v2][0]].length);
            var v5 = random(palette[paltab[v2][1]].length);
            var v4 = random(palette[paltab[v2][2]].length);
            var v3 = random(palette[paltab[v2][3]].length);
            resetColApply(v6, v5, v4, v3);
            break;
          case 6:
            var v6 = random(palette[paltab[v2][0]].length);
            var v5 = random(palette[paltab[v2][1]].length);
            var v4 = random(palette[paltab[v2][2]].length);
            var v3 = random(palette[paltab[v2][3]].length);
            resetColApply(v6, v5, v4, v3);
            break;
          case 7:
            var v6 = random(palette[paltab[v2][0]].length);
            var v5 = random(palette[paltab[v2][1]].length);
            var v4 = random(palette[paltab[v2][2]].length);
            var v3 = random(palette[paltab[v2][3]].length);
            resetColApply(v6, v5, v4, v3);
            break;
          case 8:
            var v6 = random(palette[paltab[v2][0]].length);
            var v5 = random(palette[paltab[v2][1]].length);
            var v4 = random(palette[paltab[v2][2]].length);
            var v3 = random(palette[paltab[v2][3]].length);
            resetColApply(v6, v5, v4, v3);
            break;
          case 9:
            var v6 = random(palette[paltab[v2][0]].length);
            var v5 = random(palette[paltab[v2][1]].length);
            var v4 = random(palette[paltab[v2][2]].length);
            var v3 = random(palette[paltab[v2][3]].length);
            resetColApply(v6, v5, v4, v3);
            break;
          case 10:
            var v6 = random(palette[paltab[v2][0]].length);
            var v5 = random(palette[paltab[v2][1]].length);
            var v4 = random(palette[paltab[v2][2]].length);
            var v3 = random(palette[paltab[v2][3]].length);
            resetColApply(v6, v5, v4, v3);
        }
      }

      function resetColApply(id1, id2, id3, id4) {
        var v2 = _root.selectedP - 1;
        setColor(pal.col0.sub.col, palette[paltab[v2][0]][id1]);
        setColor(pal.col0.sub2.col, palette[paltab[v2][0]][id1]);
        setColor(pal.col1.sub.col, palette[paltab[v2][1]][id2]);
        setColor(pal.col1.sub2.col, palette[paltab[v2][1]][id2]);
        setColor(pal.col2.sub.col, palette[paltab[v2][2]][id3]);
        setColor(pal.col2.sub2.col, palette[paltab[v2][2]][id3]);
        setColor(pal.col3.sub.col, palette[paltab[v2][3]][id4]);
        setColor(pal.col3.sub2.col, palette[paltab[v2][3]][id4]);
        setColor(artwork.n.gfx.col0, palette[paltab[v2][0]][id1]);
        setColor(artwork.n.gfx2.col0, palette[paltab[v2][0]][id1]);
        setColor(artwork.n.gfx.col1, palette[paltab[v2][1]][id2]);
        setColor(artwork.n.gfx2.col1, palette[paltab[v2][1]][id2]);
        setColor(artwork.n.gfx.col2, palette[paltab[v2][2]][id3]);
        setColor(artwork.n.gfx2.col2, palette[paltab[v2][2]][id3]);
        setColor(artwork.n.gfx.col3, palette[paltab[v2][3]][id4]);
        setColor(artwork.n.gfx2.col3, palette[paltab[v2][3]][id4]);
        colId0 = id1;
        colId1 = id2;
        colId2 = id3;
        colId3 = id4;
      }

      function setColor(mc, col) {
        var v1 = {'r': col >> 16, 'g': col >> 8 & 255, 'b': col & 255};
        var v2 = new Color(mc);
        var v3 = {'ra': 100, 'ga': 100, 'ba': 100, 'aa': 100, 'rb': v1.r - 255, 'gb': v1.g - 255, 'bb': v1.b - 255, 'ab': 0};
        v2.setTransform(v3);
      }

      paltab = [[0, 1, 2, 3], [0, 1, 2, 3], [4, 5, 5, 5], [8, 8, 10, 10], [4, 5, 12, 12], [4, 5, 5, 5], [13, 14, 15, 16], [4, 5, 5, 5], [0, 1, 2, 16], [0, 1, 2, 3]];
      palette = [[16498564, 16750959, 16755230, 15112294, 12612611, 12345121, 15381661], [16764025, 12227841, 16764057, 12035076, 16641495, 12648962], [16773855, 16764025, 16755230, 15531993, 13369239, 14019327, 9948159, 9151447, 14646839, 12082973, 13834264, 16775598, 15785113], [16773855, 16764025, 16755230, 15531993, 13369239, 14019327, 9948159, 9151447, 14646839, 12082973, 13834264, 16775598, 15785113], [16107947, 16105652, 14658711, 14924435, 15579299, 13015677], [15391440, 11564367, 9795434, 15375722, 10856376, 11644106, 15574367, 12569305, 15785113, 2069617, 16568294, 623778], [16641495, 4676263, 8884924, 13073532, 15375797, 10181169, 15516000, 7439041], [16641495, 16764025, 16755230, 15531993, 13369239, 14019327, 9948159, 9151447, 14646839, 12082973, 13834264, 16775598, 16764159, 15785113], [14210525, 10725050, 10468788, 8826016, 11651303, 9613532], [15391440, 11564367, 9795434, 15375722, 10856376, 11644106, 15785113], [16773855, 16764025, 16755230, 15531993, 13369239, 14019327, 9948159], [16641495, 16764025, 16755230, 15531993, 13369239, 14019327, 9948159, 9151447, 14646839, 12082973, 13834264, 16775598, 15785113], [16764159, 16770815, 15394559, 15531993, 13369239, 14019327, 9948159, 14646839, 16775598], [13879776, 15917537, 14925246, 16051935, 15260089, 13167032, 14742488, 12693205], [12045766, 12014408, 15785113, 16185049, 14542079, 11846910, 14811101, 11272098, 16768477, 16762052, 16568294, 15785113], [11634596, 10645395, 10645395, 10338225, 9948159], [16185049, 14542079, 11846910, 14811101, 11272098, 16768477, 16762052, 16568294, 16772778]];
      init();
    }

    frame 9 {
      artwork.gotoAndPlay('new');
    }

    frame 11 {
      main();
    }

    frame 12 {
      gotoAndPlay(_currentframe - 1);
    }
  }
}
